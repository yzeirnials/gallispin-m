
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct libdivide_u32_t
         0 |   uint32_t magic
         4 |   uint8_t more
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPFlowID
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   class IPAddress _daddr
         4 |     uint32_t _addr
         8 |   uint16_t _sport
        10 |   uint16_t _dport
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPRewriterEntry
         0 |   class IPFlowID _flowid
         0 |     class IPAddress _saddr
         0 |       uint32_t _addr
         4 |     class IPAddress _daddr
         4 |       uint32_t _addr
         8 |     uint16_t _sport
        10 |     uint16_t _dport
   12:0-23 |   uint32_t _output
        15 |   uint8_t _direction
        16 |   class IPRewriterEntry * _hashnext
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterFlow *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5)
         0 |   class IPRewriterPattern * pattern
         0 |   class IPMapper * mapper
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterInput
         0 |   class IPRewriterBase * owner
         8 |   int owner_input
        12 |   int kind
        16 |   int foutput
        24 |   class IPRewriterBase * reply_element
        32 |   int routput
        36 |   uint32_t count
        40 |   uint32_t failures
        48 |   union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5) u
        48 |     class IPRewriterPattern * pattern
        48 |     class IPMapper * mapper
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class IPRewriterEntry * _element
         8 |   class IPRewriterEntry ** _pprev
        16 |   HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |   const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > (base)
         0 |     class IPRewriterEntry * _element
         8 |     class IPRewriterEntry ** _pprev
        16 |     HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |     const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterFlow
         0 |   class IPRewriterEntry [2] _e
        48 |   uint16_t _ip_csum_delta
        50 |   uint16_t _udp_csum_delta
        52 |   click_jiffies_t _expiry_j
   56:0-31 |   size_t _place
        60 |   uint8_t _ip_p
        61 |   uint8_t _tflags
        62 |   _Bool _guaranteed
        63 |   uint8_t _reply_anno
        64 |   class IPRewriterInput * _owner
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | class TCPRewriter::TCPFlow
         0 |   class IPRewriterFlow (base)
         0 |     class IPRewriterEntry [2] _e
        48 |     uint16_t _ip_csum_delta
        50 |     uint16_t _udp_csum_delta
        52 |     click_jiffies_t _expiry_j
   56:0-31 |     size_t _place
        60 |     uint8_t _ip_p
        61 |     uint8_t _tflags
        62 |     _Bool _guaranteed
        63 |     uint8_t _reply_anno
        64 |     class IPRewriterInput * _owner
        72 |   struct TCPRewriter::TCPFlow::delta_transition * _dt
           | [sizeof=80, dsize=80, align=8,
           |  nvsize=80, nvalign=8]

*** Dumping AST Record Layout
         0 | class UDPRewriter::UDPFlow
         0 |   class IPRewriterFlow (base)
         0 |     class IPRewriterEntry [2] _e
        48 |     uint16_t _ip_csum_delta
        50 |     uint16_t _udp_csum_delta
        52 |     click_jiffies_t _expiry_j
   56:0-31 |     size_t _place
        60 |     uint8_t _ip_p
        61 |     uint8_t _tflags
        62 |     _Bool _guaranteed
        63 |     uint8_t _reply_anno
        64 |     class IPRewriterInput * _owner
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810895bb8 prev 0x55c81088d328 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c810895cb0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55c810895d40 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55c810895db8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55c810895e78 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55c810895f40 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55c8108960b8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55c810895ff0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55c810896160 <col:24>
| `-OptimizeNoneAttr 0x55c8108961b8 <col:34>
|-CXXMethodDecl 0x55c810896200 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55c8108964b8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55c8108962b0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55c810896328 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55c8108963a8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55c810896580 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55c8108965b8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55c810896620 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55c8108966a8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55c8108969c8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55c810896760 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55c8108967d8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55c810896850 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55c8108968d0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55c810896ae0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55c810807ad8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55c810807ad8
| `-ParmVarDecl 0x55c810807be8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55c810807c88 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55c810807c88
| `-ParmVarDecl 0x55c810807d98 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55c810b41000 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8105dd630 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c8105dd748 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55c8105dd7d8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55c8105dd8a8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55c8105dd990 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55c8105ddba8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55c8105dda50 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c8105ddd58 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55c8105ddc60 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55c8105ddea0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55c8105dde10 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55c8105de980 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55c8105de8f0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c8105deac8 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55c8105dea38 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c8105deb90 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55c8105decd8 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x55c8105dec48 <col:28> col:31 'int'
|-CXXMethodDecl 0x55c8105deda0 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55c8105deee8 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55c8105dee58 <col:28> col:31 'int'
|-CXXMethodDecl 0x55c8105df068 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55c8105defa0 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c8105df1b0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55c8105df120 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c8105df278 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55c8105df438 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55c8105df328 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c8105df3a0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c8105df688 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55c8105df4f8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c8105df570 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c8105df738 <col:86> "" ""
|-CXXMethodDecl 0x55c8105df9a8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55c8105df818 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55c8105df890 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c8105dfb58 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55c8105dfa68 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55c8105dfd08 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55c8105dfc10 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55c8105dffd8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55c8105dfdc0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55c8105dfe38 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c8105dfeb0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c8105e02b8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55c8105e00a0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55c8105e0118 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c8105e0190 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c8105e0370 <col:115> "" ""
|-AccessSpecDecl 0x55c8105e03e0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55c8105e0418 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c8105e0b20 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55c8105e0b20
| `-ParmVarDecl 0x55c8105e0c28 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55c8105e0cc8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55c8105e0cc8
| `-ParmVarDecl 0x55c8105e0dd8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55c81067f7e8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c810872770 <col:7>
|-CXXConstructorDecl 0x55c81067f8c0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55c81067f8c0
| `-ParmVarDecl 0x55c81067f9d8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55c81067fa48 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55c81067fa48
| `-ParmVarDecl 0x55c81067fb58 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55c8108750e0 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c8109543f0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55c8109545c8 prev 0x55c8109543f0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55c810954658 <col:46, col:52> col:46 public
|-TypedefDecl 0x55c810954680 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810956250 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55c810956200 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55c810954b30 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55c810954a30 'type'
|     `-TemplateSpecializationType 0x55c8109549c0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55c8109548a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55c810954880 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55c810954860 <col:24> 'unsigned long' 8
|       `-RecordType 0x55c8109549a0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55c8109548c0 'char_array'
|-TypedefDecl 0x55c810956308 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55c8109562d0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55c8109562b0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55c810956250 'type'
|     `-ElaboratedType 0x55c810956200 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55c810954b30 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55c810954a30 'type'
|         `-TemplateSpecializationType 0x55c8109549c0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55c8109548a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55c810954880 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55c810954860 <col:24> 'unsigned long' 8
|           `-RecordType 0x55c8109549a0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55c8109548c0 'char_array'
|-CXXMethodDecl 0x55c810956488 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55c810956398 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55c810956578 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55c810956658 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55c810956928 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55c810956830 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55c810956b68 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55c8109569e0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810956a58 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55c810956d38 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55c810956c28 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810956ca0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55c810956e98 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55c810956f68 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55c8109571b8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55c810957028 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55c8109570a0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55c810957418 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55c810957288 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55c810957300 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55c8109575d8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55c8109574e8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55c810957798 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55c8109576a0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55c810957850 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c81095af40 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c81095b178 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55c81095aff0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c81095b068 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55c81095b418 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55c81095b320 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55c81095b4e0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55c81095b530 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55c81095b580 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810aed718 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x55c810af80f8 prev 0x55c810aed718 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c810af9110 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55c810af90c0 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x55c810af90a0 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x55c810af8f50 'type'
|     `-SubstTemplateTypeParmType 0x55c810953fc0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55c8105fd290 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8105fd238 'T'
|       `-RecordType 0x55c810953b10 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55c810953a28 'sized_array_memory'
|-FieldDecl 0x55c810af9210 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55c810af9260 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c810af9298 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x55c810af8190 'Element *' sugar
|   |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c8106333f8 'T'
|   `-PointerType 0x55c81087f130 'Element *'
|     `-RecordType 0x55c81087eeb0 'Element'
|       `-CXXRecord 0x55c810888b70 'Element'
|-TypedefDecl 0x55c810af9328 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x55c810af92f0 'Element *&'
|   `-SubstTemplateTypeParmType 0x55c810af8190 'Element *' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-PointerType 0x55c81087f130 'Element *'
|       `-RecordType 0x55c81087eeb0 'Element'
|         `-CXXRecord 0x55c810888b70 'Element'
|-TypedefDecl 0x55c810af93e8 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x55c810af93b0 'Element *const &'
|   `-QualType 0x55c810af8191 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55c810af8190 'Element *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c81087f130 'Element *'
|         `-RecordType 0x55c81087eeb0 'Element'
|           `-CXXRecord 0x55c810888b70 'Element'
|-TypedefDecl 0x55c810af9478 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x55c810af9440 'Element **'
|   `-SubstTemplateTypeParmType 0x55c810af8190 'Element *' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-PointerType 0x55c81087f130 'Element *'
|       `-RecordType 0x55c81087eeb0 'Element'
|         `-CXXRecord 0x55c810888b70 'Element'
|-TypedefDecl 0x55c810af9538 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x55c810af9500 'Element *const *'
|   `-QualType 0x55c810af8191 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55c810af8190 'Element *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c81087f130 'Element *'
|         `-RecordType 0x55c81087eeb0 'Element'
|           `-CXXRecord 0x55c810888b70 'Element'
|-TypedefDecl 0x55c810afa110 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x55c810afa0c0 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x55c810afa0a0 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x55c810afa030 'type'
|     `-SubstTemplateTypeParmType 0x55c810af9df0 'Element *' sugar
|       |-TemplateTypeParmType 0x55c810605490 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c810605440 'T'
|       `-PointerType 0x55c81087f130 'Element *'
|         `-RecordType 0x55c81087eeb0 'Element'
|           `-CXXRecord 0x55c810888b70 'Element'
|-TypedefDecl 0x55c810afa178 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x55c810af93b0 'Element *const &'
|   `-QualType 0x55c810af8191 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55c810af8190 'Element *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c81087f130 'Element *'
|         `-RecordType 0x55c81087eeb0 'Element'
|           `-CXXRecord 0x55c810888b70 'Element'
|-TypedefDecl 0x55c810afa1d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810afa238 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x55c810af9440 'Element **'
|   `-SubstTemplateTypeParmType 0x55c810af8190 'Element *' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-PointerType 0x55c81087f130 'Element *'
|       `-RecordType 0x55c81087eeb0 'Element'
|         `-CXXRecord 0x55c810888b70 'Element'
|-TypedefDecl 0x55c810afa2a0 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x55c810af9500 'Element *const *'
|   `-QualType 0x55c810af8191 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55c810af8190 'Element *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c81087f130 'Element *'
|         `-RecordType 0x55c81087eeb0 'Element'
|           `-CXXRecord 0x55c810888b70 'Element'
|-EnumDecl 0x55c810afa2f8 <line:134:5> col:5
| `-EnumConstantDecl 0x55c810afa3f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c810afa3d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c810634618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c8106345f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c8106345d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c810afa478 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c810afa708 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810afa530 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810afa5d0 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x55c810b01d38 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55c810afa880 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x55c810b01ff8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55c810b01ee0 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55c810b02310 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55c810b021f0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x55c810b02620 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55c810b02500 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55c810b02910 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b02758 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810b027d0 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55c810b02a68 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55c810b02b48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b02ba0 <col:30> Inherited
|-CXXMethodDecl 0x55c810b02be8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55c810b02c98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b02cf0 <col:30> Inherited
|-CXXMethodDecl 0x55c810b02db8 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55c810b02e68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b02ec0 <col:30> Inherited
|-CXXMethodDecl 0x55c810b02f08 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55c810b02fb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b03010 <col:30> Inherited
|-CXXMethodDecl 0x55c810b03058 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55c810b03108 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b03160 <col:30> Inherited
|-CXXMethodDecl 0x55c810b031a8 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55c810b03258 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b032b0 <col:30> Inherited
|-CXXMethodDecl 0x55c810b032d8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810b03388 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810b03438 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c810b035f8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b034e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810b03560 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55c810b03748 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c810b036b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b038f8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x55c810b03800 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810b039b0 <col:20>
| `-OptimizeNoneAttr 0x55c810b03a08 <col:30>
|-CXXMethodDecl 0x55c810b03b28 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55c810b03a30 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810b03be0 <col:20>
| `-OptimizeNoneAttr 0x55c810b03c38 <col:30>
|-CXXMethodDecl 0x55c810b03cf0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810b03c60 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b03e38 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810b03da8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b03f68 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x55c810b04098 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x55c810b04168 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x55c810b04238 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x55c810b04378 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810b042e8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b044c0 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810b04430 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b04608 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55c810b04578 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810b046c0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c810b047c0 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c810b04730 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810b04878 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c810b04938 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x55c810b04a38 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x55c810b04bb8 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810b04af8 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x55c810b05378 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c810b04c70 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x55c810b052d8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x55c810b051d8 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x55c810b05458 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c810b055a8 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810b05518 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55c810b05660 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c810b058a8 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b05720 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55c810b05798 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55c810b05a68 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x55c810b05978 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55c810b05cb8 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x55c810b05b30 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55c810b05ba8 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55c810b05d78 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c810b05fd8 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x55c810b05ee0 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x55c810b060a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55c810b060a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c81065d2c0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55c81065d3d8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55c81065d478 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55c81065d4d8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55c81065d538 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55c81065d5e8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c81065d8f0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c81065da08 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55c81065dab0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55c81065db18 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55c81065dba8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55c810662390 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c8106627c8 <col:12>
|-CXXConstructorDecl 0x55c810662498 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c8106625a8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55c81065dab0 'data' 'const char *'
| | `-ImplicitCastExpr 0x55c810665c10 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55c810665be0 <col:12> 'const char *const' lvalue .data 0x55c81065dab0
| |     `-DeclRefExpr 0x55c810665bc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c8106625a8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55c81065db18 'length' 'int'
| | `-ImplicitCastExpr 0x55c810665ca0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55c810665c70 <col:12> 'const int' lvalue .length 0x55c81065db18
| |     `-DeclRefExpr 0x55c810665c50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c8106625a8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55c81065dba8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55c810665d30 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55c810665d00 <col:12> 'String::memo_t *const' lvalue .memo 0x55c81065dba8
| |     `-DeclRefExpr 0x55c810665ce0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c8106625a8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55c810665d88 <col:12>
|-CXXConstructorDecl 0x55c810662648 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c810662648
| `-ParmVarDecl 0x55c810662758 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55c810668ab0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c810672138 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c810672248 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55c810672760 <col:12>
|   |-BinaryOperator 0x55c810672578 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55c810672530 <col:12> 'const char *' lvalue ->data 0x55c81065dab0
|   | | `-CXXThisExpr 0x55c810672520 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55c810672560 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55c8106724f0 <col:12> 'const char *const' lvalue .data 0x55c81065dab0
|   |     `-DeclRefExpr 0x55c8106724d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c810672248 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55c810672640 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55c8106725f8 <col:12> 'int' lvalue ->length 0x55c81065db18
|   | | `-CXXThisExpr 0x55c8106725e8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55c810672628 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55c8106725b8 <col:12> 'const int' lvalue .length 0x55c81065db18
|   |     `-DeclRefExpr 0x55c810672598 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c810672248 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55c810672708 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55c8106726c0 <col:12> 'String::memo_t *' lvalue ->memo 0x55c81065dba8
|   | | `-CXXThisExpr 0x55c8106726b0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55c8106726f0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55c810672680 <col:12> 'String::memo_t *const' lvalue .memo 0x55c81065dba8
|   |     `-DeclRefExpr 0x55c810672660 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c810672248 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55c810672750 <col:12>
|     `-UnaryOperator 0x55c810672738 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c810672728 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55c8106722b8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c8106722b8
  `-ParmVarDecl 0x55c8106723c8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810653830 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c810653948 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55c8106539d8 <col:16, col:22> col:16 public
|-TypedefDecl 0x55c810653a18 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55c810317fd0 'const char *'
|   `-QualType 0x55c810317521 'const char' const
|     `-BuiltinType 0x55c810317520 'char'
|-TypedefDecl 0x55c810653aa0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55c810653a70 'String::const_iterator' sugar
|   |-Typedef 0x55c810653a18 'const_iterator'
|   `-PointerType 0x55c810317fd0 'const char *'
|     `-QualType 0x55c810317521 'const char' const
|       `-BuiltinType 0x55c810317520 'char'
|-TypedefDecl 0x55c810653c10 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55c810653b80 'int (String::*)() const'
|   |-RecordType 0x55c8106538c0 'String'
|   | `-CXXRecord 0x55c810653830 'String'
|   `-ParenType 0x55c810653b20 'int () const' sugar
|     `-FunctionProtoType 0x55c810636250 'int () const' const cdecl
|       `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810653c78 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55c810474130 'int64_t' sugar
|   |-Typedef 0x55c810380390 'int64_t'
|   `-TypedefType 0x55c810359630 '__int64_t' sugar
|     |-Typedef 0x55c810359208 '__int64_t'
|     `-BuiltinType 0x55c8103175a0 'long'
|-TypedefDecl 0x55c810653ce0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55c810474050 'uint64_t' sugar
|   |-Typedef 0x55c810380530 'uint64_t'
|   `-TypedefType 0x55c8103596c0 '__uint64_t' sugar
|     |-Typedef 0x55c810359278 '__uint64_t'
|     `-BuiltinType 0x55c810317640 'unsigned long'
|-TypedefDecl 0x55c810653d70 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55c810653d40 'String::intmax_t' sugar
|   |-Typedef 0x55c810653c78 'intmax_t'
|   `-TypedefType 0x55c810474130 'int64_t' sugar
|     |-Typedef 0x55c810380390 'int64_t'
|     `-TypedefType 0x55c810359630 '__int64_t' sugar
|       |-Typedef 0x55c810359208 '__int64_t'
|       `-BuiltinType 0x55c8103175a0 'long'
|-TypedefDecl 0x55c810653e00 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55c810653dd0 'String::uintmax_t' sugar
|   |-Typedef 0x55c810653ce0 'uintmax_t'
|   `-TypedefType 0x55c810474050 'uint64_t' sugar
|     |-Typedef 0x55c810380530 'uint64_t'
|     `-TypedefType 0x55c8103596c0 '__uint64_t' sugar
|       |-Typedef 0x55c810359278 '__uint64_t'
|       `-BuiltinType 0x55c810317640 'unsigned long'
|-CXXConstructorDecl 0x55c810653ec0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55c810654068 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55c810653fa8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55c810654218 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55c810654158 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55c810654370 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55c8106542e0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55c810654588 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55c810654438 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55c8106544b8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55c8106547a8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55c810654658 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55c8106546d8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55c8106549c8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55c810654878 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55c8106548f8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55c810654be8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55c810654a98 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55c810654b18 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55c810654d78 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55c810654cb0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55c810654ef8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55c810654e38 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55c810655088 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55c810654fc0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55c8106551e0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55c810655150 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55c810655368 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55c8106552a8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55c8106554c0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55c810655430 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55c810655648 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55c810655588 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55c8106557d8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55c810655710 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55c810655968 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55c8106558a0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55c810655af8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55c810655a30 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55c810655bf0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55c810655d18 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55c810655e98 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55c810655dd0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55c810655fe8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55c810655f58 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55c810656090 <col:63> "" ""
|-CXXMethodDecl 0x55c8106561d8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55c810656118 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55c8106563e8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55c810656298 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55c810656318 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55c810656608 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55c8106564b0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55c810656530 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55c8106568e8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55c8106566c8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55c810656748 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55c810661e60 <col:55> 'int' 10
| `-ParmVarDecl 0x55c8106567c0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c810661e80 <col:76> 'bool' true
|-CXXMethodDecl 0x55c810656bc8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55c8106569b0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55c810656a30 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55c810661e90 <col:56> 'int' 10
| `-ParmVarDecl 0x55c810656aa8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c810661eb0 <col:77> 'bool' true
|-CXXMethodDecl 0x55c810656cd0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55c810656d98 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55c810656e60 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55c810656f00 <col:20>
| `-OptimizeNoneAttr 0x55c810656f58 <col:30>
|-CXXConversionDecl 0x55c810657048 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55c810657118 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55c8106571d8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55c8106572c8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55c810657388 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55c810657508 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55c810657440 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55c810657658 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55c8106575c8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55c810657748 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55c810657808 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55c810657a58 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55c8106578c0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55c810657940 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55c810657cb8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55c810657b20 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55c810657ba0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55c810657d88 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55c810657f98 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55c810657e40 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55c810657ec0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55c8106581b8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55c810658060 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55c8106580e0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55c810658348 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55c810658280 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55c810658438 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55c8106585a8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55c8106584e8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55c8106587b8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55c810658668 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55c8106586e8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55c8106589d0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55c810658878 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55c8106588f0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55c810658b60 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55c810658a90 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55c810658d80 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55c810658c20 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55c810658ca0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55c810658ed0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55c810658e40 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55c8106590a8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55c810658f90 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55c810659010 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55c8106591f8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55c810659168 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55c81065a440 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55c8106592b0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55c81065a360 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55c810661ec0 <col:39> 'int' 0
|-CXXMethodDecl 0x55c81065a660 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55c81065a500 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55c81065a580 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55c810661ee0 <col:48> 'int' 0
|-CXXMethodDecl 0x55c81065a840 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55c81065a720 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55c81065a7a0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55c810661f00 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55c81065a910 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55c81065a9d0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55c81065aa90 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55c81065ab50 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55c81065ac10 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55c81065adb8 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55c81065acc0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55c81065af38 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55c81065ae70 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55c81065b0b8 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55c81065aff8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55c81065b238 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55c81065b170 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55c81065b380 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55c81065b2f0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55c81065b4d0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55c81065b440 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55c81065b6a8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55c81065b590 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55c81065b610 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55c81065b888 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55c81065b770 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55c81065b7f0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55c81065b9d8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55c81065b948 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55c81065bbe8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55c81065ba98 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55c81065bb18 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55c81065bd48 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55c81065bcb0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55c81065bea0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55c81065be08 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55c81065bf48 <col:57> "" ""
|-CXXMethodDecl 0x55c81065c058 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55c81065bfc8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55c81065c1a8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55c81065c118 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55c81065c328 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55c81065c260 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55c81065c3f0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55c81065c4b0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55c81065c570 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55c81065c610 <col:49> "" ""
|-CXXMethodDecl 0x55c81065c6a0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55c81065c760 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55c81065c850 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55c81065c918 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55c81065c9d8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55c81065ca98 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55c81065cb90 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55c81065cc58 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55c81065cd20 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55c81065cef8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55c81065cdd8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55c81065ce58 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55c81065d120 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55c81065cfc0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55c81065d040 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55c81065d230 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55c81065d298 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55c81065d2c0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c81065d3d8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55c81065d478 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55c81065d4d8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55c81065d538 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55c81065d5e8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55c81065d650 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55c81065d888 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55c81065d8d8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c81065d868 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55c81065d778 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55c81065d720 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55c81065d760 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55c81065d740 <col:32> 'int' 8
|-CXXRecordDecl 0x55c81065d8f0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c81065da08 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55c81065dab0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55c81065db18 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55c81065dba8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55c810662390 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55c8106627c8 <col:12>
| |-CXXConstructorDecl 0x55c810662498 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c8106625a8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55c81065dab0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55c810665c10 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55c810665be0 <col:12> 'const char *const' lvalue .data 0x55c81065dab0
| | |     `-DeclRefExpr 0x55c810665bc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c8106625a8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55c81065db18 'length' 'int'
| | | `-ImplicitCastExpr 0x55c810665ca0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55c810665c70 <col:12> 'const int' lvalue .length 0x55c81065db18
| | |     `-DeclRefExpr 0x55c810665c50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c8106625a8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55c81065dba8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55c810665d30 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55c810665d00 <col:12> 'String::memo_t *const' lvalue .memo 0x55c81065dba8
| | |     `-DeclRefExpr 0x55c810665ce0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c8106625a8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55c810665d88 <col:12>
| |-CXXConstructorDecl 0x55c810662648 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c810662648
| | `-ParmVarDecl 0x55c810662758 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55c810668ab0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55c810672138 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c810672248 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55c810672760 <col:12>
| |   |-BinaryOperator 0x55c810672578 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55c810672530 <col:12> 'const char *' lvalue ->data 0x55c81065dab0
| |   | | `-CXXThisExpr 0x55c810672520 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55c810672560 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55c8106724f0 <col:12> 'const char *const' lvalue .data 0x55c81065dab0
| |   |     `-DeclRefExpr 0x55c8106724d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c810672248 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55c810672640 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55c8106725f8 <col:12> 'int' lvalue ->length 0x55c81065db18
| |   | | `-CXXThisExpr 0x55c8106725e8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55c810672628 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55c8106725b8 <col:12> 'const int' lvalue .length 0x55c81065db18
| |   |     `-DeclRefExpr 0x55c810672598 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c810672248 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55c810672708 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55c8106726c0 <col:12> 'String::memo_t *' lvalue ->memo 0x55c81065dba8
| |   | | `-CXXThisExpr 0x55c8106726b0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55c8106726f0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55c810672680 <col:12> 'String::memo_t *const' lvalue .memo 0x55c81065dba8
| |   |     `-DeclRefExpr 0x55c810672660 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c810672248 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55c810672750 <col:12>
| |     `-UnaryOperator 0x55c810672738 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55c810672728 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55c8106722b8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c8106722b8
|   `-ParmVarDecl 0x55c8106723c8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55c81065dc20 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55c81065de68 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55c81065dc88 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55c81065dd08 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55c81065dd80 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55c810662350 <col:79, line:261:5>
|   |-BinaryOperator 0x55c810661fc8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55c810661f60 <col:2, col:5> 'const char *' lvalue .data 0x55c81065dab0
|   | | `-MemberExpr 0x55c810661f30 <col:2> 'String::rep_t' lvalue ->_r 0x55c81065dc20
|   | |   `-CXXThisExpr 0x55c810661f20 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55c810661fb0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c810661f90 <col:12> 'const char *' lvalue ParmVar 0x55c81065dc88 'data' 'const char *'
|   |-BinaryOperator 0x55c810662090 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55c810662028 <col:2, col:5> 'int' lvalue .length 0x55c81065db18
|   | | `-MemberExpr 0x55c810661ff8 <col:2> 'String::rep_t' lvalue ->_r 0x55c81065dc20
|   | |   `-CXXThisExpr 0x55c810661fe8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55c810662078 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c810662058 <col:14> 'int' lvalue ParmVar 0x55c81065dd08 'length' 'int'
|   `-IfStmt 0x55c810662338 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55c8106621b0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55c810662198 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55c810662178 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55c810662158 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55c8106620f0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55c81065dba8
|     |       | `-MemberExpr 0x55c8106620c0 <col:7> 'String::rep_t' lvalue ->_r 0x55c81065dc20
|     |       |   `-CXXThisExpr 0x55c8106620b0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55c810662140 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55c810662120 <col:17> 'String::memo_t *' lvalue ParmVar 0x55c81065dd80 'memo' 'String::memo_t *'
|     `-CallExpr 0x55c810662310 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55c8106622f8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c810662200 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55c8105e1b88 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55c810662268 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55c81065d478
|         `-ImplicitCastExpr 0x55c810662250 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55c810662230 <col:27> 'String::memo_t *' lvalue ParmVar 0x55c81065dd80 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55c81065e118 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55c81065df38 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55c81065dfb8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55c81065e030 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55c81065dc20 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55c8106627d8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c810662968 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55c8106628d0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55c810662840 <col:2> '<bound member function type>' ->assign_memo 0x55c81065de68
|     | `-ImplicitCastExpr 0x55c810662908 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55c810662830 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55c810662920 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c810662870 <col:14> 'const char *' lvalue ParmVar 0x55c81065df38 'data' 'const char *'
|     |-ImplicitCastExpr 0x55c810662938 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55c810662890 <col:20> 'int' lvalue ParmVar 0x55c81065dfb8 'length' 'int'
|     `-ImplicitCastExpr 0x55c810662950 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55c8106628b0 <col:28> 'String::memo_t *' lvalue ParmVar 0x55c81065e030 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55c81065e2a8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55c81065e1e8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55c810662bc0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55c810662b40 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55c810662990 <col:2> '<bound member function type>' ->assign_memo 0x55c81065de68
|     | `-CXXThisExpr 0x55c810662980 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55c810662b78 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55c810662a10 <col:14, col:19> 'const char *' lvalue .data 0x55c81065dab0
|     |   `-MemberExpr 0x55c8106629e0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55c81065dc20
|     |     `-DeclRefExpr 0x55c8106629c0 <col:14> 'const String' lvalue ParmVar 0x55c81065e1e8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55c810662b90 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55c810662a90 <col:25, col:30> 'int' lvalue .length 0x55c81065db18
|     |   `-MemberExpr 0x55c810662a60 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55c81065dc20
|     |     `-DeclRefExpr 0x55c810662a40 <col:25> 'const String' lvalue ParmVar 0x55c81065e1e8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55c810662ba8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55c810662b10 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55c81065dba8
|         `-MemberExpr 0x55c810662ae0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55c81065dc20
|           `-DeclRefExpr 0x55c810662ac0 <col:38> 'const String' lvalue ParmVar 0x55c81065e1e8 'x' 'const String &'
|-CXXMethodDecl 0x55c8106605c0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55c810663580 <col:31, line:278:5>
|   `-IfStmt 0x55c810663568 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55c810662c60 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55c810662c48 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55c810662c18 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55c81065dba8
|     |     `-MemberExpr 0x55c810662be8 <col:6> 'String::rep_t' lvalue ->_r 0x55c81065dc20
|     |       `-CXXThisExpr 0x55c810662bd8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55c810663540 <col:15, line:277:2>
|       |-ParenExpr 0x55c810663110 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55c8106630e0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55c810662d70 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55c810662d58 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55c810662d40 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55c810662d00 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55c81065d478
|       |   |       `-ImplicitCastExpr 0x55c810662ce8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55c810662cb8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55c81065dba8
|       |   |           `-MemberExpr 0x55c810662c88 <col:27> 'String::rep_t' lvalue ->_r 0x55c81065dc20
|       |   |             `-CXXThisExpr 0x55c810662c78 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55c810662dd0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55c810662db0 <col:54> 'int' 0
|       |   `-CallExpr 0x55c810663040 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55c810663028 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55c810662fa8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55c810663080 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55c810662eb8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55c810663098 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55c810662ee8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55c8106630b0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55c810662f20 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55c8106630c8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55c810662f90 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55c810662f78 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55c810662f40 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55c810663460 <line:274:6, line:275:22>
|       | |-CallExpr 0x55c810663320 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55c810663308 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55c810663280 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55c8105e4370 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55c810663250 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55c81065d478
|       | |   `-ImplicitCastExpr 0x55c810663238 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55c810663208 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55c81065dba8
|       | |       `-MemberExpr 0x55c8106631d8 <col:40> 'String::rep_t' lvalue ->_r 0x55c81065dc20
|       | |         `-CXXThisExpr 0x55c8106631c8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55c810663420 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55c810663408 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55c810663348 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55c810661298 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55c810663448 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55c8106633a8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55c81065dba8
|       |       `-MemberExpr 0x55c810663378 <col:15> 'String::rep_t' lvalue ->_r 0x55c81065dc20
|       |         `-CXXThisExpr 0x55c810663368 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55c810663520 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55c8106634b8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55c81065dba8
|         | `-MemberExpr 0x55c810663488 <col:6> 'String::rep_t' lvalue ->_r 0x55c81065dc20
|         |   `-CXXThisExpr 0x55c810663478 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55c810663508 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55c8106634e8 <col:16> 'int' 0
|-CXXMethodDecl 0x55c810660858 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55c810660678 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55c8106606f8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55c810660770 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55c810660930 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55c810660b80 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55c8106609e8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55c810660a68 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55c810660ae0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55c810660d68 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55c810660c50 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55c810660cd0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55c810660e68 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55c810663658 <col:41, line:286:5>
|   `-ReturnStmt 0x55c810663648 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55c810663618 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55c8106635e0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55c8106635c8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55c8106635a8 <col:46> 'int' 1
|-CXXMethodDecl 0x55c810661108 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55c810660f20 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55c810660fa0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55c810661020 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55c810661298 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55c8106611d0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55c810661368 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55c810661538 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55c810661420 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55c8106614a0 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55c8106615f8 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55c8106616c0 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55c8106617c8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55c810661840 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55c8106618b8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55c810661920 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55c810661a20 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55c810661a70 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810661a00 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55c8106619e0 <col:22> 'int' 14
|-CXXMethodDecl 0x55c810661c88 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55c810661aa0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55c810661b20 <col:38> col:41 'int'
| `-ParmVarDecl 0x55c810661ba0 <col:43> col:46 'int'
|-FriendDecl 0x55c810661d90 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55c810661e20 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c8109d2ac0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55c8109d2c98 prev 0x55c8109d2ac0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55c8109d2d28 <col:46, col:52> col:46 public
|-TypedefDecl 0x55c8109d2d50 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c8109d46b0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55c8109d4660 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55c8109d4640 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55c8109d2f68 'type'
|     `-SubstTemplateTypeParmType 0x55c8109d2f30 'String' sugar
|       |-TemplateTypeParmType 0x55c810623c80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c810623c30 'T'
|       `-RecordType 0x55c8106538c0 'String'
|         `-CXXRecord 0x55c810653830 'String'
|-TypedefDecl 0x55c8109d4768 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55c8109d4730 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55c8109d4710 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55c8109d46b0 'type'
|     `-ElaboratedType 0x55c8109d4660 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55c8109d4640 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55c8109d2f68 'type'
|         `-SubstTemplateTypeParmType 0x55c8109d2f30 'String' sugar
|           |-TemplateTypeParmType 0x55c810623c80 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55c810623c30 'T'
|           `-RecordType 0x55c8106538c0 'String'
|             `-CXXRecord 0x55c810653830 'String'
|-CXXMethodDecl 0x55c8109d48e8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55c8109d47f8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55c8109d49d8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55c8109d4ab8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55c8109d4ab8
|-CXXMethodDecl 0x55c8109d4d88 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55c8109d4c90 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55c8109d4fc8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55c8109d4e40 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c8109d4eb8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55c8109d5198 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55c8109d5088 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c8109d5100 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55c8109d52f8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55c8109d53c8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55c8109d5618 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55c8109d5488 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55c8109d5500 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55c8109d5878 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55c8109d56e8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55c8109d5760 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55c8109d5a38 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55c8109d5948 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55c8109d5bf8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55c8109d5b00 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55c8109d5cb0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c8109d5d60 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c8109d5f98 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55c8109d5e10 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c8109d5e88 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55c8109d6238 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55c8109d6140 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55c8109d6300 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55c8109d6350 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55c8109d63a0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c81088b7e0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55c8109d1768 prev 0x55c81088b7e0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c8109d2a30 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55c8109d29e0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55c8109d29c0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55c8109d2870 'type'
|     `-SubstTemplateTypeParmType 0x55c8109d2700 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55c8105fda80 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55c8105fda28 'F'
|       `-RecordType 0x55c8109d2360 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55c8109d2280 'typed_array_memory'
|-FieldDecl 0x55c8109d63f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55c8109d6440 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c8109d6478 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55c8109d1800 'String' sugar
|   |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c8106333f8 'T'
|   `-RecordType 0x55c8106538c0 'String'
|     `-CXXRecord 0x55c810653830 'String'
|-TypedefDecl 0x55c8109d6508 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55c8109d64d0 'String &'
|   `-SubstTemplateTypeParmType 0x55c8109d1800 'String' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c8106538c0 'String'
|       `-CXXRecord 0x55c810653830 'String'
|-TypedefDecl 0x55c8109d6598 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55c8109d6560 'const String &'
|   `-QualType 0x55c8109d1801 'const String' const
|     `-SubstTemplateTypeParmType 0x55c8109d1800 'String' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c8106538c0 'String'
|         `-CXXRecord 0x55c810653830 'String'
|-TypedefDecl 0x55c8109d6628 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55c8109d65f0 'String *'
|   `-SubstTemplateTypeParmType 0x55c8109d1800 'String' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c8106538c0 'String'
|       `-CXXRecord 0x55c810653830 'String'
|-TypedefDecl 0x55c8109d66b8 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55c8109d6680 'const String *'
|   `-QualType 0x55c8109d1801 'const String' const
|     `-SubstTemplateTypeParmType 0x55c8109d1800 'String' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c8106538c0 'String'
|         `-CXXRecord 0x55c810653830 'String'
|-TypedefDecl 0x55c8109d7310 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55c8109d72c0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55c8109d72a0 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55c8109d71d8 'type'
|     `-LValueReferenceType 0x55c8109d71a0 'const String &'
|       `-QualType 0x55c8109d6f41 'const String' const
|         `-SubstTemplateTypeParmType 0x55c8109d6f40 'String' sugar
|           |-TemplateTypeParmType 0x55c810604d60 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55c810604d08 'T'
|           `-RecordType 0x55c8106538c0 'String'
|             `-CXXRecord 0x55c810653830 'String'
|-TypedefDecl 0x55c8109d7378 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55c8109d6560 'const String &'
|   `-QualType 0x55c8109d1801 'const String' const
|     `-SubstTemplateTypeParmType 0x55c8109d1800 'String' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c8106538c0 'String'
|         `-CXXRecord 0x55c810653830 'String'
|-TypedefDecl 0x55c8109d73d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c8109d7438 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55c8109d65f0 'String *'
|   `-SubstTemplateTypeParmType 0x55c8109d1800 'String' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c8106538c0 'String'
|       `-CXXRecord 0x55c810653830 'String'
|-TypedefDecl 0x55c8109d74a0 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55c8109d6680 'const String *'
|   `-QualType 0x55c8109d1801 'const String' const
|     `-SubstTemplateTypeParmType 0x55c8109d1800 'String' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c8106538c0 'String'
|         `-CXXRecord 0x55c810653830 'String'
|-EnumDecl 0x55c8109d74f8 <line:134:5> col:5
| `-EnumConstantDecl 0x55c8109d75f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c8109d75d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c810634618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c8106345f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c8106345d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c8109d7678 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c8109d7908 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55c8109d7730 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c8109d77d0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55c8109d7b98 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55c8109d7a80 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55c8109d7e58 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55c8109d7d40 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55c8109d8170 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55c8109d8050 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55c8109d8480 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55c8109d8360 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55c8109d8770 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55c8109d85b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c8109d8630 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55c8109d8898 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55c8109d8948 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c8109d89a0 <col:30> Inherited
|-CXXMethodDecl 0x55c8109d89e8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55c8109d8a98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c8109d8af0 <col:30> Inherited
|-CXXMethodDecl 0x55c8109d8bb8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55c8109d8c68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c8109d8cc0 <col:30> Inherited
|-CXXMethodDecl 0x55c8109d8d08 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55c8109d8db8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c8109d8e10 <col:30> Inherited
|-CXXMethodDecl 0x55c8109d8ef0 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55c8109d8fa0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c8109d8ff8 <col:30> Inherited
|-CXXMethodDecl 0x55c8109d9040 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55c8109d90f0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c8109d9148 <col:30> Inherited
|-CXXMethodDecl 0x55c8109d9170 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c8109d9220 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c8109d92d0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c8109d9490 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55c8109d9380 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c8109d93f8 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55c8109d95e0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c8109d9550 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c8109d9788 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55c8109d9698 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c8109d9840 <col:20>
| `-OptimizeNoneAttr 0x55c8109d9898 <col:30>
|-CXXMethodDecl 0x55c8109d99b8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55c8109d98c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c8109d9a70 <col:20>
| `-OptimizeNoneAttr 0x55c8109d9ac8 <col:30>
|-CXXMethodDecl 0x55c8109d9b80 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c8109d9af0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c8109d9cc8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c8109d9c38 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c8109d9df8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55c8109d9ef8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55c8109d9fc8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55c8109da098 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55c8109da1d8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c8109da148 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c8109da320 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c8109da290 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c8109da468 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55c8109da3d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c8109da520 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c8109da620 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c8109da590 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c8109da6d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c8109da798 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55c8109da898 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55c8109daa18 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55c8109da958 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55c8109db1a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c8109daad0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55c8109db108 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55c8109db008 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55c8109db288 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c8109db3d8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55c8109db348 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55c8109db490 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c8109db6d8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55c8109db550 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55c8109db5c8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55c8109db868 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55c8109db7a8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55c8109dba78 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55c8109db930 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55c8109db9a8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55c8109dbb38 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55c8109dbd98 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55c8109dbca0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55c8109dbe68 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55c8109dbe68

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810a21c40 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55c810a21e18 prev 0x55c810a21c40 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55c810a21ea8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55c810a21ed0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810a23aa0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55c810a23a50 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55c810a22380 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55c810a22280 'type'
|     `-TemplateSpecializationType 0x55c810a22210 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55c810a220f0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55c810a220d0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55c810a220b0 <col:24> 'unsigned long' 4
|       `-RecordType 0x55c810a221f0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55c810a22110 'char_array'
|-TypedefDecl 0x55c810a23b58 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55c810a23b20 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55c810a23b00 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55c810a23aa0 'type'
|     `-ElaboratedType 0x55c810a23a50 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55c810a22380 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55c810a22280 'type'
|         `-TemplateSpecializationType 0x55c810a22210 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55c810a220f0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55c810a220d0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55c810a220b0 <col:24> 'unsigned long' 4
|           `-RecordType 0x55c810a221f0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55c810a22110 'char_array'
|-CXXMethodDecl 0x55c810a23cd8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55c810a23be8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55c810a23dc8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55c810a23ea8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55c810a23ea8
|-CXXMethodDecl 0x55c810a24178 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55c810a24080 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55c810a243b8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55c810a24230 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810a242a8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55c810a24588 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55c810a24478 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810a244f0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55c810a246e8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55c810a247b8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55c810a24a08 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55c810a24878 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55c810a248f0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55c810a24c68 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55c810a24ad8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55c810a24b50 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55c810a24e28 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55c810a24d38 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55c810a24fe8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55c810a24ef0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55c810a250a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c810a25150 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c810a25388 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55c810a25200 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810a25278 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55c810a25628 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55c810a25530 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55c810a256f0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55c810a25740 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55c810a25790 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810b063f0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55c810b065f8 prev 0x55c810b063f0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c810b07610 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55c810b075c0 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x55c810b075a0 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x55c810b07450 'type'
|     `-SubstTemplateTypeParmType 0x55c810a21810 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55c8105fd290 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8105fd238 'T'
|       `-RecordType 0x55c810a21360 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55c810a21278 'sized_array_memory'
|-FieldDecl 0x55c810b07710 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55c810b07760 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c810b07798 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55c810b06690 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c8106333f8 'T'
|   `-BuiltinType 0x55c810317620 'unsigned int'
|-TypedefDecl 0x55c810b07828 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x55c810b077f0 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x55c810b06690 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-BuiltinType 0x55c810317620 'unsigned int'
|-TypedefDecl 0x55c810b078b8 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x55c810b07880 'const unsigned int &'
|   `-QualType 0x55c810b06691 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55c810b06690 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-BuiltinType 0x55c810317620 'unsigned int'
|-TypedefDecl 0x55c810b07948 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x55c810b07910 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55c810b06690 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-BuiltinType 0x55c810317620 'unsigned int'
|-TypedefDecl 0x55c810b079d8 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x55c810b079a0 'const unsigned int *'
|   `-QualType 0x55c810b06691 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55c810b06690 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-BuiltinType 0x55c810317620 'unsigned int'
|-TypedefDecl 0x55c810b085c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x55c810b08570 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x55c810b08550 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x55c810b084e0 'type'
|     `-SubstTemplateTypeParmType 0x55c810b082a0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55c810605490 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c810605440 'T'
|       `-BuiltinType 0x55c810317620 'unsigned int'
|-TypedefDecl 0x55c810b08628 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x55c810b07880 'const unsigned int &'
|   `-QualType 0x55c810b06691 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55c810b06690 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-BuiltinType 0x55c810317620 'unsigned int'
|-TypedefDecl 0x55c810b08680 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810b086e8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x55c810b07910 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55c810b06690 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-BuiltinType 0x55c810317620 'unsigned int'
|-TypedefDecl 0x55c810b08750 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x55c810b079a0 'const unsigned int *'
|   `-QualType 0x55c810b06691 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55c810b06690 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-BuiltinType 0x55c810317620 'unsigned int'
|-EnumDecl 0x55c810b087a8 <line:134:5> col:5
| `-EnumConstantDecl 0x55c810b088a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c810b08880 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c810634618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c8106345f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c8106345d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c810b08928 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c810b08b78 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b089e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810b08a80 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x55c810b08e38 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55c810b08d20 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x55c810b090f8 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55c810b08fe0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55c810b09440 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55c810b09320 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x55c810b09750 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55c810b09630 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55c810b09a40 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b09888 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810b09900 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55c810b09b68 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55c810b09c48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b09ca0 <col:30> Inherited
|-CXXMethodDecl 0x55c810b0b180 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55c810b0b230 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b0b288 <col:30> Inherited
|-CXXMethodDecl 0x55c810b0b318 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55c810b0b3c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b0b420 <col:30> Inherited
|-CXXMethodDecl 0x55c810b0b468 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55c810b0b518 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b0b570 <col:30> Inherited
|-CXXMethodDecl 0x55c810b0b5b8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55c810b0b668 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b0b6c0 <col:30> Inherited
|-CXXMethodDecl 0x55c810b0b708 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55c810b0b7b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b0b810 <col:30> Inherited
|-CXXMethodDecl 0x55c810b0b838 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810b0b8e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810b0b998 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c810b0bb58 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b0ba48 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810b0bac0 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55c810b0bca8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c810b0bc18 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b0be58 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x55c810b0bd60 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810b0bf10 <col:20>
| `-OptimizeNoneAttr 0x55c810b0bf68 <col:30>
|-CXXMethodDecl 0x55c810b0c088 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x55c810b0bf90 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810b0c140 <col:20>
| `-OptimizeNoneAttr 0x55c810b0c198 <col:30>
|-CXXMethodDecl 0x55c810b0c250 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810b0c1c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b0c398 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810b0c308 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b0c4c8 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x55c810b0c5f8 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55c810b0c6c8 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x55c810b0c798 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55c810b0c8d8 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810b0c848 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b0ca20 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810b0c990 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b0cb68 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55c810b0cad8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810b0cc20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c810b0cd20 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c810b0cc90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810b0cdd8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c810b0ce98 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x55c810b0cf98 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x55c810b0d118 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810b0d058 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x55c810b0d8d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c810b0d1d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x55c810b0d838 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x55c810b0d738 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x55c810b0d9b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c810b0db08 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810b0da78 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55c810b0dbc0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c810b0de08 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b0dc80 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55c810b0dcf8 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55c810b0dfc8 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x55c810b0ded8 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55c810b0e218 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x55c810b0e090 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55c810b0e108 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55c810b0e2d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c810b0e538 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55c810b0e440 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x55c810b0e608 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55c810b0e608

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810a137a8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55c810a139b8 prev 0x55c810a137a8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c810a21bb0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55c810a21b60 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55c810a21b40 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55c810a219f0 'type'
|     `-SubstTemplateTypeParmType 0x55c810a21810 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55c8105fd290 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8105fd238 'T'
|       `-RecordType 0x55c810a21360 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55c810a21278 'sized_array_memory'
|-FieldDecl 0x55c810a257e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55c810a25830 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c810a25868 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55c810a13a50 'int' sugar
|   |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c8106333f8 'T'
|   `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810a258f8 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55c810a258c0 'int &'
|   `-SubstTemplateTypeParmType 0x55c810a13a50 'int' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810a25988 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55c810a25950 'const int &'
|   `-QualType 0x55c810a13a51 'const int' const
|     `-SubstTemplateTypeParmType 0x55c810a13a50 'int' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810a25a18 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55c810a259e0 'int *'
|   `-SubstTemplateTypeParmType 0x55c810a13a50 'int' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810a25aa8 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55c810a25a70 'const int *'
|   `-QualType 0x55c810a13a51 'const int' const
|     `-SubstTemplateTypeParmType 0x55c810a13a50 'int' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810a26690 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55c810a26640 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55c810a26620 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55c810a265b0 'type'
|     `-SubstTemplateTypeParmType 0x55c810a26370 'int' sugar
|       |-TemplateTypeParmType 0x55c810605490 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c810605440 'T'
|       `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810a266f8 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55c810a25950 'const int &'
|   `-QualType 0x55c810a13a51 'const int' const
|     `-SubstTemplateTypeParmType 0x55c810a13a50 'int' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810a26750 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810a267b8 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55c810a259e0 'int *'
|   `-SubstTemplateTypeParmType 0x55c810a13a50 'int' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810a26820 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55c810a25a70 'const int *'
|   `-QualType 0x55c810a13a51 'const int' const
|     `-SubstTemplateTypeParmType 0x55c810a13a50 'int' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-BuiltinType 0x55c810317580 'int'
|-EnumDecl 0x55c810a26878 <line:134:5> col:5
| `-EnumConstantDecl 0x55c810a26970 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c810a26950 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c810634618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c8106345f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c8106345d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c810a269f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c810a26c48 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810a26ab0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810a26b50 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55c810a26f08 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55c810a26df0 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55c810a271c8 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55c810a270b0 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55c810a27510 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55c810a273f0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55c810a27820 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55c810a27700 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55c810a27b10 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810a27958 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810a279d0 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55c810a27c38 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55c810a27d18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810a27d70 <col:30> Inherited
|-CXXMethodDecl 0x55c810a27db8 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55c810a27e68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810a27ec0 <col:30> Inherited
|-CXXMethodDecl 0x55c810a27f88 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55c810a28038 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810a28090 <col:30> Inherited
|-CXXMethodDecl 0x55c810a280d8 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55c810a28188 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810a281e0 <col:30> Inherited
|-CXXMethodDecl 0x55c810a28228 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55c810a282d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810a28330 <col:30> Inherited
|-CXXMethodDecl 0x55c810a28378 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55c810a28428 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810a28480 <col:30> Inherited
|-CXXMethodDecl 0x55c810a284a8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810a28558 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810a28608 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c810a287c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810a286b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810a28730 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55c810a28918 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c810a28888 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810a28ac8 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55c810a289d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810a28b80 <col:20>
| `-OptimizeNoneAttr 0x55c810a28bd8 <col:30>
|-CXXMethodDecl 0x55c810a28cf8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55c810a28c00 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810a28db0 <col:20>
| `-OptimizeNoneAttr 0x55c810a28e08 <col:30>
|-CXXMethodDecl 0x55c810a28ec0 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810a28e30 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810a2a5d0 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810a28f78 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810a2a708 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55c810a2a838 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55c810a2a908 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55c810a2a9d8 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x55c810a2ab18 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810a2aa88 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810a2ac60 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810a2abd0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810a2ada8 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55c810a2ad18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810a2ae60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c810a2af60 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c810a2aed0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810a2b018 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c810a2b0d8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55c810a2b1d8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55c810a2b358 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810a2b298 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55c810a2bb18 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c810a2b410 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55c810a2ba78 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55c810a2b978 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55c810a2bbf8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c810a2bd48 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810a2bcb8 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55c810a2be00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c810a2c048 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810a2bec0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55c810a2bf38 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55c810a2c208 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55c810a2c118 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55c810a2c458 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55c810a2c2d0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55c810a2c348 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55c810a2c518 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55c810a2c778 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55c810a2c680 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55c810a2c848 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55c810a2c848

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810b0e850 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55c810b0e968 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x55c810b0ea08 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55c810b0ea68 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x55c810b0eb00 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55c810b0eb00
| `-ParmVarDecl 0x55c810b0ec18 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55c810b0ecb8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55c810b0ecb8
| `-ParmVarDecl 0x55c810b0edc8 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55c810b0ee68 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55c810b0ee68
| `-ParmVarDecl 0x55c810b0ef78 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55c810b0efe8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55c810b0efe8
| `-ParmVarDecl 0x55c810b0f0f8 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x55c810b0f180 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55c810b0f180

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810b10710 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x55c810b108e8 prev 0x55c810b10710 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55c810b10978 <col:46, col:52> col:46 public
|-TypedefDecl 0x55c810b109a0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810b12360 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x55c810b12310 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55c810b122f0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x55c810b10bb8 'type'
|     `-SubstTemplateTypeParmType 0x55c810b10b80 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55c810623c80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c810623c30 'T'
|       `-RecordType 0x55c810b0e8e0 'Router::element_landmark_t'
|         `-CXXRecord 0x55c810b0e850 'element_landmark_t'
|-TypedefDecl 0x55c810b12418 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x55c810b123e0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x55c810b123c0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55c810b12360 'type'
|     `-ElaboratedType 0x55c810b12310 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x55c810b122f0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x55c810b10bb8 'type'
|         `-SubstTemplateTypeParmType 0x55c810b10b80 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55c810623c80 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55c810623c30 'T'
|           `-RecordType 0x55c810b0e8e0 'Router::element_landmark_t'
|             `-CXXRecord 0x55c810b0e850 'element_landmark_t'
|-CXXMethodDecl 0x55c810b12598 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x55c810b124a8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x55c810b12688 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55c810b12768 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55c810b12768
|-CXXMethodDecl 0x55c810b12a38 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55c810b12940 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x55c810b12c78 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55c810b12af0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810b12b68 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55c810b12e48 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55c810b12d38 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810b12db0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55c810b12fa8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55c810b13078 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55c810b150c8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55c810b14f40 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55c810b14fb8 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55c810b15328 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x55c810b15198 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55c810b15210 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55c810b154e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55c810b153f8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55c810b156a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55c810b155b0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55c810b15760 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c810b15810 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c810b15a48 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55c810b158c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810b15938 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55c810b15ce8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55c810b15bf0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x55c810b15db0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x55c810b15e00 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55c810b15e50 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810b0f270 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x55c810b0f478 prev 0x55c810b0f270 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c810b10680 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x55c810b10630 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55c810b10610 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55c810b104c0 'type'
|     `-SubstTemplateTypeParmType 0x55c810b10350 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x55c8105fda80 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55c8105fda28 'F'
|       `-RecordType 0x55c810b0ffb0 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x55c810b0fed0 'typed_array_memory'
|-FieldDecl 0x55c810b15ea0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x55c810b15ef0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c810b15f28 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x55c810b0f510 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c8106333f8 'T'
|   `-RecordType 0x55c810b0e8e0 'Router::element_landmark_t'
|     `-CXXRecord 0x55c810b0e850 'element_landmark_t'
|-TypedefDecl 0x55c810b15fb8 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x55c810b15f80 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x55c810b0f510 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810b0e8e0 'Router::element_landmark_t'
|       `-CXXRecord 0x55c810b0e850 'element_landmark_t'
|-TypedefDecl 0x55c810b16048 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55c810b16010 'const Router::element_landmark_t &'
|   `-QualType 0x55c810b0f511 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55c810b0f510 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810b0e8e0 'Router::element_landmark_t'
|         `-CXXRecord 0x55c810b0e850 'element_landmark_t'
|-TypedefDecl 0x55c810b160d8 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x55c810b160a0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55c810b0f510 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810b0e8e0 'Router::element_landmark_t'
|       `-CXXRecord 0x55c810b0e850 'element_landmark_t'
|-TypedefDecl 0x55c810b16168 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x55c810b16130 'const Router::element_landmark_t *'
|   `-QualType 0x55c810b0f511 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55c810b0f510 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810b0e8e0 'Router::element_landmark_t'
|         `-CXXRecord 0x55c810b0e850 'element_landmark_t'
|-TypedefDecl 0x55c810b16dc0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x55c810b16d70 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x55c810b16d50 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x55c810b16c88 'type'
|     `-LValueReferenceType 0x55c810b16c50 'const Router::element_landmark_t &'
|       `-QualType 0x55c810b169f1 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x55c810b169f0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55c810604d60 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55c810604d08 'T'
|           `-RecordType 0x55c810b0e8e0 'Router::element_landmark_t'
|             `-CXXRecord 0x55c810b0e850 'element_landmark_t'
|-TypedefDecl 0x55c810b16e28 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55c810b16010 'const Router::element_landmark_t &'
|   `-QualType 0x55c810b0f511 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55c810b0f510 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810b0e8e0 'Router::element_landmark_t'
|         `-CXXRecord 0x55c810b0e850 'element_landmark_t'
|-TypedefDecl 0x55c810b16e80 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810b16ee8 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x55c810b160a0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55c810b0f510 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810b0e8e0 'Router::element_landmark_t'
|       `-CXXRecord 0x55c810b0e850 'element_landmark_t'
|-TypedefDecl 0x55c810b16f50 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x55c810b16130 'const Router::element_landmark_t *'
|   `-QualType 0x55c810b0f511 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55c810b0f510 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810b0e8e0 'Router::element_landmark_t'
|         `-CXXRecord 0x55c810b0e850 'element_landmark_t'
|-EnumDecl 0x55c810b16fa8 <line:134:5> col:5
| `-EnumConstantDecl 0x55c810b170a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c810b17080 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c810634618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c8106345f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c8106345d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c810b17128 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c810b173b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b171e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810b17280 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55c810b17678 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55c810b17560 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x55c810b17938 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55c810b17820 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55c810b17c80 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55c810b17b60 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x55c810b17f90 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55c810b17e70 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55c810b18280 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b180c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810b18140 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55c810b183a8 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55c810b18488 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b184e0 <col:30> Inherited
|-CXXMethodDecl 0x55c810b18528 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55c810b185d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b18630 <col:30> Inherited
|-CXXMethodDecl 0x55c810b186f8 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55c810b187a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b18800 <col:30> Inherited
|-CXXMethodDecl 0x55c810b18848 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55c810b188f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b18950 <col:30> Inherited
|-CXXMethodDecl 0x55c810b18998 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55c810b18a48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b18aa0 <col:30> Inherited
|-CXXMethodDecl 0x55c810b18ae8 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55c810b18b98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b18bf0 <col:30> Inherited
|-CXXMethodDecl 0x55c810b18c18 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810b18cc8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810b18d78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c810b18f38 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b18e28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810b18ea0 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55c810b19088 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c810b18ff8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b19238 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x55c810b19140 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810b192f0 <col:20>
| `-OptimizeNoneAttr 0x55c810b19348 <col:30>
|-CXXMethodDecl 0x55c810b19468 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x55c810b19370 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810b19520 <col:20>
| `-OptimizeNoneAttr 0x55c810b19578 <col:30>
|-CXXMethodDecl 0x55c810b19630 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810b195a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b19778 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810b196e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b198a8 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55c810b199d8 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55c810b19aa8 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55c810b19b78 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55c810b19cb8 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810b19c28 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b19e00 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810b19d70 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b19f48 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x55c810b19eb8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810b1a000 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c810b1a100 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c810b1a070 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810b1a1b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c810b1a278 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x55c810b1a378 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x55c810b1a4f8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810b1a438 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x55c810b1ac88 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c810b1a5b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x55c810b1abe8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x55c810b1aae8 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55c810b1ad68 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c810b1aeb8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810b1ae28 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55c810b1af70 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c810b1b1b8 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b1b030 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55c810b1b0a8 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55c810b1b348 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x55c810b1b288 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55c810b1b558 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x55c810b1b410 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55c810b1b488 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55c810b1b618 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c810b1b878 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55c810b1b780 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x55c810b1b948 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55c810b1b948

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810a938d0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55c810a93aa8 prev 0x55c810a938d0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55c810a93b38 <col:46, col:52> col:46 public
|-TypedefDecl 0x55c810a93b60 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810a95730 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55c810a956e0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55c810a94010 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55c810a93f10 'type'
|     `-TemplateSpecializationType 0x55c810a93ea0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55c810a93d80 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55c810a93d60 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55c810a93d40 <col:24> 'unsigned long' 16
|       `-RecordType 0x55c810a93e80 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55c810a93da0 'char_array'
|-TypedefDecl 0x55c810a957e8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55c810a957b0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55c810a95790 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55c810a95730 'type'
|     `-ElaboratedType 0x55c810a956e0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55c810a94010 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55c810a93f10 'type'
|         `-TemplateSpecializationType 0x55c810a93ea0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55c810a93d80 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55c810a93d60 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55c810a93d40 <col:24> 'unsigned long' 16
|           `-RecordType 0x55c810a93e80 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55c810a93da0 'char_array'
|-CXXMethodDecl 0x55c810a95968 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55c810a95878 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55c810a95a58 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55c810a95b38 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55c810a95b38
|-CXXMethodDecl 0x55c810a95e08 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55c810a95d10 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55c810a96048 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55c810a95ec0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810a95f38 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55c810a96218 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55c810a96108 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810a96180 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55c810a96378 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55c810a96448 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55c810a96698 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55c810a96508 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55c810a96580 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55c810a968f8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55c810a96768 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55c810a967e0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55c810a96ab8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55c810a969c8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55c810a96c78 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55c810a96b80 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55c810a96d30 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c810a96de0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c810a97018 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55c810a96e90 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810a96f08 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55c810a972b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55c810a971c0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55c810a97380 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55c810a973d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55c810a97420 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810b1c060 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x55c810b1c268 prev 0x55c810b1c060 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c810b21440 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55c810b213f0 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x55c810b213d0 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x55c810b21280 'type'
|     `-SubstTemplateTypeParmType 0x55c810a934a0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55c8105fd290 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8105fd238 'T'
|       `-RecordType 0x55c810a92ff0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55c810a92f08 'sized_array_memory'
|-FieldDecl 0x55c810b21540 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55c810b21590 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c810b215c8 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x55c810b1c300 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c8106333f8 'T'
|   `-RecordType 0x55c810af6790 'Router::Connection'
|     `-CXXRecord 0x55c810af6700 'Connection'
|-TypedefDecl 0x55c810b21688 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x55c810b21650 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x55c810b1c300 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810af6790 'Router::Connection'
|       `-CXXRecord 0x55c810af6700 'Connection'
|-TypedefDecl 0x55c810b21718 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x55c810b216e0 'const Router::Connection &'
|   `-QualType 0x55c810b1c301 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55c810b1c300 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810af6790 'Router::Connection'
|         `-CXXRecord 0x55c810af6700 'Connection'
|-TypedefDecl 0x55c810b217a8 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x55c810b21770 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55c810b1c300 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810af6790 'Router::Connection'
|       `-CXXRecord 0x55c810af6700 'Connection'
|-TypedefDecl 0x55c810b21838 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x55c810b21800 'const Router::Connection *'
|   `-QualType 0x55c810b1c301 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55c810b1c300 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810af6790 'Router::Connection'
|         `-CXXRecord 0x55c810af6700 'Connection'
|-TypedefDecl 0x55c810b22490 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x55c810b22440 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x55c810b22420 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x55c810b22358 'type'
|     `-LValueReferenceType 0x55c810b22320 'const Router::Connection &'
|       `-QualType 0x55c810b220c1 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x55c810b220c0 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x55c810604d60 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55c810604d08 'T'
|           `-RecordType 0x55c810af6790 'Router::Connection'
|             `-CXXRecord 0x55c810af6700 'Connection'
|-TypedefDecl 0x55c810b224f8 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x55c810b216e0 'const Router::Connection &'
|   `-QualType 0x55c810b1c301 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55c810b1c300 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810af6790 'Router::Connection'
|         `-CXXRecord 0x55c810af6700 'Connection'
|-TypedefDecl 0x55c810b22550 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810b225b8 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x55c810b21770 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55c810b1c300 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810af6790 'Router::Connection'
|       `-CXXRecord 0x55c810af6700 'Connection'
|-TypedefDecl 0x55c810b22620 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x55c810b21800 'const Router::Connection *'
|   `-QualType 0x55c810b1c301 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55c810b1c300 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810af6790 'Router::Connection'
|         `-CXXRecord 0x55c810af6700 'Connection'
|-EnumDecl 0x55c810b22678 <line:134:5> col:5
| `-EnumConstantDecl 0x55c810b22770 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c810b22750 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c810634618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c8106345f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c8106345d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c810b227f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c810b22a88 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b228b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810b22950 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x55c810b22d48 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55c810b22c30 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x55c810b23008 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55c810b22ef0 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55c810b23350 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55c810b23230 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x55c810b23660 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55c810b23540 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55c810b23950 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b23798 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810b23810 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55c810b23aa8 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55c810b23b88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b23be0 <col:30> Inherited
|-CXXMethodDecl 0x55c810b23c28 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55c810b23cd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b23d30 <col:30> Inherited
|-CXXMethodDecl 0x55c810b23df8 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55c810b23ea8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b23f00 <col:30> Inherited
|-CXXMethodDecl 0x55c810b23f48 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55c810b23ff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b24050 <col:30> Inherited
|-CXXMethodDecl 0x55c810b24098 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55c810b24148 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b241a0 <col:30> Inherited
|-CXXMethodDecl 0x55c810b241e8 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55c810b24298 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b242f0 <col:30> Inherited
|-CXXMethodDecl 0x55c810b24318 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810b243c8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810b24478 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c810b24638 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b24528 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810b245a0 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55c810b24788 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c810b246f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b24938 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x55c810b24840 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810b249f0 <col:20>
| `-OptimizeNoneAttr 0x55c810b24a48 <col:30>
|-CXXMethodDecl 0x55c810b24b68 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x55c810b24a70 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810b24c20 <col:20>
| `-OptimizeNoneAttr 0x55c810b24c78 <col:30>
|-CXXMethodDecl 0x55c810b24d30 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810b24ca0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b24e78 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810b24de8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b24fa8 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x55c810b250d8 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55c810b251a8 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x55c810b25278 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55c810b253b8 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810b25328 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b25500 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810b25470 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b25648 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x55c810b255b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810b25700 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c810b25800 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c810b25770 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810b258b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c810b25978 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x55c810b25a78 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x55c810b25c28 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810b25b38 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x55c810b263e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c810b25ce0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x55c810b26348 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x55c810b26248 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x55c810b264c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c810b26618 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810b26588 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55c810b266d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c810b26918 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b26790 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55c810b26808 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55c810b26ad8 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x55c810b269e8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55c810b26d28 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x55c810b26ba0 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55c810b26c18 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55c810b26de8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c810b27048 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55c810b26f50 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x55c810b27118 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55c810b27118

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810a779b8 prev 0x55c8109e79e8 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c810a77ab0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55c810a77b40 <col:22, col:28> col:22 public
|-EnumDecl 0x55c810a77b68 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55c810a77c88 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c810a77c68 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55c810a77c50 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c810a77c30 <col:14> 'int' 999
| |-EnumConstantDecl 0x55c810a77d30 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c810a77d10 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55c810a77cf8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c810a77cd8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55c810a77dc0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c810a77da0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55c810a77d80 <col:17> 'int' 0
| |-EnumConstantDecl 0x55c810a77e50 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c810a77e30 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55c810a77e10 <col:13> 'int' 1
| |-EnumConstantDecl 0x55c810a77ee0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c810a77ec0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55c810a77ea0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55c810a77f70 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c810a77f50 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55c810a77f30 <col:13> 'int' 3
| |-EnumConstantDecl 0x55c810a78000 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c810a77fe0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55c810a77fc0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55c810a78090 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c810a78070 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55c810a78050 <col:14> 'int' 5
| |-EnumConstantDecl 0x55c810a78120 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55c810a78100 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55c810a780e0 <col:12> 'int' 6
| `-EnumConstantDecl 0x55c810a781d0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55c810a78190 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55c810a78170 <col:13> 'int' 7
|-VarDecl 0x55c810a78240 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55c810a782c8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55c810a78350 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55c810a783d8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55c810a78460 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55c810a784e8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55c810a78570 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55c810a785f8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55c810a78680 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55c810a78708 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55c810a78790 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55c810a78890 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55c810a7db78 '_nerrors' 'int'
| | `-IntegerLiteral 0x55c810a7e308 <line:128:13> 'int' 0
| `-CompoundStmt 0x55c810a7e378 <col:16, line:129:5>
|-CXXDestructorDecl 0x55c810a78980 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55c810a7e388 <col:29, line:132:5>
|-CXXMethodDecl 0x55c810a78b38 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55c810a78a70 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c810a78c00 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55c810a78ce8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55c810a7e3e0 <col:44, line:161:5>
|   `-ReturnStmt 0x55c810a7e3d0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55c810a7e3b8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55c810a7e398 <col:9> 'ErrorHandler *' lvalue Var 0x55c810a7dbd8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55c810a78e28 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55c810a78d98 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c810a78ef0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55c810a7e440 <col:43, line:173:5>
|   `-ReturnStmt 0x55c810a7e430 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55c810a7e418 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55c810a7e3f8 <col:9> 'ErrorHandler *' lvalue Var 0x55c810a7dc50 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55c810a78fa8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55c810a79028 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55c810a79138 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55c810a790a8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55c810a79288 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55c810a791f8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55c810a793e0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55c810a79348 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55c810a79538 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55c810a794a0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55c810a79690 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55c810a795f8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55c810a798a0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55c810a79748 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55c810a797c8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55c810a79a78 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55c810a79960 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55c810a799e0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55c810a79c98 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55c810a79b38 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55c810a79bb8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55c810a79e78 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55c810a79d58 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55c810a79dd8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55c810a7a058 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55c810a79f38 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55c810a79fb8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55c810a7a1e0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55c810a7a118 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55c810a7a3b0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55c810a7a298 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55c810a7a310 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55c810a7e698 <col:57, line:234:5>
|   `-ReturnStmt 0x55c810a7e688 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55c810a7e670 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55c810a7e618 <col:9, col:41> 'int'
|         |-MemberExpr 0x55c810a7e5e8 <col:9> '<bound member function type>' ->xmessage 0x55c810a7a1e0
|         | `-CXXThisExpr 0x55c810a7e5d8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55c810a7e658 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55c810a7e640 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55c810a7e5b8 <col:18, col:40> 'String' (CXXTemporary 0x55c810a7e5b8)
|               `-CallExpr 0x55c810a7e580 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55c810a7e568 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55c810a7e4e0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55c810a7c3a8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55c810a7e500 <col:31> 'const String' lvalue ParmVar 0x55c810a7a310 'str' 'const String &'
|                 `-DeclRefExpr 0x55c810a7e520 <col:36> 'const String' lvalue ParmVar 0x55c810a7a298 'anno' 'const String &'
|-CXXMethodDecl 0x55c810a7a690 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55c810a7a470 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55c810a7a4f0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55c810a7a568 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55c810a7e928 <col:68, line:243:5>
|   `-ReturnStmt 0x55c810a7e918 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55c810a7e900 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55c810a7e8a0 <col:9, col:41> 'int'
|         |-MemberExpr 0x55c810a7e870 <col:9> '<bound member function type>' ->xmessage 0x55c810a7a3b0
|         | `-CXXThisExpr 0x55c810a7e860 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55c810a7e738 <col:18> 'const String' lvalue ParmVar 0x55c810a7a470 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55c810a7e8e8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55c810a7e8d0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55c810a7e840 <col:24, col:40> 'String' (CXXTemporary 0x55c810a7e840)
|               `-CXXMemberCallExpr 0x55c810a7e7d8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55c810a7e768 <col:24> '<bound member function type>' ->vformat 0x55c810a7b870
|                 | `-CXXThisExpr 0x55c810a7e758 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55c810a7e808 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55c810a7e798 <col:32> 'const char *' lvalue ParmVar 0x55c810a7a4f0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55c810a7e820 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55c810a7e7b8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55c810a7a568 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55c810a7a930 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55c810a7a758 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55c810a7a7d0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55c810a7a848 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55c810a7ec68 <col:23, line:254:5>
|   `-ReturnStmt 0x55c810a7ec58 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55c810a7ec40 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55c810a7ebe0 <col:9, col:71> 'int'
|         |-MemberExpr 0x55c810a7ebb0 <col:9> '<bound member function type>' ->xmessage 0x55c810a7a3b0
|         | `-CXXThisExpr 0x55c810a7eba0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55c810a7ec28 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55c810a7ec10 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55c810a7eb60 <col:18, col:65> 'String' (CXXTemporary 0x55c810a7eb60)
|         |     `-CallExpr 0x55c810a7eaf8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55c810a7eae0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55c810a7e9c8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55c810a7c3a8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55c810a7e9e8 <col:31> 'const String' lvalue ParmVar 0x55c810a7a7d0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55c810a7eb40 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55c810a7eb28 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55c810a7eac0 <col:37, col:64> 'String' (CXXTemporary 0x55c810a7eac0)
|         |             `-CallExpr 0x55c810a7ea90 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55c810a7ea78 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55c810a7ea08 <col:37> 'String (const String &)' lvalue CXXMethod 0x55c810a7c9f8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55c810a7ea28 <col:56> 'const String' lvalue ParmVar 0x55c810a7a758 'landmark' 'const String &'
|         `-DeclRefExpr 0x55c810a7eb80 <col:68> 'const String' lvalue ParmVar 0x55c810a7a848 'str' 'const String &'
|-CXXMethodDecl 0x55c810a7acb0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55c810a7a9f8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55c810a7aa70 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55c810a7aaf0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55c810a7ab68 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55c810a7ef20 <col:34, line:267:5>
|   `-ReturnStmt 0x55c810a7ef10 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55c810a7eef8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55c810a7ee90 <col:9, col:51> 'int'
|         |-MemberExpr 0x55c810a7ee60 <col:9> '<bound member function type>' ->xmessage 0x55c810a7a930
|         | `-CXXThisExpr 0x55c810a7ee50 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55c810a7ed08 <col:18> 'const String' lvalue ParmVar 0x55c810a7a9f8 'landmark' 'const String &'
|         |-DeclRefExpr 0x55c810a7ed28 <col:28> 'const String' lvalue ParmVar 0x55c810a7aa70 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55c810a7eee0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55c810a7eec8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55c810a7ee30 <col:34, col:50> 'String' (CXXTemporary 0x55c810a7ee30)
|               `-CXXMemberCallExpr 0x55c810a7edc8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55c810a7ed58 <col:34> '<bound member function type>' ->vformat 0x55c810a7b870
|                 | `-CXXThisExpr 0x55c810a7ed48 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55c810a7edf8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55c810a7ed88 <col:42> 'const char *' lvalue ParmVar 0x55c810a7aaf0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55c810a7ee10 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55c810a7eda8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55c810a7ab68 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55c810a7adc0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55c810a7efa0 <col:25, line:288:5>
|   `-ReturnStmt 0x55c810a7ef90 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55c810a7ef78 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55c810a7ef48 <col:9> 'const int' lvalue ->_nerrors 0x55c810a7db78
|         `-CXXThisExpr 0x55c810a7ef38 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55c810a7afd0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55c810a7ae78 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55c810a7aef8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55c810a7b2b8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55c810a7b098 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55c810a7b118 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55c810a7b190 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55c810a7b450 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55c810a7b388 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55c810a7b698 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55c810a7b510 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55c810a7b588 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55c810a7f200 <col:58, line:357:5>
|   `-ReturnStmt 0x55c810a7f1f0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55c810a7f1d8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55c810a7f1a8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55c810a7f190 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55c810a7f170 <col:9, col:29> 'String' (CXXTemporary 0x55c810a7f170)
|             `-CallExpr 0x55c810a7f100 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55c810a7f0e8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55c810a7f068 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55c810a7b2b8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55c810a7f008 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55c810a7f138 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55c810a7f028 <col:21> 'const char *' lvalue ParmVar 0x55c810a7b510 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55c810a7f150 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55c810a7f048 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55c810a7b588 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55c810a7b870 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55c810a7b760 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55c810a7b7d8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55c810a7b9c8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55c810a7b938 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55c810a7bb10 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55c810a7ba80 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55c810a7bdb0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55c810a7bbc8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55c810a7bc48 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55c810a7bcc0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55c810a7bf10 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55c810a7be80 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55c810a7f318 <col:37, line:441:5>
|   `-IfStmt 0x55c810a7f300 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55c810a7f288 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55c810a7f258 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55c810a7f218 <col:6> 'int' lvalue ParmVar 0x55c810a7be80 'level' 'int'
|     | `-ImplicitCastExpr 0x55c810a7f270 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55c810a7f238 <col:15> 'ErrorHandler::Level' EnumConstant 0x55c810a77f70 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55c810a7f2e8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55c810a7f2b8 <col:8> 'int' lvalue ->_nerrors 0x55c810a7db78
|         `-CXXThisExpr 0x55c810a7f2a8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55c810a7bfd8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55c810a7f3b0 <col:26, line:448:5>
|   `-BinaryOperator 0x55c810a7f390 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55c810a7f340 <col:2> 'int' lvalue ->_nerrors 0x55c810a7db78
|     | `-CXXThisExpr 0x55c810a7f330 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55c810a7f370 <col:13> 'int' 0
|-CXXMethodDecl 0x55c810a7c1a0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55c810a7c090 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55c810a7c108 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55c810a7c3a8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55c810a7c260 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55c810a7c2d8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55c810a7c658 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55c810a7c468 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55c810a7c4e8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55c810a7c568 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55c810a7c710 <col:59> 0 0
|-CXXMethodDecl 0x55c810a7c8a8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55c810a7c788 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55c810a7c808 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55c810a7fa20 <col:70, line:534:5>
|   |-DeclStmt 0x55c810a7f520 <line:528:2, col:20>
|   | |-VarDecl 0x55c810a7f3d8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55c810a7f440 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55c810a7f478 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55c810a7f4e0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55c810a7f5f0 <line:529:2, col:23>
|   | `-VarDecl 0x55c810a7f550 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55c810a7f5d8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55c810a7f5b8 <col:18> 'const char *' lvalue ParmVar 0x55c810a7c788 'begin' 'const char *'
|   |-DoStmt 0x55c810a7f9b8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55c810a7f8e8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55c810a7f8d0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55c810a7f8b0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55c810a7f608 <col:6> 'const char *' lvalue Var 0x55c810a7f550 'x' 'const char *'
|   | |     `-CallExpr 0x55c810a7f800 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55c810a7f7e8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55c810a7f7a0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55c810a7e050 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55c810a7f868 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55c810a7f850 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55c810a7f6c0 <col:20, col:27> 'String' (CXXTemporary 0x55c810a7f6c0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55c810a7f688 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55c810a7f880 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55c810a7f6e0 <col:30> 'const char *' lvalue Var 0x55c810a7f550 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55c810a7f898 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55c810a7f700 <col:33> 'const char *' lvalue ParmVar 0x55c810a7c808 'end' 'const char *'
|   | |       |-UnaryOperator 0x55c810a7f740 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55c810a7f720 <col:39> 'String' lvalue Var 0x55c810a7f3d8 'name' 'String'
|   | |       |-UnaryOperator 0x55c810a7f778 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55c810a7f758 <col:46> 'String' lvalue Var 0x55c810a7f478 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55c810a7f790 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55c810a7f9a0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55c810a7f988 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55c810a7f968 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55c810a7f938 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55c810657048
|   |         `-ImplicitCastExpr 0x55c810a7f920 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55c810a7f900 <col:11> 'String' lvalue Var 0x55c810a7f3d8 'name' 'String'
|   `-ReturnStmt 0x55c810a7fa10 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55c810a7f9f8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55c810a7f9d8 <col:9> 'const char *' lvalue Var 0x55c810a7f550 'x' 'const char *'
|-CXXMethodDecl 0x55c810a7c9f8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55c810a7c968 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55c810a80028 <col:55, line:550:5>
|   `-IfStmt 0x55c810a80000 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55c810a7fc60 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55c810a7fc48 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55c810a7fc30 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55c810a7fc10 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55c810a7fbe0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55c810657048
|     | |       `-DeclRefExpr 0x55c810a7fa80 <col:6> 'const String' lvalue ParmVar 0x55c810a7c968 'x' 'const String &'
|     | `-BinaryOperator 0x55c810a7fbc0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55c810a7fb90 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55c810a7fb40 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55c810a7fb28 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55c810a7fae0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55c81066e8a0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55c810a7faa0 <col:11> 'const String' lvalue ParmVar 0x55c810a7c968 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55c810a7fac0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55c810a7fba8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55c810a7fb78 <col:19> 'char' 123
|     |-ReturnStmt 0x55c810a7fcd0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55c810a7fca0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55c810a7fc80 <col:13> 'const String' lvalue ParmVar 0x55c810a7c968 'x' 'const String &'
|     `-IfStmt 0x55c810a7ffd8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55c810a7fd68 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55c810a7fd50 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55c810a7fd30 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55c810a7fd00 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55c810657048
|       |       `-DeclRefExpr 0x55c810a7fce0 <col:11> 'const String' lvalue ParmVar 0x55c810a7c968 'x' 'const String &'
|       |-ReturnStmt 0x55c810a7fef0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55c810a7fed8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55c810a7fea8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55c810a7fe90 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55c810a7fe70 <col:13, col:29> 'String' (CXXTemporary 0x55c810a7fe70)
|       |         `-CallExpr 0x55c810a7fe20 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55c810a7fe08 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55c810a7fd80 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55c810a7c1a0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55c810a7fe50 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55c810a7fda0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55c810a7fdc0 <col:28> 'const String' lvalue ParmVar 0x55c810a7c968 'x' 'const String &'
|       `-ReturnStmt 0x55c810a7ffc8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55c810a7ffb0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55c810a7ff80 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55c810a7ff68 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55c810a7ff48 <col:13, col:20> 'String' (CXXTemporary 0x55c810a7ff48)
|                 `-CXXTemporaryObjectExpr 0x55c810a7ff10 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55c810a7cbc0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55c810a7cab0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55c810a7cb28 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c810a7e2f8 <col:71> 'bool' false
|-CXXRecordDecl 0x55c810a7cc70 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55c810a7cf68 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55c810a7cf00 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55c810a7cea0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55c810a7ce60 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55c8106538c0 'String'
|       | `-CXXRecord 0x55c810653830 'String'
|       |-BuiltinType 0x55c810317580 'int'
|       `-DecayedType 0x55c8109e8a30 '__va_list_tag *' sugar
|         |-TypedefType 0x55c8109e8a00 'va_list' sugar
|         | |-Typedef 0x55c81053d450 'va_list'
|         | `-TypedefType 0x55c81053d400 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55c810474c28 '__gnuc_va_list'
|         |   `-TypedefType 0x55c810474b90 '__builtin_va_list' sugar
|         |     |-Typedef 0x55c810358d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55c810358ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55c8103182d0 '__va_list_tag'
|         |         `-CXXRecord 0x55c810318238 '__va_list_tag'
|         `-PointerType 0x55c810543550 '__va_list_tag *'
|           `-RecordType 0x55c8103182d0 '__va_list_tag'
|             `-CXXRecord 0x55c810318238 '__va_list_tag'
|-EnumDecl 0x55c810a7cfc0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55c810a7d0c0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c810a7d620 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810a7d0a0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55c810a7d080 <col:16> 'int' 1
| |-EnumConstantDecl 0x55c810a7d150 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c810a7d638 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810a7d130 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55c810a7d110 <col:21> 'int' 2
| |-EnumConstantDecl 0x55c810a7d1e0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c810a7d650 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810a7d1c0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55c810a7d1a0 <col:22> 'int' 4
| |-EnumConstantDecl 0x55c810a7d270 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c810a7d668 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810a7d250 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55c810a7d230 <col:17> 'int' 8
| |-EnumConstantDecl 0x55c810a7d300 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c810a7d680 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810a7d2e0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55c810a7d2c0 <col:22> 'int' 16
| |-EnumConstantDecl 0x55c810a7d390 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c810a7d698 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810a7d370 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55c810a7d350 <col:19> 'int' 32
| |-EnumConstantDecl 0x55c810a7d420 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c810a7d6b0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810a7d400 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55c810a7d3e0 <col:17> 'int' 64
| |-EnumConstantDecl 0x55c810a7d4b0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c810a7d6c8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810a7d490 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55c810a7d470 <col:14> 'int' 128
| |-EnumConstantDecl 0x55c810a7d540 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55c810a7d6e0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810a7d520 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55c810a7d500 <col:16> 'int' 256
| `-EnumConstantDecl 0x55c810a7d5d0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55c810a7d6f8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810a7d5b0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55c810a7d590 <col:12> 'int' 1024
|-CXXMethodDecl 0x55c810a7d908 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55c810a7d720 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55c810a7d7c0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55c810a7da90 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55c810a7d9c8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55c810a7db38 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55c810a7db78 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55c810a7dbd8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55c810a7dc50 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55c810a7e050 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55c810a7dcc8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55c810a7dd48 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55c810a7ddc8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55c810a7de40 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55c810a7deb8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55c810a7df30 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55c810a7e178 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55c810a7e178
| `-ParmVarDecl 0x55c810a7e288 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55c810a803d8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55c810a803d8
  `-ParmVarDecl 0x55c810a804e8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8108840f0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55c810884240 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55c8108842c0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x55c8108850b8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55c8108850b8
| `-ParmVarDecl 0x55c8108851c8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x55c810885268 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55c810885268
| `-ParmVarDecl 0x55c810885378 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x55c8108853e8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55c8108853e8
|-CXXMethodDecl 0x55c810885cb8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55c810885cb8
| `-ParmVarDecl 0x55c810885dc8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x55c810885e38 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55c810885e38
| `-ParmVarDecl 0x55c810885f48 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x55c810b40808 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55c810b408e0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8108843f0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55c810884518 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55c8108845a0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x55c810885518 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55c810885518
| `-ParmVarDecl 0x55c810885628 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x55c8108856c8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55c8108856c8
| `-ParmVarDecl 0x55c8108857d8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x55c810885848 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55c810885848
|-CXXMethodDecl 0x55c810885fe8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55c810885fe8
| `-ParmVarDecl 0x55c8108860f8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x55c810886168 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55c810886168
| `-ParmVarDecl 0x55c810886278 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x55c810b40940 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55c810b40a20 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c81087fa78 prev 0x55c81087ef80 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 referenced class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55c81087fb70 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x55c81087fc00 <col:17, col:23> col:17 public
|-EnumDecl 0x55c81087fc28 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x55c81087fd30 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880a80 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81087fd10 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x55c81087fcf0 <col:11> 'int' 1
| |-EnumConstantDecl 0x55c81087fdc0 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880a98 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81087fda0 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x55c81087fd80 <col:12> 'int' 2
| |-EnumConstantDecl 0x55c81087fe50 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880ab0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81087fe30 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x55c81087fe10 <col:17> 'int' 4
| |-EnumConstantDecl 0x55c81087fee0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880ac8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81087fec0 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x55c81087fea0 <col:16> 'int' 0
| |-EnumConstantDecl 0x55c81087ff70 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880ae0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81087ff50 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55c81087ff30 <col:19> 'int' 32
| |-EnumConstantDecl 0x55c810880000 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880af8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81087ffe0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x55c81087ffc0 <col:10> 'int' 64
| |-EnumConstantDecl 0x55c810880090 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880b10 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810880070 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x55c810880050 <col:19> 'int' 128
| |-EnumConstantDecl 0x55c810880120 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880b28 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810880100 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x55c8108800e0 <col:20> 'int' 256
| |-EnumConstantDecl 0x55c8108801b0 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880b40 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810880190 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x55c810880170 <col:17> 'int' 512
| |-EnumConstantDecl 0x55c810880240 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880b58 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810880220 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x55c810880200 <col:15> 'int' 1024
| |-EnumConstantDecl 0x55c8108802d0 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880b70 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108802b0 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x55c810880290 <col:11> 'int' 2048
| |-EnumConstantDecl 0x55c810880360 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880b88 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810880340 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x55c810880320 <col:16> 'int' 4096
| |-EnumConstantDecl 0x55c8108803f0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880ba0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108803d0 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x55c8108803b0 <col:13> 'int' 8192
| |-EnumConstantDecl 0x55c810880480 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880bb8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810880460 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x55c810880440 <col:15> 'int' 16384
| |-EnumConstantDecl 0x55c810880550 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x55c810880530 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x55c810880510 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55c8108804d0 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x55c8108804f0 <col:20> 'int' 26
| |-EnumConstantDecl 0x55c810880620 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x55c810880600 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x55c8108805e0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55c8108805a0 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x55c8108805c0 <col:27> 'int' 27
| |-EnumConstantDecl 0x55c8108806b0 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880bd0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810880690 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x55c810880670 <col:17> 'int' 28
| |-EnumConstantDecl 0x55c810880780 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x55c810880760 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x55c810880740 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55c810880700 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x55c810880720 <col:18> 'int' EnumConstant 0x55c8108806b0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810880810 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880be8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108807f0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x55c8108807d0 <col:25> 'int' 8
| |-EnumConstantDecl 0x55c8108808a0 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55c810880c00 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810880880 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x55c810880860 <col:26> 'int' 16
| `-EnumConstantDecl 0x55c810880a30 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x55c810880c18 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810880a10 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x55c8108809f0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x55c8108809b0 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x55c810880970 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x55c810880930 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x55c8108808f0 <col:14> 'int' EnumConstant 0x55c81087fd30 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x55c810880910 <col:23> 'int' EnumConstant 0x55c81087fdc0 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x55c810880950 <col:33> 'int' EnumConstant 0x55c81087fe50 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x55c810880990 <col:48> 'int' EnumConstant 0x55c810880810 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x55c8108809d0 <col:71> 'int' EnumConstant 0x55c8108808a0 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x55c810880c78 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x55c8108866a8 <col:39, line:64:5>
|   `-ReturnStmt 0x55c810886698 <line:63:2, col:9>
|     `-MemberExpr 0x55c810886668 <col:9> 'const String' lvalue ->_name 0x55c8108840a0
|       `-CXXThisExpr 0x55c810886658 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55c810880d38 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x55c810886728 <col:35, line:71:5>
|   `-ReturnStmt 0x55c810886718 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x55c810886700 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55c8108866d0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55c8108847b0
|         `-CXXThisExpr 0x55c8108866c0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55c810880e88 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x55c810880df0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x55c8108868a8 <col:42, line:77:5>
|   `-ReturnStmt 0x55c810886898 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x55c810886880 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x55c810886850 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x55c8108867b0 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x55c810886780 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55c810886740 <col:9> 'int' lvalue ParmVar 0x55c810880df0 'op' 'int'
|         | `-ImplicitCastExpr 0x55c810886798 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55c810886760 <col:15> 'Handler::Flags' EnumConstant 0x55c81087fdc0 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x55c8108867e0 <col:25> 'void *const' lvalue ->_write_user_data 0x55c810884750
|         | `-CXXThisExpr 0x55c8108867d0 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x55c810886820 <col:44> 'void *const' lvalue ->_read_user_data 0x55c8108846e8
|           `-CXXThisExpr 0x55c810886810 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x55c810880f58 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x55c810886928 <col:41, line:82:5>
|   `-ReturnStmt 0x55c810886918 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x55c810886900 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55c8108868d0 <col:9> 'void *const' lvalue ->_read_user_data 0x55c8108846e8
|         `-CXXThisExpr 0x55c8108868c0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55c810881020 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x55c8108869a8 <col:42, line:87:5>
|   `-ReturnStmt 0x55c810886998 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x55c810886980 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55c810886950 <col:9> 'void *const' lvalue ->_write_user_data 0x55c810884750
|         `-CXXThisExpr 0x55c810886940 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55c8108810e8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x55c810881188 <col:52> "" ""
|-CXXMethodDecl 0x55c810881220 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x55c8108812c0 <col:52> "" ""
|-CXXMethodDecl 0x55c810881350 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x55c810886a98 <col:34, line:98:5>
|   `-ReturnStmt 0x55c810886a88 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x55c810886a70 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55c810886a50 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55c810886a20 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55c8108869d0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55c8108847b0
|         |   `-CXXThisExpr 0x55c8108869c0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55c810886a38 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55c810886a00 <col:18> 'Handler::Flags' EnumConstant 0x55c81087fd30 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55c810881410 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x55c810886b88 <col:36, line:104:5>
|   `-ReturnStmt 0x55c810886b78 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x55c810886b60 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55c810886b40 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55c810886b10 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55c810886ac0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55c8108847b0
|         |   `-CXXThisExpr 0x55c810886ab0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55c810886b28 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55c810886af0 <col:18> 'Handler::Flags' EnumConstant 0x55c81087fe50 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x55c8108814d0 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x55c810886d68 <col:38, line:113:5>
|   `-ReturnStmt 0x55c810886d58 <line:112:2, col:49>
|     `-BinaryOperator 0x55c810886d38 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x55c810886ce0 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x55c810886cc0 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55c810886c90 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55c810886bb0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55c8108847b0
|       |   |   `-CXXThisExpr 0x55c810886ba0 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55c810886ca8 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55c810886c70 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x55c810886c50 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x55c810886c20 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55c810886be0 <col:20> 'Handler::Flags' EnumConstant 0x55c81087fd30 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55c810886c38 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55c810886c00 <col:29> 'Handler::Flags' EnumConstant 0x55c810880090 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55c810886d20 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55c810886d00 <col:49> 'Handler::Flags' EnumConstant 0x55c81087fd30 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55c810881590 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x55c810886e58 <col:34, line:118:5>
|   `-ReturnStmt 0x55c810886e48 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x55c810886e30 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55c810886e10 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55c810886de0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55c810886d90 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55c8108847b0
|         |   `-CXXThisExpr 0x55c810886d80 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55c810886df8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55c810886dc0 <col:18> 'Handler::Flags' EnumConstant 0x55c81087fdc0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55c810881650 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x55c810887038 <col:39, line:127:5>
|   `-ReturnStmt 0x55c810887028 <line:126:2, col:51>
|     `-BinaryOperator 0x55c810887008 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x55c810886fb0 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x55c810886f90 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55c810886f60 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55c810886e80 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55c8108847b0
|       |   |   `-CXXThisExpr 0x55c810886e70 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55c810886f78 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55c810886f40 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x55c810886f20 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x55c810886ef0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55c810886eb0 <col:20> 'Handler::Flags' EnumConstant 0x55c81087fdc0 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55c810886f08 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55c810886ed0 <col:30> 'Handler::Flags' EnumConstant 0x55c810880120 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55c810886ff0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55c810886fd0 <col:51> 'Handler::Flags' EnumConstant 0x55c81087fdc0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55c810881710 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x55c810887140 <col:33, line:132:5>
|   `-ReturnStmt 0x55c810887130 <line:131:2, col:41>
|     `-BinaryOperator 0x55c810887110 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x55c810887090 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x55c810887060 <col:9> '<bound member function type>' ->read_visible 0x55c8108814d0
|       |   `-CXXThisExpr 0x55c810887050 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x55c8108870f0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x55c8108870c0 <col:27> '<bound member function type>' ->write_visible 0x55c810881650
|           `-CXXThisExpr 0x55c8108870b0 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x55c8108817d0 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x55c810887250 <col:51, line:138:5>
|   `-ReturnStmt 0x55c810887240 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x55c810887228 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55c810887208 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55c8108871e8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55c8108871b8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55c810887168 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55c8108847b0
|           |   `-CXXThisExpr 0x55c810887158 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55c8108871d0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55c810887198 <col:26> 'Handler::Flags' EnumConstant 0x55c81087ff70 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55c810881890 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x55c810887360 <col:50, line:144:5>
|   `-ReturnStmt 0x55c810887350 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x55c810887338 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55c810887318 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55c8108872f8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55c8108872c8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55c810887278 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55c8108847b0
|           |   `-CXXThisExpr 0x55c810887268 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55c8108872e0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55c8108872a8 <col:26> 'Handler::Flags' EnumConstant 0x55c81087ff70 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55c810881950 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x55c810887450 <col:29, line:166:5>
|   `-ReturnStmt 0x55c810887440 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x55c810887428 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55c810887408 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55c8108873d8 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55c810887388 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55c8108847b0
|         |   `-CXXThisExpr 0x55c810887378 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55c8108873f0 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55c8108873b8 <col:18> 'Handler::Flags' EnumConstant 0x55c810880000 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x55c810881bd8 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55c810881a00 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x55c810881a78 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x55c810881af0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c810881de8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55c810881ca0 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x55c810881d18 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55c810886590 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55c810886570 <col:62> 'int' 0
| `-CompoundStmt 0x55c8108876f0 <col:71, line:188:5>
|   `-ReturnStmt 0x55c8108876e0 <line:187:2, col:36>
|     `-ExprWithCleanups 0x55c8108876c8 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x55c810887698 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55c810887680 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55c810887660 <col:9, col:36> 'String' (CXXTemporary 0x55c810887660)
|             `-CXXMemberCallExpr 0x55c8108875c0 <col:9, col:36> 'String'
|               |-MemberExpr 0x55c810887590 <col:9> '<bound member function type>' ->call_read 0x55c810881bd8
|               | `-CXXThisExpr 0x55c810887580 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55c8108875f8 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55c8108874d8 <col:19> 'Element *' lvalue ParmVar 0x55c810881ca0 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x55c810887628 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x55c810887610 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x55c810887540 <col:22, col:29> 'String' (CXXTemporary 0x55c810887540)
|               |     `-CXXTemporaryObjectExpr 0x55c810887508 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x55c810887640 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x55c810887560 <col:32> 'ErrorHandler *' lvalue ParmVar 0x55c810881d18 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x55c810882080 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55c810881ea8 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x55c810881f20 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55c810881f98 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c810882208 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x55c810882148 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x55c810882438 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x55c8108822c0 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55c810882338 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x55c810882550 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x55c810887750 <col:50, line:225:5>
|   `-ReturnStmt 0x55c810887740 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x55c810887728 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x55c810887708 <col:9> 'const Handler *' lvalue Var 0x55c8108848e0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x55c8108825f0 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x55c8108826f0 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c810883280 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108826d0 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55c8108826b0 <col:11> 'Handler::Flags' EnumConstant 0x55c81087fd30 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810882780 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c810883298 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810882760 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55c810882740 <col:12> 'Handler::Flags' EnumConstant 0x55c81087fdc0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810882810 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c8108832b0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108827f0 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55c8108827d0 <col:17> 'Handler::Flags' EnumConstant 0x55c81087fe50 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55c8108828a0 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c8108832c8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810882880 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55c810882860 <col:16> 'Handler::Flags' EnumConstant 0x55c81087fee0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810882930 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c8108832e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810882910 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x55c8108828f0 <col:19> 'Handler::Flags' EnumConstant 0x55c81087ff70 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55c8108829c0 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c8108832f8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108829a0 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55c810882980 <col:10> 'Handler::Flags' EnumConstant 0x55c810880000 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810882a50 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c810883310 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810882a30 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x55c810882a10 <col:19> 'Handler::Flags' EnumConstant 0x55c810880090 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810882ae0 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c810883328 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810882ac0 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x55c810882aa0 <col:20> 'Handler::Flags' EnumConstant 0x55c810880120 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810882b70 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c810883340 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810882b50 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x55c810882b30 <col:17> 'Handler::Flags' EnumConstant 0x55c8108801b0 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810882c00 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c810883358 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810882be0 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x55c810882bc0 <col:15> 'Handler::Flags' EnumConstant 0x55c810880240 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810882c90 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c810883370 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810882c70 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55c810882c50 <col:11> 'Handler::Flags' EnumConstant 0x55c8108802d0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810882d20 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c810883388 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810882d00 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55c810882ce0 <col:16> 'Handler::Flags' EnumConstant 0x55c810880360 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810882db0 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c8108833a0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810882d90 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55c810882d70 <col:13> 'Handler::Flags' EnumConstant 0x55c8108803f0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810882e40 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c8108833b8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810882e20 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55c810882e00 <col:15> 'Handler::Flags' EnumConstant 0x55c810880480 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810882ed0 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c8108833d0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810882eb0 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x55c810882e90 <col:20> 'Handler::Flags' EnumConstant 0x55c810880550 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810882f60 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c8108833e8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810882f40 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x55c810882f20 <col:27> 'Handler::Flags' EnumConstant 0x55c810880620 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810882ff0 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c810883400 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810882fd0 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55c810882fb0 <col:22> 'Handler::Flags' EnumConstant 0x55c8108806b0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810883080 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c810883418 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810883060 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x55c810883040 <col:18> 'Handler::Flags' EnumConstant 0x55c810880780 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810883110 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c810883430 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108830f0 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x55c8108830d0 <col:25> 'Handler::Flags' EnumConstant 0x55c810880810 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55c8108831a0 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55c810883448 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810883180 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x55c810883160 <col:26> 'Handler::Flags' EnumConstant 0x55c8108808a0 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x55c810883230 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x55c810883460 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810883210 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x55c8108831f0 <col:20> 'Handler::Flags' EnumConstant 0x55c810880a30 'f_special' 'Handler::Flags'
|-EnumDecl 0x55c810883478 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x55c810883580 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55c810883ae0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810883560 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55c810883540 <col:12> 'Handler::Flags' EnumConstant 0x55c81087fd30 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810883610 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55c810883af8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108835f0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55c8108835d0 <col:13> 'Handler::Flags' EnumConstant 0x55c81087fdc0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55c8108836a0 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55c810883b10 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810883680 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55c810883660 <col:15> 'Handler::Flags' EnumConstant 0x55c81087fe50 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810883730 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55c810883b28 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810883710 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55c8108836f0 <col:8> 'Handler::Flags' EnumConstant 0x55c810880000 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55c8108837c0 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55c810883b40 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108837a0 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55c810883780 <col:9> 'Handler::Flags' EnumConstant 0x55c8108802d0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810883850 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55c810883b58 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810883830 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55c810883810 <col:14> 'Handler::Flags' EnumConstant 0x55c810880360 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55c8108838e0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55c810883b70 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108838c0 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55c8108838a0 <col:11> 'Handler::Flags' EnumConstant 0x55c8108803f0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810883970 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55c810883b88 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810883950 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55c810883930 <col:13> 'Handler::Flags' EnumConstant 0x55c810880480 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55c810883a00 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55c810883ba0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108839e0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55c8108839c0 <col:20> 'Handler::Flags' EnumConstant 0x55c8108806b0 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x55c810883a90 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x55c810883bb8 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810883a70 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x55c810883a50 <col:16> 'Handler::Flags' EnumConstant 0x55c810880780 'f_user0' 'Handler::Flags'
|-EnumDecl 0x55c810883bd0 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x55c810883c90 <col:25> "" ""
| |-EnumConstantDecl 0x55c810883d40 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x55c810883e20 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810883d20 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55c810883d00 <col:14> 'Handler::Flags' EnumConstant 0x55c81087fee0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x55c810883dd0 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x55c810883e38 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810883db0 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x55c810883d90 <col:17> 'Handler::Flags' EnumConstant 0x55c81087ff70 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55c810883fb8 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x55c810883e60 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x55c810883ee0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x55c810887e10 <col:70, line:284:5>
|   |-ParenExpr 0x55c810887c30 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x55c810887c00 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x55c810887930 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c810887900 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x55c8108878a8 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x55c810887888 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x55c810887858 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x55c810887778 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55c8108847b0
|   |   |   |   |   `-CXXThisExpr 0x55c810887768 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x55c810887870 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x55c810887838 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x55c810887818 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x55c8108877e8 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x55c8108877a8 <col:34> 'Handler::Flags' EnumConstant 0x55c81087fd30 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x55c810887800 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x55c8108877c8 <col:43> 'Handler::Flags' EnumConstant 0x55c810880810 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x55c8108878e8 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x55c8108878c8 <col:69> 'Handler::Flags' EnumConstant 0x55c81087fd30 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x55c810887990 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c810887970 <col:85> 'int' 0
|   |   `-CallExpr 0x55c810887b60 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x55c810887b48 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c810887b28 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c810887ba0 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c810887a00 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x55c810887bb8 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c810887a50 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x55c810887bd0 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c810887a88 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x55c810887be8 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c810887b10 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c810887af8 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c810887aa8 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x55c810887e00 <line:283:2, col:38>
|     `-ExprWithCleanups 0x55c810887de8 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x55c810887db8 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55c810887da0 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55c810887d80 <col:9, col:38> 'String' (CXXTemporary 0x55c810887d80)
|             `-CallExpr 0x55c810887d18 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x55c810887d00 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x55c810887c90 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x55c8108842c0
|               |   `-MemberExpr 0x55c810887c60 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x55c810884388
|               |     `-CXXThisExpr 0x55c810887c50 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55c810887d48 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55c810887cc0 <col:22> 'Element *' lvalue ParmVar 0x55c810883e60 'e' 'Element *'
|               `-ImplicitCastExpr 0x55c810887d60 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x55c810887ce0 <col:25> 'void *' lvalue ParmVar 0x55c810883ee0 'new_user_data' 'void *'
|-AccessSpecDecl 0x55c810884068 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55c8108840a0 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x55c8108840f0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55c810884240 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55c8108842c0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x55c8108850b8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55c8108850b8
| | `-ParmVarDecl 0x55c8108851c8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x55c810885268 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55c810885268
| | `-ParmVarDecl 0x55c810885378 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x55c8108853e8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55c8108853e8
| |-CXXMethodDecl 0x55c810885cb8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55c810885cb8
| | `-ParmVarDecl 0x55c810885dc8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x55c810885e38 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55c810885e38
| | `-ParmVarDecl 0x55c810885f48 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x55c810b40808 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55c810b408e0 <col:5>
|-FieldDecl 0x55c810884388 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x55c8108843f0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55c810884518 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55c8108845a0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x55c810885518 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55c810885518
| | `-ParmVarDecl 0x55c810885628 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x55c8108856c8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55c8108856c8
| | `-ParmVarDecl 0x55c8108857d8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x55c810885848 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55c810885848
| |-CXXMethodDecl 0x55c810885fe8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55c810885fe8
| | `-ParmVarDecl 0x55c8108860f8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x55c810886168 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55c810886168
| | `-ParmVarDecl 0x55c810886278 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x55c810b40940 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55c810b40a20 <col:5>
|-FieldDecl 0x55c810884668 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x55c8108846e8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x55c810884750 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x55c8108847b0 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x55c810884818 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x55c810884880 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x55c8108848e0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x55c810884a00 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x55c810884958 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x55c810886640 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55c810886628 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x55c810886610 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55c8108865f0 <col:30, col:37> 'String' (CXXTemporary 0x55c8108865f0)
|           `-CXXTemporaryObjectExpr 0x55c8108865b8 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x55c810884ba8 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x55c810884ae8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x55c810884d28 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x55c810884c60 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x55c810884ee8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x55c810884f28 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x55c810884f28
| `-ParmVarDecl 0x55c810885008 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x55c810885958 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x55c810885958
| `-ParmVarDecl 0x55c810885a68 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x55c810885b08 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x55c810885b08
| `-ParmVarDecl 0x55c810885c18 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x55c8108862e8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x55c8108862e8
| `-ParmVarDecl 0x55c8108863f8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x55c810886480 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x55c810886480

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810b27c88 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x55c810b27e98 prev 0x55c810b27c88 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c810b28eb0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55c810b28e60 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x55c810b28e40 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x55c810b28cf0 'type'
|     `-SubstTemplateTypeParmType 0x55c810953fc0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55c8105fd290 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8105fd238 'T'
|       `-RecordType 0x55c810953b10 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55c810953a28 'sized_array_memory'
|-FieldDecl 0x55c810b28fb0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55c810b29020 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c810b29058 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x55c810b27f30 'void *' sugar
|   |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c8106333f8 'T'
|   `-PointerType 0x55c810317ce0 'void *'
|     `-BuiltinType 0x55c8103174e0 'void'
|-TypedefDecl 0x55c810b290e8 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x55c810b290b0 'void *&'
|   `-SubstTemplateTypeParmType 0x55c810b27f30 'void *' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-PointerType 0x55c810317ce0 'void *'
|       `-BuiltinType 0x55c8103174e0 'void'
|-TypedefDecl 0x55c810b291a8 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x55c810b29170 'void *const &'
|   `-QualType 0x55c810b27f31 'void *const' const
|     `-SubstTemplateTypeParmType 0x55c810b27f30 'void *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c810317ce0 'void *'
|         `-BuiltinType 0x55c8103174e0 'void'
|-TypedefDecl 0x55c810b29238 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x55c810b29200 'void **'
|   `-SubstTemplateTypeParmType 0x55c810b27f30 'void *' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-PointerType 0x55c810317ce0 'void *'
|       `-BuiltinType 0x55c8103174e0 'void'
|-TypedefDecl 0x55c810b292c8 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x55c810b29290 'void *const *'
|   `-QualType 0x55c810b27f31 'void *const' const
|     `-SubstTemplateTypeParmType 0x55c810b27f30 'void *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c810317ce0 'void *'
|         `-BuiltinType 0x55c8103174e0 'void'
|-TypedefDecl 0x55c810b29eb0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x55c810b29e60 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x55c810b29e40 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x55c810b29dd0 'type'
|     `-SubstTemplateTypeParmType 0x55c810b29b90 'void *' sugar
|       |-TemplateTypeParmType 0x55c810605490 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c810605440 'T'
|       `-PointerType 0x55c810317ce0 'void *'
|         `-BuiltinType 0x55c8103174e0 'void'
|-TypedefDecl 0x55c810b29f18 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x55c810b29170 'void *const &'
|   `-QualType 0x55c810b27f31 'void *const' const
|     `-SubstTemplateTypeParmType 0x55c810b27f30 'void *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c810317ce0 'void *'
|         `-BuiltinType 0x55c8103174e0 'void'
|-TypedefDecl 0x55c810b29f70 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810b29fd8 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x55c810b29200 'void **'
|   `-SubstTemplateTypeParmType 0x55c810b27f30 'void *' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-PointerType 0x55c810317ce0 'void *'
|       `-BuiltinType 0x55c8103174e0 'void'
|-TypedefDecl 0x55c810b2a040 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x55c810b29290 'void *const *'
|   `-QualType 0x55c810b27f31 'void *const' const
|     `-SubstTemplateTypeParmType 0x55c810b27f30 'void *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c810317ce0 'void *'
|         `-BuiltinType 0x55c8103174e0 'void'
|-EnumDecl 0x55c810b2a098 <line:134:5> col:5
| `-EnumConstantDecl 0x55c810b2a190 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c810b2a170 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c810634618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c8106345f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c8106345d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c810b2a218 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c810b2a468 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b2a2d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810b2a370 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x55c810b2a728 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x55c810b2a610 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x55c810b2a9e8 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x55c810b2a8d0 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55c810b2ad30 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x55c810b2ac10 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x55c810b2b040 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x55c810b2af20 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55c810b2b330 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b2b178 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810b2b1f0 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55c810b2b488 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55c810b2b568 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b2b5c0 <col:30> Inherited
|-CXXMethodDecl 0x55c810b2b608 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55c810b2b6b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b2b710 <col:30> Inherited
|-CXXMethodDecl 0x55c810b2b7d8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55c810b2b888 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b2b8e0 <col:30> Inherited
|-CXXMethodDecl 0x55c810b2b928 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55c810b2b9d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b2ba30 <col:30> Inherited
|-CXXMethodDecl 0x55c810b2ba78 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55c810b2bb28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b2bb80 <col:30> Inherited
|-CXXMethodDecl 0x55c810b2bbc8 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55c810b2bc78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810b2bcd0 <col:30> Inherited
|-CXXMethodDecl 0x55c810b2bcf8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810b2bda8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810b2be58 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c810b2c018 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b2bf08 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810b2bf80 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55c810b2c168 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c810b2c0d8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b2c318 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x55c810b2c220 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810b2c3d0 <col:20>
| `-OptimizeNoneAttr 0x55c810b2c428 <col:30>
|-CXXMethodDecl 0x55c810b2c548 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55c810b2c450 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810b2c600 <col:20>
| `-OptimizeNoneAttr 0x55c810b2c658 <col:30>
|-CXXMethodDecl 0x55c810b2c710 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810b2c680 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b2c858 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810b2c7c8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b2c988 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x55c810b2cab8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x55c810b2cb88 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x55c810b2cc58 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x55c810b2cd98 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810b2cd08 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b2cee0 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810b2ce50 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810b2d028 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55c810b2cf98 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810b2d0e0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c810b2d1e0 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c810b2d150 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810b2d298 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c810b2d358 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x55c810b2d458 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x55c810b2d5d8 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810b2d518 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x55c810b2dd98 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c810b2d690 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x55c810b2dcf8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x55c810b2dbf8 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x55c810b2de78 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c810b2dfc8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810b2df38 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55c810b2e080 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c810b2e2c8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810b2e140 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55c810b2e1b8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55c810b2e488 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x55c810b2e398 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55c810b2e6d8 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x55c810b2e550 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55c810b2e5c8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55c810b2e798 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c810b2e9f8 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x55c810b2e900 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x55c810b2eac8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55c810b2eac8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810b2ecc0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55c810b2edd8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x55c810b2ee68 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x55c810b2ef70 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x55c810b2efc0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810b2ef50 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x55c810b2ef30 <col:27> 'int' 4096
|-FieldDecl 0x55c810b2efe8 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x55c810b2f050 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x55c810b2f248 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x55c810b2f2d8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x55c810b2f498 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x55c810b2f338 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x55c810b2f3b0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x55c810b2efe8 'name' 'String'
| | `-CXXConstructExpr 0x55c810b3b728 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55c810b3b6e8 <col:20> 'const String' lvalue ParmVar 0x55c810b2f338 'n' 'const String &'
| |-CXXCtorInitializer Field 0x55c810b2f050 'nsig' 'int'
| | `-IntegerLiteral 0x55c810b3b780 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x55c810b2f248 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x55c810b3b868 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55c810b2f2d8 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x55c810b3b828 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x55c810b3b7e8 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55c810b2f3b0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x55c810b3baf8 <col:42, line:289:9>
|   `-CallExpr 0x55c810b3baa8 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x55c810b3ba90 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55c810b3ba70 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55c81057fe78 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55c810b3bae0 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x55c810b3b9b8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x55c810b3b998 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x55c810b3b980 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c810b3b930 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55c810b2f248
|     |     |   `-CXXThisExpr 0x55c810b3b920 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x55c810b3b960 <col:25> 'int' 0
|     |-IntegerLiteral 0x55c810b3b9d0 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55c810b3ba50 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x55c810b3ba30 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x55c810b3ba00 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55c810b2f248 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55c810b3b9f0 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x55c810b2f578 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55c810b2f578
| `-ParmVarDecl 0x55c810b2f688 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x55c810b2f728 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55c810b2f728
| `-ParmVarDecl 0x55c810b2f838 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x55c810b2f8d8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55c810b2f8d8
| `-ParmVarDecl 0x55c810b2f9e8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x55c810b2fa58 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55c810b2fa58
| `-ParmVarDecl 0x55c810b2fb68 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x55c810b2fbf0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55c810b2fbf0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810aebc50 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c810aebd68 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x55c810aebdf8 <col:21, col:27> col:21 public
|-EnumDecl 0x55c810aebe20 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x55c810aebf38 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x55c810aebf18 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55c810aebf00 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c810aebee0 <col:32> 'int' 1
| `-EnumConstantDecl 0x55c810aebfe0 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x55c810aebfc0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55c810aebfa8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55c810aebf88 <col:53> 'int' 1000
|-CXXConstructorDecl 0x55c810aec090 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x55c810aec5c8 <col:19, col:21>
|-CXXDestructorDecl 0x55c810aec180 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x55c810aec5d8 <col:28, col:30>
|-CXXMethodDecl 0x55c810aec340 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x55c810aec270 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x55c810aec448 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x55c810aec448
  `-ParmVarDecl 0x55c810aec558 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810aecb80 prev 0x55c810acee00 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55c810aecc78 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x55c810aecd08 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x55c810aecd78 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55c810aece38 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x55c810aecef8 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x55c810aecfb8 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x55c810aed078 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x55c810aed118 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x55c810aed278 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x55c810aed258 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x55c810aed238 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x55c810aed200 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x55c810aed1e0 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x55c810aed218 <col:42> 'int' 1
|-CXXMethodDecl 0x55c810aed2e8 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x55c810aed458 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55c810aed398 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x55c810aed5a0 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55c810aed510 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x55c810aed668 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x55c810aed990 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x55c810aeda58 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x55c810aedbd8 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x55c810aedb10 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55c810aedca0 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x55c810aedea8 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x55c810aedd50 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x55c810aeddd0 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x55c810aee000 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x55c810aedf70 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x55c810aee150 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x55c810aee0c0 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x55c810aee2a0 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x55c810aee210 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x55c810aee3f0 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x55c810aee360 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x55c810aee5c0 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x55c810aee4b0 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x55c810aee528 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x55c810aee7c8 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55c810aee680 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x55c810aee6f8 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55c810b38160 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55c810b38140 <col:60> 'int' 0
|-CXXMethodDecl 0x55c810aeea58 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x55c810aee888 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55c810aee900 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x55c810aee978 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55c810b38198 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55c810b38178 <col:76> 'int' 0
|-CXXMethodDecl 0x55c810aeecf8 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55c810aeeb20 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55c810aeeb98 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x55c810aeec10 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55c810b381d0 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55c810b381b0 <col:84> 'int' 0
|-CXXMethodDecl 0x55c810aef050 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55c810aeedc0 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x55c810aeee38 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x55c810aeeeb8 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x55c810aeef58 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55c810aef300 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55c810aef120 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x55c810aef1a0 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x55c810aef218 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55c810aef568 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55c810aef3c8 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x55c810aef448 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x55c810aef4c0 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55c810aefa20 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55c810aef630 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55c810aef6b0 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x55c810aef758 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x55c810aef8d0 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55c810aefae0 <col:115> "" ""
|-CXXMethodDecl 0x55c810aefea0 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55c810aefb60 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55c810aefbe0 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x55c810aefc58 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x55c810aefda0 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55c810aeff60 <col:113> "" ""
|-CXXMethodDecl 0x55c810af00b0 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x55c810aeffe8 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x55c810af0280 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x55c810af0170 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x55c810af01e8 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x55c810af0488 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x55c810af0340 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x55c810af03b8 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x55c810af0888 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55c810af0548 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55c810af05c0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55c810af0638 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55c810af06b8 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x55c810af0730 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c810b38208 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c810b381e8 <col:137> 'int' 0
|-CXXMethodDecl 0x55c810af0c98 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55c810af0960 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x55c810af09d8 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x55c810af0a50 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55c810af0ad0 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x55c810af0b48 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c810b38240 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c810b38220 <col:139> 'int' 0
|-CXXMethodDecl 0x55c810af1148 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x55c810af0d70 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x55c810af0de8 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x55c810af0e60 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c810af0ed8 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55c810af0f58 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x55c810b38278 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x55c810b38258 <col:133> 'int' 0
| `-ParmVarDecl 0x55c810af0fd8 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x55c810b382b0 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55c810b38290 <col:160> 'int' 0
|-CXXMethodDecl 0x55c810af14e0 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55c810af1228 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55c810af12a0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55c810af1318 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c810af1390 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c810b382e8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c810b382c8 <col:116> 'int' 0
|-EnumDecl 0x55c810af15a0 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x55c810af16a0 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x55c810af16f0 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810af1680 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x55c810af1660 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x55c810af1870 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x55c810af1718 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x55c810af1790 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x55c810af1a88 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x55c810af1930 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x55c810af19b0 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x55c810af1db8 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x55c810af1b48 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x55c810af1ca0 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x55c810af1f40 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x55c810af1e78 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x55c810af2960 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x55c810af1ff8 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x55c810af2b70 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x55c810af2a18 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x55c810af2a98 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x55c810af2cf8 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x55c810af2c30 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x55c810af2e18 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x55c810af2f08 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x55c810af3078 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x55c810af2fb8 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x55c810af3200 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x55c810af3130 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x55c810af3408 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x55c810af32b8 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x55c810af3338 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x55c810af3538 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x55c810af3628 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x55c810af36e8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x55c810af38e8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55c810af3798 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x55c810af3810 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55c810b38398 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55c810b38380 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x55c810b38368 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55c810b38348 <col:58, col:65> 'String' (CXXTemporary 0x55c810b38348)
|           `-CXXTemporaryObjectExpr 0x55c810b38310 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x55c810af3ab8 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55c810af39a8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55c810af3a20 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55c810b38448 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55c810b38430 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55c810b38418 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55c810b383f8 <col:71, col:78> 'String' (CXXTemporary 0x55c810b383f8)
|           `-CXXTemporaryObjectExpr 0x55c810b383c0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55c810af3c88 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55c810af3b78 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55c810af3bf0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55c810b384f8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55c810b384e0 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55c810b384c8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55c810b384a8 <col:71, col:78> 'String' (CXXTemporary 0x55c810b384a8)
|           `-CXXTemporaryObjectExpr 0x55c810b38470 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55c810af3e58 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55c810af3d48 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x55c810af3dc0 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55c810b385a8 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55c810b38590 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x55c810b38578 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55c810b38558 <col:70, col:77> 'String' (CXXTemporary 0x55c810b38558)
|           `-CXXTemporaryObjectExpr 0x55c810b38520 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x55c810af3fd8 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x55c810af3f18 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x55c810af41f8 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x55c810af4090 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x55c810af4108 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x55c810af42f8 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x55c810af42f8
|-CXXMethodDecl 0x55c810af4400 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55c810af44c0 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55c810af4580 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x55c810af4640 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55c810af4838 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x55c810af46f0 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x55c810af4768 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x55c810af4bf0 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x55c810af48f8 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x55c810af4970 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x55c810af49e8 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x55c810af4a60 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x55c810af4ae0 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x55c810af4f50 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x55c810af4cd0 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x55c810af4d50 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x55c810af4dd0 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x55c810af4e50 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x55c810af5030 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x55c810af5170 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x55c810af50e0 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x55c810af52c0 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55c810af5228 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c810af54c8 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x55c810af5378 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x55c810af53f0 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c810af5618 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x55c810af5588 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c810af5760 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x55c810af56d0 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x55c810af59a0 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x55c810af5820 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55c810af58c8 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x55c810af5b28 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x55c810af5a60 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x55c810af5bd0 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c810af5ce8 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x55c810af5d90 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x55c810af5df8 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x55c810af5eb0 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x55c810b385d0 <col:16, line:150:9>
| |-CXXConstructorDecl 0x55c810af6088 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x55c810af5f70 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x55c810af5ff0 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x55c810af5d90 'idx' 'int'
| | | `-ImplicitCastExpr 0x55c810b38620 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55c810b385e0 <col:19> 'int' lvalue ParmVar 0x55c810af5f70 'i' 'int'
| | |-CXXCtorInitializer Field 0x55c810af5df8 'port' 'int'
| | | `-ImplicitCastExpr 0x55c810b386a0 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55c810b38660 <col:28> 'int' lvalue ParmVar 0x55c810af5ff0 'p' 'int'
| | `-CompoundStmt 0x55c810b386f0 <col:31, line:153:9>
| |-CXXMethodDecl 0x55c810af6268 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55c810af6178 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55c810b388f0 <col:46, line:157:9>
| |   `-ReturnStmt 0x55c810b388e0 <line:156:13, col:46>
| |     `-BinaryOperator 0x55c810b388c0 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x55c810b387c0 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55c810b38790 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55c810b38710 <col:20> 'const int' lvalue ->idx 0x55c810af5d90
| |       | |   `-CXXThisExpr 0x55c810b38700 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55c810b387a8 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55c810b38760 <col:27, col:29> 'const int' lvalue .idx 0x55c810af5d90
| |       |     `-DeclRefExpr 0x55c810b38740 <col:27> 'const Router::Port' lvalue ParmVar 0x55c810af6178 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55c810b388a0 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x55c810b38870 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55c810b387f0 <col:36> 'const int' lvalue ->port 0x55c810af5df8
| |         |   `-CXXThisExpr 0x55c810b387e0 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55c810b38888 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55c810b38840 <col:44, col:46> 'const int' lvalue .port 0x55c810af5df8
| |             `-DeclRefExpr 0x55c810b38820 <col:44> 'const Router::Port' lvalue ParmVar 0x55c810af6178 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55c810af63b0 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55c810af6320 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55c810b38af8 <col:46, line:160:9>
| |   `-ReturnStmt 0x55c810b38ae8 <line:159:13, col:46>
| |     `-BinaryOperator 0x55c810b38ac8 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x55c810b389c8 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x55c810b38998 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55c810b38918 <col:20> 'const int' lvalue ->idx 0x55c810af5d90
| |       | |   `-CXXThisExpr 0x55c810b38908 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55c810b389b0 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55c810b38968 <col:27, col:29> 'const int' lvalue .idx 0x55c810af5d90
| |       |     `-DeclRefExpr 0x55c810b38948 <col:27> 'const Router::Port' lvalue ParmVar 0x55c810af6320 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55c810b38aa8 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x55c810b38a78 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55c810b389f8 <col:36> 'const int' lvalue ->port 0x55c810af5df8
| |         |   `-CXXThisExpr 0x55c810b389e8 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55c810b38a90 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55c810b38a48 <col:44, col:46> 'const int' lvalue .port 0x55c810af5df8
| |             `-DeclRefExpr 0x55c810b38a28 <col:44> 'const Router::Port' lvalue ParmVar 0x55c810af6320 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55c810af64f8 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55c810af6468 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x55c810b38e20 <col:45, line:163:9>
| |   `-ReturnStmt 0x55c810b38e10 <line:162:13, col:65>
| |     `-BinaryOperator 0x55c810b38df0 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x55c810b38bd0 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55c810b38ba0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55c810b38b20 <col:20> 'const int' lvalue ->idx 0x55c810af5d90
| |       | |   `-CXXThisExpr 0x55c810b38b10 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55c810b38bb8 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55c810b38b70 <col:26, col:28> 'const int' lvalue .idx 0x55c810af5d90
| |       |     `-DeclRefExpr 0x55c810b38b50 <col:26> 'const Router::Port' lvalue ParmVar 0x55c810af6468 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55c810b38dd0 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x55c810b38db0 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x55c810b38cb0 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55c810b38c80 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55c810b38c00 <col:36> 'const int' lvalue ->idx 0x55c810af5d90
| |           | |   `-CXXThisExpr 0x55c810b38bf0 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55c810b38c98 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55c810b38c50 <col:43, col:45> 'const int' lvalue .idx 0x55c810af5d90
| |           |     `-DeclRefExpr 0x55c810b38c30 <col:43> 'const Router::Port' lvalue ParmVar 0x55c810af6468 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55c810b38d90 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x55c810b38d60 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55c810b38ce0 <col:52> 'const int' lvalue ->port 0x55c810af5df8
| |             |   `-CXXThisExpr 0x55c810b38cd0 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55c810b38d78 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55c810b38d30 <col:59, col:61> 'const int' lvalue .port 0x55c810af5df8
| |                 `-DeclRefExpr 0x55c810b38d10 <col:59> 'const Router::Port' lvalue ParmVar 0x55c810af6468 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55c810af6640 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55c810af65b0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55c810b39148 <col:46, line:166:9>
| |   `-ReturnStmt 0x55c810b39138 <line:165:13, col:66>
| |     `-BinaryOperator 0x55c810b39118 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x55c810b38ef8 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55c810b38ec8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55c810b38e48 <col:20> 'const int' lvalue ->idx 0x55c810af5d90
| |       | |   `-CXXThisExpr 0x55c810b38e38 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55c810b38ee0 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55c810b38e98 <col:26, col:28> 'const int' lvalue .idx 0x55c810af5d90
| |       |     `-DeclRefExpr 0x55c810b38e78 <col:26> 'const Router::Port' lvalue ParmVar 0x55c810af65b0 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55c810b390f8 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x55c810b390d8 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x55c810b38fd8 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55c810b38fa8 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55c810b38f28 <col:36> 'const int' lvalue ->idx 0x55c810af5d90
| |           | |   `-CXXThisExpr 0x55c810b38f18 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55c810b38fc0 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55c810b38f78 <col:43, col:45> 'const int' lvalue .idx 0x55c810af5d90
| |           |     `-DeclRefExpr 0x55c810b38f58 <col:43> 'const Router::Port' lvalue ParmVar 0x55c810af65b0 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55c810b390b8 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x55c810b39088 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55c810b39008 <col:52> 'const int' lvalue ->port 0x55c810af5df8
| |             |   `-CXXThisExpr 0x55c810b38ff8 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55c810b390a0 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55c810b39058 <col:60, col:62> 'const int' lvalue .port 0x55c810af5df8
| |                 `-DeclRefExpr 0x55c810b39038 <col:60> 'const Router::Port' lvalue ParmVar 0x55c810af65b0 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x55c810b39160 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x55c810b39160
| | `-ParmVarDecl 0x55c810b39278 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x55c810b39318 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x55c810b39318
| | `-ParmVarDecl 0x55c810b39428 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x55c810b394c0 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55c810b39790 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x55c810b39790
| | `-ParmVarDecl 0x55c810b39898 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x55c810b39908 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55c810b39a18 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x55c810b39d38 <col:12>
|     |-BinaryOperator 0x55c810b39bd8 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55c810b39b90 <col:12> 'int' lvalue ->idx 0x55c810af5d90
|     | | `-CXXThisExpr 0x55c810b39b80 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55c810b39bc0 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55c810b39b50 <col:12> 'int' xvalue .idx 0x55c810af5d90
|     |     `-CXXStaticCastExpr 0x55c810b39b20 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55c810b39af0 <col:12> 'Router::Port' lvalue ParmVar 0x55c810b39a18 '' 'Router::Port &&'
|     |-BinaryOperator 0x55c810b39ce0 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55c810b39c98 <col:12> 'int' lvalue ->port 0x55c810af5df8
|     | | `-CXXThisExpr 0x55c810b39c88 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55c810b39cc8 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55c810b39c58 <col:12> 'int' xvalue .port 0x55c810af5df8
|     |     `-CXXStaticCastExpr 0x55c810b39c28 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55c810b39bf8 <col:12> 'Router::Port' lvalue ParmVar 0x55c810b39a18 '' 'Router::Port &&'
|     `-ReturnStmt 0x55c810b39d28 <col:12>
|       `-UnaryOperator 0x55c810b39d10 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c810b39d00 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x55c810af6700 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c810af6818 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x55c810af6a08 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x55c810af6ac0 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x55c810af6a08 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55c810b39498 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55c810b395d0 <col:22, line:173:9>
| |-CXXConstructorDecl 0x55c810af6df8 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x55c810af6b80 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x55c810af6c00 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x55c810af6c80 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x55c810af6d00 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x55c810af6a08 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55c810b395e0 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55c810b3a018 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x55c810b39e08 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x55c810b39dd0 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x55c810b39db8 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x55c810b39aa0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55c810b39908 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x55c810b396b0 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x55c810b39698 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x55c810b39648 <col:13> 'Router::Port [2]' lvalue ->p 0x55c810af6a08
| |   |   | |   `-CXXThisExpr 0x55c810b39638 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x55c810b39678 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x55c810b39a88 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x55c810b39750 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x55c810b39720 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x55c810b396e0 <col:25> 'int' lvalue ParmVar 0x55c810af6c80 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x55c810b39738 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x55c810b39700 <col:33> 'int' lvalue ParmVar 0x55c810af6d00 'to_port' 'int'
| |   `-ExprWithCleanups 0x55c810b3a000 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x55c810b39fc8 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55c810b39fb0 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x55c810b39f90 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55c810b39908 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x55c810b39e98 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x55c810b39e80 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x55c810b39e30 <col:13> 'Router::Port [2]' lvalue ->p 0x55c810af6a08
| |       | |   `-CXXThisExpr 0x55c810b39e20 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x55c810b39e60 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x55c810b39f78 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x55c810b39f38 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x55c810b39f08 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x55c810b39ec8 <col:25> 'int' lvalue ParmVar 0x55c810af6b80 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x55c810b39f20 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x55c810b39ee8 <col:35> 'int' lvalue ParmVar 0x55c810af6c00 'from_port' 'int'
| |-CXXMethodDecl 0x55c810af6fc8 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x55c810af6ed8 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x55c810b3a5d8 <col:45, line:182:9>
| |   |-ParenExpr 0x55c810b3a4b8 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55c810b3a488 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55c810b3a158 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55c810b3a128 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55c810b3a090 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55c810b3a078 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55c810b3a038 <col:34> 'int' lvalue ParmVar 0x55c810af6ed8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55c810b3a058 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55c810b3a108 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55c810b3a0f0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55c810b3a0b0 <col:44> 'int' lvalue ParmVar 0x55c810af6ed8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55c810b3a0d0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55c810b3a1b8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55c810b3a198 <col:59> 'int' 0
| |   |   `-CallExpr 0x55c810b3a3e8 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55c810b3a3d0 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55c810b3a3b0 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55c810b3a428 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55c810b3a228 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55c810b3a440 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55c810b3a250 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55c810b3a458 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55c810b3a288 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x55c810b3a470 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55c810b3a398 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55c810b3a380 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55c810b3a328 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x55c810b3a5c8 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x55c810b3a5a8 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55c810b3a578 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55c810b3a4e8 <col:20> 'Router::Port const[2]' lvalue ->p 0x55c810af6a08
| |       |   `-CXXThisExpr 0x55c810b3a4d8 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55c810b3a590 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55c810b3a518 <col:22> 'int' lvalue ParmVar 0x55c810af6ed8 'i' 'int'
| |-CXXMethodDecl 0x55c810af7178 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x55c810af7088 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x55c810b3ab50 <col:33, line:186:9>
| |   |-ParenExpr 0x55c810b3aa70 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55c810b3aa40 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55c810b3a718 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55c810b3a6e8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55c810b3a650 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55c810b3a638 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55c810b3a5f8 <col:34> 'int' lvalue ParmVar 0x55c810af7088 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55c810b3a618 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55c810b3a6c8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55c810b3a6b0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55c810b3a670 <col:44> 'int' lvalue ParmVar 0x55c810af7088 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55c810b3a690 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55c810b3a778 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55c810b3a758 <col:59> 'int' 0
| |   |   `-CallExpr 0x55c810b3a9a0 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55c810b3a988 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55c810b3a968 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55c810b3a9e0 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55c810b3a7e8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55c810b3a9f8 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55c810b3a810 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55c810b3aa10 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55c810b3a848 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x55c810b3aa28 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55c810b3a950 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55c810b3a938 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55c810b3a8e8 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x55c810b3ab40 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x55c810b3ab20 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55c810b3aaf0 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55c810b3aaa0 <col:20> 'Router::Port [2]' lvalue ->p 0x55c810af6a08
| |       |   `-CXXThisExpr 0x55c810b3aa90 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55c810b3ab08 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55c810b3aad0 <col:22> 'int' lvalue ParmVar 0x55c810af7088 'i' 'int'
| |-CXXMethodDecl 0x55c810af7318 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x55c810af7258 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x55c810b3b048 <col:52, line:190:9>
| |   `-ReturnStmt 0x55c810b3b038 <line:189:13, col:51>
| |     `-BinaryOperator 0x55c810b3b018 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x55c810b3ada0 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x55c810b3ad88 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x55c810b3ad40 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55c810af6268 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x55c810b3abe8 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x55c810b3abd0 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x55c810b3ab80 <col:20> 'Router::Port const[2]' lvalue ->p 0x55c810af6a08
| |       | | |   `-CXXThisExpr 0x55c810b3ab70 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x55c810b3abb0 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x55c810b3ac90 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x55c810b3ac78 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x55c810b3ac28 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x55c810af6a08
| |       |   |   `-DeclRefExpr 0x55c810b3ac08 <col:28> 'const Router::Connection' lvalue ParmVar 0x55c810af7258 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x55c810b3ac58 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x55c810b3afe0 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x55c810b3afc8 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x55c810b3afa8 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55c810af6268 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x55c810b3ae50 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x55c810b3ae38 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x55c810b3ade8 <col:38> 'Router::Port const[2]' lvalue ->p 0x55c810af6a08
| |         | |   `-CXXThisExpr 0x55c810b3add8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x55c810b3ae18 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x55c810b3aef8 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x55c810b3aee0 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x55c810b3ae90 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55c810af6a08
| |           |   `-DeclRefExpr 0x55c810b3ae70 <col:46> 'const Router::Connection' lvalue ParmVar 0x55c810af7258 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x55c810b3aec0 <col:50> 'int' 1
| `-CXXMethodDecl 0x55c810af7460 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x55c810af73d0 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x55c810b3b6d0 <col:51, line:193:9>
|     `-ReturnStmt 0x55c810b3b6c0 <line:192:13, col:69>
|       `-BinaryOperator 0x55c810b3b6a0 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x55c810b3b208 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x55c810b3b1f0 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x55c810b3b1d0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55c810af64f8 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x55c810b3b0d8 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x55c810b3b0c0 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x55c810b3b070 <col:20> 'Router::Port const[2]' lvalue ->p 0x55c810af6a08
|         | | |   `-CXXThisExpr 0x55c810b3b060 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x55c810b3b0a0 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x55c810b3b180 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x55c810b3b168 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x55c810b3b118 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x55c810af6a08
|         |   |   `-DeclRefExpr 0x55c810b3b0f8 <col:27> 'const Router::Connection' lvalue ParmVar 0x55c810af73d0 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x55c810b3b148 <col:31> 'int' 0
|         `-ParenExpr 0x55c810b3b680 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x55c810b3b660 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x55c810b3b448 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x55c810b3b430 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x55c810b3b410 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55c810af6268 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x55c810b3b2b8 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x55c810b3b2a0 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x55c810b3b250 <col:38> 'Router::Port const[2]' lvalue ->p 0x55c810af6a08
|             | | |   `-CXXThisExpr 0x55c810b3b240 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x55c810b3b280 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x55c810b3b360 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x55c810b3b348 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x55c810b3b2f8 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55c810af6a08
|             |   |   `-DeclRefExpr 0x55c810b3b2d8 <col:46> 'const Router::Connection' lvalue ParmVar 0x55c810af73d0 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x55c810b3b328 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x55c810b3b628 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x55c810b3b610 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55c810b3b5f0 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55c810af64f8 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x55c810b3b4f8 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x55c810b3b4e0 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x55c810b3b490 <col:56> 'Router::Port const[2]' lvalue ->p 0x55c810af6a08
|               | |   `-CXXThisExpr 0x55c810b3b480 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x55c810b3b4c0 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x55c810b3b5a0 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x55c810b3b588 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x55c810b3b538 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x55c810af6a08
|                 |   `-DeclRefExpr 0x55c810b3b518 <col:63> 'const Router::Connection' lvalue ParmVar 0x55c810af73d0 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x55c810b3b568 <col:67> 'int' 1
|-AccessSpecDecl 0x55c810af7520 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x55c810af7548 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x55c810af7600 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x55c810af76c0 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55c810af7710 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55c810af7760 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55c810af77b0 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x55c810af7800 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x55c810af7850 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x55c810af7968 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55c810af7948 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x55c810af7930 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c810af7910 <col:25> 'int' 2
| |-EnumConstantDecl 0x55c810af7a10 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55c810af79f0 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x55c810af79d8 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c810af79b8 <col:48> 'int' 1
| |-EnumConstantDecl 0x55c810af7aa0 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55c810af7a80 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x55c810af7a60 <col:71> 'int' 0
| |-EnumConstantDecl 0x55c810af7b30 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55c810af7b10 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x55c810af7af0 <col:30> 'int' 1
| `-EnumConstantDecl 0x55c810af7bc0 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x55c810af7ba0 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x55c810af7b80 <col:50> 'int' 2
|-FieldDecl 0x55c810af7c20 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x55c810af7c80 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x55c810af7ce8 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x55c810af7d88 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x55c810af7d68 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x55c810af7d38 <col:30> 'int' 1
|-FieldDecl 0x55c810af7e28 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x55c810af7e08 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x55c810af7dd8 <col:33> 'int' 1
|-FieldDecl 0x55c810af7ec8 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x55c810af7ea8 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x55c810af7e78 <col:32> 'int' 1
|-FieldDecl 0x55c810af7f30 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x55c810af7f90 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x55c810b06190 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x55c810b06290 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55c810b06390 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55c810b0e6f0 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x55c810b0e800 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x55c810b0e850 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55c810b0e968 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x55c810b0ea08 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x55c810b0ea68 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x55c810b0eb00 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55c810b0eb00
| | `-ParmVarDecl 0x55c810b0ec18 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x55c810b0ecb8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55c810b0ecb8
| | `-ParmVarDecl 0x55c810b0edc8 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x55c810b0ee68 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55c810b0ee68
| | `-ParmVarDecl 0x55c810b0ef78 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x55c810b0efe8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55c810b0efe8
| | `-ParmVarDecl 0x55c810b0f0f8 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x55c810b0f180 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55c810b0f180
|-FieldDecl 0x55c810b1ba30 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x55c810b1ba90 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55c810b1bba0 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55c810b1bef8 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x55c810b1c000 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55c810b27200 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x55c810b27310 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55c810b27410 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55c810b27520 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55c810b27630 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55c810b27740 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55c810b27850 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x55c810b278a0 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x55c810b279a0 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x55c810b279f0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810b27980 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x55c810b27960 <col:29> 'int' 256
|-FieldDecl 0x55c810b27a50 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x55c810b27ab8 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x55c810b27b20 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x55c810b27c20 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55c810b2ebb0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x55c810b2ec10 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x55c810b2ec70 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x55c810b2ecc0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55c810b2edd8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x55c810b2ee68 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x55c810b2ef70 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x55c810b2efc0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55c810b2ef50 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x55c810b2ef30 <col:27> 'int' 4096
| |-FieldDecl 0x55c810b2efe8 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x55c810b2f050 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x55c810b2f248 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x55c810b2f2d8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x55c810b2f498 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x55c810b2f338 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x55c810b2f3b0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x55c810b2efe8 'name' 'String'
| | | `-CXXConstructExpr 0x55c810b3b728 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x55c810b3b6e8 <col:20> 'const String' lvalue ParmVar 0x55c810b2f338 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x55c810b2f050 'nsig' 'int'
| | | `-IntegerLiteral 0x55c810b3b780 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x55c810b2f248 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x55c810b3b868 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x55c810b2f2d8 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x55c810b3b828 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55c810b3b7e8 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55c810b2f3b0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x55c810b3baf8 <col:42, line:289:9>
| |   `-CallExpr 0x55c810b3baa8 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55c810b3ba90 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55c810b3ba70 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55c81057fe78 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55c810b3bae0 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x55c810b3b9b8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x55c810b3b998 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x55c810b3b980 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x55c810b3b930 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55c810b2f248
| |     |     |   `-CXXThisExpr 0x55c810b3b920 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x55c810b3b960 <col:25> 'int' 0
| |     |-IntegerLiteral 0x55c810b3b9d0 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55c810b3ba50 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x55c810b3ba30 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x55c810b3ba00 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55c810b2f248 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x55c810b3b9f0 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x55c810b2f578 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55c810b2f578
| | `-ParmVarDecl 0x55c810b2f688 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x55c810b2f728 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55c810b2f728
| | `-ParmVarDecl 0x55c810b2f838 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x55c810b2f8d8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55c810b2f8d8
| | `-ParmVarDecl 0x55c810b2f9e8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x55c810b2fa58 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55c810b2fa58
| | `-ParmVarDecl 0x55c810b2fb68 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x55c810b2fbf0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55c810b2fbf0
|-FieldDecl 0x55c810b2fce0 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x55c810b2fd40 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x55c810b2fda0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x55c810b2fe00 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x55c810b2fe60 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x55c810b2ff70 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55c810b30070 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55c810b300d0 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x55c810b30218 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x55c810b30158 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x55c810b303c8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x55c810b302d8 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x55c810b30510 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x55c810b30480 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x55c810b308b8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x55c810b305c8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x55c810b30640 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x55c810b306c0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x55c810b30738 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x55c810b307b0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c810b385c0 <col:57> 'bool' false
|-CXXMethodDecl 0x55c810b30a28 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55c810b30990 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55c810b30b78 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55c810b30ae0 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x55c810b30cc8 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55c810b30c30 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x55c810b30e20 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x55c810b30d88 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x55c810b35e10 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x55c810b30ed8 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x55c810b30f50 <col:50> col:54 'bool'
| |-ParmVarDecl 0x55c810b35ca0 <col:56> col:59 'int'
| `-ParmVarDecl 0x55c810b35d18 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x55c810b35f78 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55c810b35ee0 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x55c810b36040 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x55c810b36100 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x55c810b36300 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x55c810b361b0 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x55c810b36228 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x55c810b363d0 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x55c810b36518 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x55c810b36480 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x55c810b3bd30 <col:42, line:326:5>
|   `-ReturnStmt 0x55c810b3bd20 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x55c810b3bd08 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x55c810b3bce8 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x55c810b3bcb8 <col:16, col:45> '<bound member function type>' .back 0x55c810a2a9d8
|           `-ArraySubscriptExpr 0x55c810b3bc38 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x55c810b3bc08 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c810b3bb20 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x55c810b1bef8
|             |   `-CXXThisExpr 0x55c810b3bb10 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x55c810b3bc20 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x55c810b3bb50 <col:38> 'bool' lvalue ParmVar 0x55c810b36480 'isout' 'bool'
|-CXXMethodDecl 0x55c810b366e8 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x55c810b365d0 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x55c810b36648 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x55c810b36840 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x55c810b367a8 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x55c810b36ae8 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x55c810b368f8 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x55c810b36970 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x55c810b369f0 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x55c810b36cc0 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x55c810b36bb0 <col:30> col:34 'bool'
| `-ParmVarDecl 0x55c810b36c28 <col:36> col:40 'bool'
|-CXXMethodDecl 0x55c810b36e48 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x55c810b36d88 <col:30> col:33 'int'
|-CXXMethodDecl 0x55c810b370e0 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x55c810b36f08 <col:23> col:26 'int'
| |-ParmVarDecl 0x55c810b36f80 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x55c810b36ff8 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x55c810b372f8 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x55c810b371a8 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x55c810b37220 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x55c810b37508 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x55c810b373c0 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x55c810b37438 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x55c810b37688 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x55c810b375c8 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x55c810b37888 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x55c810b37740 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x55c810b377b8 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x55c810b37a60 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c810b37948 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x55c810b379c8 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x55c810b37d40 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55c810b37b20 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x55c810b37b98 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55c810b37c18 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x55c810b37c90 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x55c810b37e20 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55c810b37e80 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x55c810b38100 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x55c810b38000 parent 0x55c810888b70 prev 0x55c8108977d8 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x55c810b37ee0 <col:36> col:39 'int'
    `-ParmVarDecl 0x55c810b37f60 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810888b70 prev 0x55c8108888f0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c810888c68 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55c810888cf8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55c810888d58 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x55c810888e48 <line:32:5, col:22> col:13 ~Element 'void () noexcept' virtual
|-VarDecl 0x55c810888f48 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55c810889118 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55c810888fc8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55c810889040 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55c8108892a8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55c8108891e0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55c810889350 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55c810889488 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55c8108893c0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55c810889628 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55c810889568 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55c8108897c8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55c810889708 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55c810889870 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55c810889970 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55c810889a50 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810889950 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55c810889930 <col:26> 'int' 1
| `-EnumConstantDecl 0x55c810889a00 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55c810889a68 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c8108899e0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55c8108899c0 <col:44> 'int' 2
|-CXXMethodDecl 0x55c810889bb0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55c810889a98 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55c810889b18 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55c810889d08 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55c810889c78 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55c810889f48 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55c810889dc8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55c810889e40 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55c810889ff8 <col:20>
| `-OptimizeNoneAttr 0x55c81088a050 <col:30>
|-CXXMethodDecl 0x55c81088a158 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55c81088a090 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55c81088a200 <col:20>
| `-OptimizeNoneAttr 0x55c81088a258 <col:30>
|-CXXMethodDecl 0x55c81088a2a8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55c81088a370 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55c81088a488 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55c81088a550 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55c81088a5d8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55c81088a660 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55c81088a6e8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55c81088a778 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55c81088a838 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55c81088a8c0 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x55c81088a948 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55c81088a9d0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55c81088aa58 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55c81088aae0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55c81088ab70 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55c81088ac30 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55c81088acc0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55c81088ae10 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55c81088ad78 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55c81088afa0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55c81088aed0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55c81088b240 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55c81088b058 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55c81088b0d8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55c81088b158 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55c81088b2f8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55c81088b400 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c81088b690 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81088b3e0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55c81088b3c0 <col:33> 'int' 0
| |-EnumConstantDecl 0x55c81088b490 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c81088b6a8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81088b470 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55c81088b450 <col:32> 'int' 20
| |-EnumConstantDecl 0x55c81088b520 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c81088b6c0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81088b500 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55c81088b4e0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55c81088b5b0 <line:83:9, col:35> col:9 referenced CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c81088b6d8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81088b590 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55c81088b570 <col:35> 'int' 100
| `-EnumConstantDecl 0x55c81088b640 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55c81088b6f0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c81088b620 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55c81088b600 <col:32> 'int' 2000
|-CXXMethodDecl 0x55c81088b730 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55c81088bb70 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55c81088b9e0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55c81088ba58 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c81088bc40 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55c81088bdc0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55c81088bcf0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c81088bfc8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55c81088be78 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55c81088bef0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c81088c0c8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55c81088c168 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55c81088c230 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c81088c2c0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55c81088c4f0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81088c2a0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55c81088c280 <col:36> 'int' EnumConstant 0x55c81088c230 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c81088c310 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c81088c360 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c81088c3b0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c81088c400 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c81088c450 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55c81088c4a0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55c81088c5d8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55c81088c518 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55c81088c6a0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55c81088c760 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55c81088c820 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55c81088c8e0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55c81088c9f8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55c81088cac0 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x55c81088cc40 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55c81088cb70 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55c81088cd68 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55c81088cf68 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55c81088ce18 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55c81088ce98 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55c8108998c8 <col:54, line:127:5>
|   |-ParenExpr 0x55c810899778 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55c810899748 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55c810899438 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55c810899410 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55c8108993f8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55c8108993e0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55c8108993b0 <col:31> 'Router *' lvalue ->_router 0x55c810897290
|   |   |         `-CXXThisExpr 0x55c8108993a0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55c810899498 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c810899478 <col:48> 'int' 0
|   |   `-CallExpr 0x55c8108996a8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55c810899690 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c810899670 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c8108996e8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c810899508 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55c810899700 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c810899528 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55c810899718 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c810899560 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55c810899730 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c810899658 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c810899640 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c8108995f8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55c810899810 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55c8108997a8 <col:9> 'Router *' lvalue ->_router 0x55c810897290
|   | | `-CXXThisExpr 0x55c810899798 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55c8108997f8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c8108997d8 <col:19> 'Router *' lvalue ParmVar 0x55c81088ce18 'r' 'Router *'
|   `-BinaryOperator 0x55c8108998a8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55c810899840 <col:9> 'int' lvalue ->_eindex 0x55c8108972f8
|     | `-CXXThisExpr 0x55c810899830 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55c810899890 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55c810899870 <col:19> 'int' lvalue ParmVar 0x55c81088ce98 'eindex' 'int'
|-CXXMethodDecl 0x55c81088d0f0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55c81088d028 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55c81088d1c0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55c81088d288 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55c81088d328 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55c81088d578 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55c81088d3f0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55c81088d470 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55c81088d628 <col:20>
| `-OptimizeNoneAttr 0x55c81088d680 <col:30>
|-CXXMethodDecl 0x55c81088d788 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55c81088d6c0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55c81088d830 <col:20>
| `-OptimizeNoneAttr 0x55c81088d888 <col:30>
|-CXXMethodDecl 0x55c81088d958 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55c81088d8c8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55c81088da00 <col:20>
| `-OptimizeNoneAttr 0x55c81088da58 <col:30>
|-CXXMethodDecl 0x55c81088dbe8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55c81088da90 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55c81088db10 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55c81088dd78 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55c81088dcb0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55c81088dec8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55c81088de38 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55c81088e018 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55c81088df88 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55c81088e168 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55c81088e0d8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55c81088e428 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55c81088e220 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55c81088e2a0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55c81088e348 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55c81088e560 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55c81088e620 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55c81088e8f0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55c81088e7a0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55c81088e818 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55c81088ea18 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55c81088ebf0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55c81088ead0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55c81088eb50 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55c81088edd8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55c81088ecb8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55c81088ed38 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55c81088f148 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55c81088ee98 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55c81088ef10 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55c81088ef90 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55c810898eb0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55c810898e90 <col:106> 'int' 0
| `-ParmVarDecl 0x55c81088f008 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c810898ee8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c810898ec8 <col:126> 'int' 0
|-CXXMethodDecl 0x55c81088f4c8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c81088f218 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55c81088f290 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55c81088f310 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55c81088f388 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c810898f20 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c810898f00 <col:114> 'int' 0
|-CXXMethodDecl 0x55c81088f858 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c81088f5a0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55c81088f618 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55c81088f698 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55c810898f38 <col:96> 'int' 0
| `-ParmVarDecl 0x55c81088f710 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c810898f78 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c810898f58 <col:116> 'int' 0
|-CXXMethodDecl 0x55c81088fbd8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55c81088f928 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55c81088f9a0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55c81088fa20 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55c810898fb0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55c810898f90 <col:109> 'int' 0
| `-ParmVarDecl 0x55c81088fa98 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c810898fe8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c810898fc8 <col:129> 'int' 0
|-CXXMethodDecl 0x55c81088ff58 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c81088fca8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55c81088fd20 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55c81088fda0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55c81088fe18 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c810899020 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c810899000 <col:117> 'int' 0
|-CXXMethodDecl 0x55c8108902e8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c810890030 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c8108900a8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55c810890128 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55c810899038 <col:99> 'int' 0
| `-ParmVarDecl 0x55c8108901a0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c810899078 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c810899058 <col:119> 'int' 0
|-CXXMethodDecl 0x55c810890708 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55c8108903b8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55c810890438 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55c8108904b0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55c810890530 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55c8108990b0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55c810899090 <col:108> 'int' 0
| `-ParmVarDecl 0x55c8108905b0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55c8108990e8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55c8108990c8 <col:141> 'int' 0
|-CXXMethodDecl 0x55c810890b28 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55c8108907e0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55c810890860 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55c8108908d8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55c810890958 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55c8108909d8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55c810899100 <col:121> 'int' 0
|-CXXMethodDecl 0x55c810890f58 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55c810890c08 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55c810890c88 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55c810890d00 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55c810890d80 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55c810899120 <col:98> 'int' 0
| `-ParmVarDecl 0x55c810890e00 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55c810899140 <col:123> 'int' 0
|-CXXMethodDecl 0x55c810891220 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55c810891030 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55c8108910b0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55c810891130 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55c810899160 <col:80> 'int' 0
|-EnumDecl 0x55c8108912d8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55c8108913e0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c810891670 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108913c0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55c8108913a0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55c810891470 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c810891688 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810891450 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55c810891430 <col:40> 'int' 2
| |-EnumConstantDecl 0x55c810891500 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c8108916a0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108914e0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55c8108914c0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55c810891590 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c8108916b8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810891570 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55c810891550 <col:36> 'int' 7
| `-EnumConstantDecl 0x55c810891620 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55c8108916d0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810891600 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55c8108915e0 <col:34> 'int' 6
|-CXXMethodDecl 0x55c810891988 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55c8108916f8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55c810891798 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55c810891818 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55c810891890 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55c810899218 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55c810899200 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55c8108991e8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55c8108991c8 <col:98, col:105> 'String' (CXXTemporary 0x55c8108991c8)
|           `-CXXTemporaryObjectExpr 0x55c810899190 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55c810891c28 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55c810891a58 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55c810891ad0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55c810891b48 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55c8108992c8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55c8108992b0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55c810899298 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55c810899278 <col:94, col:101> 'String' (CXXTemporary 0x55c810899278)
| |         `-CXXTemporaryObjectExpr 0x55c810899240 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55c810899ab0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55c810899a28 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55c8108999f8 <col:9> '<bound member function type>' ->add_task_handlers 0x55c810891988
|     | `-CXXThisExpr 0x55c8108999e8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55c810899a68 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c810899968 <col:27> 'Task *' lvalue ParmVar 0x55c810891a58 'task' 'Task *'
|     |-ImplicitCastExpr 0x55c810899a80 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c810899988 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55c810891ad0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55c810899a98 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55c8108999a8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55c810891620 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55c8108999c8 <col:62> 'const String' lvalue ParmVar 0x55c810891b48 'prefix' 'const String &'
|-CXXMethodDecl 0x55c810891e38 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55c810891cf0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55c810891d68 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55c810899378 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55c810899360 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55c810899348 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55c810899328 <col:70, col:77> 'String' (CXXTemporary 0x55c810899328)
| |         `-CXXTemporaryObjectExpr 0x55c8108992f0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55c810899c88 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55c810899c00 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55c810899bd0 <col:9> '<bound member function type>' ->add_task_handlers 0x55c810891988
|     | `-CXXThisExpr 0x55c810899bc0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55c810899c40 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c810899b40 <col:27> 'Task *' lvalue ParmVar 0x55c810891cf0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55c810899c58 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55c810899b60 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55c810899c70 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55c810899b80 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55c810891620 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55c810899ba0 <col:57> 'const String' lvalue ParmVar 0x55c810891d68 'prefix' 'const String &'
|-CXXMethodDecl 0x55c810892118 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55c810891f00 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c810891f80 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c810891ff8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55c8108923c8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55c8108921e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c810892268 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c8108922e8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55c810892708 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55c810892498 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c810892570 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c8108925e8 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55c8108929b8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55c8108927d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c810892858 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c8108928d8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55c810892c68 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55c810892a88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c810892b08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c810892b88 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55c810892f18 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55c810892d38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c810892db8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c810892e30 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55c8108931c8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55c810892fe8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c810893068 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c8108930e8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55c810893478 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55c810893298 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c810893318 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c810893398 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55c810893758 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55c810893548 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c8108935c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c810893670 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55c810893a38 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55c810893828 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c8108938a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c810893950 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55c810893ca0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55c810893b08 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55c810893b88 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55c810893c00 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55c810893f48 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55c810893d70 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55c810893df0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55c810893e68 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55c8108941f8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55c810894018 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c810894098 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c810894118 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55c8108944a8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55c8108942c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c810894348 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c8108943c0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55c810894758 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55c810894578 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c8108945f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c810894670 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55c810894a28 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55c810894828 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c8108948a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c810894948 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55c810894d58 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55c810894af8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c810894b78 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55c810894bf0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55c810894c68 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c810899390 <col:93> 'bool' false
|-CXXMethodDecl 0x55c810894f40 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c810894e28 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55c810894ea8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55c810895118 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c810895000 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55c810895080 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55c8108953f8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55c8108951d8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55c810895250 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55c8108952d0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55c810895348 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55c8108956e8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55c8108954c8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55c810895540 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55c8108955c0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55c810895638 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55c810895920 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55c8108957c0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55c810895840 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55c810895b08 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55c8108959e8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55c810895a68 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55c810895bb8 prev 0x55c81088d328 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c810895cb0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55c810895d40 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55c810895db8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55c810895e78 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55c810895f40 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55c8108960b8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55c810895ff0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55c810896160 <col:24>
| | `-OptimizeNoneAttr 0x55c8108961b8 <col:34>
| |-CXXMethodDecl 0x55c810896200 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55c8108964b8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55c8108962b0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55c810896328 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55c8108963a8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55c810896580 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55c8108965b8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55c810896620 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55c8108966a8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55c8108969c8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55c810896760 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55c8108967d8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55c810896850 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55c8108968d0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55c810896ae0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55c810807ad8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55c810807ad8
| | `-ParmVarDecl 0x55c810807be8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55c810807c88 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55c810807c88
| | `-ParmVarDecl 0x55c810807d98 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55c810b41000 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c810896b58 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55c810896bf8 <col:38> "" ""
|-CXXMethodDecl 0x55c810896c88 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55c810896d28 <col:44> "" ""
|-AccessSpecDecl 0x55c810896d98 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55c810896dc0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55c810896ec0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55c810896f10 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810896ea0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55c810896e80 <col:27> 'int' 4
|-FieldDecl 0x55c810896fc8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55c810897178 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55c810897230 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55c810897290 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55c8108972f8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55c810897448 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55c810897388 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55c8108975f8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55c810897508 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55c8108977d8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55c8108976b8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55c810897738 <col:25> col:28 'int'
|-CXXMethodDecl 0x55c810897a80 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55c8108978a0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55c810897920 <col:28> col:31 'int'
| `-ParmVarDecl 0x55c810897998 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55c810897b38 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55c810897c00 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55c810897c50 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55c810897ca0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55c810897e80 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55c810897d30 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55c810897da8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c810898128 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55c810897f48 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55c810897fc8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55c810898040 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55c810898348 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55c8108981f8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55c810898278 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55c810898680 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55c810898408 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55c810898488 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55c810898500 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55c810898580 <col:57> col:60 'int'
|-CXXMethodDecl 0x55c810898868 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c810898750 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55c8108987d0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55c8108989b8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55c810898928 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55c810898d38 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55c810898a78 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55c810898af8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55c810898b70 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55c810898bf0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55c810898e50 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashContainer_adapter<class IPRewriterEntry> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |   class IPRewriterEntry ** buckets
         8 |   uint32_t nbuckets
        12 |   uint32_t first_bucket
        16 |   size_t size
        24 |   struct libdivide_u32_t bucket_divider
        24 |     uint32_t magic
        28 |     uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
         0 |     class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |     class IPRewriterEntry ** buckets
         8 |     uint32_t nbuckets
        12 |     uint32_t first_bucket
        16 |     size_t size
        24 |     struct libdivide_u32_t bucket_divider
        24 |       uint32_t magic
        28 |       uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<56> >
         0 |   vector_memory<class sized_array_memory<56> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterInput>
         0 |   class vector_memory<class sized_array_memory<56> > vm_
         0 |     vector_memory<class sized_array_memory<56> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterBase
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |     class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |       class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |       class IPRewriterEntry ** buckets
       120 |       uint32_t nbuckets
       124 |       uint32_t first_bucket
       128 |       size_t size
       136 |       struct libdivide_u32_t bucket_divider
       136 |         uint32_t magic
       140 |         uint8_t more
       144 |   class Vector<class IPRewriterInput> _input_specs
       144 |     class vector_memory<class sized_array_memory<56> > vm_
       144 |       vector_memory<class sized_array_memory<56> >::type * l_
       152 |       vector_memory::size_type n_
       156 |       vector_memory::size_type capacity_
       160 |   class IPRewriterHeap * _heap
       168 |   uint32_t [2] _timeouts
       176 |   uint32_t _gc_interval_sec
       184 |   class Timer _gc_timer
       184 |     int _schedpos1
       192 |     class Timestamp _expiry_s
       192 |       union Timestamp::rep_t _t
       192 |         int64_t x
       200 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |       TimerCallback callback
       208 |     void * _thunk
       216 |     class Element * _owner
       224 |     class RouterThread * _thread
           | [sizeof=232, dsize=232, align=8,
           |  nvsize=232, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c8109351b8 <../dummy_inc/click/hashcontainer.hh:13:1, col:29> line:33:7 class HashContainer_adapter definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IPRewriterEntry'
|-CXXRecordDecl 0x55c8109682f8 prev 0x55c8109351b8 <col:1, col:7> col:7 implicit class HashContainer_adapter
|-AccessSpecDecl 0x55c810968388 <col:31, col:37> col:31 public
|-TypedefDecl 0x55c810968480 <line:34:5, col:34> col:34 referenced key_type 'typename IPRewriterEntry::key_type':'IPFlowID'
| `-ElaboratedType 0x55c810968430 'typename IPRewriterEntry::key_type' sugar
|   `-TypedefType 0x55c810968410 'IPRewriterEntry::key_type' sugar
|     |-Typedef 0x55c810936d00 'key_type'
|     `-RecordType 0x55c81092b8a0 'IPFlowID'
|       `-CXXRecord 0x55c81092b810 'IPFlowID'
|-TypedefDecl 0x55c810968550 <line:35:5, col:45> col:45 key_const_reference 'typename IPRewriterEntry::key_const_reference':'const IPFlowID &'
| `-ElaboratedType 0x55c810968500 'typename IPRewriterEntry::key_const_reference' sugar
|   `-TypedefType 0x55c810937740 'IPRewriterEntry::key_const_reference' sugar
|     |-Typedef 0x55c810936d68 'key_const_reference'
|     `-LValueReferenceType 0x55c81092dd30 'const IPFlowID &'
|       `-QualType 0x55c81092b8a1 'const IPFlowID' const
|         `-RecordType 0x55c81092b8a0 'IPFlowID'
|           `-CXXRecord 0x55c81092b810 'IPFlowID'
|-CXXMethodDecl 0x55c810968740 <line:36:5, line:38:5> line:36:16 hashnext 'IPRewriterEntry *&(IPRewriterEntry *)' static
| `-ParmVarDecl 0x55c810968648 <col:25, col:28> col:28 e 'IPRewriterEntry *'
|-CXXMethodDecl 0x55c810968948 <line:39:5, line:41:5> line:39:32 hashkey 'HashContainer_adapter<IPRewriterEntry>::key_const_reference (const IPRewriterEntry *)' static
| `-ParmVarDecl 0x55c810968858 <col:40, col:49> col:49 e 'const IPRewriterEntry *'
|-CXXMethodDecl 0x55c810968ba8 <line:42:5, line:44:5> line:42:17 hashkeyeq 'bool (const HashContainer_adapter<IPRewriterEntry>::key_type &, const HashContainer_adapter<IPRewriterEntry>::key_type &)' static
| |-ParmVarDecl 0x55c810968a58 <col:27, col:43> col:43 a 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
| `-ParmVarDecl 0x55c810968ad0 <col:46, col:62> col:62 b 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
|-CXXConstructorDecl 0x55c81096cc28 <line:33:7> col:7 implicit constexpr HashContainer_adapter 'void (const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x55c81096cc28
| `-ParmVarDecl 0x55c81096cd38 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
|-CXXConstructorDecl 0x55c81096cdd8 <col:7> col:7 implicit constexpr HashContainer_adapter 'void (HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x55c81096cdd8
| `-ParmVarDecl 0x55c81096cee8 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'
|-CXXDestructorDecl 0x55c81096d0f8 <col:7> col:7 implicit ~HashContainer_adapter 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c81096d238 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x55c81096d238
| `-ParmVarDecl 0x55c81096d348 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
`-CXXMethodDecl 0x55c81096d3b8 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x55c81096d3b8
  `-ParmVarDecl 0x55c81096d4c8 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_adapter = type { i8 }
  NonVirtualBaseLLVMType:%class.HashContainer_adapter = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810687f00 prev 0x55c8105fe668 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c810687ff8 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x55c810688088 <col:19, col:25> col:19 public
|-TypedefDecl 0x55c8106880c0 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55c810473ba0 'uninitialized_type'
|   `-CXXRecord 0x55c810473b08 'uninitialized_type'
|-CXXConstructorDecl 0x55c810688180 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x55c81068fa40 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55c81068fae8 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c81068faa8 <col:10> 'int' 0
| `-CompoundStmt 0x55c81068fb30 <col:13, line:22:5>
|-CXXConstructorDecl 0x55c8106882d0 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x55c810688240 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x55c81068fa40 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55c81068fb80 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x55c81068fb40 <col:10> 'unsigned int' lvalue ParmVar 0x55c810688240 'x' 'unsigned int'
| `-CompoundStmt 0x55c81068fbc8 <col:13, line:27:5>
|-CXXConstructorDecl 0x55c810688428 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x55c810688398 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x55c81068fa40 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55c81068fc30 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55c81068fc18 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x55c81068fbd8 <col:10> 'int' lvalue ParmVar 0x55c810688398 'x' 'int'
| `-CompoundStmt 0x55c81068fc78 <col:13, line:31:5>
|-CXXConstructorDecl 0x55c810688580 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x55c8106884f0 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x55c81068fa40 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55c81068fce0 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55c81068fcc8 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x55c81068fc88 <col:10> 'unsigned long' lvalue ParmVar 0x55c8106884f0 'x' 'unsigned long'
| `-CompoundStmt 0x55c81068fd28 <col:13, line:35:5>
|-CXXConstructorDecl 0x55c8106886d8 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x55c810688648 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x55c81068fa40 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55c81068fd90 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55c81068fd78 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x55c81068fd38 <col:10> 'long' lvalue ParmVar 0x55c810688648 'x' 'long'
| `-CompoundStmt 0x55c81068fdd8 <col:13, line:39:5>
|-CXXConstructorDecl 0x55c810688898 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x55c8106887a8 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x55c81068fa40 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55c81068fe58 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55c81068fe08 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x55c8105b6600
| |     `-DeclRefExpr 0x55c81068fde8 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x55c8106887a8 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x55c81068fea0 <col:20, line:44:5>
|-CXXConstructorDecl 0x55c81068db70 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x55c810688960 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x55c810690008 <col:51, line:56:5>
|   `-BinaryOperator 0x55c81068ffe8 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55c81068fec0 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x55c81068fa40
|     | `-CXXThisExpr 0x55c81068feb0 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x55c81068ffd0 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55c81068ffb8 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x55c81068ff98 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x55c81068ff68 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x55c81068ff50 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x55c81068fef0 <col:47> 'const unsigned char *' lvalue ParmVar 0x55c810688960 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x55c81068dcc0 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x55c81068dc30 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x55c81068de68 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55c81068dda8 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x55c810690078 <col:56, line:68:5>
|   `-CStyleCastExpr 0x55c810690050 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55c810690020 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55c81068dda8 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x55c81068dff8 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x55c81068df30 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x55c81068e0e8 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x55c810691038 <col:46, line:83:5>
|   `-ReturnStmt 0x55c810691028 <line:82:2, col:29>
|     `-ExprWithCleanups 0x55c810691010 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x55c810690fe0 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c810690e98 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x55c810690d80 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x55c810690c68 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x55c8106900a0 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x55c81068e1d8 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x55c8106910e8 <col:31, line:88:5>
|   `-ReturnStmt 0x55c8106910d8 <line:87:2, col:10>
|     `-UnaryOperator 0x55c8106910c0 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x55c8106910a8 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55c810691090 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x55c810691060 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55c81068fa40
|             `-CXXThisExpr 0x55c810691050 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55c81068e298 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x55c810691168 <col:34, line:93:5>
|   `-ReturnStmt 0x55c810691158 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x55c810691140 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55c810691110 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55c81068fa40
|         `-CXXThisExpr 0x55c810691100 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x55c81068e368 <line:99:5, line:101:5> line:99:12 used operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x55c8106911e8 <col:38, line:101:5>
|   `-ReturnStmt 0x55c8106911d8 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x55c8106911c0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55c810691190 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55c81068fa40
|         `-CXXThisExpr 0x55c810691180 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55c81068e438 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x55c8106914b8 <col:38, line:108:5>
|   `-ReturnStmt 0x55c8106914a8 <line:107:2, col:58>
|     `-BinaryOperator 0x55c810691488 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x55c8106913a0 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x55c810691380 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55c810691368 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55c810691210 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55c81068fa40
|       |   |   `-CXXThisExpr 0x55c810691200 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55c810691340 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55c810691328 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55c8106912a8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55c8105c3ae8 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55c810691288 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x55c810691460 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55c810691448 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55c810691428 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x55c8105c3ae8 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55c810691408 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x55c81068e4f8 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x55c810691728 <col:39, line:112:5>
|   `-ReturnStmt 0x55c810691718 <line:111:2, col:56>
|     `-BinaryOperator 0x55c8106916f8 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x55c810691610 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x55c8106915f0 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55c8106915d8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55c8106914e0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55c81068fa40
|       |   |   `-CXXThisExpr 0x55c8106914d0 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55c8106915b0 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55c810691598 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55c810691578 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55c8105c3ae8 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55c810691558 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x55c8106916d0 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55c8106916b8 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55c810691698 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x55c8105c3ae8 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55c810691678 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x55c81068e628 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x55c81068e730 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x55c81068e840 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x55c81068e930 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55c81068e9f0 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55c81068eab8 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x55c81068ecb8 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x55c81068eb68 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x55c81068ebe0 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x55c81068ee38 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55c81068ed78 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x55c81068ef80 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55c81068eef0 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x55c81068f128 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55c81068f038 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55c81068f270 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55c81068f1e0 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55c81068f3b8 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55c81068f328 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55c81068f480 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x55c81068f540 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x55c81068f6b8 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x55c81068f5f0 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x55c81068f780 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x55c81068f868 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55c81068f910 <col:51> "" ""
|-TypedefDecl 0x55c81068f9b0 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x55c8105fe700 'IPAddress'
|   `-CXXRecord 0x55c810687f00 'IPAddress'
|-AccessSpecDecl 0x55c81068fa08 <line:150:3, col:10> col:3 private
|-FieldDecl 0x55c81068fa40 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55c8106900e8 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c8106901f8 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x55c81068fa40 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55c81092e268 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55c81092e220 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x55c81068fa40
| |     `-DeclRefExpr 0x55c81092e200 <col:7> 'const IPAddress' lvalue ParmVar 0x55c8106901f8 '' 'const IPAddress &'
| `-CompoundStmt 0x55c81092e2b0 <col:7>
|-CXXConstructorDecl 0x55c810690298 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55c8106903a8 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x55c81068fa40 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55c810690f88 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55c810690f40 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x55c81068fa40
| |     `-CXXStaticCastExpr 0x55c810690f10 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x55c810690ee0 <col:7> 'IPAddress' lvalue ParmVar 0x55c8106903a8 '' 'IPAddress &&'
| `-CompoundStmt 0x55c810690fd0 <col:7>
|-CXXDestructorDecl 0x55c810690c98 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c81092eb58 <col:7> col:7 implicit used operator= 'IPAddress &(const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c81092ec68 <col:7> col:7 used 'const IPAddress &'
| `-CompoundStmt 0x55c81092efc0 <col:7>
|   |-BinaryOperator 0x55c81092ef68 <col:7> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x55c81092ef20 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x55c81068fa40
|   | | `-CXXThisExpr 0x55c81092ef10 <col:7> 'IPAddress *' this
|   | `-ImplicitCastExpr 0x55c81092ef50 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x55c81092eee0 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x55c81068fa40
|   |     `-DeclRefExpr 0x55c81092eec0 <col:7> 'const IPAddress' lvalue ParmVar 0x55c81092ec68 '' 'const IPAddress &'
|   `-ReturnStmt 0x55c81092efb0 <col:7>
|     `-UnaryOperator 0x55c81092ef98 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c81092ef88 <col:7> 'IPAddress *' this
`-CXXMethodDecl 0x55c81092ecd8 <col:7> col:7 implicit operator= 'IPAddress &(IPAddress &&)' inline default trivial noexcept-unevaluated 0x55c81092ecd8
  `-ParmVarDecl 0x55c81092ede8 <col:7> col:7 'IPAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c81092b810 <../dummy_inc/click/ipflowid.hh:9:1, line:143:1> line:9:7 referenced class IPFlowID definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c81092b928 <col:1, col:7> col:7 implicit referenced class IPFlowID
|-AccessSpecDecl 0x55c81092b9b8 <col:18, col:24> col:18 public
|-TypedefDecl 0x55c81092b9f0 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55c810473ba0 'uninitialized_type'
|   `-CXXRecord 0x55c810473b08 'uninitialized_type'
|-CXXConstructorDecl 0x55c81092bab0 <line:17:5, line:19:5> line:17:5 used IPFlowID 'void ()'
| |-CXXCtorInitializer Field 0x55c81092d9b8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55c81092df88 <line:18:4, col:11> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55c81092da18 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55c81092dff0 <col:14, col:21> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55c81092da78 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55c81092e080 <col:31> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x55c81092e040 <col:31> 'int' 0
| |-CXXCtorInitializer Field 0x55c81092dad8 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55c81092e100 <col:42> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x55c81092e0c0 <col:42> 'int' 0
| `-CompoundStmt 0x55c81092e160 <col:45, line:19:5>
|-CXXConstructorDecl 0x55c81092be18 <line:26:5, line:28:5> line:26:5 used IPFlowID 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x55c81092bb68 <col:14, col:24> col:24 used saddr 'IPAddress'
| |-ParmVarDecl 0x55c81092bbe0 <col:31, col:40> col:40 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x55c81092bc58 <col:47, col:57> col:57 used daddr 'IPAddress'
| |-ParmVarDecl 0x55c81092bcd0 <col:64, col:73> col:73 used dport 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x55c81092d9b8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55c81092e2c0 <line:27:4, col:16> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x55c81092e1b0 <col:11> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x55c81092e170 <col:11> 'IPAddress' lvalue ParmVar 0x55c81092bb68 'saddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x55c81092da18 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55c81092e370 <col:19, col:31> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x55c81092e358 <col:26> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x55c81092e318 <col:26> 'IPAddress' lvalue ParmVar 0x55c81092bc58 'daddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x55c81092da78 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55c81092e408 <col:41> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x55c81092e3c8 <col:41> 'uint16_t':'unsigned short' lvalue ParmVar 0x55c81092bbe0 'sport' 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x55c81092dad8 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55c81092e488 <col:56> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x55c81092e448 <col:56> 'uint16_t':'unsigned short' lvalue ParmVar 0x55c81092bcd0 'dport' 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55c81092e4e8 <col:63, line:28:5>
|-CXXConstructorDecl 0x55c81092c038 <line:37:5, col:60> col:14 IPFlowID 'void (const Packet *, bool)'
| |-ParmVarDecl 0x55c81092bef0 <col:23, col:37> col:37 p 'const Packet *'
| `-ParmVarDecl 0x55c81092bf68 <col:40, col:55> col:45 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c81092df50 <col:55> 'bool' false
|-CXXConstructorDecl 0x55c81092c248 <line:47:5, col:64> col:14 IPFlowID 'void (const click_ip *, bool)'
| |-ParmVarDecl 0x55c81092c100 <col:23, col:39> col:39 iph 'const click_ip *'
| `-ParmVarDecl 0x55c81092c178 <col:44, col:59> col:49 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c81092df60 <col:59> 'bool' false
|-CXXConstructorDecl 0x55c81092c3a0 <line:50:5, line:52:5> line:50:12 IPFlowID 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55c81092c310 <col:21, col:47> col:47 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x55c81092d9b8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55c81092e4f8 <col:12> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55c81092da18 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55c81092e548 <col:12> 'IPAddress' 'void ()'
| `-CompoundStmt 0x55c81092e600 <col:55, line:52:5>
|   `-CStyleCastExpr 0x55c81092e5d8 <line:51:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55c81092e5a8 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55c81092c310 'unused' 'const uninitialized_type &'
|-TypedefDecl 0x55c81092c558 <line:55:5, col:60> col:35 referenced unspecified_bool_type 'IPAddress (IPFlowID::*)() const'
| `-MemberPointerType 0x55c81092c4d0 'IPAddress (IPFlowID::*)() const'
|   |-RecordType 0x55c81092b8a0 'IPFlowID'
|   | `-CXXRecord 0x55c81092b810 'IPFlowID'
|   `-ParenType 0x55c81092c470 'IPAddress () const' sugar
|     `-FunctionProtoType 0x55c810854640 'IPAddress () const' const cdecl
|       `-RecordType 0x55c8105fe700 'IPAddress'
|         `-CXXRecord 0x55c810687f00 'IPAddress'
|-CXXConversionDecl 0x55c81092c698 <line:57:5, line:59:5> line:57:5 operator IPAddress (IPFlowID::*)() const 'IPFlowID::unspecified_bool_type () const'
| `-CompoundStmt 0x55c81092e8b0 <col:44, line:59:5>
|   `-ReturnStmt 0x55c81092e8a0 <line:58:2, col:47>
|     `-ConditionalOperator 0x55c81092e870 <col:9, col:47> 'IPAddress (IPFlowID::*)() const'
|       |-BinaryOperator 0x55c81092e798 <col:9, col:19> 'bool' '||'
|       | |-ImplicitCastExpr 0x55c81092e768 <col:9> 'bool' <IntegralToBoolean>
|       | | `-ImplicitCastExpr 0x55c81092e6e8 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | |   `-CXXMemberCallExpr 0x55c81092e6c8 <col:9> 'uint32_t':'unsigned int'
|       | |     `-MemberExpr 0x55c81092e698 <col:9> '<bound member function type>' .operator unsigned int 0x55c81068e368
|       | |       `-MemberExpr 0x55c81092e628 <col:9> 'const IPAddress' lvalue ->_saddr 0x55c81092d9b8
|       | |         `-CXXThisExpr 0x55c81092e618 <col:9> 'const IPFlowID *' implicit this
|       | `-ImplicitCastExpr 0x55c81092e780 <col:19> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55c81092e750 <col:19> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x55c81092e730 <col:19> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x55c81092e700 <col:19> '<bound member function type>' .operator unsigned int 0x55c81068e368
|       |         `-MemberExpr 0x55c81092e668 <col:19> 'const IPAddress' lvalue ->_daddr 0x55c81092da18
|       |           `-CXXThisExpr 0x55c81092e658 <col:19> 'const IPFlowID *' implicit this
|       |-UnaryOperator 0x55c81092e820 <col:28, col:39> 'IPAddress (IPFlowID::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55c81092e7f0 <col:29, col:39> 'IPAddress () const' CXXMethod 0x55c81092c7c0 'saddr' 'IPAddress () const'
|       `-ImplicitCastExpr 0x55c81092e858 <col:47> 'IPAddress (IPFlowID::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x55c81092e838 <col:47> 'int' 0
|-CXXMethodDecl 0x55c81092c7c0 <line:63:5, line:65:5> line:63:15 used saddr 'IPAddress () const'
| `-CompoundStmt 0x55c81092e948 <col:29, line:65:5>
|   `-ReturnStmt 0x55c81092e938 <line:64:2, col:9>
|     `-CXXConstructExpr 0x55c81092e908 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55c81092e8d8 <col:9> 'const IPAddress' lvalue ->_saddr 0x55c81092d9b8
|         `-CXXThisExpr 0x55c81092e8c8 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55c81092c8d8 <line:67:5, line:69:5> line:67:14 used sport 'uint16_t () const'
| `-CompoundStmt 0x55c81092e9c8 <col:28, line:69:5>
|   `-ReturnStmt 0x55c81092e9b8 <line:68:2, col:9>
|     `-ImplicitCastExpr 0x55c81092e9a0 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x55c81092e970 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x55c81092da78
|         `-CXXThisExpr 0x55c81092e960 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55c81092c998 <line:71:5, line:73:5> line:71:15 used daddr 'IPAddress () const'
| `-CompoundStmt 0x55c81092ea60 <col:29, line:73:5>
|   `-ReturnStmt 0x55c81092ea50 <line:72:2, col:9>
|     `-CXXConstructExpr 0x55c81092ea20 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55c81092e9f0 <col:9> 'const IPAddress' lvalue ->_daddr 0x55c81092da18
|         `-CXXThisExpr 0x55c81092e9e0 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55c81092ca58 <line:75:5, line:77:5> line:75:14 used dport 'uint16_t () const'
| `-CompoundStmt 0x55c81092eae0 <col:28, line:77:5>
|   `-ReturnStmt 0x55c81092ead0 <line:76:2, col:9>
|     `-ImplicitCastExpr 0x55c81092eab8 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x55c81092ea88 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x55c81092dad8
|         `-CXXThisExpr 0x55c81092ea78 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55c81092cb98 <line:80:5, line:82:5> line:80:10 set_saddr 'void (IPAddress)'
| |-ParmVarDecl 0x55c81092cb08 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x55c81092f088 <col:33, line:82:5>
|   `-CXXOperatorCallExpr 0x55c81092f050 <line:81:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x55c81092f038 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55c81092ee70 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55c81092eb58 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x55c81092eb08 <col:2> 'IPAddress' lvalue ->_saddr 0x55c81092d9b8
|     | `-CXXThisExpr 0x55c81092eaf8 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55c81092ee58 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x55c81092eb38 <col:11> 'IPAddress' lvalue ParmVar 0x55c81092cb08 'a' 'IPAddress'
|-CXXMethodDecl 0x55c81092cd48 <line:85:5, line:87:5> line:85:10 set_sport 'void (uint16_t)'
| |-ParmVarDecl 0x55c81092cc50 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55c81092f138 <col:32, line:87:5>
|   `-BinaryOperator 0x55c81092f118 <line:86:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55c81092f0b0 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x55c81092da78
|     | `-CXXThisExpr 0x55c81092f0a0 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55c81092f100 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55c81092f0e0 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55c81092cc50 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55c81092ce90 <line:89:5, line:91:5> line:89:10 set_daddr 'void (IPAddress)'
| |-ParmVarDecl 0x55c81092ce00 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x55c81092f238 <col:33, line:91:5>
|   `-CXXOperatorCallExpr 0x55c81092f200 <line:90:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x55c81092f1e8 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55c81092f1c8 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55c81092eb58 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x55c81092f160 <col:2> 'IPAddress' lvalue ->_daddr 0x55c81092da18
|     | `-CXXThisExpr 0x55c81092f150 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55c81092f1b0 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x55c81092f190 <col:11> 'IPAddress' lvalue ParmVar 0x55c81092ce00 'a' 'IPAddress'
|-CXXMethodDecl 0x55c81092cfd8 <line:94:5, line:96:5> line:94:10 set_dport 'void (uint16_t)'
| |-ParmVarDecl 0x55c81092cf48 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55c81092f2e8 <col:32, line:96:5>
|   `-BinaryOperator 0x55c81092f2c8 <line:95:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55c81092f260 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x55c81092dad8
|     | `-CXXThisExpr 0x55c81092f250 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55c81092f2b0 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55c81092f290 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55c81092cf48 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55c81092d2a0 <line:103:5, line:108:5> line:103:10 assign 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x55c81092d090 <col:17, col:27> col:27 used saddr 'IPAddress'
| |-ParmVarDecl 0x55c81092d108 <col:34, col:43> col:43 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x55c81092d180 <col:50, col:60> col:60 used daddr 'IPAddress'
| |-ParmVarDecl 0x55c81092d1f8 <col:67, col:76> col:76 used dport 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55c81092f600 <col:83, line:108:5>
|   |-CXXOperatorCallExpr 0x55c81092f3b0 <line:104:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x55c81092f398 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55c81092f378 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55c81092eb58 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x55c81092f310 <col:2> 'IPAddress' lvalue ->_saddr 0x55c81092d9b8
|   | | `-CXXThisExpr 0x55c81092f300 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55c81092f360 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x55c81092f340 <col:11> 'IPAddress' lvalue ParmVar 0x55c81092d090 'saddr' 'IPAddress'
|   |-CXXOperatorCallExpr 0x55c81092f498 <line:105:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x55c81092f480 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55c81092f460 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55c81092eb58 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x55c81092f3f8 <col:2> 'IPAddress' lvalue ->_daddr 0x55c81092da18
|   | | `-CXXThisExpr 0x55c81092f3e8 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55c81092f448 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x55c81092f428 <col:11> 'IPAddress' lvalue ParmVar 0x55c81092d180 'daddr' 'IPAddress'
|   |-BinaryOperator 0x55c81092f548 <line:106:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55c81092f4e0 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x55c81092da78
|   | | `-CXXThisExpr 0x55c81092f4d0 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55c81092f530 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c81092f510 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55c81092d108 'sport' 'uint16_t':'unsigned short'
|   `-BinaryOperator 0x55c81092f5e0 <line:107:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55c81092f578 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x55c81092dad8
|     | `-CXXThisExpr 0x55c81092f568 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55c81092f5c8 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55c81092f5a8 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55c81092d1f8 'dport' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55c81092d3a8 <line:113:5, line:115:5> line:113:14 used reverse 'IPFlowID () const'
| `-CompoundStmt 0x55c810930138 <col:30, line:115:5>
|   `-ReturnStmt 0x55c810930128 <line:114:2, col:48>
|     `-ExprWithCleanups 0x55c810930110 <col:9, col:48> 'IPFlowID'
|       `-CXXConstructExpr 0x55c8109300e0 <col:9, col:48> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c81092fc98 <col:9, col:48> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x55c81092fb08 <col:9, col:48> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x55c81092fa78 <col:18> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55c81092f650 <col:18> 'const IPAddress' lvalue ->_daddr 0x55c81092da18
|             |   `-CXXThisExpr 0x55c81092f640 <col:18> 'const IPFlowID *' implicit this
|             |-ImplicitCastExpr 0x55c81092faa8 <col:26> 'uint16_t':'unsigned short' <LValueToRValue>
|             | `-MemberExpr 0x55c81092f690 <col:26> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x55c81092dad8
|             |   `-CXXThisExpr 0x55c81092f680 <col:26> 'const IPFlowID *' implicit this
|             |-CXXConstructExpr 0x55c81092fac0 <col:34> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55c81092f6d0 <col:34> 'const IPAddress' lvalue ->_saddr 0x55c81092d9b8
|             |   `-CXXThisExpr 0x55c81092f6c0 <col:34> 'const IPFlowID *' implicit this
|             `-ImplicitCastExpr 0x55c81092faf0 <col:42> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-MemberExpr 0x55c81092f710 <col:42> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x55c81092da78
|                 `-CXXThisExpr 0x55c81092f700 <col:42> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55c81092d468 <line:116:5, col:59> col:21 rev 'IPFlowID () const' inline
| `-DeprecatedAttr 0x55c81092d508 <col:48> "" ""
|-CXXMethodDecl 0x55c81092d598 <line:122:5, col:34> col:23 hashcode 'hashcode_t () const' inline
|-CXXMethodDecl 0x55c81092d658 <line:127:5, col:22> col:12 used unparse 'String () const'
|-CXXConversionDecl 0x55c81092d728 <line:129:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55c81092d7d0 <col:51> "" ""
|-CXXMethodDecl 0x55c81092d870 <line:130:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x55c81092d910 <col:44> "" ""
|-AccessSpecDecl 0x55c81092d980 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x55c81092d9b8 <line:135:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x55c81092da18 <line:136:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x55c81092da78 <line:137:5, col:14> col:14 referenced _sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55c81092dad8 <line:138:5, col:14> col:14 referenced _dport 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55c81092dc10 <line:140:5, col:26> col:9 unparse 'int (char *) const'
| `-ParmVarDecl 0x55c81092db40 <col:17, col:23> col:23 s 'char *'
|-FriendDecl 0x55c81092def8 <line:141:5, col:76> col:25
| `-FunctionDecl 0x55c81092de38 parent 0x55c810317488 <col:5, col:76> col:25 operator<< 'StringAccum &(StringAccum &, const IPFlowID &)'
|   |-ParmVarDecl 0x55c81092dcc8 <col:36, col:49> col:49 sa 'StringAccum &'
|   `-ParmVarDecl 0x55c81092dd68 <col:53, col:69> col:69 flow_id 'const IPFlowID &'
|-CXXConstructorDecl 0x55c81092f740 <line:9:7> col:7 implicit constexpr IPFlowID 'void (const IPFlowID &)' inline default trivial noexcept-unevaluated 0x55c81092f740
| `-ParmVarDecl 0x55c81092f858 <col:7> col:7 'const IPFlowID &'
|-CXXConstructorDecl 0x55c81092f8f8 <col:7> col:7 implicit used constexpr IPFlowID 'void (IPFlowID &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55c81092fa08 <col:7> col:7 used 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55c81092d9b8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55c81092fd88 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x55c81092fd40 <col:7> 'IPAddress' xvalue ._saddr 0x55c81092d9b8
| |     `-CXXStaticCastExpr 0x55c81092fd10 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55c81092fce0 <col:7> 'IPFlowID' lvalue ParmVar 0x55c81092fa08 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55c81092da18 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55c81092fe88 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x55c81092fe40 <col:7> 'IPAddress' xvalue ._daddr 0x55c81092da18
| |     `-CXXStaticCastExpr 0x55c81092fe10 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55c81092fde0 <col:7> 'IPFlowID' lvalue ParmVar 0x55c81092fa08 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55c81092da78 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55c81092ff88 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x55c81092ff40 <col:7> 'uint16_t':'unsigned short' xvalue ._sport 0x55c81092da78
| |     `-CXXStaticCastExpr 0x55c81092ff10 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55c81092fee0 <col:7> 'IPFlowID' lvalue ParmVar 0x55c81092fa08 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55c81092dad8 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55c810930070 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x55c810930028 <col:7> 'uint16_t':'unsigned short' xvalue ._dport 0x55c81092dad8
| |     `-CXXStaticCastExpr 0x55c81092fff8 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55c81092ffc8 <col:7> 'IPFlowID' lvalue ParmVar 0x55c81092fa08 '' 'IPFlowID &&'
| `-CompoundStmt 0x55c8109300d0 <col:7>
|-CXXDestructorDecl 0x55c81092fb58 <col:7> col:7 implicit referenced ~IPFlowID 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c810938080 <col:7> col:7 implicit used operator= 'IPFlowID &(const IPFlowID &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c810938188 <col:7> col:7 used 'const IPFlowID &'
| `-CompoundStmt 0x55c810938ce8 <col:7>
|   |-CXXMemberCallExpr 0x55c810938978 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55c810938930 <col:7> '<bound member function type>' .operator= 0x55c81092eb58
|   | | `-MemberExpr 0x55c810938840 <col:7> 'IPAddress' lvalue ->_saddr 0x55c81092d9b8
|   | |   `-CXXThisExpr 0x55c810938830 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x55c810938900 <col:7> 'const IPAddress' lvalue ._saddr 0x55c81092d9b8
|   |   `-DeclRefExpr 0x55c8109388e0 <col:7> 'const IPFlowID' lvalue ParmVar 0x55c810938188 '' 'const IPFlowID &'
|   |-CXXMemberCallExpr 0x55c810938af8 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55c810938ab0 <col:7> '<bound member function type>' .operator= 0x55c81092eb58
|   | | `-MemberExpr 0x55c8109389c0 <col:7> 'IPAddress' lvalue ->_daddr 0x55c81092da18
|   | |   `-CXXThisExpr 0x55c8109389b0 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x55c810938a80 <col:7> 'const IPAddress' lvalue ._daddr 0x55c81092da18
|   |   `-DeclRefExpr 0x55c810938a60 <col:7> 'const IPFlowID' lvalue ParmVar 0x55c810938188 '' 'const IPFlowID &'
|   |-BinaryOperator 0x55c810938bc8 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55c810938b80 <col:7> 'uint16_t':'unsigned short' lvalue ->_sport 0x55c81092da78
|   | | `-CXXThisExpr 0x55c810938b70 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x55c810938bb0 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x55c810938b40 <col:7> 'const uint16_t':'const unsigned short' lvalue ._sport 0x55c81092da78
|   |     `-DeclRefExpr 0x55c810938b20 <col:7> 'const IPFlowID' lvalue ParmVar 0x55c810938188 '' 'const IPFlowID &'
|   |-BinaryOperator 0x55c810938c90 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55c810938c48 <col:7> 'uint16_t':'unsigned short' lvalue ->_dport 0x55c81092dad8
|   | | `-CXXThisExpr 0x55c810938c38 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x55c810938c78 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x55c810938c08 <col:7> 'const uint16_t':'const unsigned short' lvalue ._dport 0x55c81092dad8
|   |     `-DeclRefExpr 0x55c810938be8 <col:7> 'const IPFlowID' lvalue ParmVar 0x55c810938188 '' 'const IPFlowID &'
|   `-ReturnStmt 0x55c810938cd8 <col:7>
|     `-UnaryOperator 0x55c810938cc0 <col:7> 'IPFlowID' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c810938cb0 <col:7> 'IPFlowID *' this
`-CXXMethodDecl 0x55c8109381f8 <col:7> col:7 implicit operator= 'IPFlowID &(IPFlowID &&)' inline default trivial noexcept-unevaluated 0x55c8109381f8
  `-ParmVarDecl 0x55c810938308 <col:7> col:7 'IPFlowID &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  NonVirtualBaseLLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810936b40 prev 0x55c810933710 <../elements/ip/iprwmapping.hh:16:1, line:65:1> line:16:7 referenced class IPRewriterEntry definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c810936c38 <col:1, col:7> col:7 implicit referenced class IPRewriterEntry
|-AccessSpecDecl 0x55c810936cc8 <col:25, col:31> col:25 public
|-TypedefDecl 0x55c810936d00 <line:18:5, col:22> col:22 referenced key_type 'IPFlowID'
| `-RecordType 0x55c81092b8a0 'IPFlowID'
|   `-CXXRecord 0x55c81092b810 'IPFlowID'
|-TypedefDecl 0x55c810936d68 <line:19:5, col:29> col:29 referenced key_const_reference 'const IPFlowID &'
| `-LValueReferenceType 0x55c81092dd30 'const IPFlowID &'
|   `-QualType 0x55c81092b8a1 'const IPFlowID' const
|     `-RecordType 0x55c81092b8a0 'IPFlowID'
|       `-CXXRecord 0x55c81092b810 'IPFlowID'
|-CXXConstructorDecl 0x55c810936e20 <line:21:5, line:22:5> line:21:5 IPRewriterEntry 'void ()'
| |-CXXCtorInitializer Field 0x55c810937880 '_flowid' 'IPFlowID'
| | `-CXXConstructExpr 0x55c810937b88 <col:5> 'IPFlowID' 'void ()'
| `-CompoundStmt 0x55c810937be0 <col:23, line:22:5>
|-CXXMethodDecl 0x55c8109370e8 <line:24:5, line:30:5> line:24:10 initialize 'void (const IPFlowID &, uint32_t, bool)'
| |-ParmVarDecl 0x55c810936ed8 <col:21, col:37> col:37 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55c810936f50 <col:45, col:54> col:54 used output 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c810936fc8 <col:62, col:67> col:67 used direction 'bool'
| `-CompoundStmt 0x55c810938fa8 <col:78, line:30:5>
|   |-ParenExpr 0x55c810938000 <line:25:2, col:164> 'void'
|   | `-ConditionalOperator 0x55c810937fd0 <col:3, col:163> 'void'
|   |   |-CXXStaticCastExpr 0x55c810937c90 <col:3, col:41> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c810937c60 <col:23, col:33> 'bool' '<='
|   |   |   |-ImplicitCastExpr 0x55c810937c30 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x55c810937bf0 <col:23> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c810936f50 'output' 'uint32_t':'unsigned int'
|   |   |   `-ImplicitCastExpr 0x55c810937c48 <col:33> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x55c810937c10 <col:33> 'int' 16777215
|   |   |-CXXFunctionalCastExpr 0x55c810937cf0 <col:45, col:52> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c810937cd0 <col:51> 'int' 0
|   |   `-CallExpr 0x55c810937f30 <col:56, col:163> 'void'
|   |     |-ImplicitCastExpr 0x55c810937f18 <col:56> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c810937ef8 <col:56> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c810937f70 <col:71> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c810937d60 <col:71> 'const char [19]' lvalue "output <= 0xFFFFFF"
|   |     |-ImplicitCastExpr 0x55c810937f88 <col:93> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c810937d90 <col:93> 'const char [30]' lvalue "../elements/ip/iprwmapping.hh"
|   |     |-ImplicitCastExpr 0x55c810937fa0 <col:126> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c810937dc8 <col:126> 'int' 25
|   |     `-ImplicitCastExpr 0x55c810937fb8 <col:130, col:144> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c810937ee0 <col:130, col:144> 'const char [67]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c810937ec8 <col:144> 'const char [67]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c810937e68 <col:144> 'const char [67]' lvalue "void IPRewriterEntry::initialize(const IPFlowID &, uint32_t, bool)"
|   |-CXXOperatorCallExpr 0x55c810938d90 <line:26:2, col:12> 'IPFlowID' lvalue
|   | |-ImplicitCastExpr 0x55c810938d78 <col:10> 'IPFlowID &(*)(const IPFlowID &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55c8109387c8 <col:10> 'IPFlowID &(const IPFlowID &) noexcept' lvalue CXXMethod 0x55c810938080 'operator=' 'IPFlowID &(const IPFlowID &) noexcept'
|   | |-MemberExpr 0x55c810938030 <col:2> 'IPFlowID' lvalue ->_flowid 0x55c810937880
|   | | `-CXXThisExpr 0x55c810938020 <col:2> 'IPRewriterEntry *' implicit this
|   | `-DeclRefExpr 0x55c810938060 <col:12> 'const IPFlowID' lvalue ParmVar 0x55c810936ed8 'flowid' 'const IPFlowID &'
|   |-BinaryOperator 0x55c810938e40 <line:27:2, col:12> 'uint32_t':'unsigned int' lvalue bitfield '='
|   | |-MemberExpr 0x55c810938dd8 <col:2> 'uint32_t':'unsigned int' lvalue bitfield ->_output 0x55c810937920
|   | | `-CXXThisExpr 0x55c810938dc8 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x55c810938e28 <col:12> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c810938e08 <col:12> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c810936f50 'output' 'uint32_t':'unsigned int'
|   |-BinaryOperator 0x55c810938ef0 <line:28:2, col:15> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55c810938e70 <col:2> 'uint8_t':'unsigned char' lvalue ->_direction 0x55c810937980
|   | | `-CXXThisExpr 0x55c810938e60 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x55c810938ed8 <col:15> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x55c810938ec0 <col:15> 'bool' <LValueToRValue>
|   |     `-DeclRefExpr 0x55c810938ea0 <col:15> 'bool' lvalue ParmVar 0x55c810936fc8 'direction' 'bool'
|   `-BinaryOperator 0x55c810938f88 <line:29:2, col:14> 'IPRewriterEntry *' lvalue '='
|     |-MemberExpr 0x55c810938f20 <col:2> 'IPRewriterEntry *' lvalue ->_hashnext 0x55c8109379e0
|     | `-CXXThisExpr 0x55c810938f10 <col:2> 'IPRewriterEntry *' implicit this
|     `-ImplicitCastExpr 0x55c810938f70 <col:14> 'IPRewriterEntry *' <NullToPointer>
|       `-IntegerLiteral 0x55c810938f50 <col:14> 'int' 0
|-CXXMethodDecl 0x55c810937218 <line:32:5, line:34:5> line:32:21 flowid 'const IPFlowID &() const'
| `-CompoundStmt 0x55c810939030 <col:36, line:34:5>
|   `-ReturnStmt 0x55c810939020 <line:33:2, col:9>
|     `-MemberExpr 0x55c810938ff0 <col:9> 'const IPFlowID' lvalue ->_flowid 0x55c810937880
|       `-CXXThisExpr 0x55c810938fe0 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55c8109372d8 <line:35:5, col:40> col:21 rewritten_flowid 'IPFlowID () const' inline
|-CXXMethodDecl 0x55c810937398 <line:37:5, line:39:5> line:37:10 direction 'bool () const'
| `-CompoundStmt 0x55c8109390c8 <col:28, line:39:5>
|   `-ReturnStmt 0x55c8109390b8 <line:38:2, col:9>
|     `-ImplicitCastExpr 0x55c8109390a0 <col:9> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55c810939088 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55c810939058 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x55c810937980
|           `-CXXThisExpr 0x55c810939048 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55c810937460 <line:41:5, line:43:5> line:41:9 output 'int () const'
| `-CompoundStmt 0x55c810939160 <col:24, line:43:5>
|   `-ReturnStmt 0x55c810939150 <line:42:2, col:9>
|     `-ImplicitCastExpr 0x55c810939138 <col:9> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55c810939120 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x55c8109390f0 <col:9> 'const uint32_t':'const unsigned int' lvalue bitfield ->_output 0x55c810937920
|           `-CXXThisExpr 0x55c8109390e0 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55c810937578 <line:45:5, line:47:5> line:45:21 flow 'IPRewriterFlow *()'
| `-CompoundStmt 0x55c810939268 <col:28, line:47:5>
|   `-ReturnStmt 0x55c810939258 <line:46:2, col:61>
|     `-CXXReinterpretCastExpr 0x55c810939228 <col:9, col:61> 'IPRewriterFlow *' reinterpret_cast<class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x55c8109391f8 <col:44, col:51> 'IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x55c810939178 <col:44> 'IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x55c8109391e0 <col:51> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55c8109391c8 <col:51> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x55c810939198 <col:51> 'uint8_t':'unsigned char' lvalue ->_direction 0x55c810937980
|               `-CXXThisExpr 0x55c810939188 <col:51> 'IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55c810937698 <line:48:5, line:50:5> line:48:27 flow 'const IPRewriterFlow *() const'
| `-CompoundStmt 0x55c810939370 <col:40, line:50:5>
|   `-ReturnStmt 0x55c810939360 <line:49:2, col:67>
|     `-CXXReinterpretCastExpr 0x55c810939330 <col:9, col:67> 'const IPRewriterFlow *' reinterpret_cast<const class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x55c810939300 <col:50, col:57> 'const IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x55c810939280 <col:50> 'const IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x55c8109392e8 <col:57> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55c8109392d0 <col:57> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x55c8109392a0 <col:57> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x55c810937980
|               `-CXXThisExpr 0x55c810939290 <col:57> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55c8109377a8 <line:52:5, line:54:5> line:52:25 used hashkey 'IPRewriterEntry::key_const_reference () const'
| `-CompoundStmt 0x55c8109393d8 <col:41, line:54:5>
|   `-ReturnStmt 0x55c8109393c8 <line:53:2, col:9>
|     `-MemberExpr 0x55c810939398 <col:9> 'const IPFlowID' lvalue ->_flowid 0x55c810937880
|       `-CXXThisExpr 0x55c810939388 <col:9> 'const IPRewriterEntry *' implicit this
|-AccessSpecDecl 0x55c810937848 <line:56:3, col:10> col:3 private
|-FieldDecl 0x55c810937880 <line:58:5, col:14> col:14 referenced _flowid 'IPFlowID'
|-FieldDecl 0x55c810937920 <line:59:5, col:24> col:14 referenced _output 'uint32_t':'unsigned int'
| `-ConstantExpr 0x55c810937900 <col:24> 'int' Int: 24
|   `-IntegerLiteral 0x55c8109378d0 <col:24> 'int' 24
|-FieldDecl 0x55c810937980 <line:60:5, col:13> col:13 referenced _direction 'uint8_t':'unsigned char'
|-FieldDecl 0x55c8109379e0 <line:61:5, col:22> col:22 referenced _hashnext 'IPRewriterEntry *'
|-FriendDecl 0x55c810937b30 <line:63:5, col:55> col:12 'class HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|-CXXConstructorDecl 0x55c8109915b8 <line:16:7> col:7 implicit constexpr IPRewriterEntry 'void (const IPRewriterEntry &)' inline default trivial noexcept-unevaluated 0x55c8109915b8
| `-ParmVarDecl 0x55c8109916c8 <col:7> col:7 'const IPRewriterEntry &'
|-CXXConstructorDecl 0x55c810991768 <col:7> col:7 implicit constexpr IPRewriterEntry 'void (IPRewriterEntry &&)' inline default trivial noexcept-unevaluated 0x55c810991768
| `-ParmVarDecl 0x55c810991878 <col:7> col:7 'IPRewriterEntry &&'
`-CXXDestructorDecl 0x55c810991a68 <col:7> col:7 implicit ~IPRewriterEntry 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  NonVirtualBaseLLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:24 IsSigned:0 StorageSize:24 StorageOffset:12>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8108c1668 <../dummy_inc/click/libdivide.h:95:1, line:98:1> line:95:8 referenced struct libdivide_u32_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c8108c1788 <col:1, col:8> col:8 implicit struct libdivide_u32_t
|-FieldDecl 0x55c8108c1828 <line:96:5, col:14> col:14 referenced magic 'uint32_t':'unsigned int'
|-FieldDecl 0x55c8108c1888 <line:97:5, col:13> col:13 referenced more 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55c8108c4970 <line:95:8> col:8 implicit used libdivide_u32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c8108c4da8 <col:8>
|-CXXConstructorDecl 0x55c8108c4a78 <col:8> col:8 implicit constexpr libdivide_u32_t 'void (const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55c8108c4a78
| `-ParmVarDecl 0x55c8108c4b88 <col:8> col:8 'const libdivide_u32_t &'
|-CXXConstructorDecl 0x55c8108c4c28 <col:8> col:8 implicit used constexpr libdivide_u32_t 'void (libdivide_u32_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55c8108c4d38 <col:8> col:8 used 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55c8108c1828 'magic' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55c8108c6c50 <col:8> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55c8108c6c20 <col:8> 'uint32_t':'unsigned int' xvalue .magic 0x55c8108c1828
| |     `-CXXStaticCastExpr 0x55c8108c6bf0 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55c8108c6bc0 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55c8108c4d38 '' 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55c8108c1888 'more' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x55c8108c6d20 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x55c8108c6cf0 <col:8> 'uint8_t':'unsigned char' xvalue .more 0x55c8108c1888
| |     `-CXXStaticCastExpr 0x55c8108c6cc0 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55c8108c6c90 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55c8108c4d38 '' 'libdivide_u32_t &&'
| `-CompoundStmt 0x55c8108c6d70 <col:8>
|-CXXDestructorDecl 0x55c8108c70e8 <col:8> col:8 implicit referenced ~libdivide_u32_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c81096d568 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55c81096d568
| `-ParmVarDecl 0x55c81096d678 <col:8> col:8 'const libdivide_u32_t &'
`-CXXMethodDecl 0x55c81096d6e8 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(libdivide_u32_t &&)' inline default trivial noexcept-unevaluated 0x55c81096d6e8
  `-ParmVarDecl 0x55c81096d7f8 <col:8> col:8 'libdivide_u32_t &&'

Layout: <CGRecordLayout
  LLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  NonVirtualBaseLLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c81096c240 <../dummy_inc/click/hashcontainer.hh:19:1, line:29:1> line:20:7 class HashContainer_rep definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_mutable_fields
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55c81096c4d8 prev 0x55c81096c240 <col:1, col:7> col:7 implicit class HashContainer_rep
|-FieldDecl 0x55c81096c640 <line:21:5, col:9> col:9 buckets 'IPRewriterEntry **'
|-FieldDecl 0x55c81096c690 <line:22:5, col:14> col:14 nbuckets 'uint32_t':'unsigned int'
|-FieldDecl 0x55c81096c6e0 <line:23:5, col:22> col:22 first_bucket 'uint32_t':'unsigned int' mutable
|-FieldDecl 0x55c81096c730 <line:24:5, col:12> col:12 size 'size_t':'unsigned long'
|-FieldDecl 0x55c81096c780 <line:25:5, col:21> col:21 bucket_divider 'libdivide_u32_t'
|-FriendDecl 0x55c81096c8d8 <line:26:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55c81096ca28 <line:27:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55c81096cb78 <line:28:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x55c81096cf70 <line:20:7> col:7 implicit constexpr HashContainer_rep 'void (const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55c81096cf70
| `-ParmVarDecl 0x55c81096d088 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55c81096ee00 <col:7> col:7 implicit constexpr operator= 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55c81096ee00
| `-ParmVarDecl 0x55c81096ef08 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXDestructorDecl 0x55c810b40f10 <col:7> col:7 implicit ~HashContainer_rep 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  NonVirtualBaseLLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810935330 <../dummy_inc/click/hashcontainer.hh:81:1, line:297:1> line:82:7 class HashContainer definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55c810968178 prev 0x55c810935330 <col:1, col:7> col:7 implicit class HashContainer
|-AccessSpecDecl 0x55c810968208 <col:23, col:29> col:23 public
|-TypedefDecl 0x55c810968cd0 <line:85:5, col:34> col:34 key_type 'typename HashContainer_adapter<IPRewriterEntry>::key_type':'IPFlowID'
| `-ElaboratedType 0x55c810968c80 'typename HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|   `-TypedefType 0x55c810968a00 'HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|     |-Typedef 0x55c810968480 'key_type'
|     `-ElaboratedType 0x55c810968430 'typename IPRewriterEntry::key_type' sugar
|       `-TypedefType 0x55c810968410 'IPRewriterEntry::key_type' sugar
|         |-Typedef 0x55c810936d00 'key_type'
|         `-RecordType 0x55c81092b8a0 'IPFlowID'
|           `-CXXRecord 0x55c81092b810 'IPFlowID'
|-TypedefDecl 0x55c810968d68 <line:90:5, col:15> col:15 value_type 'IPRewriterEntry':'IPRewriterEntry'
| `-SubstTemplateTypeParmType 0x55c810968d30 'IPRewriterEntry' sugar
|   |-TemplateTypeParmType 0x55c8108cf1d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c8108cf178 'T'
|   `-RecordType 0x55c8109337a0 'IPRewriterEntry'
|     `-CXXRecord 0x55c810936b40 'IPRewriterEntry'
|-TypedefDecl 0x55c810968dc0 <line:93:5, col:20> col:20 referenced size_type 'size_t':'unsigned long'
| `-TypedefType 0x55c8103c3980 'size_t' sugar
|   |-Typedef 0x55c810387be0 'size_t'
|   `-BuiltinType 0x55c810317640 'unsigned long'
|-TypedefDecl 0x55c810968e18 <line:96:5, col:22> col:22 referenced bucket_count_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55c810473e90 'uint32_t' sugar
|   |-Typedef 0x55c8103804c8 'uint32_t'
|   `-TypedefType 0x55c8103595a0 '__uint32_t' sugar
|     |-Typedef 0x55c810359198 '__uint32_t'
|     `-BuiltinType 0x55c810317620 'unsigned int'
|-EnumDecl 0x55c810968e70 <line:98:5> col:5
| |-EnumConstantDecl 0x55c810968fa0 <line:102:2, col:42> col:2 max_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
| | `-ConstantExpr 0x55c810968f80 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' Int: 4294967295
| |   `-CStyleCastExpr 0x55c810968f58 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' <NoOp>
| |     `-ImplicitCastExpr 0x55c810968f40 <col:41, col:42> 'HashContainer::bucket_count_type':'unsigned int' <IntegralCast> part_of_explicit_cast
| |       `-UnaryOperator 0x55c8108cf820 <col:41, col:42> 'int' prefix '-'
| |         `-IntegerLiteral 0x55c8108cf800 <col:42> 'int' 1
| `-EnumConstantDecl 0x55c810969010 <line:104:2, col:25> col:2 initial_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
|   `-ImplicitCastExpr 0x55c810969060 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810968ff0 <col:25> 'int' Int: 63
|       `-IntegerLiteral 0x55c8108cf8d8 <col:25> 'int' 63
|-CXXConstructorDecl 0x55c8109690b0 <line:108:5, col:19> col:5 HashContainer 'void ()'
|-CXXConstructorDecl 0x55c810969218 <line:111:5, col:47> col:14 used HashContainer 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55c810969168 <col:28, col:46> col:46 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXDestructorDecl 0x55c810969300 <line:114:5, col:20> col:5 used ~HashContainer 'void () noexcept'
|-CXXMethodDecl 0x55c8109693f0 <line:118:5, line:120:5> line:118:22 size 'HashContainer::size_type () const' inline
|-CXXMethodDecl 0x55c8109694a0 <line:123:5, line:125:5> line:123:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c810969550 <line:128:5, line:130:5> line:128:30 bucket_count 'HashContainer::bucket_count_type () const' inline
|-CXXMethodDecl 0x55c8109696e8 <line:133:5, line:139:5> line:133:22 bucket_size 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55c810969620 <col:34, col:52> col:52 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55c810969908 <line:142:5, col:51> col:23 bucket 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| `-ParmVarDecl 0x55c810969818 <col:30, col:46> col:46 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55c8109699c0 <line:145:5, line:147:5> line:145:17 unbalanced 'bool () const' inline
|-TypedefDecl 0x55c810969c50 <line:149:5, col:48> col:48 const_iterator 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55c810969bb0 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55c810969b90 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55c810969a90 'HashContainer_const_iterator'
|-TypedefDecl 0x55c810969e80 <line:150:5, col:42> col:42 referenced iterator 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55c810969de0 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55c810969dc0 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55c810969cc8 'HashContainer_iterator'
|-CXXMethodDecl 0x55c810969f78 <line:155:5, col:27> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55c81096a0c8 <line:157:5, col:35> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55c81096a198 <line:161:5, col:25> col:21 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55c81096a268 <line:163:5, col:33> col:27 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55c81096a408 <line:166:5, col:46> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (HashContainer::bucket_count_type)' inline
| `-ParmVarDecl 0x55c81096a318 <col:27, col:45> col:45 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55c81096a5b8 <line:168:5, col:54> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55c81096a4c0 <col:33, col:51> col:51 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55c81096a778 <line:171:5, col:47> col:17 contains 'bool (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55c81096a680 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55c81096a938 <line:173:5, col:49> col:22 count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55c81096a840 <col:28, col:44> col:44 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55c81096aaf8 <line:183:5, col:45> col:21 used find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55c81096aa00 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55c81096acb8 <line:185:5, col:53> col:27 find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55c81096abc0 <col:32, col:48> col:48 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55c81096ae10 <line:191:5, col:52> col:21 find_prefer 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55c81096ad80 <col:33, col:49> col:49 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55c81096aff8 <line:197:5, col:68> col:43 get 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| |-ParmVarDecl 0x55c81096af08 <col:47, col:63> col:63 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
| |-NoInlineAttr 0x55c81096b0b0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c81096b108 <col:30> Inherited
|-CXXMethodDecl 0x55c81096b328 <line:219:5, col:51> col:17 insert_at 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55c81096b198 <col:27, col:37> col:37 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| `-ParmVarDecl 0x55c81096b210 <col:41, col:44> col:44 element 'IPRewriterEntry *'
|-CXXMethodDecl 0x55c81096b5f8 <line:239:5, col:58> col:8 set 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *, bool)'
| |-ParmVarDecl 0x55c81096b3f8 <col:12, col:22> col:22 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| |-ParmVarDecl 0x55c81096b470 <col:26, col:29> col:29 element 'IPRewriterEntry *'
| `-ParmVarDecl 0x55c81096b4d8 <col:38, col:53> col:43 balance 'bool'
|-CXXMethodDecl 0x55c81096b7c8 <line:249:5, col:57> col:43 set 'IPRewriterEntry *(IPRewriterEntry *)'
| |-ParmVarDecl 0x55c81096b6d0 <col:47, col:50> col:50 element 'IPRewriterEntry *'
| |-NoInlineAttr 0x55c81096b880 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c81096b8d8 <col:30> Inherited
|-CXXMethodDecl 0x55c81096ba08 <line:256:5, col:33> col:15 used erase 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &)' inline
| `-ParmVarDecl 0x55c81096b910 <col:21, col:31> col:31 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
|-CXXMethodDecl 0x55c81096bbc8 <line:262:5, col:40> col:15 erase 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55c81096bad0 <col:21, col:37> col:37 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55c81096bc80 <line:266:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x55c81096bf48 <line:269:5, col:44> col:17 swap 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline
| `-ParmVarDecl 0x55c81096be58 <col:22, col:43> col:43 x 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55c81096c090 <line:277:5, col:36> col:10 rehash 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55c81096c000 <col:17, col:35> col:35 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55c81096c148 <line:282:5, line:285:5> line:282:17 balance 'void ()' inline
|-AccessSpecDecl 0x55c81096c1f8 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55c81096ef90 <line:289:5, col:29> col:29 _rep 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x55c81096f1e8 <line:291:5, col:46> col:5 HashContainer 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x55c81096f0d8 <col:19, col:45> col:46 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55c81096f588 <line:292:5, col:63> col:26 operator= 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x55c81096f458 <col:36, col:62> col:63 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-FriendDecl 0x55c81096f748 <line:294:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
`-FriendDecl 0x55c81096f898 <line:295:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  NonVirtualBaseLLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810970ed0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<56>'
|-CXXRecordDecl 0x55c8109710a8 prev 0x55c810970ed0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55c810971138 <col:46, col:52> col:46 public
|-TypedefDecl 0x55c810971160 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810972d30 <line:13:5, col:31> col:31 type 'typename sized_array_memory<56>::type':'char_array<56>'
| `-ElaboratedType 0x55c810972ce0 'typename sized_array_memory<56>::type' sugar
|   `-TypedefType 0x55c810971610 'sized_array_memory<56>::type' sugar
|     |-Typedef 0x55c810971510 'type'
|     `-TemplateSpecializationType 0x55c8109714a0 'char_array<56UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55c810971380 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|       |   `-SubstNonTypeTemplateParmExpr 0x55c810971360 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55c810971340 <col:24> 'unsigned long' 56
|       `-RecordType 0x55c810971480 'char_array<56>'
|         `-ClassTemplateSpecialization 0x55c8109713a0 'char_array'
|-TypedefDecl 0x55c810972de8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<56> >::type *'
| `-PointerType 0x55c810972db0 'vector_memory<sized_array_memory<56> >::type *'
|   `-TypedefType 0x55c810972d90 'vector_memory<sized_array_memory<56> >::type' sugar
|     |-Typedef 0x55c810972d30 'type'
|     `-ElaboratedType 0x55c810972ce0 'typename sized_array_memory<56>::type' sugar
|       `-TypedefType 0x55c810971610 'sized_array_memory<56>::type' sugar
|         |-Typedef 0x55c810971510 'type'
|         `-TemplateSpecializationType 0x55c8109714a0 'char_array<56UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55c810971380 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|           |   `-SubstNonTypeTemplateParmExpr 0x55c810971360 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55c810971340 <col:24> 'unsigned long' 56
|           `-RecordType 0x55c810971480 'char_array<56>'
|             `-ClassTemplateSpecialization 0x55c8109713a0 'char_array'
|-CXXMethodDecl 0x55c810972f68 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<56> >::type *) const' inline
| `-ParmVarDecl 0x55c810972e78 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXConstructorDecl 0x55c810973058 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55c810973138 <line:23:5, col:20> col:5 ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55c810973408 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x55c810973310 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<56> > &'
|-CXXMethodDecl 0x55c810973648 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55c8109734c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810973538 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55c810973818 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55c810973708 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810973780 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55c810973978 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x55c810973a48 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x55c810973c98 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55c810973b08 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x55c810973b80 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55c810973ef8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, vector_memory<sized_array_memory<56> >::iterator)'
| |-ParmVarDecl 0x55c810973d68 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x55c810973de0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55c8109740b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x55c810973fc8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55c810974278 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x55c810974180 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55c810974330 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c8109743e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c810974618 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55c810974490 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810974508 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55c8109748b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x55c8109747c0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<56> > &'
|-FieldDecl 0x55c810974980 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<56> >::type *'
|-FieldDecl 0x55c8109749d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55c810974a20 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.14 = type { %struct.char_array.15*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.14 = type { %struct.char_array.15*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c81096f938 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterInput'
|-CXXRecordDecl 0x55c81096fb48 prev 0x55c81096f938 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c810970e40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterInput>::type':'sized_array_memory<56>'
| `-ElaboratedType 0x55c810970df0 'typename array_memory<IPRewriterInput>::type' sugar
|   `-TypedefType 0x55c810970dd0 'conditional<true, sized_array_memory<56>, typed_array_memory<IPRewriterInput> >::type' sugar
|     |-Typedef 0x55c810970c80 'type'
|     `-SubstTemplateTypeParmType 0x55c810970aa0 'sized_array_memory<56>' sugar
|       |-TemplateTypeParmType 0x55c8105fd290 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8105fd238 'T'
|       `-RecordType 0x55c8109705f0 'sized_array_memory<56>'
|         `-ClassTemplateSpecialization 0x55c810970510 'sized_array_memory'
|-FieldDecl 0x55c810974a70 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterInput>::array_memory_type>':'vector_memory<sized_array_memory<56> >' mutable
|-AccessSpecDecl 0x55c810974ac0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c810974af8 <line:118:5, col:15> col:15 value_type 'IPRewriterInput':'IPRewriterInput'
| `-SubstTemplateTypeParmType 0x55c81096fbe0 'IPRewriterInput' sugar
|   |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c8106333f8 'T'
|   `-RecordType 0x55c810933850 'IPRewriterInput'
|     `-CXXRecord 0x55c810950f30 'IPRewriterInput'
|-TypedefDecl 0x55c810974bb8 <line:119:5, col:16> col:16 reference 'IPRewriterInput &'
| `-LValueReferenceType 0x55c810974b80 'IPRewriterInput &'
|   `-SubstTemplateTypeParmType 0x55c81096fbe0 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810933850 'IPRewriterInput'
|       `-CXXRecord 0x55c810950f30 'IPRewriterInput'
|-TypedefDecl 0x55c810974c78 <line:120:5, col:22> col:22 const_reference 'const IPRewriterInput &'
| `-LValueReferenceType 0x55c810974c40 'const IPRewriterInput &'
|   `-QualType 0x55c81096fbe1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55c81096fbe0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810933850 'IPRewriterInput'
|         `-CXXRecord 0x55c810950f30 'IPRewriterInput'
|-TypedefDecl 0x55c810974d08 <line:121:5, col:16> col:16 pointer 'IPRewriterInput *'
| `-PointerType 0x55c810974cd0 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x55c81096fbe0 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810933850 'IPRewriterInput'
|       `-CXXRecord 0x55c810950f30 'IPRewriterInput'
|-TypedefDecl 0x55c810974dc8 <line:122:5, col:22> col:22 const_pointer 'const IPRewriterInput *'
| `-PointerType 0x55c810974d90 'const IPRewriterInput *'
|   `-QualType 0x55c81096fbe1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55c81096fbe0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810933850 'IPRewriterInput'
|         `-CXXRecord 0x55c810950f30 'IPRewriterInput'
|-TypedefDecl 0x55c810975a20 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterInput>::type':'const IPRewriterInput &'
| `-ElaboratedType 0x55c8109759d0 'typename fast_argument<IPRewriterInput>::type' sugar
|   `-TypedefType 0x55c8109759b0 'fast_argument<IPRewriterInput, true>::type' sugar
|     |-Typedef 0x55c8109758e8 'type'
|     `-LValueReferenceType 0x55c8109758b0 'const IPRewriterInput &'
|       `-QualType 0x55c810975651 'const IPRewriterInput' const
|         `-SubstTemplateTypeParmType 0x55c810975650 'IPRewriterInput' sugar
|           |-TemplateTypeParmType 0x55c810604d60 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55c810604d08 'T'
|           `-RecordType 0x55c810933850 'IPRewriterInput'
|             `-CXXRecord 0x55c810950f30 'IPRewriterInput'
|-TypedefDecl 0x55c810975a88 <line:126:5, col:22> col:22 const_access_type 'const IPRewriterInput &'
| `-LValueReferenceType 0x55c810974c40 'const IPRewriterInput &'
|   `-QualType 0x55c81096fbe1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55c81096fbe0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810933850 'IPRewriterInput'
|         `-CXXRecord 0x55c810950f30 'IPRewriterInput'
|-TypedefDecl 0x55c810975ae0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810975b48 <line:130:5, col:16> col:16 iterator 'IPRewriterInput *'
| `-PointerType 0x55c810974cd0 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x55c81096fbe0 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810933850 'IPRewriterInput'
|       `-CXXRecord 0x55c810950f30 'IPRewriterInput'
|-TypedefDecl 0x55c810975bb0 <line:131:5, col:22> col:22 const_iterator 'const IPRewriterInput *'
| `-PointerType 0x55c810974d90 'const IPRewriterInput *'
|   `-QualType 0x55c81096fbe1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55c81096fbe0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810933850 'IPRewriterInput'
|         `-CXXRecord 0x55c810950f30 'IPRewriterInput'
|-EnumDecl 0x55c810975c08 <line:134:5> col:5
| `-EnumConstantDecl 0x55c810975d00 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterInput>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c810975ce0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c810634618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c8106345f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c8106345d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c810975d88 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c810976018 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810975e40 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810975ee0 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXConstructorDecl 0x55c8109762d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55c8109761c0 <col:19, col:36> col:36 x 'const Vector<IPRewriterInput> &'
|-CXXConstructorDecl 0x55c810976598 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x55c810976480 <col:19, col:31> col:31 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x55c8109768e0 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterInput> &(const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55c8109767c0 <col:33, col:50> col:50 x 'const Vector<IPRewriterInput> &'
|-CXXMethodDecl 0x55c810976bf0 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterInput> &(Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x55c810976ad0 <col:33, col:45> col:45 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x55c810978810 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterInput> &(Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810976d28 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c8109786d0 <col:43, col:69> col:63 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55c810978968 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x55c810978a48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810978aa0 <col:30> Inherited
|-CXXMethodDecl 0x55c810978ae8 <line:151:5, col:53> col:49 end 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x55c810978b98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810978bf0 <col:30> Inherited
|-CXXMethodDecl 0x55c810978cb8 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55c810978d68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810978dc0 <col:30> Inherited
|-CXXMethodDecl 0x55c810978e08 <line:153:5, col:61> col:55 end 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55c810978eb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810978f10 <col:30> Inherited
|-CXXMethodDecl 0x55c810978f58 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55c810979008 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810979060 <col:30> Inherited
|-CXXMethodDecl 0x55c8109790a8 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55c810979158 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c8109791b0 <col:30> Inherited
|-CXXMethodDecl 0x55c8109791d8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810979288 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810979338 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c8109794f8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55c8109793e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810979460 <col:37, col:63> col:57 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55c810979648 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c8109795b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c8109797f8 <line:163:5, col:65> col:43 operator[] 'IPRewriterInput &(Vector::size_type)'
| |-ParmVarDecl 0x55c810979700 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c8109798b0 <col:20>
| `-OptimizeNoneAttr 0x55c810979908 <col:30>
|-CXXMethodDecl 0x55c810979a28 <line:164:5, col:73> col:49 used operator[] 'const IPRewriterInput &(Vector::size_type) const'
| |-ParmVarDecl 0x55c810979930 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810979ae0 <col:20>
| `-OptimizeNoneAttr 0x55c810979b38 <col:30>
|-CXXMethodDecl 0x55c810979bf0 <line:165:5, col:29> col:15 at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810979b60 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810979d38 <line:166:5, col:37> col:21 at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810979ca8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810979e68 <line:167:5, col:21> col:15 front 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x55c810979f98 <line:168:5, col:29> col:21 front 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x55c81097a068 <line:169:5, col:20> col:15 back 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x55c81097a138 <line:170:5, col:28> col:21 back 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x55c81097a278 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c81097a1e8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c81097a3c0 <line:173:5, col:47> col:21 unchecked_at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c81097a330 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c81097a508 <line:174:5, col:59> col:15 at_u 'IPRewriterInput &(Vector::size_type)' inline
| |-ParmVarDecl 0x55c81097a478 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c81097a5c0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c81097a6c0 <line:175:5, col:71> col:21 at_u 'const IPRewriterInput &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c81097a630 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c81097a778 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c81097a838 <line:177:5, col:20> col:15 data 'IPRewriterInput *()' inline
|-CXXMethodDecl 0x55c81097a938 <line:178:5, col:28> col:21 data 'const IPRewriterInput *() const' inline
|-CXXMethodDecl 0x55c81097aae8 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x55c81097a9f8 <col:27, col:47> col:47 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-FunctionTemplateDecl 0x55c81097b2a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c81097aba0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterInput>':'fast_argument<IPRewriterInput, true>'
| `-CXXMethodDecl 0x55c81097b208 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterInput &&)' inline
|   `-ParmVarDecl 0x55c81097b108 <col:58, col:62> col:62 v 'IPRewriterInput &&'
|-CXXMethodDecl 0x55c81097b388 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c81097b4d8 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x55c81097b448 <col:28, col:48> col:48 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55c81097b590 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c81097b7d8 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55c81097b650 <col:28, col:37> col:37 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x55c81097b6c8 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55c81097b998 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator)' inline
| `-ParmVarDecl 0x55c81097b8a8 <col:27, col:36> col:36 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x55c81097bbe8 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::iterator)' inline
| |-ParmVarDecl 0x55c81097ba60 <col:27, col:36> col:36 a 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x55c81097bad8 <col:39, col:48> col:48 b 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x55c81097bca8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c81097bf08 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55c81097be10 <col:22, col:33> col:33 x 'Vector<IPRewriterInput> &'
`-CXXDestructorDecl 0x55c81097bfd8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory.14 }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory.14 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterHeap
         0 |   Vector<class IPRewriterFlow *> [2] _heaps
        32 |   int32_t _capacity
        36 |   uint32_t _use_count
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810952de0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterFlow *'
|-CXXRecordDecl 0x55c810952fe0 prev 0x55c810952de0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c810954360 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterFlow *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55c810954310 'typename array_memory<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x55c8109542f0 'conditional<true, sized_array_memory<8>, typed_array_memory<IPRewriterFlow *> >::type' sugar
|     |-Typedef 0x55c8109541a0 'type'
|     `-SubstTemplateTypeParmType 0x55c810953fc0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55c8105fd290 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8105fd238 'T'
|       `-RecordType 0x55c810953b10 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55c810953a28 'sized_array_memory'
|-FieldDecl 0x55c81095b5d0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterFlow *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55c81095b620 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c81095b658 <line:118:5, col:15> col:15 value_type 'IPRewriterFlow *':'IPRewriterFlow *'
| `-SubstTemplateTypeParmType 0x55c810953070 'IPRewriterFlow *' sugar
|   |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c8106333f8 'T'
|   `-PointerType 0x55c810937500 'IPRewriterFlow *'
|     `-RecordType 0x55c8109336f0 'IPRewriterFlow'
|       `-CXXRecord 0x55c8109393f0 'IPRewriterFlow'
|-TypedefDecl 0x55c81095b718 <line:119:5, col:16> col:16 reference 'IPRewriterFlow *&'
| `-LValueReferenceType 0x55c81095b6e0 'IPRewriterFlow *&'
|   `-SubstTemplateTypeParmType 0x55c810953070 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-PointerType 0x55c810937500 'IPRewriterFlow *'
|       `-RecordType 0x55c8109336f0 'IPRewriterFlow'
|         `-CXXRecord 0x55c8109393f0 'IPRewriterFlow'
|-TypedefDecl 0x55c81095b7d8 <line:120:5, col:22> col:22 const_reference 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x55c81095b7a0 'IPRewriterFlow *const &'
|   `-QualType 0x55c810953071 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55c810953070 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c810937500 'IPRewriterFlow *'
|         `-RecordType 0x55c8109336f0 'IPRewriterFlow'
|           `-CXXRecord 0x55c8109393f0 'IPRewriterFlow'
|-TypedefDecl 0x55c81095b868 <line:121:5, col:16> col:16 pointer 'IPRewriterFlow **'
| `-PointerType 0x55c81095b830 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x55c810953070 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-PointerType 0x55c810937500 'IPRewriterFlow *'
|       `-RecordType 0x55c8109336f0 'IPRewriterFlow'
|         `-CXXRecord 0x55c8109393f0 'IPRewriterFlow'
|-TypedefDecl 0x55c81095b928 <line:122:5, col:22> col:22 const_pointer 'IPRewriterFlow *const *'
| `-PointerType 0x55c81095b8f0 'IPRewriterFlow *const *'
|   `-QualType 0x55c810953071 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55c810953070 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c810937500 'IPRewriterFlow *'
|         `-RecordType 0x55c8109336f0 'IPRewriterFlow'
|           `-CXXRecord 0x55c8109393f0 'IPRewriterFlow'
|-TypedefDecl 0x55c81095c710 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterFlow *>::type':'IPRewriterFlow *'
| `-ElaboratedType 0x55c81095c6c0 'typename fast_argument<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x55c81095c6a0 'fast_argument<IPRewriterFlow *, false>::type' sugar
|     |-Typedef 0x55c81095c630 'type'
|     `-SubstTemplateTypeParmType 0x55c81095c3f0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55c810605490 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c810605440 'T'
|       `-PointerType 0x55c810937500 'IPRewriterFlow *'
|         `-RecordType 0x55c8109336f0 'IPRewriterFlow'
|           `-CXXRecord 0x55c8109393f0 'IPRewriterFlow'
|-TypedefDecl 0x55c81095c778 <line:126:5, col:22> col:22 const_access_type 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x55c81095b7a0 'IPRewriterFlow *const &'
|   `-QualType 0x55c810953071 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55c810953070 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c810937500 'IPRewriterFlow *'
|         `-RecordType 0x55c8109336f0 'IPRewriterFlow'
|           `-CXXRecord 0x55c8109393f0 'IPRewriterFlow'
|-TypedefDecl 0x55c81095c7d0 <line:128:5, col:17> col:17 referenced size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c81095c838 <line:130:5, col:16> col:16 iterator 'IPRewriterFlow **'
| `-PointerType 0x55c81095b830 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x55c810953070 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-PointerType 0x55c810937500 'IPRewriterFlow *'
|       `-RecordType 0x55c8109336f0 'IPRewriterFlow'
|         `-CXXRecord 0x55c8109393f0 'IPRewriterFlow'
|-TypedefDecl 0x55c81095c8a0 <line:131:5, col:22> col:22 const_iterator 'IPRewriterFlow *const *'
| `-PointerType 0x55c81095b8f0 'IPRewriterFlow *const *'
|   `-QualType 0x55c810953071 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55c810953070 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c810937500 'IPRewriterFlow *'
|         `-RecordType 0x55c8109336f0 'IPRewriterFlow'
|           `-CXXRecord 0x55c8109393f0 'IPRewriterFlow'
|-EnumDecl 0x55c81095c8f8 <line:134:5> col:5
| `-EnumConstantDecl 0x55c81095c9f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterFlow *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c81095c9d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c810634618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c8106345f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c8106345d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c81095ca78 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55c81095cd08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c81095cb30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c81095cbd0 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXConstructorDecl 0x55c81095cfc8 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55c81095ceb0 <col:19, col:36> col:36 x 'const Vector<IPRewriterFlow *> &'
|-CXXConstructorDecl 0x55c81095d288 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x55c81095d170 <col:19, col:31> col:31 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x55c81095d5d0 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterFlow *> &(const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55c81095d4b0 <col:33, col:50> col:50 x 'const Vector<IPRewriterFlow *> &'
|-CXXMethodDecl 0x55c81095d8e0 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterFlow *> &(Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x55c81095d7c0 <col:33, col:45> col:45 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x55c81095dbd0 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterFlow *> &(Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c81095da18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c81095da90 <col:43, col:69> col:63 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55c81095dd28 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x55c81095de08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c81095de60 <col:30> Inherited
|-CXXMethodDecl 0x55c81095dea8 <line:151:5, col:53> col:49 end 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x55c81095df58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c81095dfb0 <col:30> Inherited
|-CXXMethodDecl 0x55c81095e078 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55c81095e128 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c81095e180 <col:30> Inherited
|-CXXMethodDecl 0x55c81095e1c8 <line:153:5, col:61> col:55 end 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55c81095e278 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c81095e2d0 <col:30> Inherited
|-CXXMethodDecl 0x55c81095e318 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55c81095e3c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c81095e420 <col:30> Inherited
|-CXXMethodDecl 0x55c81095e468 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55c81095e518 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c81095e570 <col:30> Inherited
|-CXXMethodDecl 0x55c81095e598 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c81095e648 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c81095e6f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c81095e8b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c81095e7a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c81095e820 <col:37, col:63> col:57 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55c81095ea08 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c81095e978 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c81095ebb8 <line:163:5, col:65> col:43 operator[] 'IPRewriterFlow *&(Vector::size_type)'
| |-ParmVarDecl 0x55c81095eac0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c81095ec70 <col:20>
| `-OptimizeNoneAttr 0x55c81095ecc8 <col:30>
|-CXXMethodDecl 0x55c81095ede8 <line:164:5, col:73> col:49 operator[] 'IPRewriterFlow *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55c81095ecf0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c81095eea0 <col:20>
| `-OptimizeNoneAttr 0x55c81095eef8 <col:30>
|-CXXMethodDecl 0x55c81095efb0 <line:165:5, col:29> col:15 at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55c81095ef20 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c81095f0f8 <line:166:5, col:37> col:21 at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c81095f068 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c81095f228 <line:167:5, col:21> col:15 front 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x55c81095f358 <line:168:5, col:29> col:21 front 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x55c81095f428 <line:169:5, col:20> col:15 back 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x55c81095f4f8 <line:170:5, col:28> col:21 back 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x55c81095f638 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55c81095f5a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c81095f780 <line:173:5, col:47> col:21 unchecked_at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c81095f6f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c81095f8c8 <line:174:5, col:59> col:15 at_u 'IPRewriterFlow *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55c81095f838 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c81095f980 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c81095fa80 <line:175:5, col:71> col:21 at_u 'IPRewriterFlow *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c81095f9f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c81095fb38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c81095fbf8 <line:177:5, col:20> col:15 data 'IPRewriterFlow **()' inline
|-CXXMethodDecl 0x55c81095fcf8 <line:178:5, col:28> col:21 data 'IPRewriterFlow *const *() const' inline
|-CXXMethodDecl 0x55c81095fea8 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x55c81095fdb8 <col:27, col:47> col:47 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-FunctionTemplateDecl 0x55c810960698 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c81095ff60 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterFlow *>':'fast_argument<IPRewriterFlow *, false>'
| `-CXXMethodDecl 0x55c8109605f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterFlow *&&)' inline
|   `-ParmVarDecl 0x55c8109604f8 <col:58, col:62> col:62 v 'IPRewriterFlow *&&'
|-CXXMethodDecl 0x55c810960778 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c8109608c8 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810960838 <col:28, col:48> col:48 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55c810960980 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c810960bc8 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810960a40 <col:28, col:37> col:37 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x55c810960ab8 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55c810960d88 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator)' inline
| `-ParmVarDecl 0x55c810960c98 <col:27, col:36> col:36 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x55c810960fd8 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::iterator)' inline
| |-ParmVarDecl 0x55c810960e50 <col:27, col:36> col:36 a 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x55c810960ec8 <col:39, col:48> col:48 b 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x55c810961098 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c8109612f8 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55c810961200 <col:22, col:33> col:33 x 'Vector<IPRewriterFlow *> &'
`-CXXDestructorDecl 0x55c8109613c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55c8109622d8 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810952898 prev 0x55c810936a00 <../elements/ip/iprewriterbase.hh:42:1, line:79:1> line:42:7 referenced class IPRewriterHeap definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c810952990 <col:1, col:7> col:7 implicit referenced class IPRewriterHeap
|-AccessSpecDecl 0x55c810952a20 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55c810952a80 <line:44:5, line:46:5> line:44:5 IPRewriterHeap 'void ()'
| |-CXXCtorInitializer Field 0x55c810961c68 '_heaps' 'Vector<IPRewriterFlow *> [2]'
| | `-CXXConstructExpr 0x55c8109622b0 <col:5> 'Vector<IPRewriterFlow *> [2]' 'void ()'
| |-CXXCtorInitializer Field 0x55c810961cc8 '_capacity' 'int32_t':'int'
| | `-IntegerLiteral 0x55c8109621c8 <line:45:14> 'int' 2147483647
| |-CXXCtorInitializer Field 0x55c810961d28 '_use_count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55c810962270 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c810962230 <col:38> 'int' 1
| `-CompoundStmt 0x55c810962328 <col:41, line:46:5>
|-CXXDestructorDecl 0x55c810952b70 <line:47:5, line:49:5> line:47:5 used ~IPRewriterHeap 'void () noexcept'
| `-CompoundStmt 0x55c810962768 <col:23, line:49:5>
|   `-ParenExpr 0x55c810962748 <line:48:2, col:153> 'void'
|     `-ConditionalOperator 0x55c810962718 <col:3, col:152> 'void'
|       |-CXXStaticCastExpr 0x55c810962400 <col:3, col:34> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55c8109623d0 <col:23, col:33> 'bool' '=='
|       |   |-CXXMemberCallExpr 0x55c810962378 <col:23, col:28> 'Vector<IPRewriterFlow *>::size_type':'int'
|       |   | `-MemberExpr 0x55c810962348 <col:23> '<bound member function type>' ->size 0x55c8109615a8
|       |   |   `-ImplicitCastExpr 0x55c810962398 <col:23> 'const IPRewriterHeap *' <NoOp>
|       |   |     `-CXXThisExpr 0x55c810962338 <col:23> 'IPRewriterHeap *' implicit this
|       |   `-IntegerLiteral 0x55c8109623b0 <col:33> 'int' 0
|       |-CXXFunctionalCastExpr 0x55c810962460 <col:38, col:45> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55c810962440 <col:44> 'int' 0
|       `-CallExpr 0x55c810962678 <col:49, col:152> 'void'
|         |-ImplicitCastExpr 0x55c810962660 <col:49> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55c810962640 <col:49> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55c8109626b8 <col:64> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55c8109624d0 <col:64> 'const char [12]' lvalue "size() == 0"
|         |-ImplicitCastExpr 0x55c8109626d0 <col:79> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55c810962578 <col:79> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|         |-ImplicitCastExpr 0x55c8109626e8 <col:115> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55c8109625b0 <col:115> 'int' 48
|         `-ImplicitCastExpr 0x55c810962700 <col:119, col:133> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55c810962628 <col:119, col:133> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55c810962610 <col:133> 'const char [34]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55c8109625d0 <col:133> 'const char [34]' lvalue "IPRewriterHeap::~IPRewriterHeap()"
|-CXXMethodDecl 0x55c810952c70 <line:51:5, line:53:5> line:51:10 use 'void ()'
| `-CompoundStmt 0x55c8109627d8 <col:16, line:53:5>
|   `-UnaryOperator 0x55c8109627c0 <line:52:2, col:4> 'uint32_t':'unsigned int' lvalue prefix '++'
|     `-MemberExpr 0x55c810962790 <col:4> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55c810961d28
|       `-CXXThisExpr 0x55c810962780 <col:4> 'IPRewriterHeap *' implicit this
|-CXXMethodDecl 0x55c810952d30 <line:54:5, line:58:5> line:54:10 unuse 'void ()'
| `-CompoundStmt 0x55c810962ca0 <col:18, line:58:5>
|   |-ParenExpr 0x55c810962b70 <line:55:2, col:159> 'void'
|   | `-ConditionalOperator 0x55c810962b40 <col:3, col:158> 'void'
|   |   |-CXXStaticCastExpr 0x55c8109628b0 <col:3, col:37> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c810962880 <col:23, col:36> 'bool' '>'
|   |   |   |-ImplicitCastExpr 0x55c810962850 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x55c810962800 <col:23> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55c810961d28
|   |   |   |   `-CXXThisExpr 0x55c8109627f0 <col:23> 'IPRewriterHeap *' implicit this
|   |   |   `-ImplicitCastExpr 0x55c810962868 <col:36> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x55c810962830 <col:36> 'int' 0
|   |   |-CXXFunctionalCastExpr 0x55c810962910 <col:41, col:48> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c8109628f0 <col:47> 'int' 0
|   |   `-CallExpr 0x55c810962aa0 <col:52, col:158> 'void'
|   |     |-ImplicitCastExpr 0x55c810962a88 <col:52> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c810962a68 <col:52> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c810962ae0 <col:67> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c810962980 <col:67> 'const char [15]' lvalue "_use_count > 0"
|   |     |-ImplicitCastExpr 0x55c810962af8 <col:85> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c8109629a8 <col:85> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|   |     |-ImplicitCastExpr 0x55c810962b10 <col:121> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c8109629e0 <col:121> 'int' 55
|   |     `-ImplicitCastExpr 0x55c810962b28 <col:125, col:139> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c810962a50 <col:125, col:139> 'const char [29]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c810962a38 <col:139> 'const char [29]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c810962a00 <col:139> 'const char [29]' lvalue "void IPRewriterHeap::unuse()"
|   `-IfStmt 0x55c810962c88 <line:56:2, line:57:13>
|     |-BinaryOperator 0x55c810962c38 <line:56:6, col:22> 'bool' '=='
|     | |-ImplicitCastExpr 0x55c810962c08 <col:6, col:8> 'uint32_t':'unsigned int' <LValueToRValue>
|     | | `-UnaryOperator 0x55c810962bd0 <col:6, col:8> 'uint32_t':'unsigned int' lvalue prefix '--'
|     | |   `-MemberExpr 0x55c810962ba0 <col:8> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55c810961d28
|     | |     `-CXXThisExpr 0x55c810962b90 <col:8> 'IPRewriterHeap *' implicit this
|     | `-ImplicitCastExpr 0x55c810962c20 <col:22> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x55c810962be8 <col:22> 'int' 0
|     `-CXXDeleteExpr 0x55c810962c68 <line:57:6, col:13> 'void' Function 0x55c810471b88 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x55c810962c58 <col:13> 'IPRewriterHeap *' this
|-CXXMethodDecl 0x55c8109615a8 <line:60:5, line:62:5> line:60:41 used size 'Vector<IPRewriterFlow *>::size_type () const'
| `-CompoundStmt 0x55c8109658a0 <col:54, line:62:5>
|   `-ReturnStmt 0x55c810965890 <line:61:2, col:43>
|     `-BinaryOperator 0x55c810965870 <col:9, col:43> 'int' '+'
|       |-CXXMemberCallExpr 0x55c810962e20 <col:9, col:24> 'Vector::size_type':'int'
|       | `-MemberExpr 0x55c810962df0 <col:9, col:19> '<bound member function type>' .size 0x55c81095e598
|       |   `-ArraySubscriptExpr 0x55c810962dd0 <col:9, col:17> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|       |     |-ImplicitCastExpr 0x55c810962db8 <col:9> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x55c810962cd0 <col:9> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x55c810961c68
|       |     |   `-CXXThisExpr 0x55c810962cc0 <col:9> 'const IPRewriterHeap *' implicit this
|       |     `-IntegerLiteral 0x55c810962d00 <col:16> 'int' 0
|       `-CXXMemberCallExpr 0x55c810962f08 <col:28, col:43> 'Vector::size_type':'int'
|         `-MemberExpr 0x55c810962ed8 <col:28, col:38> '<bound member function type>' .size 0x55c81095e598
|           `-ArraySubscriptExpr 0x55c810962eb8 <col:28, col:36> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|             |-ImplicitCastExpr 0x55c810962ea0 <col:28> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c810962e50 <col:28> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x55c810961c68
|             |   `-CXXThisExpr 0x55c810962e40 <col:28> 'const IPRewriterHeap *' implicit this
|             `-IntegerLiteral 0x55c810962e80 <col:35> 'int' 1
|-CXXMethodDecl 0x55c810961698 <line:63:5, line:65:5> line:63:13 capacity 'int32_t () const'
| `-CompoundStmt 0x55c810965920 <col:30, line:65:5>
|   `-ReturnStmt 0x55c810965910 <line:64:2, col:9>
|     `-ImplicitCastExpr 0x55c8109658f8 <col:9> 'int32_t':'int' <LValueToRValue>
|       `-MemberExpr 0x55c8109658c8 <col:9> 'const int32_t':'const int' lvalue ->_capacity 0x55c810961cc8
|         `-CXXThisExpr 0x55c8109658b8 <col:9> 'const IPRewriterHeap *' implicit this
|-AccessSpecDecl 0x55c810961738 <line:67:3, col:10> col:3 private
|-EnumDecl 0x55c810961760 <line:69:5, line:71:5> line:69:5
| |-EnumConstantDecl 0x55c810961860 <line:70:2, col:18> col:2 h_best_effort 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
| | `-ImplicitCastExpr 0x55c810961940 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810961840 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x55c810961820 <col:18> 'int' 0
| `-EnumConstantDecl 0x55c8109618f0 <col:21, col:35> col:21 h_guarantee 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
|   `-ImplicitCastExpr 0x55c810961958 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c8109618d0 <col:35> 'int' Int: 1
|       `-IntegerLiteral 0x55c8109618b0 <col:35> 'int' 1
|-FieldDecl 0x55c810961c68 <line:72:5, col:38> col:30 referenced _heaps 'Vector<IPRewriterFlow *> [2]'
|-FieldDecl 0x55c810961cc8 <line:73:5, col:13> col:13 referenced _capacity 'int32_t':'int'
|-FieldDecl 0x55c810961d28 <line:74:5, col:14> col:14 referenced _use_count 'uint32_t':'unsigned int'
|-FriendDecl 0x55c810961d98 <line:76:5, col:18> col:12 'class IPRewriterBase':'IPRewriterBase'
|-FriendDecl 0x55c810961e30 <line:77:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x55c810961e98 <line:42:7> col:7 implicit IPRewriterHeap 'void (const IPRewriterHeap &)' inline default noexcept-unevaluated 0x55c810961e98
| `-ParmVarDecl 0x55c810961fa8 <col:7> col:7 'const IPRewriterHeap &'
`-CXXMethodDecl 0x55c810962048 <col:7> col:7 implicit operator= 'IPRewriterHeap &(const IPRewriterHeap &)' inline default noexcept-unevaluated 0x55c810962048
  `-ParmVarDecl 0x55c810962158 <col:7> col:7 'const IPRewriterHeap &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.16], i32, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.16], i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810821070 prev 0x55c810818500 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c810821168 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55c810821208 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55c8108276a8 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c810827a88 <col:11>
|-CXXConstructorDecl 0x55c810827780 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c810827868 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55c8108281d0 <col:11>
|-CXXConstructorDecl 0x55c810827908 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55c810827a18 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55c810829a28 <col:11>
|-CXXDestructorDecl 0x55c810828d38 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c810528c58 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c810528d68 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55c810529630 <col:11>
|   `-ReturnStmt 0x55c810529620 <col:11>
|     `-UnaryOperator 0x55c810529608 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c8105295f8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55c810528dd8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55c810528ee8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55c8108b10a0 <col:11>
    `-ReturnStmt 0x55c8108b1090 <col:11>
      `-UnaryOperator 0x55c8108b1078 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55c8108b1068 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8108160e8 prev 0x55c810815e00 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c8108161e0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55c810816270 <col:19, col:25> col:19 public
|-TypedefDecl 0x55c8108162a8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55c810473f70 'int32_t' sugar
|   |-Typedef 0x55c810380328 'int32_t'
|   `-TypedefType 0x55c810359510 '__int32_t' sugar
|     |-Typedef 0x55c810359128 '__int32_t'
|     `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810816310 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55c810474130 'int64_t' sugar
|   |-Typedef 0x55c810380390 'int64_t'
|   `-TypedefType 0x55c810359630 '__int64_t' sugar
|     |-Typedef 0x55c810359208 '__int64_t'
|     `-BuiltinType 0x55c8103175a0 'long'
|-EnumDecl 0x55c810816368 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55c8108164e0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55c8108164c0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55c810816498 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55c810816480 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55c810816450 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55c8108165d8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55c8108165b8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55c810816590 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55c810816578 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55c810816550 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55c810816530 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55c810816628 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55c810816730 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c810818250 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810816710 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55c8108166f0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55c8108167c0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c810818268 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108167a0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55c810816780 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55c810816850 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c810818280 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810816830 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55c810816810 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55c8108168e0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c810818298 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108168c0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55c8108168a0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55c810816970 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c8108182b0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810816950 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55c810816930 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55c810816a00 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c8108182c8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108169e0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55c8108169c0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55c810816a90 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c8108182e0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810816a70 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55c810816a50 <col:26> 'int' EnumConstant 0x55c810816730 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55c810816b60 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55c8108182f8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810816b40 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55c810816b20 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55c810816ae0 <col:27> 'int' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55c810816b00 <col:44> 'int' EnumConstant 0x55c810816a00 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55c810818200 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55c810818310 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810816c10 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55c810816bf0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55c810816bb0 <col:27> 'int' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55c810816bd0 <col:44> 'int' EnumConstant 0x55c8108168e0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55c810818328 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55c810818430 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55c810818480 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810818410 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55c8108183f0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55c8108184a8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55c810473ba0 'uninitialized_type'
|   `-CXXRecord 0x55c810473b08 'uninitialized_type'
|-CXXRecordDecl 0x55c810818500 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55c810818610 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55c8108221b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c810827a98 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c810827bb8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55c810827b70 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55c810827b00 <col:9> '<bound member function type>' ->assign 0x55c81081f298
|     | `-CXXThisExpr 0x55c810827af0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55c810827b30 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55c810827ba0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55c810827b50 <col:19> 'int' 0
|-CXXConstructorDecl 0x55c810818858 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55c8108186d0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55c810818748 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55c810827540 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c810827520 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55c8108221b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c810827bd0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c810827d20 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55c810827ca8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55c810827c38 <col:9> '<bound member function type>' ->assign 0x55c81081f298
|     | `-CXXThisExpr 0x55c810827c28 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55c810827cf0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55c810827cd8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55c810827c68 <col:16> 'long' lvalue ParmVar 0x55c8108186d0 'sec' 'long'
|     `-ImplicitCastExpr 0x55c810827d08 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55c810827c88 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c810818748 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55c810818ab8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55c810818928 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55c8108189a0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55c810827578 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c810827558 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55c8108221b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c810827d38 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c810827e70 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55c810827e10 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55c810827da0 <col:9> '<bound member function type>' ->assign 0x55c81081f298
|     | `-CXXThisExpr 0x55c810827d90 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55c810827e40 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55c810827dd0 <col:16> 'int' lvalue ParmVar 0x55c810818928 'sec' 'int'
|     `-ImplicitCastExpr 0x55c810827e58 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55c810827df0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c8108189a0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55c810818d18 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55c810818b88 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55c810818c00 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55c8108275b0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c810827590 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55c8108221b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c810827e88 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c810827fd8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55c810827f60 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55c810827ef0 <col:9> '<bound member function type>' ->assign 0x55c81081f298
|     | `-CXXThisExpr 0x55c810827ee0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55c810827fa8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55c810827f90 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55c810827f20 <col:16> 'unsigned long' lvalue ParmVar 0x55c810818b88 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55c810827fc0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55c810827f40 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c810818c00 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55c810818f78 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55c810818de8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55c810818e60 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55c8108275e8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c8108275c8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55c8108221b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c810827ff0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c810828140 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55c8108280c8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55c810828058 <col:9> '<bound member function type>' ->assign 0x55c81081f298
|     | `-CXXThisExpr 0x55c810828048 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55c810828110 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55c8108280f8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55c810828088 <col:16> 'unsigned int' lvalue ParmVar 0x55c810818de8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55c810828128 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55c8108280a8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c810818e60 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55c8108190d8 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55c810819048 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55c810819278 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55c8108191b0 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55c8108194a8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55c8108193b0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55c810819658 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55c810819598 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55c8108221b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c8108281e0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55c810828158 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55c810819598 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55c810828240 <col:19, line:214:5>
|-CXXConstructorDecl 0x55c810819828 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55c810819768 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55c8108221b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c810828250 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c810828300 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55c8108282d8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55c8108282a8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55c810819768 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55c810819a18 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55c810819990 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55c810815e90 'Timestamp'
|   | `-CXXRecord 0x55c8108160e8 'Timestamp'
|   `-ParenType 0x55c810819930 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55c810819900 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55c810816430 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55c8108162a8 'seconds_type'
|         `-TypedefType 0x55c810473f70 'int32_t' sugar
|           |-Typedef 0x55c810380328 'int32_t'
|           `-TypedefType 0x55c810359510 '__int32_t' sugar
|             |-Typedef 0x55c810359128 '__int32_t'
|             `-BuiltinType 0x55c810317580 'int'
|-CXXConversionDecl 0x55c810819b58 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55c810819c28 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55c810828408 <col:37, line:231:5>
|   `-ReturnStmt 0x55c8108283f8 <line:227:9, col:23>
|     `-BinaryOperator 0x55c8108283d8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55c8108283a8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55c810828358 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55c810821208
|       |   `-MemberExpr 0x55c810828328 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55c8108221b8
|       |     `-CXXThisExpr 0x55c810828318 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55c8108283c0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55c810828388 <col:23> 'int' 0
|-CXXMethodDecl 0x55c810819ce8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55c810819da8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55c810819e68 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55c810819f28 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55c810819fe8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55c81081a158 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55c81081a098 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55c81081a2a0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55c81081a210 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c81081a368 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55c81081a408 <col:54> "" ""
|-CXXMethodDecl 0x55c81081a498 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55c81081a538 <col:54> "" ""
|-CXXMethodDecl 0x55c81081a5c8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55c81081a668 <col:54> "" ""
|-CXXMethodDecl 0x55c81081a768 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55c81081a838 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55c81081a968 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55c81081aa60 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55c81081ab98 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55c810828620 <col:39, line:271:5>
|   `-ReturnStmt 0x55c810828610 <line:267:9, col:61>
|     `-CallExpr 0x55c8108285b0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55c810828598 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c810828420 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55c8108224e8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55c8108285e0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55c810828480 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55c810821208
|       |   `-MemberExpr 0x55c810828450 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55c8108221b8
|       |     `-CXXThisExpr 0x55c810828440 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55c8108285f8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55c810828520 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55c8108284f0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55c8108284b0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55c810828508 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55c8108284d0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a00 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c81081ac58 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55c8108287e0 <col:39, line:279:5>
|   `-ReturnStmt 0x55c8108287d0 <line:275:9, col:61>
|     `-CallExpr 0x55c810828770 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55c810828758 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c810828638 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55c8108224e8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55c8108287a0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55c810828698 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55c810821208
|       |   `-MemberExpr 0x55c810828668 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55c8108221b8
|       |     `-CXXThisExpr 0x55c810828658 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55c8108287b8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55c810828738 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55c810828708 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55c8108286c8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55c810828720 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55c8108286e8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c8108168e0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c81081ad18 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55c810828978 <col:39, line:287:5>
|   `-ReturnStmt 0x55c810828968 <line:283:9, col:53>
|     `-BinaryOperator 0x55c810828948 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55c810828918 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55c810828838 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55c810821208
|       |   `-MemberExpr 0x55c810828808 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55c8108221b8
|       |     `-CXXThisExpr 0x55c8108287f8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55c810828930 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55c8108288f8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55c8108288d8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55c8108288a8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55c810828868 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816730 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55c8108288c0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55c810828888 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c81081ae08 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55c810829c10 <col:40, line:293:5>
|   |-DeclStmt 0x55c810828ac0 <line:291:9, col:48>
|   | `-VarDecl 0x55c8108289a0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55c810828aa0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55c810828a48 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55c810828a18 <col:22> '<bound member function type>' ->subsec 0x55c810819da8
|   |     |   `-CXXThisExpr 0x55c810828a08 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55c810828a88 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55c810828a68 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816b60 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55c810829c00 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55c810829be8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55c810829bb8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c810829ba0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55c810829b80 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55c810829b50 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55c8108298e8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55c8108298d0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55c810828ad8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55c8108289a0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55c810829af0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55c810829ad8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55c810829aa8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55c810829900 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55c810829870 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55c810829858 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55c810829808 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55c810816038 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55c8108297a8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55c810828b08 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55c810828af8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55c8108297f0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55c8108297d8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55c810828fc8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55c810828b30 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55c810828bc0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55c810828b90 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55c810828b50 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816b60 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55c810828ba8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55c810828b70 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55c8108289a0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55c810829b20 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55c8108298b8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55c8108298a8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55c81081aec8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55c81082a168 <col:40, line:302:5>
|   |-DeclStmt 0x55c810829d60 <line:297:9, col:48>
|   | `-VarDecl 0x55c810829c40 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55c810829d40 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55c810829ce8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55c810829cb8 <col:22> '<bound member function type>' ->subsec 0x55c810819da8
|   |     |   `-CXXThisExpr 0x55c810829ca8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55c810829d28 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55c810829d08 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810818200 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55c81082a158 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55c81082a140 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55c81082a110 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c81082a0f8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55c81082a0d8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55c81082a0a8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55c810829fd0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55c810829fb8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55c810829d78 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55c810829c40 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55c81082a048 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55c81082a030 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55c81082a000 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55c810829fe8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55c810829f58 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55c810829f40 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55c810829f20 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55c810816038 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55c810829ec0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55c810829da8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55c810829d98 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55c810829f08 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55c810829ef0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55c810829e80 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55c810829dd0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55c810829e60 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55c810829e30 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55c810829df0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810818200 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55c810829e48 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55c810829e10 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55c810829c40 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55c81082a078 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55c810829fa0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55c810829f90 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55c81081af88 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55c81082a1f0 <col:40, line:306:5>
|   `-ReturnStmt 0x55c81082a1e0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55c81082a1b0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55c81082a198 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c81082a188 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55c81081b128 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55c81081b038 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55c81081b2f8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55c81081b200 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55c81081b3e8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55c81081b558 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55c81081b498 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55c81082a338 <col:56, line:320:5>
|   `-ReturnStmt 0x55c81082a328 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55c81082a310 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55c81082a2e0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c81082a2c8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55c81082a288 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55c81082a258 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55c81082a218 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55c81081b498 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55c81082a270 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55c81082a238 <col:31> 'int' 0
|-CXXMethodDecl 0x55c81081b798 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55c81081b610 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c81081b688 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c81082a508 <col:72, line:326:5>
|   `-ReturnStmt 0x55c81082a4f8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55c81082a4e0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55c81082a4b0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c81082a498 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55c81082a458 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55c81082a440 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55c81082a360 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55c81081b610 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55c81082a400 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55c81082a3e8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55c81082a380 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55c810820960 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55c81082a428 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55c81082a3a0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c81081b688 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c81081b948 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55c81081b858 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55c810834090 <col:56, line:337:5>
|   |-DeclStmt 0x55c81082a808 <line:329:9, col:51>
|   | `-VarDecl 0x55c81082a530 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55c81082a7f0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55c81082a7c0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55c81082a7a8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55c81082a790 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55c81082a760 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55c81082a748 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55c81082a730 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55c81082a620 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55c810833e80 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55c81082a870 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55c810821208
|   | | `-MemberExpr 0x55c81082a840 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55c8108221b8
|   | |   `-DeclRefExpr 0x55c81082a820 <col:9> 'Timestamp' lvalue Var 0x55c81082a530 't' 'Timestamp'
|   | `-BinaryOperator 0x55c810833e60 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55c810833e30 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c81082a8a0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55c81081b858 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55c810833e48 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55c81082a950 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55c81082a930 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55c81082a900 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55c81082a8c0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55c81082a918 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55c81082a8e0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a00 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55c810834078 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55c810834048 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55c810834030 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55c810834010 <col:16> 'Timestamp' lvalue Var 0x55c81082a530 't' 'Timestamp'
|-CXXMethodDecl 0x55c81081bb10 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55c81081ba00 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c81081ba78 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c810834248 <col:72, line:343:5>
|   `-ReturnStmt 0x55c810834238 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55c810834220 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55c8108341f0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c8108341d8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55c810834198 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55c810834180 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55c8108340c8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55c81081ba00 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55c810834140 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55c810834128 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55c8108340e8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55c810820aa8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55c810834168 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55c810834108 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c81081ba78 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c81081bc60 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55c81081bbd0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55c810834690 <col:56, line:354:5>
|   |-DeclStmt 0x55c810834438 <line:346:9, col:51>
|   | `-VarDecl 0x55c810834270 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55c810834420 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55c8108343f0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55c8108343d8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55c8108343c0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55c810834390 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55c810834378 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55c810834360 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55c810834330 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55c8108345f0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55c8108344a0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55c810821208
|   | | `-MemberExpr 0x55c810834470 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55c8108221b8
|   | |   `-DeclRefExpr 0x55c810834450 <col:9> 'Timestamp' lvalue Var 0x55c810834270 't' 'Timestamp'
|   | `-BinaryOperator 0x55c8108345d0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55c8108345a0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c8108344d0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55c81081bbd0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55c8108345b8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55c810834580 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55c810834560 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55c810834530 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55c8108344f0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55c810834548 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55c810834510 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c8108168e0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55c810834678 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55c810834648 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55c810834630 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55c810834610 <col:16> 'Timestamp' lvalue Var 0x55c810834270 't' 'Timestamp'
|-CXXMethodDecl 0x55c81081be28 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55c81081bd18 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c81081bd90 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c810834848 <col:72, line:360:5>
|   `-ReturnStmt 0x55c810834838 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55c810834820 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55c8108347f0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c8108347d8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55c810834798 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55c810834780 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55c8108346c8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55c81081bd18 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55c810834740 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55c810834728 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55c8108346e8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55c810820bf0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55c810834768 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55c810834708 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c81081bd90 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c81081bf78 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55c81081bee8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55c810834cb8 <col:56, line:371:5>
|   |-DeclStmt 0x55c810834a38 <line:363:9, col:51>
|   | `-VarDecl 0x55c810834870 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55c810834a20 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55c8108349f0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55c8108349d8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55c8108349c0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55c810834990 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55c810834978 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55c810834960 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55c810834930 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55c810834c18 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55c810834aa0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55c810821208
|   | | `-MemberExpr 0x55c810834a70 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55c8108221b8
|   | |   `-DeclRefExpr 0x55c810834a50 <col:9> 'Timestamp' lvalue Var 0x55c810834870 't' 'Timestamp'
|   | `-CallExpr 0x55c810834bb8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55c810834ba0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55c810834ad0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55c8108224e8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55c810834be8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55c810834af0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55c81081bee8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55c810834c00 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55c810834b80 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55c810834b50 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55c810834b10 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816730 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55c810834b68 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55c810834b30 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55c810834ca0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55c810834c70 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55c810834c58 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55c810834c38 <col:16> 'Timestamp' lvalue Var 0x55c810834870 't' 'Timestamp'
|-CXXMethodDecl 0x55c81081c068 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55c810834df8 <col:39, line:377:5>
|   `-ReturnStmt 0x55c810834de8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55c810834dd0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55c810834da0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c810834d88 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55c810834d48 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55c810834cf0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55c810834d30 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55c810834d10 <col:29> 'int' 1
|-CXXMethodDecl 0x55c81081c128 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55c810834ed8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55c810834e90 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55c810834e20 <col:9> '<bound member function type>' ->assign 0x55c81081f298
|     | `-CXXThisExpr 0x55c810834e10 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55c810834e50 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55c810834ec0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55c810834e70 <col:19> 'int' 0
|-CXXMethodDecl 0x55c81081f298 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55c81081f150 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c81081f1c8 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55c810827620 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c810827600 <col:60> 'int' 0
| `-CompoundStmt 0x55c8108350d0 <col:63, line:395:5>
|   `-BinaryOperator 0x55c8108350b0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55c810834f30 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55c810821208
|     | `-MemberExpr 0x55c810834f00 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55c8108221b8
|     |   `-CXXThisExpr 0x55c810834ef0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55c810835090 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55c810835020 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55c810834fc0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55c810834fa8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55c810834f90 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55c810834f60 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55c81081f150 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55c810835008 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55c810834fe8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55c810835078 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55c810835060 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55c810835040 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c81081f1c8 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c81081f468 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55c81081f358 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c81081f3d0 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c810835228 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55c8108351e0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55c8108350f8 <col:9> '<bound member function type>' ->assign 0x55c81081f298
|     | `-CXXThisExpr 0x55c8108350e8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55c810835210 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55c810835128 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55c81081f358 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55c8108351a0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55c810835188 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c810835148 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55c810820aa8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55c8108351c8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55c810835168 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c81081f3d0 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c81081f638 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55c81081f528 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c81081f5a0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c810835380 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55c810835338 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55c810835250 <col:9> '<bound member function type>' ->assign 0x55c81081f298
|     | `-CXXThisExpr 0x55c810835240 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55c810835368 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55c810835280 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55c81081f528 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55c8108352f8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55c8108352e0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c8108352a0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55c810820bf0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55c810835320 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55c8108352c0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c81081f5a0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c81081f808 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55c81081f6f8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c81081f770 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55c810827658 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c810827638 <col:57> 'int' 0
| `-DeprecatedAttr 0x55c81081f8b8 <col:75> "" ""
|-CXXMethodDecl 0x55c81081fa48 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55c81081f938 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c81081f9b0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c81081faf8 <col:74> "" ""
|-CXXMethodDecl 0x55c81081fc88 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55c81081fb78 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55c81081fbf0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c81081fd38 <col:74> "" ""
|-CXXMethodDecl 0x55c81081fdc8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55c81081fe68 <col:42> "" ""
|-CXXMethodDecl 0x55c810820010 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55c81081fef0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55c81081ff70 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55c8108200e0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55c8108201a0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55c810820240 <col:20>
| `-OptimizeNoneAttr 0x55c810820298 <col:30>
|-CXXMethodDecl 0x55c8108202e0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55c8108203a0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55c810820460 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55c810820520 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55c8108205e0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55c8108206a0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55c810820760 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55c810820820 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55c810820960 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55c8108208d0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c8108354c8 <col:58, line:512:5>
|   `-ReturnStmt 0x55c8108354b8 <line:511:9, col:53>
|     `-BinaryOperator 0x55c810835498 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55c810835468 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55c810835398 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c8108208d0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55c810835480 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55c810835448 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55c810835428 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55c8108353f8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55c8108353b8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55c810835410 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55c8108353d8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a00 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c810820aa8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55c810820a18 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c810835610 <col:58, line:516:5>
|   `-ReturnStmt 0x55c810835600 <line:515:9, col:53>
|     `-BinaryOperator 0x55c8108355e0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55c8108355b0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55c8108354e0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c810820a18 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55c8108355c8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55c810835590 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55c810835570 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55c810835540 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55c810835500 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55c810835558 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55c810835520 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c8108168e0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c810820bf0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55c810820b60 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c810835758 <col:58, line:520:5>
|   `-ReturnStmt 0x55c810835748 <line:519:9, col:53>
|     `-BinaryOperator 0x55c810835728 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55c8108356f8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55c810835628 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c810820b60 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55c810835710 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55c8108356d8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55c8108356b8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55c810835688 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55c810835648 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816730 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55c8108356a0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55c810835668 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c810820d38 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55c810820ca8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c8108358a0 <col:60, line:524:5>
|   `-ReturnStmt 0x55c810835890 <line:523:9, col:55>
|     `-BinaryOperator 0x55c810835870 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55c810835840 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55c810835770 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c810820ca8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55c810835858 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55c810835820 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55c810835800 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55c8108357d0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55c810835790 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55c8108357e8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55c8108357b0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a00 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c810820e80 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55c810820df0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c8108359e8 <col:60, line:528:5>
|   `-ReturnStmt 0x55c8108359d8 <line:527:9, col:55>
|     `-BinaryOperator 0x55c8108359b8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55c810835988 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55c8108358b8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c810820df0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55c8108359a0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55c810835968 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55c810835948 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55c810835918 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55c8108358d8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55c810835930 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55c8108358f8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c8108168e0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55c810820fc8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55c810820f38 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c810835b30 <col:60, line:532:5>
|   `-ReturnStmt 0x55c810835b20 <line:531:9, col:55>
|     `-BinaryOperator 0x55c810835b00 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55c810835ad0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55c810835a00 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c810820f38 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55c810835ae8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55c810835ab0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55c810835a90 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55c810835a60 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55c810835a20 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816730 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55c810835a78 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55c810835a40 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55c810816a90 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55c810821070 prev 0x55c810818500 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c810821168 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55c810821208 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55c8108276a8 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55c810827a88 <col:11>
| |-CXXConstructorDecl 0x55c810827780 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c810827868 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55c8108281d0 <col:11>
| |-CXXConstructorDecl 0x55c810827908 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c810827a18 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55c810829a28 <col:11>
| |-CXXDestructorDecl 0x55c810828d38 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55c810528c58 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c810528d68 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55c810529630 <col:11>
| |   `-ReturnStmt 0x55c810529620 <col:11>
| |     `-UnaryOperator 0x55c810529608 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55c8105295f8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55c810528dd8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55c810528ee8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55c8108b10a0 <col:11>
|     `-ReturnStmt 0x55c8108b1090 <col:11>
|       `-UnaryOperator 0x55c8108b1078 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c8108b1068 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55c810821270 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55c810821370 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55c810821570 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810821350 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55c810821330 <col:21> 'int' 0
| |-EnumConstantDecl 0x55c810821400 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55c810821588 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108213e0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55c8108213c0 <col:23> 'int' 1
| |-EnumConstantDecl 0x55c810821490 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55c8108215a0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810821470 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55c810821450 <col:23> 'int' 2
| `-EnumConstantDecl 0x55c810821520 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55c8108215b8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810821500 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55c8108214e0 <col:27> 'int' 3
|-CXXMethodDecl 0x55c8108215f8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55c8108216c0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55c8108218c8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55c810821770 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55c8108217f0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55c810827670 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55c810821ad8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55c810821988 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55c810821a00 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55c810821ba8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55c810821c68 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55c810821dd8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55c810821d18 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55c810821ea0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55c810821f60 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55c810822020 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55c8108220e0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55c810822180 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55c8108221b8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55c810822228 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55c810835b48 <col:27, line:684:5>
|-CXXMethodDecl 0x55c8108222e8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55c810835b58 <col:27, line:696:5>
|-CXXMethodDecl 0x55c8108224e8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55c810822398 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55c810822410 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c810835ce0 <col:66, line:700:5>
|   `-ReturnStmt 0x55c810835cd0 <line:699:9, col:31>
|     `-CallExpr 0x55c810835c70 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55c810835c58 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c810835c08 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55c8106a3428 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55c810835ca0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55c810835bc8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55c810822398 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55c810835cb8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55c810835be8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c810822410 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c810822858 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55c8108225a8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55c810822620 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55c810822698 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55c810822710 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c810836030 <col:64, line:707:5>
|   |-DeclStmt 0x55c810835d70 <line:704:9, col:24>
|   | `-VarDecl 0x55c810835d08 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55c810835f80 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55c810835d88 <col:9> 'int32_t':'int' lvalue ParmVar 0x55c810822620 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55c810835f68 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55c810835f00 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55c810835ee8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c810835e68 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55c8106a8a78 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55c810835f38 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55c810835e08 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55c810822698 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55c810835f50 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55c810835e28 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c810822710 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55c810835e48 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55c810835d08 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55c810836010 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55c810835fa0 <col:9> 'int32_t':'int' lvalue ParmVar 0x55c8108225a8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55c810835ff8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55c810835fe0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55c810835fc0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55c810835d08 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55c810822af8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55c810822928 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55c8108229a0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55c810822a18 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55c810822d98 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55c810822bc0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55c810822c38 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55c810822cb0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55c810822f28 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55c810822e60 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55c810826970 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55c810822fe0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55c810823058 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55c810826c38 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55c810826b78 parent 0x55c810317488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55c810826a30 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55c810826aa8 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55c810826e58 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55c810826d98 parent 0x55c810317488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55c810826c88 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55c810826d00 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55c810827020 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55c810826f68 parent 0x55c810317488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55c810826ea8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55c8108272a8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55c8108271e8 parent 0x55c810317488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55c810827098 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55c810827110 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55c8108274c8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55c810827408 parent 0x55c810317488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55c8108272f8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55c810827370 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55c810828be0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c810828cc8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55c8108221b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c810829738 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55c8108296f0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55c8108221b8
| |     `-DeclRefExpr 0x55c8108296d0 <col:7> 'const Timestamp' lvalue ParmVar 0x55c810828cc8 '' 'const Timestamp &'
| `-CompoundStmt 0x55c810829798 <col:7>
|-CXXConstructorDecl 0x55c810828e48 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55c810828f58 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55c8108221b8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55c810829a38 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55c8108299e0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55c8108221b8
| |     `-CXXStaticCastExpr 0x55c8108299b0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55c810829980 <col:7> 'Timestamp' lvalue ParmVar 0x55c810828f58 '' 'Timestamp &&'
| `-CompoundStmt 0x55c810829a98 <col:7>
|-CXXDestructorDecl 0x55c810829008 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c810528ab0 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c810528bb8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55c8105296a8 <col:7>
|   |-CXXMemberCallExpr 0x55c810529648 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55c810529588 <col:7> '<bound member function type>' .operator= 0x55c810528c58
|   | | `-MemberExpr 0x55c810529498 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55c8108221b8
|   | |   `-CXXThisExpr 0x55c810529488 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55c810529558 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55c8108221b8
|   |   `-DeclRefExpr 0x55c810529538 <col:7> 'const Timestamp' lvalue ParmVar 0x55c810528bb8 '' 'const Timestamp &'
|   `-ReturnStmt 0x55c810529698 <col:7>
|     `-UnaryOperator 0x55c810529680 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c810529670 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55c810528f58 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55c810529068 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55c8108b1118 <col:7>
    |-CXXMemberCallExpr 0x55c8108b10b8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55c8108b1020 <col:7> '<bound member function type>' .operator= 0x55c810528dd8
    | | `-MemberExpr 0x55c8108b0ef0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55c8108221b8
    | |   `-CXXThisExpr 0x55c8108b0ee0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55c8108b0ff0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55c8108221b8
    |   `-CXXStaticCastExpr 0x55c8108b0fc0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55c8108b0f90 <col:7> 'Timestamp' lvalue ParmVar 0x55c810529068 '' 'Timestamp &&'
    `-ReturnStmt 0x55c8108b1108 <col:7>
      `-UnaryOperator 0x55c8108b10f0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55c8108b10e0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8108ae0f8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55c8108ae228 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55c8108aed18 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.17 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810a88830 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c810a88948 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55c810a88a18 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55c810a88a78 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55c810a88ae0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55c810a88b68 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55c810a88dd0 <col:16, line:46:5>
|   |-BinaryOperator 0x55c810a88d18 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55c810a88c38 <col:9> 'TaskLink *' lvalue ->_prev 0x55c810a88a18
|   | | `-CXXThisExpr 0x55c810a88c28 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55c810a88d00 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55c810a88ce0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55c810a88c78 <col:17> 'TaskLink *' lvalue ->_next 0x55c810a88a78
|   |     | `-CXXThisExpr 0x55c810a88c68 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55c810a88cc8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55c810a88ca8 <col:25> 'int' 0
|   `-BinaryOperator 0x55c810a88db0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55c810a88d48 <col:9> 'unsigned int' lvalue ->_pass 0x55c810a88ae0
|     | `-CXXThisExpr 0x55c810a88d38 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55c810a88d98 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55c810a88d78 <col:17> 'int' 0
|-CXXConstructorDecl 0x55c810adf3e8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55c810adf3e8
| `-ParmVarDecl 0x55c810adf4f8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55c810adf598 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55c810adf598
| `-ParmVarDecl 0x55c810adf6a8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55c810adf898 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55c810adf898
|-CXXMethodDecl 0x55c810ae0098 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55c810ae0098
| `-ParmVarDecl 0x55c810ae01a8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55c810ae0218 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55c810ae0218
  `-ParmVarDecl 0x55c810ae0328 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810a8f768 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55c810a8f978 prev 0x55c810a8f768 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c810a93840 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55c810a937f0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55c810a937d0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55c810a93680 'type'
|     `-SubstTemplateTypeParmType 0x55c810a934a0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55c8105fd290 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8105fd238 'T'
|       `-RecordType 0x55c810a92ff0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55c810a92f08 'sized_array_memory'
|-FieldDecl 0x55c810a97470 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55c810a974c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c810a974f8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55c810a8fa10 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c8106333f8 'T'
|   `-RecordType 0x55c810a8e970 'TimerSet::heap_element'
|     `-CXXRecord 0x55c810a8e8e0 'heap_element'
|-TypedefDecl 0x55c810a975b8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55c810a97580 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55c810a8fa10 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810a8e970 'TimerSet::heap_element'
|       `-CXXRecord 0x55c810a8e8e0 'heap_element'
|-TypedefDecl 0x55c810a97648 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55c810a97610 'const TimerSet::heap_element &'
|   `-QualType 0x55c810a8fa11 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55c810a8fa10 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810a8e970 'TimerSet::heap_element'
|         `-CXXRecord 0x55c810a8e8e0 'heap_element'
|-TypedefDecl 0x55c810a976d8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55c810a976a0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55c810a8fa10 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810a8e970 'TimerSet::heap_element'
|       `-CXXRecord 0x55c810a8e8e0 'heap_element'
|-TypedefDecl 0x55c810a97798 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55c810a97760 'const TimerSet::heap_element *'
|   `-QualType 0x55c810a8fa11 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55c810a8fa10 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810a8e970 'TimerSet::heap_element'
|         `-CXXRecord 0x55c810a8e8e0 'heap_element'
|-TypedefDecl 0x55c810a983f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55c810a983a0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55c810a98380 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55c810a982b8 'type'
|     `-LValueReferenceType 0x55c810a98280 'const TimerSet::heap_element &'
|       `-QualType 0x55c810a98021 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55c810a98020 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55c810604d60 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55c810604d08 'T'
|           `-RecordType 0x55c810a8e970 'TimerSet::heap_element'
|             `-CXXRecord 0x55c810a8e8e0 'heap_element'
|-TypedefDecl 0x55c810a98458 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55c810a97610 'const TimerSet::heap_element &'
|   `-QualType 0x55c810a8fa11 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55c810a8fa10 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810a8e970 'TimerSet::heap_element'
|         `-CXXRecord 0x55c810a8e8e0 'heap_element'
|-TypedefDecl 0x55c810a984b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810a98518 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55c810a976a0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55c810a8fa10 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810a8e970 'TimerSet::heap_element'
|       `-CXXRecord 0x55c810a8e8e0 'heap_element'
|-TypedefDecl 0x55c810a98580 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55c810a97760 'const TimerSet::heap_element *'
|   `-QualType 0x55c810a8fa11 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55c810a8fa10 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810a8e970 'TimerSet::heap_element'
|         `-CXXRecord 0x55c810a8e8e0 'heap_element'
|-EnumDecl 0x55c810a985d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55c810a986d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c810a986b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c810634618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c8106345f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c8106345d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c810a98758 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c810a989e8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810a98810 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810a988b0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55c810a98ca8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55c810a98b90 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55c810a98f68 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55c810a98e50 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55c810a992b0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55c810a99190 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55c810a995c0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55c810a994a0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55c810a998b0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810a996f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810a99770 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55c810a99a08 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55c810a99ae8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810a99b40 <col:30> Inherited
|-CXXMethodDecl 0x55c810a99b88 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55c810a99c38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810a99c90 <col:30> Inherited
|-CXXMethodDecl 0x55c810a99d58 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55c810a99e08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810a99e60 <col:30> Inherited
|-CXXMethodDecl 0x55c810a99ea8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55c810a99f58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810a99fb0 <col:30> Inherited
|-CXXMethodDecl 0x55c810a99ff8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55c810a9a0a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810a9a100 <col:30> Inherited
|-CXXMethodDecl 0x55c810a9a148 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55c810a9a1f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810a9a250 <col:30> Inherited
|-CXXMethodDecl 0x55c810a9a278 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810a9a328 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810a9a3d8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55c810a9a598 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810a9a488 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810a9a500 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55c810a9a6e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c810a9a658 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810a9a898 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55c810a9a7a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810a9a950 <col:20>
| `-OptimizeNoneAttr 0x55c810a9a9a8 <col:30>
|-CXXMethodDecl 0x55c810a9aac8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55c810a9a9d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810a9ab80 <col:20>
| `-OptimizeNoneAttr 0x55c810a9abd8 <col:30>
|-CXXMethodDecl 0x55c810a9ac90 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810a9ac00 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810a9c5a0 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810a9ad48 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810a9c6d8 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55c810a9c808 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55c810a9c8d8 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55c810a9c9a8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55c810a9cae8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810a9ca58 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810a9cc30 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810a9cba0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810a9cd78 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55c810a9cce8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810a9ce30 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c810a9cf30 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c810a9cea0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810a9cfe8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c810a9d0a8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55c810a9d1a8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55c810a9d358 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810a9d268 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55c810a9db18 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c810a9d410 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55c810a9da78 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55c810a9d978 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55c810a9dbf8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c810a9dd48 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810a9dcb8 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55c810a9de00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c810a9e048 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810a9dec0 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55c810a9df38 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55c810a9e208 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55c810a9e118 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55c810a9e458 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55c810a9e2d0 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55c810a9e348 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55c810a9e518 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c810a9e778 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55c810a9e680 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55c810a9e848 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55c810a9e848

Layout: <CGRecordLayout
  LLVMType:%class.Vector.18 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.18 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810a9e990 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55c810a9eb98 prev 0x55c810a9e990 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c810a9fbb0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55c810a9fb60 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55c810a9fb40 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55c810a9f9f0 'type'
|     `-SubstTemplateTypeParmType 0x55c810953fc0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55c8105fd290 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8105fd238 'T'
|       `-RecordType 0x55c810953b10 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55c810953a28 'sized_array_memory'
|-FieldDecl 0x55c810a9fcb0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55c810a9fd00 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c810a9fd38 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55c810a9ec30 'Timer *' sugar
|   |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c8106333f8 'T'
|   `-PointerType 0x55c8108896d0 'Timer *'
|     `-RecordType 0x55c810888820 'Timer'
|       `-CXXRecord 0x55c81080b018 'Timer'
|-TypedefDecl 0x55c810a9fdf8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55c810a9fdc0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55c810a9ec30 'Timer *' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-PointerType 0x55c8108896d0 'Timer *'
|       `-RecordType 0x55c810888820 'Timer'
|         `-CXXRecord 0x55c81080b018 'Timer'
|-TypedefDecl 0x55c810a9feb8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55c810a9fe80 'Timer *const &'
|   `-QualType 0x55c810a9ec31 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55c810a9ec30 'Timer *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c8108896d0 'Timer *'
|         `-RecordType 0x55c810888820 'Timer'
|           `-CXXRecord 0x55c81080b018 'Timer'
|-TypedefDecl 0x55c810a9ff78 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55c810a9ff40 'Timer **'
|   `-SubstTemplateTypeParmType 0x55c810a9ec30 'Timer *' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-PointerType 0x55c8108896d0 'Timer *'
|       `-RecordType 0x55c810888820 'Timer'
|         `-CXXRecord 0x55c81080b018 'Timer'
|-TypedefDecl 0x55c810aa0038 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55c810aa0000 'Timer *const *'
|   `-QualType 0x55c810a9ec31 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55c810a9ec30 'Timer *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c8108896d0 'Timer *'
|         `-RecordType 0x55c810888820 'Timer'
|           `-CXXRecord 0x55c81080b018 'Timer'
|-TypedefDecl 0x55c810aa0c10 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55c810aa0bc0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55c810aa0ba0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55c810aa0b30 'type'
|     `-SubstTemplateTypeParmType 0x55c810aa08f0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55c810605490 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c810605440 'T'
|       `-PointerType 0x55c8108896d0 'Timer *'
|         `-RecordType 0x55c810888820 'Timer'
|           `-CXXRecord 0x55c81080b018 'Timer'
|-TypedefDecl 0x55c810aa0c78 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55c810a9fe80 'Timer *const &'
|   `-QualType 0x55c810a9ec31 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55c810a9ec30 'Timer *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c8108896d0 'Timer *'
|         `-RecordType 0x55c810888820 'Timer'
|           `-CXXRecord 0x55c81080b018 'Timer'
|-TypedefDecl 0x55c810aa0cd0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810aa0d38 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55c810a9ff40 'Timer **'
|   `-SubstTemplateTypeParmType 0x55c810a9ec30 'Timer *' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-PointerType 0x55c8108896d0 'Timer *'
|       `-RecordType 0x55c810888820 'Timer'
|         `-CXXRecord 0x55c81080b018 'Timer'
|-TypedefDecl 0x55c810aa0da0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55c810aa0000 'Timer *const *'
|   `-QualType 0x55c810a9ec31 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55c810a9ec30 'Timer *' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-PointerType 0x55c8108896d0 'Timer *'
|         `-RecordType 0x55c810888820 'Timer'
|           `-CXXRecord 0x55c81080b018 'Timer'
|-EnumDecl 0x55c810aa0df8 <line:134:5> col:5
| `-EnumConstantDecl 0x55c810aa0ef0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c810aa0ed0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c810634618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c8106345f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c8106345d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c810aa0f78 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c810aa1208 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810aa1030 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810aa10d0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55c810aa14c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55c810aa13b0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55c810aa1788 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55c810aa1670 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55c810aa1ad0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55c810aa19b0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55c810aa1de0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55c810aa1cc0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55c810aa20d0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810aa1f18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810aa1f90 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55c810aa2228 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55c810aa2308 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810aa2360 <col:30> Inherited
|-CXXMethodDecl 0x55c810aa23a8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55c810aa2458 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810aa24b0 <col:30> Inherited
|-CXXMethodDecl 0x55c810aa2578 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55c810aa2628 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810aa2680 <col:30> Inherited
|-CXXMethodDecl 0x55c810aa26c8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55c810aa2778 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810aa27d0 <col:30> Inherited
|-CXXMethodDecl 0x55c810aa2818 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55c810aa28c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810aa2920 <col:30> Inherited
|-CXXMethodDecl 0x55c810aa2968 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55c810aa2a18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810aa2a70 <col:30> Inherited
|-CXXMethodDecl 0x55c810aa2a98 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810aa2b48 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810aa2bf8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c810aa2db8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810aa2ca8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810aa2d20 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55c810aa2f08 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c810aa2e78 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810aa30b8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55c810aa2fc0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810aa3170 <col:20>
| `-OptimizeNoneAttr 0x55c810aa31c8 <col:30>
|-CXXMethodDecl 0x55c810aa32e8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55c810aa31f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810aa33a0 <col:20>
| `-OptimizeNoneAttr 0x55c810aa33f8 <col:30>
|-CXXMethodDecl 0x55c810aa34b0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810aa3420 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810aa35f8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810aa3568 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810aa3728 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55c810aa3858 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55c810aa3928 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55c810aa39f8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55c810aa3b38 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810aa3aa8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810aa3c80 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810aa3bf0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810aa3dc8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55c810aa3d38 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810aa3e80 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c810aa3f80 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c810aa3ef0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810aa4038 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c810aa40f8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55c810aa41f8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55c810aa4378 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810aa42b8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55c810aa5ea8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c810aa4430 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55c810aa5e08 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55c810aa5d08 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55c810aa5f88 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c810aa60d8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810aa6048 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55c810aa6190 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c810aa63d8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810aa6250 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55c810aa62c8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55c810aa6598 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55c810aa64a8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55c810aa67e8 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55c810aa6660 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55c810aa66d8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55c810aa68a8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c810aa6b08 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55c810aa6a10 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55c810aa6bd8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55c810aa6bd8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.19 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.19 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8105eacd0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c8105eade8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55c8105eae78 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55c8105eaf00 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55c8105eaff0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55c8105eb0f0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55c8105eb1b0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55c8105eb270 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55c8105eb398 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55c8105eb398
| `-ParmVarDecl 0x55c8105eb4a8 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55c810aa7988 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55c810aa7988
  `-ParmVarDecl 0x55c810aa7a98 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810a8da60 prev 0x55c8108aeba8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55c810a8db58 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55c810a8dbe8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55c810a8dc70 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55c810a8dd68 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55c810aa7e00 <col:43, col:67>
|   `-ReturnStmt 0x55c810aa7df0 <col:45, col:52>
|     `-CXXConstructExpr 0x55c810aa7dc0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55c810aa7d90 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55c810a8f550
|         `-CXXThisExpr 0x55c810aa7d80 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55c810a8de28 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55c810a8e030 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55c810a8ded8 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55c810a8df50 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55c810a8e128 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55c810a8e1f0 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55c810aa7e80 <col:39, col:67>
|   `-ReturnStmt 0x55c810aa7e70 <col:41, col:48>
|     `-ImplicitCastExpr 0x55c810aa7e58 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55c810aa7e28 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55c810a8f638
|         `-CXXThisExpr 0x55c810aa7e18 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55c810a8e2b8 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55c810aa7f00 <col:35, col:59>
|   `-ReturnStmt 0x55c810aa7ef0 <col:37, col:44>
|     `-ImplicitCastExpr 0x55c810aa7ed8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55c810aa7ea8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55c810a8f6a0
|         `-CXXThisExpr 0x55c810aa7e98 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55c810a8e400 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55c810a8e370 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55c810a8e548 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55c810a8e4b8 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55c810a8e748 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55c810a8e600 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55c810a8e678 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55c810a8e818 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55c810a8e8b8 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55c810a8e8e0 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c810a8e9f8 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55c810a8ea98 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55c810a8eaf8 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55c810a8ec28 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55c810a8eb58 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55c810a8ea98 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55c810aa7fd8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55c810aa7f80 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55c810aa7f50 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55c81080c688
|   |       `-ImplicitCastExpr 0x55c810aa7fa0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55c810aa7f38 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55c810aa7f18 <col:17> 'Timer *' lvalue ParmVar 0x55c810a8eb58 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55c810a8eaf8 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55c810aa8070 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c810aa8030 <col:41> 'Timer *' lvalue ParmVar 0x55c810a8eb58 't_' 'Timer *'
|   `-CompoundStmt 0x55c810aa80c0 <col:45, line:44:2>
|-CXXRecordDecl 0x55c810a8ecf0 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c810a8ee08 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55c810a8f058 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55c810a8eed8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55c810a8ef50 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55c810aa8220 <col:71, line:49:2>
|     `-ReturnStmt 0x55c810aa8210 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55c810aa81d8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55c810aa81c0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55c810aa81a0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55c810842cd8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55c810aa80f0 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55c810a8ea98
|         | `-DeclRefExpr 0x55c810aa80d0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55c810a8eed8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55c810aa8140 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55c810a8ea98
|           `-DeclRefExpr 0x55c810aa8120 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55c810a8ef50 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55c810a8f120 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c810a8f238 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55c810a8f458 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55c810a8f2d8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55c810a8f350 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55c810aa8428 <col:63, line:54:2>
|     `-BinaryOperator 0x55c810aa8408 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55c810aa82b8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55c8108ae048
|       | `-ImplicitCastExpr 0x55c810aa82a0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55c810aa8270 <col:6, col:9> 'Timer *' lvalue ->t 0x55c810a8eaf8
|       |     `-ImplicitCastExpr 0x55c810aa8258 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55c810aa8238 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55c810a8f350 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55c810aa83f0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55c810aa83d0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55c810aa8378 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55c810aa8358 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55c810aa8328 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55c810aa82e8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55c810a8f350 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55c810aa8340 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55c810aa8308 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55c810a8f2d8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55c810aa83b8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55c810aa8398 <col:39> 'int' 1
|-FieldDecl 0x55c810a8f550 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55c810a8f5c0 <col:44, col:53> aligned
|   `-ConstantExpr 0x55c810a8f5a0 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55c810a8f520 <col:52> 'int' 8
|-FieldDecl 0x55c810a8f638 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55c810a8f6a0 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55c810a8f708 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55c810a9e930 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55c810aa6cc0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55c810aa6d20 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55c810aa6d80 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55c810aa6de0 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c810aa6ed0 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55c810aa6e40 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55c810aa6f98 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55c810aa8880 <col:29, line:81:5>
|   `-IfStmt 0x55c810aa8858 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55c810aa8510 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55c810aa84b0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55c810aa8480 <col:6, col:18> '<bound member function type>' .size 0x55c810a9a278
|     |     `-ImplicitCastExpr 0x55c810aa84f8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55c810aa8450 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55c810a9e930
|     |         `-CXXThisExpr 0x55c810aa8440 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55c810aa8700 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55c810aa86e8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55c810aa86c8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55c810528ab0 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55c810aa8538 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55c810a8f550
|     | | `-CXXThisExpr 0x55c810aa8528 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55c810aa86b0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55c810aa8680 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55c810a8ea98
|     |     `-CXXMemberCallExpr 0x55c810aa8658 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55c810aa8628 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55c810a9cae8
|     |       | `-MemberExpr 0x55c810aa8578 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55c810a9e930
|     |       |   `-CXXThisExpr 0x55c810aa8568 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55c810aa8608 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55c810aa8840 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55c810aa8808 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55c810aa87f0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55c810aa87d0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55c810528f58 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55c810aa8748 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55c810a8f550
|         | `-CXXThisExpr 0x55c810aa8738 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55c810aa87b8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55c810aa8788 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55c810aa70d8 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55c810aa7048 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55c810aa71a0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55c810aa7260 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55c810aa7320 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55c810aa7410 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55c810aa7478 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55c810aa7478
| `-ParmVarDecl 0x55c810aa7588 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55c810aa7628 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55c810aa7628
| `-ParmVarDecl 0x55c810aa7738 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55c810aa77d8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55c810aa77d8
| `-ParmVarDecl 0x55c810aa78e8 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55c810aa7b08 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55c810aa7b08
| `-ParmVarDecl 0x55c810aa7c18 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55c810aa7ca0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55c810aa7ca0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.18, %class.Vector.19, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.18, %class.Vector.19, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810ad0268 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55c810ad0478 prev 0x55c810ad0268 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c810738f30 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55c810738ee0 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55c810738ec0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55c810738d70 'type'
|     `-SubstTemplateTypeParmType 0x55c810953fc0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55c8105fd290 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8105fd238 'T'
|       `-RecordType 0x55c810953b10 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55c810953a28 'sized_array_memory'
|-FieldDecl 0x55c810739030 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55c810739080 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c8107390b8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55c810ad0510 'pollfd' sugar
|   |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c8106333f8 'T'
|   `-RecordType 0x55c810ace320 'pollfd'
|     `-CXXRecord 0x55c810ace290 'pollfd'
|-TypedefDecl 0x55c810739178 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55c810739140 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55c810ad0510 'pollfd' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810ace320 'pollfd'
|       `-CXXRecord 0x55c810ace290 'pollfd'
|-TypedefDecl 0x55c810739238 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55c810739200 'const pollfd &'
|   `-QualType 0x55c810ad0511 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55c810ad0510 'pollfd' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810ace320 'pollfd'
|         `-CXXRecord 0x55c810ace290 'pollfd'
|-TypedefDecl 0x55c8107392c8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55c810739290 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55c810ad0510 'pollfd' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810ace320 'pollfd'
|       `-CXXRecord 0x55c810ace290 'pollfd'
|-TypedefDecl 0x55c810739388 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55c810739350 'const pollfd *'
|   `-QualType 0x55c810ad0511 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55c810ad0510 'pollfd' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810ace320 'pollfd'
|         `-CXXRecord 0x55c810ace290 'pollfd'
|-TypedefDecl 0x55c810739f60 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55c810739f10 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55c810739ef0 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55c810739e80 'type'
|     `-SubstTemplateTypeParmType 0x55c810739c40 'pollfd' sugar
|       |-TemplateTypeParmType 0x55c810605490 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c810605440 'T'
|       `-RecordType 0x55c810ace320 'pollfd'
|         `-CXXRecord 0x55c810ace290 'pollfd'
|-TypedefDecl 0x55c810739fc8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55c810739200 'const pollfd &'
|   `-QualType 0x55c810ad0511 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55c810ad0510 'pollfd' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810ace320 'pollfd'
|         `-CXXRecord 0x55c810ace290 'pollfd'
|-TypedefDecl 0x55c81073a020 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c81073a088 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55c810739290 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55c810ad0510 'pollfd' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810ace320 'pollfd'
|       `-CXXRecord 0x55c810ace290 'pollfd'
|-TypedefDecl 0x55c81073a0f0 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55c810739350 'const pollfd *'
|   `-QualType 0x55c810ad0511 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55c810ad0510 'pollfd' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810ace320 'pollfd'
|         `-CXXRecord 0x55c810ace290 'pollfd'
|-EnumDecl 0x55c81073a148 <line:134:5> col:5
| `-EnumConstantDecl 0x55c81073a240 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c81073a220 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c810634618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c8106345f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c8106345d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c81073a2c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c81073a558 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55c81073a380 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c81073a420 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55c81073a818 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55c81073a700 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55c81073aad8 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55c81073a9c0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55c81073ae20 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55c81073ad00 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55c81073b130 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55c81073b010 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55c81073b420 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55c81073b268 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c81073b2e0 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55c81073b578 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55c81073b658 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c81073b6b0 <col:30> Inherited
|-CXXMethodDecl 0x55c81073b6f8 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55c81073b7a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c81073b800 <col:30> Inherited
|-CXXMethodDecl 0x55c81073b8c8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55c81073b978 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c81073b9d0 <col:30> Inherited
|-CXXMethodDecl 0x55c81073ba18 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55c81073bac8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c81073bb20 <col:30> Inherited
|-CXXMethodDecl 0x55c81073bb68 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55c81073bc18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c81073bc70 <col:30> Inherited
|-CXXMethodDecl 0x55c81073bcb8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55c81073bd68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c81073bdc0 <col:30> Inherited
|-CXXMethodDecl 0x55c81073bde8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c81073be98 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c81073bf48 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c81073c108 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55c81073bff8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c81073c070 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55c81073c258 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c81073c1c8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c81073c408 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55c81073c310 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c81073c4c0 <col:20>
| `-OptimizeNoneAttr 0x55c81073c518 <col:30>
|-CXXMethodDecl 0x55c81073c638 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55c81073c540 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c81073c6f0 <col:20>
| `-OptimizeNoneAttr 0x55c81073c748 <col:30>
|-CXXMethodDecl 0x55c81073c800 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c81073c770 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c81073c948 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c81073c8b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c81073ca78 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55c81073cba8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55c81073cc78 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55c81073cd48 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55c81073ce88 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c81073cdf8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c81073cfd0 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c81073cf40 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c81073d118 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55c81073d088 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c81073d1d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c81073d2d0 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c81073d240 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c81073d388 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c81073d448 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55c81073d548 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55c81073d6f8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55c81073d608 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55c81073deb8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c81073d7b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55c81073de18 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55c81073dd18 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55c81073df98 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c81073e0e8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55c81073e058 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55c81073e1a0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c81073e3e8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55c81073e260 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55c81073e2d8 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55c81073e5a8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55c81073e4b8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55c81073e7f8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55c81073e670 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55c81073e6e8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55c81073e8b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c81073eb18 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55c81073ea20 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55c81073ebe8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55c81073ebe8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.20 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.20 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c8107400d0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55c8107402a8 prev 0x55c8107400d0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55c810740338 <col:46, col:52> col:46 public
|-TypedefDecl 0x55c810740360 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810ad25c0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55c810ad2570 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55c810740810 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55c810740710 'type'
|     `-TemplateSpecializationType 0x55c8107406a0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55c810740580 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55c810740560 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55c810740540 <col:24> 'unsigned long' 24
|       `-RecordType 0x55c810740680 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55c8107405a0 'char_array'
|-TypedefDecl 0x55c810ad2678 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55c810ad2640 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55c810ad2620 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55c810ad25c0 'type'
|     `-ElaboratedType 0x55c810ad2570 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55c810740810 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55c810740710 'type'
|         `-TemplateSpecializationType 0x55c8107406a0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55c810740580 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55c810740560 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55c810740540 <col:24> 'unsigned long' 24
|           `-RecordType 0x55c810740680 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55c8107405a0 'char_array'
|-CXXMethodDecl 0x55c810ad27f8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55c810ad2708 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55c810ad28e8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55c810ad29c8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55c810ad29c8
|-CXXMethodDecl 0x55c810ad2c98 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55c810ad2ba0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55c810ad2ed8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55c810ad2d50 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810ad2dc8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55c810ad30a8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55c810ad2f98 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810ad3010 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55c810ad3208 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55c810ad32d8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55c810ad3528 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55c810ad3398 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55c810ad3410 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55c810ad3788 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55c810ad35f8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55c810ad3670 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55c810ad3948 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55c810ad3858 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55c810ad3b08 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55c810ad3a10 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55c810ad3bc0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c810ad3c70 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c810ad3ea8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55c810ad3d20 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55c810ad3d98 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55c810ad4148 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55c810ad4050 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55c810ad4210 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55c810ad4260 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55c810ad42b0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.22 = type { %struct.char_array.23*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.22 = type { %struct.char_array.23*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c81073ed30 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55c81073ef38 prev 0x55c81073ed30 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55c810740040 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55c81073fff0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55c81073ffd0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55c81073fe80 'type'
|     `-SubstTemplateTypeParmType 0x55c81073fca0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55c8105fd290 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8105fd238 'T'
|       `-RecordType 0x55c8109d21e0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55c8109d20f8 'sized_array_memory'
|-FieldDecl 0x55c810ad4300 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55c810ad4350 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55c810ad4388 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55c81073efd0 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55c8106333f8 'T'
|   `-RecordType 0x55c810acfdd0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55c810acfd40 'SelectorInfo'
|-TypedefDecl 0x55c810ad4448 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55c810ad4410 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55c81073efd0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810acfdd0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55c810acfd40 'SelectorInfo'
|-TypedefDecl 0x55c810ad4508 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55c810ad44d0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55c81073efd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55c81073efd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810acfdd0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55c810acfd40 'SelectorInfo'
|-TypedefDecl 0x55c810ad4598 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55c810ad4560 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55c81073efd0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810acfdd0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55c810acfd40 'SelectorInfo'
|-TypedefDecl 0x55c810ad4658 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55c810ad4620 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55c81073efd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55c81073efd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810acfdd0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55c810acfd40 'SelectorInfo'
|-TypedefDecl 0x55c810ad52b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55c810ad5260 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55c810ad5240 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55c810ad5178 'type'
|     `-LValueReferenceType 0x55c810ad5140 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55c810ad4ee1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55c810ad4ee0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55c810604d60 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55c810604d08 'T'
|           `-RecordType 0x55c810acfdd0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55c810acfd40 'SelectorInfo'
|-TypedefDecl 0x55c810ad5318 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55c810ad44d0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55c81073efd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55c81073efd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810acfdd0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55c810acfd40 'SelectorInfo'
|-TypedefDecl 0x55c810ad5370 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55c810317580 'int'
|-TypedefDecl 0x55c810ad53d8 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55c810ad4560 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55c81073efd0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55c8106333f8 'T'
|     `-RecordType 0x55c810acfdd0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55c810acfd40 'SelectorInfo'
|-TypedefDecl 0x55c810ad5440 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55c810ad4620 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55c81073efd1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55c81073efd0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55c810633450 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55c8106333f8 'T'
|       `-RecordType 0x55c810acfdd0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55c810acfd40 'SelectorInfo'
|-EnumDecl 0x55c810ad5498 <line:134:5> col:5
| `-EnumConstantDecl 0x55c810ad5590 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55c810ad5570 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55c810634618 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55c8106345f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55c8106345d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55c810ad5618 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55c810ad58a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810ad56d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810ad5770 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55c810ad5b68 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55c810ad5a50 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55c810ad5e28 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55c810ad5d10 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55c810ad6170 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55c810ad6050 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55c810ad6480 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55c810ad6360 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55c810ad6770 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810ad65b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810ad6630 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55c810ad68c8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55c810ad69a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810ad6a00 <col:30> Inherited
|-CXXMethodDecl 0x55c810ad6a48 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55c810ad6af8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810ad6b50 <col:30> Inherited
|-CXXMethodDecl 0x55c810ad6c18 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55c810ad6cc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810ad6d20 <col:30> Inherited
|-CXXMethodDecl 0x55c810ad6d68 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55c810ad6e18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810ad6e70 <col:30> Inherited
|-CXXMethodDecl 0x55c810ad6eb8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55c810ad6f68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810ad6fc0 <col:30> Inherited
|-CXXMethodDecl 0x55c810ad7008 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55c810ad70b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55c810ad7110 <col:30> Inherited
|-CXXMethodDecl 0x55c810ad7138 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810ad71e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55c810ad7298 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c810ad7458 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810ad7348 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55c810ad73c0 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55c810ad75a8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55c810ad7518 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810ad7758 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55c810ad7660 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810ad7810 <col:20>
| `-OptimizeNoneAttr 0x55c810ad7868 <col:30>
|-CXXMethodDecl 0x55c810ad7988 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55c810ad7890 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55c810ad7a40 <col:20>
| `-OptimizeNoneAttr 0x55c810ad7a98 <col:30>
|-CXXMethodDecl 0x55c810ad7b50 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810ad7ac0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810ad7c98 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810ad7c08 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810ad7dc8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55c810ad7ef8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55c810ad7fc8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55c810ad8098 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55c810ad81d8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55c810ad8148 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810ad8320 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55c810ad8290 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55c810ad8468 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55c810ad83d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810ad8520 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55c810ad8620 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55c810ad8590 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55c810ad86d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55c810ad8798 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55c810ad8898 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55c810ad8a48 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810ad8958 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55c810ad9238 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55c810ad8b00 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55c810ad9198 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55c810ad9068 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55c810ad9318 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55c810ad9468 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55c810ad93d8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55c810ad9520 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55c810ad9768 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55c810ad95e0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55c810ad9658 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55c810ad9928 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55c810ad9838 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55c810ad9b78 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55c810ad99f0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55c810ad9a68 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55c810ad9c38 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c810ad9e98 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55c810ad9da0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55c810ad9f68 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55c810ad9f68

Layout: <CGRecordLayout
  LLVMType:%class.Vector.21 = type { %class.vector_memory.22 }
  NonVirtualBaseLLVMType:%class.Vector.21 = type { %class.vector_memory.22 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810acef20 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c810acf038 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55c810acf0c8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55c810acf150 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55c810acf240 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55c810acf240
|-CXXMethodDecl 0x55c810acf340 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55c810acf5e0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55c810acf3f8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55c810acf470 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55c810acf4f0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55c810acf850 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55c810acf6b0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55c810acf728 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55c810acf7a8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55c810acf9a8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55c810acf918 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55c810acfa70 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55c810adb618 <col:34, line:50:5>
|   |-BinaryOperator 0x55c810adafe8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55c810adafa8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55c810ad01f8
|   | | `-CXXThisExpr 0x55c810adaf98 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55c810adafd8 <col:23> 'bool' true
|   `-CallExpr 0x55c810adb5f0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55c810adb5d8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55c810adb558 <col:2> 'void (long)' lvalue Function 0x55c810adb458 'ignore_result' 'void (long)' (FunctionTemplate 0x55c8105f1288 'ignore_result')
|     `-CallExpr 0x55c810adb200 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55c810adb1e8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c810adb168 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55c810aab8a8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55c810adb238 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55c810adb110 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55c810adb0f8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55c810adb0a8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55c810ad0198
|       |   |   `-CXXThisExpr 0x55c810adb098 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55c810adb0d8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55c810adb268 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55c810adb250 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55c810adb130 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55c810adb280 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55c810adb148 <col:41> 'int' 1
|-CXXMethodDecl 0x55c810acfbb0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55c810acfb20 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55c810acfc78 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55c810acfd18 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55c810acfd40 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c810acfe58 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55c810acfef8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55c810acff58 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55c810acffc0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55c810ad0070 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55c810acfef8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55c810adb678 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55c810adb638 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55c810acff58 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55c810adb6f8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55c810adb6b8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55c810acffc0 'pollfd' 'int'
|   | `-UnaryOperator 0x55c810adb758 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55c810adb738 <col:35> 'int' 1
|   `-CompoundStmt 0x55c810adb7d0 <line:64:2, line:65:2>
|-FieldDecl 0x55c810ad0198 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55c810ad01f8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55c81073ecd0 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55c810ada050 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55c810ada288 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55c810ada0b8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55c810ada130 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55c810ada1a8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55c810ada470 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55c810ada358 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55c810ada3d8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55c810ada6b8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55c810ada538 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55c810ada5b8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55c810ada8c8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55c810ada778 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55c810ada7f0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55c810adaa18 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55c810ada988 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55c810adaae0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55c810adaba0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55c810adac68 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55c810adac68
| `-ParmVarDecl 0x55c810adad78 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55c810adae18 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55c810adae18
  `-ParmVarDecl 0x55c810adaf28 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.20, %class.Vector.21 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.20, %class.Vector.21 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8105e9c40 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c8105e9d58 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55c8105e9de8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55c8105e9e70 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55c8105e9f60 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55c8105ea060 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55c8105ea120 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55c8105ea1e0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55c8105ea2c8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55c8105ea3e8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55c8105ea3e8
| `-ParmVarDecl 0x55c8105ea4f8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55c810ae03c8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55c810ae03c8
  `-ParmVarDecl 0x55c810ae04d8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810a8ba08 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c810a8bb28 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55c810a8bbc8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55c810a8bc28 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55c810adf9c8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55c810adf9c8
| `-ParmVarDecl 0x55c810adfad8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55c810adfb78 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55c810adfb78
| `-ParmVarDecl 0x55c810adfc88 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55c810adfcf8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55c810adfcf8
|-CXXMethodDecl 0x55c810ae0578 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55c810ae0578
| `-ParmVarDecl 0x55c810ae0688 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55c810ae06f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55c810ae06f8
| `-ParmVarDecl 0x55c810ae0808 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55c810ae6e28 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55c810ae6f00 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8105ebb30 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c8105ebc48 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55c8105ebcd8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55c8105ebd60 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55c8105ebe20 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55c810317580 'int'
|-CXXMethodDecl 0x55c8105ebee8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55c8105ebf88 <col:45> always_inline
|-CXXMethodDecl 0x55c8105ec0b8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55c8105ebff0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55c8105ec160 <col:49> always_inline
|-CXXConstructorDecl 0x55c8105ec258 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55c8105ec258
| `-ParmVarDecl 0x55c8105ec368 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55c8105ec408 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55c8105ec408
| `-ParmVarDecl 0x55c8105ed6e8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55c810adfde0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55c810adfde0
|-CXXMethodDecl 0x55c810ae08a8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55c810ae08a8
| `-ParmVarDecl 0x55c810ae09b8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55c810ae0a28 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55c810ae0a28
  `-ParmVarDecl 0x55c810ae0b38 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810adbc40 prev 0x55c810acee90 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55c810adbd38 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55c810adbdc8 <col:22, col:28> col:22 public
|-EnumDecl 0x55c810adbdf0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55c810adbf08 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55c810adbee8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55c810adbed0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c810adbeb0 <col:32> 'int' 1
| `-EnumConstantDecl 0x55c810adbfb0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55c810adbf90 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55c810adbf78 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55c810adbf58 <col:53> 'int' 1000
|-CXXMethodDecl 0x55c810adc050 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55c810adc110 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55c810adc1f8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55c810ae0bf8 <col:34, col:52>
|   `-ReturnStmt 0x55c810ae0be8 <col:36, col:43>
|     `-MemberExpr 0x55c810ae0bb8 <col:43> 'TimerSet' lvalue ->_timers 0x55c810addec8
|       `-CXXThisExpr 0x55c810ae0ba8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55c810adc2e8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55c810ae0c60 <col:46, col:64>
|   `-ReturnStmt 0x55c810ae0c50 <col:48, col:55>
|     `-MemberExpr 0x55c810ae0c20 <col:55> 'const TimerSet' lvalue ->_timers 0x55c810addec8
|       `-CXXThisExpr 0x55c810ae0c10 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55c810adc3d8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55c810ae0cc8 <col:36, col:55>
|   `-ReturnStmt 0x55c810ae0cb8 <col:38, col:45>
|     `-MemberExpr 0x55c810ae0c88 <col:45> 'SelectSet' lvalue ->_selects 0x55c810addf28
|       `-CXXThisExpr 0x55c810ae0c78 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55c810adc4c8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55c810ae0d30 <col:48, col:67>
|   `-ReturnStmt 0x55c810ae0d20 <col:50, col:57>
|     `-MemberExpr 0x55c810ae0cf0 <col:57> 'const SelectSet' lvalue ->_selects 0x55c810addf28
|       `-CXXThisExpr 0x55c810ae0ce0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55c810adc588 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55c810adc678 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55c810adc7e8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55c810adc728 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55c810adc8b0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55c810adccf8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55c810adc960 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55c810adcbe0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55c810adcdc8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55c810adce88 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55c810adcf48 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55c810add088 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55c810adcff8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55c810add150 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55c810add210 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55c810add2d0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55c810add390 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55c810add4d0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55c810add440 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55c810add598 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55c810add658 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55c810add6f8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55c810add7c0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c810add810 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c810add860 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c810add8b0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c810add900 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c810add950 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c810add9a0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c810add9f0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c810adda40 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55c810adda90 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55c810addae0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55c810addbd8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55c810addb48 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55c810addd28 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55c810addc98 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55c810adddd0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55c810adde08 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55c810adde68 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55c810addec8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55c810addf28 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55c810addfa8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55c810ade018 <col:40, col:50> aligned
|   `-ConstantExpr 0x55c810addff8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55c810addf78 <col:48> 'int' 64
|-FieldDecl 0x55c810ade088 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55c810ade0e8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55c810ade1e0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55c810ade2f0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55c810ade350 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55c810ade3d0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55c810ade440 <col:36, col:46> aligned
|   `-ConstantExpr 0x55c810ade420 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55c810ade3a0 <col:44> 'int' 64
|-FieldDecl 0x55c810ade4b8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55c810ade518 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55c810ade568 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55c810ade5a8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55c810ade610 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55c810ade660 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55c810ade808 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55c810ade698 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55c810ade718 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55c810ade908 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55c810ade908
|-CXXMethodDecl 0x55c810adea10 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55c810adead8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55c810ae0e28 <col:34, line:217:5>
|   `-ReturnStmt 0x55c810ae0e18 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55c810ae0e00 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55c810ae0dd0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55c810a88ae0
|         `-ImplicitCastExpr 0x55c810ae0db8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55c810ae0d88 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55c810a88a78
|             `-MemberExpr 0x55c810ae0d58 <col:16> 'const TaskLink' lvalue ->_task_link 0x55c810adde08
|               `-CXXThisExpr 0x55c810ae0d48 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55c810adeb98 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55c810adec58 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55c810ae1570 <col:39, line:226:5>
|   |-DeclStmt 0x55c810ae1078 <line:223:9, col:68>
|   | `-VarDecl 0x55c810ae0e50 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55c810ae1030 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55c810ae1000 <col:24, col:38> '<bound member function type>' .compare_swap 0x55c8105e5380
|   |     | `-MemberExpr 0x55c810ae0ec8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55c810ade088
|   |     |   `-CXXThisExpr 0x55c810ae0eb8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55c810ae0fb8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55c810ae0fa0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55c810ae0f78 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55c810ae0f58 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55c810ae1060 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55c810ae0fe0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55c810ae10c0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55c810ae1090 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55c810ae0e50 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55c810ae1550 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55c810ae1520 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55c810ae1200 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55c810ae11d0 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55c810ae11b8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55c810ae1110 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55c810ae0e50 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55c810ae1190 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55c810ae1178 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55c810ae1150 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55c810ae1130 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55c810ae1260 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55c810ae1240 <col:60> 'int' 0
|       `-CallExpr 0x55c810ae1480 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55c810ae1468 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55c810ae1448 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55c810ae14c0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55c810ae1348 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55c810ae14d8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55c810ae1378 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55c810ae14f0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55c810ae13b8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55c810ae1508 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55c810ae1430 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55c810ae1418 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55c810ae13d8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55c810adeda0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55c810aded10 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55c810adee68 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55c810adef28 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55c810adefe8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55c810adf0a8 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55c810adf168 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55c810adf260 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55c810adf2c0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55c810adf350 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55c810adf718 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55c810adf718
| `-ParmVarDecl 0x55c810adf828 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55c810adfee8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55c810adfee8
  `-ParmVarDecl 0x55c810adfff8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c81080b018 prev 0x55c810888790 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 referenced class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c81080b110 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55c81080b1a0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55c81080b200 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55c81080b2a8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55c81080b3c8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55c81080b568 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55c81080b4a8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55c81080b7b8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55c81080b628 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55c81080b6a8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55c81080b948 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55c81080b880 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55c81080bac8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55c81080ba08 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55c81080bc78 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55c81080bbb8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55c81080bd70 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55c8108aeef0 <col:21, line:58:5>
|   `-IfStmt 0x55c8108aeed8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55c8108aee40 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55c8108aee10 <col:6> '<bound member function type>' ->scheduled 0x55c81080c5c8
|     |   `-ImplicitCastExpr 0x55c8108aee60 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55c8108aee00 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55c8108aeeb8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55c8108aee88 <col:6> '<bound member function type>' ->unschedule 0x55c8108ad5a0
|         `-CXXThisExpr 0x55c8108aee78 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55c81080be70 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55c8108af090 <col:26, line:65:5>
|   |-BinaryOperator 0x55c8108aefb0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55c8108aef48 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55c8108ae228
|   | | `-MemberExpr 0x55c8108aef18 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55c8108ae2e8
|   | |   `-CXXThisExpr 0x55c8108aef08 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55c8108aef98 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c8108aef78 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55c8108ae748 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55c8108af070 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55c8108aefe0 <col:2> 'void *' lvalue ->_thunk 0x55c8108ae368
|     | `-CXXThisExpr 0x55c8108aefd0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55c8108af048 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55c8108af010 <col:20> 'int' 1
|-CXXMethodDecl 0x55c81080bfb0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55c81080bf20 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55c8108af1f0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55c8108af0e0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55c8108af0b0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55c81080bf20 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55c8108af1d0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55c8108af1a0 <col:2> '<bound member function type>' ->assign 0x55c81080be70
|       `-CXXThisExpr 0x55c8108af190 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55c81080c180 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55c81080c068 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55c81080c0e8 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55c8108af370 <col:58, line:79:5>
|   |-BinaryOperator 0x55c8108af2b8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55c8108af250 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55c8108ae228
|   | | `-MemberExpr 0x55c8108af220 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55c8108ae2e8
|   | |   `-CXXThisExpr 0x55c8108af210 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55c8108af2a0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c8108af280 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55c81080c068 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55c8108af350 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55c8108af2e8 <col:2> 'void *' lvalue ->_thunk 0x55c8108ae368
|     | `-CXXThisExpr 0x55c8108af2d8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55c8108af338 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55c8108af318 <col:11> 'void *' lvalue ParmVar 0x55c81080c0e8 'user_data' 'void *'
|-CXXMethodDecl 0x55c81080c2d0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55c81080c240 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55c8108af508 <col:35, line:87:5>
|   |-BinaryOperator 0x55c8108af438 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55c8108af3d0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55c8108ae228
|   | | `-MemberExpr 0x55c8108af3a0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55c8108ae2e8
|   | |   `-CXXThisExpr 0x55c8108af390 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55c8108af420 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c8108af400 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55c8108ae920 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55c8108af4e8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55c8108af468 <col:2> 'void *' lvalue ->_thunk 0x55c8108ae368
|     | `-CXXThisExpr 0x55c8108af458 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55c8108af4d0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55c8108af4b8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55c8108af498 <col:11> 'Element *' lvalue ParmVar 0x55c81080c240 'element' 'Element *'
|-CXXMethodDecl 0x55c81080c418 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55c81080c388 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55c8108af6a0 <col:29, line:94:5>
|   |-BinaryOperator 0x55c8108af5d0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55c8108af568 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55c8108ae228
|   | | `-MemberExpr 0x55c8108af538 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55c8108ae2e8
|   | |   `-CXXThisExpr 0x55c8108af528 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55c8108af5b8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c8108af598 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55c8108aeaf8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55c8108af680 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55c8108af600 <col:2> 'void *' lvalue ->_thunk 0x55c8108ae368
|     | `-CXXThisExpr 0x55c8108af5f0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55c8108af668 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55c8108af650 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55c8108af630 <col:11> 'Task *' lvalue ParmVar 0x55c81080c388 'task' 'Task *'
|-CXXMethodDecl 0x55c81080c508 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55c8108af780 <col:37, line:100:5>
|   `-ReturnStmt 0x55c8108af770 <line:99:2, col:19>
|     `-BinaryOperator 0x55c8108af750 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55c8108af720 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55c8108af6d0 <col:9> 'Element *const' lvalue ->_owner 0x55c8108ae3c8
|       |   `-CXXThisExpr 0x55c8108af6c0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55c8108af738 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55c8108af700 <col:19> 'int' 0
|-CXXMethodDecl 0x55c81080c5c8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55c8108af840 <col:35, line:105:5>
|   `-ReturnStmt 0x55c8108af830 <line:104:2, col:23>
|     `-BinaryOperator 0x55c8108af810 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55c8108af7f8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55c8108af7a8 <col:9> 'const int' lvalue ->_schedpos1 0x55c8108ae048
|       |   `-CXXThisExpr 0x55c8108af798 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55c8108af7d8 <col:23> 'int' 0
|-CXXMethodDecl 0x55c81080c688 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55c8108af8a8 <col:51, line:118:5>
|   `-ReturnStmt 0x55c8108af898 <line:117:2, col:9>
|     `-MemberExpr 0x55c8108af868 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55c8108ae0a8
|       `-CXXThisExpr 0x55c8108af858 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55c81080c748 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55c8108afe00 <col:37, line:136:5>
|   `-IfStmt 0x55c8108afdd8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55c8108af968 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55c8108af950 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55c8108af930 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55c8108af900 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55c810819b58
|     |       `-MemberExpr 0x55c8108af8d0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55c8108ae0a8
|     |         `-CXXThisExpr 0x55c8108af8c0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55c8108afd48 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55c8108afd30 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55c8108afd00 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55c8108afce8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55c8108afcb0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55c8108afc98 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55c8108afc78 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55c810845260 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55c8108afc18 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55c8108afc00 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55c8108afb28 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55c8108afb10 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55c8108afaf0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55c810844f20 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55c8108afa90 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55c8108af990 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55c8108ae0a8
|     |         |     |   `-CXXThisExpr 0x55c8108af980 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55c8108afad8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55c8108afac0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55c8108afa70 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55c8108afa58 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55c8108af9f8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55c81068a2f0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55c8108afc60 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55c8108afc48 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55c8108afbe0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55c8108afbc8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55c8108afb98 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55c81068afc0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55c8108afdc8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55c8108afd98 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55c8108afd68 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55c8108ae0a8
|           `-CXXThisExpr 0x55c8108afd58 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55c81080c808 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55c8108afee8 <col:35, line:141:5>
|   `-ReturnStmt 0x55c8108afed8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55c8108afea0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55c8108afe70 <col:9, col:17> '<bound member function type>' ->router 0x55c810899f30
|         `-ImplicitCastExpr 0x55c8108afec0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55c8108afe58 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55c8108afe28 <col:9> 'Element *const' lvalue ->_owner 0x55c8108ae3c8
|               `-CXXThisExpr 0x55c8108afe18 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55c81080c8c8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55c8108aff68 <col:37, line:146:5>
|   `-ReturnStmt 0x55c8108aff58 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55c8108aff40 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55c8108aff10 <col:9> 'Element *const' lvalue ->_owner 0x55c8108ae3c8
|         `-CXXThisExpr 0x55c8108aff00 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55c81080c988 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55c8108affe8 <col:41, line:151:5>
|   `-ReturnStmt 0x55c8108affd8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55c8108affc0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55c8108aff90 <col:9> 'RouterThread *const' lvalue ->_thread 0x55c8108ae428
|         `-CXXThisExpr 0x55c8108aff80 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55c81080ca50 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55c8108ac5c0 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55c81080cb00 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55c81080cb78 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c8108aed08 <col:50> 'bool' false
|-CXXMethodDecl 0x55c8108ac748 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55c8108ac680 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55c8108ac890 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55c8108ac800 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55c8108ac9d8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55c8108ac948 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55c8108acb20 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55c8108aca90 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55c8108acc68 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55c8108acbd8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55c8108acd30 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55c8108b0150 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55c8108b0138 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55c8108b00e0 <col:2, col:47> 'void'
|       |-MemberExpr 0x55c8108b0010 <col:2> '<bound member function type>' ->schedule_at_steady 0x55c8108ac890
|       | `-CXXThisExpr 0x55c8108b0000 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55c8108b0120 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55c8108b0108 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55c8108b00c0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55c8108b00a8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55c8108b0078 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55c81068afc0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55c8108ace70 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55c8108acde0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55c8108acfb8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c8108acf28 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c8108b02d8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55c8108b02c0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55c8108b0268 <col:2, col:40> 'void'
|       |-MemberExpr 0x55c8108b0178 <col:2> '<bound member function type>' ->schedule_after 0x55c8108ace70
|       | `-CXXThisExpr 0x55c8108b0168 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55c8108b02a8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55c8108b0290 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55c8108b0228 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55c8108b01f8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55c8108b01b8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c8108acf28 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55c8108b0210 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55c8108b01d8 <col:38> 'int' 0
|-CXXMethodDecl 0x55c8108ad100 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c8108ad070 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c8108b0548 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55c8108b0530 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55c8108b04d8 <col:2, col:49> 'void'
|       |-MemberExpr 0x55c8108b0300 <col:2> '<bound member function type>' ->schedule_after 0x55c8108ace70
|       | `-CXXThisExpr 0x55c8108b02f0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55c8108b0518 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55c8108b0500 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55c8108b0480 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55c8108b0468 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55c8108b03d8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55c81081b948 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55c8108b04c0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55c8108b04a8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55c8108b03b8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c8108ad070 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c8108ad248 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55c8108ad1b8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55c8108b0728 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55c8108b0710 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55c8108b06b8 <col:2, col:38> 'void'
|       |-MemberExpr 0x55c8108b0570 <col:2> '<bound member function type>' ->schedule_at_steady 0x55c8108ac890
|       | `-CXXThisExpr 0x55c8108b0560 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55c8108b06f8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55c8108b06e0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55c8108b0680 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55c8108b0668 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55c8108b0648 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55c810844f20 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55c8108b0618 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55c8108b0600 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55c8108b05b0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55c8108ae0a8
|             |     `-CXXThisExpr 0x55c8108b05a0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55c8108b05e0 <col:33> 'const Timestamp' lvalue ParmVar 0x55c8108ad1b8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55c8108ad390 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c8108ad300 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c8108b0a00 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55c8108b09e8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55c8108b0990 <col:2, col:79> 'void'
|       |-MemberExpr 0x55c8108b0750 <col:2> '<bound member function type>' ->schedule_at_steady 0x55c8108ac890
|       | `-CXXThisExpr 0x55c8108b0740 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55c8108b09d0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55c8108b09b8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55c8108b0950 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55c8108b0888 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55c8108b0870 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55c8108b0800 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55c8108b07d0 <col:31, col:41> '<bound member function type>' .sec 0x55c81068cab8
|             | |     `-ImplicitCastExpr 0x55c8108b0820 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55c8108b07a0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55c8108ae0a8
|             | |         `-CXXThisExpr 0x55c8108b0790 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55c8108b0858 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55c8108b0838 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c8108ad300 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55c8108b0918 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55c8108b08e8 <col:60, col:70> '<bound member function type>' .subsec 0x55c81068d1b0
|                 `-ImplicitCastExpr 0x55c8108b0938 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55c8108b08b8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55c8108ae0a8
|                     `-CXXThisExpr 0x55c8108b08a8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55c8108ad4d8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c8108ad448 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55c8108b0d38 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55c8108b0d20 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55c8108b0cc8 <col:2, col:65> 'void'
|       |-MemberExpr 0x55c8108b0a28 <col:2> '<bound member function type>' ->schedule_at_steady 0x55c8108ac890
|       | `-CXXThisExpr 0x55c8108b0a18 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55c8108b0d08 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55c8108b0cf0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55c8108b0c90 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55c8108b0c78 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55c8108b0c58 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55c810844f20 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55c8108b0bf8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55c8108b0be0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55c8108b0a68 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55c8108ae0a8
|             |     `-CXXThisExpr 0x55c8108b0a58 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55c8108b0c40 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55c8108b0c28 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55c8108b0b88 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55c8108b0b70 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55c8108b0b40 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55c81081b948 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55c8108b0bc8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55c8108b0bb0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55c8108b0b20 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55c8108ad448 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c8108ad5a0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55c8108ad660 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55c8108b1200 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55c8108b0d90 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55c8108b0d60 <col:2> '<bound member function type>' ->unschedule 0x55c8108ad5a0
|   |   `-CXXThisExpr 0x55c8108b0d50 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55c8108b11e8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55c8108b11b0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55c8108b1198 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c8108b0e48 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55c810528f58 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55c8108b0dc0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55c8108ae0a8
|       | `-CXXThisExpr 0x55c8108b0db0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55c8108b0e30 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55c8108b0e00 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55c8108ad720 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55c8108b1558 <col:42, line:310:5>
|   |-IfStmt 0x55c8108b13a0 <line:306:2, line:307:23>
|   | |-CallExpr 0x55c8108b12d0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55c8108b12b8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55c8108b1258 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55c810836a30 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55c8108b1390 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55c8108b1378 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55c8108b1348 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55c8108b1330 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55c8108b1300 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55c8108b1548 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55c8108b1530 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55c8108b1500 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c8108b14e8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55c8108b14a8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55c8108b1490 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55c8108b1460 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55c81081bc60 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55c8108b14d0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55c8108b1440 <col:30> 'int' 500
|-CXXMethodDecl 0x55c8108ad860 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c8108ad7d0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c8108ad908 <col:69> "" ""
|-CXXMethodDecl 0x55c8108ada18 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c8108ad988 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c8108adac0 <col:70> "" ""
|-CXXMethodDecl 0x55c8108adbd0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c8108adb40 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c8108adc78 <col:71> "" ""
|-CXXMethodDecl 0x55c8108add88 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55c8108adcf8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c8108ade30 <col:72> "" ""
|-EnumDecl 0x55c8108adea0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55c8108adfa0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55c8108adff0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c8108adf80 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55c8108adf60 <col:25> 'int' 1
|-AccessSpecDecl 0x55c8108ae008 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55c8108ae048 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55c8108ae0a8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55c8108ae0f8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55c8108ae228 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55c8108aed18 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55c8108ae2e8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55c8108ae368 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55c8108ae3c8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55c8108ae428 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55c8108ae578 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55c8108ae488 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55c8108ae748 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55c8108ae630 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55c8108ae6b0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55c8108ae920 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55c8108ae808 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55c8108ae888 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55c8108aeaf8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55c8108ae9e0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55c8108aea60 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55c8108aecc8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.17, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.17, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810965938 prev 0x55c8109368b8 <../elements/ip/iprewriterbase.hh:81:1, line:182:1> line:81:7 referenced class IPRewriterBase definition
|-DefinitionData polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55c810965a70 <col:1, col:7> col:7 implicit referenced class IPRewriterBase
|-AccessSpecDecl 0x55c810965b00 <col:41, col:47> col:41 public
|-TypedefDecl 0x55c810965c60 <line:83:5, col:44> col:44 referenced Map 'HashContainer<IPRewriterEntry>':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55c810965bc0 'HashContainer<IPRewriterEntry>' sugar HashContainer
|   |-TemplateArgument type 'IPRewriterEntry'
|   `-RecordType 0x55c810935430 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55c810935330 'HashContainer'
|-EnumDecl 0x55c810965cb8 <line:84:5, line:86:5> line:84:5
| |-EnumConstantDecl 0x55c810965dd8 <line:85:2, col:13> col:2 rw_drop 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
| | `-ConstantExpr 0x55c810965db8 <col:12, col:13> 'int' Int: -1
| |   `-UnaryOperator 0x55c810965da0 <col:12, col:13> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c810965d80 <col:13> 'int' 1
| `-EnumConstantDecl 0x55c810965e80 <col:16, col:29> col:16 rw_addmap 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
|   `-ConstantExpr 0x55c810965e60 <col:28, col:29> 'int' Int: -2
|     `-UnaryOperator 0x55c810965e48 <col:28, col:29> 'int' prefix '-'
|       `-IntegerLiteral 0x55c810965e28 <col:29> 'int' 2
|-CXXConstructorDecl 0x55c810965f08 <line:88:5, col:20> col:5 IPRewriterBase 'void ()'
|-CXXDestructorDecl 0x55c810965ff8 <line:89:5, col:21> col:5 ~IPRewriterBase 'void () noexcept'
| `-Overrides: [ 0x55c810888e48 Element::~Element 'void () noexcept' ]
|-EnumDecl 0x55c8109660e0 <line:91:5, line:96:5> line:91:10 ConfigurePhase
| |-EnumConstantDecl 0x55c8109661e0 <line:92:2, col:29> col:2 CONFIGURE_PHASE_PATTERNS 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c810966490 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8109661c0 <col:29> 'Element::ConfigurePhase' Int: 20
| |     `-DeclRefExpr 0x55c8109661a0 <col:29> 'Element::ConfigurePhase' EnumConstant 0x55c81088b490 'CONFIGURE_PHASE_INFO' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x55c810966270 <line:93:2, col:29> col:2 referenced CONFIGURE_PHASE_REWRITER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c8109664a8 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810966250 <col:29> 'Element::ConfigurePhase' Int: 100
| |     `-DeclRefExpr 0x55c810966230 <col:29> 'Element::ConfigurePhase' EnumConstant 0x55c81088b5b0 'CONFIGURE_PHASE_DEFAULT' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x55c810966358 <line:94:2, col:54> col:2 CONFIGURE_PHASE_MAPPER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c8109664c0 <col:27, col:54> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810966338 <col:27, col:54> 'int' Int: 99
| |     `-BinaryOperator 0x55c810966318 <col:27, col:54> 'int' '-'
| |       |-ImplicitCastExpr 0x55c810966300 <col:27> 'int' <IntegralCast>
| |       | `-DeclRefExpr 0x55c8109662c0 <col:27> 'Element::ConfigurePhase' EnumConstant 0x55c810966270 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
| |       `-IntegerLiteral 0x55c8109662e0 <col:54> 'int' 1
| `-EnumConstantDecl 0x55c810966440 <line:95:2, col:52> col:2 CONFIGURE_PHASE_USER 'IPRewriterBase::ConfigurePhase'
|   `-ImplicitCastExpr 0x55c8109664d8 <col:25, col:52> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810966420 <col:25, col:52> 'int' Int: 101
|       `-BinaryOperator 0x55c810966400 <col:25, col:52> 'int' '+'
|         |-ImplicitCastExpr 0x55c8109663e8 <col:25> 'int' <IntegralCast>
|         | `-DeclRefExpr 0x55c8109663a8 <col:25> 'Element::ConfigurePhase' EnumConstant 0x55c810966270 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|         `-IntegerLiteral 0x55c8109663c8 <col:52> 'int' 1
|-CXXMethodDecl 0x55c810966540 <line:98:5, col:54> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55c81088a370 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55c81097ee00 <col:36, col:54>
|   `-ReturnStmt 0x55c81097edf0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55c81097edd8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55c81097edb8 <col:45> 'const char [6]' lvalue "1-/1-"
|-CXXMethodDecl 0x55c810966608 <line:99:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55c81088a778 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55c81097ee60 <col:36, col:51>
|   `-ReturnStmt 0x55c81097ee50 <col:38, col:45>
|     `-ImplicitCastExpr 0x55c81097ee38 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55c81097ee18 <col:45> 'const char []' lvalue Var 0x55c81088a8c0 'PUSH' 'const char []'
|-CXXMethodDecl 0x55c8109666d0 <line:101:5, col:68> col:9 configure_phase 'int () const'
| |-Overrides: [ 0x55c81088b730 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x55c81097eec0 <col:33, col:68>
|   `-ReturnStmt 0x55c81097eeb0 <col:35, col:42>
|     `-ImplicitCastExpr 0x55c81097ee98 <col:42> 'int' <IntegralCast>
|       `-DeclRefExpr 0x55c81097ee78 <col:42> 'IPRewriterBase::ConfigurePhase' EnumConstant 0x55c810966270 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|-CXXMethodDecl 0x55c8109669a0 <line:102:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55c81088bb70 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55c810966850 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x55c8109668c8 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c810966af8 <line:103:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55c81088bdc0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55c810966a60 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c810966c40 <line:104:5, col:54> col:10 add_rewriter_handlers 'void (bool)'
| `-ParmVarDecl 0x55c810966bb0 <col:32, col:37> col:37 writable_patterns 'bool'
|-CXXMethodDecl 0x55c810966d88 <line:105:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55c81088c5d8 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55c810966cf8 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x55c810966e78 <line:107:5, line:109:5> line:107:27 flow_heap 'const IPRewriterHeap *() const'
| `-CompoundStmt 0x55c81097ef58 <col:45, line:109:5>
|   `-ReturnStmt 0x55c81097ef48 <line:108:2, col:9>
|     `-ImplicitCastExpr 0x55c81097ef30 <col:9> 'const IPRewriterHeap *' <NoOp>
|       `-ImplicitCastExpr 0x55c81097ef18 <col:9> 'IPRewriterHeap *' <LValueToRValue>
|         `-MemberExpr 0x55c81097eee8 <col:9> 'IPRewriterHeap *const' lvalue ->_heap 0x55c81097c120
|           `-CXXThisExpr 0x55c81097eed8 <col:9> 'const IPRewriterBase *' implicit this
|-CXXMethodDecl 0x55c810966ff8 <line:110:5, line:112:5> line:110:21 reply_element 'IPRewriterBase *(int) const'
| |-ParmVarDecl 0x55c810966f30 <col:35, col:39> col:39 used input 'int'
| `-CompoundStmt 0x55c81097f130 <col:52, line:112:5>
|   `-ReturnStmt 0x55c81097f120 <line:111:2, col:29>
|     `-ImplicitCastExpr 0x55c81097f108 <col:9, col:29> 'IPRewriterBase *' <LValueToRValue>
|       `-MemberExpr 0x55c81097f0d8 <col:9, col:29> 'IPRewriterBase *const' lvalue .reply_element 0x55c810951500
|         `-CXXOperatorCallExpr 0x55c81097f0a0 <col:9, col:27> 'const IPRewriterInput':'const IPRewriterInput' lvalue
|           |-ImplicitCastExpr 0x55c81097f088 <col:21, col:27> 'const IPRewriterInput &(*)(Vector::size_type) const' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x55c81097f010 <col:21, col:27> 'const IPRewriterInput &(Vector::size_type) const' lvalue CXXMethod 0x55c810979a28 'operator[]' 'const IPRewriterInput &(Vector::size_type) const'
|           |-MemberExpr 0x55c81097ef80 <col:9> 'const Vector<IPRewriterInput>':'const Vector<IPRewriterInput>' lvalue ->_input_specs 0x55c81097c0c0
|           | `-CXXThisExpr 0x55c81097ef70 <col:9> 'const IPRewriterBase *' implicit this
|           `-ImplicitCastExpr 0x55c81097eff8 <col:22> 'int' <LValueToRValue>
|             `-DeclRefExpr 0x55c81097efb0 <col:22> 'int' lvalue ParmVar 0x55c810966f30 'input' 'int'
|-CXXMethodDecl 0x55c810967330 <line:113:5, line:115:5> line:113:45 get_map 'HashContainer<IPRewriterEntry> *(int)' virtual
| |-ParmVarDecl 0x55c8109671b8 <col:53, col:57> col:57 used mapid 'int'
| `-CompoundStmt 0x55c81097f4a0 <col:64, line:115:5>
|   `-ReturnStmt 0x55c81097f490 <line:114:2, col:84>
|     `-ConditionalOperator 0x55c81097f460 <col:9, col:84> 'IPRewriterBase::Map *'
|       |-ImplicitCastExpr 0x55c81097f430 <col:9, col:72> 'bool' <IntegralToBoolean>
|       | `-CallExpr 0x55c81097f358 <col:9, col:72> 'long'
|       |   |-ImplicitCastExpr 0x55c81097f340 <col:9> 'long (*)(long, long) noexcept' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x55c81097f148 <col:9> '<builtin fn type>' Function 0x55c81064c4e8 '__builtin_expect' 'long (long, long) noexcept'
|       |   |-ImplicitCastExpr 0x55c81097f388 <col:26, col:68> 'long' <IntegralCast>
|       |   | `-UnaryOperator 0x55c81097f308 <col:26, col:68> 'bool' prefix '!' cannot overflow
|       |   |   `-UnaryOperator 0x55c81097f2f0 <col:27, col:68> 'bool' prefix '!' cannot overflow
|       |   |     `-ParenExpr 0x55c81097f2d0 <col:28, col:68> 'bool'
|       |   |       `-BinaryOperator 0x55c81097f2b0 <col:29, col:55> 'bool' '=='
|       |   |         |-ImplicitCastExpr 0x55c81097f280 <col:29> 'int' <LValueToRValue>
|       |   |         | `-DeclRefExpr 0x55c81097f168 <col:29> 'int' lvalue ParmVar 0x55c8109671b8 'mapid' 'int'
|       |   |         `-ImplicitCastExpr 0x55c81097f298 <col:38, col:55> 'int' <IntegralCast>
|       |   |           `-DeclRefExpr 0x55c81097f1c0 <col:38, col:55> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55c810951b40 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|       |   `-ImplicitCastExpr 0x55c81097f3a0 <col:71> 'long' <IntegralCast>
|       |     `-IntegerLiteral 0x55c81097f320 <col:71> 'int' 1
|       |-UnaryOperator 0x55c81097f3f8 <col:76, col:77> 'IPRewriterBase::Map *' prefix '&' cannot overflow
|       | `-MemberExpr 0x55c81097f3c8 <col:77> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_map 0x55c81096f8d8
|       |   `-CXXThisExpr 0x55c81097f3b8 <col:77> 'IPRewriterBase *' implicit this
|       `-ImplicitCastExpr 0x55c81097f448 <col:84> 'IPRewriterBase::Map *' <NullToPointer>
|         `-IntegerLiteral 0x55c81097f410 <col:84> 'int' 0
|-EnumDecl 0x55c8109673d8 <line:117:5, line:119:5> line:117:5
| |-EnumConstantDecl 0x55c8109674f8 <line:118:2, col:21> col:2 get_entry_check 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
| | `-ConstantExpr 0x55c8109674d8 <col:20, col:21> 'int' Int: -1
| |   `-UnaryOperator 0x55c8109674c0 <col:20, col:21> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c8109674a0 <col:21> 'int' 1
| `-EnumConstantDecl 0x55c8109675a0 <col:24, col:43> col:24 get_entry_reply 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
|   `-ConstantExpr 0x55c810967580 <col:42, col:43> 'int' Int: -2
|     `-UnaryOperator 0x55c810967568 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x55c810967548 <col:43> 'int' 2
|-CXXMethodDecl 0x55c8109677e8 <line:120:5, line:121:21> line:120:30 get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)' virtual
| |-ParmVarDecl 0x55c810967608 <col:40, col:44> col:44 ip_p 'int'
| |-ParmVarDecl 0x55c810967680 <col:50, col:66> col:66 flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55c810967700 <line:121:12, col:16> col:16 input 'int'
|-CXXMethodDecl 0x55c810967b18 <line:122:5, line:124:24> line:122:30 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' virtual pure
| |-ParmVarDecl 0x55c8109678b8 <col:39, col:43> col:43 ip_p 'int'
| |-ParmVarDecl 0x55c810967930 <col:49, col:65> col:65 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55c8109679a8 <line:123:11, col:27> col:27 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55c810967a28 <line:124:11, col:15> col:15 input 'int'
|-CXXMethodDecl 0x55c810967c78 <line:125:5, col:55> col:18 destroy_flow 'void (IPRewriterFlow *)' virtual pure
| `-ParmVarDecl 0x55c810967be8 <col:31, col:47> col:47 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x55c810967e28 <line:126:5, line:128:5> line:126:29 best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' virtual
| |-ParmVarDecl 0x55c810967d30 <col:48, col:70> col:70 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x55c81097f6f0 <col:76, line:128:5>
|   `-ReturnStmt 0x55c81097f6e0 <line:127:2, col:52>
|     `-BinaryOperator 0x55c81097f6c0 <col:9, col:52> 'unsigned int' '-'
|       |-BinaryOperator 0x55c81097f5f0 <col:9, col:37> 'unsigned int' '+'
|       | |-CXXMemberCallExpr 0x55c81097f520 <col:9, col:22> 'click_jiffies_t':'unsigned int'
|       | | `-MemberExpr 0x55c81097f4f0 <col:9, col:15> '<bound member function type>' ->expiry 0x55c810939df0
|       | |   `-ImplicitCastExpr 0x55c81097f4d8 <col:9> 'const IPRewriterFlow *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x55c81097f4b8 <col:9> 'const IPRewriterFlow *' lvalue ParmVar 0x55c810967d30 'flow' 'const IPRewriterFlow *'
|       | `-ImplicitCastExpr 0x55c81097f5d8 <col:26, col:37> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x55c81097f5b8 <col:26, col:37> 'uint32_t':'unsigned int' lvalue
|       |     |-ImplicitCastExpr 0x55c81097f5a0 <col:26> 'uint32_t *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x55c81097f550 <col:26> 'uint32_t [2]' lvalue ->_timeouts 0x55c81097c208
|       |     |   `-CXXThisExpr 0x55c81097f540 <col:26> 'IPRewriterBase *' implicit this
|       |     `-IntegerLiteral 0x55c81097f580 <col:36> 'int' 0
|       `-ImplicitCastExpr 0x55c81097f6a8 <col:41, col:52> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-ArraySubscriptExpr 0x55c81097f688 <col:41, col:52> 'uint32_t':'unsigned int' lvalue
|           |-ImplicitCastExpr 0x55c81097f670 <col:41> 'uint32_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x55c81097f620 <col:41> 'uint32_t [2]' lvalue ->_timeouts 0x55c81097c208
|           |   `-CXXThisExpr 0x55c81097f610 <col:41> 'IPRewriterBase *' implicit this
|           `-IntegerLiteral 0x55c81097f650 <col:51> 'int' 1
|-CXXMethodDecl 0x55c810968008 <line:130:5, col:43> col:9 llrpc 'int (unsigned int, void *)'
| |-Overrides: [ 0x55c810895920 Element::llrpc 'int (unsigned int, void *)' ]
| |-ParmVarDecl 0x55c810967ee8 <col:15, col:24> col:24 command 'unsigned int'
| `-ParmVarDecl 0x55c810967f68 <col:33, col:39> col:39 data 'void *'
|-AccessSpecDecl 0x55c8109680b8 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x55c81096f8d8 <line:134:5, col:9> col:9 referenced _map 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FieldDecl 0x55c81097c0c0 <line:136:5, col:29> col:29 referenced _input_specs 'Vector<IPRewriterInput>':'Vector<IPRewriterInput>'
|-FieldDecl 0x55c81097c120 <line:138:5, col:21> col:21 referenced _heap 'IPRewriterHeap *'
|-FieldDecl 0x55c81097c208 <line:139:5, col:25> col:14 referenced _timeouts 'uint32_t [2]'
|-FieldDecl 0x55c81097c268 <line:140:5, col:14> col:14 _gc_interval_sec 'uint32_t':'unsigned int'
|-FieldDecl 0x55c81097c2c8 <line:141:5, col:11> col:11 _gc_timer 'Timer'
|-EnumDecl 0x55c81097c318 <line:143:5, line:147:5> line:143:5
| |-EnumConstantDecl 0x55c81097c420 <line:144:2, col:20> col:2 default_timeout 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x55c81097c5d0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81097c400 <col:20> 'int' Int: 300
| |     `-IntegerLiteral 0x55c81097c3e0 <col:20> 'int' 300
| |-EnumConstantDecl 0x55c81097c4b0 <line:145:2, col:22> col:2 default_guarantee 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x55c81097c5e8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81097c490 <col:22> 'int' Int: 5
| |     `-IntegerLiteral 0x55c81097c470 <col:22> 'int' 5
| `-EnumConstantDecl 0x55c81097c580 <line:146:2, col:29> col:2 default_gc_interval 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
|   `-ImplicitCastExpr 0x55c81097c600 <col:24, col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c81097c560 <col:24, col:29> 'int' Int: 900
|       `-BinaryOperator 0x55c81097c540 <col:24, col:29> 'int' '*'
|         |-IntegerLiteral 0x55c81097c500 <col:24> 'int' 60
|         `-IntegerLiteral 0x55c81097c520 <col:29> 'int' 15
|-CXXMethodDecl 0x55c81097c768 <line:149:5, line:151:5> line:149:21 relevant_timeout 'uint32_t (const uint32_t *)' static
| |-ParmVarDecl 0x55c81097c678 <col:38, col:63> col:53 used timeouts 'const uint32_t *':'const uint32_t *'
| `-CompoundStmt 0x55c81097f8f8 <col:66, line:151:5>
|   `-ReturnStmt 0x55c81097f8e8 <line:150:2, col:47>
|     `-ImplicitCastExpr 0x55c81097f8d0 <col:9, col:47> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-ConditionalOperator 0x55c81097f8a0 <col:9, col:47> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55c81097f888 <col:9, col:19> 'bool' <IntegralToBoolean>
|         | `-ImplicitCastExpr 0x55c81097f870 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55c81097f760 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |     |-ImplicitCastExpr 0x55c81097f748 <col:9> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         |     | `-DeclRefExpr 0x55c81097f708 <col:9> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55c81097c678 'timeouts' 'const uint32_t *':'const uint32_t *'
|         |     `-IntegerLiteral 0x55c81097f728 <col:18> 'int' 1
|         |-ArraySubscriptExpr 0x55c81097f7d8 <col:23, col:33> 'const uint32_t':'const unsigned int' lvalue
|         | |-ImplicitCastExpr 0x55c81097f7c0 <col:23> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         | | `-DeclRefExpr 0x55c81097f780 <col:23> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55c81097c678 'timeouts' 'const uint32_t *':'const uint32_t *'
|         | `-IntegerLiteral 0x55c81097f7a0 <col:32> 'int' 1
|         `-ArraySubscriptExpr 0x55c81097f850 <col:37, col:47> 'const uint32_t':'const unsigned int' lvalue
|           |-ImplicitCastExpr 0x55c81097f838 <col:37> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|           | `-DeclRefExpr 0x55c81097f7f8 <col:37> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55c81097c678 'timeouts' 'const uint32_t *':'const uint32_t *'
|           `-IntegerLiteral 0x55c81097f818 <col:46> 'int' 0
|-CXXMethodDecl 0x55c81097cb28 <line:153:5, line:154:37> line:153:22 store_flow 'IPRewriterEntry *(IPRewriterFlow *, int, IPRewriterBase::Map &, IPRewriterBase::Map *)'
| |-ParmVarDecl 0x55c81097c820 <col:33, col:49> col:49 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x55c81097c8a0 <col:55, col:59> col:59 input 'int'
| |-ParmVarDecl 0x55c81097c948 <line:154:5, col:10> col:10 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x55c81097c9e8 <col:15, col:36> col:20 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x55c81097ed68 <col:36> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x55c81097ed48 <col:36> 'int' 0
|-CXXMethodDecl 0x55c81097ce08 <line:155:5, line:156:39> line:155:17 used unmap_flow 'void (IPRewriterFlow *, IPRewriterBase::Map &, IPRewriterBase::Map *)' inline
| |-ParmVarDecl 0x55c81097cbf8 <col:28, col:44> col:44 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x55c81097cc70 <line:156:7, col:12> col:12 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x55c81097cce8 <col:17, col:38> col:22 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x55c81097eda0 <col:38> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x55c81097ed80 <col:38> 'int' 0
|-CXXMethodDecl 0x55c81097cfe8 <line:158:5, col:56> col:17 gc_timer_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55c81097ced0 <col:31, col:38> col:38 t 'Timer *'
| `-ParmVarDecl 0x55c81097cf50 <col:41, col:47> col:47 user_data 'void *'
|-CXXMethodDecl 0x55c81097d310 <line:160:5, line:161:41> line:160:9 parse_input_spec 'int (const String &, IPRewriterInput &, int, ErrorHandler *)'
| |-ParmVarDecl 0x55c81097d0a8 <col:26, col:40> col:40 str 'const String &'
| |-ParmVarDecl 0x55c81097d120 <col:45, col:62> col:62 is 'IPRewriterInput &'
| |-ParmVarDecl 0x55c81097d1a0 <line:161:5, col:9> col:9 input_number 'int'
| `-ParmVarDecl 0x55c81097d218 <col:23, col:37> col:37 errh 'ErrorHandler *'
|-EnumDecl 0x55c81097d3d0 <line:163:5, line:166:5> line:163:5
| |-EnumConstantDecl 0x55c81097d4e8 <line:164:2, col:17> col:2 h_nmappings 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55c81097d4c8 <col:16, col:17> 'int' Int: -1
| |   `-UnaryOperator 0x55c81097d4b0 <col:16, col:17> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c81097d490 <col:17> 'int' 1
| |-EnumConstantDecl 0x55c81097d590 <col:20, col:42> col:20 h_mapping_failures 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55c81097d570 <col:41, col:42> 'int' Int: -2
| |   `-UnaryOperator 0x55c81097d558 <col:41, col:42> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c81097d538 <col:42> 'int' 2
| |-EnumConstantDecl 0x55c81097d638 <col:45, col:59> col:45 h_patterns 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55c81097d618 <col:58, col:59> 'int' Int: -3
| |   `-UnaryOperator 0x55c81097d600 <col:58, col:59> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c81097d5e0 <col:59> 'int' 3
| |-EnumConstantDecl 0x55c81097d6e0 <line:165:2, col:12> col:2 h_size 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55c81097d6c0 <col:11, col:12> 'int' Int: -4
| |   `-UnaryOperator 0x55c81097d6a8 <col:11, col:12> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c81097d688 <col:12> 'int' 4
| |-EnumConstantDecl 0x55c81097d788 <col:15, col:29> col:15 h_capacity 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55c81097d768 <col:28, col:29> 'int' Int: -5
| |   `-UnaryOperator 0x55c81097d750 <col:28, col:29> 'int' prefix '-'
| |     `-IntegerLiteral 0x55c81097d730 <col:29> 'int' 5
| `-EnumConstantDecl 0x55c81097d830 <col:32, col:43> col:32 h_clear 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
|   `-ConstantExpr 0x55c81097d810 <col:42, col:43> 'int' Int: -6
|     `-UnaryOperator 0x55c81097d7f8 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x55c81097d7d8 <col:43> 'int' 6
|-CXXMethodDecl 0x55c81097d9a8 <line:167:5, col:59> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c81097d890 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55c81097d910 <col:44, col:50> col:50 user_data 'void *'
|-CXXMethodDecl 0x55c81097dc88 <line:168:5, col:96> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55c81097da68 <col:30, col:44> col:44 str 'const String &'
| |-ParmVarDecl 0x55c81097dae0 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x55c81097db60 <col:61, col:67> col:67 user_data 'void *'
| `-ParmVarDecl 0x55c81097dbd8 <col:78, col:92> col:92 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c81097df78 <line:169:5, col:104> col:16 pattern_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55c81097dd58 <col:38, col:52> col:52 str 'const String &'
| |-ParmVarDecl 0x55c81097ddd0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55c81097de50 <col:69, col:75> col:75 user_data 'void *'
| `-ParmVarDecl 0x55c81097dec8 <col:86, col:100> col:100 errh 'ErrorHandler *'
|-FriendDecl 0x55c81097e418 <line:171:5, line:172:52> line:171:33
| `-CXXMethodDecl 0x55c81097e288 parent 0x55c810950f30 prev 0x55c810951ed0 <col:5, line:172:52> line:171:33 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
|   |-ParmVarDecl 0x55c81097e068 <col:48, col:64> col:64 flowid 'const IPFlowID &'
|   |-ParmVarDecl 0x55c81097e0e0 <line:172:4, col:14> col:14 rewritten_flowid 'IPFlowID &'
|   |-ParmVarDecl 0x55c81097e158 <col:32, col:40> col:40 p 'Packet *'
|   |-ParmVarDecl 0x55c81097e1d8 <col:43, col:47> col:47 mapid 'int' cinit
|   | `-ImplicitCastExpr 0x55c810952048 <line:39:33> 'int' <IntegralCast>
|   |   `-DeclRefExpr 0x55c810952028 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55c810951b40 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   |-NoInlineAttr 0x55c81097e3c8 <line:37:20> Inherited
|   `-OptimizeNoneAttr 0x55c81097e3f0 <col:30> Inherited
|-AccessSpecDecl 0x55c81097e458 <line:174:3, col:10> col:3 private
|-CXXMethodDecl 0x55c81097e558 <line:176:5, col:54> col:10 shift_heap_best_effort 'void (click_jiffies_t)'
| `-ParmVarDecl 0x55c81097e490 <col:33, col:49> col:49 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55c81097e798 <line:177:5, col:78> col:10 shrink_heap_for_new_flow 'bool (IPRewriterFlow *, click_jiffies_t)'
| |-ParmVarDecl 0x55c81097e610 <col:35, col:51> col:51 flow 'IPRewriterFlow *'
| `-ParmVarDecl 0x55c81097e688 <col:57, col:73> col:73 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55c81097e8e8 <line:178:5, col:36> col:10 shrink_heap 'void (bool)'
| `-ParmVarDecl 0x55c81097e858 <col:22, col:27> col:27 clear_all 'bool'
|-FriendDecl 0x55c81097e9b0 <line:180:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x55c81097ea18 <line:81:7> col:7 implicit IPRewriterBase 'void (const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x55c81097ea18
| `-ParmVarDecl 0x55c81097eb28 <col:7> col:7 'const IPRewriterBase &'
`-CXXMethodDecl 0x55c81097ebc8 <col:7> col:7 implicit operator= 'IPRewriterBase &(const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x55c81097ebc8
  `-ParmVarDecl 0x55c81097ecd8 <col:7> col:7 'const IPRewriterBase &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector.13, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  NonVirtualBaseLLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector.13, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashAllocator
         0 |   struct HashAllocator::link * _free
         8 |   struct HashAllocator::buffer * _buffer
        16 |   size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class SizedHashAllocator<80>
         0 |   class HashAllocator (base)
         0 |     struct HashAllocator::link * _free
         8 |     struct HashAllocator::buffer * _buffer
        16 |     size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class TCPRewriter
         0 |   class IPRewriterBase (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |     class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |       class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |         class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |         class IPRewriterEntry ** buckets
       120 |         uint32_t nbuckets
       124 |         uint32_t first_bucket
       128 |         size_t size
       136 |         struct libdivide_u32_t bucket_divider
       136 |           uint32_t magic
       140 |           uint8_t more
       144 |     class Vector<class IPRewriterInput> _input_specs
       144 |       class vector_memory<class sized_array_memory<56> > vm_
       144 |         vector_memory<class sized_array_memory<56> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       160 |     class IPRewriterHeap * _heap
       168 |     uint32_t [2] _timeouts
       176 |     uint32_t _gc_interval_sec
       184 |     class Timer _gc_timer
       184 |       int _schedpos1
       192 |       class Timestamp _expiry_s
       192 |         union Timestamp::rep_t _t
       192 |           int64_t x
       200 |       union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |         TimerCallback callback
       208 |       void * _thunk
       216 |       class Element * _owner
       224 |       class RouterThread * _thread
       232 |   class SizedHashAllocator<80> _allocator
       232 |     class HashAllocator (base)
       232 |       struct HashAllocator::link * _free
       240 |       struct HashAllocator::buffer * _buffer
       248 |       size_t _size
       256 |   unsigned int _annos
       260 |   uint32_t _tcp_data_timeout
       264 |   uint32_t _tcp_done_timeout
           | [sizeof=272, dsize=268, align=8,
           |  nvsize=268, nvalign=8]

*** Dumping AST Record Layout
         0 | struct HashAllocator::link
         0 |   struct HashAllocator::link * next
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8108f7a48 <../dummy_inc/click/hashallocator.hh:26:5, line:28:5> line:26:12 referenced struct link definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55c8108f7b68 <col:5, col:12> col:12 implicit referenced struct link
`-FieldDecl 0x55c8108f7c38 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashAllocator::buffer
         0 |   struct HashAllocator::buffer * next
         8 |   size_t pos
        16 |   size_t maxpos
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8108f7ca0 <../dummy_inc/click/hashallocator.hh:30:5, line:34:5> line:30:12 referenced struct buffer definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55c8108f7db8 <col:5, col:12> col:12 implicit referenced struct buffer
|-FieldDecl 0x55c8108f7e88 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
|-FieldDecl 0x55c8108f7ee8 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
`-FieldDecl 0x55c8108f7f48 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8108f7060 <../dummy_inc/click/hashallocator.hh:9:1, line:55:1> line:9:7 referenced class HashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c8108f7178 <col:1, col:7> col:7 implicit referenced class HashAllocator
|-AccessSpecDecl 0x55c8108f7208 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x55c8108f7348 <line:11:5, col:30> col:5 referenced HashAllocator 'void (size_t)'
| `-ParmVarDecl 0x55c8108f7240 <col:19, col:26> col:26 size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x55c8108f7440 <line:12:5, col:20> col:5 used ~HashAllocator 'void () noexcept'
|-CXXMethodDecl 0x55c8108f75c0 <line:14:5, line:17:5> line:14:17 increase_size 'void (size_t)' inline
| |-ParmVarDecl 0x55c8108f7530 <col:31, col:38> col:38 used new_size 'size_t':'unsigned long'
| `-CompoundStmt 0x55c8108f9dc0 <col:48, line:17:5>
|   |-ParenExpr 0x55c8108f9d08 <line:15:2, col:212> 'void'
|   | `-ConditionalOperator 0x55c8108f9cd8 <col:3, col:211> 'void'
|   |   |-CXXStaticCastExpr 0x55c8108f8980 <col:3, col:62> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c8108f8950 <col:23, col:57> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c8108f8880 <col:23, col:34> 'bool' '&&'
|   |   |   | |-UnaryOperator 0x55c8108f87e0 <col:23, col:24> 'bool' prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x55c8108f87c8 <col:24> 'bool' <PointerToBoolean>
|   |   |   | |   `-ImplicitCastExpr 0x55c8108f87b0 <col:24> 'HashAllocator::link *' <LValueToRValue>
|   |   |   | |     `-MemberExpr 0x55c8108f8780 <col:24> 'HashAllocator::link *' lvalue ->_free 0x55c8108f8278
|   |   |   | |       `-CXXThisExpr 0x55c8108f8770 <col:24> 'HashAllocator *' implicit this
|   |   |   | `-UnaryOperator 0x55c8108f8868 <col:33, col:34> 'bool' prefix '!' cannot overflow
|   |   |   |   `-ImplicitCastExpr 0x55c8108f8850 <col:34> 'bool' <PointerToBoolean>
|   |   |   |     `-ImplicitCastExpr 0x55c8108f8838 <col:34> 'HashAllocator::buffer *' <LValueToRValue>
|   |   |   |       `-MemberExpr 0x55c8108f8808 <col:34> 'HashAllocator::buffer *' lvalue ->_buffer 0x55c8108f82d8
|   |   |   |         `-CXXThisExpr 0x55c8108f87f8 <col:34> 'HashAllocator *' implicit this
|   |   |   `-BinaryOperator 0x55c8108f8930 <col:45, col:57> 'bool' '>='
|   |   |     |-ImplicitCastExpr 0x55c8108f8900 <col:45> 'size_t':'unsigned long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c8108f88a0 <col:45> 'size_t':'unsigned long' lvalue ParmVar 0x55c8108f7530 'new_size' 'size_t':'unsigned long'
|   |   |     `-ImplicitCastExpr 0x55c8108f8918 <col:57> 'size_t':'unsigned long' <LValueToRValue>
|   |   |       `-MemberExpr 0x55c8108f88d0 <col:57> 'size_t':'unsigned long' lvalue ->_size 0x55c8108f8338
|   |   |         `-CXXThisExpr 0x55c8108f88c0 <col:57> 'HashAllocator *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55c8108f9a00 <col:66, col:73> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c8108f99e0 <col:72> 'int' 0
|   |   `-CallExpr 0x55c8108f9c38 <col:77, col:211> 'void'
|   |     |-ImplicitCastExpr 0x55c8108f9c20 <col:77> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c8108f9c00 <col:77> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c8108f9c78 <col:92> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c8108f9a70 <col:92> 'const char [40]' lvalue "!_free && !_buffer && new_size >= _size"
|   |     |-ImplicitCastExpr 0x55c8108f9c90 <col:135> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c8108f9ab0 <col:135> 'const char [36]' lvalue "../dummy_inc/click/hashallocator.hh"
|   |     |-ImplicitCastExpr 0x55c8108f9ca8 <col:174> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c8108f9af0 <col:174> 'int' 15
|   |     `-ImplicitCastExpr 0x55c8108f9cc0 <col:178, col:192> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c8108f9be8 <col:178, col:192> 'const char [42]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c8108f9bd0 <col:192> 'const char [42]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c8108f9b88 <col:192> 'const char [42]' lvalue "void HashAllocator::increase_size(size_t)"
|   `-BinaryOperator 0x55c8108f9da0 <line:16:2, col:10> 'size_t':'unsigned long' lvalue '='
|     |-MemberExpr 0x55c8108f9d38 <col:2> 'size_t':'unsigned long' lvalue ->_size 0x55c8108f8338
|     | `-CXXThisExpr 0x55c8108f9d28 <col:2> 'HashAllocator *' implicit this
|     `-ImplicitCastExpr 0x55c8108f9d88 <col:10> 'size_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55c8108f9d68 <col:10> 'size_t':'unsigned long' lvalue ParmVar 0x55c8108f7530 'new_size' 'size_t':'unsigned long'
|-CXXMethodDecl 0x55c8108f7690 <line:19:5, col:27> col:18 allocate 'void *()' inline
|-CXXMethodDecl 0x55c8108f77d8 <line:20:5, col:35> col:17 used deallocate 'void (void *)' inline
| `-ParmVarDecl 0x55c8108f7748 <col:28, col:34> col:34 p 'void *'
|-CXXMethodDecl 0x55c8108f7978 <line:22:5, col:31> col:10 swap 'void (HashAllocator &)'
| `-ParmVarDecl 0x55c8108f78b8 <col:15, col:30> col:30 x 'HashAllocator &'
|-AccessSpecDecl 0x55c8108f7a20 <line:24:3, col:10> col:3 private
|-CXXRecordDecl 0x55c8108f7a48 <line:26:5, line:28:5> line:26:12 referenced struct link definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c8108f7b68 <col:5, col:12> col:12 implicit referenced struct link
| `-FieldDecl 0x55c8108f7c38 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'
|-CXXRecordDecl 0x55c8108f7ca0 <line:30:5, line:34:5> line:30:12 referenced struct buffer definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c8108f7db8 <col:5, col:12> col:12 implicit referenced struct buffer
| |-FieldDecl 0x55c8108f7e88 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
| |-FieldDecl 0x55c8108f7ee8 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
| `-FieldDecl 0x55c8108f7f48 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'
|-EnumDecl 0x55c8108f7fb0 <line:36:5, line:44:5> line:36:5
| |-EnumConstantDecl 0x55c8108f80b0 <line:37:2, col:20> col:2 min_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x55c8108f8220 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108f8090 <col:20> 'int' Int: 1024
| |     `-IntegerLiteral 0x55c8108f8070 <col:20> 'int' 1024
| |-EnumConstantDecl 0x55c8108f8140 <line:41:2, col:20> col:2 max_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x55c8108f8238 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108f8120 <col:20> 'int' Int: 1048576
| |     `-IntegerLiteral 0x55c8108f8100 <col:20> 'int' 1048576
| `-EnumConstantDecl 0x55c8108f81d0 <line:43:2, col:18> col:2 min_nelements 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
|   `-ImplicitCastExpr 0x55c8108f8250 <col:18> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c8108f81b0 <col:18> 'int' Int: 8
|       `-IntegerLiteral 0x55c8108f8190 <col:18> 'int' 8
|-FieldDecl 0x55c8108f8278 <line:46:5, col:11> col:11 referenced _free 'HashAllocator::link *'
|-FieldDecl 0x55c8108f82d8 <line:47:5, col:13> col:13 referenced _buffer 'HashAllocator::buffer *'
|-FieldDecl 0x55c8108f8338 <line:48:5, col:12> col:12 referenced _size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55c8108f83b0 <line:50:5, col:25> col:11 used hard_allocate 'void *()'
|-CXXConstructorDecl 0x55c8108f8548 <line:52:5, col:41> col:5 HashAllocator 'void (const HashAllocator &)'
| `-ParmVarDecl 0x55c8108f8488 <col:19, col:40> col:40 x 'const HashAllocator &'
`-CXXMethodDecl 0x55c8108f86c8 <line:53:5, col:52> col:20 operator= 'HashAllocator &(const HashAllocator &)'
  `-ParmVarDecl 0x55c8108f8608 <col:30, col:51> col:51 x 'const HashAllocator &'

Layout: <CGRecordLayout
  LLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  NonVirtualBaseLLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c81098fee8 <../dummy_inc/click/hashallocator.hh:58:1, line:65:1> line:59:7 class SizedHashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'HashAllocator'
|-TemplateArgument integral 80
|-CXXRecordDecl 0x55c810990128 prev 0x55c81098fee8 <col:1, col:7> col:7 implicit class SizedHashAllocator
|-AccessSpecDecl 0x55c8109901b8 <col:51, col:57> col:51 public
|-CXXConstructorDecl 0x55c810990218 <line:61:5, line:63:5> line:61:5 SizedHashAllocator 'void ()'
|-CXXConstructorDecl 0x55c8109902f8 <line:59:7> col:7 implicit SizedHashAllocator 'void (const SizedHashAllocator<80> &)' inline default_delete noexcept-unevaluated 0x55c8109902f8
| `-ParmVarDecl 0x55c810990408 <col:7> col:7 'const SizedHashAllocator<80> &'
|-CXXConstructorDecl 0x55c8109904a8 <col:7> col:7 implicit SizedHashAllocator 'void (SizedHashAllocator<80> &&)' inline default_delete noexcept-unevaluated 0x55c8109904a8
| `-ParmVarDecl 0x55c8109905b8 <col:7> col:7 'SizedHashAllocator<80> &&'
|-CXXMethodDecl 0x55c810990658 <col:7> col:7 implicit operator= 'SizedHashAllocator<80> &(SizedHashAllocator<80> &&)' inline default_delete noexcept-unevaluated 0x55c810990658
| `-ParmVarDecl 0x55c810990768 <col:7> col:7 'SizedHashAllocator<80> &&'
`-CXXDestructorDecl 0x55c8109907f0 <col:7> col:7 implicit ~SizedHashAllocator 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  NonVirtualBaseLLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c81098b5c8 <../elements/tcpudp/tcprewriter.hh:95:1, line:195:1> line:95:7 referenced class TCPRewriter definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'IPRewriterBase'
|-CXXRecordDecl 0x55c81098b728 <col:1, col:7> col:7 implicit referenced class TCPRewriter
|-AccessSpecDecl 0x55c81098b7b8 <col:45, col:51> col:45 public
|-CXXRecordDecl 0x55c81098b7e0 <line:97:5, line:155:5> line:97:11 referenced class TCPFlow definition
| |-DefinitionData has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-public 'IPRewriterFlow'
| |-CXXRecordDecl 0x55c81098b938 <col:5, col:11> col:11 implicit referenced class TCPFlow
| |-AccessSpecDecl 0x55c81098b9c8 <col:45, col:51> col:45 public
| |-CXXConstructorDecl 0x55c81098bd78 <line:99:2, line:104:2> line:99:2 TCPFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, bool, click_jiffies_t)'
| | |-ParmVarDecl 0x55c81098ba00 <col:10, col:27> col:27 used owner 'IPRewriterInput *'
| | |-ParmVarDecl 0x55c81098ba78 <col:34, col:50> col:50 used flowid 'const IPFlowID &'
| | |-ParmVarDecl 0x55c81098baf0 <line:100:3, col:19> col:19 used rewritten_flowid 'const IPFlowID &'
| | |-ParmVarDecl 0x55c81098bb68 <line:101:3, col:8> col:8 used guaranteed 'bool'
| | |-ParmVarDecl 0x55c81098bbe0 <col:20, col:36> col:36 used expiry_j 'click_jiffies_t':'unsigned int'
| | |-CXXCtorInitializer 'IPRewriterFlow'
| | | `-CXXConstructExpr 0x55c810991d58 <line:102:8, line:103:32> 'IPRewriterFlow' 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| | |   |-ImplicitCastExpr 0x55c810991cf8 <line:102:23> 'IPRewriterInput *' <LValueToRValue>
| | |   | `-DeclRefExpr 0x55c810991478 <col:23> 'IPRewriterInput *' lvalue ParmVar 0x55c81098ba00 'owner' 'IPRewriterInput *'
| | |   |-DeclRefExpr 0x55c810991498 <col:30> 'const IPFlowID' lvalue ParmVar 0x55c81098ba78 'flowid' 'const IPFlowID &'
| | |   |-DeclRefExpr 0x55c8109914b8 <col:38> 'const IPFlowID' lvalue ParmVar 0x55c81098baf0 'rewritten_flowid' 'const IPFlowID &'
| | |   |-ImplicitCastExpr 0x55c810991d10 <line:103:9> 'uint8_t':'unsigned char' <IntegralCast>
| | |   | `-IntegerLiteral 0x55c8109914d8 <col:9> 'int' 6
| | |   |-ImplicitCastExpr 0x55c810991d28 <col:12> 'bool' <LValueToRValue>
| | |   | `-DeclRefExpr 0x55c8109914f8 <col:12> 'bool' lvalue ParmVar 0x55c81098bb68 'guaranteed' 'bool'
| | |   `-ImplicitCastExpr 0x55c810991d40 <col:24> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| | |     `-DeclRefExpr 0x55c810991518 <col:24> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55c81098bbe0 'expiry_j' 'click_jiffies_t':'unsigned int'
| | |-CXXCtorInitializer Field 0x55c81098ea48 '_dt' 'TCPRewriter::TCPFlow::delta_transition *'
| | | `-ImplicitCastExpr 0x55c810991e18 <col:39> 'TCPRewriter::TCPFlow::delta_transition *' <NullToPointer>
| | |   `-IntegerLiteral 0x55c810991dd8 <col:39> 'int' 0
| | `-CompoundStmt 0x55c810991e68 <col:42, line:104:2>
| |-CXXDestructorDecl 0x55c81098be90 <line:106:2, line:111:2> line:106:2 used ~TCPFlow 'void () noexcept'
| | `-CompoundStmt 0x55c810992318 <col:13, line:111:2>
| |   `-WhileStmt 0x55c8109922e0 <line:107:6, line:110:6> has_var
| |     |-DeclStmt 0x55c810992300 <line:107:13, col:35>
| |     | `-VarDecl 0x55c810991f70 <col:13, col:35> col:31 used x 'TCPRewriter::TCPFlow::delta_transition *' cinit
| |     |   `-ImplicitCastExpr 0x55c810992018 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |     |     `-MemberExpr 0x55c810991fe8 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55c81098ea48
| |     |       `-CXXThisExpr 0x55c810991fd8 <col:35> 'TCPRewriter::TCPFlow *' implicit this
| |     |-ImplicitCastExpr 0x55c810992068 <col:31> 'bool' <PointerToBoolean>
| |     | `-ImplicitCastExpr 0x55c810992050 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |     |   `-DeclRefExpr 0x55c810992030 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55c810991f70 'x' 'TCPRewriter::TCPFlow::delta_transition *'
| |     `-CompoundStmt 0x55c8109922c0 <col:40, line:110:6>
| |       |-BinaryOperator 0x55c810992160 <line:108:3, col:17> 'TCPRewriter::TCPFlow::delta_transition *' lvalue '='
| |       | |-MemberExpr 0x55c810992090 <col:3> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55c81098ea48
| |       | | `-CXXThisExpr 0x55c810992080 <col:3> 'TCPRewriter::TCPFlow *' implicit this
| |       | `-CXXMemberCallExpr 0x55c810992128 <col:9, col:17> 'TCPRewriter::TCPFlow::delta_transition *'
| |       |   `-MemberExpr 0x55c8109920f8 <col:9, col:12> '<bound member function type>' ->next 0x55c81098e808
| |       |     `-ImplicitCastExpr 0x55c810992148 <col:9> 'const TCPRewriter::TCPFlow::delta_transition *' <NoOp>
| |       |       `-ImplicitCastExpr 0x55c8109920e0 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |       |         `-DeclRefExpr 0x55c8109920c0 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55c810991f70 'x' 'TCPRewriter::TCPFlow::delta_transition *'
| |       `-CXXDeleteExpr 0x55c8109922a0 <line:109:3, col:10> 'void' Function 0x55c810471b88 'operator delete' 'void (void *) noexcept'
| |         `-ImplicitCastExpr 0x55c8109921a0 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |           `-DeclRefExpr 0x55c810992180 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55c810991f70 'x' 'TCPRewriter::TCPFlow::delta_transition *'
| |-EnumDecl 0x55c81098bf70 <line:113:2, line:118:2> line:113:2
| | |-EnumConstantDecl 0x55c81098c070 <line:114:6, col:23> col:6 referenced s_forward_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55c81098c450 <col:23> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55c81098c050 <col:23> 'int' Int: 1
| | |     `-IntegerLiteral 0x55c81098c030 <col:23> 'int' 1
| | |-EnumConstantDecl 0x55c81098c100 <col:26, col:41> col:26 referenced s_reply_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55c81098c468 <col:41> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55c81098c0e0 <col:41> 'int' Int: 2
| | |     `-IntegerLiteral 0x55c81098c0c0 <col:41> 'int' 2
| | |-EnumConstantDecl 0x55c81098c1f0 <line:115:6, col:50> col:6 referenced s_both_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55c81098c480 <col:20, col:50> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55c81098c1d0 <col:20, col:50> 'int' Int: 3
| | |     `-ParenExpr 0x55c81098c1b0 <col:20, col:50> 'int'
| | |       `-BinaryOperator 0x55c81098c190 <col:21, col:38> 'int' '|'
| | |         |-DeclRefExpr 0x55c81098c150 <col:21> 'int' EnumConstant 0x55c81098c070 's_forward_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | |         `-DeclRefExpr 0x55c81098c170 <col:38> 'int' EnumConstant 0x55c81098c100 's_reply_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | |-EnumConstantDecl 0x55c81098c280 <line:116:6, col:23> col:6 referenced s_forward_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55c81098c498 <col:23> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55c81098c260 <col:23> 'int' Int: 4
| | |     `-IntegerLiteral 0x55c81098c240 <col:23> 'int' 4
| | |-EnumConstantDecl 0x55c81098c310 <col:26, col:41> col:26 referenced s_reply_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55c81098c4b0 <col:41> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55c81098c2f0 <col:41> 'int' Int: 8
| | |     `-IntegerLiteral 0x55c81098c2d0 <col:41> 'int' 8
| | `-EnumConstantDecl 0x55c81098c400 <line:117:6, col:50> col:6 referenced s_both_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |   `-ImplicitCastExpr 0x55c81098c4c8 <col:20, col:50> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55c81098c3e0 <col:20, col:50> 'int' Int: 12
| |       `-ParenExpr 0x55c81098c3c0 <col:20, col:50> 'int'
| |         `-BinaryOperator 0x55c81098c3a0 <col:21, col:38> 'int' '|'
| |           |-DeclRefExpr 0x55c81098c360 <col:21> 'int' EnumConstant 0x55c81098c280 's_forward_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |           `-DeclRefExpr 0x55c81098c380 <col:38> 'int' EnumConstant 0x55c81098c310 's_reply_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-CXXMethodDecl 0x55c81098c528 <line:119:2, line:121:2> line:119:7 used both_done 'bool () const'
| | `-CompoundStmt 0x55c810992530 <col:25, line:121:2>
| |   `-ReturnStmt 0x55c810992520 <line:120:6, col:40>
| |     `-BinaryOperator 0x55c810992500 <col:13, col:40> 'bool' '=='
| |       |-ParenExpr 0x55c810992418 <col:13, col:35> 'int'
| |       | `-BinaryOperator 0x55c8109923f8 <col:14, col:24> 'int' '&'
| |       |   |-ImplicitCastExpr 0x55c8109923c8 <col:14> 'int' <IntegralCast>
| |       |   | `-ImplicitCastExpr 0x55c8109923b0 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
| |       |   |   `-MemberExpr 0x55c810992360 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55c81093c3c8
| |       |   |     `-ImplicitCastExpr 0x55c810992340 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
| |       |   |       `-CXXThisExpr 0x55c810992330 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
| |       |   `-ImplicitCastExpr 0x55c8109923e0 <col:24> 'int' <IntegralCast>
| |       |     `-DeclRefExpr 0x55c810992390 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55c81098c1f0 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |       `-ImplicitCastExpr 0x55c8109924e8 <col:40> 'int' <IntegralCast>
| |         `-DeclRefExpr 0x55c810992438 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55c81098c1f0 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-CXXMethodDecl 0x55c81098c5e8 <line:122:2, line:124:2> line:122:7 used both_data 'bool () const'
| | `-CompoundStmt 0x55c810992748 <col:25, line:124:2>
| |   `-ReturnStmt 0x55c810992738 <line:123:6, col:40>
| |     `-BinaryOperator 0x55c810992718 <col:13, col:40> 'bool' '=='
| |       |-ParenExpr 0x55c810992630 <col:13, col:35> 'int'
| |       | `-BinaryOperator 0x55c810992610 <col:14, col:24> 'int' '&'
| |       |   |-ImplicitCastExpr 0x55c8109925e0 <col:14> 'int' <IntegralCast>
| |       |   | `-ImplicitCastExpr 0x55c8109925c8 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
| |       |   |   `-MemberExpr 0x55c810992578 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55c81093c3c8
| |       |   |     `-ImplicitCastExpr 0x55c810992558 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
| |       |   |       `-CXXThisExpr 0x55c810992548 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
| |       |   `-ImplicitCastExpr 0x55c8109925f8 <col:24> 'int' <IntegralCast>
| |       |     `-DeclRefExpr 0x55c8109925a8 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55c81098c400 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |       `-ImplicitCastExpr 0x55c810992700 <col:40> 'int' <IntegralCast>
| |         `-DeclRefExpr 0x55c810992650 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55c81098c400 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-CXXMethodDecl 0x55c81098c8b0 <line:126:2, col:75> col:6 update_seqno_delta 'int (bool, tcp_seq_t, int32_t)'
| | |-ParmVarDecl 0x55c81098c698 <col:25, col:30> col:30 direction 'bool'
| | |-ParmVarDecl 0x55c81098c710 <col:41, col:51> col:51 old_seqno 'tcp_seq_t':'unsigned int'
| | `-ParmVarDecl 0x55c81098c788 <col:62, col:70> col:70 delta 'int32_t':'int'
| |-CXXMethodDecl 0x55c81098cb08 <line:127:2, col:53> col:12 new_seq 'tcp_seq_t (bool, tcp_seq_t) const'
| | |-ParmVarDecl 0x55c81098c978 <col:20, col:25> col:25 direction 'bool'
| | `-ParmVarDecl 0x55c81098c9f0 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
| |-CXXMethodDecl 0x55c81098dcf8 <line:128:2, col:53> col:12 new_ack 'tcp_seq_t (bool, tcp_seq_t) const'
| | |-ParmVarDecl 0x55c81098cbc8 <col:20, col:25> col:25 direction 'bool'
| | `-ParmVarDecl 0x55c81098dc60 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
| |-CXXMethodDecl 0x55c81098df50 <line:130:2, col:62> col:7 apply 'void (WritablePacket *, bool, unsigned int)'
| | |-ParmVarDecl 0x55c81098ddb8 <col:13, col:29> col:29 p 'WritablePacket *'
| | |-ParmVarDecl 0x55c81098de30 <col:32, col:37> col:37 direction 'bool'
| | `-ParmVarDecl 0x55c81098deb0 <col:48, col:57> col:57 annos 'unsigned int'
| |-CXXMethodDecl 0x55c81098e1a8 <line:132:2, col:69> col:7 unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| | |-ParmVarDecl 0x55c81098e018 <col:15, col:28> col:28 sa 'StringAccum &'
| | |-ParmVarDecl 0x55c81098e090 <col:32, col:37> col:37 direction 'bool'
| | `-ParmVarDecl 0x55c81098e108 <col:48, col:64> col:64 now 'click_jiffies_t':'unsigned int'
| |-AccessSpecDecl 0x55c81098e260 <line:134:7, col:14> col:7 private
| |-CXXRecordDecl 0x55c81098e288 <line:136:2, line:149:2> line:136:9 referenced struct delta_transition definition
| | |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | | |-DefaultConstructor exists non_trivial user_provided
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-CXXRecordDecl 0x55c81098e3a8 <col:2, col:9> col:9 implicit referenced struct delta_transition
| | |-FieldDecl 0x55c81098e4d8 <line:137:6, col:21> col:14 referenced delta 'int32_t [2]'
| | |-FieldDecl 0x55c81098e5c8 <line:138:6, col:25> col:16 referenced trigger 'tcp_seq_t [2]'
| | |-FieldDecl 0x55c81098e628 <line:139:6, col:16> col:16 referenced nextptr 'uintptr_t':'unsigned long'
| | |-CXXConstructorDecl 0x55c81098e6e0 <line:140:6, line:142:6> line:140:6 delta_transition 'void ()'
| | | `-CompoundStmt 0x55c810992890 <col:25, line:142:6>
| | |   `-CallExpr 0x55c810992840 <line:141:3, col:43> 'void *'
| | |     |-ImplicitCastExpr 0x55c810992828 <col:3> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x55c810992808 <col:3> 'void *(void *, int, size_t) throw()' lvalue Function 0x55c81057fe78 'memset' 'void *(void *, int, size_t) throw()'
| | |     |-ImplicitCastExpr 0x55c810992878 <col:10> 'void *' <BitCast>
| | |     | `-CXXThisExpr 0x55c8109927a8 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' this
| | |     |-IntegerLiteral 0x55c8109927b8 <col:16> 'int' 0
| | |     `-UnaryExprOrTypeTraitExpr 0x55c8109927e8 <col:19, col:42> 'unsigned long' sizeof 'TCPRewriter::TCPFlow::delta_transition'
| | |-CXXMethodDecl 0x55c81098e808 <line:143:6, line:145:6> line:143:24 used next 'TCPRewriter::TCPFlow::delta_transition *() const'
| | | `-CompoundStmt 0x55c810992a40 <col:37, line:145:6>
| | |   `-ReturnStmt 0x55c810992a30 <line:144:3, col:70>
| | |     `-CXXReinterpretCastExpr 0x55c810992a00 <col:10, col:70> 'TCPRewriter::TCPFlow::delta_transition *' reinterpret_cast<struct TCPRewriter::TCPFlow::delta_transition *> <IntegralToPointer>
| | |       `-BinaryOperator 0x55c8109929d0 <col:47, col:69> 'unsigned long' '-'
| | |         |-ImplicitCastExpr 0x55c8109929b8 <col:47> 'uintptr_t':'unsigned long' <LValueToRValue>
| | |         | `-MemberExpr 0x55c8109928b8 <col:47> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55c81098e628
| | |         |   `-CXXThisExpr 0x55c8109928a8 <col:47> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| | |         `-ParenExpr 0x55c810992998 <col:57, col:69> 'unsigned long'
| | |           `-BinaryOperator 0x55c810992978 <col:58, col:68> 'unsigned long' '&'
| | |             |-ImplicitCastExpr 0x55c810992948 <col:58> 'uintptr_t':'unsigned long' <LValueToRValue>
| | |             | `-MemberExpr 0x55c8109928f8 <col:58> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55c81098e628
| | |             |   `-CXXThisExpr 0x55c8109928e8 <col:58> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| | |             `-ImplicitCastExpr 0x55c810992960 <col:68> 'unsigned long' <IntegralCast>
| | |               `-IntegerLiteral 0x55c810992928 <col:68> 'int' 3
| | |-CXXMethodDecl 0x55c81098e978 <line:146:6, line:148:6> line:146:11 used has_trigger 'bool (bool) const'
| | | |-ParmVarDecl 0x55c81098e8b8 <col:23, col:28> col:28 used direction 'bool'
| | | `-CompoundStmt 0x55c810992bc0 <col:45, line:148:6>
| | |   `-ReturnStmt 0x55c810992bb0 <line:147:3, col:35>
| | |     `-ImplicitCastExpr 0x55c810992b98 <col:10, col:35> 'bool' <IntegralToBoolean>
| | |       `-BinaryOperator 0x55c810992b78 <col:10, col:35> 'unsigned long' '&'
| | |         |-ImplicitCastExpr 0x55c810992b48 <col:10> 'uintptr_t':'unsigned long' <LValueToRValue>
| | |         | `-MemberExpr 0x55c810992a68 <col:10> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55c81098e628
| | |         |   `-CXXThisExpr 0x55c810992a58 <col:10> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| | |         `-ImplicitCastExpr 0x55c810992b60 <col:20, col:35> 'unsigned long' <IntegralCast>
| | |           `-ParenExpr 0x55c810992b28 <col:20, col:35> 'int'
| | |             `-BinaryOperator 0x55c810992b08 <col:21, col:26> 'int' '<<'
| | |               |-IntegerLiteral 0x55c810992a98 <col:21> 'int' 1
| | |               `-ImplicitCastExpr 0x55c810992af0 <col:26> 'int' <IntegralCast>
| | |                 `-ImplicitCastExpr 0x55c810992ad8 <col:26> 'bool' <LValueToRValue>
| | |                   `-DeclRefExpr 0x55c810992ab8 <col:26> 'bool' lvalue ParmVar 0x55c81098e8b8 'direction' 'bool'
| | `-CXXDestructorDecl 0x55c8109921b8 <line:136:9> col:9 implicit ~delta_transition 'void ()' inline default trivial noexcept-unevaluated 0x55c8109921b8
| |-FieldDecl 0x55c81098ea48 <line:151:2, col:20> col:20 referenced _dt 'TCPRewriter::TCPFlow::delta_transition *'
| `-CXXMethodDecl 0x55c81098ec88 <line:153:2, col:67> col:7 apply_sack 'void (bool, click_tcp *, int)'
|   |-ParmVarDecl 0x55c81098eaa8 <col:18, col:23> col:23 direction 'bool'
|   |-ParmVarDecl 0x55c81098eb20 <col:34, col:45> col:45 tcp 'click_tcp *'
|   `-ParmVarDecl 0x55c81098eba0 <col:50, col:54> col:54 transport_len 'int'
|-CXXConstructorDecl 0x55c81098eda0 <line:157:5, col:17> col:5 used TCPRewriter 'void ()'
|-CXXDestructorDecl 0x55c81098ee90 <line:158:5, col:18> col:5 used ~TCPRewriter 'void () noexcept'
| `-Overrides: [ 0x55c810965ff8 IPRewriterBase::~IPRewriterBase 'void () noexcept' ]
|-CXXMethodDecl 0x55c81098efc0 <line:160:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55c81088a2a8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55c810992c28 <col:36, col:60>
|   `-ReturnStmt 0x55c810992c18 <col:38, col:45>
|     `-ImplicitCastExpr 0x55c810992c00 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55c810992bd8 <col:45> 'const char [12]' lvalue "TCPRewriter"
|-CXXMethodDecl 0x55c81098f110 <line:161:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x55c81088afa0 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55c81098f078 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x55c81098f3f0 <line:163:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55c8109669a0 IPRewriterBase::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55c81098f2a0 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55c81098f318 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55c81098f6d0 <line:165:5, line:166:53> line:165:22 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)'
| |-Overrides: [ 0x55c810967b18 IPRewriterBase::add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' ]
| |-ParmVarDecl 0x55c81098f4b8 <col:31, col:35> col:35 ip_p 'int'
| |-ParmVarDecl 0x55c81098f530 <col:41, col:57> col:57 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55c81098f5a8 <line:166:10, col:26> col:26 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55c81098f628 <col:44, col:48> col:48 input 'int'
|-CXXMethodDecl 0x55c81098f830 <line:167:5, col:43> col:10 used destroy_flow 'void (IPRewriterFlow *)'
| |-Overrides: [ 0x55c810967c78 IPRewriterBase::destroy_flow 'void (IPRewriterFlow *)' ]
| `-ParmVarDecl 0x55c81098f7a0 <col:23, col:39> col:39 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x55c81098f978 <line:168:5, line:170:5> line:168:21 used best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)'
| |-Overrides: [ 0x55c810967e28 IPRewriterBase::best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' ]
| |-ParmVarDecl 0x55c81098f8e8 <col:40, col:62> col:62 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x55c810992f00 <col:68, line:170:5>
|   `-ReturnStmt 0x55c810992ef0 <line:169:2, col:92>
|     `-BinaryOperator 0x55c810992ed0 <col:9, col:92> 'unsigned int' '-'
|       |-BinaryOperator 0x55c810992de0 <col:9, col:77> 'unsigned int' '+'
|       | |-CXXMemberCallExpr 0x55c810992ca8 <col:9, col:22> 'click_jiffies_t':'unsigned int'
|       | | `-MemberExpr 0x55c810992c78 <col:9, col:15> '<bound member function type>' ->expiry 0x55c810939df0
|       | |   `-ImplicitCastExpr 0x55c810992c60 <col:9> 'const IPRewriterFlow *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x55c810992c40 <col:9> 'const IPRewriterFlow *' lvalue ParmVar 0x55c81098f8e8 'flow' 'const IPRewriterFlow *'
|       | `-ImplicitCastExpr 0x55c810992dc8 <col:26, col:77> 'unsigned int' <IntegralCast>
|       |   `-CXXMemberCallExpr 0x55c810992d88 <col:26, col:77> 'int'
|       |     |-MemberExpr 0x55c810992cd8 <col:26> '<bound member function type>' ->tcp_flow_timeout 0x55c810990b20
|       |     | `-ImplicitCastExpr 0x55c810992db0 <col:26> 'const TCPRewriter *' <NoOp>
|       |     |   `-CXXThisExpr 0x55c810992cc8 <col:26> 'TCPRewriter *' implicit this
|       |     `-CXXStaticCastExpr 0x55c810992d50 <col:43, col:76> 'const TCPRewriter::TCPFlow *' static_cast<const class TCPRewriter::TCPFlow *> <BaseToDerived (IPRewriterFlow)>
|       |       `-ImplicitCastExpr 0x55c810992d38 <col:72> 'const IPRewriterFlow *' <LValueToRValue> part_of_explicit_cast
|       |         `-DeclRefExpr 0x55c810992d08 <col:72> 'const IPRewriterFlow *' lvalue ParmVar 0x55c81098f8e8 'flow' 'const IPRewriterFlow *'
|       `-ImplicitCastExpr 0x55c810992eb8 <col:81, col:92> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-ArraySubscriptExpr 0x55c810992e98 <col:81, col:92> 'uint32_t':'unsigned int' lvalue
|           |-ImplicitCastExpr 0x55c810992e80 <col:81> 'uint32_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x55c810992e30 <col:81> 'uint32_t [2]' lvalue ->_timeouts 0x55c81097c208
|           |   `-ImplicitCastExpr 0x55c810992e10 <col:81> 'IPRewriterBase *' <UncheckedDerivedToBase (IPRewriterBase)>
|           |     `-CXXThisExpr 0x55c810992e00 <col:81> 'TCPRewriter *' implicit this
|           `-IntegerLiteral 0x55c810992e60 <col:91> 'int' 1
|-CXXMethodDecl 0x55c81098fb48 <line:172:5, col:28> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55c810889118 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55c81098fa38 <col:15> col:18 'int'
| `-ParmVarDecl 0x55c81098fab0 <col:20, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x55c81098fc18 <line:174:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55c81088bc40 Element::add_handlers 'void ()' ]
|-AccessSpecDecl 0x55c81098fcb8 <line:176:2, col:11> col:2 protected
|-FieldDecl 0x55c8109908d0 <line:178:5, col:41> col:41 referenced _allocator 'SizedHashAllocator<sizeof(TCPRewriter::TCPFlow)>':'SizedHashAllocator<80>'
|-FieldDecl 0x55c810990938 <line:179:5, col:14> col:14 _annos 'unsigned int'
|-FieldDecl 0x55c810990998 <line:180:5, col:14> col:14 referenced _tcp_data_timeout 'uint32_t':'unsigned int'
|-FieldDecl 0x55c8109909f8 <line:181:5, col:14> col:14 referenced _tcp_done_timeout 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c810990b20 <line:183:5, line:190:5> line:183:9 used tcp_flow_timeout 'int (const TCPRewriter::TCPFlow *) const'
| |-ParmVarDecl 0x55c810990a58 <col:26, col:41> col:41 used mf 'const TCPRewriter::TCPFlow *'
| `-CompoundStmt 0x55c810993270 <col:51, line:190:5>
|   `-IfStmt 0x55c810993248 <line:184:2, line:189:24> has_else
|     |-CXXMemberCallExpr 0x55c810992f80 <line:184:6, col:20> 'bool'
|     | `-MemberExpr 0x55c810992f50 <col:6, col:10> '<bound member function type>' ->both_done 0x55c81098c528
|     |   `-ImplicitCastExpr 0x55c810992f38 <col:6> 'const TCPRewriter::TCPFlow *' <LValueToRValue>
|     |     `-DeclRefExpr 0x55c810992f18 <col:6> 'const TCPRewriter::TCPFlow *' lvalue ParmVar 0x55c810990a58 'mf' 'const TCPRewriter::TCPFlow *'
|     |-ReturnStmt 0x55c810993010 <line:185:6, col:13>
|     | `-ImplicitCastExpr 0x55c810992ff8 <col:13> 'int' <IntegralCast>
|     |   `-ImplicitCastExpr 0x55c810992fe0 <col:13> 'uint32_t':'unsigned int' <LValueToRValue>
|     |     `-MemberExpr 0x55c810992fb0 <col:13> 'const uint32_t':'const unsigned int' lvalue ->_tcp_done_timeout 0x55c8109909f8
|     |       `-CXXThisExpr 0x55c810992fa0 <col:13> 'const TCPRewriter *' implicit this
|     `-IfStmt 0x55c810993220 <line:186:7, line:189:24> has_else
|       |-CXXMemberCallExpr 0x55c810993088 <line:186:11, col:25> 'bool'
|       | `-MemberExpr 0x55c810993058 <col:11, col:15> '<bound member function type>' ->both_data 0x55c81098c5e8
|       |   `-ImplicitCastExpr 0x55c810993040 <col:11> 'const TCPRewriter::TCPFlow *' <LValueToRValue>
|       |     `-DeclRefExpr 0x55c810993020 <col:11> 'const TCPRewriter::TCPFlow *' lvalue ParmVar 0x55c810990a58 'mf' 'const TCPRewriter::TCPFlow *'
|       |-ReturnStmt 0x55c810993118 <line:187:6, col:13>
|       | `-ImplicitCastExpr 0x55c810993100 <col:13> 'int' <IntegralCast>
|       |   `-ImplicitCastExpr 0x55c8109930e8 <col:13> 'uint32_t':'unsigned int' <LValueToRValue>
|       |     `-MemberExpr 0x55c8109930b8 <col:13> 'const uint32_t':'const unsigned int' lvalue ->_tcp_data_timeout 0x55c810990998
|       |       `-CXXThisExpr 0x55c8109930a8 <col:13> 'const TCPRewriter *' implicit this
|       `-ReturnStmt 0x55c810993210 <line:189:6, col:24>
|         `-ImplicitCastExpr 0x55c8109931f8 <col:13, col:24> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55c8109931e0 <col:13, col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|             `-ArraySubscriptExpr 0x55c8109931c0 <col:13, col:24> 'const uint32_t':'const unsigned int' lvalue
|               |-ImplicitCastExpr 0x55c8109931a8 <col:13> 'const uint32_t *' <ArrayToPointerDecay>
|               | `-MemberExpr 0x55c810993158 <col:13> 'uint32_t const[2]' lvalue ->_timeouts 0x55c81097c208
|               |   `-ImplicitCastExpr 0x55c810993138 <col:13> 'IPRewriterBase *' <UncheckedDerivedToBase (IPRewriterBase)>
|               |     `-CXXThisExpr 0x55c810993128 <col:13> 'const TCPRewriter *' implicit this
|               `-IntegerLiteral 0x55c810993188 <col:23> 'int' 0
|-CXXMethodDecl 0x55c810990cf0 <line:192:5, col:57> col:19 tcp_mappings_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c810990bd8 <col:40, col:48> col:49 'Element *'
| `-ParmVarDecl 0x55c810990c58 <col:51, col:56> col:57 'void *'
|-CXXMethodDecl 0x55c810991050 <line:193:5, col:101> col:16 tcp_lookup_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x55c810990db8 <col:35> col:38 'int'
| |-ParmVarDecl 0x55c810990e30 <col:40, col:48> col:48 str 'String &'
| |-ParmVarDecl 0x55c810990ea8 <col:53, col:62> col:62 e 'Element *'
| |-ParmVarDecl 0x55c810990f20 <col:65, col:80> col:80 h 'const Handler *'
| `-ParmVarDecl 0x55c810990f98 <col:83, col:97> col:97 errh 'ErrorHandler *'
|-CXXConstructorDecl 0x55c810991148 <line:95:7> col:7 implicit TCPRewriter 'void (const TCPRewriter &)' inline default_delete noexcept-unevaluated 0x55c810991148
| `-ParmVarDecl 0x55c810991258 <col:7> col:7 'const TCPRewriter &'
`-CXXMethodDecl 0x55c8109912f8 <col:7> col:7 implicit operator= 'TCPRewriter &(const TCPRewriter &)' inline default_delete noexcept-unevaluated 0x55c8109912f8
  `-ParmVarDecl 0x55c810991408 <col:7> col:7 'const TCPRewriter &'

Layout: <CGRecordLayout
  LLVMType:%class.TCPRewriter = type <{ %class.IPRewriterBase, %class.SizedHashAllocator, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TCPRewriter.base = type <{ %class.IPRewriterBase, %class.SizedHashAllocator, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SizedHashAllocator<72>
         0 |   class HashAllocator (base)
         0 |     struct HashAllocator::link * _free
         8 |     struct HashAllocator::buffer * _buffer
        16 |     size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriter
         0 |   class TCPRewriter (primary base)
         0 |     class IPRewriterBase (primary base)
         0 |       class Element (primary base)
         0 |         (Element vtable pointer)
         8 |         class Element::Port *[2] _ports
        24 |         class Element::Port [4] _inline_ports
        88 |         int [2] _nports
        96 |         class Router * _router
       104 |         int _eindex
       112 |       class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |         class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |           class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |           class IPRewriterEntry ** buckets
       120 |           uint32_t nbuckets
       124 |           uint32_t first_bucket
       128 |           size_t size
       136 |           struct libdivide_u32_t bucket_divider
       136 |             uint32_t magic
       140 |             uint8_t more
       144 |       class Vector<class IPRewriterInput> _input_specs
       144 |         class vector_memory<class sized_array_memory<56> > vm_
       144 |           vector_memory<class sized_array_memory<56> >::type * l_
       152 |           vector_memory::size_type n_
       156 |           vector_memory::size_type capacity_
       160 |       class IPRewriterHeap * _heap
       168 |       uint32_t [2] _timeouts
       176 |       uint32_t _gc_interval_sec
       184 |       class Timer _gc_timer
       184 |         int _schedpos1
       192 |         class Timestamp _expiry_s
       192 |           union Timestamp::rep_t _t
       192 |             int64_t x
       200 |         union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |           TimerCallback callback
       208 |         void * _thunk
       216 |         class Element * _owner
       224 |         class RouterThread * _thread
       232 |     class SizedHashAllocator<80> _allocator
       232 |       class HashAllocator (base)
       232 |         struct HashAllocator::link * _free
       240 |         struct HashAllocator::buffer * _buffer
       248 |         size_t _size
       256 |     unsigned int _annos
       260 |     uint32_t _tcp_data_timeout
       264 |     uint32_t _tcp_done_timeout
       272 |   class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _udp_map
       272 |     class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       272 |       class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       272 |       class IPRewriterEntry ** buckets
       280 |       uint32_t nbuckets
       284 |       uint32_t first_bucket
       288 |       size_t size
       296 |       struct libdivide_u32_t bucket_divider
       296 |         uint32_t magic
       300 |         uint8_t more
       304 |   class SizedHashAllocator<72> _udp_allocator
       304 |     class HashAllocator (base)
       304 |       struct HashAllocator::link * _free
       312 |       struct HashAllocator::buffer * _buffer
       320 |       size_t _size
       328 |   uint32_t [2] _udp_timeouts
       336 |   uint32_t _udp_streaming_timeout
           | [sizeof=344, dsize=340, align=8,
           |  nvsize=340, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c81099fde0 <../dummy_inc/click/hashallocator.hh:58:1, line:65:1> line:59:7 class SizedHashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'HashAllocator'
|-TemplateArgument integral 72
|-CXXRecordDecl 0x55c8109a0018 prev 0x55c81099fde0 <col:1, col:7> col:7 implicit class SizedHashAllocator
|-AccessSpecDecl 0x55c8109a00a8 <col:51, col:57> col:51 public
|-CXXConstructorDecl 0x55c8109a0108 <line:61:5, line:63:5> line:61:5 used SizedHashAllocator 'void ()'
|-CXXConstructorDecl 0x55c8109a01e8 <line:59:7> col:7 implicit SizedHashAllocator 'void (const SizedHashAllocator<72> &)' inline default_delete noexcept-unevaluated 0x55c8109a01e8
| `-ParmVarDecl 0x55c8109a02f8 <col:7> col:7 'const SizedHashAllocator<72> &'
|-CXXConstructorDecl 0x55c8109a0398 <col:7> col:7 implicit SizedHashAllocator 'void (SizedHashAllocator<72> &&)' inline default_delete noexcept-unevaluated 0x55c8109a0398
| `-ParmVarDecl 0x55c8109a04a8 <col:7> col:7 'SizedHashAllocator<72> &&'
|-CXXMethodDecl 0x55c8109a0548 <col:7> col:7 implicit operator= 'SizedHashAllocator<72> &(SizedHashAllocator<72> &&)' inline default_delete noexcept-unevaluated 0x55c8109a0548
| `-ParmVarDecl 0x55c8109a0658 <col:7> col:7 'SizedHashAllocator<72> &&'
`-CXXDestructorDecl 0x55c8109a06e0 <col:7> col:7 implicit used ~SizedHashAllocator 'void () noexcept' inline default
  `-CompoundStmt 0x55c810b40ff0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.SizedHashAllocator.24 = type { %class.HashAllocator }
  NonVirtualBaseLLVMType:%class.SizedHashAllocator.24 = type { %class.HashAllocator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8109a1ee8 prev 0x55c8109a0c30 <../elements/tcpudp/iprewriter.hh:219:1, line:274:1> line:219:7 class IPRewriter definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'TCPRewriter'
|-CXXRecordDecl 0x55c8109a2020 <col:1, col:7> col:7 implicit referenced class IPRewriter
|-AccessSpecDecl 0x55c8109a20b0 <col:41, col:47> col:41 public
|-TypedefDecl 0x55c8109a2170 <line:221:5, col:34> col:34 referenced UDPFlow 'UDPRewriter::UDPFlow':'UDPRewriter::UDPFlow'
| `-ElaboratedType 0x55c8109a2100 'UDPRewriter::UDPFlow' sugar
|   `-RecordType 0x55c8109950f0 'UDPRewriter::UDPFlow'
|     `-CXXRecord 0x55c810995060 'UDPFlow'
|-CXXConstructorDecl 0x55c8109a2230 <line:223:5, col:16> col:5 IPRewriter 'void ()'
|-CXXDestructorDecl 0x55c8109a2320 <line:224:5, col:17> col:5 ~IPRewriter 'void ()' noexcept-unevaluated 0x55c8109a2320
| `-Overrides: [ 0x55c81098ee90 TCPRewriter::~TCPRewriter 'void () noexcept' ]
|-CXXMethodDecl 0x55c8109a2450 <line:226:5, col:59> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55c81098efc0 TCPRewriter::class_name 'const char *() const' ]
| `-CompoundStmt 0x55c8109a4268 <col:36, col:59>
|   `-ReturnStmt 0x55c8109a4258 <col:38, col:45>
|     `-ImplicitCastExpr 0x55c8109a4240 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55c8109a4218 <col:45> 'const char [11]' lvalue "IPRewriter"
|-CXXMethodDecl 0x55c8109a25a0 <line:227:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x55c81098f110 TCPRewriter::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55c8109a2508 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x55c8109a2880 <line:229:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55c81098f3f0 TCPRewriter::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55c8109a2730 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55c8109a27a8 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55c8109a2ae0 <line:231:5, col:75> col:22 get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)'
| |-Overrides: [ 0x55c8109677e8 IPRewriterBase::get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)' ]
| |-ParmVarDecl 0x55c8109a2948 <col:32, col:36> col:36 ip_p 'int'
| |-ParmVarDecl 0x55c8109a29c0 <col:42, col:58> col:58 flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55c8109a2a40 <col:66, col:70> col:70 input 'int'
|-CXXMethodDecl 0x55c8109a2dd0 <line:232:5, line:239:5> line:232:37 get_map 'HashContainer<IPRewriterEntry> *(int)'
| |-Overrides: [ 0x55c810967330 IPRewriterBase::get_map 'HashContainer<IPRewriterEntry> *(int)' ]
| |-ParmVarDecl 0x55c8109a2cb8 <col:45, col:49> col:49 used mapid 'int'
| `-CompoundStmt 0x55c8109a46e0 <col:56, line:239:5>
|   `-IfStmt 0x55c8109a46b8 <line:233:2, line:238:13> has_else
|     |-BinaryOperator 0x55c8109a43c8 <line:233:6, col:32> 'bool' '=='
|     | |-ImplicitCastExpr 0x55c8109a4398 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55c8109a4280 <col:6> 'int' lvalue ParmVar 0x55c8109a2cb8 'mapid' 'int'
|     | `-ImplicitCastExpr 0x55c8109a43b0 <col:15, col:32> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55c8109a42d8 <col:15, col:32> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55c810951b40 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|     |-ReturnStmt 0x55c8109a4468 <line:234:6, col:14>
|     | `-UnaryOperator 0x55c8109a4450 <col:13, col:14> 'IPRewriterBase::Map *' prefix '&' cannot overflow
|     |   `-MemberExpr 0x55c8109a4420 <col:14> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_map 0x55c81096f8d8
|     |     `-ImplicitCastExpr 0x55c8109a43f8 <col:14> 'IPRewriterBase *' <UncheckedDerivedToBase (TCPRewriter -> IPRewriterBase)>
|     |       `-CXXThisExpr 0x55c8109a43e8 <col:14> 'IPRewriter *' implicit this
|     `-IfStmt 0x55c8109a4690 <line:235:7, line:238:13> has_else
|       |-BinaryOperator 0x55c8109a45c0 <line:235:11, col:37> 'bool' '=='
|       | |-ImplicitCastExpr 0x55c8109a4590 <col:11> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x55c8109a4478 <col:11> 'int' lvalue ParmVar 0x55c8109a2cb8 'mapid' 'int'
|       | `-ImplicitCastExpr 0x55c8109a45a8 <col:20, col:37> 'int' <IntegralCast>
|       |   `-DeclRefExpr 0x55c8109a44d0 <col:20, col:37> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55c810951bd0 'mapid_iprewriter_udp' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|       |-ReturnStmt 0x55c8109a4638 <line:236:6, col:14>
|       | `-UnaryOperator 0x55c8109a4620 <col:13, col:14> 'IPRewriterBase::Map *' prefix '&' cannot overflow
|       |   `-MemberExpr 0x55c8109a45f0 <col:14> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_udp_map 0x55c8109a36c8
|       |     `-CXXThisExpr 0x55c8109a45e0 <col:14> 'IPRewriter *' implicit this
|       `-ReturnStmt 0x55c8109a4680 <line:238:6, col:13>
|         `-ImplicitCastExpr 0x55c8109a4668 <col:13> 'HashContainer<IPRewriterEntry> *' <NullToPointer>
|           `-IntegerLiteral 0x55c8109a4648 <col:13> 'int' 0
|-CXXMethodDecl 0x55c8109a30a8 <line:240:5, line:241:53> line:240:22 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)'
| |-Overrides: [ 0x55c81098f6d0 TCPRewriter::add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' ]
| |-ParmVarDecl 0x55c8109a2e90 <col:31, col:35> col:35 ip_p 'int'
| |-ParmVarDecl 0x55c8109a2f08 <col:41, col:57> col:57 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55c8109a2f80 <line:241:10, col:26> col:26 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55c8109a3000 <col:44, col:48> col:48 input 'int'
|-CXXMethodDecl 0x55c8109a3208 <line:242:5, col:43> col:10 destroy_flow 'void (IPRewriterFlow *)'
| |-Overrides: [ 0x55c81098f830 TCPRewriter::destroy_flow 'void (IPRewriterFlow *)' ]
| `-ParmVarDecl 0x55c8109a3178 <col:23, col:39> col:39 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x55c8109a3350 <line:243:5, line:248:5> line:243:21 best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)'
| |-Overrides: [ 0x55c81098f978 TCPRewriter::best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' ]
| |-ParmVarDecl 0x55c8109a32c0 <col:40, col:62> col:62 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x55c8109a4bc0 <col:68, line:248:5>
|   `-IfStmt 0x55c8109a4b98 <line:244:2, line:247:100> has_else
|     |-BinaryOperator 0x55c8109a47b8 <line:244:6, col:22> 'bool' '=='
|     | |-ImplicitCastExpr 0x55c8109a47a0 <col:6, col:17> 'int' <IntegralCast>
|     | | `-CXXMemberCallExpr 0x55c8109a4760 <col:6, col:17> 'uint8_t':'unsigned char'
|     | |   `-MemberExpr 0x55c8109a4730 <col:6, col:12> '<bound member function type>' ->ip_p 0x55c81093a818
|     | |     `-ImplicitCastExpr 0x55c8109a4718 <col:6> 'const IPRewriterFlow *' <LValueToRValue>
|     | |       `-DeclRefExpr 0x55c8109a46f8 <col:6> 'const IPRewriterFlow *' lvalue ParmVar 0x55c8109a32c0 'flow' 'const IPRewriterFlow *'
|     | `-IntegerLiteral 0x55c8109a4780 <col:22> 'int' 6
|     |-ReturnStmt 0x55c8109a48e8 <line:245:6, col:49>
|     | `-CXXMemberCallExpr 0x55c8109a4888 <col:13, col:49> 'click_jiffies_t':'unsigned int'
|     |   |-MemberExpr 0x55c8109a4820 <col:13, col:26> '<bound member function type>' ->best_effort_expiry 0x55c81098f978
|     |   | `-ImplicitCastExpr 0x55c8109a48b0 <col:26> 'TCPRewriter *' <UncheckedDerivedToBase (TCPRewriter)>
|     |   |   `-CXXThisExpr 0x55c8109a4810 <col:26> 'IPRewriter *' implicit this
|     |   `-ImplicitCastExpr 0x55c8109a48d0 <col:45> 'const IPRewriterFlow *' <LValueToRValue>
|     |     `-DeclRefExpr 0x55c8109a4868 <col:45> 'const IPRewriterFlow *' lvalue ParmVar 0x55c8109a32c0 'flow' 'const IPRewriterFlow *'
|     `-ReturnStmt 0x55c8109a4b88 <line:247:6, col:100>
|       `-BinaryOperator 0x55c8109a4b68 <col:13, col:100> 'unsigned int' '-'
|         |-BinaryOperator 0x55c8109a4a98 <col:13, col:81> 'unsigned int' '+'
|         | |-CXXMemberCallExpr 0x55c8109a4960 <col:13, col:26> 'click_jiffies_t':'unsigned int'
|         | | `-MemberExpr 0x55c8109a4930 <col:13, col:19> '<bound member function type>' ->expiry 0x55c810939df0
|         | |   `-ImplicitCastExpr 0x55c8109a4918 <col:13> 'const IPRewriterFlow *' <LValueToRValue>
|         | |     `-DeclRefExpr 0x55c8109a48f8 <col:13> 'const IPRewriterFlow *' lvalue ParmVar 0x55c8109a32c0 'flow' 'const IPRewriterFlow *'
|         | `-ImplicitCastExpr 0x55c8109a4a80 <col:30, col:81> 'unsigned int' <IntegralCast>
|         |   `-CXXMemberCallExpr 0x55c8109a4a40 <col:30, col:81> 'int'
|         |     |-MemberExpr 0x55c8109a4990 <col:30> '<bound member function type>' ->udp_flow_timeout 0x55c8109a3a90
|         |     | `-ImplicitCastExpr 0x55c8109a4a68 <col:30> 'const IPRewriter *' <NoOp>
|         |     |   `-CXXThisExpr 0x55c8109a4980 <col:30> 'IPRewriter *' implicit this
|         |     `-CXXStaticCastExpr 0x55c8109a4a08 <col:47, col:80> 'const IPRewriter::UDPFlow *' static_cast<const IPRewriter::UDPFlow *> <BaseToDerived (IPRewriterFlow)>
|         |       `-ImplicitCastExpr 0x55c8109a49f0 <col:76> 'const IPRewriterFlow *' <LValueToRValue> part_of_explicit_cast
|         |         `-DeclRefExpr 0x55c8109a49c0 <col:76> 'const IPRewriterFlow *' lvalue ParmVar 0x55c8109a32c0 'flow' 'const IPRewriterFlow *'
|         `-ImplicitCastExpr 0x55c8109a4b50 <col:85, col:100> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-ArraySubscriptExpr 0x55c8109a4b30 <col:85, col:100> 'uint32_t':'unsigned int' lvalue
|             |-ImplicitCastExpr 0x55c8109a4b18 <col:85> 'uint32_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c8109a4ac8 <col:85> 'uint32_t [2]' lvalue ->_udp_timeouts 0x55c8109a38e0
|             |   `-CXXThisExpr 0x55c8109a4ab8 <col:85> 'IPRewriter *' implicit this
|             `-IntegerLiteral 0x55c8109a4af8 <col:99> 'int' 1
|-CXXMethodDecl 0x55c8109a3520 <line:250:5, col:28> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55c81098fb48 TCPRewriter::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55c8109a3410 <col:15> col:18 'int'
| `-ParmVarDecl 0x55c8109a3488 <col:20, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x55c8109a35f0 <line:252:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55c81098fc18 TCPRewriter::add_handlers 'void ()' ]
|-AccessSpecDecl 0x55c8109a3690 <line:254:3, col:10> col:3 private
|-FieldDecl 0x55c8109a36c8 <line:256:5, col:9> col:9 referenced _udp_map 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FieldDecl 0x55c8109a3830 <line:257:5, col:41> col:41 referenced _udp_allocator 'SizedHashAllocator<sizeof(IPRewriter::UDPFlow)>':'SizedHashAllocator<72>'
|-FieldDecl 0x55c8109a38e0 <line:258:5, col:29> col:14 referenced _udp_timeouts 'uint32_t [2]'
|-FieldDecl 0x55c8109a3940 <line:259:5, col:14> col:14 referenced _udp_streaming_timeout 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c8109a3a90 <line:261:5, line:266:5> line:261:9 used udp_flow_timeout 'int (const IPRewriter::UDPFlow *) const'
| |-ParmVarDecl 0x55c8109a39c8 <col:26, col:41> col:41 used mf 'const IPRewriter::UDPFlow *'
| `-CompoundStmt 0x55c8109a4de0 <col:51, line:266:5>
|   `-IfStmt 0x55c8109a4db8 <line:262:2, line:265:28> has_else
|     |-CXXMemberCallExpr 0x55c8109a4c40 <line:262:6, col:20> 'bool'
|     | `-MemberExpr 0x55c8109a4c10 <col:6, col:10> '<bound member function type>' ->streaming 0x55c8109957b8
|     |   `-ImplicitCastExpr 0x55c8109a4bf8 <col:6> 'const IPRewriter::UDPFlow *' <LValueToRValue>
|     |     `-DeclRefExpr 0x55c8109a4bd8 <col:6> 'const IPRewriter::UDPFlow *' lvalue ParmVar 0x55c8109a39c8 'mf' 'const IPRewriter::UDPFlow *'
|     |-ReturnStmt 0x55c8109a4cd0 <line:263:6, col:13>
|     | `-ImplicitCastExpr 0x55c8109a4cb8 <col:13> 'int' <IntegralCast>
|     |   `-ImplicitCastExpr 0x55c8109a4ca0 <col:13> 'uint32_t':'unsigned int' <LValueToRValue>
|     |     `-MemberExpr 0x55c8109a4c70 <col:13> 'const uint32_t':'const unsigned int' lvalue ->_udp_streaming_timeout 0x55c8109a3940
|     |       `-CXXThisExpr 0x55c8109a4c60 <col:13> 'const IPRewriter *' implicit this
|     `-ReturnStmt 0x55c8109a4da8 <line:265:6, col:28>
|       `-ImplicitCastExpr 0x55c8109a4d90 <col:13, col:28> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x55c8109a4d78 <col:13, col:28> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-ArraySubscriptExpr 0x55c8109a4d58 <col:13, col:28> 'const uint32_t':'const unsigned int' lvalue
|             |-ImplicitCastExpr 0x55c8109a4d40 <col:13> 'const uint32_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c8109a4cf0 <col:13> 'uint32_t const[2]' lvalue ->_udp_timeouts 0x55c8109a38e0
|             |   `-CXXThisExpr 0x55c8109a4ce0 <col:13> 'const IPRewriter *' implicit this
|             `-IntegerLiteral 0x55c8109a4d20 <col:27> 'int' 0
|-CXXMethodDecl 0x55c8109a3c38 <line:268:5, line:271:5> line:268:24 used reply_udp_map 'IPRewriterBase::Map &(IPRewriterInput *)' static inline
| |-ParmVarDecl 0x55c8109a3b48 <col:38, col:55> col:55 used rwinput 'IPRewriterInput *'
| `-CompoundStmt 0x55c8109a4fd0 <col:64, line:271:5>
|   |-DeclStmt 0x55c8109a4f40 <line:269:2, col:67>
|   | `-VarDecl 0x55c8109a4e08 <col:2, col:66> col:14 used x 'IPRewriter *' cinit
|   |   `-CXXStaticCastExpr 0x55c8109a4f00 <col:18, col:66> 'IPRewriter *' static_cast<class IPRewriter *> <BaseToDerived (TCPRewriter -> IPRewriterBase)>
|   |     `-ImplicitCastExpr 0x55c8109a4ee8 <col:44, col:53> 'IPRewriterBase *' <LValueToRValue> part_of_explicit_cast
|   |       `-MemberExpr 0x55c8109a4ea8 <col:44, col:53> 'IPRewriterBase *' lvalue ->reply_element 0x55c810951500
|   |         `-ImplicitCastExpr 0x55c8109a4e90 <col:44> 'IPRewriterInput *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55c8109a4e70 <col:44> 'IPRewriterInput *' lvalue ParmVar 0x55c8109a3b48 'rwinput' 'IPRewriterInput *'
|   `-ReturnStmt 0x55c8109a4fc0 <line:270:2, col:12>
|     `-MemberExpr 0x55c8109a4f90 <col:9, col:12> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_udp_map 0x55c8109a36c8
|       `-ImplicitCastExpr 0x55c8109a4f78 <col:9> 'IPRewriter *' <LValueToRValue>
|         `-DeclRefExpr 0x55c8109a4f58 <col:9> 'IPRewriter *' lvalue Var 0x55c8109a4e08 'x' 'IPRewriter *'
|-CXXMethodDecl 0x55c8109a3e08 <line:272:5, col:67> col:19 udp_mappings_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c8109a3cf0 <col:40, col:49> col:49 e 'Element *'
| `-ParmVarDecl 0x55c8109a3d70 <col:52, col:58> col:58 user_data 'void *'
|-CXXConstructorDecl 0x55c8109a3ee8 <line:219:7> col:7 implicit IPRewriter 'void (const IPRewriter &)' inline default_delete noexcept-unevaluated 0x55c8109a3ee8
| `-ParmVarDecl 0x55c8109a3ff8 <col:7> col:7 'const IPRewriter &'
`-CXXMethodDecl 0x55c8109a4098 <col:7> col:7 implicit operator= 'IPRewriter &(const IPRewriter &)' inline default_delete noexcept-unevaluated 0x55c8109a4098
  `-ParmVarDecl 0x55c8109a41a8 <col:7> col:7 'const IPRewriter &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriter = type <{ %class.TCPRewriter.base, [4 x i8], %class.HashContainer, %class.SizedHashAllocator.24, [2 x i32], i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.IPRewriter.base = type <{ %class.TCPRewriter.base, [4 x i8], %class.HashContainer, %class.SizedHashAllocator.24, [2 x i32], i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810a8b338 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55c810a8b468 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55c810a8b4c8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55c810a8b528 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55c810ae6558 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55c810ae6630 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55c810ae6630
|-CXXConstructorDecl 0x55c810ae68e8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55c810ae68e8
| `-ParmVarDecl 0x55c810ae69f8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55c810ae6a98 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55c810ae6a98
  `-ParmVarDecl 0x55c810ae6ba8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810a8b190 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55c810a8b2a8 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55c810a8b338 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55c810a8b468 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55c810a8b4c8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55c810a8b528 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55c810ae6558 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55c810ae6630 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55c810ae6630
| |-CXXConstructorDecl 0x55c810ae68e8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55c810ae68e8
| | `-ParmVarDecl 0x55c810ae69f8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55c810ae6a98 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55c810ae6a98
|   `-ParmVarDecl 0x55c810ae6ba8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55c810a8b5e8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55c810a8b648 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55c810a8b5e8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55c810a8b468 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55c810a8b6a0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55c810a8b5e8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55c810a8b4c8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55c810a8b6f8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55c810a8b5e8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55c810a8b528 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55c810a8b750 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55c810ae6468 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c810ae6dc8 <col:11>
|-CXXConstructorDecl 0x55c810ae6738 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55c810ae6738
| `-ParmVarDecl 0x55c810ae6848 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55c810ae6c48 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55c810ae6c48
  `-ParmVarDecl 0x55c810ae6d58 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810a88df0 prev 0x55c8108886e0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55c810a88f28 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55c810a88fb8 <col:33, col:39> col:33 public
|-EnumDecl 0x55c810a88fe0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55c810a89120 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55c810a89100 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55c810a890e0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55c810a890a0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55c810a890c0 <col:26> 'int' 16
| `-EnumConstantDecl 0x55c810a891f0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55c810a891d0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55c810a891b0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55c810a89170 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55c810a89190 <col:47> 'int' 31
|-EnumDecl 0x55c810a89240 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55c810a89380 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55c810a894a0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810a89360 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55c810a89340 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55c810a89300 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55c810a89320 <col:29> 'int' 15
| `-EnumConstantDecl 0x55c810a89450 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55c810a894b8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810a89430 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55c810a89410 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55c810a893d0 <col:51> 'int' 1
|         `-IntegerLiteral 0x55c810a893f0 <col:54> 'int' 10
|-CXXConstructorDecl 0x55c810a89688 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55c810a894e0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55c810a89560 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55c810a897e0 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55c810a89750 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55c810a898d8 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55c810a898d8
|-CXXMethodDecl 0x55c810a89a68 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55c810a8cb68 <col:42, line:100:5>
|   `-ReturnStmt 0x55c810a8cb58 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55c810a8cb40 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55c810a8cb10 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55c810a8b890
|         `-CXXThisExpr 0x55c810a8cb00 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55c810a89b30 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55c810a8cbe8 <col:36, line:105:5>
|   `-ReturnStmt 0x55c810a8cbd8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55c810a8cbc0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55c810a8cb90 <col:16> 'void *const' lvalue ->_thunk 0x55c810a8b8f8
|         `-CXXThisExpr 0x55c810a8cb80 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55c810a89bf0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55c810a8cc68 <col:37, line:110:5>
|   `-ReturnStmt 0x55c810a8cc58 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55c810a8cc40 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55c810a8cc10 <col:16> 'Element *const' lvalue ->_owner 0x55c810a8b9b8
|         `-CXXThisExpr 0x55c810a8cc00 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55c810a89cb0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55c810a89d78 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55c810a89e38 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55c810a89ef8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55c810a8cd50 <col:35, line:137:5>
|   `-ReturnStmt 0x55c810a8cd40 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55c810a8cd08 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55c810a8ccd8 <col:16, col:24> '<bound member function type>' ->router 0x55c810899f30
|         `-ImplicitCastExpr 0x55c810a8cd28 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55c810a8ccc0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55c810a8cc90 <col:16> 'Element *const' lvalue ->_owner 0x55c810a8b9b8
|               `-CXXThisExpr 0x55c810a8cc80 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55c810a89fb8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55c810a8a178 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55c810a8a068 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55c810a8a0e0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55c810a8a388 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55c810a8a238 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55c810a8a2b0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55c810a8a458 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55c810a8ce60 <col:35, line:181:5>
|   `-ReturnStmt 0x55c810a8ce50 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55c810a8ce38 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55c810a8ce20 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55c810a8cdf0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55c810a8b4c8
|           `-MemberExpr 0x55c810a8cda8 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55c810a8b5e8
|             `-MemberExpr 0x55c810a8cd78 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55c810a8b818
|               `-CXXThisExpr 0x55c810a8cd68 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55c810a8a518 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55c810a8cf78 <col:30, line:192:5>
|   `-BinaryOperator 0x55c810a8cf58 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55c810a8cf00 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55c810a8b4c8
|     | `-MemberExpr 0x55c810a8ceb8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55c810a8b5e8
|     |   `-MemberExpr 0x55c810a8ce88 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55c810a8b818
|     |     `-CXXThisExpr 0x55c810a8ce78 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55c810a8cf40 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55c810a8cf30 <col:32> 'bool' false
|-CXXMethodDecl 0x55c810a8a5d8 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55c810a8d2c8 <col:30, line:206:5>
|   |-BinaryOperator 0x55c810a8d070 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55c810a8d018 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55c810a8b4c8
|   | | `-MemberExpr 0x55c810a8cfd0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55c810a8b5e8
|   | |   `-MemberExpr 0x55c810a8cfa0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55c810a8b818
|   | |     `-CXXThisExpr 0x55c810a8cf90 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55c810a8d058 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55c810a8d048 <col:32> 'bool' true
|   |-CallExpr 0x55c810a8d110 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55c810a8d0f8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55c810a8d0d8 <col:9> 'void ()' lvalue Function 0x55c8104746d8 'click_fence' 'void ()'
|   `-IfStmt 0x55c810a8d2b0 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55c810a8d1f0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55c810a8d1c0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55c810a8d170 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55c810a8bc28
|     | |   `-MemberExpr 0x55c810a8d140 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55c810a8bca0
|     | |     `-CXXThisExpr 0x55c810a8d130 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55c810a8d1d8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55c810a8d1a0 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55c810a8d270 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55c810a8d220 <col:13> '<bound member function type>' ->complete_schedule 0x55c810a8c6a0
|       | `-CXXThisExpr 0x55c810a8d210 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55c810a8d298 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55c810a8d250 <col:31> 'int' 0
|-CXXMethodDecl 0x55c810a8a698 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55c810a8d3f0 <col:35, line:240:5>
|   `-BinaryOperator 0x55c810a8d3d0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55c810a8d378 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55c810a8b4c8
|     | `-MemberExpr 0x55c810a8d330 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55c810a8b5e8
|     |   `-MemberExpr 0x55c810a8d300 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55c810a8b818
|     |     `-CXXThisExpr 0x55c810a8d2f0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55c810a8d3b8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55c810a8d3a8 <col:32> 'bool' true
|-CXXMethodDecl 0x55c810a8a758 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55c810a8d608 <col:37, line:253:5>
|   |-BinaryOperator 0x55c810a8d4e8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55c810a8d490 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55c810a8b4c8
|   | | `-MemberExpr 0x55c810a8d448 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55c810a8b5e8
|   | |   `-MemberExpr 0x55c810a8d418 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55c810a8b818
|   | |     `-CXXThisExpr 0x55c810a8d408 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55c810a8d4d0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55c810a8d4c0 <col:32> 'bool' false
|   `-BinaryOperator 0x55c810a8d5e8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55c810a8d590 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55c810a8b528
|     | `-MemberExpr 0x55c810a8d548 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55c810a8b5e8
|     |   `-MemberExpr 0x55c810a8d518 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55c810a8b818
|     |     `-CXXThisExpr 0x55c810a8d508 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55c810a8d5d0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55c810a8d5c0 <col:41> 'bool' true
|-CXXMethodDecl 0x55c810a8a818 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55c810a8d788 <col:37, line:264:5>
|   |-BinaryOperator 0x55c810a8d708 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55c810a8d6b0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55c810a8b528
|   | | `-MemberExpr 0x55c810a8d668 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55c810a8b5e8
|   | |   `-MemberExpr 0x55c810a8d638 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55c810a8b818
|   | |     `-CXXThisExpr 0x55c810a8d628 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55c810a8d6f0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55c810a8d6e0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55c810a8d768 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55c810a8d738 <col:9> '<bound member function type>' ->reschedule 0x55c810a8a5d8
|       `-CXXThisExpr 0x55c810a8d728 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55c810a8a960 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55c810a8a8d0 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55c810a8aa30 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55c810a8ab78 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55c810a8aae8 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55c810a8acc8 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55c810a8ac38 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55c810a8ad90 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55c810a8ae50 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55c810a8aef0 <col:53> "" ""
|-CXXMethodDecl 0x55c810a8af88 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55c810a8b028 <col:47> "" ""
|-AccessSpecDecl 0x55c810a8b098 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55c810a8b0d8 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55c810a8b140 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55c810a8b190 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c810a8b2a8 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55c810a8b338 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55c810a8b468 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55c810a8b4c8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55c810a8b528 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55c810ae6558 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55c810ae6630 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55c810ae6630
| | |-CXXConstructorDecl 0x55c810ae68e8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55c810ae68e8
| | | `-ParmVarDecl 0x55c810ae69f8 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55c810ae6a98 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55c810ae6a98
| |   `-ParmVarDecl 0x55c810ae6ba8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55c810a8b5e8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55c810a8b648 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55c810a8b5e8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55c810a8b468 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55c810a8b6a0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55c810a8b5e8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55c810a8b4c8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55c810a8b6f8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55c810a8b5e8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55c810a8b528 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55c810a8b750 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55c810ae6468 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55c810ae6dc8 <col:11>
| |-CXXConstructorDecl 0x55c810ae6738 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55c810ae6738
| | `-ParmVarDecl 0x55c810ae6848 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55c810ae6c48 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55c810ae6c48
|   `-ParmVarDecl 0x55c810ae6d58 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55c810a8b818 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55c810a8b890 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55c810a8b8f8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55c810a8b958 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55c810a8b9b8 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55c810a8ba08 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c810a8bb28 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55c810a8bbc8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55c810a8bc28 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55c810adf9c8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55c810adf9c8
| | `-ParmVarDecl 0x55c810adfad8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55c810adfb78 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55c810adfb78
| | `-ParmVarDecl 0x55c810adfc88 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55c810adfcf8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55c810adfcf8
| |-CXXMethodDecl 0x55c810ae0578 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55c810ae0578
| | `-ParmVarDecl 0x55c810ae0688 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55c810ae06f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55c810ae06f8
| | `-ParmVarDecl 0x55c810ae0808 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55c810ae6e28 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55c810ae6f00 <col:11>
|-FieldDecl 0x55c810a8bca0 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55c810a8bde8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55c810a8bd28 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55c810a8bf98 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55c810a8bea8 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55c810a8c060 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55c810a8c120 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55c810a8c1e0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55c810a8d898 <col:41, line:355:5>
|   `-ReturnStmt 0x55c810a8d888 <line:354:9, col:38>
|     `-BinaryOperator 0x55c810a8d868 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55c810a8d838 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55c810a8d7e8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55c810a8bc28
|       |   `-MemberExpr 0x55c810a8d7b8 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55c810a8bca0
|       |     `-CXXThisExpr 0x55c810a8d7a8 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55c810a8d850 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55c810a8d818 <col:38> 'int' 0
|-CXXMethodDecl 0x55c810a8c2a0 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55c810a8c3e0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55c810a8c350 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55c810a8c558 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55c810a8c498 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55c810a8c6a0 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55c810a8c610 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55c810a8c768 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55c810a8c930 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55c810a8c818 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55c810a8c898 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55c810a8ca30 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55c810a8cac0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8109e7a78 prev 0x55c81084a498 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c8109e7b70 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55c8109e7c00 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55c8109e7d38 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55c8109e7c38 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55c8109e9160 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55c8109e9140 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55c8109e8cd8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55c8109e91f0 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55c8109e91b0 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55c8109e7c38 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55c8109e8d40 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55c8109e9270 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55c8109e9230 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55c8109e8da0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55c8109e92b0 <col:54> 'bool' false
| `-CompoundStmt 0x55c8109e93b8 <col:61, line:38:5>
|   `-BinaryOperator 0x55c8109e9398 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55c8109e9330 <col:9> 'const Element *' lvalue ->_context 0x55c8109e8c78
|     | `-CXXThisExpr 0x55c8109e9320 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55c8109e9380 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55c8109e9360 <col:20> 'int' 0
|-CXXConstructorDecl 0x55c8109e7f48 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55c8109e7df8 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55c8109e7e70 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55c8109e9198 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55c8109e9178 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55c8109e8c78 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55c8109e9410 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55c8109e93d0 <col:20> 'const Element *' lvalue ParmVar 0x55c8109e7df8 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55c8109e8cd8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55c8109e9490 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55c8109e9450 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55c8109e7e70 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55c8109e8d40 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55c8109e9510 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55c8109e94d0 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55c8109e8da0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55c8109e9550 <col:73> 'bool' false
| `-CompoundStmt 0x55c8109e95c8 <col:80, line:46:5>
|-CXXMethodDecl 0x55c8109e8078 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55c8109e9640 <col:36, line:51:5>
|   `-ReturnStmt 0x55c8109e9630 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55c8109e9618 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55c8109e95e8 <col:16> 'const Element *const' lvalue ->_context 0x55c8109e8c78
|         `-CXXThisExpr 0x55c8109e95d8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55c8109e8168 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55c8109e96c0 <col:32, line:57:5>
|   `-ReturnStmt 0x55c8109e96b0 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55c8109e9698 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55c8109e9668 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55c8109e8cd8
|         `-CXXThisExpr 0x55c8109e9658 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55c8109e8228 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55c8109e83b0 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55c8109e82e0 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55c8109e8500 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55c8109e8470 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55c8109e8650 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55c8109e85c0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55c8109e8858 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55c8109e8708 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55c8109e8780 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55c8109e8b88 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55c8109e8918 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55c8109e8998 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55c8109e8a60 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55c8109e8c40 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55c8109e8c78 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55c8109e8cd8 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55c8109e8d40 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55c8109e8da0 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55c8109e8df0 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55c8109e8df0
| `-ParmVarDecl 0x55c8109e8f08 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x55c8109e8fa8 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55c8109e8fa8
| `-ParmVarDecl 0x55c8109e90b8 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x55c810b44b58 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810a11918 prev 0x55c8109fe608 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c810a11a10 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x55c810a11b00 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x55c810a40528 <col:16, line:828:9>
|-CXXDestructorDecl 0x55c810a11bf0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x55c810a40538 <col:25, line:830:9>
|-CXXMethodDecl 0x55c810a11cf0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x55c810a11da0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x55c810a11e48 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55c810a11e48
| `-ParmVarDecl 0x55c810a11f58 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x55c810a12718 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55c810a12718
  `-ParmVarDecl 0x55c810a12828 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8109fe418 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x55c8109fe578 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x55c8109fe608 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x55c8109fe6c0 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x55c8109fe7c8 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x55c8109fe6f8 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55c810a2de08 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55c810a2dde8 <col:31> 'int' 0
|-CXXConstructorDecl 0x55c8109feae8 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x55c8109fe960 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x55c8109fe9d8 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55c810a2de40 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55c810a2de20 <col:59> 'int' 0
|-CXXConstructorDecl 0x55c8109fecc0 <line:265:5, col:56> col:5 used Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55c8109febb0 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x55c8109fec28 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55c810a2de78 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55c810a2de58 <col:55> 'int' 0
|-CXXConstructorDecl 0x55c8109ff078 <line:271:5, line:272:32> line:271:5 Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55c8109fee60 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x55c8109feed8 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x55c8109fef50 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55c810a2deb0 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55c810a2de90 <col:31> 'int' 0
|-CXXConstructorDecl 0x55c8109ff238 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x55c8109ff178 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x55c8109ff330 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x55c8109ff518 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x55c8109ff420 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x55c8109ff608 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x55c810a2e260 <col:24, line:291:5>
|   `-ReturnStmt 0x55c810a2e250 <line:290:9, col:79>
|     `-BinaryOperator 0x55c810a2e230 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x55c810a2e108 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x55c810a2e060 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x55c810a2e040 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x55c810a2df38 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x55c810a2df20 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x55c810a2df08 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x55c810a2ded8 <col:18> 'Vector<String> *const' lvalue ->_conf 0x55c810a13740
|       | |   |       `-CXXThisExpr 0x55c810a2dec8 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x55c810a2e028 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x55c810a2e010 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x55c810a2dfd8 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x55c810a2dfa8 <col:28, col:35> '<bound member function type>' ->size 0x55c8109d9170
|       | |           `-ImplicitCastExpr 0x55c810a2dff8 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x55c810a2df90 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x55c810a2df60 <col:28> 'Vector<String> *const' lvalue ->_conf 0x55c810a13740
|       | |                 `-CXXThisExpr 0x55c810a2df50 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x55c810a2e0f0 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x55c810a2e0d8 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x55c810a2e0c0 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x55c810a2e090 <col:47> 'Args::Slot *const' lvalue ->_slots 0x55c810a2c990
|       |         `-CXXThisExpr 0x55c810a2e080 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x55c810a2e210 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x55c810a2e1f8 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55c810a2e1e0 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55c810a2e1a0 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55c810a2e188 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55c810a2e138 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55c810a2ca40
|         |     |   `-CXXThisExpr 0x55c810a2e128 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55c810a2e168 <col:73> 'int' 0
|         `-IntegerLiteral 0x55c810a2e1c0 <col:79> 'int' 0
|-CXXMethodDecl 0x55c8109ff6c8 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x55c810a2e438 <col:32, line:296:5>
|   `-ReturnStmt 0x55c810a2e428 <line:295:9, col:49>
|     `-BinaryOperator 0x55c810a2e408 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x55c810a2e2e8 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x55c810a2e2d0 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55c810a2e2b8 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x55c810a2e288 <col:17> 'Args::Slot *const' lvalue ->_slots 0x55c810a2c990
|       |       `-CXXThisExpr 0x55c810a2e278 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x55c810a2e3e8 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x55c810a2e3d0 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55c810a2e3b8 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55c810a2e378 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55c810a2e360 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55c810a2e310 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55c810a2ca40
|         |     |   `-CXXThisExpr 0x55c810a2e300 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55c810a2e340 <col:43> 'int' 0
|         `-IntegerLiteral 0x55c810a2e398 <col:49> 'int' 0
|-CXXMethodDecl 0x55c8109ff7b8 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x55c810a2e648 <col:19, line:306:5>
|   |-IfStmt 0x55c810a2e568 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x55c810a2e4a8 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x55c810a2e490 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x55c810a2e460 <col:13> 'Vector<String> *' lvalue ->_conf 0x55c810a13740
|   | |     `-CXXThisExpr 0x55c810a2e450 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x55c810a2e548 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x55c810a2e518 <col:13, col:20> '<bound member function type>' ->clear 0x55c8109dbb38
|   |     `-ImplicitCastExpr 0x55c810a2e500 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x55c810a2e4d0 <col:13> 'Vector<String> *' lvalue ->_conf 0x55c810a13740
|   |         `-CXXThisExpr 0x55c810a2e4c0 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x55c810a2e5f0 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x55c810a2e5c0 <col:9, col:16> '<bound member function type>' .clear 0x55c810a2c518
|   |   `-MemberExpr 0x55c810a2e590 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x55c810a2c930
|   |     `-CXXThisExpr 0x55c810a2e580 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x55c810a2e638 <line:305:9, col:17>
|     `-UnaryOperator 0x55c810a2e620 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c810a2e610 <col:17> 'Args *' this
|-CXXMethodDecl 0x55c8109ffa38 <line:313:5, col:36> col:11 used bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x55c8109ff940 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x55c8109ffbb8 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x55c8109ffaf0 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x55c8109fff38 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x55c8109ffc60 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x55c8109ffe98 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x55c8109ffd08 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x55c8109ffd80 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x55c810a2e990 <col:67, line:327:5>
|     |-WhileStmt 0x55c810a2e940 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x55c810a2e758 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55c810a2e6b0 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55c81094b7e0 0x55c8109325c8 0x55c810929fe8 0x55c8108f6de8 0x55c8108bf488 0x55c8108429c8 0x55c810692b08 0x55c8106927e0 0x55c810680340 0x55c81067fff0 0x55c81067f6e0 0x55c8105e8e20 0x55c8105d8830
|     | | |-DeclRefExpr 0x55c810a2e670 <col:16> 'Iter' lvalue ParmVar 0x55c8109ffd08 'begin' 'Iter'
|     | | `-DeclRefExpr 0x55c810a2e690 <col:25> 'Iter' lvalue ParmVar 0x55c8109ffd80 'end' 'Iter'
|     | `-CompoundStmt 0x55c810a2e920 <col:30, line:325:9>
|     |   |-CallExpr 0x55c810a2e8c0 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x55c810a2e7a0 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x55c810a2e890 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x55c810a2e820 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55c810847ac8 0x55c8108476e8 0x55c810847318 0x55c810846f38 0x55c810846b58 0x55c810846788
|     |   |   `-DeclRefExpr 0x55c810a2e800 <col:24> 'Iter' lvalue ParmVar 0x55c8109ffd08 'begin' 'Iter'
|     |   `-UnaryOperator 0x55c810a2e908 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x55c810a2e8e8 <col:15> 'Iter' lvalue ParmVar 0x55c8109ffd08 'begin' 'Iter'
|     `-ReturnStmt 0x55c810a2e980 <line:326:9, col:17>
|       `-UnaryOperator 0x55c810a2e968 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c810a2e958 <col:17> 'Args *' this
|-CXXMethodDecl 0x55c810a00040 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x55c8109fffb0 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x55c810a00188 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x55c810a000f8 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x55c810a00250 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x55c810a2ea70 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x55c810a2ea10 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x55c810a2e9c0 <col:9> '<bound member function type>' ->reset_from 0x55c810a2cdb8
|   | | `-CXXThisExpr 0x55c810a2e9b0 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x55c810a2e9f0 <col:20> 'int' 0
|   `-ReturnStmt 0x55c810a2ea60 <line:352:9, col:17>
|     `-UnaryOperator 0x55c810a2ea48 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c810a2ea38 <col:17> 'Args *' this
|-VarDecl 0x55c810a00308 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x55c810a00370 <col:38> 'int' 1
|-VarDecl 0x55c810a00400 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x55c810a00468 <col:39> 'int' 2
|-VarDecl 0x55c810a004f8 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x55c810a00560 <col:39> 'int' 4
|-VarDecl 0x55c810a005f0 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x55c810a00658 <col:39> 'int' 8
|-FunctionTemplateDecl 0x55c810a009d8 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x55c810a006d0 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55c810a00938 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55c810a00780 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a00828 <col:37, col:40> col:40 referenced x 'T &'
|   `-CompoundStmt 0x55c810a2ebc8 <col:43, line:371:5>
|     `-ReturnStmt 0x55c810a2ebb8 <line:370:9, col:34>
|       `-CallExpr 0x55c810a2eb80 <col:16, col:34> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a2eaa0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a2eb20 <col:21> 'const char *' lvalue ParmVar 0x55c810a00780 'keyword' 'const char *'
|         |-IntegerLiteral 0x55c810a2eb40 <col:30> 'int' 0
|         `-DeclRefExpr 0x55c810a2eb60 <col:33> 'T' lvalue ParmVar 0x55c810a00828 'x' 'T &'
|-FunctionTemplateDecl 0x55c810a00d08 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x55c810a00a40 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55c810a00c68 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55c810a00af0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a00b98 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55c810a2ed18 <col:45, line:375:5>
|     `-ReturnStmt 0x55c810a2ed08 <line:374:9, col:42>
|       `-CallExpr 0x55c810a2ecd0 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a2ebf0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a2ec70 <col:21> 'const char *' lvalue ParmVar 0x55c810a00af0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a2ec90 <col:30> 'const int' lvalue Var 0x55c810a00308 'mandatory' 'const int'
|         `-DeclRefExpr 0x55c810a2ecb0 <col:41> 'T' lvalue ParmVar 0x55c810a00b98 'x' 'T &'
|-FunctionTemplateDecl 0x55c810a01038 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x55c810a00d70 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55c810a00f98 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55c810a00e20 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a00ec8 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55c810a2ee68 <col:45, line:379:5>
|     `-ReturnStmt 0x55c810a2ee58 <line:378:9, col:43>
|       `-CallExpr 0x55c810a2ee20 <col:16, col:43> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a2ed40 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a2edc0 <col:21> 'const char *' lvalue ParmVar 0x55c810a00e20 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a2ede0 <col:30> 'const int' lvalue Var 0x55c810a00400 'positional' 'const int'
|         `-DeclRefExpr 0x55c810a2ee00 <col:42> 'T' lvalue ParmVar 0x55c810a00ec8 'x' 'T &'
|-FunctionTemplateDecl 0x55c810a01368 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x55c810a010a0 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55c810a012c8 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55c810a01150 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a011f8 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x55c810a2f068 <col:46, line:383:5>
|     `-ReturnStmt 0x55c810a2f058 <line:382:9, col:55>
|       `-CallExpr 0x55c810a2f020 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a2ee90 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a2ef10 <col:21> 'const char *' lvalue ParmVar 0x55c810a01150 'keyword' 'const char *'
|         |-BinaryOperator 0x55c810a2efe0 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55c810a2ef90 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55c810a2ef70 <col:30> 'const int' lvalue Var 0x55c810a00308 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55c810a2efc8 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55c810a2efa8 <col:42> 'const int' lvalue Var 0x55c810a00400 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55c810a2f000 <col:54> 'T' lvalue ParmVar 0x55c810a011f8 'x' 'T &'
|-FunctionTemplateDecl 0x55c810a01768 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x55c810a013d0 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55c810a016c8 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x55c810a01480 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a01500 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a015a8 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x55c810a2f1a8 <col:54, line:388:5>
|     |-CallExpr 0x55c810a2f130 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55c810a2f080 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55c810a2f0c0 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55c810a2f0d0 <col:30> 'const char *' lvalue ParmVar 0x55c810a01480 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55c810a2f0f0 <col:39> 'int' lvalue ParmVar 0x55c810a01500 'flags' 'int'
|     | `-DeclRefExpr 0x55c810a2f110 <col:46> 'T' lvalue ParmVar 0x55c810a015a8 'x' 'T &'
|     `-ReturnStmt 0x55c810a2f198 <line:387:9, col:17>
|       `-UnaryOperator 0x55c810a2f180 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c810a2f170 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55c810a01c18 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x55c810a017d8 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55c810a01858 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55c810a01b78 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55c810a01918 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a019b8 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x55c810a01a58 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x55c810a2f318 <col:74, line:403:5>
|     `-ReturnStmt 0x55c810a2f308 <line:402:9, col:56>
|       `-CallExpr 0x55c810a2f2c8 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a2f1d8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a2f248 <col:28> 'const char *' lvalue ParmVar 0x55c810a01918 'keyword' 'const char *'
|         |-IntegerLiteral 0x55c810a2f268 <col:37> 'int' 0
|         |-DeclRefExpr 0x55c810a2f288 <col:40> 'T' lvalue ParmVar 0x55c810a019b8 'x' 'T &'
|         `-DeclRefExpr 0x55c810a2f2a8 <col:43> 'const V' lvalue ParmVar 0x55c810a01a58 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55c810a020c8 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55c810a01c88 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55c810a01d08 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55c810a02028 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55c810a01dc8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a01e68 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x55c810a01f40 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x55c810a2f480 <col:76, line:407:5>
|     `-ReturnStmt 0x55c810a2f470 <line:406:9, col:65>
|       `-CallExpr 0x55c810a2f430 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a2f340 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a2f3b0 <col:28> 'const char *' lvalue ParmVar 0x55c810a01dc8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a2f3d0 <col:37> 'const int' lvalue Var 0x55c810a00400 'positional' 'const int'
|         |-DeclRefExpr 0x55c810a2f3f0 <col:49> 'T' lvalue ParmVar 0x55c810a01e68 'x' 'T &'
|         `-DeclRefExpr 0x55c810a2f410 <col:52> 'const V' lvalue ParmVar 0x55c810a01f40 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55c810a02618 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x55c810a02138 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55c810a021b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55c810a02578 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55c810a02278 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a022f8 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a02398 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x55c810a02438 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x55c810a2f5e8 <col:85, line:412:5>
|     |-CallExpr 0x55c810a2f568 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55c810a2f498 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55c810a2f4d8 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55c810a2f4e8 <col:37> 'const char *' lvalue ParmVar 0x55c810a02278 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55c810a2f508 <col:46> 'int' lvalue ParmVar 0x55c810a022f8 'flags' 'int'
|     | |-DeclRefExpr 0x55c810a2f528 <col:53> 'T' lvalue ParmVar 0x55c810a02398 'x' 'T &'
|     | `-DeclRefExpr 0x55c810a2f548 <col:56> 'const V' lvalue ParmVar 0x55c810a02438 'default_value' 'const V &'
|     `-ReturnStmt 0x55c810a2f5d8 <line:411:9, col:17>
|       `-UnaryOperator 0x55c810a2f5c0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c810a2f5b0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55c810a02aa8 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x55c810a02690 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a02708 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x55c810a02a08 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x55c810a027c8 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55c810a02840 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x55c810a028e8 <col:47, col:50> col:50 referenced x 'T &'
| | `-CompoundStmt 0x55c810a2f768 <col:53, line:425:5>
| |   `-ReturnStmt 0x55c810a2f758 <line:424:9, col:42>
| |     `-CallExpr 0x55c810a2f718 <col:16, col:42> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55c810a2f618 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55c810a2f698 <col:21> 'const char *' lvalue ParmVar 0x55c810a027c8 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55c810a2f6b8 <col:30> 'int' 0
| |       |-DeclRefExpr 0x55c810a2f6d8 <col:33> 'P' lvalue ParmVar 0x55c810a02840 'parser' 'P'
| |       `-DeclRefExpr 0x55c810a2f6f8 <col:41> 'T' lvalue ParmVar 0x55c810a028e8 'x' 'T &'
| `-CXXMethodDecl 0x55c810b45668 <line:423:5, line:425:5> line:423:11 used read 'Args &(const char *, SecondsArg, unsigned int &)'
|   |-TemplateArgument type 'SecondsArg'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x55c810b453d8 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x55c810b45478 <col:37, col:39> col:39 parser 'SecondsArg':'SecondsArg'
|   `-ParmVarDecl 0x55c810b45548 <col:47, col:50> col:50 x 'unsigned int &'
|-FunctionTemplateDecl 0x55c810a02ef8 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x55c810a02b18 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a02b98 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a02e58 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55c810a02c58 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a02cd0 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a02d78 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55c810a2f8e0 <col:55, line:429:5>
|     `-ReturnStmt 0x55c810a2f8d0 <line:428:9, col:50>
|       `-CallExpr 0x55c810a2f890 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a2f790 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a2f810 <col:21> 'const char *' lvalue ParmVar 0x55c810a02c58 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a2f830 <col:30> 'const int' lvalue Var 0x55c810a00308 'mandatory' 'const int'
|         |-DeclRefExpr 0x55c810a2f850 <col:41> 'P' lvalue ParmVar 0x55c810a02cd0 'parser' 'P'
|         `-DeclRefExpr 0x55c810a2f870 <col:49> 'T' lvalue ParmVar 0x55c810a02d78 'x' 'T &'
|-FunctionTemplateDecl 0x55c810a03348 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x55c810a02f68 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a02fe8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a032a8 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55c810a030a8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a03120 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a031c8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55c810a2fa58 <col:55, line:433:5>
|     `-ReturnStmt 0x55c810a2fa48 <line:432:9, col:51>
|       `-CallExpr 0x55c810a2fa08 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a2f908 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a2f988 <col:21> 'const char *' lvalue ParmVar 0x55c810a030a8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a2f9a8 <col:30> 'const int' lvalue Var 0x55c810a00400 'positional' 'const int'
|         |-DeclRefExpr 0x55c810a2f9c8 <col:42> 'P' lvalue ParmVar 0x55c810a03120 'parser' 'P'
|         `-DeclRefExpr 0x55c810a2f9e8 <col:50> 'T' lvalue ParmVar 0x55c810a031c8 'x' 'T &'
|-FunctionTemplateDecl 0x55c810a03798 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x55c810a033b8 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a03438 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a036f8 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55c810a034f8 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a03570 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a03618 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x55c810a2fc80 <col:56, line:437:5>
|     `-ReturnStmt 0x55c810a2fc70 <line:436:9, col:63>
|       `-CallExpr 0x55c810a2fc30 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a2fa80 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a2fb00 <col:21> 'const char *' lvalue ParmVar 0x55c810a034f8 'keyword' 'const char *'
|         |-BinaryOperator 0x55c810a2fbd0 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55c810a2fb80 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55c810a2fb60 <col:30> 'const int' lvalue Var 0x55c810a00308 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55c810a2fbb8 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55c810a2fb98 <col:42> 'const int' lvalue Var 0x55c810a00400 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55c810a2fbf0 <col:54> 'P' lvalue ParmVar 0x55c810a03570 'parser' 'P'
|         `-DeclRefExpr 0x55c810a2fc10 <col:62> 'T' lvalue ParmVar 0x55c810a03618 'x' 'T &'
|-FunctionTemplateDecl 0x55c810a03cc8 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x55c810a03808 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a03888 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a03c28 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55c810a03948 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a039c8 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a03a40 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a03ae8 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x55c810a2fde8 <col:64, line:442:5>
|     |-CallExpr 0x55c810a2fd68 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55c810a2fc98 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55c810a2fcd8 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55c810a2fce8 <col:30> 'const char *' lvalue ParmVar 0x55c810a03948 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55c810a2fd08 <col:39> 'int' lvalue ParmVar 0x55c810a039c8 'flags' 'int'
|     | |-DeclRefExpr 0x55c810a2fd28 <col:46> 'P' lvalue ParmVar 0x55c810a03a40 'parser' 'P'
|     | `-DeclRefExpr 0x55c810a2fd48 <col:54> 'T' lvalue ParmVar 0x55c810a03ae8 'x' 'T &'
|     `-ReturnStmt 0x55c810a2fdd8 <line:441:9, col:17>
|       `-UnaryOperator 0x55c810a2fdc0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c810a2fdb0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55c810a042c8 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x55c810a03d40 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a03db8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55c810a03e38 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55c810a04228 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55c810a03f00 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a03f78 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a04018 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x55c810a040e8 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x55c810a2ff80 <col:84, line:458:5>
|     `-ReturnStmt 0x55c810a2ff70 <line:457:9, col:64>
|       `-CallExpr 0x55c810a2ff28 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a2fe18 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a2fe88 <col:28> 'const char *' lvalue ParmVar 0x55c810a03f00 'keyword' 'const char *'
|         |-IntegerLiteral 0x55c810a2fea8 <col:37> 'int' 0
|         |-DeclRefExpr 0x55c810a2fec8 <col:40> 'P' lvalue ParmVar 0x55c810a03f78 'parser' 'P'
|         |-DeclRefExpr 0x55c810a2fee8 <col:48> 'T' lvalue ParmVar 0x55c810a04018 'x' 'T &'
|         `-DeclRefExpr 0x55c810a2ff08 <col:51> 'const V' lvalue ParmVar 0x55c810a040e8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55c810a04848 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55c810a04340 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a043b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55c810a04438 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55c810a047a8 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55c810a04500 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a04578 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a04618 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x55c810a046b8 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x55c810a30110 <col:86, line:462:5>
|     `-ReturnStmt 0x55c810a30100 <line:461:9, col:73>
|       `-CallExpr 0x55c810a300b8 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a2ffa8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a30018 <col:28> 'const char *' lvalue ParmVar 0x55c810a04500 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a30038 <col:37> 'const int' lvalue Var 0x55c810a00400 'positional' 'const int'
|         |-DeclRefExpr 0x55c810a30058 <col:49> 'P' lvalue ParmVar 0x55c810a04578 'parser' 'P'
|         |-DeclRefExpr 0x55c810a30078 <col:57> 'T' lvalue ParmVar 0x55c810a04618 'x' 'T &'
|         `-DeclRefExpr 0x55c810a30098 <col:60> 'const V' lvalue ParmVar 0x55c810a046b8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55c810a04ea8 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x55c810a048c0 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a04938 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55c810a049b8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55c810a04e08 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55c810a04a80 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a04b00 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a04b78 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a04c18 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x55c810a04cb8 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x55c810a302a0 <col:95, line:467:5>
|     |-CallExpr 0x55c810a30218 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55c810a30128 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55c810a30168 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55c810a30178 <col:37> 'const char *' lvalue ParmVar 0x55c810a04a80 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55c810a30198 <col:46> 'int' lvalue ParmVar 0x55c810a04b00 'flags' 'int'
|     | |-DeclRefExpr 0x55c810a301b8 <col:53> 'P' lvalue ParmVar 0x55c810a04b78 'parser' 'P'
|     | |-DeclRefExpr 0x55c810a301d8 <col:61> 'T' lvalue ParmVar 0x55c810a04c18 'x' 'T &'
|     | `-DeclRefExpr 0x55c810a301f8 <col:64> 'const V' lvalue ParmVar 0x55c810a04cb8 'default_value' 'const V &'
|     `-ReturnStmt 0x55c810a30290 <line:466:9, col:17>
|       `-UnaryOperator 0x55c810a30278 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c810a30268 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55c810a05488 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x55c810a04f28 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a04fa8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55c810a05028 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55c810a053e8 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55c810a050f0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a05168 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a05208 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55c810a052a8 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x55c810a30448 <col:63, line:481:5>
|     `-ReturnStmt 0x55c810a30438 <line:480:9, col:47>
|       `-CallExpr 0x55c810a303f0 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a302d0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a30350 <col:21> 'const char *' lvalue ParmVar 0x55c810a050f0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55c810a30370 <col:30> 'int' 0
|         |-DeclRefExpr 0x55c810a30390 <col:33> 'P' lvalue ParmVar 0x55c810a05168 'parser' 'P'
|         |-DeclRefExpr 0x55c810a303b0 <col:41> 'T1' lvalue ParmVar 0x55c810a05208 'x1' 'T1 &'
|         `-DeclRefExpr 0x55c810a303d0 <col:45> 'T2' lvalue ParmVar 0x55c810a052a8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55c810a05a08 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x55c810a05500 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a05578 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55c810a055f8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55c810a05968 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55c810a056c0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a05738 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a057d8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55c810a05878 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55c810a305e8 <col:65, line:485:5>
|     `-ReturnStmt 0x55c810a305d8 <line:484:9, col:55>
|       `-CallExpr 0x55c810a30590 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a30470 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a304f0 <col:21> 'const char *' lvalue ParmVar 0x55c810a056c0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a30510 <col:30> 'const int' lvalue Var 0x55c810a00308 'mandatory' 'const int'
|         |-DeclRefExpr 0x55c810a30530 <col:41> 'P' lvalue ParmVar 0x55c810a05738 'parser' 'P'
|         |-DeclRefExpr 0x55c810a30550 <col:49> 'T1' lvalue ParmVar 0x55c810a057d8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55c810a30570 <col:53> 'T2' lvalue ParmVar 0x55c810a05878 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55c810a05f88 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x55c810a05a80 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a05af8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55c810a05b78 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55c810a05ee8 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55c810a05c40 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a05cb8 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a05d58 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55c810a05df8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55c810a30788 <col:65, line:489:5>
|     `-ReturnStmt 0x55c810a30778 <line:488:9, col:56>
|       `-CallExpr 0x55c810a30730 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a30610 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a30690 <col:21> 'const char *' lvalue ParmVar 0x55c810a05c40 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a306b0 <col:30> 'const int' lvalue Var 0x55c810a00400 'positional' 'const int'
|         |-DeclRefExpr 0x55c810a306d0 <col:42> 'P' lvalue ParmVar 0x55c810a05cb8 'parser' 'P'
|         |-DeclRefExpr 0x55c810a306f0 <col:50> 'T1' lvalue ParmVar 0x55c810a05d58 'x1' 'T1 &'
|         `-DeclRefExpr 0x55c810a30710 <col:54> 'T2' lvalue ParmVar 0x55c810a05df8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55c810a06508 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x55c810a06000 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a06078 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55c810a060f8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55c810a06468 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55c810a061c0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a06238 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a062d8 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55c810a06378 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x55c810a309d8 <col:66, line:493:5>
|     `-ReturnStmt 0x55c810a309c8 <line:492:9, col:68>
|       `-CallExpr 0x55c810a30980 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a307b0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a30830 <col:21> 'const char *' lvalue ParmVar 0x55c810a061c0 'keyword' 'const char *'
|         |-BinaryOperator 0x55c810a30900 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55c810a308b0 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55c810a30890 <col:30> 'const int' lvalue Var 0x55c810a00308 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55c810a308e8 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55c810a308c8 <col:42> 'const int' lvalue Var 0x55c810a00400 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55c810a30920 <col:54> 'P' lvalue ParmVar 0x55c810a06238 'parser' 'P'
|         |-DeclRefExpr 0x55c810a30940 <col:62> 'T1' lvalue ParmVar 0x55c810a062d8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55c810a30960 <col:66> 'T2' lvalue ParmVar 0x55c810a06378 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55c810a06b68 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x55c810a06580 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a065f8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55c810a06678 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55c810a06ac8 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55c810a06740 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a067c0 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a06838 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a068d8 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55c810a06978 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x55c810a30b68 <col:74, line:498:5>
|     |-CallExpr 0x55c810a30ae0 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55c810a309f0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55c810a30a30 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55c810a30a40 <col:30> 'const char *' lvalue ParmVar 0x55c810a06740 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55c810a30a60 <col:39> 'int' lvalue ParmVar 0x55c810a067c0 'flags' 'int'
|     | |-DeclRefExpr 0x55c810a30a80 <col:46> 'P' lvalue ParmVar 0x55c810a06838 'parser' 'P'
|     | |-DeclRefExpr 0x55c810a30aa0 <col:54> 'T1' lvalue ParmVar 0x55c810a068d8 'x1' 'T1 &'
|     | `-DeclRefExpr 0x55c810a30ac0 <col:58> 'T2' lvalue ParmVar 0x55c810a06978 'x2' 'T2 &'
|     `-ReturnStmt 0x55c810a30b58 <line:497:9, col:17>
|       `-UnaryOperator 0x55c810a30b40 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c810a30b30 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55c810a06ec8 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x55c810a06be8 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55c810a06e28 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55c810a06ca0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a06d18 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x55c810a30cb0 <col:52, line:509:5>
|     `-ReturnStmt 0x55c810a30ca0 <line:508:9, col:44>
|       `-CallExpr 0x55c810a30c68 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a30b98 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a30c08 <col:26> 'const char *' lvalue ParmVar 0x55c810a06ca0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55c810a30c28 <col:35> 'int' 0
|         `-DeclRefExpr 0x55c810a30c48 <col:38> 'P' lvalue ParmVar 0x55c810a06d18 'parser' 'P'
|-FunctionTemplateDecl 0x55c810a071c8 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x55c810a06f30 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55c810a07128 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55c810a06fe0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a07058 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55c810a30df0 <col:54, line:513:5>
|     `-ReturnStmt 0x55c810a30de0 <line:512:9, col:52>
|       `-CallExpr 0x55c810a30da8 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a30cd8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a30d48 <col:26> 'const char *' lvalue ParmVar 0x55c810a06fe0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a30d68 <col:35> 'const int' lvalue Var 0x55c810a00308 'mandatory' 'const int'
|         `-DeclRefExpr 0x55c810a30d88 <col:46> 'P' lvalue ParmVar 0x55c810a07058 'parser' 'P'
|-FunctionTemplateDecl 0x55c810a074c8 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x55c810a07230 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55c810a07428 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55c810a072e0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a07358 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55c810a30f30 <col:54, line:517:5>
|     `-ReturnStmt 0x55c810a30f20 <line:516:9, col:53>
|       `-CallExpr 0x55c810a30ee8 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a30e18 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a30e88 <col:26> 'const char *' lvalue ParmVar 0x55c810a072e0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a30ea8 <col:35> 'const int' lvalue Var 0x55c810a00400 'positional' 'const int'
|         `-DeclRefExpr 0x55c810a30ec8 <col:47> 'P' lvalue ParmVar 0x55c810a07358 'parser' 'P'
|-FunctionTemplateDecl 0x55c810a077c8 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x55c810a07530 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55c810a07728 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55c810a075e0 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a07658 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x55c810a31120 <col:55, line:521:5>
|     `-ReturnStmt 0x55c810a31110 <line:520:9, col:65>
|       `-CallExpr 0x55c810a310d8 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a30f58 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a30fc8 <col:26> 'const char *' lvalue ParmVar 0x55c810a075e0 'keyword' 'const char *'
|         |-BinaryOperator 0x55c810a31098 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x55c810a31048 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55c810a31028 <col:35> 'const int' lvalue Var 0x55c810a00308 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55c810a31080 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55c810a31060 <col:47> 'const int' lvalue Var 0x55c810a00400 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55c810a310b8 <col:59> 'P' lvalue ParmVar 0x55c810a07658 'parser' 'P'
|-FunctionTemplateDecl 0x55c810a07b98 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x55c810a07830 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55c810a07af8 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55c810a078e0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a07960 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a079d8 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x55c810a31260 <col:63, line:526:5>
|     |-CallExpr 0x55c810a311e8 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55c810a31138 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x55c810a31178 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x55c810a31188 <col:35> 'const char *' lvalue ParmVar 0x55c810a078e0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55c810a311a8 <col:44> 'int' lvalue ParmVar 0x55c810a07960 'flags' 'int'
|     | `-DeclRefExpr 0x55c810a311c8 <col:51> 'P' lvalue ParmVar 0x55c810a079d8 'parser' 'P'
|     `-ReturnStmt 0x55c810a31250 <line:525:9, col:17>
|       `-UnaryOperator 0x55c810a31238 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c810a31228 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55c810a07fe8 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x55c810a07c08 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a07c88 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a07f48 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55c810a07d48 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a07dc0 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a07e68 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x55c810a313b8 <col:58, line:541:5>
|     `-ReturnStmt 0x55c810a313a8 <line:540:9, col:39>
|       `-CallExpr 0x55c810a31370 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a31290 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a31310 <col:21> 'const char *' lvalue ParmVar 0x55c810a07d48 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a31330 <col:30> 'P' lvalue ParmVar 0x55c810a07dc0 'parser' 'P'
|         `-DeclRefExpr 0x55c810a31350 <col:38> 'T' lvalue ParmVar 0x55c810a07e68 'x' 'T &'
|-FunctionTemplateDecl 0x55c810a08438 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x55c810a08058 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a080d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a08398 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55c810a08198 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a08210 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a082b8 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55c810a314f0 <col:60, line:545:5>
|     `-ReturnStmt 0x55c810a314e0 <line:544:9, col:41>
|       `-CallExpr 0x55c810a314a8 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a313e0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a31448 <col:23> 'const char *' lvalue ParmVar 0x55c810a08198 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a31468 <col:32> 'P' lvalue ParmVar 0x55c810a08210 'parser' 'P'
|         `-DeclRefExpr 0x55c810a31488 <col:40> 'T' lvalue ParmVar 0x55c810a082b8 'x' 'T &'
|-FunctionTemplateDecl 0x55c810a08888 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x55c810a084a8 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a08528 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a087e8 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55c810a085e8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a08660 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a08708 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55c810a31628 <col:60, line:549:5>
|     `-ReturnStmt 0x55c810a31618 <line:548:9, col:41>
|       `-CallExpr 0x55c810a315e0 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a31518 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a31580 <col:23> 'const char *' lvalue ParmVar 0x55c810a085e8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a315a0 <col:32> 'P' lvalue ParmVar 0x55c810a08660 'parser' 'P'
|         `-DeclRefExpr 0x55c810a315c0 <col:40> 'T' lvalue ParmVar 0x55c810a08708 'x' 'T &'
|-FunctionTemplateDecl 0x55c810a08cd8 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x55c810a088f8 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a08978 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a08c38 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55c810a08a38 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a08ab0 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a08b58 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x55c810a31760 <col:61, line:553:5>
|     `-ReturnStmt 0x55c810a31750 <line:552:9, col:42>
|       `-CallExpr 0x55c810a31718 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a31650 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a316b8 <col:24> 'const char *' lvalue ParmVar 0x55c810a08a38 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a316d8 <col:33> 'P' lvalue ParmVar 0x55c810a08ab0 'parser' 'P'
|         `-DeclRefExpr 0x55c810a316f8 <col:41> 'T' lvalue ParmVar 0x55c810a08b58 'x' 'T &'
|-FunctionTemplateDecl 0x55c810a091b8 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x55c810a08d48 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a08dc8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a09118 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55c810a08e88 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a08f08 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a08f80 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a09028 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x55c810a318d8 <col:69, line:557:5>
|     `-ReturnStmt 0x55c810a318c8 <line:556:9, col:46>
|       `-CallExpr 0x55c810a31888 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a31788 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a31808 <col:21> 'const char *' lvalue ParmVar 0x55c810a08e88 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a31828 <col:30> 'int' lvalue ParmVar 0x55c810a08f08 'flags' 'int'
|         |-DeclRefExpr 0x55c810a31848 <col:37> 'P' lvalue ParmVar 0x55c810a08f80 'parser' 'P'
|         `-DeclRefExpr 0x55c810a31868 <col:45> 'T' lvalue ParmVar 0x55c810a09028 'x' 'T &'
|-FunctionTemplateDecl 0x55c810a094c8 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x55c810a09230 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55c810a09428 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55c810a092e0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a09358 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x55c810a31a18 <col:56, line:571:5>
|     `-ReturnStmt 0x55c810a31a08 <line:570:9, col:48>
|       `-CallExpr 0x55c810a319d0 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a31900 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a31970 <col:30> 'const char *' lvalue ParmVar 0x55c810a092e0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55c810a31990 <col:39> 'int' 0
|         `-DeclRefExpr 0x55c810a319b0 <col:42> 'P' lvalue ParmVar 0x55c810a09358 'parser' 'P'
|-FunctionTemplateDecl 0x55c810a09858 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x55c810a09530 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55c810a097b8 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55c810a095e0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a09660 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a096d8 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55c810a31be8 <col:67, line:576:5>
|     |-CallExpr 0x55c810a31b70 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55c810a31a30 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55c810a31a70 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55c810a31a80 <col:39> 'const char *' lvalue ParmVar 0x55c810a095e0 'keyword' 'const char *'
|     | |-BinaryOperator 0x55c810a31b30 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55c810a31ae0 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55c810a31aa0 <col:48> 'int' lvalue ParmVar 0x55c810a09660 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55c810a31b18 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55c810a31af8 <col:56> 'const int' lvalue Var 0x55c810a005f0 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x55c810a31b50 <col:68> 'P' lvalue ParmVar 0x55c810a096d8 'parser' 'P'
|     `-ReturnStmt 0x55c810a31bd8 <line:575:9, col:17>
|       `-UnaryOperator 0x55c810a31bc0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c810a31bb0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55c810a09ca8 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x55c810a098c8 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a09948 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a09c08 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55c810a09a08 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a09a80 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a09b28 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x55c810a31d58 <col:62, line:592:5>
|     `-ReturnStmt 0x55c810a31d48 <line:591:9, col:51>
|       `-CallExpr 0x55c810a31d08 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a31c18 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a31c88 <col:30> 'const char *' lvalue ParmVar 0x55c810a09a08 'keyword' 'const char *'
|         |-IntegerLiteral 0x55c810a31ca8 <col:39> 'int' 0
|         |-DeclRefExpr 0x55c810a31cc8 <col:42> 'P' lvalue ParmVar 0x55c810a09a80 'parser' 'P'
|         `-DeclRefExpr 0x55c810a31ce8 <col:50> 'T' lvalue ParmVar 0x55c810a09b28 'x' 'T &'
|-FunctionTemplateDecl 0x55c810a0c1e8 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x55c810a09d18 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a09d98 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a0c148 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55c810a09e58 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a09ed8 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a0bfb0 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a0c058 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x55c810a31f50 <col:73, line:597:5>
|     |-CallExpr 0x55c810a31ed0 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55c810a31d70 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55c810a31db0 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55c810a31dc0 <col:39> 'const char *' lvalue ParmVar 0x55c810a09e58 'keyword' 'const char *'
|     | |-BinaryOperator 0x55c810a31e70 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55c810a31e20 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55c810a31de0 <col:48> 'int' lvalue ParmVar 0x55c810a09ed8 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55c810a31e58 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55c810a31e38 <col:56> 'const int' lvalue Var 0x55c810a005f0 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55c810a31e90 <col:68> 'P' lvalue ParmVar 0x55c810a0bfb0 'parser' 'P'
|     | `-DeclRefExpr 0x55c810a31eb0 <col:76> 'T' lvalue ParmVar 0x55c810a0c058 'x' 'T &'
|     `-ReturnStmt 0x55c810a31f40 <line:596:9, col:17>
|       `-UnaryOperator 0x55c810a31f28 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c810a31f18 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55c810a0c798 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x55c810a0c260 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a0c2d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a0c6f8 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x55c810a0c398 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a0c410 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a0c5d0 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55c810a320c0 <col:65, line:614:5>
|     `-ReturnStmt 0x55c810a320b0 <line:613:9, col:46>
|       `-CallExpr 0x55c810a32070 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a31f80 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a31ff0 <col:25> 'const char *' lvalue ParmVar 0x55c810a0c398 'keyword' 'const char *'
|         |-IntegerLiteral 0x55c810a32010 <col:34> 'int' 0
|         |-DeclRefExpr 0x55c810a32030 <col:37> 'P' lvalue ParmVar 0x55c810a0c410 'parser' 'P'
|         `-DeclRefExpr 0x55c810a32050 <col:45> 'Vector<T>' lvalue ParmVar 0x55c810a0c5d0 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55c810a0cbc8 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x55c810a0c808 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55c810a0cb28 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x55c810a0c8c0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a0ca10 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55c810a322e0 <col:55, line:618:5>
|     `-ReturnStmt 0x55c810a322d0 <line:617:9, col:55>
|       `-CallExpr 0x55c810a32290 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a320e8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a32158 <col:25> 'const char *' lvalue ParmVar 0x55c810a0c8c0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55c810a32178 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x55c810a32250 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55c810a32270 <col:54> 'Vector<T>' lvalue ParmVar 0x55c810a0ca10 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55c810a0d198 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x55c810a0cc30 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a0cca8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a0d0f8 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55c810a0cd68 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a0cde8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a0ce60 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a0cfb0 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55c810a324d8 <col:76, line:623:5>
|     |-CallExpr 0x55c810a32458 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55c810a322f8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x55c810a32338 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x55c810a32348 <col:34> 'const char *' lvalue ParmVar 0x55c810a0cd68 'keyword' 'const char *'
|     | |-BinaryOperator 0x55c810a323f8 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x55c810a323a8 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55c810a32368 <col:43> 'int' lvalue ParmVar 0x55c810a0cde8 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55c810a323e0 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55c810a323c0 <col:51> 'const int' lvalue Var 0x55c810a005f0 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55c810a32418 <col:63> 'P' lvalue ParmVar 0x55c810a0ce60 'parser' 'P'
|     | `-DeclRefExpr 0x55c810a32438 <col:71> 'Vector<T>' lvalue ParmVar 0x55c810a0cfb0 'x' 'Vector<T> &'
|     `-ReturnStmt 0x55c810a324c8 <line:622:9, col:17>
|       `-UnaryOperator 0x55c810a324b0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c810a324a0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55c810a0d6d8 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x55c810a0d210 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a0d288 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a0d638 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x55c810a0d348 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a0d3c8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a0d510 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55c810a35fb0 <col:66, line:627:5>
|     `-ReturnStmt 0x55c810a35fa0 <line:626:9, col:59>
|       `-CallExpr 0x55c810a35f60 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55c810a32508 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55c810a32578 <col:25> 'const char *' lvalue ParmVar 0x55c810a0d348 'keyword' 'const char *'
|         |-DeclRefExpr 0x55c810a32598 <col:34> 'int' lvalue ParmVar 0x55c810a0d3c8 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x55c810a35f20 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55c810a35f40 <col:58> 'Vector<T>' lvalue ParmVar 0x55c810a0d510 'x' 'Vector<T> &'
|-CXXMethodDecl 0x55c810a0d768 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x55c810a36030 <col:25, line:633:5>
|   `-ReturnStmt 0x55c810a36020 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x55c810a36008 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55c810a35fd8 <col:16> 'const bool' lvalue ->_status 0x55c810a135a8
|         `-CXXThisExpr 0x55c810a35fc8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55c810a0d8e8 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x55c810a0d820 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x55c810a36118 <col:27, line:639:5>
|   |-BinaryOperator 0x55c810a360c0 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55c810a36048 <col:9> 'bool' lvalue ParmVar 0x55c810a0d820 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55c810a360a8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55c810a36078 <col:13> 'bool' lvalue ->_status 0x55c810a135a8
|   |     `-CXXThisExpr 0x55c810a36068 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55c810a36108 <line:638:9, col:17>
|     `-UnaryOperator 0x55c810a360f0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c810a360e0 <col:17> 'Args *' this
|-CXXMethodDecl 0x55c810a0da68 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55c810a0d9a8 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x55c810a36208 <col:39, line:644:5>
|   |-BinaryOperator 0x55c810a361b0 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55c810a36138 <col:9> 'bool' lvalue ParmVar 0x55c810a0d9a8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55c810a36198 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55c810a36168 <col:13> 'const bool' lvalue ->_status 0x55c810a135a8
|   |     `-CXXThisExpr 0x55c810a36158 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55c810a361f8 <line:643:9, col:17>
|     `-UnaryOperator 0x55c810a361e0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c810a361d0 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55c810a0db30 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x55c810a362b0 <col:30, line:651:5>
|   `-ReturnStmt 0x55c810a362a0 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x55c810a36288 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55c810a36258 <col:16> 'bool' lvalue ->_read_status 0x55c8109e8da0
|         `-ImplicitCastExpr 0x55c810a36238 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x55c810a36228 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55c810a0dc78 <line:655:5, line:658:5> line:655:11 used read_status 'Args &(bool &)'
| |-ParmVarDecl 0x55c810a0dbe8 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x55c810a363b8 <col:32, line:658:5>
|   |-BinaryOperator 0x55c810a36360 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55c810a362c8 <col:9> 'bool' lvalue ParmVar 0x55c810a0dbe8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55c810a36348 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55c810a36318 <col:13> 'bool' lvalue ->_read_status 0x55c8109e8da0
|   |     `-ImplicitCastExpr 0x55c810a362f8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55c810a362e8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55c810a363a8 <line:657:9, col:17>
|     `-UnaryOperator 0x55c810a36390 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c810a36380 <col:17> 'Args *' this
|-CXXMethodDecl 0x55c810a0ddc8 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55c810a0dd38 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x55c810a364c8 <col:44, line:663:5>
|   |-BinaryOperator 0x55c810a36470 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55c810a363d8 <col:9> 'bool' lvalue ParmVar 0x55c810a0dd38 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55c810a36458 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55c810a36428 <col:13> 'bool' lvalue ->_read_status 0x55c8109e8da0
|   |     `-ImplicitCastExpr 0x55c810a36408 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55c810a363f8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55c810a364b8 <line:662:9, col:17>
|     `-UnaryOperator 0x55c810a364a0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c810a36490 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55c810a0de90 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x55c810a0df58 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x55c810a0e020 <line:684:5, col:17> col:9 used consume 'int ()'
|-CXXMethodDecl 0x55c810a0e0e8 <line:693:5, col:18> col:9 complete 'int ()'
|-FunctionTemplateDecl 0x55c810a0e3f8 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x55c810a0e188 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55c810a0e358 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x55c810a0e268 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x55c810a36888 <col:19, line:706:5>
|     `-IfStmt 0x55c810a36860 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x55c810a365c8 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x55c810a36790 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x55c810a36760 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x55c810a36720 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x55c810a36620 <col:42> '<bound member function type>' ->simple_slot 0x55c810a2da70
|       |     | `-CXXThisExpr 0x55c810a36610 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x55c810a366c0 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x55c810a36670 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x55c81094c580 0x55c810694818
|       |     | `-DeclRefExpr 0x55c810a36650 <col:55> 'T' lvalue ParmVar 0x55c810a0e268 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x55c810a36700 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x55c810a36850 <line:705:13, col:34>
|         `-CallExpr 0x55c810a36828 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x55c810a367b0 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x55c810a36808 <col:33> 'T' lvalue ParmVar 0x55c810a0e268 'x' 'T &'
|-FunctionTemplateDecl 0x55c810a0e6c8 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x55c810a0e458 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55c810a0e628 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x55c810a0e538 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x55c810a36c60 <col:31, line:717:5>
|     |-DeclStmt 0x55c810a369c8 <line:713:9, col:23>
|     | `-VarDecl 0x55c810a368b0 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x55c810a369a0 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55c810a36928 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55c810a36980 <col:21> 'T' lvalue ParmVar 0x55c810a0e538 'x' 'T &'
|     |-IfStmt 0x55c810a36c10 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x55c810a36ab8 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x55c810a36bf0 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55c810a36b90 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55c810a36b20 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55c810847ac8 0x55c8108476e8 0x55c810847318 0x55c810846f38 0x55c810846b58 0x55c810846788
|     |   | `-DeclRefExpr 0x55c810a36b00 <col:14> 'T *' lvalue Var 0x55c810a368b0 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x55c810a36bd0 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x55c810a36c48 <line:716:9, col:16>
|       `-DeclRefExpr 0x55c810a36c28 <col:16> 'T *' lvalue Var 0x55c810a368b0 's' 'T *'
|-FunctionTemplateDecl 0x55c810a0ead8 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x55c810a0e728 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55c810a0e7a8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55c810a0ea38 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x55c810a0e888 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x55c810a0e928 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x55c810a36f70 <col:37, line:726:5>
|     |-IfStmt 0x55c810a36f00 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x55c810a36f20 <line:723:13, col:26>
|     | | `-VarDecl 0x55c810a36cc8 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x55c810a36db8 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x55c810a36d40 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x55c810a36d98 <col:25> 'T' lvalue ParmVar 0x55c810a0e888 'x' 'T &'
|     | |-DeclRefExpr 0x55c810a36de0 <col:16> 'T *' lvalue Var 0x55c810a36cc8 's' 'T *'
|     | `-BinaryOperator 0x55c810a36ee0 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55c810a36e90 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55c810a36e20 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55c810847ac8 0x55c8108476e8 0x55c810847318 0x55c810846f38 0x55c810846b58 0x55c810846788
|     |   | `-DeclRefExpr 0x55c810a36e00 <col:14> 'T *' lvalue Var 0x55c810a36cc8 's' 'T *'
|     |   `-DeclRefExpr 0x55c810a36ec0 <col:18> 'const V' lvalue ParmVar 0x55c810a0e928 'value' 'const V &'
|     `-ReturnStmt 0x55c810a36f60 <line:725:9, col:17>
|       `-UnaryOperator 0x55c810a36f48 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55c810a36f38 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55c810a0eed8 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x55c810a0eb40 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55c810a0ee38 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x55c810a0ebf0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a0ec70 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a0ed18 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x55c810a37d90 <col:65, line:737:5>
|     |-DeclStmt 0x55c810a37008 <line:732:9, col:26>
|     | `-VarDecl 0x55c810a36fa0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55c810a37d58 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x55c810a37d78 <line:733:13, col:58>
|       | `-VarDecl 0x55c810a37030 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55c810a37210 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55c810a371e0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55c810a371c8 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55c810a371a8 <col:26, col:58> 'String' (CXXTemporary 0x55c810a371a8)
|       |           `-CXXMemberCallExpr 0x55c810a37138 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55c810a370a8 <col:26> '<bound member function type>' ->find 0x55c810a2d088
|       |             | `-CXXThisExpr 0x55c810a37098 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55c810a37170 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55c810a370d8 <col:31> 'const char *' lvalue ParmVar 0x55c810a0ebf0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55c810a37188 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55c810a370f8 <col:40> 'int' lvalue ParmVar 0x55c810a0ec70 'flags' 'int'
|       |             `-DeclRefExpr 0x55c810a37118 <col:47> 'Args::Slot *' lvalue Var 0x55c810a36fa0 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55c810a372c8 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55c810a372b0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55c810a37290 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55c810a37260 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55c810657048
|       |       `-ImplicitCastExpr 0x55c810a37248 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55c810a37228 <col:20> 'String' lvalue Var 0x55c810a37030 'str' 'String'
|       `-CompoundStmt 0x55c810a37d38 <col:61, line:736:9>
|         |-DeclStmt 0x55c810a37780 <line:734:13, col:76>
|         | `-VarDecl 0x55c810a37318 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55c810a37750 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55c810a376c0 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55c810a37708 <col:60> 'T' lvalue ParmVar 0x55c810a0ed18 'variable' 'T &'
|         |     `-UnaryOperator 0x55c810a37738 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55c810a37728 <col:71> 'Args *' this
|         `-CallExpr 0x55c810a37d08 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x55c810a377a8 <col:13> '<bound member function type>' ->postparse 0x55c810a2d298
|           | `-CXXThisExpr 0x55c810a37798 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55c810a37cc8 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55c810a377d8 <col:23> 'T *' lvalue Var 0x55c810a37318 's' 'T *'
|           | `-CallExpr 0x55c810a37c88 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55c810a37a60 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x55c810a37b60 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x55c810a37b80 <col:86> 'String' lvalue Var 0x55c810a37030 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55c810a37c30 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55c810a37bc0 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55c810847ac8 0x55c8108476e8 0x55c810847318 0x55c810846f38 0x55c810846b58 0x55c810846788
|           |   | `-DeclRefExpr 0x55c810a37ba0 <col:92> 'T *' lvalue Var 0x55c810a37318 's' 'T *'
|           |   `-UnaryOperator 0x55c810a37c70 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55c810a37c60 <col:96> 'Args *' this
|           `-DeclRefExpr 0x55c810a37ce8 <col:103> 'Args::Slot *' lvalue Var 0x55c810a36fa0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55c810a0f428 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55c810a0ef48 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55c810a0efc8 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55c810a0f388 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55c810a0f088 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a0f108 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a0f1a8 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x55c810a0f248 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x55c810a38c30 <col:88, line:745:5>
|     |-DeclStmt 0x55c810a37e28 <line:741:9, col:26>
|     | `-VarDecl 0x55c810a37dc0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55c810a38048 <line:742:9, col:55>
|     | `-VarDecl 0x55c810a37e50 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55c810a38030 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55c810a38000 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55c810a37fe8 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55c810a37fc8 <col:22, col:54> 'String' (CXXTemporary 0x55c810a37fc8)
|     |           `-CXXMemberCallExpr 0x55c810a37f58 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55c810a37ec8 <col:22> '<bound member function type>' ->find 0x55c810a2d088
|     |             | `-CXXThisExpr 0x55c810a37eb8 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55c810a37f90 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55c810a37ef8 <col:27> 'const char *' lvalue ParmVar 0x55c810a0f088 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55c810a37fa8 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55c810a37f18 <col:36> 'int' lvalue ParmVar 0x55c810a0f108 'flags' 'int'
|     |             `-DeclRefExpr 0x55c810a37f38 <col:43> 'Args::Slot *' lvalue Var 0x55c810a37dc0 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55c810a38420 <line:743:9, col:72>
|     | `-VarDecl 0x55c810a38098 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55c810a383f0 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55c810a38360 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55c810a383a8 <col:56> 'T' lvalue ParmVar 0x55c810a0f1a8 'variable' 'T &'
|     |     `-UnaryOperator 0x55c810a383d8 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55c810a383c8 <col:67> 'Args *' this
|     `-CallExpr 0x55c810a38c00 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x55c810a38448 <col:9> '<bound member function type>' ->postparse 0x55c810a2d298
|       | `-CXXThisExpr 0x55c810a38438 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55c810a38bc0 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55c810a38478 <col:19> 'T *' lvalue Var 0x55c810a38098 's' 'T *'
|       | `-ParenExpr 0x55c810a38ba0 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x55c810a38b70 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55c810a38b58 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55c810a38b40 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55c810a38b20 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55c810a38af0 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55c810657048
|       |     |       `-ImplicitCastExpr 0x55c810a38ad8 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55c810a38498 <col:25> 'String' lvalue Var 0x55c810a37e50 'str' 'String'
|       |     |-CallExpr 0x55c810a38948 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55c810a38720 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x55c810a38820 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x55c810a38840 <col:89> 'String' lvalue Var 0x55c810a37e50 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55c810a388f0 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55c810a38880 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55c810847ac8 0x55c8108476e8 0x55c810847318 0x55c810846f38 0x55c810846b58 0x55c810846788
|       |     | | `-DeclRefExpr 0x55c810a38860 <col:95> 'T *' lvalue Var 0x55c810a38098 's' 'T *'
|       |     | `-UnaryOperator 0x55c810a38930 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55c810a38920 <col:99> 'Args *' this
|       |     `-ParenExpr 0x55c810a38ab8 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x55c810a38a98 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x55c810a38a68 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55c810a38a18 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55c810a389a8 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55c810847ac8 0x55c8108476e8 0x55c810847318 0x55c810846f38 0x55c810846b58 0x55c810846788
|       |         | | `-DeclRefExpr 0x55c810a38988 <col:109> 'T *' lvalue Var 0x55c810a38098 's' 'T *'
|       |         | `-DeclRefExpr 0x55c810a38a48 <col:113> 'const V' lvalue ParmVar 0x55c810a0f248 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55c810a38a88 <col:120> 'bool' true
|       `-DeclRefExpr 0x55c810a38be0 <col:128> 'Args::Slot *' lvalue Var 0x55c810a37dc0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55c810a0f958 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x55c810a0f4a0 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a0f518 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a0f8b8 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55c810a0f5d8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a0f658 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a0f6d0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a0f778 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x55c810a39828 <col:75, line:754:5>
|     |-DeclStmt 0x55c810a38cd8 <line:749:9, col:26>
|     | `-VarDecl 0x55c810a38c70 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55c810a397f0 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x55c810a39810 <line:750:13, col:58>
|       | `-VarDecl 0x55c810a38d00 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55c810a38ee0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55c810a38eb0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55c810a38e98 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55c810a38e78 <col:26, col:58> 'String' (CXXTemporary 0x55c810a38e78)
|       |           `-CXXMemberCallExpr 0x55c810a38e08 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55c810a38d78 <col:26> '<bound member function type>' ->find 0x55c810a2d088
|       |             | `-CXXThisExpr 0x55c810a38d68 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55c810a38e40 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55c810a38da8 <col:31> 'const char *' lvalue ParmVar 0x55c810a0f5d8 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55c810a38e58 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55c810a38dc8 <col:40> 'int' lvalue ParmVar 0x55c810a0f658 'flags' 'int'
|       |             `-DeclRefExpr 0x55c810a38de8 <col:47> 'Args::Slot *' lvalue Var 0x55c810a38c70 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55c810a38f98 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55c810a38f80 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55c810a38f60 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55c810a38f30 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55c810657048
|       |       `-ImplicitCastExpr 0x55c810a38f18 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55c810a38ef8 <col:20> 'String' lvalue Var 0x55c810a38d00 'str' 'String'
|       `-CompoundStmt 0x55c810a397d0 <col:61, line:753:9>
|         |-DeclStmt 0x55c810a39370 <line:751:13, col:63>
|         | `-VarDecl 0x55c810a38fe8 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55c810a39340 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55c810a392b0 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55c810a392f8 <col:47> 'T' lvalue ParmVar 0x55c810a0f778 'variable' 'T &'
|         |     `-UnaryOperator 0x55c810a39328 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55c810a39318 <col:58> 'Args *' this
|         `-CallExpr 0x55c810a397a0 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x55c810a39398 <col:13> '<bound member function type>' ->postparse 0x55c810a2d298
|           | `-CXXThisExpr 0x55c810a39388 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55c810a39760 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55c810a393c8 <col:23> 'T *' lvalue Var 0x55c810a38fe8 's' 'T *'
|           | `-CallExpr 0x55c810a39720 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55c810a395b0 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55c810a395f8 <col:56> 'P' lvalue ParmVar 0x55c810a0f6d0 'parser' 'P'
|           |   |-DeclRefExpr 0x55c810a39618 <col:64> 'String' lvalue Var 0x55c810a38d00 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55c810a396c8 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55c810a39658 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55c810847ac8 0x55c8108476e8 0x55c810847318 0x55c810846f38 0x55c810846b58 0x55c810846788
|           |   | `-DeclRefExpr 0x55c810a39638 <col:70> 'T *' lvalue Var 0x55c810a38fe8 's' 'T *'
|           |   `-UnaryOperator 0x55c810a39708 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55c810a396f8 <col:74> 'Args *' this
|           `-DeclRefExpr 0x55c810a39780 <col:81> 'Args::Slot *' lvalue Var 0x55c810a38c70 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55c810a0ffb8 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55c810a0f9d0 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55c810a0fa48 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x55c810a0fac8 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55c810a0ff18 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55c810a0fb90 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a0fc10 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a0fc88 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a0fd28 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x55c810a0fdc8 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x55c810a3a5b8 <col:98, line:762:5>
|     |-DeclStmt 0x55c810a398c0 <line:758:9, col:26>
|     | `-VarDecl 0x55c810a39858 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55c810a39ae0 <line:759:9, col:55>
|     | `-VarDecl 0x55c810a398e8 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55c810a39ac8 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55c810a39a98 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55c810a39a80 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55c810a39a60 <col:22, col:54> 'String' (CXXTemporary 0x55c810a39a60)
|     |           `-CXXMemberCallExpr 0x55c810a399f0 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55c810a39960 <col:22> '<bound member function type>' ->find 0x55c810a2d088
|     |             | `-CXXThisExpr 0x55c810a39950 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55c810a39a28 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55c810a39990 <col:27> 'const char *' lvalue ParmVar 0x55c810a0fb90 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55c810a39a40 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55c810a399b0 <col:36> 'int' lvalue ParmVar 0x55c810a0fc10 'flags' 'int'
|     |             `-DeclRefExpr 0x55c810a399d0 <col:43> 'Args::Slot *' lvalue Var 0x55c810a39858 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55c810a39f00 <line:760:9, col:59>
|     | `-VarDecl 0x55c810a39b38 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55c810a39ed0 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55c810a39e40 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55c810a39e88 <col:43> 'T' lvalue ParmVar 0x55c810a0fd28 'variable' 'T &'
|     |     `-UnaryOperator 0x55c810a39eb8 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55c810a39ea8 <col:54> 'Args *' this
|     `-CallExpr 0x55c810a3a588 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x55c810a39f28 <col:9> '<bound member function type>' ->postparse 0x55c810a2d298
|       | `-CXXThisExpr 0x55c810a39f18 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55c810a3a548 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55c810a39f58 <col:19> 'T *' lvalue Var 0x55c810a39b38 's' 'T *'
|       | `-ParenExpr 0x55c810a3a528 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x55c810a3a4f8 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55c810a3a4e0 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55c810a3a4c8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55c810a3a4a8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55c810a3a478 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55c810657048
|       |     |       `-ImplicitCastExpr 0x55c810a3a460 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55c810a39f78 <col:25> 'String' lvalue Var 0x55c810a398e8 'str' 'String'
|       |     |-CallExpr 0x55c810a3a2d0 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55c810a3a160 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x55c810a3a1a8 <col:59> 'P' lvalue ParmVar 0x55c810a0fc88 'parser' 'P'
|       |     | |-DeclRefExpr 0x55c810a3a1c8 <col:67> 'String' lvalue Var 0x55c810a398e8 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55c810a3a278 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55c810a3a208 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55c810847ac8 0x55c8108476e8 0x55c810847318 0x55c810846f38 0x55c810846b58 0x55c810846788
|       |     | | `-DeclRefExpr 0x55c810a3a1e8 <col:73> 'T *' lvalue Var 0x55c810a39b38 's' 'T *'
|       |     | `-UnaryOperator 0x55c810a3a2b8 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55c810a3a2a8 <col:77> 'Args *' this
|       |     `-ParenExpr 0x55c810a3a440 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x55c810a3a420 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x55c810a3a3f0 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55c810a3a3a0 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55c810a3a330 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55c810847ac8 0x55c8108476e8 0x55c810847318 0x55c810846f38 0x55c810846b58 0x55c810846788
|       |         | | `-DeclRefExpr 0x55c810a3a310 <col:87> 'T *' lvalue Var 0x55c810a39b38 's' 'T *'
|       |         | `-DeclRefExpr 0x55c810a3a3d0 <col:91> 'const V' lvalue ParmVar 0x55c810a0fdc8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55c810a3a410 <col:98> 'bool' true
|       `-DeclRefExpr 0x55c810a3a568 <col:106> 'Args::Slot *' lvalue Var 0x55c810a39858 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55c810a10628 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x55c810a10038 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a100b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55c810a10138 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55c810a10588 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55c810a10200 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a10280 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a102f8 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a10398 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x55c810a10438 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x55c810a3b598 <col:60, line:773:5>
|     |-DeclStmt 0x55c810a3a660 <line:767:9, col:26>
|     | `-VarDecl 0x55c810a3a5f8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55c810a3b560 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x55c810a3b580 <line:768:13, col:58>
|       | `-VarDecl 0x55c810a3a688 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55c810a3a868 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55c810a3a838 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55c810a3a820 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55c810a3a800 <col:26, col:58> 'String' (CXXTemporary 0x55c810a3a800)
|       |           `-CXXMemberCallExpr 0x55c810a3a790 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55c810a3a700 <col:26> '<bound member function type>' ->find 0x55c810a2d088
|       |             | `-CXXThisExpr 0x55c810a3a6f0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55c810a3a7c8 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55c810a3a730 <col:31> 'const char *' lvalue ParmVar 0x55c810a10200 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55c810a3a7e0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55c810a3a750 <col:40> 'int' lvalue ParmVar 0x55c810a10280 'flags' 'int'
|       |             `-DeclRefExpr 0x55c810a3a770 <col:47> 'Args::Slot *' lvalue Var 0x55c810a3a5f8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55c810a3a920 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55c810a3a908 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55c810a3a8e8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55c810a3a8b8 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55c810657048
|       |       `-ImplicitCastExpr 0x55c810a3a8a0 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55c810a3a880 <col:20> 'String' lvalue Var 0x55c810a3a688 'str' 'String'
|       `-CompoundStmt 0x55c810a3b538 <col:61, line:772:9>
|         |-DeclStmt 0x55c810a3ac60 <line:769:13, col:66>
|         | `-VarDecl 0x55c810a3a978 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x55c810a3ac30 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55c810a3aba0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55c810a3abe8 <col:49> 'T1' lvalue ParmVar 0x55c810a10398 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x55c810a3ac18 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55c810a3ac08 <col:61> 'Args *' this
|         |-DeclStmt 0x55c810a3afd0 <line:770:13, col:66>
|         | `-VarDecl 0x55c810a3ace8 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x55c810a3afa0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55c810a3af10 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55c810a3af58 <col:49> 'T2' lvalue ParmVar 0x55c810a10438 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x55c810a3af88 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55c810a3af78 <col:61> 'Args *' this
|         `-CallExpr 0x55c810a3b508 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x55c810a3aff8 <col:13> '<bound member function type>' ->postparse 0x55c810a2d298
|           | `-CXXThisExpr 0x55c810a3afe8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55c810a3b4c8 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x55c810a3b068 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x55c810a3b028 <col:23> 'T1 *' lvalue Var 0x55c810a3a978 's1' 'T1 *'
|           | | `-DeclRefExpr 0x55c810a3b048 <col:29> 'T2 *' lvalue Var 0x55c810a3ace8 's2' 'T2 *'
|           | `-CallExpr 0x55c810a3b480 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55c810a3b250 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55c810a3b298 <col:63> 'P' lvalue ParmVar 0x55c810a102f8 'parser' 'P'
|           |   |-DeclRefExpr 0x55c810a3b2b8 <col:71> 'String' lvalue Var 0x55c810a3a688 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55c810a3b368 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55c810a3b2f8 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55c810847ac8 0x55c8108476e8 0x55c810847318 0x55c810846f38 0x55c810846b58 0x55c810846788
|           |   | `-DeclRefExpr 0x55c810a3b2d8 <col:77> 'T1 *' lvalue Var 0x55c810a3a978 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x55c810a3b428 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55c810a3b3b8 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55c810847ac8 0x55c8108476e8 0x55c810847318 0x55c810846f38 0x55c810846b58 0x55c810846788
|           |   | `-DeclRefExpr 0x55c810a3b398 <col:82> 'T2 *' lvalue Var 0x55c810a3ace8 's2' 'T2 *'
|           |   `-UnaryOperator 0x55c810a3b468 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55c810a3b458 <col:87> 'Args *' this
|           `-DeclRefExpr 0x55c810a3b4e8 <col:94> 'Args::Slot *' lvalue Var 0x55c810a3a5f8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55c810a10a18 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x55c810a106a8 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55c810a10978 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55c810a10760 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a107e0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a10858 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55c810a3bab0 <col:67, line:780:5>
|     |-DeclStmt 0x55c810a3b630 <line:777:9, col:26>
|     | `-VarDecl 0x55c810a3b5c8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55c810a3ba78 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x55c810a3ba98 <line:778:13, col:58>
|       | `-VarDecl 0x55c810a3b658 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55c810a3b838 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55c810a3b808 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55c810a3b7f0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55c810a3b7d0 <col:26, col:58> 'String' (CXXTemporary 0x55c810a3b7d0)
|       |           `-CXXMemberCallExpr 0x55c810a3b760 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55c810a3b6d0 <col:26> '<bound member function type>' ->find 0x55c810a2d088
|       |             | `-CXXThisExpr 0x55c810a3b6c0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55c810a3b798 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55c810a3b700 <col:31> 'const char *' lvalue ParmVar 0x55c810a10760 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55c810a3b7b0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55c810a3b720 <col:40> 'int' lvalue ParmVar 0x55c810a107e0 'flags' 'int'
|       |             `-DeclRefExpr 0x55c810a3b740 <col:47> 'Args::Slot *' lvalue Var 0x55c810a3b5c8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55c810a3b8f0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55c810a3b8d8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55c810a3b8b8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55c810a3b888 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55c810657048
|       |       `-ImplicitCastExpr 0x55c810a3b870 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55c810a3b850 <col:20> 'String' lvalue Var 0x55c810a3b658 'str' 'String'
|       `-CallExpr 0x55c810a3ba48 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x55c810a3b918 <col:13> '<bound member function type>' ->postparse 0x55c810a2d298
|         | `-CXXThisExpr 0x55c810a3b908 <col:13> 'Args *' implicit this
|         |-CallExpr 0x55c810a3b9f8 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x55c810a3b968 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x55c810a3b948 <col:23> 'P' lvalue ParmVar 0x55c810a10858 'parser' 'P'
|         | |-DeclRefExpr 0x55c810a3b9b0 <col:36> 'String' lvalue Var 0x55c810a3b658 'str' 'String'
|         | `-UnaryOperator 0x55c810a3b9e0 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x55c810a3b9d0 <col:42> 'Args *' this
|         `-DeclRefExpr 0x55c810a3ba28 <col:49> 'Args::Slot *' lvalue Var 0x55c810a3b5c8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55c810a10db8 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55c810a10a88 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55c810a10d18 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55c810a10b40 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a10bc0 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a10c38 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x55c810a3c420 <col:71, line:792:5>
|     |-DeclStmt 0x55c810a3bb48 <line:784:9, col:26>
|     | `-VarDecl 0x55c810a3bae0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55c810a3bc18 <line:785:9, col:29>
|     | `-VarDecl 0x55c810a3bb78 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55c810a3bc00 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55c810a3bbe0 <col:28> 'int' 1
|     |-WhileStmt 0x55c810a3c2d0 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x55c810a3c2f0 <line:786:16, col:61>
|     | | `-VarDecl 0x55c810a3bc40 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55c810a3be20 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55c810a3bdf0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55c810a3bdd8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55c810a3bdb8 <col:29, col:61> 'String' (CXXTemporary 0x55c810a3bdb8)
|     | |           `-CXXMemberCallExpr 0x55c810a3bd48 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55c810a3bcb8 <col:29> '<bound member function type>' ->find 0x55c810a2d088
|     | |             | `-CXXThisExpr 0x55c810a3bca8 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55c810a3bd80 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55c810a3bce8 <col:34> 'const char *' lvalue ParmVar 0x55c810a10b40 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55c810a3bd98 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55c810a3bd08 <col:43> 'int' lvalue ParmVar 0x55c810a10bc0 'flags' 'int'
|     | |             `-DeclRefExpr 0x55c810a3bd28 <col:50> 'Args::Slot *' lvalue Var 0x55c810a3bae0 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55c810a3bed8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55c810a3bec0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55c810a3bea0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55c810a3be70 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55c810657048
|     | |       `-ImplicitCastExpr 0x55c810a3be58 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55c810a3be38 <col:23> 'String' lvalue Var 0x55c810a3bc40 'str' 'String'
|     | `-CompoundStmt 0x55c810a3c2a8 <col:64, line:790:9>
|     |   |-CallExpr 0x55c810a3c030 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x55c810a3bf00 <col:13> '<bound member function type>' ->postparse 0x55c810a2d298
|     |   | | `-CXXThisExpr 0x55c810a3bef0 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55c810a3bfe0 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55c810a3bf50 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55c810a3bf30 <col:23> 'P' lvalue ParmVar 0x55c810a10c38 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55c810a3bf98 <col:36> 'String' lvalue Var 0x55c810a3bc40 'str' 'String'
|     |   | | `-UnaryOperator 0x55c810a3bfc8 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55c810a3bfb8 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x55c810a3c010 <col:49> 'Args::Slot *' lvalue Var 0x55c810a3bae0 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55c810a3c1c8 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55c810a3c060 <col:13> 'int' lvalue Var 0x55c810a3bb78 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55c810a3c1b0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55c810a3c190 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55c810a3c0f8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55c810a3c0d8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55c810a3c0c0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55c810a3c080 <col:28> 'int' lvalue Var 0x55c810a3bb78 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55c810a3c0a0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55c810a3c178 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55c810a3c148 <col:49> 'bool' lvalue ->_read_status 0x55c8109e8da0
|     |   |         `-ImplicitCastExpr 0x55c810a3c128 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55c810a3c118 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55c810a3c278 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55c810a3c1e8 <col:13> 'int' lvalue ParmVar 0x55c810a10bc0 'flags' 'int'
|     |     `-UnaryOperator 0x55c810a3c260 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55c810a3c248 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55c810a3c228 <col:23> 'const int' lvalue Var 0x55c810a00308 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55c810a3c400 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55c810a3c338 <col:9> 'bool' lvalue ->_read_status 0x55c8109e8da0
|       | `-ImplicitCastExpr 0x55c810a3c318 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55c810a3c308 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55c810a3c3e0 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55c810a3c3c0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55c810a3c3a8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55c810a3c368 <col:25> 'int' lvalue Var 0x55c810a3bb78 'read_status' 'int'
|           `-IntegerLiteral 0x55c810a3c388 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55c810a11298 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55c810a10e28 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a10ea8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a111f8 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55c810a10f68 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a10fe8 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a11060 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a11108 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x55c810a3d3b0 <col:84, line:805:5>
|     |-DeclStmt 0x55c810a3c4c8 <line:796:9, col:26>
|     | `-VarDecl 0x55c810a3c460 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55c810a3c598 <line:797:9, col:29>
|     | `-VarDecl 0x55c810a3c4f8 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55c810a3c580 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55c810a3c560 <col:28> 'int' 1
|     |-DeclStmt 0x55c810a3c8d0 <line:798:9, col:71>
|     | `-VarDecl 0x55c810a3c5e8 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55c810a3c8a0 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55c810a3c810 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x55c810a3c858 <col:55> 'T' lvalue ParmVar 0x55c810a11108 'variable' 'T &'
|     |     `-UnaryOperator 0x55c810a3c888 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55c810a3c878 <col:66> 'Args *' this
|     |-WhileStmt 0x55c810a3d260 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x55c810a3d280 <line:799:16, col:61>
|     | | `-VarDecl 0x55c810a3c8f8 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55c810a3cad8 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55c810a3caa8 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55c810a3ca90 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55c810a3ca70 <col:29, col:61> 'String' (CXXTemporary 0x55c810a3ca70)
|     | |           `-CXXMemberCallExpr 0x55c810a3ca00 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55c810a3c970 <col:29> '<bound member function type>' ->find 0x55c810a2d088
|     | |             | `-CXXThisExpr 0x55c810a3c960 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55c810a3ca38 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55c810a3c9a0 <col:34> 'const char *' lvalue ParmVar 0x55c810a10f68 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55c810a3ca50 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55c810a3c9c0 <col:43> 'int' lvalue ParmVar 0x55c810a10fe8 'flags' 'int'
|     | |             `-DeclRefExpr 0x55c810a3c9e0 <col:50> 'Args::Slot *' lvalue Var 0x55c810a3c460 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55c810a3cb90 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55c810a3cb78 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55c810a3cb58 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55c810a3cb28 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55c810657048
|     | |       `-ImplicitCastExpr 0x55c810a3cb10 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55c810a3caf0 <col:23> 'String' lvalue Var 0x55c810a3c8f8 'str' 'String'
|     | `-CompoundStmt 0x55c810a3d238 <col:64, line:803:9>
|     |   |-CallExpr 0x55c810a3cfc0 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x55c810a3cbb8 <col:13> '<bound member function type>' ->postparse 0x55c810a2d298
|     |   | | `-CXXThisExpr 0x55c810a3cba8 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x55c810a3cf80 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x55c810a3cbe8 <col:23> 'T *' lvalue Var 0x55c810a3c5e8 's' 'T *'
|     |   | | `-CallExpr 0x55c810a3cf40 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x55c810a3cdd0 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x55c810a3ce18 <col:56> 'P' lvalue ParmVar 0x55c810a11060 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x55c810a3ce38 <col:64> 'String' lvalue Var 0x55c810a3c8f8 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x55c810a3cee8 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x55c810a3ce78 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55c810847ac8 0x55c8108476e8 0x55c810847318 0x55c810846f38 0x55c810846b58 0x55c810846788
|     |   | |   | `-DeclRefExpr 0x55c810a3ce58 <col:70> 'T *' lvalue Var 0x55c810a3c5e8 's' 'T *'
|     |   | |   `-UnaryOperator 0x55c810a3cf28 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x55c810a3cf18 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x55c810a3cfa0 <col:81> 'Args::Slot *' lvalue Var 0x55c810a3c460 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55c810a3d158 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55c810a3cff0 <col:13> 'int' lvalue Var 0x55c810a3c4f8 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55c810a3d140 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55c810a3d120 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55c810a3d088 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55c810a3d068 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55c810a3d050 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55c810a3d010 <col:28> 'int' lvalue Var 0x55c810a3c4f8 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55c810a3d030 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55c810a3d108 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55c810a3d0d8 <col:49> 'bool' lvalue ->_read_status 0x55c8109e8da0
|     |   |         `-ImplicitCastExpr 0x55c810a3d0b8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55c810a3d0a8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55c810a3d208 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55c810a3d178 <col:13> 'int' lvalue ParmVar 0x55c810a10fe8 'flags' 'int'
|     |     `-UnaryOperator 0x55c810a3d1f0 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55c810a3d1d8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55c810a3d1b8 <col:23> 'const int' lvalue Var 0x55c810a00308 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55c810a3d390 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55c810a3d2c8 <col:9> 'bool' lvalue ->_read_status 0x55c8109e8da0
|       | `-ImplicitCastExpr 0x55c810a3d2a8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55c810a3d298 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55c810a3d370 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55c810a3d350 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55c810a3d338 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55c810a3d2f8 <col:25> 'int' lvalue Var 0x55c810a3c4f8 'read_status' 'int'
|           `-IntegerLiteral 0x55c810a3d318 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55c810a11878 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x55c810a11310 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55c810a11388 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55c810a117d8 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55c810a11448 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55c810a114c8 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x55c810a11540 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x55c810a11690 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x55c810a404f0 <col:87, line:821:5>
|     |-DeclStmt 0x55c810a3d460 <line:809:9, col:26>
|     | `-VarDecl 0x55c810a3d3f8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55c810a3d530 <line:810:9, col:29>
|     | `-VarDecl 0x55c810a3d490 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55c810a3d518 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55c810a3d4f8 <col:28> 'int' 1
|     |-DeclStmt 0x55c810a3d778 <line:811:9, col:38>
|     | `-VarDecl 0x55c810a3d660 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x55c810a3d750 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55c810a3d6d8 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55c810a3d730 <col:29> 'Vector<T>' lvalue ParmVar 0x55c810a11690 'variable' 'Vector<T> &'
|     |-WhileStmt 0x55c810a403a0 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x55c810a403c0 <line:812:16, col:61>
|     | | `-VarDecl 0x55c810a3d7a0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55c810a3d980 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55c810a3d950 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55c810a3d938 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55c810a3d918 <col:29, col:61> 'String' (CXXTemporary 0x55c810a3d918)
|     | |           `-CXXMemberCallExpr 0x55c810a3d8a8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55c810a3d818 <col:29> '<bound member function type>' ->find 0x55c810a2d088
|     | |             | `-CXXThisExpr 0x55c810a3d808 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55c810a3d8e0 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55c810a3d848 <col:34> 'const char *' lvalue ParmVar 0x55c810a11448 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55c810a3d8f8 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55c810a3d868 <col:43> 'int' lvalue ParmVar 0x55c810a114c8 'flags' 'int'
|     | |             `-DeclRefExpr 0x55c810a3d888 <col:50> 'Args::Slot *' lvalue Var 0x55c810a3d3f8 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55c810a3da38 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55c810a3da20 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55c810a3da00 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55c810a3d9d0 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55c810657048
|     | |       `-ImplicitCastExpr 0x55c810a3d9b8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55c810a3d998 <col:23> 'String' lvalue Var 0x55c810a3d7a0 'str' 'String'
|     | `-CompoundStmt 0x55c810a40368 <col:64, line:819:9>
|     |   |-DeclStmt 0x55c810a3daf8 <line:813:13, col:23>
|     |   | `-VarDecl 0x55c810a3da60 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x55c810a3dad8 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x55c810a3dc78 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x55c810a3db20 <col:13> '<bound member function type>' ->postparse 0x55c810a2d298
|     |   | | `-CXXThisExpr 0x55c810a3db10 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55c810a3dc20 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55c810a3db70 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55c810a3db50 <col:23> 'P' lvalue ParmVar 0x55c810a11540 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55c810a3dbb8 <col:36> 'String' lvalue Var 0x55c810a3d7a0 'str' 'String'
|     |   | | |-DeclRefExpr 0x55c810a3dbd8 <col:41> 'T' lvalue Var 0x55c810a3da60 'sx' 'T'
|     |   | | `-UnaryOperator 0x55c810a3dc08 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55c810a3dbf8 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x55c810a3dc58 <col:53> 'Args::Slot *' lvalue Var 0x55c810a3d3f8 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x55c810a3ddd0 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x55c810a3dd08 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x55c810a3dcd8 <col:17> 'bool' lvalue ->_read_status 0x55c8109e8da0
|     |   | |   `-ImplicitCastExpr 0x55c810a3dcb8 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x55c810a3dca8 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x55c810a3dda8 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x55c810a3dd40 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x55c810a3dd20 <col:17> 'Vector<T> *' lvalue Var 0x55c810a3d660 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x55c810a3dd88 <col:30> 'T' lvalue Var 0x55c810a3da60 'sx' 'T'
|     |   |-BinaryOperator 0x55c810a40288 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55c810a3dde8 <col:13> 'int' lvalue Var 0x55c810a3d490 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55c810a40270 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55c810a40250 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55c810a401b8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55c810a40198 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55c810a40180 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55c810a3de08 <col:28> 'int' lvalue Var 0x55c810a3d490 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55c810a40160 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55c810a40238 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55c810a40208 <col:49> 'bool' lvalue ->_read_status 0x55c8109e8da0
|     |   |         `-ImplicitCastExpr 0x55c810a401e8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55c810a401d8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55c810a40338 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55c810a402a8 <col:13> 'int' lvalue ParmVar 0x55c810a114c8 'flags' 'int'
|     |     `-UnaryOperator 0x55c810a40320 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55c810a40308 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55c810a402e8 <col:23> 'const int' lvalue Var 0x55c810a00308 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55c810a404d0 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55c810a40408 <col:9> 'bool' lvalue ->_read_status 0x55c8109e8da0
|       | `-ImplicitCastExpr 0x55c810a403e8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55c810a403d8 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55c810a404b0 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55c810a40490 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55c810a40478 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55c810a40438 <col:25> 'int' lvalue Var 0x55c810a3d490 'read_status' 'int'
|           `-IntegerLiteral 0x55c810a40458 <col:40> 'int' 1
|-AccessSpecDecl 0x55c810a118f0 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x55c810a11918 prev 0x55c8109fe608 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x55c810a11a10 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x55c810a11b00 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x55c810a40528 <col:16, line:828:9>
| |-CXXDestructorDecl 0x55c810a11bf0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x55c810a40538 <col:25, line:830:9>
| |-CXXMethodDecl 0x55c810a11cf0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x55c810a11da0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x55c810a11e48 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55c810a11e48
| | `-ParmVarDecl 0x55c810a11f58 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x55c810a12718 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55c810a12718
|   `-ParmVarDecl 0x55c810a12828 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x55c810a11fc8 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x55c810a12128 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x55c810a12320 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x55c810a121d0 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x55c810a12248 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x55c810a40718 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x55c810a125d8 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x55c810a40588 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55c810a40548 <col:20> 'void *' lvalue ParmVar 0x55c810a121d0 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x55c810a12640 '_slot' 'char *'
| | | `-CXXNewExpr 0x55c810a40610 <col:32, col:45> 'char *' array Function 0x55c8104719d8 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x55c810a405f8 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x55c810a405c8 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x55c810a12248 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x55c810a126a0 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x55c810a406d8 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x55c810a40698 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x55c810a12248 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x55c810a40798 <col:61, line:838:9>
| |-CXXDestructorDecl 0x55c810a12420 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x55c810a11bf0 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x55c810a40820 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x55c810a40800 <line:840:13, col:22> 'void' array Function 0x55c810471d38 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x55c810a407e8 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x55c810a407b8 <col:22> 'char *' lvalue ->_slot 0x55c810a12640
| |         `-CXXThisExpr 0x55c810a407a8 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x55c810a12520 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x55c810a11cf0 Slot::store 'void ()' ]
| | `-CompoundStmt 0x55c810a40a10 <col:22, line:844:9>
| |   `-CallExpr 0x55c810a40978 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x55c810a40960 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55c810a40940 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55c81057f348 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x55c810a409b0 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x55c810a40890 <col:20> 'void *' lvalue ->_ptr 0x55c810a125d8
| |     |   `-CXXThisExpr 0x55c810a40880 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x55c810a409e0 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x55c810a409c8 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x55c810a408d0 <col:26> 'char *' lvalue ->_slot 0x55c810a12640
| |     |     `-CXXThisExpr 0x55c810a408c0 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x55c810a409f8 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x55c810a40910 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x55c810a126a0
| |         `-CXXThisExpr 0x55c810a40900 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x55c810a125d8 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x55c810a12640 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x55c810a126a0 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x55c810a12898 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55c810a12898
| | `-ParmVarDecl 0x55c810a129a8 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x55c810a12a48 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55c810a12a48
|   `-ParmVarDecl 0x55c810a12b58 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x55c810a12cf8 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x55c810a12bc8 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x55c810a12c68 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x55c810a12f90 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x55c810a13188 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x55c810a13058 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x55c810a13308 '_ptr' 'T *'
|   | | `-ParenListExpr 0x55c810a40a48 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x55c810a40a28 <col:20> 'T *' lvalue ParmVar 0x55c810a13058 'ptr' 'T *'
|   | `-CompoundStmt 0x55c810a40a98 <col:25, line:854:9>
|   |-CXXMethodDecl 0x55c810a13258 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x55c810a11cf0 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x55c810a40c58 <col:22, line:857:9>
|   |   `-CallExpr 0x55c810a40c28 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x55c810a40aa8 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x55c81094d5a8 0x55c81092aed8 0x55c81064aa18 0x55c8105f9e58
|   |     |-CXXOperatorCallExpr 0x55c810a40bb8 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x55c810a40b48 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55c810847ac8 0x55c8108476e8 0x55c810847318 0x55c810846f38 0x55c810846b58 0x55c810846788
|   |     | `-MemberExpr 0x55c810a40b18 <col:29> 'T *' lvalue ->_ptr 0x55c810a13308
|   |     |   `-CXXThisExpr 0x55c810a40b08 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x55c810a40bf8 <col:35> 'T' lvalue ->_slot 0x55c810a13368
|   |       `-CXXThisExpr 0x55c810a40be8 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x55c810a13308 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x55c810a13368 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x55c810a133d0 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x55c810a134d0 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x55c810a13520 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810a134b0 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x55c810a13490 <col:31> 'int' 48
|-FieldDecl 0x55c810a13548 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x55c810a135a8 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x55c810a13608 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x55c810a13740 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x55c810a2c930 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55c810a2c990 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x55c810a2ca40 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x55c810a2cc68 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x55c810a2cb70 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x55c810a2cdb8 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x55c810a2cd28 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x55c810a2d088 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x55c810a2ce78 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x55c810a2cef8 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x55c810a2cfa0 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x55c810a2d298 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x55c810a2d150 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x55c810a2d1c8 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x55c810a2d368 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x55c810a2d4b8 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x55c810a2d420 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x55c810a2d848 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x55c810a2d578 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x55c810a2d5f8 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x55c810a2d6a0 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x55c810a2d758 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x55c810a2da70 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x55c810a2d920 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x55c810a2d998 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x55c810a2dd88 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x55c810a2db20 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x55c810a2dce8 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x55c810a2dbf8 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class SecondsArg
         0 |   class NumArg (base) (empty)
         0 |   int fraction_digits
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810a493c0 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c810a494d8 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55c810a49568 <col:16, col:22> col:16 public
|-EnumDecl 0x55c810a49590 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55c810a49690 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55c810a498e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810a49670 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55c810a49650 <col:21> 'int' 0
| |-EnumConstantDecl 0x55c810a49720 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55c810a498f8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810a49700 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55c810a496e0 <col:24> 'int' 22
| |-EnumConstantDecl 0x55c810a497b0 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55c810a49910 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810a49790 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55c810a49770 <col:24> 'int' 34
| |-EnumConstantDecl 0x55c810a49840 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55c810a49928 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810a49820 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55c810a49800 <col:25> 'int' 95
| `-EnumConstantDecl 0x55c810a49890 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55c810a4b2a0 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c810a4b6d8 <col:7>
|-CXXConstructorDecl 0x55c810a4b3a8 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55c810a4b3a8
| `-ParmVarDecl 0x55c810a4b4b8 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55c810a4b558 <col:7> col:7 implicit used constexpr NumArg 'void (NumArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55c810a4b668 <col:7> col:7 'NumArg &&'
| `-CompoundStmt 0x55c810b45920 <col:7>
`-CXXDestructorDecl 0x55c810a4d9a8 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810a59528 <../dummy_inc/click/args.hh:1310:1, line:1321:1> line:1310:7 referenced class SecondsArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55c810a59688 <col:1, col:7> col:7 implicit referenced class SecondsArg
|-AccessSpecDecl 0x55c810a59718 <col:36, col:42> col:36 public
|-CXXConstructorDecl 0x55c810a59828 <line:1311:5, line:1313:5> line:1311:5 used SecondsArg 'void (int)'
| |-ParmVarDecl 0x55c810a59758 <col:16, col:24> col:20 used d 'int' cinit
| | `-IntegerLiteral 0x55c810a5a0d0 <col:24> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55c810a5a1d0 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55c810a5a000 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x55c810a5a190 <line:1312:27> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55c810a5a150 <col:27> 'int' lvalue ParmVar 0x55c810a59758 'd' 'int'
| `-CompoundStmt 0x55c810a5a240 <col:30, line:1313:5>
|-CXXMethodDecl 0x55c810a59a78 <line:1314:5, col:99> col:10 parse_saturating 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x55c810a598e8 <col:27, col:41> col:41 str 'const String &'
| |-ParmVarDecl 0x55c810a59960 <col:46, col:56> col:56 result 'uint32_t &'
| `-ParmVarDecl 0x55c810a599d8 <col:64, col:89> col:82 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55c810a5a0f0 <col:89> 'const ArgContext' lvalue Var 0x55c810a40c80 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55c810a59cd0 <line:1315:5, col:88> col:10 parse 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x55c810a59b40 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55c810a59bb8 <col:35, col:45> col:45 result 'uint32_t &'
| `-ParmVarDecl 0x55c810a59c30 <col:53, col:78> col:71 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55c810a5a110 <col:78> 'const ArgContext' lvalue Var 0x55c810a40c80 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55c810a59f30 <line:1317:5, col:86> col:10 parse 'bool (const String &, double &, const ArgContext &)'
| |-ParmVarDecl 0x55c810a59d98 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55c810a59e18 <col:35, col:43> col:43 result 'double &'
| `-ParmVarDecl 0x55c810a59e90 <col:51, col:76> col:69 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55c810a5a130 <col:76> 'const ArgContext' lvalue Var 0x55c810a40c80 'blank_args' 'const ArgContext'
|-FieldDecl 0x55c810a5a000 <line:1319:5, col:9> col:9 referenced fraction_digits 'int'
|-FieldDecl 0x55c810a5a068 <line:1320:5, col:9> col:9 referenced status 'int'
|-CXXConstructorDecl 0x55c810b44dd8 <line:1310:7> col:7 implicit constexpr SecondsArg 'void (const SecondsArg &)' inline default trivial noexcept-unevaluated 0x55c810b44dd8
| `-ParmVarDecl 0x55c810b44ee8 <col:7> col:7 'const SecondsArg &'
|-CXXConstructorDecl 0x55c810b44f88 <col:7> col:7 implicit used constexpr SecondsArg 'void (SecondsArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55c810b45098 <col:7> col:7 used 'SecondsArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55c810b45930 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55c810b45900 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x55c810b458d0 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x55c810b458a0 <col:7> 'SecondsArg' lvalue ParmVar 0x55c810b45098 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x55c810a5a000 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x55c810b45a28 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55c810b459f8 <col:7> 'int' xvalue .fraction_digits 0x55c810a5a000
| |     `-CXXStaticCastExpr 0x55c810b459c8 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x55c810b45998 <col:7> 'SecondsArg' lvalue ParmVar 0x55c810b45098 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x55c810a5a068 'status' 'int'
| | `-ImplicitCastExpr 0x55c810b45af8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55c810b45ac8 <col:7> 'int' xvalue .status 0x55c810a5a068
| |     `-CXXStaticCastExpr 0x55c810b45a98 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x55c810b45a68 <col:7> 'SecondsArg' lvalue ParmVar 0x55c810b45098 '' 'SecondsArg &&'
| `-CompoundStmt 0x55c810b45b50 <col:7>
`-CXXDestructorDecl 0x55c810b45160 <col:7> col:7 implicit referenced ~SecondsArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.SecondsArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.SecondsArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterPattern
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   int _sport
         8 |   class IPAddress _daddr
         8 |     uint32_t _addr
        12 |   int _dport
        16 |   uint32_t _variation_top
        20 |   uint32_t _next_variation
        24 |   _Bool _is_napt
        25 |   _Bool _sequential
        26 |   _Bool _same_first
        28 |   int _refcount
           | [sizeof=32, dsize=32, align=4,
           |  nvsize=32, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810933870 <../elements/ip/iprwpattern.hh:12:1, line:68:1> line:12:7 class IPRewriterPattern definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c810933988 <col:1, col:7> col:7 implicit referenced class IPRewriterPattern
|-AccessSpecDecl 0x55c810933a18 <col:27, col:33> col:27 public
|-CXXConstructorDecl 0x55c810933f88 <line:14:5, line:17:27> line:14:5 IPRewriterPattern 'void (const IPAddress &, int, const IPAddress &, int, bool, bool, bool, uint32_t)'
| |-ParmVarDecl 0x55c810933a50 <col:23, col:40> col:40 saddr 'const IPAddress &'
| |-ParmVarDecl 0x55c810933ad0 <col:47, col:51> col:51 sport 'int'
| |-ParmVarDecl 0x55c810933b48 <line:15:9, col:26> col:26 daddr 'const IPAddress &'
| |-ParmVarDecl 0x55c810933bc8 <col:33, col:37> col:37 dport 'int'
| |-ParmVarDecl 0x55c810933c40 <line:16:9, col:14> col:14 is_napt 'bool'
| |-ParmVarDecl 0x55c810933cb8 <col:23, col:28> col:28 sequential 'bool'
| |-ParmVarDecl 0x55c810933d30 <col:40, col:45> col:45 same_first 'bool'
| `-ParmVarDecl 0x55c810933da8 <line:17:9, col:18> col:18 variation 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c810934468 <line:18:5, line:19:45> line:18:17 parse 'bool (const Vector<String> &, IPRewriterPattern **, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55c810934180 <col:23, col:45> col:45 words 'const Vector<String> &'
| |-ParmVarDecl 0x55c810934230 <col:52, col:72> col:72 result 'IPRewriterPattern **'
| |-ParmVarDecl 0x55c8109342a8 <line:19:9, col:18> col:18 context 'Element *'
| `-ParmVarDecl 0x55c810934320 <col:27, col:41> col:41 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c810934918 <line:20:5, line:21:42> line:20:17 parse_ports 'bool (const Vector<String> &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55c810934610 <col:29, col:51> col:51 words 'const Vector<String> &'
| |-ParmVarDecl 0x55c8109346b8 <col:58, col:75> col:75 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55c810934730 <line:21:8, col:17> col:17 model 'Element *'
| `-ParmVarDecl 0x55c8109347d0 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c810934c48 <line:22:5, line:23:42> line:22:17 parse_with_ports 'bool (const String &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55c8109349e8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55c810934a60 <col:53, col:70> col:70 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55c810934ad8 <line:23:6, col:15> col:15 context 'Element *'
| `-ParmVarDecl 0x55c810934b50 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c810934d28 <line:25:5, line:27:5> line:25:10 use 'void ()'
| `-CompoundStmt 0x55c810936080 <col:16, line:27:5>
|   `-UnaryOperator 0x55c810936068 <line:26:2, col:11> 'int' postfix '++'
|     `-MemberExpr 0x55c810936038 <col:2> 'int' lvalue ->_refcount 0x55c810935c68
|       `-CXXThisExpr 0x55c810936028 <col:2> 'IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55c810934de8 <line:28:5, line:31:5> line:28:10 unuse 'void ()'
| `-CompoundStmt 0x55c810936278 <col:18, line:31:5>
|   `-IfStmt 0x55c810936260 <line:29:2, line:30:13>
|     |-BinaryOperator 0x55c810936128 <line:29:6, col:21> 'bool' '<='
|     | |-ImplicitCastExpr 0x55c810936110 <col:6, col:8> 'int' <LValueToRValue>
|     | | `-UnaryOperator 0x55c8109360d8 <col:6, col:8> 'int' lvalue prefix '--'
|     | |   `-MemberExpr 0x55c8109360a8 <col:8> 'int' lvalue ->_refcount 0x55c810935c68
|     | |     `-CXXThisExpr 0x55c810936098 <col:8> 'IPRewriterPattern *' implicit this
|     | `-IntegerLiteral 0x55c8109360f0 <col:21> 'int' 0
|     `-CXXDeleteExpr 0x55c810936240 <line:30:6, col:13> 'void' Function 0x55c810471b88 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x55c810936148 <col:13> 'IPRewriterPattern *' this
|-CXXConversionDecl 0x55c810934ee8 <line:33:5, line:35:5> line:33:5 operator bool 'bool () const'
| `-CompoundStmt 0x55c810936560 <col:27, line:35:5>
|   `-ReturnStmt 0x55c810936550 <line:34:2, col:39>
|     `-BinaryOperator 0x55c810936530 <col:9, col:39> 'bool' '||'
|       |-BinaryOperator 0x55c8109364a0 <col:9, col:29> 'bool' '||'
|       | |-BinaryOperator 0x55c8109363c0 <col:9, col:19> 'bool' '||'
|       | | |-ImplicitCastExpr 0x55c810936378 <col:9> 'bool' <IntegralToBoolean>
|       | | | `-ImplicitCastExpr 0x55c810936360 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | | |   `-CXXMemberCallExpr 0x55c810936340 <col:9> 'uint32_t':'unsigned int'
|       | | |     `-MemberExpr 0x55c810936310 <col:9> '<bound member function type>' .operator unsigned int 0x55c81068e368
|       | | |       `-MemberExpr 0x55c8109362a0 <col:9> 'const IPAddress' lvalue ->_saddr 0x55c8109358f0
|       | | |         `-CXXThisExpr 0x55c810936290 <col:9> 'const IPRewriterPattern *' implicit this
|       | | `-ImplicitCastExpr 0x55c8109363a8 <col:19> 'bool' <IntegralToBoolean>
|       | |   `-ImplicitCastExpr 0x55c810936390 <col:19> 'int' <LValueToRValue>
|       | |     `-MemberExpr 0x55c8109362e0 <col:19> 'const int' lvalue ->_sport 0x55c810935958
|       | |       `-CXXThisExpr 0x55c8109362d0 <col:19> 'const IPRewriterPattern *' implicit this
|       | `-ImplicitCastExpr 0x55c810936488 <col:29> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55c810936470 <col:29> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x55c810936450 <col:29> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x55c810936420 <col:29> '<bound member function type>' .operator unsigned int 0x55c81068e368
|       |         `-MemberExpr 0x55c8109363f0 <col:29> 'const IPAddress' lvalue ->_daddr 0x55c8109359b8
|       |           `-CXXThisExpr 0x55c8109363e0 <col:29> 'const IPRewriterPattern *' implicit this
|       `-ImplicitCastExpr 0x55c810936518 <col:39> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55c810936500 <col:39> 'int' <LValueToRValue>
|           `-MemberExpr 0x55c8109364d0 <col:39> 'const int' lvalue ->_dport 0x55c810935a20
|             `-CXXThisExpr 0x55c8109364c0 <col:39> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55c810934fb8 <line:36:5, line:38:5> line:36:15 daddr 'IPAddress () const'
| `-CompoundStmt 0x55c8109365f8 <col:29, line:38:5>
|   `-ReturnStmt 0x55c8109365e8 <line:37:2, col:9>
|     `-CXXConstructExpr 0x55c8109365b8 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55c810936588 <col:9> 'const IPAddress' lvalue ->_daddr 0x55c8109359b8
|         `-CXXThisExpr 0x55c810936578 <col:9> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55c810935680 <line:40:5, line:41:57> line:40:9 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, const HashContainer<IPRewriterEntry> &)'
| |-ParmVarDecl 0x55c810935068 <col:24, col:40> col:40 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55c810935108 <col:48, col:58> col:58 rewritten_flowid 'IPFlowID &'
| `-ParmVarDecl 0x55c810935550 <line:41:10, col:48> col:48 reply_map 'const HashContainer<IPRewriterEntry> &'
|-CXXMethodDecl 0x55c810935758 <line:43:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55c810935818 <line:45:5, line:47:5> line:45:21 get_flow_id 'IPFlowID () const' inline
| `-CompoundStmt 0x55c8109368a0 <col:41, line:47:5>
|   `-ReturnStmt 0x55c810936890 <line:46:9, col:55>
|     `-ExprWithCleanups 0x55c810936878 <col:16, col:55> 'IPFlowID'
|       `-CXXConstructExpr 0x55c810936848 <col:16, col:55> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55c810936830 <col:16, col:55> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x55c8109367e0 <col:16, col:55> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x55c810936720 <col:25> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55c810936630 <col:25> 'const IPAddress' lvalue ->_saddr 0x55c8109358f0
|             |   `-CXXThisExpr 0x55c810936620 <col:25> 'const IPRewriterPattern *' implicit this
|             |-ImplicitCastExpr 0x55c810936768 <col:33> 'uint16_t':'unsigned short' <IntegralCast>
|             | `-ImplicitCastExpr 0x55c810936750 <col:33> 'int' <LValueToRValue>
|             |   `-MemberExpr 0x55c810936670 <col:33> 'const int' lvalue ->_sport 0x55c810935958
|             |     `-CXXThisExpr 0x55c810936660 <col:33> 'const IPRewriterPattern *' implicit this
|             |-CXXConstructExpr 0x55c810936780 <col:41> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55c8109366b0 <col:41> 'const IPAddress' lvalue ->_daddr 0x55c8109359b8
|             |   `-CXXThisExpr 0x55c8109366a0 <col:41> 'const IPRewriterPattern *' implicit this
|             `-ImplicitCastExpr 0x55c8109367c8 <col:49> 'uint16_t':'unsigned short' <IntegralCast>
|               `-ImplicitCastExpr 0x55c8109367b0 <col:49> 'int' <LValueToRValue>
|                 `-MemberExpr 0x55c8109366f0 <col:49> 'const int' lvalue ->_dport 0x55c810935a20
|                   `-CXXThisExpr 0x55c8109366e0 <col:49> 'const IPRewriterPattern *' implicit this
|-AccessSpecDecl 0x55c8109358b8 <line:49:1, col:8> col:1 private
|-FieldDecl 0x55c8109358f0 <line:51:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x55c810935958 <line:52:5, col:9> col:9 referenced _sport 'int'
|-FieldDecl 0x55c8109359b8 <line:53:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x55c810935a20 <line:54:5, col:9> col:9 referenced _dport 'int'
|-FieldDecl 0x55c810935a80 <line:56:5, col:14> col:14 _variation_top 'uint32_t':'unsigned int'
|-FieldDecl 0x55c810935ae0 <line:57:5, col:14> col:14 _next_variation 'uint32_t':'unsigned int'
|-FieldDecl 0x55c810935b40 <line:59:5, col:10> col:10 _is_napt 'bool'
|-FieldDecl 0x55c810935ba0 <line:60:5, col:10> col:10 _sequential 'bool'
|-FieldDecl 0x55c810935c00 <line:61:5, col:10> col:10 _same_first 'bool'
|-FieldDecl 0x55c810935c68 <line:63:5, col:9> col:9 referenced _refcount 'int'
|-CXXConstructorDecl 0x55c810935db8 <line:65:5, col:47> col:5 IPRewriterPattern 'void (const IPRewriterPattern &)'
| `-ParmVarDecl 0x55c810935cf8 <col:23, col:46> col:47 'const IPRewriterPattern &'
|-CXXMethodDecl 0x55c810935f68 <line:66:5, col:58> col:24 operator= 'IPRewriterPattern &(const IPRewriterPattern &)'
| `-ParmVarDecl 0x55c810935e78 <col:34, col:57> col:58 'const IPRewriterPattern &'
`-CXXDestructorDecl 0x55c810936158 <line:12:7> col:7 implicit ~IPRewriterPattern 'void ()' inline default trivial noexcept-unevaluated 0x55c810936158

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPMapper
         0 |   (IPMapper vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c81097f910 prev 0x55c810950df0 <../elements/ip/iprewriterbase.hh:185:1, line:197:1> line:185:7 class IPMapper definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c81097fa08 <col:1, col:7> col:7 implicit referenced class IPMapper
|-AccessSpecDecl 0x55c81097fa98 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55c81097faf8 <line:187:5, col:18> col:5 IPMapper 'void ()'
| `-CompoundStmt 0x55c810980518 <col:16, col:18>
|-CXXDestructorDecl 0x55c81097fbe8 <line:188:5, col:27> col:13 ~IPMapper 'void () noexcept' virtual
| `-CompoundStmt 0x55c810980528 <col:25, col:27>
|-CXXMethodDecl 0x55c81097feb8 <line:190:5, line:191:24> line:190:18 notify_rewriter 'void (IPRewriterBase *, IPRewriterInput *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55c81097fce0 <col:34, col:50> col:50 user 'IPRewriterBase *'
| |-ParmVarDecl 0x55c81097fd58 <col:56, col:73> col:73 input 'IPRewriterInput *'
| `-ParmVarDecl 0x55c81097fdd0 <line:191:6, col:20> col:20 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c810980270 <line:192:5, line:195:31> line:192:17 rewrite_flowid 'int (IPRewriterInput *, const IPFlowID &, IPFlowID &, Packet *, int)' virtual
| |-ParmVarDecl 0x55c81097ff80 <col:32, col:49> col:49 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55c81097fff8 <line:193:11, col:27> col:27 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55c810980070 <line:194:11, col:21> col:21 rewritten_flowid 'IPFlowID &'
| |-ParmVarDecl 0x55c8109800e8 <line:195:11, col:19> col:19 p 'Packet *'
| `-ParmVarDecl 0x55c810980168 <col:22, col:26> col:26 mapid 'int'
`-CXXMethodDecl 0x55c810980398 <line:185:7> col:7 implicit operator= 'IPMapper &(const IPMapper &)' inline default noexcept-unevaluated 0x55c810980398
  `-ParmVarDecl 0x55c8109804a8 <col:7> col:7 'const IPMapper &'

Layout: <CGRecordLayout
  LLVMType:%class.IPMapper = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.IPMapper = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810951678 <../elements/ip/iprewriterbase.hh:23:5, line:26:5> line:23:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x55c8109517a8 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
|-FieldDecl 0x55c810951838 <line:25:2, col:12> col:12 mapper 'IPMapper *'
|-CXXConstructorDecl 0x55c8109522f8 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c810952728 <col:5>
|-CXXConstructorDecl 0x55c8109523f8 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x55c8109523f8
| `-ParmVarDecl 0x55c810952508 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
`-CXXConstructorDecl 0x55c8109525a8 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x55c8109525a8
  `-ParmVarDecl 0x55c8109526b8 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon.25 = type { %class.IPRewriterPattern* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810950f30 prev 0x55c810936ab0 <../elements/ip/iprewriterbase.hh:11:1, line:40:1> line:11:7 referenced class IPRewriterInput definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55c810951028 <col:1, col:7> col:7 implicit referenced class IPRewriterInput
|-AccessSpecDecl 0x55c8109510b8 <col:25, col:31> col:25 public
|-EnumDecl 0x55c8109510e0 <line:12:5, line:14:5> line:12:5
| |-EnumConstantDecl 0x55c8109511a0 <line:13:2> col:2 referenced i_drop 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55c8109511f0 <col:10> col:10 i_nochange 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55c810951240 <col:22> col:22 i_keep 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55c810951290 <col:30> col:30 i_pattern 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| `-EnumConstantDecl 0x55c8109512e0 <col:41> col:41 i_mapper 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
|-FieldDecl 0x55c810951368 <line:15:5, col:21> col:21 owner 'IPRewriterBase *'
|-FieldDecl 0x55c8109513d0 <line:16:5, col:9> col:9 owner_input 'int'
|-FieldDecl 0x55c810951438 <line:17:5, col:9> col:9 kind 'int'
|-FieldDecl 0x55c8109514a0 <line:18:5, col:9> col:9 foutput 'int'
|-FieldDecl 0x55c810951500 <line:19:5, col:21> col:21 referenced reply_element 'IPRewriterBase *'
|-FieldDecl 0x55c810951568 <line:20:5, col:9> col:9 routput 'int'
|-FieldDecl 0x55c8109515c8 <line:21:5, col:14> col:14 count 'uint32_t':'unsigned int'
|-FieldDecl 0x55c810951628 <line:22:5, col:14> col:14 failures 'uint32_t':'unsigned int'
|-CXXRecordDecl 0x55c810951678 <line:23:5, line:26:5> line:23:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x55c8109517a8 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
| |-FieldDecl 0x55c810951838 <line:25:2, col:12> col:12 mapper 'IPMapper *'
| |-CXXConstructorDecl 0x55c8109522f8 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55c810952728 <col:5>
| |-CXXConstructorDecl 0x55c8109523f8 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x55c8109523f8
| | `-ParmVarDecl 0x55c810952508 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
| `-CXXConstructorDecl 0x55c8109525a8 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x55c8109525a8
|   `-ParmVarDecl 0x55c8109526b8 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'
|-FieldDecl 0x55c8109518f8 <col:5, line:26:7> col:7 referenced u 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
|-CXXConstructorDecl 0x55c810951998 <line:28:5, line:31:5> line:28:5 IPRewriterInput 'void ()'
| |-CXXCtorInitializer Field 0x55c810951438 'kind' 'int'
| | `-ImplicitCastExpr 0x55c8109520a0 <line:29:9> 'int' <IntegralCast>
| |   `-DeclRefExpr 0x55c810952060 <col:9> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)' EnumConstant 0x55c8109511a0 'i_drop' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-CXXCtorInitializer Field 0x55c8109514a0 'foutput' 'int'
| | `-UnaryOperator 0x55c810952100 <col:26, col:27> 'int' prefix '-'
| |   `-IntegerLiteral 0x55c8109520e0 <col:27> 'int' 1
| |-CXXCtorInitializer Field 0x55c810951568 'routput' 'int'
| | `-UnaryOperator 0x55c810952180 <col:39, col:40> 'int' prefix '-'
| |   `-IntegerLiteral 0x55c810952160 <col:40> 'int' 1
| |-CXXCtorInitializer Field 0x55c8109515c8 'count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55c810952220 <col:50> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c8109521e0 <col:50> 'int' 0
| |-CXXCtorInitializer Field 0x55c810951628 'failures' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55c8109522a0 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55c810952260 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55c8109518f8 'u' 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
| | `-CXXConstructExpr 0x55c810952738 <line:28:5> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' 'void () noexcept'
| `-CompoundStmt 0x55c810952880 <line:29:66, line:31:5>
|   `-BinaryOperator 0x55c810952860 <line:30:2, col:14> 'IPRewriterPattern *' lvalue '='
|     |-MemberExpr 0x55c8109527f8 <col:2, col:4> 'IPRewriterPattern *' lvalue .pattern 0x55c8109517a8
|     | `-MemberExpr 0x55c8109527c8 <col:2> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' lvalue ->u 0x55c8109518f8
|     |   `-CXXThisExpr 0x55c8109527b8 <col:2> 'IPRewriterInput *' implicit this
|     `-ImplicitCastExpr 0x55c810952848 <col:14> 'IPRewriterPattern *' <NullToPointer>
|       `-IntegerLiteral 0x55c810952828 <col:14> 'int' 0
|-EnumDecl 0x55c810951a40 <line:33:5, line:35:5> line:33:5
| |-EnumConstantDecl 0x55c810951b40 <line:34:2, col:18> col:2 referenced mapid_default 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
| | `-ImplicitCastExpr 0x55c810951c20 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810951b20 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x55c810951b00 <col:18> 'int' 0
| `-EnumConstantDecl 0x55c810951bd0 <col:21, col:44> col:21 referenced mapid_iprewriter_udp 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   `-ImplicitCastExpr 0x55c810951c38 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810951bb0 <col:44> 'int' Int: 1
|       `-IntegerLiteral 0x55c810951b90 <col:44> 'int' 1
`-CXXMethodDecl 0x55c810951ed0 <line:37:5, line:39:46> line:37:44 used rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
  |-ParmVarDecl 0x55c810951c60 <col:59, col:75> col:75 flowid 'const IPFlowID &'
  |-ParmVarDecl 0x55c810951cd8 <line:38:10, col:20> col:20 rewritten_flowid 'IPFlowID &'
  |-ParmVarDecl 0x55c810951d50 <line:39:10, col:18> col:18 p 'Packet *'
  |-ParmVarDecl 0x55c810951dd0 <col:21, col:33> col:25 mapid 'int' cinit
  | `-ImplicitCastExpr 0x55c810952048 <col:33> 'int' <IntegralCast>
  |   `-DeclRefExpr 0x55c810952028 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55c810951b40 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
  |-NoInlineAttr 0x55c810951f90 <line:37:20>
  `-OptimizeNoneAttr 0x55c810951fe8 <col:30>

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.25 }
  NonVirtualBaseLLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.25 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8109393f0 prev 0x55c810936970 <../elements/ip/iprwmapping.hh:68:1, line:174:1> line:68:7 referenced class IPRewriterFlow definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c8109394e8 <col:1, col:7> col:7 implicit referenced class IPRewriterFlow
|-AccessSpecDecl 0x55c810939578 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55c810939998 <line:70:5, line:72:61> line:70:5 used IPRewriterFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55c8109395b0 <col:20, col:37> col:37 owner 'IPRewriterInput *'
| |-ParmVarDecl 0x55c810939628 <col:44, col:60> col:60 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55c8109396a0 <line:71:6, col:22> col:22 rewritten_flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55c810939718 <line:72:6, col:14> col:14 ip_p 'uint8_t':'unsigned char'
| |-ParmVarDecl 0x55c810939790 <col:20, col:25> col:25 guaranteed 'bool'
| `-ParmVarDecl 0x55c810939808 <col:37, col:53> col:53 expiry_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55c810939b78 <line:74:5, line:76:5> line:74:22 used entry 'IPRewriterEntry &(bool)'
| |-ParmVarDecl 0x55c810939a80 <col:28, col:33> col:33 used direction 'bool'
| `-CompoundStmt 0x55c81093d970 <col:44, line:76:5>
|   `-ReturnStmt 0x55c81093d960 <line:75:2, col:21>
|     `-ArraySubscriptExpr 0x55c81093d940 <col:9, col:21> 'IPRewriterEntry' lvalue
|       |-ImplicitCastExpr 0x55c81093d910 <col:9> 'IPRewriterEntry *' <ArrayToPointerDecay>
|       | `-MemberExpr 0x55c81093d8c0 <col:9> 'IPRewriterEntry [2]' lvalue ->_e 0x55c81093c148
|       |   `-CXXThisExpr 0x55c81093d8b0 <col:9> 'IPRewriterFlow *' implicit this
|       `-ImplicitCastExpr 0x55c81093d928 <col:12> 'bool' <LValueToRValue>
|         `-DeclRefExpr 0x55c81093d8f0 <col:12> 'bool' lvalue ParmVar 0x55c810939a80 'direction' 'bool'
|-CXXMethodDecl 0x55c810939d28 <line:77:5, line:79:5> line:77:28 entry 'const IPRewriterEntry &(bool) const'
| |-ParmVarDecl 0x55c810939c30 <col:34, col:39> col:39 used direction 'bool'
| `-CompoundStmt 0x55c81093da88 <col:56, line:79:5>
|   `-ReturnStmt 0x55c81093da78 <line:78:2, col:21>
|     `-ArraySubscriptExpr 0x55c81093da58 <col:9, col:21> 'const IPRewriterEntry' lvalue
|       |-ImplicitCastExpr 0x55c81093da28 <col:9> 'const IPRewriterEntry *' <ArrayToPointerDecay>
|       | `-MemberExpr 0x55c81093d998 <col:9> 'IPRewriterEntry const[2]' lvalue ->_e 0x55c81093c148
|       |   `-CXXThisExpr 0x55c81093d988 <col:9> 'const IPRewriterFlow *' implicit this
|       `-ImplicitCastExpr 0x55c81093da40 <col:12> 'bool' <LValueToRValue>
|         `-DeclRefExpr 0x55c81093d9c8 <col:12> 'bool' lvalue ParmVar 0x55c810939c30 'direction' 'bool'
|-CXXMethodDecl 0x55c810939df0 <line:83:5, line:85:5> line:83:21 used expiry 'click_jiffies_t () const'
| `-CompoundStmt 0x55c81093db08 <col:36, line:85:5>
|   `-ReturnStmt 0x55c81093daf8 <line:84:2, col:9>
|     `-ImplicitCastExpr 0x55c81093dae0 <col:9> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55c81093dab0 <col:9> 'const click_jiffies_t':'const unsigned int' lvalue ->_expiry_j 0x55c81093c268
|         `-CXXThisExpr 0x55c81093daa0 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55c810939f98 <line:89:5, line:91:5> line:89:10 expired 'bool (click_jiffies_t) const'
| |-ParmVarDecl 0x55c810939ea0 <col:18, col:34> col:34 used now_j 'click_jiffies_t':'unsigned int'
| `-CompoundStmt 0x55c81093dd28 <col:47, line:91:5>
|   `-ReturnStmt 0x55c81093dd18 <line:90:2, col:67>
|     `-UnaryOperator 0x55c81093dd00 <col:9, col:67> 'bool' prefix '!' cannot overflow
|       `-ParenExpr 0x55c81093dce0 <col:10, col:67> 'bool'
|         `-BinaryOperator 0x55c81093dcc0 <col:11, col:66> 'bool' '<'
|           |-CStyleCastExpr 0x55c81093dc78 <col:11, col:62> 'click_jiffies_difference_t':'int' <NoOp>
|           | `-ImplicitCastExpr 0x55c81093dc60 <col:40, col:62> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|           |   `-ParenExpr 0x55c81093dc40 <col:40, col:62> 'unsigned int'
|           |     `-BinaryOperator 0x55c81093dbf0 <col:41, col:61> 'unsigned int' '-'
|           |       |-ImplicitCastExpr 0x55c81093dbc0 <col:41, col:47> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |       | `-ParenExpr 0x55c81093db40 <col:41, col:47> 'click_jiffies_t':'unsigned int' lvalue
|           |       |   `-DeclRefExpr 0x55c81093db20 <col:42> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55c810939ea0 'now_j' 'click_jiffies_t':'unsigned int'
|           |       `-ImplicitCastExpr 0x55c81093dbd8 <col:51, col:61> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |         `-ParenExpr 0x55c81093dba0 <col:51, col:61> 'const click_jiffies_t':'const unsigned int' lvalue
|           |           `-MemberExpr 0x55c81093db70 <col:52> 'const click_jiffies_t':'const unsigned int' lvalue ->_expiry_j 0x55c81093c268
|           |             `-CXXThisExpr 0x55c81093db60 <col:52> 'const IPRewriterFlow *' implicit this
|           `-IntegerLiteral 0x55c81093dca0 <col:66> 'int' 0
|-CXXMethodDecl 0x55c81093a060 <line:94:5, line:96:5> line:94:10 guaranteed 'bool () const'
| `-CompoundStmt 0x55c81093dda8 <col:29, line:96:5>
|   `-ReturnStmt 0x55c81093dd98 <line:95:2, col:9>
|     `-ImplicitCastExpr 0x55c81093dd80 <col:9> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55c81093dd50 <col:9> 'const bool' lvalue ->_guaranteed 0x55c81093c428
|         `-CXXThisExpr 0x55c81093dd40 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55c81093a348 <line:102:5, line:103:34> line:102:10 used change_expiry 'void (IPRewriterHeap *, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55c81093a138 <col:24, col:40> col:40 h 'IPRewriterHeap *'
| |-ParmVarDecl 0x55c81093a1b0 <col:43, col:48> col:48 guaranteed 'bool'
| `-ParmVarDecl 0x55c81093a228 <line:103:10, col:26> col:26 expiry_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55c81093a6e8 <line:114:5, line:118:5> line:114:10 change_expiry_by_timeout 'void (IPRewriterHeap *, click_jiffies_t, const uint32_t *)'
| |-ParmVarDecl 0x55c81093a410 <col:35, col:51> col:51 used h 'IPRewriterHeap *'
| |-ParmVarDecl 0x55c81093a488 <col:54, col:70> col:70 used now_j 'click_jiffies_t':'unsigned int'
| |-ParmVarDecl 0x55c81093a5c0 <line:115:7, col:32> col:22 used timeouts 'const uint32_t *':'const uint32_t *'
| `-CompoundStmt 0x55c81093e248 <col:35, line:118:5>
|   |-DeclStmt 0x55c81093e018 <line:116:2, col:60>
|   | `-VarDecl 0x55c81093ddd0 <col:2, col:59> col:11 used timeout 'uint32_t':'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x55c81093e000 <col:21, col:59> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     `-ConditionalOperator 0x55c81093dfd0 <col:21, col:59> 'const uint32_t':'const unsigned int' lvalue
|   |       |-ImplicitCastExpr 0x55c81093dfb8 <col:21, col:31> 'bool' <IntegralToBoolean>
|   |       | `-ImplicitCastExpr 0x55c81093dfa0 <col:21, col:31> 'uint32_t':'unsigned int' <LValueToRValue>
|   |       |   `-ArraySubscriptExpr 0x55c81093de90 <col:21, col:31> 'const uint32_t':'const unsigned int' lvalue
|   |       |     |-ImplicitCastExpr 0x55c81093de78 <col:21> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x55c81093de38 <col:21> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55c81093a5c0 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |       |     `-IntegerLiteral 0x55c81093de58 <col:30> 'int' 1
|   |       |-ArraySubscriptExpr 0x55c81093df08 <col:35, col:45> 'const uint32_t':'const unsigned int' lvalue
|   |       | |-ImplicitCastExpr 0x55c81093def0 <col:35> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x55c81093deb0 <col:35> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55c81093a5c0 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |       | `-IntegerLiteral 0x55c81093ded0 <col:44> 'int' 1
|   |       `-ArraySubscriptExpr 0x55c81093df80 <col:49, col:59> 'const uint32_t':'const unsigned int' lvalue
|   |         |-ImplicitCastExpr 0x55c81093df68 <col:49> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x55c81093df28 <col:49> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55c81093a5c0 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |         `-IntegerLiteral 0x55c81093df48 <col:58> 'int' 0
|   `-CXXMemberCallExpr 0x55c81093e1f8 <line:117:2, col:49> 'void'
|     |-MemberExpr 0x55c81093e040 <col:2> '<bound member function type>' ->change_expiry 0x55c81093a348
|     | `-CXXThisExpr 0x55c81093e030 <col:2> 'IPRewriterFlow *' implicit this
|     |-ImplicitCastExpr 0x55c81093e230 <col:16> 'IPRewriterHeap *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c81093e070 <col:16> 'IPRewriterHeap *' lvalue ParmVar 0x55c81093a410 'h' 'IPRewriterHeap *'
|     |-UnaryOperator 0x55c81093e150 <col:19, col:31> 'bool' prefix '!' cannot overflow
|     | `-UnaryOperator 0x55c81093e138 <col:20, col:31> 'bool' prefix '!' cannot overflow
|     |   `-ImplicitCastExpr 0x55c81093e120 <col:21, col:31> 'bool' <IntegralToBoolean>
|     |     `-ImplicitCastExpr 0x55c81093e108 <col:21, col:31> 'uint32_t':'unsigned int' <LValueToRValue>
|     |       `-ArraySubscriptExpr 0x55c81093e0e8 <col:21, col:31> 'const uint32_t':'const unsigned int' lvalue
|     |         |-ImplicitCastExpr 0x55c81093e0d0 <col:21> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|     |         | `-DeclRefExpr 0x55c81093e090 <col:21> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55c81093a5c0 'timeouts' 'const uint32_t *':'const uint32_t *'
|     |         `-IntegerLiteral 0x55c81093e0b0 <col:30> 'int' 1
|     `-BinaryOperator 0x55c81093e1d8 <col:34, col:42> 'unsigned int' '+'
|       |-ImplicitCastExpr 0x55c81093e1a8 <col:34> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55c81093e168 <col:34> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55c81093a488 'now_j' 'click_jiffies_t':'unsigned int'
|       `-ImplicitCastExpr 0x55c81093e1c0 <col:42> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55c81093e188 <col:42> 'uint32_t':'unsigned int' lvalue Var 0x55c81093ddd0 'timeout' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c81093a818 <line:120:5, line:122:5> line:120:13 used ip_p 'uint8_t () const'
| `-CompoundStmt 0x55c81093e2d0 <col:26, line:122:5>
|   `-ReturnStmt 0x55c81093e2c0 <line:121:2, col:9>
|     `-ImplicitCastExpr 0x55c81093e2a8 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-MemberExpr 0x55c81093e278 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_ip_p 0x55c81093c368
|         `-CXXThisExpr 0x55c81093e268 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55c81093a908 <line:124:5, line:126:5> line:124:22 used owner 'IPRewriterInput *() const'
| `-CompoundStmt 0x55c81093e350 <col:36, line:126:5>
|   `-ReturnStmt 0x55c81093e340 <line:125:2, col:9>
|     `-ImplicitCastExpr 0x55c81093e328 <col:9> 'IPRewriterInput *' <LValueToRValue>
|       `-MemberExpr 0x55c81093e2f8 <col:9> 'IPRewriterInput *const' lvalue ->_owner 0x55c81093c4e8
|         `-CXXThisExpr 0x55c81093e2e8 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55c81093a9c8 <line:128:5, line:130:5> line:128:13 reply_anno 'uint8_t () const'
| `-CompoundStmt 0x55c81093e3d0 <col:32, line:130:5>
|   `-ReturnStmt 0x55c81093e3c0 <line:129:2, col:9>
|     `-ImplicitCastExpr 0x55c81093e3a8 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-MemberExpr 0x55c81093e378 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_reply_anno 0x55c81093c488
|         `-CXXThisExpr 0x55c81093e368 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55c81093ab38 <line:131:5, line:133:5> line:131:10 set_reply_anno 'void (uint8_t)'
| |-ParmVarDecl 0x55c81093aa78 <col:25, col:33> col:33 used reply_anno 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55c81093e480 <col:45, line:133:5>
|   `-BinaryOperator 0x55c81093e460 <line:132:2, col:16> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55c81093e3f8 <col:2> 'uint8_t':'unsigned char' lvalue ->_reply_anno 0x55c81093c488
|     | `-CXXThisExpr 0x55c81093e3e8 <col:2> 'IPRewriterFlow *' implicit this
|     `-ImplicitCastExpr 0x55c81093e448 <col:16> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55c81093e428 <col:16> 'uint8_t':'unsigned char' lvalue ParmVar 0x55c81093aa78 'reply_anno' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55c81093ae08 <line:135:5, line:136:27> line:135:24 update_csum 'void (uint16_t *, bool, uint16_t)' static inline
| |-ParmVarDecl 0x55c81093abf0 <col:36, col:46> col:46 csum 'uint16_t *'
| |-ParmVarDecl 0x55c81093ac68 <col:52, col:57> col:57 direction 'bool'
| `-ParmVarDecl 0x55c81093ace0 <line:136:8, col:17> col:17 csum_delta 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55c81093b0a8 <line:138:5, col:65> col:10 apply 'void (WritablePacket *, bool, unsigned int)'
| |-ParmVarDecl 0x55c81093aed0 <col:16, col:32> col:32 p 'WritablePacket *'
| |-ParmVarDecl 0x55c81093af48 <col:35, col:40> col:40 direction 'bool'
| `-ParmVarDecl 0x55c81093afc8 <col:51, col:60> col:60 annos 'unsigned int'
|-CXXMethodDecl 0x55c81093b388 <line:140:5, col:72> col:10 unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x55c81093b170 <col:18, col:31> col:31 sa 'StringAccum &'
| |-ParmVarDecl 0x55c81093b1e8 <col:35, col:40> col:40 direction 'bool'
| `-ParmVarDecl 0x55c81093b260 <col:51, col:67> col:67 now 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55c81093b5e0 <line:141:5, col:78> col:10 unparse_ports 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x55c81093b450 <col:24, col:37> col:37 sa 'StringAccum &'
| |-ParmVarDecl 0x55c81093b4c8 <col:41, col:46> col:46 direction 'bool'
| `-ParmVarDecl 0x55c81093b540 <col:57, col:73> col:73 now 'click_jiffies_t':'unsigned int'
|-CXXRecordDecl 0x55c81093b698 <line:143:5, line:147:5> line:143:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c81093b7b8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55c81093b9d8 <line:144:2, line:146:2> line:144:14 operator() 'bool (IPRewriterFlow *, IPRewriterFlow *)' inline
|   |-ParmVarDecl 0x55c81093b858 <col:25, col:41> col:41 used a 'IPRewriterFlow *'
|   |-ParmVarDecl 0x55c81093b8d0 <col:44, col:60> col:60 used b 'IPRewriterFlow *'
|   `-CompoundStmt 0x55c81093e738 <col:63, line:146:2>
|     `-ReturnStmt 0x55c81093e728 <line:145:6, col:78>
|       `-ParenExpr 0x55c81093e708 <col:13, col:78> 'bool'
|         `-BinaryOperator 0x55c81093e6e8 <col:14, col:77> 'bool' '<'
|           |-CStyleCastExpr 0x55c81093e6a0 <col:14, col:73> 'click_jiffies_difference_t':'int' <NoOp>
|           | `-ImplicitCastExpr 0x55c81093e688 <col:43, col:73> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|           |   `-ParenExpr 0x55c81093e668 <col:43, col:73> 'unsigned int'
|           |     `-BinaryOperator 0x55c81093e618 <col:44, col:72> 'unsigned int' '-'
|           |       |-ParenExpr 0x55c81093e538 <col:44, col:56> 'click_jiffies_t':'unsigned int'
|           |       | `-CXXMemberCallExpr 0x55c81093e500 <col:45, col:55> 'click_jiffies_t':'unsigned int'
|           |       |   `-MemberExpr 0x55c81093e4d0 <col:45, col:48> '<bound member function type>' ->expiry 0x55c810939df0
|           |       |     `-ImplicitCastExpr 0x55c81093e520 <col:45> 'const IPRewriterFlow *' <NoOp>
|           |       |       `-ImplicitCastExpr 0x55c81093e4b8 <col:45> 'IPRewriterFlow *' <LValueToRValue>
|           |       |         `-DeclRefExpr 0x55c81093e498 <col:45> 'IPRewriterFlow *' lvalue ParmVar 0x55c81093b858 'a' 'IPRewriterFlow *'
|           |       `-ParenExpr 0x55c81093e5f8 <col:60, col:72> 'click_jiffies_t':'unsigned int'
|           |         `-CXXMemberCallExpr 0x55c81093e5c0 <col:61, col:71> 'click_jiffies_t':'unsigned int'
|           |           `-MemberExpr 0x55c81093e590 <col:61, col:64> '<bound member function type>' ->expiry 0x55c810939df0
|           |             `-ImplicitCastExpr 0x55c81093e5e0 <col:61> 'const IPRewriterFlow *' <NoOp>
|           |               `-ImplicitCastExpr 0x55c81093e578 <col:61> 'IPRewriterFlow *' <LValueToRValue>
|           |                 `-DeclRefExpr 0x55c81093e558 <col:61> 'IPRewriterFlow *' lvalue ParmVar 0x55c81093b8d0 'b' 'IPRewriterFlow *'
|           `-IntegerLiteral 0x55c81093e6c8 <col:77> 'int' 0
|-CXXRecordDecl 0x55c81093baa0 <line:148:5, line:152:5> line:148:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c81093bbb8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55c81093be18 <line:149:2, line:151:2> line:149:14 operator() 'void (IPRewriterFlow **, IPRewriterFlow **)' inline
|   |-ParmVarDecl 0x55c81093bc90 <col:25, col:42> col:42 used begin 'IPRewriterFlow **'
|   |-ParmVarDecl 0x55c81093bd10 <col:49, col:66> col:66 used it 'IPRewriterFlow **'
|   `-CompoundStmt 0x55c81093e8d0 <col:70, line:151:2>
|     `-BinaryOperator 0x55c81093e8b0 <line:150:6, col:27> 'size_t':'unsigned long' lvalue bitfield '='
|       |-MemberExpr 0x55c81093e7d8 <col:6, col:13> 'size_t':'unsigned long' lvalue bitfield ->_place 0x55c81093c308
|       | `-ImplicitCastExpr 0x55c81093e7c0 <col:6, col:10> 'IPRewriterFlow *' <LValueToRValue>
|       |   `-ParenExpr 0x55c81093e7a0 <col:6, col:10> 'IPRewriterFlow *' lvalue
|       |     `-UnaryOperator 0x55c81093e788 <col:7, col:8> 'IPRewriterFlow *' lvalue prefix '*' cannot overflow
|       |       `-ImplicitCastExpr 0x55c81093e770 <col:8> 'IPRewriterFlow **' <LValueToRValue>
|       |         `-DeclRefExpr 0x55c81093e750 <col:8> 'IPRewriterFlow **' lvalue ParmVar 0x55c81093bd10 'it' 'IPRewriterFlow **'
|       `-ImplicitCastExpr 0x55c81093e898 <col:22, col:27> 'size_t':'unsigned long' <IntegralCast>
|         `-BinaryOperator 0x55c81093e878 <col:22, col:27> 'long' '-'
|           |-ImplicitCastExpr 0x55c81093e848 <col:22> 'IPRewriterFlow **' <LValueToRValue>
|           | `-DeclRefExpr 0x55c81093e808 <col:22> 'IPRewriterFlow **' lvalue ParmVar 0x55c81093bd10 'it' 'IPRewriterFlow **'
|           `-ImplicitCastExpr 0x55c81093e860 <col:27> 'IPRewriterFlow **' <LValueToRValue>
|             `-DeclRefExpr 0x55c81093e828 <col:27> 'IPRewriterFlow **' lvalue ParmVar 0x55c81093bc90 'begin' 'IPRewriterFlow **'
|-AccessSpecDecl 0x55c81093bee0 <line:154:3, col:12> col:3 protected
|-FieldDecl 0x55c81093c148 <line:156:5, col:25> col:21 referenced _e 'IPRewriterEntry [2]'
|-FieldDecl 0x55c81093c1a8 <line:157:5, col:14> col:14 _ip_csum_delta 'uint16_t':'unsigned short'
|-FieldDecl 0x55c81093c208 <line:158:5, col:14> col:14 _udp_csum_delta 'uint16_t':'unsigned short'
|-FieldDecl 0x55c81093c268 <line:159:5, col:21> col:21 referenced _expiry_j 'click_jiffies_t':'unsigned int'
|-FieldDecl 0x55c81093c308 <line:160:5, col:21> col:12 referenced _place 'size_t':'unsigned long'
| `-ConstantExpr 0x55c81093c2e8 <col:21> 'int' Int: 32
|   `-IntegerLiteral 0x55c81093c2b8 <col:21> 'int' 32
|-FieldDecl 0x55c81093c368 <line:161:5, col:13> col:13 referenced _ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55c81093c3c8 <line:162:5, col:13> col:13 referenced _tflags 'uint8_t':'unsigned char'
|-FieldDecl 0x55c81093c428 <line:163:5, col:10> col:10 referenced _guaranteed 'bool'
|-FieldDecl 0x55c81093c488 <line:164:5, col:13> col:13 referenced _reply_anno 'uint8_t':'unsigned char'
|-FieldDecl 0x55c81093c4e8 <line:165:5, col:22> col:22 referenced _owner 'IPRewriterInput *'
|-FriendDecl 0x55c81093c590 <line:167:5, col:18> col:12 'class IPRewriterBase':'IPRewriterBase'
|-FriendDecl 0x55c81093c620 <line:168:5, col:18> col:12 'class IPRewriterEntry':'IPRewriterEntry'
|-AccessSpecDecl 0x55c81093c660 <line:170:3, col:10> col:3 private
|-CXXMethodDecl 0x55c81093d7f0 <line:172:5, col:38> col:10 destroy 'void (IPRewriterHeap *)'
| `-ParmVarDecl 0x55c81093c698 <col:18, col:34> col:34 heap 'IPRewriterHeap *'
|-CXXConstructorDecl 0x55c8109918e8 <line:68:7> col:7 implicit constexpr IPRewriterFlow 'void (const IPRewriterFlow &)' inline default trivial noexcept-unevaluated 0x55c8109918e8
| `-ParmVarDecl 0x55c8109919f8 <col:7> col:7 'const IPRewriterFlow &'
|-CXXConstructorDecl 0x55c810991b78 <col:7> col:7 implicit constexpr IPRewriterFlow 'void (IPRewriterFlow &&)' inline default trivial noexcept-unevaluated 0x55c810991b78
| `-ParmVarDecl 0x55c810991c88 <col:7> col:7 'IPRewriterFlow &&'
`-CXXDestructorDecl 0x55c810991e78 <col:7> col:7 implicit referenced ~IPRewriterFlow 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterFlow = type { [2 x %class.IPRewriterEntry], i16, i16, i32, i32, i8, i8, i8, i8, %class.IPRewriterInput* }
  NonVirtualBaseLLVMType:%class.IPRewriterFlow = type { [2 x %class.IPRewriterEntry], i16, i16, i32, i32, i8, i8, i8, i8, %class.IPRewriterInput* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:32 IsSigned:0 StorageSize:32 StorageOffset:56>
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810860208 prev 0x55c810852690 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c810860300 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55c8108603f0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55c810860518 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55c810860698 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55c810860818 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55c810860998 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55c8108728d8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c810873148 <col:11>
|-CXXDestructorDecl 0x55c8108729b0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55c810872ae8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55c810872ae8
| `-ParmVarDecl 0x55c810872bf8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55c810872c98 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c810872c98
| `-ParmVarDecl 0x55c810872da8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55c810875ad8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c810875be8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55c810875e68 <col:11>
|   `-ReturnStmt 0x55c810875e58 <col:11>
|     `-UnaryOperator 0x55c810875e40 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c810875e30 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55c810875c58 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c810875c58
  `-ParmVarDecl 0x55c810875d68 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810860a00 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c810860b18 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55c810860bb8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55c810860c20 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55c810860c88 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55c810860cf0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55c810860d50 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55c810860e10 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55c810860e70 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55c810860ed0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55c8108727e8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55c810860bb8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55c810873158 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55c8108731b0 <col:12>
|-CXXConstructorDecl 0x55c810872e18 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55c810872e18
| `-ParmVarDecl 0x55c810872f28 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55c810872fc8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55c810872fc8
| `-ParmVarDecl 0x55c8108730d8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55c8108751c0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c81084bd60 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c81084bee8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55c81084bf78 <col:16, col:22> col:16 public
|-EnumDecl 0x55c81084bfa0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55c81084c0a0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55c81084c180 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81084c080 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55c81084c060 <col:21> 'int' 28
| `-EnumConstantDecl 0x55c81084c130 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55c81084c198 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c81084c110 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55c81084c0f0 <col:22> 'int' 64
|-CXXMethodDecl 0x55c81084c4d8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55c81084c1c0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c81084c240 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55c81084c2b8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c81084c330 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c81084c598 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55c81084c798 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55c81084c610 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55c81084c688 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c81084c848 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55c81084c9a8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55c81084c8b8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c81084ca50 <col:72> warn_unused_result ""
|-TypedefDecl 0x55c81084cd80 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55c81084cd10 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55c81084ccb0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55c81084cc70 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55c8103174e0 'void'
|       |-PointerType 0x55c8105c7f70 'unsigned char *'
|       | `-BuiltinType 0x55c8103175e0 'unsigned char'
|       |-TypedefType 0x55c8103c3980 'size_t' sugar
|       | |-Typedef 0x55c810387be0 'size_t'
|       | `-BuiltinType 0x55c810317640 'unsigned long'
|       `-PointerType 0x55c810317ce0 'void *'
|         `-BuiltinType 0x55c8103174e0 'void'
|-CXXMethodDecl 0x55c81084d1f8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55c81084cdf0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55c81084ce68 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c81084cf00 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55c81084cf80 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55c81086b750 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55c81086b738 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55c81086b700 <col:58> 'int' 0
| |-ParmVarDecl 0x55c81084d000 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55c81086b778 <col:76> 'int' 0
| |-ParmVarDecl 0x55c81084d080 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55c81086b798 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55c81084d2c8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55c81084d348 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55c81084d408 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55c81084d4a8 <col:20>
| `-OptimizeNoneAttr 0x55c81084d500 <col:30>
|-CXXMethodDecl 0x55c81084d578 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55c81084d618 <col:20>
| `-OptimizeNoneAttr 0x55c81084d670 <col:30>
|-CXXMethodDecl 0x55c81084d6e8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55c81084d788 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55c81084d838 <line:77:5, col:102> col:56 used uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55c81084d8d8 <col:20>
| |-OptimizeNoneAttr 0x55c81084d930 <col:30>
| `-WarnUnusedResultAttr 0x55c81084d958 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55c81084d9b0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55c81084da50 <col:20>
| `-OptimizeNoneAttr 0x55c81084daa8 <col:30>
|-CXXMethodDecl 0x55c81084daf8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55c81084db98 <col:20>
| `-OptimizeNoneAttr 0x55c81084dbf0 <col:30>
|-CXXMethodDecl 0x55c81084dc38 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55c81084dcd8 <col:20>
| `-OptimizeNoneAttr 0x55c81084dd30 <col:30>
|-CXXMethodDecl 0x55c81084dd78 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55c81084de38 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55c81084df00 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55c81084dfc8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55c81084e088 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c81084e1a8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55c81086b860 <col:54, line:99:5>
|   `-ReturnStmt 0x55c81086b850 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55c81086b838 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55c81086b808 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55c81086a5f8
|         `-CXXThisExpr 0x55c81086b7f8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55c81084e348 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55c81084e258 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55c81086b910 <col:67, line:103:5>
|   `-BinaryOperator 0x55c81086b8f0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55c81086b888 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55c81086a5f8
|     | `-CXXThisExpr 0x55c81086b878 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55c81086b8d8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55c81086b8b8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55c81084e258 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55c81084e440 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55c81086b990 <col:33, line:107:5>
|   `-ReturnStmt 0x55c81086b980 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55c81086b968 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55c81086b938 <col:16> 'void *' lvalue ->_destructor_argument 0x55c81086a660
|         `-CXXThisExpr 0x55c81086b928 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55c81084e500 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55c81086bfc0 <col:25, line:113:5>
|   |-ParenExpr 0x55c81086bd08 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55c81086bcd8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55c81086ba48 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55c81086ba20 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55c81086b9e8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55c81086b9b8 <col:24> '<bound member function type>' ->shared 0x55c81084d578
|   |   |       `-ImplicitCastExpr 0x55c81086ba08 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55c81086b9a8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55c81086baa8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c81086ba88 <col:42> 'int' 0
|   |   `-CallExpr 0x55c81086bc38 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55c81086bc20 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c81086bc00 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c81086bc78 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086bb18 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55c81086bc90 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086bb40 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c81086bca8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c81086bb78 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55c81086bcc0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c81086bbe8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c81086bbd0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c81086bb98 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55c81086bf08 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55c81086bd38 <col:2> 'unsigned char *' lvalue ->_head 0x55c810861010
|   | | `-CXXThisExpr 0x55c81086bd28 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55c81086bef0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55c81086bed0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55c81086bd78 <col:10> 'unsigned char *' lvalue ->_data 0x55c810861078
|   |     | `-CXXThisExpr 0x55c81086bd68 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55c81086beb8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55c81086be98 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55c81086bdb8 <col:18> 'unsigned char *' lvalue ->_tail 0x55c81086a4d0
|   |         | `-CXXThisExpr 0x55c81086bda8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55c81086be80 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55c81086be60 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55c81086bdf8 <col:26> 'unsigned char *' lvalue ->_end 0x55c81086a538
|   |             | `-CXXThisExpr 0x55c81086bde8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55c81086be48 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55c81086be28 <col:33> 'int' 0
|   `-BinaryOperator 0x55c81086bfa0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55c81086bf38 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55c81086a5f8
|     | `-CXXThisExpr 0x55c81086bf28 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55c81086bf88 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55c81086bf68 <col:16> 'int' 0
|-CXXMethodDecl 0x55c81084e640 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55c81084e5b0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c81084e6e8 <col:20>
| |-OptimizeNoneAttr 0x55c81084e740 <col:30>
| `-WarnUnusedResultAttr 0x55c81084e768 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55c81084e838 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55c81084e7a8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c81084e8e0 <col:20>
| |-OptimizeNoneAttr 0x55c81084e938 <col:30>
| `-WarnUnusedResultAttr 0x55c81084e960 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55c81084ea98 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55c81084e9a0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c81084eb40 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55c81084ec40 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55c81084ebb0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c81084ece8 <col:20>
| `-OptimizeNoneAttr 0x55c81084ed40 <col:30>
|-CXXMethodDecl 0x55c81084ee08 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55c81084ed78 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c81084eeb0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55c81084efb0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55c81084ef20 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c81084f058 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55c81084f158 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55c81084f0c8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c81084f200 <col:20>
| `-OptimizeNoneAttr 0x55c81084f258 <col:30>
|-CXXMethodDecl 0x55c81084f3e8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55c81084f298 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55c81084f310 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55c81086b7b8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55c81084f498 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55c81084f698 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55c81084f510 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55c81084f588 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c81084f8a8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55c81084f758 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c81084f7d0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c81084fab8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55c81084f968 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55c81084f9e8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55c81086b7c8 <col:39> 'int' 0
|-CXXMethodDecl 0x55c81084fb88 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55c81084fc50 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55c81084fd18 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c81084fdd8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c81084feb8 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55c810850000 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55c81084ff70 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55c8108501d0 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55c8108500c0 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55c810850138 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c8108502a0 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55c810850360 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55c810850400 <col:20>
| `-OptimizeNoneAttr 0x55c810850458 <col:30>
|-CXXMethodDecl 0x55c8108504a8 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55c810850548 <col:20>
| `-OptimizeNoneAttr 0x55c8108505a0 <col:30>
|-CXXMethodDecl 0x55c8108505f0 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c8108506b0 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c810850778 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55c810850818 <col:20>
| `-OptimizeNoneAttr 0x55c810850870 <col:30>
|-CXXMethodDecl 0x55c8108509c0 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55c8108508b0 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55c810850928 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c810850b10 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55c810850a80 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c810850bd8 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55c810850c98 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55c810850d38 <col:20>
| `-OptimizeNoneAttr 0x55c810850d90 <col:30>
|-CXXMethodDecl 0x55c810850de0 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55c810850e80 <col:20>
| `-OptimizeNoneAttr 0x55c810850ed8 <col:30>
|-CXXMethodDecl 0x55c810850f28 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c810850ff0 <line:300:5, col:63> col:44 used transport_length 'int () const'
| |-NoInlineAttr 0x55c810851090 <col:20>
| `-OptimizeNoneAttr 0x55c8108510e8 <col:30>
|-CXXMethodDecl 0x55c810851130 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55c810851248 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55c8108513b8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55c8108512f8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55c8108514a8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55c810851548 <col:20>
| `-OptimizeNoneAttr 0x55c8108515a0 <col:30>
|-CXXMethodDecl 0x55c8108515f0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c8108516b0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c8108518e8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55c810851760 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55c8108517d8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c810851998 <col:20>
| `-OptimizeNoneAttr 0x55c8108519f0 <col:30>
|-CXXMethodDecl 0x55c810851a98 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55c810851b38 <col:20>
| `-OptimizeNoneAttr 0x55c810851b90 <col:30>
|-CXXMethodDecl 0x55c810851be0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55c810851c80 <col:20>
| `-OptimizeNoneAttr 0x55c810851cd8 <col:30>
|-CXXMethodDecl 0x55c810851d20 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55c810851dc0 <col:20>
| `-OptimizeNoneAttr 0x55c810851e18 <col:30>
|-CXXMethodDecl 0x55c810851f18 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55c810851e50 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55c810851fc0 <col:20>
| `-OptimizeNoneAttr 0x55c810852018 <col:30>
|-CXXMethodDecl 0x55c8108521d8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55c810852050 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55c8108520c8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c810852288 <col:20>
| `-OptimizeNoneAttr 0x55c8108522e0 <col:30>
|-CXXMethodDecl 0x55c810852388 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55c8108524a8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55c8108525c8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55c810852668 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55c810852690 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55c8108527b8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55c810852858 <col:20>
| `-OptimizeNoneAttr 0x55c8108528b0 <col:30>
|-CXXMethodDecl 0x55c810852958 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55c8108529f8 <col:20>
| `-OptimizeNoneAttr 0x55c810852a50 <col:30>
|-AccessSpecDecl 0x55c810852a78 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55c810852aa0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55c810852ba0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55c810852bf0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810852b80 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55c810852b60 <col:14> 'int' 48
|-CXXMethodDecl 0x55c810852c58 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55c810852cf8 <col:20>
| `-OptimizeNoneAttr 0x55c810852d50 <col:30>
|-CXXMethodDecl 0x55c810852dc8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55c810852e68 <col:20>
| `-OptimizeNoneAttr 0x55c810852ec0 <col:30>
|-CXXMethodDecl 0x55c810852f88 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55c810852ef8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55c810853128 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55c8108532c8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55c8108531d8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55c810853370 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55c810853470 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c810853820 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810853450 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55c810853430 <col:9> 'int' 0
| |-EnumConstantDecl 0x55c810853500 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c810853838 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108534e0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55c8108534c0 <col:14> 'int' 1
| |-EnumConstantDecl 0x55c810853590 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c810853850 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810853570 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55c810853550 <col:14> 'int' 2
| |-EnumConstantDecl 0x55c810853620 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c810853868 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810853600 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55c8108535e0 <col:14> 'int' 3
| |-EnumConstantDecl 0x55c8108536b0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c810853880 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810853690 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55c810853670 <col:13> 'int' 4
| |-EnumConstantDecl 0x55c810853740 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c810853898 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810853720 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55c810853700 <col:13> 'int' 5
| `-EnumConstantDecl 0x55c8108537d0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55c8108538b0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c8108537b0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55c810853790 <col:14> 'int' 6
|-CXXMethodDecl 0x55c810853918 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55c8108539b8 <col:20>
| `-OptimizeNoneAttr 0x55c810853a10 <col:30>
|-CXXMethodDecl 0x55c810853b08 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55c810853a48 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55c810853bb0 <col:20>
| `-OptimizeNoneAttr 0x55c810853c08 <col:30>
|-CXXMethodDecl 0x55c810853c78 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55c810853da0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55c810853f68 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55c810853ea0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55c810854030 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55c8108540f8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55c810854238 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55c8108541a8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55c8108542e0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55c8108543e0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55c8108545e0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108543c0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55c8108543a0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55c810854470 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55c8108545f8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810854450 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55c810854430 <col:45> 'int' 4
| |-EnumConstantDecl 0x55c810854500 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55c810854610 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108544e0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55c8108544c0 <col:24> 'int' 0
| `-EnumConstantDecl 0x55c810854590 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55c810854628 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810854570 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55c810854550 <col:47> 'int' 16
|-CXXMethodDecl 0x55c810854688 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55c8108547f8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55c810854738 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55c8108548a0 <col:20>
| `-OptimizeNoneAttr 0x55c8108548f8 <col:30>
|-CXXMethodDecl 0x55c810854948 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55c81086c0e0 <col:18, col:36>
|   `-ReturnStmt 0x55c81086c0d0 <col:20, col:33>
|     `-ImplicitCastExpr 0x55c81086c0b8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55c81086c098 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55c81086c068 <col:27> '<bound member function type>' ->xanno 0x55c810852958
|           `-CXXThisExpr 0x55c81086c058 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55c810854a40 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55c81086c1f0 <col:30, col:48>
|   `-ReturnStmt 0x55c81086c1e0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55c81086c1c8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55c81086c1a8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55c81086c178 <col:39> '<bound member function type>' ->xanno 0x55c8108527b8
|           `-CXXThisExpr 0x55c81086c168 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55c810854b28 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55c81086c388 <col:24, col:50>
|   `-ReturnStmt 0x55c81086c378 <col:26, col:47>
|     `-UnaryOperator 0x55c81086c360 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c81086c340 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55c81086c328 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c81086c2d8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55c810860518
|         |   `-CXXMemberCallExpr 0x55c81086c2b8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55c81086c288 <col:34> '<bound member function type>' ->xanno 0x55c810852958
|         |       `-CXXThisExpr 0x55c81086c278 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55c81086c308 <col:46> 'int' 0
|-CXXMethodDecl 0x55c810854c18 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55c81086c558 <col:36, col:62>
|   `-ReturnStmt 0x55c81086c548 <col:38, col:59>
|     `-UnaryOperator 0x55c81086c530 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c81086c510 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55c81086c4f8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c81086c470 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55c810860518
|         |   `-CXXMemberCallExpr 0x55c81086c450 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55c81086c420 <col:46> '<bound member function type>' ->xanno 0x55c8108527b8
|         |       `-CXXThisExpr 0x55c81086c410 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55c81086c4a0 <col:58> 'int' 0
|-CXXMethodDecl 0x55c810854d38 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55c81086c6f0 <col:26, col:53>
|   `-ReturnStmt 0x55c81086c6e0 <col:28, col:50>
|     `-UnaryOperator 0x55c81086c6c8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c81086c6a8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55c81086c690 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c81086c640 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55c810860818
|         |   `-CXXMemberCallExpr 0x55c81086c620 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55c81086c5f0 <col:36> '<bound member function type>' ->xanno 0x55c810852958
|         |       `-CXXThisExpr 0x55c81086c5e0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55c81086c670 <col:49> 'int' 0
|-CXXMethodDecl 0x55c810854e58 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55c81086c8c8 <col:38, col:65>
|   `-ReturnStmt 0x55c81086c8b8 <col:40, col:62>
|     `-UnaryOperator 0x55c81086c8a0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c81086c880 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55c81086c868 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c81086c7d8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55c810860818
|         |   `-CXXMemberCallExpr 0x55c81086c7b8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55c81086c788 <col:48> '<bound member function type>' ->xanno 0x55c8108527b8
|         |       `-CXXThisExpr 0x55c81086c778 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55c81086c808 <col:61> 'int' 0
|-CXXMethodDecl 0x55c810855008 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55c810854f10 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55c81086cf98 <col:34, line:463:5>
|   |-ParenExpr 0x55c81086cde0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55c81086cdb0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55c81086ca18 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c81086c9e8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c81086c938 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c81086c920 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c81086c8e0 <col:23> 'int' lvalue ParmVar 0x55c810854f10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c81086c900 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c81086c9c8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c81086c998 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c81086c958 <col:33> 'int' lvalue ParmVar 0x55c810854f10 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55c81086c9b0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55c81086c978 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c810852ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55c81086ca78 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c81086ca58 <col:56> 'int' 0
|   |   `-CallExpr 0x55c81086cd10 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55c81086ccf8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c81086ccd8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c81086cd50 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086cb68 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55c81086cd68 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086cb98 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c81086cd80 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c81086cbd0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55c81086cd98 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c81086ccc0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c81086cca8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c81086cc68 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55c81086cf88 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55c81086cf70 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55c81086cf50 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55c81086cf20 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c81086ced0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55c810860518
|         |   `-CXXMemberCallExpr 0x55c81086ceb0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55c81086ce80 <col:9> '<bound member function type>' ->xanno 0x55c8108527b8
|         |       `-CXXThisExpr 0x55c81086ce70 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55c81086cf38 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55c81086cf00 <col:21> 'int' lvalue ParmVar 0x55c810854f10 'i' 'int'
|-CXXMethodDecl 0x55c810855258 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55c8108550c8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55c810855140 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55c81086d628 <col:40, line:472:5>
|   |-ParenExpr 0x55c81086d440 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55c81086d410 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55c81086d0f0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c81086d0c0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c81086d010 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c81086cff8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c81086cfb8 <col:23> 'int' lvalue ParmVar 0x55c8108550c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c81086cfd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c81086d0a0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c81086d070 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c81086d030 <col:33> 'int' lvalue ParmVar 0x55c8108550c8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55c81086d088 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55c81086d050 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c810852ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55c81086d150 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c81086d130 <col:56> 'int' 0
|   |   `-CallExpr 0x55c81086d370 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55c81086d358 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c81086d338 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c81086d3b0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086d1c0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55c81086d3c8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086d1f0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c81086d3e0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c81086d228 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55c81086d3f8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c81086d320 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c81086d308 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c81086d2c8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55c81086d608 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55c81086d5b0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55c81086d580 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55c81086d530 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55c810860518
|     | |   `-CXXMemberCallExpr 0x55c81086d510 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55c81086d4e0 <col:2> '<bound member function type>' ->xanno 0x55c810852958
|     | |       `-CXXThisExpr 0x55c81086d4d0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55c81086d598 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55c81086d560 <col:14> 'int' lvalue ParmVar 0x55c8108550c8 'i' 'int'
|     `-ImplicitCastExpr 0x55c81086d5f0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55c81086d5d0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55c810855140 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55c810855418 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55c810855320 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55c81086dda8 <col:36, line:485:5>
|   |-ParenExpr 0x55c81086db10 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c81086dae0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c81086d7c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c81086d790 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c81086d6a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c81086d688 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c81086d648 <col:23> 'int' lvalue ParmVar 0x55c810855320 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c81086d668 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c81086d770 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c81086d758 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c81086d6c0 <col:33> 'int' lvalue ParmVar 0x55c810855320 'i' 'int'
|   |   |     `-BinaryOperator 0x55c81086d738 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c81086d720 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c81086d6e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c810852ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c81086d700 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c81086d820 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c81086d800 <col:60> 'int' 0
|   |   `-CallExpr 0x55c81086da40 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c81086da28 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c81086da08 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c81086da80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086d890 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c81086da98 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086d8c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c81086dab0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c81086d900 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55c81086dac8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c81086d9f0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c81086d9d8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c81086d998 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55c81086dd98 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55c81086dd80 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55c81086dd68 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c81086dd38 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55c81086dcd8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c81086dca8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c81086dc20 <col:61, col:70> 'char const[48]' lvalue ->c 0x55c8108603f0
|             |   `-CXXMemberCallExpr 0x55c81086dc00 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c81086dbd0 <col:61> '<bound member function type>' ->xanno 0x55c8108527b8
|             |       `-CXXThisExpr 0x55c81086dbc0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c81086dcc0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c81086dc50 <col:74> 'int' lvalue ParmVar 0x55c810855320 'i' 'int'
|-CXXMethodDecl 0x55c810855668 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55c8108554d8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c810855550 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55c81086e518 <col:42, line:500:5>
|   |-ParenExpr 0x55c81086e290 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c81086e260 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c81086df40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c81086df10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c81086de20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c81086de08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c81086ddc8 <col:23> 'int' lvalue ParmVar 0x55c8108554d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c81086dde8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c81086def0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c81086ded8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c81086de40 <col:33> 'int' lvalue ParmVar 0x55c8108554d8 'i' 'int'
|   |   |     `-BinaryOperator 0x55c81086deb8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c81086dea0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c81086de60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c810852ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c81086de80 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c81086dfa0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c81086df80 <col:60> 'int' 0
|   |   `-CallExpr 0x55c81086e1c0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c81086e1a8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c81086e188 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c81086e200 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086e010 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c81086e218 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086e048 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c81086e230 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c81086e080 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55c81086e248 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c81086e170 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c81086e158 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c81086e118 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55c81086e4f8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55c81086e488 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c81086e458 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55c81086e400 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c81086e3d0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c81086e380 <col:48, col:57> 'char [48]' lvalue ->c 0x55c8108603f0
|     |     |   `-CXXMemberCallExpr 0x55c81086e360 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c81086e330 <col:48> '<bound member function type>' ->xanno 0x55c810852958
|     |     |       `-CXXThisExpr 0x55c81086e320 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c81086e3e8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c81086e3b0 <col:61> 'int' lvalue ParmVar 0x55c8108554d8 'i' 'int'
|     `-ImplicitCastExpr 0x55c81086e4e0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55c81086e4a0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55c810855550 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55c810855828 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55c810855730 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55c81086ec78 <col:35, line:513:5>
|   |-ParenExpr 0x55c81086e988 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c81086e958 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c81086e6b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c81086e680 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c81086e590 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c81086e578 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c81086e538 <col:23> 'int' lvalue ParmVar 0x55c810855730 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c81086e558 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c81086e660 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c81086e648 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c81086e5b0 <col:33> 'int' lvalue ParmVar 0x55c810855730 'i' 'int'
|   |   |     `-BinaryOperator 0x55c81086e628 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c81086e610 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c81086e5d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c810852ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c81086e5f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c81086e710 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c81086e6f0 <col:60> 'int' 0
|   |   `-CallExpr 0x55c81086e8b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c81086e8a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c81086e880 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c81086e8f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086e780 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c81086e910 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086e7b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c81086e928 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c81086e7f0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55c81086e940 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c81086e868 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c81086e850 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c81086e810 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55c81086ec68 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55c81086ec50 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55c81086ec38 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c81086ec08 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55c81086eb80 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c81086eb50 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c81086eb00 <col:60, col:69> 'char const[48]' lvalue ->c 0x55c8108603f0
|             |   `-CXXMemberCallExpr 0x55c81086eae0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c81086eab0 <col:60> '<bound member function type>' ->xanno 0x55c8108527b8
|             |       `-CXXThisExpr 0x55c81086eaa0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c81086eb68 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c81086eb30 <col:73> 'int' lvalue ParmVar 0x55c810855730 'i' 'int'
|-CXXMethodDecl 0x55c810855a78 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55c8108558e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c810855960 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55c81086f388 <col:41, line:528:5>
|   |-ParenExpr 0x55c81086f120 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c81086f0f0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c81086ee10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c81086ede0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c81086ecf0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c81086ecd8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c81086ec98 <col:23> 'int' lvalue ParmVar 0x55c8108558e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c81086ecb8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c81086edc0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c81086eda8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c81086ed10 <col:33> 'int' lvalue ParmVar 0x55c8108558e8 'i' 'int'
|   |   |     `-BinaryOperator 0x55c81086ed88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c81086ed70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c81086ed30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c810852ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c81086ed50 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c81086ee70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c81086ee50 <col:60> 'int' 0
|   |   `-CallExpr 0x55c81086f050 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c81086f038 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c81086f018 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c81086f090 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086eee0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c81086f0a8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086ef18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c81086f0c0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c81086ef50 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55c81086f0d8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c81086f000 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c81086efe8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c81086efa8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55c81086f368 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55c81086f318 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c81086f2e8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55c81086f290 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c81086f260 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c81086f210 <col:47, col:56> 'char [48]' lvalue ->c 0x55c8108603f0
|     |     |   `-CXXMemberCallExpr 0x55c81086f1f0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c81086f1c0 <col:47> '<bound member function type>' ->xanno 0x55c810852958
|     |     |       `-CXXThisExpr 0x55c81086f1b0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c81086f278 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c81086f240 <col:60> 'int' lvalue ParmVar 0x55c8108558e8 'i' 'int'
|     `-ImplicitCastExpr 0x55c81086f350 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55c81086f330 <col:65> 'int16_t':'short' lvalue ParmVar 0x55c810855960 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55c810855c38 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55c810855b40 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55c81086fa58 <col:36, line:541:5>
|   |-ParenExpr 0x55c81086f7f8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c81086f7c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c81086f520 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c81086f4f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c81086f400 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c81086f3e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c81086f3a8 <col:23> 'int' lvalue ParmVar 0x55c810855b40 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c81086f3c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c81086f4d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c81086f4b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c81086f420 <col:33> 'int' lvalue ParmVar 0x55c810855b40 'i' 'int'
|   |   |     `-BinaryOperator 0x55c81086f498 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c81086f480 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c81086f440 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c810852ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c81086f460 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55c81086f580 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c81086f560 <col:60> 'int' 0
|   |   `-CallExpr 0x55c81086f728 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c81086f710 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c81086f6f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c81086f768 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086f5f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55c81086f780 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086f628 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c81086f798 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c81086f660 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55c81086f7b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c81086f6d8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c81086f6c0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c81086f680 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55c81086fa48 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55c81086fa30 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55c81086fa18 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c81086f9e8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55c81086f990 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c81086f960 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c81086f910 <col:61, col:70> 'char const[48]' lvalue ->c 0x55c8108603f0
|             |   `-CXXMemberCallExpr 0x55c81086f8f0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c81086f8c0 <col:61> '<bound member function type>' ->xanno 0x55c8108527b8
|             |       `-CXXThisExpr 0x55c81086f8b0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c81086f978 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c81086f940 <col:74> 'int' lvalue ParmVar 0x55c810855b40 'i' 'int'
|-CXXMethodDecl 0x55c810855e08 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55c810855cf8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55c810855d70 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c810855eb8 <col:20>
| `-OptimizeNoneAttr 0x55c810855f10 <col:30>
|-CXXMethodDecl 0x55c810856048 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55c810855f50 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55c810870128 <col:35, line:562:5>
|   |-ParenExpr 0x55c81086fec8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c81086fe98 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c81086fbf0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c81086fbc0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c81086fad0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c81086fab8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c81086fa78 <col:23> 'int' lvalue ParmVar 0x55c810855f50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c81086fa98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c81086fba0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c81086fb88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c81086faf0 <col:33> 'int' lvalue ParmVar 0x55c810855f50 'i' 'int'
|   |   |     `-BinaryOperator 0x55c81086fb68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c81086fb50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c81086fb10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c810852ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c81086fb30 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55c81086fc50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c81086fc30 <col:60> 'int' 0
|   |   `-CallExpr 0x55c81086fdf8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c81086fde0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c81086fdc0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c81086fe38 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086fcc0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55c81086fe50 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c81086fcf8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c81086fe68 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c81086fd30 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55c81086fe80 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c81086fda8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c81086fd90 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c81086fd50 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55c810870118 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55c810870100 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55c8108700e8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c8108700b8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55c810870060 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c810870030 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c81086ffe0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55c8108603f0
|             |   `-CXXMemberCallExpr 0x55c81086ffc0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c81086ff90 <col:60> '<bound member function type>' ->xanno 0x55c8108527b8
|             |       `-CXXThisExpr 0x55c81086ff80 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c810870048 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c810870010 <col:73> 'int' lvalue ParmVar 0x55c810855f50 'i' 'int'
|-CXXMethodDecl 0x55c810856258 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55c810856108 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c810856180 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55c810870808 <col:41, line:577:5>
|   |-ParenExpr 0x55c810870598 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c810870568 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c8108702c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c810870290 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c8108701a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c810870188 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c810870148 <col:23> 'int' lvalue ParmVar 0x55c810856108 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c810870168 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c810870270 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c810870258 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c8108701c0 <col:33> 'int' lvalue ParmVar 0x55c810856108 'i' 'int'
|   |   |     `-BinaryOperator 0x55c810870238 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c810870220 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c8108701e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c810852ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c810870200 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55c810870320 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c810870300 <col:60> 'int' 0
|   |   `-CallExpr 0x55c8108704c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c8108704b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c810870490 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c810870508 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c810870390 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55c810870520 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c8108703c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c810870538 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c810870400 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55c810870550 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c810870478 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c810870460 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c810870420 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55c8108707e8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55c810870798 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c810870768 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55c810870708 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c8108706d8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c810870688 <col:47, col:56> 'char [48]' lvalue ->c 0x55c8108603f0
|     |     |   `-CXXMemberCallExpr 0x55c810870668 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c810870638 <col:47> '<bound member function type>' ->xanno 0x55c810852958
|     |     |       `-CXXThisExpr 0x55c810870628 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c8108706f0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c8108706b8 <col:60> 'int' lvalue ParmVar 0x55c810856108 'i' 'int'
|     `-ImplicitCastExpr 0x55c8108707d0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55c8108707b0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55c810856180 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55c810856418 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55c810856320 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55c810870f38 <col:36, line:591:5>
|   |-ParenExpr 0x55c810870c78 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c810870c48 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c8108709a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c810870970 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c810870880 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c810870868 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c810870828 <col:23> 'int' lvalue ParmVar 0x55c810856320 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c810870848 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c810870950 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c810870938 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c8108708a0 <col:33> 'int' lvalue ParmVar 0x55c810856320 'i' 'int'
|   |   |     `-BinaryOperator 0x55c810870918 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c810870900 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c8108708c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c810852ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c8108708e0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55c810870a00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c8108709e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55c810870ba8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c810870b90 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c810870b70 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c810870be8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c810870a70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55c810870c00 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c810870aa8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c810870c18 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c810870ae0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55c810870c30 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c810870b58 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c810870b40 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c810870b00 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55c810870f28 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55c810870f10 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55c810870ef8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c810870ec8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55c810870e40 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c810870e10 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c810870dc0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55c8108603f0
|             |   `-CXXMemberCallExpr 0x55c810870da0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c810870d70 <col:61> '<bound member function type>' ->xanno 0x55c8108527b8
|             |       `-CXXThisExpr 0x55c810870d60 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c810870e28 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c810870df0 <col:74> 'int' lvalue ParmVar 0x55c810856320 'i' 'int'
|-CXXMethodDecl 0x55c810856668 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55c8108564d8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c810856550 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55c810871618 <col:42, line:606:5>
|   |-ParenExpr 0x55c8108713a8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c810871378 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c8108710d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c8108710a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c810870fb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c810870f98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c810870f58 <col:23> 'int' lvalue ParmVar 0x55c8108564d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c810870f78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c810871080 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c810871068 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c810870fd0 <col:33> 'int' lvalue ParmVar 0x55c8108564d8 'i' 'int'
|   |   |     `-BinaryOperator 0x55c810871048 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c810871030 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c810870ff0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c810852ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c810871010 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55c810871130 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c810871110 <col:60> 'int' 0
|   |   `-CallExpr 0x55c8108712d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c8108712c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c8108712a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c810871318 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c8108711a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55c810871330 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c8108711d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c810871348 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c810871210 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55c810871360 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c810871288 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c810871270 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c810871230 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55c8108715f8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55c8108715a8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c810871578 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55c810871518 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c8108714e8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c810871498 <col:48, col:57> 'char [48]' lvalue ->c 0x55c8108603f0
|     |     |   `-CXXMemberCallExpr 0x55c810871478 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c810871448 <col:48> '<bound member function type>' ->xanno 0x55c810852958
|     |     |       `-CXXThisExpr 0x55c810871438 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c810871500 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c8108714c8 <col:61> 'int' lvalue ParmVar 0x55c8108564d8 'i' 'int'
|     `-ImplicitCastExpr 0x55c8108715e0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55c8108715c0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55c810856550 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55c810856800 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55c810856730 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55c810871e88 <col:33, line:620:5>
|   |-ParenExpr 0x55c810871c00 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55c810871bd0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55c810871820 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c8108717f0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c810871690 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c810871678 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c810871638 <col:23> 'int' lvalue ParmVar 0x55c810856730 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c810871658 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c8108717d0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55c8108717b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c8108716b0 <col:33> 'int' lvalue ParmVar 0x55c810856730 'i' 'int'
|   |   |     `-BinaryOperator 0x55c810871798 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c810871780 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c8108716d0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c810852ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55c810871758 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55c810871740 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55c810871708 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55c810871880 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c810871860 <col:79> 'int' 0
|   |   `-CallExpr 0x55c810871b30 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55c810871b18 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c810871af8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c810871b70 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c810871968 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55c810871b88 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c8108719b0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c810871ba0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c8108719e8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55c810871bb8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c810871ae0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c810871ac8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c810871a88 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55c810871e78 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55c810871e60 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55c810871e48 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c810871e18 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55c810871d90 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c810871d60 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c810871d10 <col:67, col:76> 'char const[48]' lvalue ->c 0x55c8108603f0
|             |   `-CXXMemberCallExpr 0x55c810871cf0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c810871cc0 <col:67> '<bound member function type>' ->xanno 0x55c8108527b8
|             |       `-CXXThisExpr 0x55c810871cb0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c810871d78 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c810871d40 <col:80> 'int' lvalue ParmVar 0x55c810856730 'i' 'int'
|-CXXMethodDecl 0x55c810856a18 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55c8108568c0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c810856940 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55c8108726d0 <col:45, line:635:5>
|   |-ParenExpr 0x55c8108723f8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55c8108723c8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55c810872090 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c810872060 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c810871f00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c810871ee8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c810871ea8 <col:23> 'int' lvalue ParmVar 0x55c8108568c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c810871ec8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c810872040 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55c810872028 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c810871f20 <col:33> 'int' lvalue ParmVar 0x55c8108568c0 'i' 'int'
|   |   |     `-BinaryOperator 0x55c810872008 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c810871ff0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c810871f40 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c810852ba0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55c810871fc8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55c810871fb0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55c810871f78 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55c8108720f0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c8108720d0 <col:79> 'int' 0
|   |   `-CallExpr 0x55c810872328 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55c810872310 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c8108722f0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c8103ba6e0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c810872368 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c810872160 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55c810872380 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c8108721a8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c810872398 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c8108721e0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55c8108723b0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c8108722d8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c8108722c0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c810872278 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55c8108726b0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55c810872618 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c8108725e8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55c810872590 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c810872560 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c810872510 <col:54, col:63> 'char [48]' lvalue ->c 0x55c8108603f0
|     |     |   `-CXXMemberCallExpr 0x55c8108724f0 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c810872498 <col:54> '<bound member function type>' ->xanno 0x55c810852958
|     |     |       `-CXXThisExpr 0x55c810872488 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c810872578 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c810872540 <col:67> 'int' lvalue ParmVar 0x55c8108568c0 'i' 'int'
|     `-CXXConstCastExpr 0x55c810872680 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55c810872668 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55c810872630 <col:91> 'const void *' lvalue ParmVar 0x55c810856940 'x' 'const void *'
|-CXXMethodDecl 0x55c810856ae8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55c810872758 <col:34, line:640:5>
|   `-ReturnStmt 0x55c810872748 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55c810872730 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55c810872700 <col:16> 'Packet *' lvalue ->_data_packet 0x55c810860fa8
|         `-CXXThisExpr 0x55c8108726f0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55c810856c28 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55c810856b98 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c81086b7e8 <col:46> 'bool' true
|-CXXMethodDecl 0x55c810856da8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55c810856ce0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55c810856e50 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55c810857600 <line:660:22> "" ""
| |-EnumConstantDecl 0x55c810856f50 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c810857670 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810856f30 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55c810856f10 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55c81084c0a0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55c810856fe0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c810857688 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810856fc0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55c810856fa0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55c81084c130 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55c810857070 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c8108576a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810857050 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55c810857030 <col:21> 'int' 0
| |-EnumConstantDecl 0x55c810857100 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c8108576b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108570e0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55c8108570c0 <col:19> 'int' 16
| |-EnumConstantDecl 0x55c810857190 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c8108576d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810857170 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55c810857150 <col:21> 'int' 16
| |-EnumConstantDecl 0x55c810857220 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c8108576e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810857200 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55c8108571e0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55c8108572b0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c810857700 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810857290 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55c810857270 <col:19> 'int' EnumConstant 0x55c810857100 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55c810857340 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c810857718 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c810857320 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55c810857300 <col:19> 'int' EnumConstant 0x55c810857220 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55c810857410 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c810857730 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108573f0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55c8108573d0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55c810857390 <col:23> 'int' EnumConstant 0x55c810857340 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55c8108573b0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55c8108574e0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c810857748 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c8108574c0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55c8108574a0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55c810857460 <col:23> 'int' EnumConstant 0x55c810857340 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55c810857480 <col:40> 'int' 4
| `-EnumConstantDecl 0x55c8108575b0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55c810857760 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810857590 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55c810857570 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55c810857530 <col:23> 'int' EnumConstant 0x55c810857340 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55c810857550 <col:40> 'int' 8
|-CXXMethodDecl 0x55c8108577a0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55c810857840 <col:68> "" ""
|-CXXMethodDecl 0x55c8108578d8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55c810857978 <col:45> "" ""
|-CXXMethodDecl 0x55c810857a10 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55c810857ab0 <col:57> "" ""
|-CXXMethodDecl 0x55c810857b48 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55c810857be8 <col:45> "" ""
|-CXXMethodDecl 0x55c810857c80 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55c810857d20 <col:57> "" ""
|-CXXMethodDecl 0x55c810857db0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55c810857e50 <col:51> "" ""
|-CXXMethodDecl 0x55c81085d160 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55c81085d200 <col:63> "" ""
|-CXXMethodDecl 0x55c81085d290 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55c81085d330 <col:53> "" ""
|-CXXMethodDecl 0x55c81085d3c0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55c81085d460 <col:65> "" ""
|-CXXMethodDecl 0x55c81085d578 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55c81085d4e8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55c81085d620 <col:61> "" ""
|-CXXMethodDecl 0x55c81085d7b8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55c81085d6a8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55c81085d720 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55c81085d868 <col:67> "" ""
|-CXXMethodDecl 0x55c81085d980 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55c81085d8f0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55c81085da28 <col:63> "" ""
|-CXXMethodDecl 0x55c81085dbc0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55c81085dab0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c81085db28 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55c81085dc70 <col:69> "" ""
|-CXXMethodDecl 0x55c81085dd88 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55c81085dcf8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55c81085de30 <col:63> "" ""
|-CXXMethodDecl 0x55c81085dfc8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55c81085deb8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c81085df30 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c81085e078 <col:69> "" ""
|-CXXMethodDecl 0x55c81085e190 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55c81085e100 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55c81085e238 <col:62> "" ""
|-CXXMethodDecl 0x55c81085e3d0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55c81085e2c0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c81085e338 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55c81085e480 <col:68> "" ""
|-CXXMethodDecl 0x55c81085e598 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55c81085e508 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55c81085e640 <col:63> "" ""
|-CXXMethodDecl 0x55c81085e7d8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55c81085e6c8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c81085e740 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55c81085e888 <col:69> "" ""
|-CXXMethodDecl 0x55c81085e918 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55c81085e9b8 <col:64> "" ""
|-CXXMethodDecl 0x55c81085ea48 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55c81085eae8 <col:52> "" ""
|-CXXMethodDecl 0x55c81085eb78 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55c81085ec18 <col:67> "" ""
|-CXXMethodDecl 0x55c81085eca8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55c81085ed48 <col:55> "" ""
|-CXXMethodDecl 0x55c81085ee60 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55c81085edd0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55c81085ef08 <col:58> "" ""
|-CXXMethodDecl 0x55c81085f0a0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55c81085ef90 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c81085f008 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55c81085f150 <col:62> "" ""
|-CXXMethodDecl 0x55c81085f268 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55c81085f1d8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55c81085f310 <col:58> "" ""
|-CXXMethodDecl 0x55c81085f4a8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55c81085f398 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c81085f410 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55c81085f558 <col:62> "" ""
|-CXXMethodDecl 0x55c81085f670 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55c81085f5e0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55c81085f718 <col:60> "" ""
|-CXXMethodDecl 0x55c81085f8b0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55c81085f7a0 <col:34> col:37 'int'
| |-ParmVarDecl 0x55c81085f818 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55c81085f960 <col:64> "" ""
|-CXXMethodDecl 0x55c81085fa78 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55c81085f9e8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55c81085fb20 <col:58> "" ""
|-CXXMethodDecl 0x55c81085fcb8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55c81085fba8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c81085fc20 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55c81085fd68 <col:62> "" ""
|-CXXMethodDecl 0x55c81085fe80 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55c81085fdf0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55c81085ff28 <col:59> "" ""
|-CXXMethodDecl 0x55c8108600c0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55c81085ffb0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c810860028 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c810860170 <col:63> "" ""
|-AccessSpecDecl 0x55c8108601e0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55c810860208 prev 0x55c810852690 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c810860300 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55c8108603f0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55c810860518 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55c810860698 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55c810860818 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55c810860998 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55c8108728d8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55c810873148 <col:11>
| |-CXXDestructorDecl 0x55c8108729b0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55c810872ae8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55c810872ae8
| | `-ParmVarDecl 0x55c810872bf8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55c810872c98 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c810872c98
| | `-ParmVarDecl 0x55c810872da8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55c810875ad8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c810875be8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55c810875e68 <col:11>
| |   `-ReturnStmt 0x55c810875e58 <col:11>
| |     `-UnaryOperator 0x55c810875e40 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55c810875e30 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55c810875c58 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c810875c58
|   `-ParmVarDecl 0x55c810875d68 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55c810860a00 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c810860b18 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55c810860bb8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55c810860c20 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55c810860c88 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55c810860cf0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55c810860d50 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55c810860e10 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55c810860e70 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55c810860ed0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55c8108727e8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55c810860bb8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55c810873158 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55c8108731b0 <col:12>
| |-CXXConstructorDecl 0x55c810872e18 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55c810872e18
| | `-ParmVarDecl 0x55c810872f28 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55c810872fc8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55c810872fc8
| | `-ParmVarDecl 0x55c8108730d8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55c8108751c0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55c810860f48 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55c810860fa8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55c810861010 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55c810861078 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55c81086a4d0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55c81086a538 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55c81086a598 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55c81086a5f8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55c81086a660 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55c81086a6e8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55c810860f48 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55c810872780 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55c81086a598 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55c8108731c0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55c810873220 <col:21, line:755:5>
|-CXXConstructorDecl 0x55c81086a888 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55c81086a7c8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55c81086a980 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55c81086ab68 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55c81086aa70 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55c81086ae38 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55c81086ac20 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c81086ac98 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c81086ad10 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c81086b058 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55c81086af08 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55c81086af80 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55c81086b328 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55c81086b118 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55c81086b190 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55c81086b208 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55c81086b480 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55c81086b3f0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c81086b5c8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55c81086b538 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55c81086b6c0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810873230 prev 0x55c81084bcb0 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x55c810873368 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x55c8108733f8 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x55c8108734a0 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x55c810873540 <col:20>
| `-OptimizeNoneAttr 0x55c810873598 <col:30>
|-CXXMethodDecl 0x55c8108735e8 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x55c810873688 <col:20>
| `-OptimizeNoneAttr 0x55c8108736e0 <col:30>
|-CXXMethodDecl 0x55c810873730 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55c8108737f8 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55c8108738c0 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55c8108739d8 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x55c810873aa0 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x55c810873b40 <col:20>
| `-OptimizeNoneAttr 0x55c810873b98 <col:30>
|-CXXMethodDecl 0x55c810873c08 <line:787:5, col:62> col:50 used ip_header 'click_ip *() const'
| |-NoInlineAttr 0x55c810873ca8 <col:20>
| `-OptimizeNoneAttr 0x55c810873d00 <col:30>
|-CXXMethodDecl 0x55c810873da8 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x55c810873e48 <col:20>
| `-OptimizeNoneAttr 0x55c810873ea0 <col:30>
|-CXXMethodDecl 0x55c810873ef0 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55c810874008 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x55c810874128 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x55c810874248 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x55c810874310 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x55c8108743b0 <col:62> "" ""
|-AccessSpecDecl 0x55c810874420 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x55c810874480 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x55c810875078 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x55c8108752a0 <col:29, col:31>
|-CXXMethodDecl 0x55c810874548 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x55c810874688 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x55c8108745f8 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x55c810874780 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x55c8108752b0 <col:23, col:25>
|-CXXMethodDecl 0x55c810874938 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x55c810874870 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x55c810874c08 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55c8108749f0 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c810874a68 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c810874ae0 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c810874d98 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x55c810874cd0 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x55c810874e90 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x55c810874ef8 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x55c810874ef8
  `-ParmVarDecl 0x55c810875008 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c8105b6418 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c8105b6538 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x55c8105b6600 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x55c810690430 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c810693288 <col:8>
|-CXXConstructorDecl 0x55c810690538 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x55c810690538
| `-ParmVarDecl 0x55c810690648 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x55c8106906e8 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55c8106907f8 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x55c8105b6600 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x55c8106934a0 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55c810693470 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55c8105b6600
| |     `-CXXStaticCastExpr 0x55c810693440 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x55c810693410 <col:8> 'in_addr' lvalue ParmVar 0x55c8106907f8 '' 'in_addr &&'
| `-CompoundStmt 0x55c8106934e8 <col:8>
`-CXXDestructorDecl 0x55c810693720 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810684fd8 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55c8106850f8 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x55c8106851e0 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x55c8106851c0 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x55c810685188 <col:22> 'int' 4
|-FieldDecl 0x55c810685288 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x55c810685268 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x55c810685230 <col:21> 'int' 4
|-FieldDecl 0x55c8106852e8 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x55c810685348 <line:40:5, col:14> col:14 ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x55c8106853a8 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x55c810685408 <line:42:5, col:14> col:14 referenced ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x55c810685468 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x55c8106854c8 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55c810685528 <line:49:5, col:14> col:14 ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x55c810685598 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x55c810685608 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810473b08 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c810473c28 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x55c810690880 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55c810690960 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x55c810690960
| `-ParmVarDecl 0x55c810690a48 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x55c810690ae8 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x55c810690ae8
| `-ParmVarDecl 0x55c810690bf8 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x55c81082a650 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TCPRewriter::TCPFlow::delta_transition
         0 |   int32_t [2] delta
         8 |   tcp_seq_t [2] trigger
        16 |   uintptr_t nextptr
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c81098e288 <../elements/tcpudp/tcprewriter.hh:136:2, line:149:2> line:136:9 referenced struct delta_transition definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c81098e3a8 <col:2, col:9> col:9 implicit referenced struct delta_transition
|-FieldDecl 0x55c81098e4d8 <line:137:6, col:21> col:14 referenced delta 'int32_t [2]'
|-FieldDecl 0x55c81098e5c8 <line:138:6, col:25> col:16 referenced trigger 'tcp_seq_t [2]'
|-FieldDecl 0x55c81098e628 <line:139:6, col:16> col:16 referenced nextptr 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55c81098e6e0 <line:140:6, line:142:6> line:140:6 delta_transition 'void ()'
| `-CompoundStmt 0x55c810992890 <col:25, line:142:6>
|   `-CallExpr 0x55c810992840 <line:141:3, col:43> 'void *'
|     |-ImplicitCastExpr 0x55c810992828 <col:3> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55c810992808 <col:3> 'void *(void *, int, size_t) throw()' lvalue Function 0x55c81057fe78 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55c810992878 <col:10> 'void *' <BitCast>
|     | `-CXXThisExpr 0x55c8109927a8 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' this
|     |-IntegerLiteral 0x55c8109927b8 <col:16> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55c8109927e8 <col:19, col:42> 'unsigned long' sizeof 'TCPRewriter::TCPFlow::delta_transition'
|-CXXMethodDecl 0x55c81098e808 <line:143:6, line:145:6> line:143:24 used next 'TCPRewriter::TCPFlow::delta_transition *() const'
| `-CompoundStmt 0x55c810992a40 <col:37, line:145:6>
|   `-ReturnStmt 0x55c810992a30 <line:144:3, col:70>
|     `-CXXReinterpretCastExpr 0x55c810992a00 <col:10, col:70> 'TCPRewriter::TCPFlow::delta_transition *' reinterpret_cast<struct TCPRewriter::TCPFlow::delta_transition *> <IntegralToPointer>
|       `-BinaryOperator 0x55c8109929d0 <col:47, col:69> 'unsigned long' '-'
|         |-ImplicitCastExpr 0x55c8109929b8 <col:47> 'uintptr_t':'unsigned long' <LValueToRValue>
|         | `-MemberExpr 0x55c8109928b8 <col:47> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55c81098e628
|         |   `-CXXThisExpr 0x55c8109928a8 <col:47> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
|         `-ParenExpr 0x55c810992998 <col:57, col:69> 'unsigned long'
|           `-BinaryOperator 0x55c810992978 <col:58, col:68> 'unsigned long' '&'
|             |-ImplicitCastExpr 0x55c810992948 <col:58> 'uintptr_t':'unsigned long' <LValueToRValue>
|             | `-MemberExpr 0x55c8109928f8 <col:58> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55c81098e628
|             |   `-CXXThisExpr 0x55c8109928e8 <col:58> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
|             `-ImplicitCastExpr 0x55c810992960 <col:68> 'unsigned long' <IntegralCast>
|               `-IntegerLiteral 0x55c810992928 <col:68> 'int' 3
|-CXXMethodDecl 0x55c81098e978 <line:146:6, line:148:6> line:146:11 used has_trigger 'bool (bool) const'
| |-ParmVarDecl 0x55c81098e8b8 <col:23, col:28> col:28 used direction 'bool'
| `-CompoundStmt 0x55c810992bc0 <col:45, line:148:6>
|   `-ReturnStmt 0x55c810992bb0 <line:147:3, col:35>
|     `-ImplicitCastExpr 0x55c810992b98 <col:10, col:35> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55c810992b78 <col:10, col:35> 'unsigned long' '&'
|         |-ImplicitCastExpr 0x55c810992b48 <col:10> 'uintptr_t':'unsigned long' <LValueToRValue>
|         | `-MemberExpr 0x55c810992a68 <col:10> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55c81098e628
|         |   `-CXXThisExpr 0x55c810992a58 <col:10> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
|         `-ImplicitCastExpr 0x55c810992b60 <col:20, col:35> 'unsigned long' <IntegralCast>
|           `-ParenExpr 0x55c810992b28 <col:20, col:35> 'int'
|             `-BinaryOperator 0x55c810992b08 <col:21, col:26> 'int' '<<'
|               |-IntegerLiteral 0x55c810992a98 <col:21> 'int' 1
|               `-ImplicitCastExpr 0x55c810992af0 <col:26> 'int' <IntegralCast>
|                 `-ImplicitCastExpr 0x55c810992ad8 <col:26> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x55c810992ab8 <col:26> 'bool' lvalue ParmVar 0x55c81098e8b8 'direction' 'bool'
`-CXXDestructorDecl 0x55c8109921b8 <line:136:9> col:9 implicit ~delta_transition 'void ()' inline default trivial noexcept-unevaluated 0x55c8109921b8

Layout: <CGRecordLayout
  LLVMType:%"struct.TCPRewriter::TCPFlow::delta_transition" = type { [2 x i32], [2 x i32], i64 }
  NonVirtualBaseLLVMType:%"struct.TCPRewriter::TCPFlow::delta_transition" = type { [2 x i32], [2 x i32], i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c81098b7e0 <../elements/tcpudp/tcprewriter.hh:97:5, line:155:5> line:97:11 referenced class TCPFlow definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-public 'IPRewriterFlow'
|-CXXRecordDecl 0x55c81098b938 <col:5, col:11> col:11 implicit referenced class TCPFlow
|-AccessSpecDecl 0x55c81098b9c8 <col:45, col:51> col:45 public
|-CXXConstructorDecl 0x55c81098bd78 <line:99:2, line:104:2> line:99:2 TCPFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55c81098ba00 <col:10, col:27> col:27 used owner 'IPRewriterInput *'
| |-ParmVarDecl 0x55c81098ba78 <col:34, col:50> col:50 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55c81098baf0 <line:100:3, col:19> col:19 used rewritten_flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55c81098bb68 <line:101:3, col:8> col:8 used guaranteed 'bool'
| |-ParmVarDecl 0x55c81098bbe0 <col:20, col:36> col:36 used expiry_j 'click_jiffies_t':'unsigned int'
| |-CXXCtorInitializer 'IPRewriterFlow'
| | `-CXXConstructExpr 0x55c810991d58 <line:102:8, line:103:32> 'IPRewriterFlow' 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| |   |-ImplicitCastExpr 0x55c810991cf8 <line:102:23> 'IPRewriterInput *' <LValueToRValue>
| |   | `-DeclRefExpr 0x55c810991478 <col:23> 'IPRewriterInput *' lvalue ParmVar 0x55c81098ba00 'owner' 'IPRewriterInput *'
| |   |-DeclRefExpr 0x55c810991498 <col:30> 'const IPFlowID' lvalue ParmVar 0x55c81098ba78 'flowid' 'const IPFlowID &'
| |   |-DeclRefExpr 0x55c8109914b8 <col:38> 'const IPFlowID' lvalue ParmVar 0x55c81098baf0 'rewritten_flowid' 'const IPFlowID &'
| |   |-ImplicitCastExpr 0x55c810991d10 <line:103:9> 'uint8_t':'unsigned char' <IntegralCast>
| |   | `-IntegerLiteral 0x55c8109914d8 <col:9> 'int' 6
| |   |-ImplicitCastExpr 0x55c810991d28 <col:12> 'bool' <LValueToRValue>
| |   | `-DeclRefExpr 0x55c8109914f8 <col:12> 'bool' lvalue ParmVar 0x55c81098bb68 'guaranteed' 'bool'
| |   `-ImplicitCastExpr 0x55c810991d40 <col:24> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |     `-DeclRefExpr 0x55c810991518 <col:24> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55c81098bbe0 'expiry_j' 'click_jiffies_t':'unsigned int'
| |-CXXCtorInitializer Field 0x55c81098ea48 '_dt' 'TCPRewriter::TCPFlow::delta_transition *'
| | `-ImplicitCastExpr 0x55c810991e18 <col:39> 'TCPRewriter::TCPFlow::delta_transition *' <NullToPointer>
| |   `-IntegerLiteral 0x55c810991dd8 <col:39> 'int' 0
| `-CompoundStmt 0x55c810991e68 <col:42, line:104:2>
|-CXXDestructorDecl 0x55c81098be90 <line:106:2, line:111:2> line:106:2 used ~TCPFlow 'void () noexcept'
| `-CompoundStmt 0x55c810992318 <col:13, line:111:2>
|   `-WhileStmt 0x55c8109922e0 <line:107:6, line:110:6> has_var
|     |-DeclStmt 0x55c810992300 <line:107:13, col:35>
|     | `-VarDecl 0x55c810991f70 <col:13, col:35> col:31 used x 'TCPRewriter::TCPFlow::delta_transition *' cinit
|     |   `-ImplicitCastExpr 0x55c810992018 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|     |     `-MemberExpr 0x55c810991fe8 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55c81098ea48
|     |       `-CXXThisExpr 0x55c810991fd8 <col:35> 'TCPRewriter::TCPFlow *' implicit this
|     |-ImplicitCastExpr 0x55c810992068 <col:31> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55c810992050 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|     |   `-DeclRefExpr 0x55c810992030 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55c810991f70 'x' 'TCPRewriter::TCPFlow::delta_transition *'
|     `-CompoundStmt 0x55c8109922c0 <col:40, line:110:6>
|       |-BinaryOperator 0x55c810992160 <line:108:3, col:17> 'TCPRewriter::TCPFlow::delta_transition *' lvalue '='
|       | |-MemberExpr 0x55c810992090 <col:3> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55c81098ea48
|       | | `-CXXThisExpr 0x55c810992080 <col:3> 'TCPRewriter::TCPFlow *' implicit this
|       | `-CXXMemberCallExpr 0x55c810992128 <col:9, col:17> 'TCPRewriter::TCPFlow::delta_transition *'
|       |   `-MemberExpr 0x55c8109920f8 <col:9, col:12> '<bound member function type>' ->next 0x55c81098e808
|       |     `-ImplicitCastExpr 0x55c810992148 <col:9> 'const TCPRewriter::TCPFlow::delta_transition *' <NoOp>
|       |       `-ImplicitCastExpr 0x55c8109920e0 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|       |         `-DeclRefExpr 0x55c8109920c0 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55c810991f70 'x' 'TCPRewriter::TCPFlow::delta_transition *'
|       `-CXXDeleteExpr 0x55c8109922a0 <line:109:3, col:10> 'void' Function 0x55c810471b88 'operator delete' 'void (void *) noexcept'
|         `-ImplicitCastExpr 0x55c8109921a0 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|           `-DeclRefExpr 0x55c810992180 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55c810991f70 'x' 'TCPRewriter::TCPFlow::delta_transition *'
|-EnumDecl 0x55c81098bf70 <line:113:2, line:118:2> line:113:2
| |-EnumConstantDecl 0x55c81098c070 <line:114:6, col:23> col:6 referenced s_forward_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55c81098c450 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81098c050 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55c81098c030 <col:23> 'int' 1
| |-EnumConstantDecl 0x55c81098c100 <col:26, col:41> col:26 referenced s_reply_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55c81098c468 <col:41> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81098c0e0 <col:41> 'int' Int: 2
| |     `-IntegerLiteral 0x55c81098c0c0 <col:41> 'int' 2
| |-EnumConstantDecl 0x55c81098c1f0 <line:115:6, col:50> col:6 referenced s_both_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55c81098c480 <col:20, col:50> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81098c1d0 <col:20, col:50> 'int' Int: 3
| |     `-ParenExpr 0x55c81098c1b0 <col:20, col:50> 'int'
| |       `-BinaryOperator 0x55c81098c190 <col:21, col:38> 'int' '|'
| |         |-DeclRefExpr 0x55c81098c150 <col:21> 'int' EnumConstant 0x55c81098c070 's_forward_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |         `-DeclRefExpr 0x55c81098c170 <col:38> 'int' EnumConstant 0x55c81098c100 's_reply_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-EnumConstantDecl 0x55c81098c280 <line:116:6, col:23> col:6 referenced s_forward_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55c81098c498 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81098c260 <col:23> 'int' Int: 4
| |     `-IntegerLiteral 0x55c81098c240 <col:23> 'int' 4
| |-EnumConstantDecl 0x55c81098c310 <col:26, col:41> col:26 referenced s_reply_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55c81098c4b0 <col:41> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c81098c2f0 <col:41> 'int' Int: 8
| |     `-IntegerLiteral 0x55c81098c2d0 <col:41> 'int' 8
| `-EnumConstantDecl 0x55c81098c400 <line:117:6, col:50> col:6 referenced s_both_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|   `-ImplicitCastExpr 0x55c81098c4c8 <col:20, col:50> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c81098c3e0 <col:20, col:50> 'int' Int: 12
|       `-ParenExpr 0x55c81098c3c0 <col:20, col:50> 'int'
|         `-BinaryOperator 0x55c81098c3a0 <col:21, col:38> 'int' '|'
|           |-DeclRefExpr 0x55c81098c360 <col:21> 'int' EnumConstant 0x55c81098c280 's_forward_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|           `-DeclRefExpr 0x55c81098c380 <col:38> 'int' EnumConstant 0x55c81098c310 's_reply_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|-CXXMethodDecl 0x55c81098c528 <line:119:2, line:121:2> line:119:7 used both_done 'bool () const'
| `-CompoundStmt 0x55c810992530 <col:25, line:121:2>
|   `-ReturnStmt 0x55c810992520 <line:120:6, col:40>
|     `-BinaryOperator 0x55c810992500 <col:13, col:40> 'bool' '=='
|       |-ParenExpr 0x55c810992418 <col:13, col:35> 'int'
|       | `-BinaryOperator 0x55c8109923f8 <col:14, col:24> 'int' '&'
|       |   |-ImplicitCastExpr 0x55c8109923c8 <col:14> 'int' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x55c8109923b0 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   |   `-MemberExpr 0x55c810992360 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55c81093c3c8
|       |   |     `-ImplicitCastExpr 0x55c810992340 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
|       |   |       `-CXXThisExpr 0x55c810992330 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
|       |   `-ImplicitCastExpr 0x55c8109923e0 <col:24> 'int' <IntegralCast>
|       |     `-DeclRefExpr 0x55c810992390 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55c81098c1f0 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|       `-ImplicitCastExpr 0x55c8109924e8 <col:40> 'int' <IntegralCast>
|         `-DeclRefExpr 0x55c810992438 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55c81098c1f0 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|-CXXMethodDecl 0x55c81098c5e8 <line:122:2, line:124:2> line:122:7 used both_data 'bool () const'
| `-CompoundStmt 0x55c810992748 <col:25, line:124:2>
|   `-ReturnStmt 0x55c810992738 <line:123:6, col:40>
|     `-BinaryOperator 0x55c810992718 <col:13, col:40> 'bool' '=='
|       |-ParenExpr 0x55c810992630 <col:13, col:35> 'int'
|       | `-BinaryOperator 0x55c810992610 <col:14, col:24> 'int' '&'
|       |   |-ImplicitCastExpr 0x55c8109925e0 <col:14> 'int' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x55c8109925c8 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   |   `-MemberExpr 0x55c810992578 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55c81093c3c8
|       |   |     `-ImplicitCastExpr 0x55c810992558 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
|       |   |       `-CXXThisExpr 0x55c810992548 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
|       |   `-ImplicitCastExpr 0x55c8109925f8 <col:24> 'int' <IntegralCast>
|       |     `-DeclRefExpr 0x55c8109925a8 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55c81098c400 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|       `-ImplicitCastExpr 0x55c810992700 <col:40> 'int' <IntegralCast>
|         `-DeclRefExpr 0x55c810992650 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55c81098c400 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|-CXXMethodDecl 0x55c81098c8b0 <line:126:2, col:75> col:6 update_seqno_delta 'int (bool, tcp_seq_t, int32_t)'
| |-ParmVarDecl 0x55c81098c698 <col:25, col:30> col:30 direction 'bool'
| |-ParmVarDecl 0x55c81098c710 <col:41, col:51> col:51 old_seqno 'tcp_seq_t':'unsigned int'
| `-ParmVarDecl 0x55c81098c788 <col:62, col:70> col:70 delta 'int32_t':'int'
|-CXXMethodDecl 0x55c81098cb08 <line:127:2, col:53> col:12 new_seq 'tcp_seq_t (bool, tcp_seq_t) const'
| |-ParmVarDecl 0x55c81098c978 <col:20, col:25> col:25 direction 'bool'
| `-ParmVarDecl 0x55c81098c9f0 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
|-CXXMethodDecl 0x55c81098dcf8 <line:128:2, col:53> col:12 new_ack 'tcp_seq_t (bool, tcp_seq_t) const'
| |-ParmVarDecl 0x55c81098cbc8 <col:20, col:25> col:25 direction 'bool'
| `-ParmVarDecl 0x55c81098dc60 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
|-CXXMethodDecl 0x55c81098df50 <line:130:2, col:62> col:7 used apply 'void (WritablePacket *, bool, unsigned int)'
| |-ParmVarDecl 0x55c81098ddb8 <col:13, col:29> col:29 p 'WritablePacket *'
| |-ParmVarDecl 0x55c81098de30 <col:32, col:37> col:37 direction 'bool'
| `-ParmVarDecl 0x55c81098deb0 <col:48, col:57> col:57 annos 'unsigned int'
|-CXXMethodDecl 0x55c81098e1a8 <line:132:2, col:69> col:7 unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x55c81098e018 <col:15, col:28> col:28 sa 'StringAccum &'
| |-ParmVarDecl 0x55c81098e090 <col:32, col:37> col:37 direction 'bool'
| `-ParmVarDecl 0x55c81098e108 <col:48, col:64> col:64 now 'click_jiffies_t':'unsigned int'
|-AccessSpecDecl 0x55c81098e260 <line:134:7, col:14> col:7 private
|-CXXRecordDecl 0x55c81098e288 <line:136:2, line:149:2> line:136:9 referenced struct delta_transition definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c81098e3a8 <col:2, col:9> col:9 implicit referenced struct delta_transition
| |-FieldDecl 0x55c81098e4d8 <line:137:6, col:21> col:14 referenced delta 'int32_t [2]'
| |-FieldDecl 0x55c81098e5c8 <line:138:6, col:25> col:16 referenced trigger 'tcp_seq_t [2]'
| |-FieldDecl 0x55c81098e628 <line:139:6, col:16> col:16 referenced nextptr 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55c81098e6e0 <line:140:6, line:142:6> line:140:6 delta_transition 'void ()'
| | `-CompoundStmt 0x55c810992890 <col:25, line:142:6>
| |   `-CallExpr 0x55c810992840 <line:141:3, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55c810992828 <col:3> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55c810992808 <col:3> 'void *(void *, int, size_t) throw()' lvalue Function 0x55c81057fe78 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55c810992878 <col:10> 'void *' <BitCast>
| |     | `-CXXThisExpr 0x55c8109927a8 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' this
| |     |-IntegerLiteral 0x55c8109927b8 <col:16> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55c8109927e8 <col:19, col:42> 'unsigned long' sizeof 'TCPRewriter::TCPFlow::delta_transition'
| |-CXXMethodDecl 0x55c81098e808 <line:143:6, line:145:6> line:143:24 used next 'TCPRewriter::TCPFlow::delta_transition *() const'
| | `-CompoundStmt 0x55c810992a40 <col:37, line:145:6>
| |   `-ReturnStmt 0x55c810992a30 <line:144:3, col:70>
| |     `-CXXReinterpretCastExpr 0x55c810992a00 <col:10, col:70> 'TCPRewriter::TCPFlow::delta_transition *' reinterpret_cast<struct TCPRewriter::TCPFlow::delta_transition *> <IntegralToPointer>
| |       `-BinaryOperator 0x55c8109929d0 <col:47, col:69> 'unsigned long' '-'
| |         |-ImplicitCastExpr 0x55c8109929b8 <col:47> 'uintptr_t':'unsigned long' <LValueToRValue>
| |         | `-MemberExpr 0x55c8109928b8 <col:47> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55c81098e628
| |         |   `-CXXThisExpr 0x55c8109928a8 <col:47> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| |         `-ParenExpr 0x55c810992998 <col:57, col:69> 'unsigned long'
| |           `-BinaryOperator 0x55c810992978 <col:58, col:68> 'unsigned long' '&'
| |             |-ImplicitCastExpr 0x55c810992948 <col:58> 'uintptr_t':'unsigned long' <LValueToRValue>
| |             | `-MemberExpr 0x55c8109928f8 <col:58> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55c81098e628
| |             |   `-CXXThisExpr 0x55c8109928e8 <col:58> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| |             `-ImplicitCastExpr 0x55c810992960 <col:68> 'unsigned long' <IntegralCast>
| |               `-IntegerLiteral 0x55c810992928 <col:68> 'int' 3
| |-CXXMethodDecl 0x55c81098e978 <line:146:6, line:148:6> line:146:11 used has_trigger 'bool (bool) const'
| | |-ParmVarDecl 0x55c81098e8b8 <col:23, col:28> col:28 used direction 'bool'
| | `-CompoundStmt 0x55c810992bc0 <col:45, line:148:6>
| |   `-ReturnStmt 0x55c810992bb0 <line:147:3, col:35>
| |     `-ImplicitCastExpr 0x55c810992b98 <col:10, col:35> 'bool' <IntegralToBoolean>
| |       `-BinaryOperator 0x55c810992b78 <col:10, col:35> 'unsigned long' '&'
| |         |-ImplicitCastExpr 0x55c810992b48 <col:10> 'uintptr_t':'unsigned long' <LValueToRValue>
| |         | `-MemberExpr 0x55c810992a68 <col:10> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55c81098e628
| |         |   `-CXXThisExpr 0x55c810992a58 <col:10> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| |         `-ImplicitCastExpr 0x55c810992b60 <col:20, col:35> 'unsigned long' <IntegralCast>
| |           `-ParenExpr 0x55c810992b28 <col:20, col:35> 'int'
| |             `-BinaryOperator 0x55c810992b08 <col:21, col:26> 'int' '<<'
| |               |-IntegerLiteral 0x55c810992a98 <col:21> 'int' 1
| |               `-ImplicitCastExpr 0x55c810992af0 <col:26> 'int' <IntegralCast>
| |                 `-ImplicitCastExpr 0x55c810992ad8 <col:26> 'bool' <LValueToRValue>
| |                   `-DeclRefExpr 0x55c810992ab8 <col:26> 'bool' lvalue ParmVar 0x55c81098e8b8 'direction' 'bool'
| `-CXXDestructorDecl 0x55c8109921b8 <line:136:9> col:9 implicit ~delta_transition 'void ()' inline default trivial noexcept-unevaluated 0x55c8109921b8
|-FieldDecl 0x55c81098ea48 <line:151:2, col:20> col:20 referenced _dt 'TCPRewriter::TCPFlow::delta_transition *'
`-CXXMethodDecl 0x55c81098ec88 <line:153:2, col:67> col:7 apply_sack 'void (bool, click_tcp *, int)'
  |-ParmVarDecl 0x55c81098eaa8 <col:18, col:23> col:23 direction 'bool'
  |-ParmVarDecl 0x55c81098eb20 <col:34, col:45> col:45 tcp 'click_tcp *'
  `-ParmVarDecl 0x55c81098eba0 <col:50, col:54> col:54 transport_len 'int'

Layout: <CGRecordLayout
  LLVMType:%"class.TCPRewriter::TCPFlow" = type { %class.IPRewriterFlow, %"struct.TCPRewriter::TCPFlow::delta_transition"* }
  NonVirtualBaseLLVMType:%"class.TCPRewriter::TCPFlow" = type { %class.IPRewriterFlow, %"struct.TCPRewriter::TCPFlow::delta_transition"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810995060 <../elements/tcpudp/udprewriter.hh:165:5, line:180:5> line:165:11 referenced class UDPFlow definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'IPRewriterFlow'
|-CXXRecordDecl 0x55c8109951b8 <col:5, col:11> col:11 implicit referenced class UDPFlow
|-AccessSpecDecl 0x55c810995248 <col:45, col:51> col:45 public
|-CXXConstructorDecl 0x55c810995698 <line:167:2, line:172:2> line:167:2 UDPFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, int, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55c810995280 <col:10, col:27> col:27 used owner 'IPRewriterInput *'
| |-ParmVarDecl 0x55c8109952f8 <col:34, col:50> col:50 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55c810995370 <line:168:3, col:19> col:19 used rewritten_flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55c8109953f0 <col:37, col:41> col:41 used ip_p 'int'
| |-ParmVarDecl 0x55c810995468 <line:169:3, col:8> col:8 used guaranteed 'bool'
| |-ParmVarDecl 0x55c8109954e0 <col:20, col:36> col:36 used expiry_j 'click_jiffies_t':'unsigned int'
| |-CXXCtorInitializer 'IPRewriterFlow'
| | `-CXXConstructExpr 0x55c8109a1278 <line:170:8, line:171:35> 'IPRewriterFlow' 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| |   |-ImplicitCastExpr 0x55c8109a1200 <line:170:23> 'IPRewriterInput *' <LValueToRValue>
| |   | `-DeclRefExpr 0x55c8109a10e8 <col:23> 'IPRewriterInput *' lvalue ParmVar 0x55c810995280 'owner' 'IPRewriterInput *'
| |   |-DeclRefExpr 0x55c8109a1108 <col:30> 'const IPFlowID' lvalue ParmVar 0x55c8109952f8 'flowid' 'const IPFlowID &'
| |   |-DeclRefExpr 0x55c8109a1128 <col:38> 'const IPFlowID' lvalue ParmVar 0x55c810995370 'rewritten_flowid' 'const IPFlowID &'
| |   |-ImplicitCastExpr 0x55c8109a1230 <line:171:9> 'uint8_t':'unsigned char' <IntegralCast>
| |   | `-ImplicitCastExpr 0x55c8109a1218 <col:9> 'int' <LValueToRValue>
| |   |   `-DeclRefExpr 0x55c8109a1148 <col:9> 'int' lvalue ParmVar 0x55c8109953f0 'ip_p' 'int'
| |   |-ImplicitCastExpr 0x55c8109a1248 <col:15> 'bool' <LValueToRValue>
| |   | `-DeclRefExpr 0x55c8109a1168 <col:15> 'bool' lvalue ParmVar 0x55c810995468 'guaranteed' 'bool'
| |   `-ImplicitCastExpr 0x55c8109a1260 <col:27> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |     `-DeclRefExpr 0x55c8109a1188 <col:27> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55c8109954e0 'expiry_j' 'click_jiffies_t':'unsigned int'
| `-CompoundStmt 0x55c8109a1300 <col:37, line:172:2>
|-CXXMethodDecl 0x55c8109957b8 <line:174:2, line:176:2> line:174:7 used streaming 'bool () const'
| `-CompoundStmt 0x55c8109a13f0 <col:25, line:176:2>
|   `-ReturnStmt 0x55c8109a13e0 <line:175:6, col:23>
|     `-BinaryOperator 0x55c8109a13c0 <col:13, col:23> 'bool' '>'
|       |-ImplicitCastExpr 0x55c8109a13a8 <col:13> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x55c8109a1390 <col:13> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   `-MemberExpr 0x55c8109a1340 <col:13> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55c81093c3c8
|       |     `-ImplicitCastExpr 0x55c8109a1320 <col:13> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
|       |       `-CXXThisExpr 0x55c8109a1310 <col:13> 'const UDPRewriter::UDPFlow *' implicit this
|       `-IntegerLiteral 0x55c8109a1370 <col:23> 'int' 6
`-CXXMethodDecl 0x55c810995a00 <line:178:2, col:62> col:7 used apply 'void (WritablePacket *, bool, unsigned int)'
  |-ParmVarDecl 0x55c810995868 <col:13, col:29> col:29 p 'WritablePacket *'
  |-ParmVarDecl 0x55c8109958e0 <col:32, col:37> col:37 direction 'bool'
  `-ParmVarDecl 0x55c810995960 <col:48, col:57> col:57 annos 'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%"class.UDPRewriter::UDPFlow" = type { %class.IPRewriterFlow }
  NonVirtualBaseLLVMType:%"class.UDPRewriter::UDPFlow" = type { %class.IPRewriterFlow }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810a63540 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c810a63658 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x55c810a63700 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x55c810a63768 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x55c810a637d0 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x55c810a63880 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x55c810a63700 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x55c810a64700 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x55c810a646b8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x55c810a64680 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x55c810a64668 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x55c810a64610 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55c81067c520 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x55c810a63768 'len' 'int'
| | `-IntegerLiteral 0x55c810a64778 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x55c810a637d0 'cap' 'int'
| | `-IntegerLiteral 0x55c810a647e0 <col:20> 'int' 0
| `-CompoundStmt 0x55c810a64860 <col:23, line:119:2>
|-CXXConstructorDecl 0x55c810a639f8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x55c810a63938 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x55c810a64870 <col:37, line:121:2>
|-CXXConstructorDecl 0x55c810a66a88 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c810a66b98 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55c810a63700 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x55c810a684e0 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x55c810a684b0 <col:12> 'unsigned char *const' lvalue .s 0x55c810a63700
| |     `-DeclRefExpr 0x55c810a68490 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55c810a66b98 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55c810a63768 'len' 'int'
| | `-ImplicitCastExpr 0x55c810a68570 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55c810a68540 <col:12> 'const int' lvalue .len 0x55c810a63768
| |     `-DeclRefExpr 0x55c810a68520 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55c810a66b98 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55c810a637d0 'cap' 'int'
| | `-ImplicitCastExpr 0x55c810a68600 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55c810a685d0 <col:12> 'const int' lvalue .cap 0x55c810a637d0
| |     `-DeclRefExpr 0x55c810a685b0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55c810a66b98 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x55c810a68658 <col:12>
|-CXXConstructorDecl 0x55c810a66c38 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c810a66c38
| `-ParmVarDecl 0x55c810a66d48 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x55c810a68910 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c810a5ec68 prev 0x55c8109a5d10 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c810a5ed60 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x55c810a5edf0 <col:21, col:27> col:21 public
|-TypedefDecl 0x55c810a5ee30 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55c810317fd0 'const char *'
|   `-QualType 0x55c810317521 'const char' const
|     `-BuiltinType 0x55c810317520 'char'
|-TypedefDecl 0x55c810a5eea0 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x55c8103181a0 'char *'
|   `-BuiltinType 0x55c810317520 'char'
|-TypedefDecl 0x55c810a5efe0 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x55c810a5ef50 'int (StringAccum::*)() const'
|   |-RecordType 0x55c8105dcd70 'StringAccum'
|   | `-CXXRecord 0x55c810a5ec68 'StringAccum'
|   `-ParenType 0x55c810653b20 'int () const' sugar
|     `-FunctionProtoType 0x55c810636250 'int () const' const cdecl
|       `-BuiltinType 0x55c810317580 'int'
|-CXXConstructorDecl 0x55c810a5f0a0 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x55c810a5f1f0 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x55c810a5f160 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x55c810a5f340 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x55c810a5f2b0 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x55c810a5f4e8 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x55c810a5f428 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x55c810a5f698 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x55c810a5f5d8 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x55c810a5f790 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x55c810a5f948 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x55c810a5f880 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x55c810a5fac8 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x55c810a5fa00 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x55c810a5fbc0 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55c810a5fc88 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x55c810a5fd50 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55c810a5fe18 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x55c810a5fee0 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x55c810a60048 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55c810a601a0 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55c810a60260 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55c810a60368 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55c810a60478 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55c810a60538 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55c810a605f8 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55c810a60740 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55c810a606b0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55c810a608d0 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x55c810a60800 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55c810a60998 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55c810a60a90 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x55c810a60b50 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55c810a60c18 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x55c810a60cd8 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55c810a60d98 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55c810a60e58 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55c810a60fa8 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x55c810a60f10 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x55c810a610f8 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x55c810a61068 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x55c810a61250 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x55c810a611b8 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x55c810a613a0 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x55c810a61310 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x55c810a615c0 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x55c810a61460 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x55c810a614e0 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x55c810a64538 <col:53> 'int' 0
|-CXXMethodDecl 0x55c810a61718 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x55c810a61688 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x55c810a64558 <col:34> 'int' 1
|-CXXMethodDecl 0x55c810a61860 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x55c810a617d0 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55c810a619b0 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x55c810a61920 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x55c810a61b00 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x55c810a61a70 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x55c810a61c50 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55c810a61bc0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55c810a61e28 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55c810a61d10 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55c810a61d90 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55c810a62008 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55c810a61ef0 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x55c810a61f70 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x55c810a621e8 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55c810a620d0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55c810a62150 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55c810a623c8 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55c810a622b0 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x55c810a62330 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x55c810a625a8 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55c810a62490 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55c810a62510 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55c810a62908 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x55c810a626f0 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55c810a62770 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55c810a64578 <col:56> 'int' 10
| `-ParmVarDecl 0x55c810a627e8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c810a64598 <col:77> 'bool' true
|-CXXMethodDecl 0x55c810a62c68 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x55c810a62a50 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55c810a62ad0 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x55c810a645a8 <col:57> 'int' 10
| `-ParmVarDecl 0x55c810a62b48 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c810a645c8 <col:78> 'bool' true
|-CXXMethodDecl 0x55c810a62e90 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x55c810a62d38 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x55c810a62db8 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x55c810a62f88 <line:98:5, col:24> col:12 used take_string 'String ()'
|-CXXMethodDecl 0x55c810a630f8 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x55c810a63038 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x55c810a63248 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x55c810a631b8 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x55c810a632f0 <col:51> "" ""
|-AccessSpecDecl 0x55c810a63360 <line:106:3, col:10> col:3 private
|-EnumDecl 0x55c810a63388 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x55c810a634d8 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x55c810a63528 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c810a634b8 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x55c810a63488 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x55c81065d888 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x55c810a63540 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c810a63658 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x55c810a63700 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x55c810a63768 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x55c810a637d0 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x55c810a63880 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x55c810a63700 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x55c810a64700 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x55c810a646b8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x55c810a64680 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x55c810a64668 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x55c810a64610 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55c81067c520 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x55c810a63768 'len' 'int'
| | | `-IntegerLiteral 0x55c810a64778 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x55c810a637d0 'cap' 'int'
| | | `-IntegerLiteral 0x55c810a647e0 <col:20> 'int' 0
| | `-CompoundStmt 0x55c810a64860 <col:23, line:119:2>
| |-CXXConstructorDecl 0x55c810a639f8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x55c810a63938 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x55c810a64870 <col:37, line:121:2>
| |-CXXConstructorDecl 0x55c810a66a88 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c810a66b98 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55c810a63700 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x55c810a684e0 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x55c810a684b0 <col:12> 'unsigned char *const' lvalue .s 0x55c810a63700
| | |     `-DeclRefExpr 0x55c810a68490 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55c810a66b98 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55c810a63768 'len' 'int'
| | | `-ImplicitCastExpr 0x55c810a68570 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55c810a68540 <col:12> 'const int' lvalue .len 0x55c810a63768
| | |     `-DeclRefExpr 0x55c810a68520 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55c810a66b98 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55c810a637d0 'cap' 'int'
| | | `-ImplicitCastExpr 0x55c810a68600 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55c810a685d0 <col:12> 'const int' lvalue .cap 0x55c810a637d0
| | |     `-DeclRefExpr 0x55c810a685b0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55c810a66b98 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x55c810a68658 <col:12>
| |-CXXConstructorDecl 0x55c810a66c38 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c810a66c38
| | `-ParmVarDecl 0x55c810a66d48 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x55c810a68910 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x55c810a63ad0 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x55c810a63bd0 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x55c810a63b38 <col:16> col:19 'int'
|-CXXMethodDecl 0x55c810a63db0 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x55c810a63c90 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x55c810a63d10 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x55c810a63f90 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x55c810a63e78 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55c810a63ef8 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55c810a640e8 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x55c810a64058 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x55c810a64238 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x55c810a641a8 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x55c810a644f8 <line:132:5, col:70> col:25
  `-FunctionDecl 0x55c810a64438 parent 0x55c810317488 <col:5, col:70> col:25 operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x55c810a642f0 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x55c810a64368 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810969a90 <../dummy_inc/click/hashcontainer.hh:14:1, col:69> line:302:7 class HashContainer_const_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55c8109854d8 prev 0x55c810969a90 <col:1, col:7> col:7 implicit class HashContainer_const_iterator
|-AccessSpecDecl 0x55c810985568 <col:38, col:44> col:38 public
|-TypedefDecl 0x55c810985730 <line:304:5, col:53> col:53 size_type 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type':'unsigned long'
| `-ElaboratedType 0x55c8109856e0 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type' sugar
|   `-TypedefType 0x55c810969600 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type' sugar
|     |-Typedef 0x55c810968dc0 'size_type'
|     `-TypedefType 0x55c8103c3980 'size_t' sugar
|       |-Typedef 0x55c810387be0 'size_t'
|       `-BuiltinType 0x55c810317640 'unsigned long'
|-TypedefDecl 0x55c8109858d0 <line:305:5, col:61> col:61 referenced bucket_count_type 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| `-ElaboratedType 0x55c810985880 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type' sugar
|   `-TypedefType 0x55c8109697a0 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type' sugar
|     |-Typedef 0x55c810968e18 'bucket_count_type'
|     `-TypedefType 0x55c810473e90 'uint32_t' sugar
|       |-Typedef 0x55c8103804c8 'uint32_t'
|       `-TypedefType 0x55c8103595a0 '__uint32_t' sugar
|         |-Typedef 0x55c810359198 '__uint32_t'
|         `-BuiltinType 0x55c810317620 'unsigned int'
|-CXXConstructorDecl 0x55c810985960 <line:308:5, line:309:5> line:308:5 HashContainer_const_iterator 'void ()'
|-CXXMethodDecl 0x55c810985ac8 <line:312:5, line:314:5> line:312:8 used get 'IPRewriterEntry *() const'
|-CXXMethodDecl 0x55c810985b98 <line:317:5, line:319:5> line:317:8 used operator-> 'IPRewriterEntry *() const'
|-CXXMethodDecl 0x55c810985cf8 <line:323:5, line:325:5> line:323:8 operator* 'IPRewriterEntry &() const'
|-CXXMethodDecl 0x55c810985da8 <line:328:5, line:330:5> line:328:17 used live 'bool () const' inline
|-TypedefDecl 0x55c810985f38 <line:332:5, col:73> col:48 unspecified_bool_type 'IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const'
| `-MemberPointerType 0x55c810985ed0 'IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const'
|   |-RecordType 0x55c810969b90 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|   | `-ClassTemplateSpecialization 0x55c810969a90 'HashContainer_const_iterator'
|   `-ParenType 0x55c810985e60 'IPRewriterEntry *() const' sugar
|     `-FunctionProtoType 0x55c810985a80 'IPRewriterEntry *() const' const cdecl
|       `-PointerType 0x55c810985a20 'IPRewriterEntry *'
|         `-SubstTemplateTypeParmType 0x55c810985590 'IPRewriterEntry' sugar
|           |-TemplateTypeParmType 0x55c8108da5a0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55c8108da548 'T'
|           `-RecordType 0x55c8109337a0 'IPRewriterEntry'
|             `-CXXRecord 0x55c810936b40 'IPRewriterEntry'
|-CXXConversionDecl 0x55c810986050 <line:334:5, line:336:5> line:334:12 operator IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55c8109862a8 <line:339:5, line:341:5> line:339:32 hashcontainer 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *() const'
|-CXXMethodDecl 0x55c8109863c8 <line:344:5, line:346:5> line:344:23 bucket 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type () const'
|-CXXMethodDecl 0x55c810986478 <line:349:5, line:361:5> line:349:10 used operator++ 'void ()'
|-CXXMethodDecl 0x55c8109865b8 <line:364:5, line:366:5> line:364:10 operator++ 'void (int)'
| `-ParmVarDecl 0x55c810986528 <col:21> col:24 'int'
|-AccessSpecDecl 0x55c810986670 <line:368:3, col:10> col:3 private
|-FieldDecl 0x55c8109866a8 <line:370:5, col:8> col:8 referenced _element 'IPRewriterEntry *'
|-FieldDecl 0x55c810986740 <line:371:5, col:9> col:9 referenced _pprev 'IPRewriterEntry **'
|-FieldDecl 0x55c8109867a0 <line:372:5, col:23> col:23 referenced _bucket 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
|-FieldDecl 0x55c8109868e8 <line:373:5, col:32> col:32 referenced _hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x55c810986b48 <line:375:5, line:385:5> line:375:12 HashContainer_const_iterator 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *)' inline
| `-ParmVarDecl 0x55c810986a38 <col:41, col:68> col:68 hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x55c810986fd8 <line:387:5, line:390:5> line:387:12 HashContainer_const_iterator 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *, HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type, IPRewriterEntry **, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55c810986d08 <col:41, col:68> col:68 hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| |-ParmVarDecl 0x55c810986d80 <col:72, col:90> col:90 b 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x55c810986e00 <col:93, col:97> col:97 pprev 'IPRewriterEntry **'
| `-ParmVarDecl 0x55c810986e78 <col:104, col:107> col:107 element 'IPRewriterEntry *'
|-FriendDecl 0x55c8109871b8 <line:392:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55c810987308 <line:393:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXDestructorDecl 0x55c810988400 <line:302:7> col:7 implicit ~HashContainer_const_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55c810988538 <col:7> col:7 implicit constexpr HashContainer_const_iterator 'void (const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55c810988538
| `-ParmVarDecl 0x55c810988648 <col:7> col:7 'const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXConstructorDecl 0x55c8109886e8 <col:7> col:7 implicit used constexpr HashContainer_const_iterator 'void (HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55c8109887f8 <col:7> col:7 used 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55c8109866a8 '_element' 'IPRewriterEntry *'
| | `-ImplicitCastExpr 0x55c810988d98 <col:7> 'IPRewriterEntry *' <LValueToRValue>
| |   `-MemberExpr 0x55c810988d50 <col:7> 'IPRewriterEntry *' xvalue ._element 0x55c8109866a8
| |     `-CXXStaticCastExpr 0x55c810988d20 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55c810988cf0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55c8109887f8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55c810986740 '_pprev' 'IPRewriterEntry **'
| | `-ImplicitCastExpr 0x55c810988e80 <col:7> 'IPRewriterEntry **' <LValueToRValue>
| |   `-MemberExpr 0x55c810988e38 <col:7> 'IPRewriterEntry **' xvalue ._pprev 0x55c810986740
| |     `-CXXStaticCastExpr 0x55c810988e08 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55c810988dd8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55c8109887f8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55c8109867a0 '_bucket' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| | `-ImplicitCastExpr 0x55c810988f68 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55c810988f20 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x55c8109867a0
| |     `-CXXStaticCastExpr 0x55c810988ef0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55c810988ec0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55c8109887f8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55c8109868e8 '_hc' 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| | `-ImplicitCastExpr 0x55c810989050 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' <LValueToRValue>
| |   `-MemberExpr 0x55c810989008 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' xvalue ._hc 0x55c8109868e8
| |     `-CXXStaticCastExpr 0x55c810988fd8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55c810988fa8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55c8109887f8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| `-CompoundStmt 0x55c8109890b0 <col:7>
|-CXXMethodDecl 0x55c810989af8 <col:7> col:7 implicit operator= 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55c810989af8
| `-ParmVarDecl 0x55c810989c08 <col:7> col:7 'const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x55c810989c78 <col:7> col:7 implicit used operator= 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55c810989d88 <col:7> col:7 used 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
  `-CompoundStmt 0x55c81098aa80 <col:7>
    |-BinaryOperator 0x55c81098a710 <col:7> 'IPRewriterEntry *' lvalue '='
    | |-MemberExpr 0x55c81098a6c8 <col:7> 'IPRewriterEntry *' lvalue ->_element 0x55c8109866a8
    | | `-CXXThisExpr 0x55c81098a6b8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55c81098a6f8 <col:7> 'IPRewriterEntry *' <LValueToRValue>
    |   `-MemberExpr 0x55c81098a688 <col:7> 'IPRewriterEntry *' xvalue ._element 0x55c8109866a8
    |     `-CXXStaticCastExpr 0x55c81098a658 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55c81098a628 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55c810989d88 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x55c81098a818 <col:7> 'IPRewriterEntry **' lvalue '='
    | |-MemberExpr 0x55c81098a7d0 <col:7> 'IPRewriterEntry **' lvalue ->_pprev 0x55c810986740
    | | `-CXXThisExpr 0x55c81098a7c0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55c81098a800 <col:7> 'IPRewriterEntry **' <LValueToRValue>
    |   `-MemberExpr 0x55c81098a790 <col:7> 'IPRewriterEntry **' xvalue ._pprev 0x55c810986740
    |     `-CXXStaticCastExpr 0x55c81098a760 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55c81098a730 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55c810989d88 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x55c81098a920 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' lvalue '='
    | |-MemberExpr 0x55c81098a8d8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' lvalue ->_bucket 0x55c8109867a0
    | | `-CXXThisExpr 0x55c81098a8c8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55c81098a908 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x55c81098a898 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x55c8109867a0
    |     `-CXXStaticCastExpr 0x55c81098a868 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55c81098a838 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55c810989d88 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x55c81098aa28 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' lvalue '='
    | |-MemberExpr 0x55c81098a9e0 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' lvalue ->_hc 0x55c8109868e8
    | | `-CXXThisExpr 0x55c81098a9d0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55c81098aa10 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' <LValueToRValue>
    |   `-MemberExpr 0x55c81098a9a0 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' xvalue ._hc 0x55c8109868e8
    |     `-CXXStaticCastExpr 0x55c81098a970 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55c81098a940 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55c810989d88 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    `-ReturnStmt 0x55c81098aa70 <col:7>
      `-UnaryOperator 0x55c81098aa58 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55c81098aa48 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_const_iterator = type { %class.IPRewriterEntry*, %class.IPRewriterEntry**, i32, %class.HashContainer* }
  NonVirtualBaseLLVMType:%class.HashContainer_const_iterator = type { %class.IPRewriterEntry*, %class.IPRewriterEntry**, i32, %class.HashContainer* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810969cc8 <../dummy_inc/click/hashcontainer.hh:15:1, col:69> line:400:7 class HashContainer_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55c810987390 prev 0x55c810969cc8 <col:1, col:7> col:7 implicit class HashContainer_iterator
|-AccessSpecDecl 0x55c810987420 <col:76, col:82> col:76 public
|-TypedefDecl 0x55c810987510 <line:402:5, col:48> col:48 inherited 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55c810987470 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55c810969b90 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55c810969a90 'HashContainer_const_iterator'
|-CXXConstructorDecl 0x55c8109875a0 <line:405:5, line:406:5> line:405:5 HashContainer_iterator 'void ()'
|-CXXMethodDecl 0x55c810987658 <line:414:5, line:416:5> line:414:10 can_insert 'bool () const'
|-CXXMethodDecl 0x55c810987878 <line:419:5, line:421:5> line:419:26 hashcontainer 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *() const'
|-AccessSpecDecl 0x55c810987928 <line:423:3, col:10> col:3 private
|-CXXConstructorDecl 0x55c810987b58 <line:425:5, line:427:5> line:425:12 HashContainer_iterator 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *)' inline
| `-ParmVarDecl 0x55c810987a48 <col:35, col:56> col:56 hc 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x55c8109880e8 <line:429:5, line:431:5> line:429:12 HashContainer_iterator 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *, typename inherited::bucket_count_type, IPRewriterEntry **, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55c810987d18 <col:35, col:56> col:56 hc 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| |-ParmVarDecl 0x55c810987e30 <col:60, col:98> col:98 b 'typename inherited::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x55c810987f10 <col:101, col:105> col:105 pprev 'IPRewriterEntry **'
| `-ParmVarDecl 0x55c810987f88 <col:112, col:115> col:115 element 'IPRewriterEntry *'
|-FriendDecl 0x55c8109882c8 <line:433:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXDestructorDecl 0x55c810988320 <line:400:7> col:7 implicit referenced ~HashContainer_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55c810988868 <col:7> col:7 implicit constexpr HashContainer_iterator 'void (const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55c810988868
| `-ParmVarDecl 0x55c810988978 <col:7> col:7 'const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXConstructorDecl 0x55c810988a18 <col:7> col:7 implicit used constexpr HashContainer_iterator 'void (HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55c810988b28 <col:7> col:7 used 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| | `-CXXConstructExpr 0x55c8109890c0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' 'void (HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept'
| |   `-ImplicitCastExpr 0x55c810988cd0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
| |     `-CXXStaticCastExpr 0x55c810988ca0 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55c810988c70 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55c810988b28 '' 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| `-CompoundStmt 0x55c810989188 <col:7>
|-CXXMethodDecl 0x55c810989948 <col:7> col:7 implicit operator= 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55c810989948
| `-ParmVarDecl 0x55c810989a58 <col:7> col:7 'const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x55c810989df8 <col:7> col:7 implicit used operator= 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55c810989f08 <col:7> col:7 used 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
  `-CompoundStmt 0x55c81098ab18 <col:7>
    |-CXXMemberCallExpr 0x55c81098aab8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue
    | |-MemberExpr 0x55c81098a5b0 <col:7> '<bound member function type>' .operator= 0x55c810989c78
    | | `-ImplicitCastExpr 0x55c81098a4e0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
    | |   `-UnaryOperator 0x55c81098a4c8 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
    | |     `-CXXThisExpr 0x55c81098a4b8 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55c81098a590 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
    |   `-DeclRefExpr 0x55c81098a570 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55c810989f08 '' 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    `-ReturnStmt 0x55c81098ab08 <col:7>
      `-UnaryOperator 0x55c81098aaf0 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55c81098aae0 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  NonVirtualBaseLLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<8>
         0 |   char [8] x
           | [sizeof=8, dsize=8, align=1,
           |  nvsize=8, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c8109548c0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 8
|-PackedAttr 0x55c810b946d0 <line:167:18>
|-CXXRecordDecl 0x55c810b94790 prev 0x55c8109548c0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55c810b948a0 <line:166:5, col:13> col:10 x 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [8 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c810a93da0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55c810bd8a08 <line:167:18>
|-CXXRecordDecl 0x55c810bd8ac8 prev 0x55c810a93da0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55c810bd8bd8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<unsigned int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   unsigned int * _ptr
        24 |   unsigned int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct char_array<56>
         0 |   char [56] x
           | [sizeof=56, dsize=56, align=1,
           |  nvsize=56, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55c8109713a0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 56
|-PackedAttr 0x55c810be41a8 <line:167:18>
|-CXXRecordDecl 0x55c810be4268 prev 0x55c8109713a0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55c810be4378 <line:166:5, col:13> col:10 x 'char [56]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.15 = type { [56 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.15 = type { [56 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
