
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct libdivide_u32_t
         0 |   uint32_t magic
         4 |   uint8_t more
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPFlowID
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   class IPAddress _daddr
         4 |     uint32_t _addr
         8 |   uint16_t _sport
        10 |   uint16_t _dport
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPRewriterEntry
         0 |   class IPFlowID _flowid
         0 |     class IPAddress _saddr
         0 |       uint32_t _addr
         4 |     class IPAddress _daddr
         4 |       uint32_t _addr
         8 |     uint16_t _sport
        10 |     uint16_t _dport
   12:0-23 |   uint32_t _output
        15 |   uint8_t _direction
        16 |   class IPRewriterEntry * _hashnext
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterFlow *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5)
         0 |   class IPRewriterPattern * pattern
         0 |   class IPMapper * mapper
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterInput
         0 |   class IPRewriterBase * owner
         8 |   int owner_input
        12 |   int kind
        16 |   int foutput
        24 |   class IPRewriterBase * reply_element
        32 |   int routput
        36 |   uint32_t count
        40 |   uint32_t failures
        48 |   union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5) u
        48 |     class IPRewriterPattern * pattern
        48 |     class IPMapper * mapper
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class IPRewriterEntry * _element
         8 |   class IPRewriterEntry ** _pprev
        16 |   HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |   const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > (base)
         0 |     class IPRewriterEntry * _element
         8 |     class IPRewriterEntry ** _pprev
        16 |     HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |     const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterFlow
         0 |   class IPRewriterEntry [2] _e
        48 |   uint16_t _ip_csum_delta
        50 |   uint16_t _udp_csum_delta
        52 |   click_jiffies_t _expiry_j
   56:0-31 |   size_t _place
        60 |   uint8_t _ip_p
        61 |   uint8_t _tflags
        62 |   _Bool _guaranteed
        63 |   uint8_t _reply_anno
        64 |   class IPRewriterInput * _owner
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | class TCPRewriter::TCPFlow
         0 |   class IPRewriterFlow (base)
         0 |     class IPRewriterEntry [2] _e
        48 |     uint16_t _ip_csum_delta
        50 |     uint16_t _udp_csum_delta
        52 |     click_jiffies_t _expiry_j
   56:0-31 |     size_t _place
        60 |     uint8_t _ip_p
        61 |     uint8_t _tflags
        62 |     _Bool _guaranteed
        63 |     uint8_t _reply_anno
        64 |     class IPRewriterInput * _owner
        72 |   struct TCPRewriter::TCPFlow::delta_transition * _dt
           | [sizeof=80, dsize=80, align=8,
           |  nvsize=80, nvalign=8]

*** Dumping AST Record Layout
         0 | class UDPRewriter::UDPFlow
         0 |   class IPRewriterFlow (base)
         0 |     class IPRewriterEntry [2] _e
        48 |     uint16_t _ip_csum_delta
        50 |     uint16_t _udp_csum_delta
        52 |     click_jiffies_t _expiry_j
   56:0-31 |     size_t _place
        60 |     uint8_t _ip_p
        61 |     uint8_t _tflags
        62 |     _Bool _guaranteed
        63 |     uint8_t _reply_anno
        64 |     class IPRewriterInput * _owner
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | class MyRewriterPattern
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   int _sport
         8 |   class IPAddress _daddr
         8 |     uint32_t _addr
        12 |   int _dport
        16 |   uint32_t _variation_top
        20 |   _Bool _sequential
           | [sizeof=24, dsize=21, align=4,
           |  nvsize=21, nvalign=4]

*** Dumping AST Record Layout
         0 | class MyInputSpec
         0 |   int kind
         4 |   int foutput
         8 |   int doutput
        12 |   class MyRewriterPattern pattern
        12 |     class IPAddress _saddr
        12 |       uint32_t _addr
        16 |     int _sport
        20 |     class IPAddress _daddr
        20 |       uint32_t _addr
        24 |     int _dport
        28 |     uint32_t _variation_top
        32 |     _Bool _sequential
        36 |   int __placeholder
           | [sizeof=40, dsize=40, align=4,
           |  nvsize=40, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc2642d8 prev 0x55adbc25ba48 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc2643d0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55adbc264460 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55adbc2644d8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55adbc264598 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55adbc264660 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55adbc2647d8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55adbc264710 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55adbc264880 <col:24>
| `-OptimizeNoneAttr 0x55adbc2648d8 <col:34>
|-CXXMethodDecl 0x55adbc264920 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55adbc264bd8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55adbc2649d0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55adbc264a48 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55adbc264ac8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55adbc264ca0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55adbc264cd8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55adbc264d40 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55adbc264dc8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55adbc2650e8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55adbc264e80 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55adbc264ef8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55adbc264f70 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55adbc264ff0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55adbc265200 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55adbc1d3888 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55adbc1d3888
| `-ParmVarDecl 0x55adbc1d3998 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55adbc1d3a38 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55adbc1d3a38
| `-ParmVarDecl 0x55adbc1d3b48 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55adbc5b3b10 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbbfa93e0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbbfa94f8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55adbbfa9588 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55adbbfa9658 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55adbbfa9740 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55adbbfa9958 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55adbbfa9800 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbbfa9b08 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55adbbfa9a10 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55adbbfa9c50 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55adbbfa9bc0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55adbbfaa730 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55adbbfaa6a0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbbfaa878 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55adbbfaa7e8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbbfaa940 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55adbbfaaa88 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x55adbbfaa9f8 <col:28> col:31 'int'
|-CXXMethodDecl 0x55adbbfaab50 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55adbbfaac98 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55adbbfaac08 <col:28> col:31 'int'
|-CXXMethodDecl 0x55adbbfaae18 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55adbbfaad50 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbbfaaf60 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55adbbfaaed0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbbfab028 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55adbbfab1e8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55adbbfab0d8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55adbbfab150 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbbfab438 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55adbbfab2a8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55adbbfab320 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55adbbfab4e8 <col:86> "" ""
|-CXXMethodDecl 0x55adbbfab758 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55adbbfab5c8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55adbbfab640 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbbfab908 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55adbbfab818 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55adbbfabab8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55adbbfab9c0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55adbbfabd88 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55adbbfabb70 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55adbbfabbe8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55adbbfabc60 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbbfac068 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55adbbfabe50 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55adbbfabec8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55adbbfabf40 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55adbbfac120 <col:115> "" ""
|-AccessSpecDecl 0x55adbbfac190 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55adbbfac1c8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbbfac8d0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55adbbfac8d0
| `-ParmVarDecl 0x55adbbfac9d8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55adbbfaca78 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55adbbfaca78
| `-ParmVarDecl 0x55adbbfacb88 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55adbc04b598 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55adbc240e90 <col:7>
|-CXXConstructorDecl 0x55adbc04b670 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55adbc04b670
| `-ParmVarDecl 0x55adbc04b788 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55adbc04b7f8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55adbc04b7f8
| `-ParmVarDecl 0x55adbc04b908 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55adbc243800 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc321680 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55adbc321858 prev 0x55adbc321680 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55adbc3218e8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55adbc321910 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc3234e0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55adbc323490 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55adbc321dc0 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55adbc321cc0 'type'
|     `-TemplateSpecializationType 0x55adbc321c50 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55adbc321b30 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55adbc321b10 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55adbc321af0 <col:24> 'unsigned long' 8
|       `-RecordType 0x55adbc321c30 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55adbc321b50 'char_array'
|-TypedefDecl 0x55adbc323598 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55adbc323560 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55adbc323540 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55adbc3234e0 'type'
|     `-ElaboratedType 0x55adbc323490 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55adbc321dc0 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55adbc321cc0 'type'
|         `-TemplateSpecializationType 0x55adbc321c50 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55adbc321b30 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55adbc321b10 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55adbc321af0 <col:24> 'unsigned long' 8
|           `-RecordType 0x55adbc321c30 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55adbc321b50 'char_array'
|-CXXMethodDecl 0x55adbc323718 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55adbc323628 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55adbc323808 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55adbc3238e8 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55adbc323bb8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55adbc323ac0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55adbc323df8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55adbc323c70 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc323ce8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55adbc323fc8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55adbc323eb8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc323f30 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55adbc324128 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55adbc3241f8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55adbc324448 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55adbc3242b8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55adbc324330 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55adbc3246a8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55adbc324518 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55adbc324590 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55adbc324868 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55adbc324778 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55adbc324a28 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55adbc324930 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55adbc324ae0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc3275d0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc327808 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55adbc327680 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc3276f8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55adbc327aa8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55adbc3279b0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55adbc327b70 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55adbc327bc0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55adbc327c10 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc565418 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x55adbc56f568 prev 0x55adbc565418 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55adbc570580 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55adbc570530 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x55adbc570510 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x55adbc5703c0 'type'
|     `-SubstTemplateTypeParmType 0x55adbc321250 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55adbbfc9040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfc8fe8 'T'
|       `-RecordType 0x55adbc320da0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55adbc320cb8 'sized_array_memory'
|-FieldDecl 0x55adbc570680 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55adbc5706d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55adbc570708 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x55adbc56f600 'Element *' sugar
|   |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|   `-PointerType 0x55adbc24d850 'Element *'
|     `-RecordType 0x55adbc24d5d0 'Element'
|       `-CXXRecord 0x55adbc257290 'Element'
|-TypedefDecl 0x55adbc570798 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x55adbc570760 'Element *&'
|   `-SubstTemplateTypeParmType 0x55adbc56f600 'Element *' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-PointerType 0x55adbc24d850 'Element *'
|       `-RecordType 0x55adbc24d5d0 'Element'
|         `-CXXRecord 0x55adbc257290 'Element'
|-TypedefDecl 0x55adbc570858 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x55adbc570820 'Element *const &'
|   `-QualType 0x55adbc56f601 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55adbc56f600 'Element *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbc24d850 'Element *'
|         `-RecordType 0x55adbc24d5d0 'Element'
|           `-CXXRecord 0x55adbc257290 'Element'
|-TypedefDecl 0x55adbc5708e8 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x55adbc5708b0 'Element **'
|   `-SubstTemplateTypeParmType 0x55adbc56f600 'Element *' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-PointerType 0x55adbc24d850 'Element *'
|       `-RecordType 0x55adbc24d5d0 'Element'
|         `-CXXRecord 0x55adbc257290 'Element'
|-TypedefDecl 0x55adbc5709a8 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x55adbc570970 'Element *const *'
|   `-QualType 0x55adbc56f601 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55adbc56f600 'Element *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbc24d850 'Element *'
|         `-RecordType 0x55adbc24d5d0 'Element'
|           `-CXXRecord 0x55adbc257290 'Element'
|-TypedefDecl 0x55adbc571580 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x55adbc571530 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x55adbc571510 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x55adbc5714a0 'type'
|     `-SubstTemplateTypeParmType 0x55adbc571260 'Element *' sugar
|       |-TemplateTypeParmType 0x55adbbfd1240 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfd11f0 'T'
|       `-PointerType 0x55adbc24d850 'Element *'
|         `-RecordType 0x55adbc24d5d0 'Element'
|           `-CXXRecord 0x55adbc257290 'Element'
|-TypedefDecl 0x55adbc5715e8 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x55adbc570820 'Element *const &'
|   `-QualType 0x55adbc56f601 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55adbc56f600 'Element *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbc24d850 'Element *'
|         `-RecordType 0x55adbc24d5d0 'Element'
|           `-CXXRecord 0x55adbc257290 'Element'
|-TypedefDecl 0x55adbc571640 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc5716a8 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x55adbc5708b0 'Element **'
|   `-SubstTemplateTypeParmType 0x55adbc56f600 'Element *' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-PointerType 0x55adbc24d850 'Element *'
|       `-RecordType 0x55adbc24d5d0 'Element'
|         `-CXXRecord 0x55adbc257290 'Element'
|-TypedefDecl 0x55adbc571710 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x55adbc570970 'Element *const *'
|   `-QualType 0x55adbc56f601 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55adbc56f600 'Element *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbc24d850 'Element *'
|         `-RecordType 0x55adbc24d5d0 'Element'
|           `-CXXRecord 0x55adbc257290 'Element'
|-EnumDecl 0x55adbc571768 <line:134:5> col:5
| `-EnumConstantDecl 0x55adbc571860 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55adbc571840 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55adbc0003c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55adbc0003a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55adbc000380 <col:40> 'int' 1
|-CXXConstructorDecl 0x55adbc5718e8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55adbc573fc8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc5719a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc571a40 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x55adbc574258 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55adbc574140 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x55adbc574518 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55adbc574400 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55adbc574830 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55adbc574710 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x55adbc574b40 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55adbc574a20 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55adbc574e30 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc574c78 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc574cf0 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55adbc574f88 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55adbc575068 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc5750c0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc575108 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55adbc5751b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc575210 <col:30> Inherited
|-CXXMethodDecl 0x55adbc5752d8 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc575388 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc5753e0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc575428 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc5754d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc575530 <col:30> Inherited
|-CXXMethodDecl 0x55adbc575578 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc575628 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc575680 <col:30> Inherited
|-CXXMethodDecl 0x55adbc5756c8 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc575778 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc5757d0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc5757f8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc5758a8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc575958 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc575b18 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc575a08 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc575a80 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55adbc575c68 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc575bd8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc575e18 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x55adbc575d20 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc575ed0 <col:20>
| `-OptimizeNoneAttr 0x55adbc575f28 <col:30>
|-CXXMethodDecl 0x55adbc576048 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55adbc575f50 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc576100 <col:20>
| `-OptimizeNoneAttr 0x55adbc576158 <col:30>
|-CXXMethodDecl 0x55adbc576210 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc576180 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc576358 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc5762c8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc576488 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x55adbc5765b8 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x55adbc576688 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x55adbc576758 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x55adbc576898 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc576808 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc5769e0 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc576950 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc576b28 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55adbc576a98 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc576be0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55adbc576ce0 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55adbc576c50 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc576d98 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55adbc576e58 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x55adbc576f58 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x55adbc5770d8 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc577018 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x55adbc577898 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55adbc577190 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x55adbc5777f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x55adbc5776f8 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x55adbc577978 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc577ac8 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc577a38 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55adbc577b80 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55adbc577dc8 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc577c40 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55adbc577cb8 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55adbc577f88 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x55adbc577e98 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55adbc5781d8 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x55adbc578050 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55adbc5780c8 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55adbc578298 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc5784f8 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x55adbc578400 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x55adbc5785c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55adbc5785c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc029070 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55adbc029188 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55adbc029228 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55adbc029288 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55adbc0292e8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55adbc029398 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc0296a0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc0297b8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55adbc029860 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55adbc0298c8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55adbc029958 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55adbc02e140 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55adbc02e578 <col:12>
|-CXXConstructorDecl 0x55adbc02e248 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc02e358 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55adbc029860 'data' 'const char *'
| | `-ImplicitCastExpr 0x55adbc0319c0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55adbc031990 <col:12> 'const char *const' lvalue .data 0x55adbc029860
| |     `-DeclRefExpr 0x55adbc031970 <col:12> 'const String::rep_t' lvalue ParmVar 0x55adbc02e358 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55adbc0298c8 'length' 'int'
| | `-ImplicitCastExpr 0x55adbc031a50 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55adbc031a20 <col:12> 'const int' lvalue .length 0x55adbc0298c8
| |     `-DeclRefExpr 0x55adbc031a00 <col:12> 'const String::rep_t' lvalue ParmVar 0x55adbc02e358 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55adbc029958 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55adbc031ae0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55adbc031ab0 <col:12> 'String::memo_t *const' lvalue .memo 0x55adbc029958
| |     `-DeclRefExpr 0x55adbc031a90 <col:12> 'const String::rep_t' lvalue ParmVar 0x55adbc02e358 '' 'const String::rep_t &'
| `-CompoundStmt 0x55adbc031b38 <col:12>
|-CXXConstructorDecl 0x55adbc02e3f8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55adbc02e3f8
| `-ParmVarDecl 0x55adbc02e508 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55adbc034860 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55adbc03dee8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc03dff8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55adbc03e510 <col:12>
|   |-BinaryOperator 0x55adbc03e328 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55adbc03e2e0 <col:12> 'const char *' lvalue ->data 0x55adbc029860
|   | | `-CXXThisExpr 0x55adbc03e2d0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55adbc03e310 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55adbc03e2a0 <col:12> 'const char *const' lvalue .data 0x55adbc029860
|   |     `-DeclRefExpr 0x55adbc03e280 <col:12> 'const String::rep_t' lvalue ParmVar 0x55adbc03dff8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55adbc03e3f0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55adbc03e3a8 <col:12> 'int' lvalue ->length 0x55adbc0298c8
|   | | `-CXXThisExpr 0x55adbc03e398 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55adbc03e3d8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55adbc03e368 <col:12> 'const int' lvalue .length 0x55adbc0298c8
|   |     `-DeclRefExpr 0x55adbc03e348 <col:12> 'const String::rep_t' lvalue ParmVar 0x55adbc03dff8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55adbc03e4b8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55adbc03e470 <col:12> 'String::memo_t *' lvalue ->memo 0x55adbc029958
|   | | `-CXXThisExpr 0x55adbc03e460 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55adbc03e4a0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55adbc03e430 <col:12> 'String::memo_t *const' lvalue .memo 0x55adbc029958
|   |     `-DeclRefExpr 0x55adbc03e410 <col:12> 'const String::rep_t' lvalue ParmVar 0x55adbc03dff8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55adbc03e500 <col:12>
|     `-UnaryOperator 0x55adbc03e4e8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55adbc03e4d8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55adbc03e068 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55adbc03e068
  `-ParmVarDecl 0x55adbc03e178 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc01f5e0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbc01f6f8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55adbc01f788 <col:16, col:22> col:16 public
|-TypedefDecl 0x55adbc01f7c8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55adbbce2dc0 'const char *'
|   `-QualType 0x55adbbce2311 'const char' const
|     `-BuiltinType 0x55adbbce2310 'char'
|-TypedefDecl 0x55adbc01f850 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55adbc01f820 'String::const_iterator' sugar
|   |-Typedef 0x55adbc01f7c8 'const_iterator'
|   `-PointerType 0x55adbbce2dc0 'const char *'
|     `-QualType 0x55adbbce2311 'const char' const
|       `-BuiltinType 0x55adbbce2310 'char'
|-TypedefDecl 0x55adbc01f9c0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55adbc01f930 'int (String::*)() const'
|   |-RecordType 0x55adbc01f670 'String'
|   | `-CXXRecord 0x55adbc01f5e0 'String'
|   `-ParenType 0x55adbc01f8d0 'int () const' sugar
|     `-FunctionProtoType 0x55adbc002000 'int () const' const cdecl
|       `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc01fa28 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55adbbe40540 'int64_t' sugar
|   |-Typedef 0x55adbbd4b2d0 'int64_t'
|   `-TypedefType 0x55adbbd244d0 '__int64_t' sugar
|     |-Typedef 0x55adbbd240a8 '__int64_t'
|     `-BuiltinType 0x55adbbce2390 'long'
|-TypedefDecl 0x55adbc01fa90 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55adbbe40460 'uint64_t' sugar
|   |-Typedef 0x55adbbd4b470 'uint64_t'
|   `-TypedefType 0x55adbbd24560 '__uint64_t' sugar
|     |-Typedef 0x55adbbd24118 '__uint64_t'
|     `-BuiltinType 0x55adbbce2430 'unsigned long'
|-TypedefDecl 0x55adbc01fb20 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55adbc01faf0 'String::intmax_t' sugar
|   |-Typedef 0x55adbc01fa28 'intmax_t'
|   `-TypedefType 0x55adbbe40540 'int64_t' sugar
|     |-Typedef 0x55adbbd4b2d0 'int64_t'
|     `-TypedefType 0x55adbbd244d0 '__int64_t' sugar
|       |-Typedef 0x55adbbd240a8 '__int64_t'
|       `-BuiltinType 0x55adbbce2390 'long'
|-TypedefDecl 0x55adbc01fbb0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55adbc01fb80 'String::uintmax_t' sugar
|   |-Typedef 0x55adbc01fa90 'uintmax_t'
|   `-TypedefType 0x55adbbe40460 'uint64_t' sugar
|     |-Typedef 0x55adbbd4b470 'uint64_t'
|     `-TypedefType 0x55adbbd24560 '__uint64_t' sugar
|       |-Typedef 0x55adbbd24118 '__uint64_t'
|       `-BuiltinType 0x55adbbce2430 'unsigned long'
|-CXXConstructorDecl 0x55adbc01fc70 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55adbc01fe18 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55adbc01fd58 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55adbc01ffc8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55adbc01ff08 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55adbc020120 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55adbc020090 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55adbc020338 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55adbc0201e8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55adbc020268 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55adbc020558 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55adbc020408 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55adbc020488 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55adbc020778 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55adbc020628 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55adbc0206a8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55adbc020998 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55adbc020848 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55adbc0208c8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55adbc020b28 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55adbc020a60 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55adbc020ca8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55adbc020be8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55adbc020e38 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55adbc020d70 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55adbc020f90 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55adbc020f00 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55adbc021118 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55adbc021058 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55adbc021270 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55adbc0211e0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55adbc0213f8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55adbc021338 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55adbc021588 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55adbc0214c0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55adbc021718 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55adbc021650 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55adbc0218a8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55adbc0217e0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55adbc0219a0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55adbc021ac8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55adbc021c48 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55adbc021b80 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55adbc021d98 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55adbc021d08 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55adbc021e40 <col:63> "" ""
|-CXXMethodDecl 0x55adbc021f88 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55adbc021ec8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55adbc022198 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55adbc022048 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55adbc0220c8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55adbc0223b8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55adbc022260 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55adbc0222e0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55adbc022698 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55adbc022478 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55adbc0224f8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55adbc02dc10 <col:55> 'int' 10
| `-ParmVarDecl 0x55adbc022570 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55adbc02dc30 <col:76> 'bool' true
|-CXXMethodDecl 0x55adbc022978 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55adbc022760 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55adbc0227e0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55adbc02dc40 <col:56> 'int' 10
| `-ParmVarDecl 0x55adbc022858 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55adbc02dc60 <col:77> 'bool' true
|-CXXMethodDecl 0x55adbc022a80 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55adbc022b48 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55adbc022c10 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55adbc022cb0 <col:20>
| `-OptimizeNoneAttr 0x55adbc022d08 <col:30>
|-CXXConversionDecl 0x55adbc022df8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55adbc022ec8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc022f88 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55adbc023078 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55adbc023138 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55adbc0232b8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55adbc0231f0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55adbc023408 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55adbc023378 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55adbc0234f8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55adbc0235b8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55adbc023808 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55adbc023670 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55adbc0236f0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55adbc023a68 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55adbc0238d0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55adbc023950 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55adbc023b38 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55adbc023d48 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55adbc023bf0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55adbc023c70 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55adbc023f68 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55adbc023e10 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55adbc023e90 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55adbc0240f8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55adbc024030 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55adbc0241e8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55adbc024358 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55adbc024298 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55adbc024568 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55adbc024418 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55adbc024498 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55adbc024780 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55adbc024628 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55adbc0246a0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55adbc024910 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55adbc024840 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55adbc024b30 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55adbc0249d0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55adbc024a50 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55adbc024c80 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55adbc024bf0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55adbc024e58 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55adbc024d40 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55adbc024dc0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55adbc024fa8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55adbc024f18 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55adbc0261f0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55adbc025060 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55adbc026110 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55adbc02dc70 <col:39> 'int' 0
|-CXXMethodDecl 0x55adbc026410 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55adbc0262b0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55adbc026330 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55adbc02dc90 <col:48> 'int' 0
|-CXXMethodDecl 0x55adbc0265f0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55adbc0264d0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55adbc026550 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55adbc02dcb0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55adbc0266c0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55adbc026780 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55adbc026840 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55adbc026900 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55adbc0269c0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55adbc026b68 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55adbc026a70 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55adbc026ce8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55adbc026c20 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55adbc026e68 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55adbc026da8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55adbc026fe8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55adbc026f20 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55adbc027130 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55adbc0270a0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55adbc027280 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55adbc0271f0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55adbc027458 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55adbc027340 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55adbc0273c0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55adbc027638 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55adbc027520 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55adbc0275a0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55adbc027788 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55adbc0276f8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55adbc027998 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55adbc027848 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55adbc0278c8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55adbc027af8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55adbc027a60 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55adbc027c50 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55adbc027bb8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55adbc027cf8 <col:57> "" ""
|-CXXMethodDecl 0x55adbc027e08 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55adbc027d78 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55adbc027f58 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55adbc027ec8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55adbc0280d8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55adbc028010 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55adbc0281a0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55adbc028260 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55adbc028320 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55adbc0283c0 <col:49> "" ""
|-CXXMethodDecl 0x55adbc028450 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55adbc028510 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55adbc028600 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55adbc0286c8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55adbc028788 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55adbc028848 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55adbc028940 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55adbc028a08 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55adbc028ad0 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55adbc028ca8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55adbc028b88 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55adbc028c08 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55adbc028ed0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55adbc028d70 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55adbc028df0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55adbc028fe0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55adbc029048 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55adbc029070 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55adbc029188 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55adbc029228 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55adbc029288 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55adbc0292e8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55adbc029398 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55adbc029400 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55adbc029638 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55adbc029688 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc029618 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55adbc029528 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55adbc0294d0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55adbc029510 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55adbc0294f0 <col:32> 'int' 8
|-CXXRecordDecl 0x55adbc0296a0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55adbc0297b8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55adbc029860 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55adbc0298c8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55adbc029958 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55adbc02e140 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55adbc02e578 <col:12>
| |-CXXConstructorDecl 0x55adbc02e248 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55adbc02e358 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55adbc029860 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55adbc0319c0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55adbc031990 <col:12> 'const char *const' lvalue .data 0x55adbc029860
| | |     `-DeclRefExpr 0x55adbc031970 <col:12> 'const String::rep_t' lvalue ParmVar 0x55adbc02e358 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55adbc0298c8 'length' 'int'
| | | `-ImplicitCastExpr 0x55adbc031a50 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55adbc031a20 <col:12> 'const int' lvalue .length 0x55adbc0298c8
| | |     `-DeclRefExpr 0x55adbc031a00 <col:12> 'const String::rep_t' lvalue ParmVar 0x55adbc02e358 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55adbc029958 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55adbc031ae0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55adbc031ab0 <col:12> 'String::memo_t *const' lvalue .memo 0x55adbc029958
| | |     `-DeclRefExpr 0x55adbc031a90 <col:12> 'const String::rep_t' lvalue ParmVar 0x55adbc02e358 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55adbc031b38 <col:12>
| |-CXXConstructorDecl 0x55adbc02e3f8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55adbc02e3f8
| | `-ParmVarDecl 0x55adbc02e508 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55adbc034860 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55adbc03dee8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55adbc03dff8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55adbc03e510 <col:12>
| |   |-BinaryOperator 0x55adbc03e328 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55adbc03e2e0 <col:12> 'const char *' lvalue ->data 0x55adbc029860
| |   | | `-CXXThisExpr 0x55adbc03e2d0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55adbc03e310 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55adbc03e2a0 <col:12> 'const char *const' lvalue .data 0x55adbc029860
| |   |     `-DeclRefExpr 0x55adbc03e280 <col:12> 'const String::rep_t' lvalue ParmVar 0x55adbc03dff8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55adbc03e3f0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55adbc03e3a8 <col:12> 'int' lvalue ->length 0x55adbc0298c8
| |   | | `-CXXThisExpr 0x55adbc03e398 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55adbc03e3d8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55adbc03e368 <col:12> 'const int' lvalue .length 0x55adbc0298c8
| |   |     `-DeclRefExpr 0x55adbc03e348 <col:12> 'const String::rep_t' lvalue ParmVar 0x55adbc03dff8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55adbc03e4b8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55adbc03e470 <col:12> 'String::memo_t *' lvalue ->memo 0x55adbc029958
| |   | | `-CXXThisExpr 0x55adbc03e460 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55adbc03e4a0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55adbc03e430 <col:12> 'String::memo_t *const' lvalue .memo 0x55adbc029958
| |   |     `-DeclRefExpr 0x55adbc03e410 <col:12> 'const String::rep_t' lvalue ParmVar 0x55adbc03dff8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55adbc03e500 <col:12>
| |     `-UnaryOperator 0x55adbc03e4e8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55adbc03e4d8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55adbc03e068 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55adbc03e068
|   `-ParmVarDecl 0x55adbc03e178 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55adbc0299d0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55adbc029c18 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55adbc029a38 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55adbc029ab8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55adbc029b30 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55adbc02e100 <col:79, line:261:5>
|   |-BinaryOperator 0x55adbc02dd78 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55adbc02dd10 <col:2, col:5> 'const char *' lvalue .data 0x55adbc029860
|   | | `-MemberExpr 0x55adbc02dce0 <col:2> 'String::rep_t' lvalue ->_r 0x55adbc0299d0
|   | |   `-CXXThisExpr 0x55adbc02dcd0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55adbc02dd60 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55adbc02dd40 <col:12> 'const char *' lvalue ParmVar 0x55adbc029a38 'data' 'const char *'
|   |-BinaryOperator 0x55adbc02de40 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55adbc02ddd8 <col:2, col:5> 'int' lvalue .length 0x55adbc0298c8
|   | | `-MemberExpr 0x55adbc02dda8 <col:2> 'String::rep_t' lvalue ->_r 0x55adbc0299d0
|   | |   `-CXXThisExpr 0x55adbc02dd98 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55adbc02de28 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55adbc02de08 <col:14> 'int' lvalue ParmVar 0x55adbc029ab8 'length' 'int'
|   `-IfStmt 0x55adbc02e0e8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55adbc02df60 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55adbc02df48 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55adbc02df28 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55adbc02df08 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55adbc02dea0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55adbc029958
|     |       | `-MemberExpr 0x55adbc02de70 <col:7> 'String::rep_t' lvalue ->_r 0x55adbc0299d0
|     |       |   `-CXXThisExpr 0x55adbc02de60 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55adbc02def0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55adbc02ded0 <col:17> 'String::memo_t *' lvalue ParmVar 0x55adbc029b30 'memo' 'String::memo_t *'
|     `-CallExpr 0x55adbc02e0c0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55adbc02e0a8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55adbc02dfb0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55adbbfad938 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55adbc02e018 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55adbc029228
|         `-ImplicitCastExpr 0x55adbc02e000 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55adbc02dfe0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55adbc029b30 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55adbc029ec8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55adbc029ce8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55adbc029d68 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55adbc029de0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55adbc0299d0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55adbc02e588 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55adbc02e718 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55adbc02e680 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55adbc02e5f0 <col:2> '<bound member function type>' ->assign_memo 0x55adbc029c18
|     | `-ImplicitCastExpr 0x55adbc02e6b8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55adbc02e5e0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55adbc02e6d0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55adbc02e620 <col:14> 'const char *' lvalue ParmVar 0x55adbc029ce8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55adbc02e6e8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55adbc02e640 <col:20> 'int' lvalue ParmVar 0x55adbc029d68 'length' 'int'
|     `-ImplicitCastExpr 0x55adbc02e700 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc02e660 <col:28> 'String::memo_t *' lvalue ParmVar 0x55adbc029de0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55adbc02a058 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55adbc029f98 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55adbc02e970 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55adbc02e8f0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55adbc02e740 <col:2> '<bound member function type>' ->assign_memo 0x55adbc029c18
|     | `-CXXThisExpr 0x55adbc02e730 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55adbc02e928 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55adbc02e7c0 <col:14, col:19> 'const char *' lvalue .data 0x55adbc029860
|     |   `-MemberExpr 0x55adbc02e790 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55adbc0299d0
|     |     `-DeclRefExpr 0x55adbc02e770 <col:14> 'const String' lvalue ParmVar 0x55adbc029f98 'x' 'const String &'
|     |-ImplicitCastExpr 0x55adbc02e940 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55adbc02e840 <col:25, col:30> 'int' lvalue .length 0x55adbc0298c8
|     |   `-MemberExpr 0x55adbc02e810 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55adbc0299d0
|     |     `-DeclRefExpr 0x55adbc02e7f0 <col:25> 'const String' lvalue ParmVar 0x55adbc029f98 'x' 'const String &'
|     `-ImplicitCastExpr 0x55adbc02e958 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55adbc02e8c0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55adbc029958
|         `-MemberExpr 0x55adbc02e890 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55adbc0299d0
|           `-DeclRefExpr 0x55adbc02e870 <col:38> 'const String' lvalue ParmVar 0x55adbc029f98 'x' 'const String &'
|-CXXMethodDecl 0x55adbc02c370 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55adbc02f330 <col:31, line:278:5>
|   `-IfStmt 0x55adbc02f318 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55adbc02ea10 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55adbc02e9f8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55adbc02e9c8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55adbc029958
|     |     `-MemberExpr 0x55adbc02e998 <col:6> 'String::rep_t' lvalue ->_r 0x55adbc0299d0
|     |       `-CXXThisExpr 0x55adbc02e988 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55adbc02f2f0 <col:15, line:277:2>
|       |-ParenExpr 0x55adbc02eec0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55adbc02ee90 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55adbc02eb20 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55adbc02eb08 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55adbc02eaf0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55adbc02eab0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55adbc029228
|       |   |       `-ImplicitCastExpr 0x55adbc02ea98 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55adbc02ea68 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55adbc029958
|       |   |           `-MemberExpr 0x55adbc02ea38 <col:27> 'String::rep_t' lvalue ->_r 0x55adbc0299d0
|       |   |             `-CXXThisExpr 0x55adbc02ea28 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55adbc02eb80 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55adbc02eb60 <col:54> 'int' 0
|       |   `-CallExpr 0x55adbc02edf0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55adbc02edd8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55adbc02ed58 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55adbc02ee30 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55adbc02ec68 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55adbc02ee48 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55adbc02ec98 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55adbc02ee60 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55adbc02ecd0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55adbc02ee78 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55adbc02ed40 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55adbc02ed28 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55adbc02ecf0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55adbc02f210 <line:274:6, line:275:22>
|       | |-CallExpr 0x55adbc02f0d0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55adbc02f0b8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55adbc02f030 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55adbbfb0120 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55adbc02f000 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55adbc029228
|       | |   `-ImplicitCastExpr 0x55adbc02efe8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55adbc02efb8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55adbc029958
|       | |       `-MemberExpr 0x55adbc02ef88 <col:40> 'String::rep_t' lvalue ->_r 0x55adbc0299d0
|       | |         `-CXXThisExpr 0x55adbc02ef78 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55adbc02f1d0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55adbc02f1b8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55adbc02f0f8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55adbc02d048 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55adbc02f1f8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55adbc02f158 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55adbc029958
|       |       `-MemberExpr 0x55adbc02f128 <col:15> 'String::rep_t' lvalue ->_r 0x55adbc0299d0
|       |         `-CXXThisExpr 0x55adbc02f118 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55adbc02f2d0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55adbc02f268 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55adbc029958
|         | `-MemberExpr 0x55adbc02f238 <col:6> 'String::rep_t' lvalue ->_r 0x55adbc0299d0
|         |   `-CXXThisExpr 0x55adbc02f228 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55adbc02f2b8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55adbc02f298 <col:16> 'int' 0
|-CXXMethodDecl 0x55adbc02c608 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55adbc02c428 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55adbc02c4a8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55adbc02c520 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55adbc02c6e0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55adbc02c930 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55adbc02c798 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55adbc02c818 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55adbc02c890 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55adbc02cb18 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55adbc02ca00 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55adbc02ca80 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55adbc02cc18 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55adbc02f408 <col:41, line:286:5>
|   `-ReturnStmt 0x55adbc02f3f8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55adbc02f3c8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55adbc02f390 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55adbc02f378 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55adbc02f358 <col:46> 'int' 1
|-CXXMethodDecl 0x55adbc02ceb8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55adbc02ccd0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55adbc02cd50 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55adbc02cdd0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55adbc02d048 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55adbc02cf80 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55adbc02d118 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55adbc02d2e8 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55adbc02d1d0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55adbc02d250 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55adbc02d3a8 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55adbc02d470 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55adbc02d578 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55adbc02d5f0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55adbc02d668 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55adbc02d6d0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55adbc02d7d0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55adbc02d820 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc02d7b0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55adbc02d790 <col:22> 'int' 14
|-CXXMethodDecl 0x55adbc02da38 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55adbc02d850 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55adbc02d8d0 <col:38> col:41 'int'
| `-ParmVarDecl 0x55adbc02d950 <col:43> col:46 'int'
|-FriendDecl 0x55adbc02db40 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55adbc02dbd0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc420880 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55adbc420a58 prev 0x55adbc420880 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55adbc420ae8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55adbc420b10 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc422470 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55adbc422420 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55adbc422400 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55adbc420d28 'type'
|     `-SubstTemplateTypeParmType 0x55adbc420cf0 'String' sugar
|       |-TemplateTypeParmType 0x55adbbfefa30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfef9e0 'T'
|       `-RecordType 0x55adbc01f670 'String'
|         `-CXXRecord 0x55adbc01f5e0 'String'
|-TypedefDecl 0x55adbc422528 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55adbc4224f0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55adbc4224d0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55adbc422470 'type'
|     `-ElaboratedType 0x55adbc422420 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55adbc422400 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55adbc420d28 'type'
|         `-SubstTemplateTypeParmType 0x55adbc420cf0 'String' sugar
|           |-TemplateTypeParmType 0x55adbbfefa30 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55adbbfef9e0 'T'
|           `-RecordType 0x55adbc01f670 'String'
|             `-CXXRecord 0x55adbc01f5e0 'String'
|-CXXMethodDecl 0x55adbc4226a8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55adbc4225b8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55adbc422798 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55adbc422878 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55adbc422878
|-CXXMethodDecl 0x55adbc422b48 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55adbc422a50 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55adbc422d88 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55adbc422c00 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc422c78 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55adbc422f58 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55adbc422e48 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc422ec0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55adbc4230b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55adbc423188 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55adbc4233d8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55adbc423248 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55adbc4232c0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55adbc423638 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55adbc4234a8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55adbc423520 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55adbc4237f8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55adbc423708 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55adbc4239b8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55adbc4238c0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55adbc423a70 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc423b20 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc423d58 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55adbc423bd0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc423c48 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55adbc423ff8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55adbc423f00 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55adbc4240c0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55adbc424110 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55adbc424160 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc259f00 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55adbc41f528 prev 0x55adbc259f00 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55adbc4207f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55adbc4207a0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55adbc420780 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55adbc420630 'type'
|     `-SubstTemplateTypeParmType 0x55adbc4204c0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55adbbfc9830 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55adbbfc97d8 'F'
|       `-RecordType 0x55adbc420120 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55adbc420040 'typed_array_memory'
|-FieldDecl 0x55adbc4241b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55adbc424200 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55adbc424238 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55adbc41f5c0 'String' sugar
|   |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|   `-RecordType 0x55adbc01f670 'String'
|     `-CXXRecord 0x55adbc01f5e0 'String'
|-TypedefDecl 0x55adbc4242c8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55adbc424290 'String &'
|   `-SubstTemplateTypeParmType 0x55adbc41f5c0 'String' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc01f670 'String'
|       `-CXXRecord 0x55adbc01f5e0 'String'
|-TypedefDecl 0x55adbc424358 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55adbc424320 'const String &'
|   `-QualType 0x55adbc41f5c1 'const String' const
|     `-SubstTemplateTypeParmType 0x55adbc41f5c0 'String' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc01f670 'String'
|         `-CXXRecord 0x55adbc01f5e0 'String'
|-TypedefDecl 0x55adbc4243e8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55adbc4243b0 'String *'
|   `-SubstTemplateTypeParmType 0x55adbc41f5c0 'String' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc01f670 'String'
|       `-CXXRecord 0x55adbc01f5e0 'String'
|-TypedefDecl 0x55adbc424478 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55adbc424440 'const String *'
|   `-QualType 0x55adbc41f5c1 'const String' const
|     `-SubstTemplateTypeParmType 0x55adbc41f5c0 'String' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc01f670 'String'
|         `-CXXRecord 0x55adbc01f5e0 'String'
|-TypedefDecl 0x55adbc4250d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55adbc425080 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55adbc425060 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55adbc424f98 'type'
|     `-LValueReferenceType 0x55adbc424f60 'const String &'
|       `-QualType 0x55adbc424d01 'const String' const
|         `-SubstTemplateTypeParmType 0x55adbc424d00 'String' sugar
|           |-TemplateTypeParmType 0x55adbbfd0b10 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55adbbfd0ab8 'T'
|           `-RecordType 0x55adbc01f670 'String'
|             `-CXXRecord 0x55adbc01f5e0 'String'
|-TypedefDecl 0x55adbc425138 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55adbc424320 'const String &'
|   `-QualType 0x55adbc41f5c1 'const String' const
|     `-SubstTemplateTypeParmType 0x55adbc41f5c0 'String' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc01f670 'String'
|         `-CXXRecord 0x55adbc01f5e0 'String'
|-TypedefDecl 0x55adbc425190 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc4251f8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55adbc4243b0 'String *'
|   `-SubstTemplateTypeParmType 0x55adbc41f5c0 'String' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc01f670 'String'
|       `-CXXRecord 0x55adbc01f5e0 'String'
|-TypedefDecl 0x55adbc425260 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55adbc424440 'const String *'
|   `-QualType 0x55adbc41f5c1 'const String' const
|     `-SubstTemplateTypeParmType 0x55adbc41f5c0 'String' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc01f670 'String'
|         `-CXXRecord 0x55adbc01f5e0 'String'
|-EnumDecl 0x55adbc4252b8 <line:134:5> col:5
| `-EnumConstantDecl 0x55adbc4253b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55adbc425390 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55adbc0003c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55adbc0003a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55adbc000380 <col:40> 'int' 1
|-CXXConstructorDecl 0x55adbc425438 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55adbc4256c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc4254f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc425590 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55adbc425958 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55adbc425840 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55adbc425c18 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55adbc425b00 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55adbc425f30 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55adbc425e10 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55adbc426240 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55adbc426120 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55adbc426530 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc426378 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc4263f0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55adbc426658 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55adbc426708 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc426760 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4267a8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55adbc426858 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc427d70 <col:30> Inherited
|-CXXMethodDecl 0x55adbc427e38 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55adbc427ee8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc427f40 <col:30> Inherited
|-CXXMethodDecl 0x55adbc427f88 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55adbc428038 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc428090 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4280d8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55adbc428188 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc4281e0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc428228 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55adbc4282d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc428330 <col:30> Inherited
|-CXXMethodDecl 0x55adbc428358 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc428408 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc4284b8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc428678 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc428568 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc4285e0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55adbc4287c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc428738 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc428978 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55adbc428880 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc428a30 <col:20>
| `-OptimizeNoneAttr 0x55adbc428a88 <col:30>
|-CXXMethodDecl 0x55adbc428ba8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55adbc428ab0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc428c60 <col:20>
| `-OptimizeNoneAttr 0x55adbc428cb8 <col:30>
|-CXXMethodDecl 0x55adbc428d70 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc428ce0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc428eb8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc428e28 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc428fe8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55adbc4290e8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55adbc4291b8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55adbc429288 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55adbc4293c8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc429338 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc429510 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc429480 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc429658 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55adbc4295c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc429710 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55adbc429810 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55adbc429780 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc4298c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55adbc429988 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55adbc429a88 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55adbc429c08 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc429b48 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55adbc42a398 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55adbc429cc0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55adbc42a2f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55adbc42a1f8 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55adbc42a478 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc42a5c8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc42a538 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55adbc42a680 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55adbc42a8c8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc42a740 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55adbc42a7b8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55adbc42aa58 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55adbc42a998 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55adbc42ac68 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55adbc42ab20 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55adbc42ab98 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55adbc42ad28 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55adbc42af88 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55adbc42ae90 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55adbc42b058 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55adbc42b058

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc472f10 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55adbc4730e8 prev 0x55adbc472f10 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55adbc473178 <col:46, col:52> col:46 public
|-TypedefDecl 0x55adbc4731a0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc474d70 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55adbc474d20 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55adbc473650 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55adbc473550 'type'
|     `-TemplateSpecializationType 0x55adbc4734e0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55adbc4733c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55adbc4733a0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55adbc473380 <col:24> 'unsigned long' 4
|       `-RecordType 0x55adbc4734c0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55adbc4733e0 'char_array'
|-TypedefDecl 0x55adbc474e28 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55adbc474df0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55adbc474dd0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55adbc474d70 'type'
|     `-ElaboratedType 0x55adbc474d20 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55adbc473650 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55adbc473550 'type'
|         `-TemplateSpecializationType 0x55adbc4734e0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55adbc4733c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55adbc4733a0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55adbc473380 <col:24> 'unsigned long' 4
|           `-RecordType 0x55adbc4734c0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55adbc4733e0 'char_array'
|-CXXMethodDecl 0x55adbc474fa8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55adbc474eb8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55adbc475098 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55adbc475178 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55adbc475178
|-CXXMethodDecl 0x55adbc475448 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55adbc475350 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55adbc475688 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55adbc475500 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc475578 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55adbc475858 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55adbc475748 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc4757c0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55adbc4759b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55adbc475a88 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55adbc475cd8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55adbc475b48 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55adbc475bc0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55adbc475f38 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55adbc475da8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55adbc475e20 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55adbc4760f8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55adbc476008 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55adbc4762b8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55adbc4761c0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55adbc476370 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc476420 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc476658 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55adbc4764d0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc476548 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55adbc4768f8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55adbc476800 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55adbc4769c0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55adbc476a10 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55adbc476a60 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc578910 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55adbc578b18 prev 0x55adbc578910 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55adbc579b30 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55adbc579ae0 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x55adbc579ac0 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x55adbc579970 'type'
|     `-SubstTemplateTypeParmType 0x55adbc472ae0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55adbbfc9040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfc8fe8 'T'
|       `-RecordType 0x55adbc472630 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55adbc472548 'sized_array_memory'
|-FieldDecl 0x55adbc579c30 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55adbc579c80 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55adbc579cb8 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55adbc578bb0 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|   `-BuiltinType 0x55adbbce2410 'unsigned int'
|-TypedefDecl 0x55adbc579d48 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x55adbc579d10 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x55adbc578bb0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-BuiltinType 0x55adbbce2410 'unsigned int'
|-TypedefDecl 0x55adbc579dd8 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x55adbc579da0 'const unsigned int &'
|   `-QualType 0x55adbc578bb1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55adbc578bb0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-BuiltinType 0x55adbbce2410 'unsigned int'
|-TypedefDecl 0x55adbc579e68 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x55adbc579e30 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55adbc578bb0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-BuiltinType 0x55adbbce2410 'unsigned int'
|-TypedefDecl 0x55adbc579ef8 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x55adbc579ec0 'const unsigned int *'
|   `-QualType 0x55adbc578bb1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55adbc578bb0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-BuiltinType 0x55adbbce2410 'unsigned int'
|-TypedefDecl 0x55adbc57aae0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x55adbc57aa90 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x55adbc57aa70 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x55adbc57aa00 'type'
|     `-SubstTemplateTypeParmType 0x55adbc57a7c0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55adbbfd1240 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfd11f0 'T'
|       `-BuiltinType 0x55adbbce2410 'unsigned int'
|-TypedefDecl 0x55adbc57ab48 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x55adbc579da0 'const unsigned int &'
|   `-QualType 0x55adbc578bb1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55adbc578bb0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-BuiltinType 0x55adbbce2410 'unsigned int'
|-TypedefDecl 0x55adbc57aba0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc57ac08 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x55adbc579e30 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55adbc578bb0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-BuiltinType 0x55adbbce2410 'unsigned int'
|-TypedefDecl 0x55adbc57ac70 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x55adbc579ec0 'const unsigned int *'
|   `-QualType 0x55adbc578bb1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55adbc578bb0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-BuiltinType 0x55adbbce2410 'unsigned int'
|-EnumDecl 0x55adbc57acc8 <line:134:5> col:5
| `-EnumConstantDecl 0x55adbc57adc0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55adbc57ada0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55adbc0003c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55adbc0003a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55adbc000380 <col:40> 'int' 1
|-CXXConstructorDecl 0x55adbc57ae48 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55adbc57b098 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc57af00 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc57afa0 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x55adbc57b358 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55adbc57b240 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x55adbc57b618 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55adbc57b500 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55adbc57b960 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55adbc57b840 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x55adbc57bc70 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55adbc57bb50 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55adbc57d3f8 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc57bda8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc57be20 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55adbc57d528 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55adbc57d608 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc57d660 <col:30> Inherited
|-CXXMethodDecl 0x55adbc57d6a8 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55adbc57d758 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc57d7b0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc57d848 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55adbc57d8f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc57d950 <col:30> Inherited
|-CXXMethodDecl 0x55adbc57d998 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55adbc57da48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc57daa0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc57dae8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55adbc57db98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc57dbf0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc57dc38 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55adbc57dce8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc57dd40 <col:30> Inherited
|-CXXMethodDecl 0x55adbc57dd68 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc57de18 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc57dec8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc57e088 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc57df78 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc57dff0 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55adbc57e1d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc57e148 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc57e388 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x55adbc57e290 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc57e440 <col:20>
| `-OptimizeNoneAttr 0x55adbc57e498 <col:30>
|-CXXMethodDecl 0x55adbc57e5b8 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x55adbc57e4c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc57e670 <col:20>
| `-OptimizeNoneAttr 0x55adbc57e6c8 <col:30>
|-CXXMethodDecl 0x55adbc57e780 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc57e6f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc57e8c8 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc57e838 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc57e9f8 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x55adbc57eb28 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55adbc57ebf8 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x55adbc57ecc8 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55adbc57ee08 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc57ed78 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc57ef50 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc57eec0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc57f098 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55adbc57f008 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc57f150 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55adbc57f250 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55adbc57f1c0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc57f308 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55adbc57f3c8 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x55adbc57f4c8 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x55adbc57f648 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc57f588 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x55adbc57fe08 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55adbc57f700 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x55adbc57fd68 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x55adbc57fc68 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x55adbc57fee8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc580038 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc57ffa8 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55adbc5800f0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55adbc580338 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc5801b0 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55adbc580228 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55adbc5804f8 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x55adbc580408 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55adbc580748 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x55adbc5805c0 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55adbc580638 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55adbc580808 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc580a68 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55adbc580970 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x55adbc580b38 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55adbc580b38

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc461c08 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55adbc461e18 prev 0x55adbc461c08 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55adbc472e80 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55adbc472e30 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55adbc472e10 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55adbc472cc0 'type'
|     `-SubstTemplateTypeParmType 0x55adbc472ae0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55adbbfc9040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfc8fe8 'T'
|       `-RecordType 0x55adbc472630 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55adbc472548 'sized_array_memory'
|-FieldDecl 0x55adbc476ab0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55adbc476b00 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55adbc476b38 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55adbc461eb0 'int' sugar
|   |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|   `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc476bc8 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55adbc476b90 'int &'
|   `-SubstTemplateTypeParmType 0x55adbc461eb0 'int' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc476c58 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55adbc476c20 'const int &'
|   `-QualType 0x55adbc461eb1 'const int' const
|     `-SubstTemplateTypeParmType 0x55adbc461eb0 'int' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc476ce8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55adbc476cb0 'int *'
|   `-SubstTemplateTypeParmType 0x55adbc461eb0 'int' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc476d78 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55adbc476d40 'const int *'
|   `-QualType 0x55adbc461eb1 'const int' const
|     `-SubstTemplateTypeParmType 0x55adbc461eb0 'int' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc477960 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55adbc477910 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55adbc4778f0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55adbc477880 'type'
|     `-SubstTemplateTypeParmType 0x55adbc477640 'int' sugar
|       |-TemplateTypeParmType 0x55adbbfd1240 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfd11f0 'T'
|       `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc4779c8 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55adbc476c20 'const int &'
|   `-QualType 0x55adbc461eb1 'const int' const
|     `-SubstTemplateTypeParmType 0x55adbc461eb0 'int' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc477a20 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc477a88 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55adbc476cb0 'int *'
|   `-SubstTemplateTypeParmType 0x55adbc461eb0 'int' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc477af0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55adbc476d40 'const int *'
|   `-QualType 0x55adbc461eb1 'const int' const
|     `-SubstTemplateTypeParmType 0x55adbc461eb0 'int' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-BuiltinType 0x55adbbce2370 'int'
|-EnumDecl 0x55adbc477b48 <line:134:5> col:5
| `-EnumConstantDecl 0x55adbc477c40 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55adbc477c20 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55adbc0003c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55adbc0003a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55adbc000380 <col:40> 'int' 1
|-CXXConstructorDecl 0x55adbc477cc8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55adbc477f18 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc477d80 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc477e20 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55adbc4781d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55adbc4780c0 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55adbc478498 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55adbc478380 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55adbc4787e0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55adbc4786c0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55adbc478af0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55adbc4789d0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55adbc478de0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc478c28 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc478ca0 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55adbc478f08 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55adbc478fe8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc479040 <col:30> Inherited
|-CXXMethodDecl 0x55adbc479088 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55adbc479138 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc479190 <col:30> Inherited
|-CXXMethodDecl 0x55adbc479258 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55adbc479308 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc479360 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4793a8 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55adbc479458 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc4794b0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4794f8 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55adbc4795a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc479600 <col:30> Inherited
|-CXXMethodDecl 0x55adbc479648 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55adbc4796f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc479750 <col:30> Inherited
|-CXXMethodDecl 0x55adbc479778 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc479828 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc4798d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc479a98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc479988 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc479a00 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55adbc479be8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc479b58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc479d98 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55adbc479ca0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc479e50 <col:20>
| `-OptimizeNoneAttr 0x55adbc479ea8 <col:30>
|-CXXMethodDecl 0x55adbc47a5d8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55adbc479ed0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc47a690 <col:20>
| `-OptimizeNoneAttr 0x55adbc47a6e8 <col:30>
|-CXXMethodDecl 0x55adbc47a7a0 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc47a710 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc47a8e8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc47a858 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc47aa18 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55adbc47ab48 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55adbc47ac18 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55adbc47ace8 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x55adbc47ae28 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc47ad98 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc47af70 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc47aee0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc47b0b8 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55adbc47b028 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc47b170 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55adbc47b270 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55adbc47b1e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc47b328 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55adbc47b3e8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55adbc47b4e8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55adbc47b668 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc47b5a8 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55adbc47be28 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55adbc47b720 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55adbc47bd88 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55adbc47bc88 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55adbc47bf08 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc47c058 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc47bfc8 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55adbc47c110 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55adbc47c358 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc47c1d0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55adbc47c248 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55adbc47c518 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55adbc47c428 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55adbc47c768 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55adbc47c5e0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55adbc47c658 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55adbc47c828 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55adbc47ca88 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55adbc47c990 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55adbc47cb58 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55adbc47cb58

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc580d80 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55adbc580e98 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x55adbc580f38 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55adbc580f98 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x55adbc581030 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55adbc581030
| `-ParmVarDecl 0x55adbc581148 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55adbc5811e8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55adbc5811e8
| `-ParmVarDecl 0x55adbc5812f8 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55adbc581398 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55adbc581398
| `-ParmVarDecl 0x55adbc5814a8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55adbc581518 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55adbc581518
| `-ParmVarDecl 0x55adbc581628 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x55adbc5816b0 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55adbc5816b0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc582c40 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x55adbc582e18 prev 0x55adbc582c40 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55adbc582ea8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55adbc582ed0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc584890 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x55adbc584840 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55adbc584820 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x55adbc5830e8 'type'
|     `-SubstTemplateTypeParmType 0x55adbc5830b0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55adbbfefa30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfef9e0 'T'
|       `-RecordType 0x55adbc580e10 'Router::element_landmark_t'
|         `-CXXRecord 0x55adbc580d80 'element_landmark_t'
|-TypedefDecl 0x55adbc584948 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x55adbc584910 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x55adbc5848f0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55adbc584890 'type'
|     `-ElaboratedType 0x55adbc584840 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x55adbc584820 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x55adbc5830e8 'type'
|         `-SubstTemplateTypeParmType 0x55adbc5830b0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55adbbfefa30 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55adbbfef9e0 'T'
|           `-RecordType 0x55adbc580e10 'Router::element_landmark_t'
|             `-CXXRecord 0x55adbc580d80 'element_landmark_t'
|-CXXMethodDecl 0x55adbc584ac8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x55adbc5849d8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x55adbc584bb8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55adbc584c98 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55adbc584c98
|-CXXMethodDecl 0x55adbc584f68 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55adbc584e70 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x55adbc5851a8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55adbc585020 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc585098 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55adbc587160 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55adbc585268 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc5852e0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55adbc5872b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55adbc587388 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55adbc5875d8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55adbc587448 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55adbc5874c0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55adbc587838 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x55adbc5876a8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55adbc587720 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55adbc5879f8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55adbc587908 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55adbc587bb8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55adbc587ac0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55adbc587c70 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc587d20 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc587f58 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55adbc587dd0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc587e48 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55adbc5881f8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55adbc588100 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x55adbc5882c0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x55adbc588310 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55adbc588360 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc5817a0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x55adbc5819a8 prev 0x55adbc5817a0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55adbc582bb0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x55adbc582b60 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55adbc582b40 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55adbc5829f0 'type'
|     `-SubstTemplateTypeParmType 0x55adbc582880 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x55adbbfc9830 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55adbbfc97d8 'F'
|       `-RecordType 0x55adbc5824e0 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x55adbc582400 'typed_array_memory'
|-FieldDecl 0x55adbc5883b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x55adbc588400 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55adbc588438 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x55adbc581a40 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|   `-RecordType 0x55adbc580e10 'Router::element_landmark_t'
|     `-CXXRecord 0x55adbc580d80 'element_landmark_t'
|-TypedefDecl 0x55adbc5884c8 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x55adbc588490 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x55adbc581a40 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc580e10 'Router::element_landmark_t'
|       `-CXXRecord 0x55adbc580d80 'element_landmark_t'
|-TypedefDecl 0x55adbc588558 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55adbc588520 'const Router::element_landmark_t &'
|   `-QualType 0x55adbc581a41 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55adbc581a40 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc580e10 'Router::element_landmark_t'
|         `-CXXRecord 0x55adbc580d80 'element_landmark_t'
|-TypedefDecl 0x55adbc5885e8 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x55adbc5885b0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55adbc581a40 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc580e10 'Router::element_landmark_t'
|       `-CXXRecord 0x55adbc580d80 'element_landmark_t'
|-TypedefDecl 0x55adbc588678 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x55adbc588640 'const Router::element_landmark_t *'
|   `-QualType 0x55adbc581a41 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55adbc581a40 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc580e10 'Router::element_landmark_t'
|         `-CXXRecord 0x55adbc580d80 'element_landmark_t'
|-TypedefDecl 0x55adbc5892d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x55adbc589280 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x55adbc589260 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x55adbc589198 'type'
|     `-LValueReferenceType 0x55adbc589160 'const Router::element_landmark_t &'
|       `-QualType 0x55adbc588f01 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x55adbc588f00 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55adbbfd0b10 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55adbbfd0ab8 'T'
|           `-RecordType 0x55adbc580e10 'Router::element_landmark_t'
|             `-CXXRecord 0x55adbc580d80 'element_landmark_t'
|-TypedefDecl 0x55adbc589338 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55adbc588520 'const Router::element_landmark_t &'
|   `-QualType 0x55adbc581a41 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55adbc581a40 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc580e10 'Router::element_landmark_t'
|         `-CXXRecord 0x55adbc580d80 'element_landmark_t'
|-TypedefDecl 0x55adbc589390 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc5893f8 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x55adbc5885b0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55adbc581a40 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc580e10 'Router::element_landmark_t'
|       `-CXXRecord 0x55adbc580d80 'element_landmark_t'
|-TypedefDecl 0x55adbc589460 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x55adbc588640 'const Router::element_landmark_t *'
|   `-QualType 0x55adbc581a41 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55adbc581a40 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc580e10 'Router::element_landmark_t'
|         `-CXXRecord 0x55adbc580d80 'element_landmark_t'
|-EnumDecl 0x55adbc5894b8 <line:134:5> col:5
| `-EnumConstantDecl 0x55adbc5895b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55adbc589590 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55adbc0003c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55adbc0003a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55adbc000380 <col:40> 'int' 1
|-CXXConstructorDecl 0x55adbc589638 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55adbc5898c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc5896f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc589790 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55adbc589b88 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55adbc589a70 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x55adbc589e48 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55adbc589d30 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55adbc58a190 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55adbc58a070 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x55adbc58a4a0 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55adbc58a380 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55adbc58a790 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc58a5d8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc58a650 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55adbc58a8b8 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55adbc58a998 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc58a9f0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc58aa38 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55adbc58aae8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc58ab40 <col:30> Inherited
|-CXXMethodDecl 0x55adbc58ac08 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55adbc58acb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc58ad10 <col:30> Inherited
|-CXXMethodDecl 0x55adbc58ad58 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55adbc58ae08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc58ae60 <col:30> Inherited
|-CXXMethodDecl 0x55adbc58aea8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55adbc58af58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc58afb0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc58aff8 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55adbc58b0a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc58b100 <col:30> Inherited
|-CXXMethodDecl 0x55adbc58b128 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc58b1d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc58b288 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc58b448 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc58b338 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc58b3b0 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55adbc58b598 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc58b508 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc58b748 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x55adbc58b650 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc58b800 <col:20>
| `-OptimizeNoneAttr 0x55adbc58b858 <col:30>
|-CXXMethodDecl 0x55adbc58b978 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x55adbc58b880 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc58ba30 <col:20>
| `-OptimizeNoneAttr 0x55adbc58ba88 <col:30>
|-CXXMethodDecl 0x55adbc58bb40 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc58bab0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc58bc88 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc58bbf8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc58bdb8 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55adbc58bee8 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55adbc58bfb8 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55adbc58c088 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55adbc58c1c8 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc58c138 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc58c310 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc58c280 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc58c458 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x55adbc58c3c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc58c510 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55adbc58c610 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55adbc58c580 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc58c6c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55adbc58c788 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x55adbc58c888 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x55adbc58ca08 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc58c948 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x55adbc58d198 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55adbc58cac0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x55adbc58d0f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x55adbc58cff8 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55adbc58d278 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc58d3c8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc58d338 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55adbc58d480 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55adbc58d6c8 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc58d540 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55adbc58d5b8 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55adbc58d858 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x55adbc58d798 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55adbc58da68 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x55adbc58d920 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55adbc58d998 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55adbc58db28 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc58dd88 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55adbc58dc90 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x55adbc58de58 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55adbc58de58

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc4e3fb0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55adbc4e4188 prev 0x55adbc4e3fb0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55adbc4e4218 <col:46, col:52> col:46 public
|-TypedefDecl 0x55adbc4e4240 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc4e5e10 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55adbc4e5dc0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55adbc4e46f0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55adbc4e45f0 'type'
|     `-TemplateSpecializationType 0x55adbc4e4580 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55adbc4e4460 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55adbc4e4440 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55adbc4e4420 <col:24> 'unsigned long' 16
|       `-RecordType 0x55adbc4e4560 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55adbc4e4480 'char_array'
|-TypedefDecl 0x55adbc4e5ec8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55adbc4e5e90 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55adbc4e5e70 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55adbc4e5e10 'type'
|     `-ElaboratedType 0x55adbc4e5dc0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55adbc4e46f0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55adbc4e45f0 'type'
|         `-TemplateSpecializationType 0x55adbc4e4580 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55adbc4e4460 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55adbc4e4440 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55adbc4e4420 <col:24> 'unsigned long' 16
|           `-RecordType 0x55adbc4e4560 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55adbc4e4480 'char_array'
|-CXXMethodDecl 0x55adbc4e6048 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55adbc4e5f58 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55adbc4e6138 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55adbc4e6218 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55adbc4e6218
|-CXXMethodDecl 0x55adbc4e64e8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55adbc4e63f0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55adbc4e6728 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55adbc4e65a0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc4e6618 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55adbc4e68f8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55adbc4e67e8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc4e6860 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55adbc4e6a58 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55adbc4e6b28 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55adbc4e6d78 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55adbc4e6be8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55adbc4e6c60 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55adbc4e6fd8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55adbc4e6e48 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55adbc4e6ec0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55adbc4e7198 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55adbc4e70a8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55adbc4e7358 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55adbc4e7260 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55adbc4e7410 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc4e74c0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc4e76f8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55adbc4e7570 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc4e75e8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55adbc4e7998 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55adbc4e78a0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55adbc4e7a60 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55adbc4e7ab0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55adbc4e7b00 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc58e570 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x55adbc58e778 prev 0x55adbc58e570 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55adbc592d70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55adbc592d20 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x55adbc592d00 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x55adbc592bb0 'type'
|     `-SubstTemplateTypeParmType 0x55adbc4e3b80 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55adbbfc9040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfc8fe8 'T'
|       `-RecordType 0x55adbc4e36d0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55adbc4e35e8 'sized_array_memory'
|-FieldDecl 0x55adbc592e70 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55adbc592ec0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55adbc592ef8 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x55adbc58e810 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|   `-RecordType 0x55adbc56dc00 'Router::Connection'
|     `-CXXRecord 0x55adbc56db70 'Connection'
|-TypedefDecl 0x55adbc592fb8 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x55adbc592f80 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x55adbc58e810 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc56dc00 'Router::Connection'
|       `-CXXRecord 0x55adbc56db70 'Connection'
|-TypedefDecl 0x55adbc593048 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x55adbc593010 'const Router::Connection &'
|   `-QualType 0x55adbc58e811 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55adbc58e810 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc56dc00 'Router::Connection'
|         `-CXXRecord 0x55adbc56db70 'Connection'
|-TypedefDecl 0x55adbc5930d8 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x55adbc5930a0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55adbc58e810 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc56dc00 'Router::Connection'
|       `-CXXRecord 0x55adbc56db70 'Connection'
|-TypedefDecl 0x55adbc593168 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x55adbc593130 'const Router::Connection *'
|   `-QualType 0x55adbc58e811 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55adbc58e810 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc56dc00 'Router::Connection'
|         `-CXXRecord 0x55adbc56db70 'Connection'
|-TypedefDecl 0x55adbc593dc0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x55adbc593d70 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x55adbc593d50 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x55adbc593c88 'type'
|     `-LValueReferenceType 0x55adbc593c50 'const Router::Connection &'
|       `-QualType 0x55adbc5939f1 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x55adbc5939f0 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x55adbbfd0b10 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55adbbfd0ab8 'T'
|           `-RecordType 0x55adbc56dc00 'Router::Connection'
|             `-CXXRecord 0x55adbc56db70 'Connection'
|-TypedefDecl 0x55adbc593e28 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x55adbc593010 'const Router::Connection &'
|   `-QualType 0x55adbc58e811 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55adbc58e810 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc56dc00 'Router::Connection'
|         `-CXXRecord 0x55adbc56db70 'Connection'
|-TypedefDecl 0x55adbc593e80 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc593ee8 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x55adbc5930a0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55adbc58e810 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc56dc00 'Router::Connection'
|       `-CXXRecord 0x55adbc56db70 'Connection'
|-TypedefDecl 0x55adbc593f50 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x55adbc593130 'const Router::Connection *'
|   `-QualType 0x55adbc58e811 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55adbc58e810 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc56dc00 'Router::Connection'
|         `-CXXRecord 0x55adbc56db70 'Connection'
|-EnumDecl 0x55adbc593fa8 <line:134:5> col:5
| `-EnumConstantDecl 0x55adbc5940a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55adbc594080 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55adbc0003c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55adbc0003a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55adbc000380 <col:40> 'int' 1
|-CXXConstructorDecl 0x55adbc594128 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55adbc5943b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc5941e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc594280 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x55adbc594678 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55adbc594560 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x55adbc594938 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55adbc594820 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55adbc594c80 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55adbc594b60 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x55adbc594f90 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55adbc594e70 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55adbc595280 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc5950c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc595140 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55adbc5953d8 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55adbc5954b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc595510 <col:30> Inherited
|-CXXMethodDecl 0x55adbc595558 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55adbc595608 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc595660 <col:30> Inherited
|-CXXMethodDecl 0x55adbc595728 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55adbc5957d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc595830 <col:30> Inherited
|-CXXMethodDecl 0x55adbc595878 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55adbc595928 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc595980 <col:30> Inherited
|-CXXMethodDecl 0x55adbc5959c8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55adbc595a78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc595ad0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc595b18 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55adbc595bc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc595c20 <col:30> Inherited
|-CXXMethodDecl 0x55adbc595c48 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc595cf8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc595da8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc595f68 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc595e58 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc595ed0 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55adbc5960b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc596028 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc596268 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x55adbc596170 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc596320 <col:20>
| `-OptimizeNoneAttr 0x55adbc596378 <col:30>
|-CXXMethodDecl 0x55adbc596498 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x55adbc5963a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc596550 <col:20>
| `-OptimizeNoneAttr 0x55adbc5965a8 <col:30>
|-CXXMethodDecl 0x55adbc596660 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc5965d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc5967a8 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc596718 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc5968d8 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x55adbc596a08 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55adbc596ad8 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x55adbc596ba8 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55adbc596ce8 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc596c58 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc596e30 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc596da0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc596f78 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x55adbc596ee8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc597030 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55adbc597130 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55adbc5970a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc5971e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55adbc5972a8 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x55adbc5973a8 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x55adbc597558 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc597468 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x55adbc597d18 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55adbc597610 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x55adbc597c78 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x55adbc597b78 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x55adbc597df8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc597f48 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc597eb8 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55adbc598000 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55adbc598248 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc5980c0 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55adbc598138 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55adbc598408 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x55adbc598318 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55adbc598658 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x55adbc5984d0 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55adbc598548 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55adbc598718 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc598978 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55adbc598880 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x55adbc598a48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55adbc598a48

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc4c6d88 prev 0x55adbc446988 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbc4c6e80 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55adbc4c6f10 <col:22, col:28> col:22 public
|-EnumDecl 0x55adbc4c6f38 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55adbc4c7058 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55adbc4c7038 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55adbc4c7020 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55adbc4c7000 <col:14> 'int' 999
| |-EnumConstantDecl 0x55adbc4c7100 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55adbc4c70e0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55adbc4c70c8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55adbc4c70a8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55adbc4c71d0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55adbc4c7170 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55adbc4c7150 <col:17> 'int' 0
| |-EnumConstantDecl 0x55adbc4c7260 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55adbc4c7240 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55adbc4c7220 <col:13> 'int' 1
| |-EnumConstantDecl 0x55adbc4c72f0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55adbc4c72d0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55adbc4c72b0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55adbc4c7380 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55adbc4c7360 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55adbc4c7340 <col:13> 'int' 3
| |-EnumConstantDecl 0x55adbc4c7410 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55adbc4c73f0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55adbc4c73d0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55adbc4c74a0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55adbc4c7480 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55adbc4c7460 <col:14> 'int' 5
| |-EnumConstantDecl 0x55adbc4c7530 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55adbc4c7510 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55adbc4c74f0 <col:12> 'int' 6
| `-EnumConstantDecl 0x55adbc4c75c0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55adbc4c75a0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55adbc4c7580 <col:13> 'int' 7
|-VarDecl 0x55adbc4c7630 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55adbc4c76b8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55adbc4c7740 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55adbc4c77c8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55adbc4c7850 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55adbc4c78d8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55adbc4c7960 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55adbc4c79e8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55adbc4c7a70 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55adbc4c7af8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55adbc4c7b80 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55adbc4c7c80 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55adbc4ccf68 '_nerrors' 'int'
| | `-IntegerLiteral 0x55adbc4cd6f8 <line:128:13> 'int' 0
| `-CompoundStmt 0x55adbc4cd768 <col:16, line:129:5>
|-CXXDestructorDecl 0x55adbc4c7d70 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55adbc4cd778 <col:29, line:132:5>
|-CXXMethodDecl 0x55adbc4c7f28 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55adbc4c7e60 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc4c7ff0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55adbc4c80d8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55adbc4cd7d0 <col:44, line:161:5>
|   `-ReturnStmt 0x55adbc4cd7c0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55adbc4cd7a8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc4cd788 <col:9> 'ErrorHandler *' lvalue Var 0x55adbc4ccfc8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc4c8218 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55adbc4c8188 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc4c82e0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55adbc4cd830 <col:43, line:173:5>
|   `-ReturnStmt 0x55adbc4cd820 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55adbc4cd808 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc4cd7e8 <col:9> 'ErrorHandler *' lvalue Var 0x55adbc4cd040 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55adbc4c8398 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55adbc4c8418 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55adbc4c8528 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55adbc4c8498 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4c8678 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55adbc4c85e8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4c87d0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55adbc4c8738 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4c8928 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55adbc4c8890 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4c8a80 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55adbc4c89e8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4c8c90 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55adbc4c8b38 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55adbc4c8bb8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4c8e68 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55adbc4c8d50 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55adbc4c8dd0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4c9088 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55adbc4c8f28 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55adbc4c8fa8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4c9268 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55adbc4c9148 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55adbc4c91c8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4c9448 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55adbc4c9328 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55adbc4c93a8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4c95d0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55adbc4c9508 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55adbc4c97a0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55adbc4c9688 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55adbc4c9700 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55adbc4cda88 <col:57, line:234:5>
|   `-ReturnStmt 0x55adbc4cda78 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55adbc4cda60 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55adbc4cda08 <col:9, col:41> 'int'
|         |-MemberExpr 0x55adbc4cd9d8 <col:9> '<bound member function type>' ->xmessage 0x55adbc4c95d0
|         | `-CXXThisExpr 0x55adbc4cd9c8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55adbc4cda48 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55adbc4cda30 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55adbc4cd9a8 <col:18, col:40> 'String' (CXXTemporary 0x55adbc4cd9a8)
|               `-CallExpr 0x55adbc4cd970 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55adbc4cd958 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55adbc4cd8d0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55adbc4cb798 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55adbc4cd8f0 <col:31> 'const String' lvalue ParmVar 0x55adbc4c9700 'str' 'const String &'
|                 `-DeclRefExpr 0x55adbc4cd910 <col:36> 'const String' lvalue ParmVar 0x55adbc4c9688 'anno' 'const String &'
|-CXXMethodDecl 0x55adbc4c9a80 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55adbc4c9860 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55adbc4c98e0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55adbc4c9958 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55adbc4cdd18 <col:68, line:243:5>
|   `-ReturnStmt 0x55adbc4cdd08 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55adbc4cdcf0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55adbc4cdc90 <col:9, col:41> 'int'
|         |-MemberExpr 0x55adbc4cdc60 <col:9> '<bound member function type>' ->xmessage 0x55adbc4c97a0
|         | `-CXXThisExpr 0x55adbc4cdc50 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55adbc4cdb28 <col:18> 'const String' lvalue ParmVar 0x55adbc4c9860 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55adbc4cdcd8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55adbc4cdcc0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55adbc4cdc30 <col:24, col:40> 'String' (CXXTemporary 0x55adbc4cdc30)
|               `-CXXMemberCallExpr 0x55adbc4cdbc8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55adbc4cdb58 <col:24> '<bound member function type>' ->vformat 0x55adbc4cac60
|                 | `-CXXThisExpr 0x55adbc4cdb48 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55adbc4cdbf8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55adbc4cdb88 <col:32> 'const char *' lvalue ParmVar 0x55adbc4c98e0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55adbc4cdc10 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55adbc4cdba8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55adbc4c9958 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55adbc4c9d20 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55adbc4c9b48 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55adbc4c9bc0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55adbc4c9c38 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55adbc4ce058 <col:23, line:254:5>
|   `-ReturnStmt 0x55adbc4ce048 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55adbc4ce030 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55adbc4cdfd0 <col:9, col:71> 'int'
|         |-MemberExpr 0x55adbc4cdfa0 <col:9> '<bound member function type>' ->xmessage 0x55adbc4c97a0
|         | `-CXXThisExpr 0x55adbc4cdf90 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55adbc4ce018 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55adbc4ce000 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55adbc4cdf50 <col:18, col:65> 'String' (CXXTemporary 0x55adbc4cdf50)
|         |     `-CallExpr 0x55adbc4cdee8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55adbc4cded0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55adbc4cddb8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55adbc4cb798 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55adbc4cddd8 <col:31> 'const String' lvalue ParmVar 0x55adbc4c9bc0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55adbc4cdf30 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55adbc4cdf18 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55adbc4cdeb0 <col:37, col:64> 'String' (CXXTemporary 0x55adbc4cdeb0)
|         |             `-CallExpr 0x55adbc4cde80 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55adbc4cde68 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55adbc4cddf8 <col:37> 'String (const String &)' lvalue CXXMethod 0x55adbc4cbde8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55adbc4cde18 <col:56> 'const String' lvalue ParmVar 0x55adbc4c9b48 'landmark' 'const String &'
|         `-DeclRefExpr 0x55adbc4cdf70 <col:68> 'const String' lvalue ParmVar 0x55adbc4c9c38 'str' 'const String &'
|-CXXMethodDecl 0x55adbc4ca0a0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55adbc4c9de8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55adbc4c9e60 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55adbc4c9ee0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55adbc4c9f58 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55adbc4ce310 <col:34, line:267:5>
|   `-ReturnStmt 0x55adbc4ce300 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55adbc4ce2e8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55adbc4ce280 <col:9, col:51> 'int'
|         |-MemberExpr 0x55adbc4ce250 <col:9> '<bound member function type>' ->xmessage 0x55adbc4c9d20
|         | `-CXXThisExpr 0x55adbc4ce240 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55adbc4ce0f8 <col:18> 'const String' lvalue ParmVar 0x55adbc4c9de8 'landmark' 'const String &'
|         |-DeclRefExpr 0x55adbc4ce118 <col:28> 'const String' lvalue ParmVar 0x55adbc4c9e60 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55adbc4ce2d0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55adbc4ce2b8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55adbc4ce220 <col:34, col:50> 'String' (CXXTemporary 0x55adbc4ce220)
|               `-CXXMemberCallExpr 0x55adbc4ce1b8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55adbc4ce148 <col:34> '<bound member function type>' ->vformat 0x55adbc4cac60
|                 | `-CXXThisExpr 0x55adbc4ce138 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55adbc4ce1e8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55adbc4ce178 <col:42> 'const char *' lvalue ParmVar 0x55adbc4c9ee0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55adbc4ce200 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55adbc4ce198 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55adbc4c9f58 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55adbc4ca1b0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55adbc4ce390 <col:25, line:288:5>
|   `-ReturnStmt 0x55adbc4ce380 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55adbc4ce368 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55adbc4ce338 <col:9> 'const int' lvalue ->_nerrors 0x55adbc4ccf68
|         `-CXXThisExpr 0x55adbc4ce328 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55adbc4ca3c0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55adbc4ca268 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55adbc4ca2e8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4ca6a8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55adbc4ca488 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55adbc4ca508 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55adbc4ca580 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55adbc4ca840 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55adbc4ca778 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4caa88 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55adbc4ca900 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55adbc4ca978 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55adbc4ce5f0 <col:58, line:357:5>
|   `-ReturnStmt 0x55adbc4ce5e0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55adbc4ce5c8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55adbc4ce598 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55adbc4ce580 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55adbc4ce560 <col:9, col:29> 'String' (CXXTemporary 0x55adbc4ce560)
|             `-CallExpr 0x55adbc4ce4f0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55adbc4ce4d8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55adbc4ce458 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55adbc4ca6a8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55adbc4ce3f8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55adbc4ce528 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55adbc4ce418 <col:21> 'const char *' lvalue ParmVar 0x55adbc4ca900 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55adbc4ce540 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55adbc4ce438 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55adbc4ca978 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55adbc4cac60 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55adbc4cab50 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55adbc4cabc8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55adbc4cadb8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55adbc4cad28 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4caf00 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55adbc4cae70 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55adbc4cb1a0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55adbc4cafb8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55adbc4cb038 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55adbc4cb0b0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55adbc4cb300 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55adbc4cb270 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55adbc4ce708 <col:37, line:441:5>
|   `-IfStmt 0x55adbc4ce6f0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55adbc4ce678 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55adbc4ce648 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55adbc4ce608 <col:6> 'int' lvalue ParmVar 0x55adbc4cb270 'level' 'int'
|     | `-ImplicitCastExpr 0x55adbc4ce660 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55adbc4ce628 <col:15> 'ErrorHandler::Level' EnumConstant 0x55adbc4c7380 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55adbc4ce6d8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55adbc4ce6a8 <col:8> 'int' lvalue ->_nerrors 0x55adbc4ccf68
|         `-CXXThisExpr 0x55adbc4ce698 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55adbc4cb3c8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55adbc4ce7a0 <col:26, line:448:5>
|   `-BinaryOperator 0x55adbc4ce780 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55adbc4ce730 <col:2> 'int' lvalue ->_nerrors 0x55adbc4ccf68
|     | `-CXXThisExpr 0x55adbc4ce720 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55adbc4ce760 <col:13> 'int' 0
|-CXXMethodDecl 0x55adbc4cb590 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55adbc4cb480 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55adbc4cb4f8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55adbc4cb798 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55adbc4cb650 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55adbc4cb6c8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55adbc4cba48 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55adbc4cb858 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55adbc4cb8d8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55adbc4cb958 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55adbc4cbb00 <col:59> 0 0
|-CXXMethodDecl 0x55adbc4cbc98 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55adbc4cbb78 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55adbc4cbbf8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55adbc4cee10 <col:70, line:534:5>
|   |-DeclStmt 0x55adbc4ce910 <line:528:2, col:20>
|   | |-VarDecl 0x55adbc4ce7c8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55adbc4ce830 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55adbc4ce868 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55adbc4ce8d0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55adbc4ce9e0 <line:529:2, col:23>
|   | `-VarDecl 0x55adbc4ce940 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55adbc4ce9c8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55adbc4ce9a8 <col:18> 'const char *' lvalue ParmVar 0x55adbc4cbb78 'begin' 'const char *'
|   |-DoStmt 0x55adbc4ceda8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55adbc4cecd8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55adbc4cecc0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55adbc4ceca0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55adbc4ce9f8 <col:6> 'const char *' lvalue Var 0x55adbc4ce940 'x' 'const char *'
|   | |     `-CallExpr 0x55adbc4cebf0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55adbc4cebd8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55adbc4ceb90 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55adbc4cd440 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55adbc4cec58 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55adbc4cec40 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55adbc4ceab0 <col:20, col:27> 'String' (CXXTemporary 0x55adbc4ceab0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55adbc4cea78 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55adbc4cec70 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55adbc4cead0 <col:30> 'const char *' lvalue Var 0x55adbc4ce940 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55adbc4cec88 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55adbc4ceaf0 <col:33> 'const char *' lvalue ParmVar 0x55adbc4cbbf8 'end' 'const char *'
|   | |       |-UnaryOperator 0x55adbc4ceb30 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55adbc4ceb10 <col:39> 'String' lvalue Var 0x55adbc4ce7c8 'name' 'String'
|   | |       |-UnaryOperator 0x55adbc4ceb68 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55adbc4ceb48 <col:46> 'String' lvalue Var 0x55adbc4ce868 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55adbc4ceb80 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55adbc4ced90 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55adbc4ced78 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55adbc4ced58 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55adbc4ced28 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55adbc022df8
|   |         `-ImplicitCastExpr 0x55adbc4ced10 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55adbc4cecf0 <col:11> 'String' lvalue Var 0x55adbc4ce7c8 'name' 'String'
|   `-ReturnStmt 0x55adbc4cee00 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55adbc4cede8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc4cedc8 <col:9> 'const char *' lvalue Var 0x55adbc4ce940 'x' 'const char *'
|-CXXMethodDecl 0x55adbc4cbde8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55adbc4cbd58 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55adbc4d0938 <col:55, line:550:5>
|   `-IfStmt 0x55adbc4d0910 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55adbc4cf050 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55adbc4cf038 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55adbc4cf020 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55adbc4cf000 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55adbc4cefd0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55adbc022df8
|     | |       `-DeclRefExpr 0x55adbc4cee70 <col:6> 'const String' lvalue ParmVar 0x55adbc4cbd58 'x' 'const String &'
|     | `-BinaryOperator 0x55adbc4cefb0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55adbc4cef80 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55adbc4cef30 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55adbc4cef18 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55adbc4ceed0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55adbc03a650 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55adbc4cee90 <col:11> 'const String' lvalue ParmVar 0x55adbc4cbd58 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55adbc4ceeb0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55adbc4cef98 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55adbc4cef68 <col:19> 'char' 123
|     |-ReturnStmt 0x55adbc4cf0c0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55adbc4cf090 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55adbc4cf070 <col:13> 'const String' lvalue ParmVar 0x55adbc4cbd58 'x' 'const String &'
|     `-IfStmt 0x55adbc4d08e8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55adbc4cf158 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55adbc4cf140 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55adbc4cf120 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55adbc4cf0f0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55adbc022df8
|       |       `-DeclRefExpr 0x55adbc4cf0d0 <col:11> 'const String' lvalue ParmVar 0x55adbc4cbd58 'x' 'const String &'
|       |-ReturnStmt 0x55adbc4d0800 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55adbc4d07e8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55adbc4d07b8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55adbc4d07a0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55adbc4d0780 <col:13, col:29> 'String' (CXXTemporary 0x55adbc4d0780)
|       |         `-CallExpr 0x55adbc4d0730 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55adbc4d0718 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55adbc4cf170 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55adbc4cb590 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55adbc4d0760 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55adbc4cf190 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55adbc4cf1b0 <col:28> 'const String' lvalue ParmVar 0x55adbc4cbd58 'x' 'const String &'
|       `-ReturnStmt 0x55adbc4d08d8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55adbc4d08c0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55adbc4d0890 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55adbc4d0878 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55adbc4d0858 <col:13, col:20> 'String' (CXXTemporary 0x55adbc4d0858)
|                 `-CXXTemporaryObjectExpr 0x55adbc4d0820 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55adbc4cbfb0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55adbc4cbea0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55adbc4cbf18 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55adbc4cd6e8 <col:71> 'bool' false
|-CXXRecordDecl 0x55adbc4cc060 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55adbc4cc358 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55adbc4cc2f0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55adbc4cc290 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55adbc4cc250 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55adbc01f670 'String'
|       | `-CXXRecord 0x55adbc01f5e0 'String'
|       |-BuiltinType 0x55adbbce2370 'int'
|       `-DecayedType 0x55adbc4479d0 '__va_list_tag *' sugar
|         |-TypedefType 0x55adbc4479a0 'va_list' sugar
|         | |-Typedef 0x55adbbf09470 'va_list'
|         | `-TypedefType 0x55adbbf09420 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55adbbe41038 '__gnuc_va_list'
|         |   `-TypedefType 0x55adbbe40fa0 '__builtin_va_list' sugar
|         |     |-Typedef 0x55adbbd23bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55adbbd23b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55adbbce30c0 '__va_list_tag'
|         |         `-CXXRecord 0x55adbbce3028 '__va_list_tag'
|         `-PointerType 0x55adbbf0f570 '__va_list_tag *'
|           `-RecordType 0x55adbbce30c0 '__va_list_tag'
|             `-CXXRecord 0x55adbbce3028 '__va_list_tag'
|-EnumDecl 0x55adbc4cc3b0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55adbc4cc4b0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55adbc4cca10 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc4cc490 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55adbc4cc470 <col:16> 'int' 1
| |-EnumConstantDecl 0x55adbc4cc540 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55adbc4cca28 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc4cc520 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55adbc4cc500 <col:21> 'int' 2
| |-EnumConstantDecl 0x55adbc4cc5d0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55adbc4cca40 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc4cc5b0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55adbc4cc590 <col:22> 'int' 4
| |-EnumConstantDecl 0x55adbc4cc660 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55adbc4cca58 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc4cc640 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55adbc4cc620 <col:17> 'int' 8
| |-EnumConstantDecl 0x55adbc4cc6f0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55adbc4cca70 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc4cc6d0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55adbc4cc6b0 <col:22> 'int' 16
| |-EnumConstantDecl 0x55adbc4cc780 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55adbc4cca88 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc4cc760 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55adbc4cc740 <col:19> 'int' 32
| |-EnumConstantDecl 0x55adbc4cc810 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55adbc4ccaa0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc4cc7f0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55adbc4cc7d0 <col:17> 'int' 64
| |-EnumConstantDecl 0x55adbc4cc8a0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55adbc4ccab8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc4cc880 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55adbc4cc860 <col:14> 'int' 128
| |-EnumConstantDecl 0x55adbc4cc930 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55adbc4ccad0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc4cc910 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55adbc4cc8f0 <col:16> 'int' 256
| `-EnumConstantDecl 0x55adbc4cc9c0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55adbc4ccae8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc4cc9a0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55adbc4cc980 <col:12> 'int' 1024
|-CXXMethodDecl 0x55adbc4cccf8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55adbc4ccb10 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55adbc4ccbb0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55adbc4cce80 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55adbc4ccdb8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55adbc4ccf28 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55adbc4ccf68 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55adbc4ccfc8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55adbc4cd040 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55adbc4cd440 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55adbc4cd0b8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55adbc4cd138 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55adbc4cd1b8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55adbc4cd230 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55adbc4cd2a8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55adbc4cd320 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55adbc4cd568 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55adbc4cd568
| `-ParmVarDecl 0x55adbc4cd678 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55adbc4d0c98 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55adbc4d0c98
  `-ParmVarDecl 0x55adbc4d0da8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc252810 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55adbc252960 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55adbc2529e0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x55adbc2537d8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55adbc2537d8
| `-ParmVarDecl 0x55adbc2538e8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x55adbc253988 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55adbc253988
| `-ParmVarDecl 0x55adbc253a98 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x55adbc253b08 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55adbc253b08
|-CXXMethodDecl 0x55adbc2543d8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55adbc2543d8
| `-ParmVarDecl 0x55adbc2544e8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x55adbc254558 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55adbc254558
| `-ParmVarDecl 0x55adbc254668 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x55adbc5b3268 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55adbc5b3340 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc252b10 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55adbc252c38 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55adbc252cc0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x55adbc253c38 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55adbc253c38
| `-ParmVarDecl 0x55adbc253d48 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x55adbc253de8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55adbc253de8
| `-ParmVarDecl 0x55adbc253ef8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x55adbc253f68 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55adbc253f68
|-CXXMethodDecl 0x55adbc254708 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55adbc254708
| `-ParmVarDecl 0x55adbc254818 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x55adbc254888 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55adbc254888
| `-ParmVarDecl 0x55adbc254998 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x55adbc5b33a0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55adbc5b3480 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc24e198 prev 0x55adbc24d6a0 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 referenced class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55adbc24e290 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x55adbc24e320 <col:17, col:23> col:17 public
|-EnumDecl 0x55adbc24e348 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x55adbc24e450 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f1a0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24e430 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x55adbc24e410 <col:11> 'int' 1
| |-EnumConstantDecl 0x55adbc24e4e0 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f1b8 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24e4c0 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x55adbc24e4a0 <col:12> 'int' 2
| |-EnumConstantDecl 0x55adbc24e570 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f1d0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24e550 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x55adbc24e530 <col:17> 'int' 4
| |-EnumConstantDecl 0x55adbc24e600 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f1e8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24e5e0 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x55adbc24e5c0 <col:16> 'int' 0
| |-EnumConstantDecl 0x55adbc24e690 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f200 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24e670 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55adbc24e650 <col:19> 'int' 32
| |-EnumConstantDecl 0x55adbc24e720 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f218 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24e700 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x55adbc24e6e0 <col:10> 'int' 64
| |-EnumConstantDecl 0x55adbc24e7b0 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f230 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24e790 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x55adbc24e770 <col:19> 'int' 128
| |-EnumConstantDecl 0x55adbc24e840 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f248 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24e820 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x55adbc24e800 <col:20> 'int' 256
| |-EnumConstantDecl 0x55adbc24e8d0 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f260 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24e8b0 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x55adbc24e890 <col:17> 'int' 512
| |-EnumConstantDecl 0x55adbc24e960 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f278 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24e940 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x55adbc24e920 <col:15> 'int' 1024
| |-EnumConstantDecl 0x55adbc24e9f0 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f290 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24e9d0 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x55adbc24e9b0 <col:11> 'int' 2048
| |-EnumConstantDecl 0x55adbc24ea80 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f2a8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24ea60 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x55adbc24ea40 <col:16> 'int' 4096
| |-EnumConstantDecl 0x55adbc24eb10 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f2c0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24eaf0 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x55adbc24ead0 <col:13> 'int' 8192
| |-EnumConstantDecl 0x55adbc24eba0 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f2d8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24eb80 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x55adbc24eb60 <col:15> 'int' 16384
| |-EnumConstantDecl 0x55adbc24ec70 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x55adbc24ec50 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x55adbc24ec30 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55adbc24ebf0 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x55adbc24ec10 <col:20> 'int' 26
| |-EnumConstantDecl 0x55adbc24ed40 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x55adbc24ed20 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x55adbc24ed00 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55adbc24ecc0 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x55adbc24ece0 <col:27> 'int' 27
| |-EnumConstantDecl 0x55adbc24edd0 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f2f0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24edb0 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x55adbc24ed90 <col:17> 'int' 28
| |-EnumConstantDecl 0x55adbc24eea0 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x55adbc24ee80 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x55adbc24ee60 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55adbc24ee20 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x55adbc24ee40 <col:18> 'int' EnumConstant 0x55adbc24edd0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc24ef30 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f308 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24ef10 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x55adbc24eef0 <col:25> 'int' 8
| |-EnumConstantDecl 0x55adbc24efc0 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55adbc24f320 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc24efa0 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x55adbc24ef80 <col:26> 'int' 16
| `-EnumConstantDecl 0x55adbc24f150 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x55adbc24f338 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc24f130 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x55adbc24f110 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x55adbc24f0d0 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x55adbc24f090 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x55adbc24f050 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x55adbc24f010 <col:14> 'int' EnumConstant 0x55adbc24e450 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x55adbc24f030 <col:23> 'int' EnumConstant 0x55adbc24e4e0 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x55adbc24f070 <col:33> 'int' EnumConstant 0x55adbc24e570 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x55adbc24f0b0 <col:48> 'int' EnumConstant 0x55adbc24ef30 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x55adbc24f0f0 <col:71> 'int' EnumConstant 0x55adbc24efc0 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x55adbc24f398 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x55adbc254dc8 <col:39, line:64:5>
|   `-ReturnStmt 0x55adbc254db8 <line:63:2, col:9>
|     `-MemberExpr 0x55adbc254d88 <col:9> 'const String' lvalue ->_name 0x55adbc2527c0
|       `-CXXThisExpr 0x55adbc254d78 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55adbc24f458 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x55adbc254e48 <col:35, line:71:5>
|   `-ReturnStmt 0x55adbc254e38 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x55adbc254e20 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55adbc254df0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55adbc252ed0
|         `-CXXThisExpr 0x55adbc254de0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55adbc24f5a8 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x55adbc24f510 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x55adbc254fc8 <col:42, line:77:5>
|   `-ReturnStmt 0x55adbc254fb8 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x55adbc254fa0 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x55adbc254f70 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x55adbc254ed0 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x55adbc254ea0 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55adbc254e60 <col:9> 'int' lvalue ParmVar 0x55adbc24f510 'op' 'int'
|         | `-ImplicitCastExpr 0x55adbc254eb8 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55adbc254e80 <col:15> 'Handler::Flags' EnumConstant 0x55adbc24e4e0 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x55adbc254f00 <col:25> 'void *const' lvalue ->_write_user_data 0x55adbc252e70
|         | `-CXXThisExpr 0x55adbc254ef0 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x55adbc254f40 <col:44> 'void *const' lvalue ->_read_user_data 0x55adbc252e08
|           `-CXXThisExpr 0x55adbc254f30 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x55adbc24f678 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x55adbc255048 <col:41, line:82:5>
|   `-ReturnStmt 0x55adbc255038 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x55adbc255020 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55adbc254ff0 <col:9> 'void *const' lvalue ->_read_user_data 0x55adbc252e08
|         `-CXXThisExpr 0x55adbc254fe0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55adbc24f740 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x55adbc2550c8 <col:42, line:87:5>
|   `-ReturnStmt 0x55adbc2550b8 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x55adbc2550a0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55adbc255070 <col:9> 'void *const' lvalue ->_write_user_data 0x55adbc252e70
|         `-CXXThisExpr 0x55adbc255060 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55adbc24f808 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x55adbc24f8a8 <col:52> "" ""
|-CXXMethodDecl 0x55adbc24f940 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x55adbc24f9e0 <col:52> "" ""
|-CXXMethodDecl 0x55adbc24fa70 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x55adbc2551b8 <col:34, line:98:5>
|   `-ReturnStmt 0x55adbc2551a8 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x55adbc255190 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55adbc255170 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55adbc255140 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55adbc2550f0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55adbc252ed0
|         |   `-CXXThisExpr 0x55adbc2550e0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55adbc255158 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55adbc255120 <col:18> 'Handler::Flags' EnumConstant 0x55adbc24e450 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55adbc24fb30 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x55adbc2552a8 <col:36, line:104:5>
|   `-ReturnStmt 0x55adbc255298 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x55adbc255280 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55adbc255260 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55adbc255230 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55adbc2551e0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55adbc252ed0
|         |   `-CXXThisExpr 0x55adbc2551d0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55adbc255248 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55adbc255210 <col:18> 'Handler::Flags' EnumConstant 0x55adbc24e570 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x55adbc24fbf0 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x55adbc255488 <col:38, line:113:5>
|   `-ReturnStmt 0x55adbc255478 <line:112:2, col:49>
|     `-BinaryOperator 0x55adbc255458 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x55adbc255400 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x55adbc2553e0 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55adbc2553b0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55adbc2552d0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55adbc252ed0
|       |   |   `-CXXThisExpr 0x55adbc2552c0 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55adbc2553c8 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55adbc255390 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x55adbc255370 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x55adbc255340 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55adbc255300 <col:20> 'Handler::Flags' EnumConstant 0x55adbc24e450 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55adbc255358 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55adbc255320 <col:29> 'Handler::Flags' EnumConstant 0x55adbc24e7b0 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55adbc255440 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55adbc255420 <col:49> 'Handler::Flags' EnumConstant 0x55adbc24e450 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55adbc24fcb0 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x55adbc255578 <col:34, line:118:5>
|   `-ReturnStmt 0x55adbc255568 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x55adbc255550 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55adbc255530 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55adbc255500 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55adbc2554b0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55adbc252ed0
|         |   `-CXXThisExpr 0x55adbc2554a0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55adbc255518 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55adbc2554e0 <col:18> 'Handler::Flags' EnumConstant 0x55adbc24e4e0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55adbc24fd70 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x55adbc255758 <col:39, line:127:5>
|   `-ReturnStmt 0x55adbc255748 <line:126:2, col:51>
|     `-BinaryOperator 0x55adbc255728 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x55adbc2556d0 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x55adbc2556b0 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55adbc255680 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55adbc2555a0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55adbc252ed0
|       |   |   `-CXXThisExpr 0x55adbc255590 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55adbc255698 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55adbc255660 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x55adbc255640 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x55adbc255610 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55adbc2555d0 <col:20> 'Handler::Flags' EnumConstant 0x55adbc24e4e0 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55adbc255628 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55adbc2555f0 <col:30> 'Handler::Flags' EnumConstant 0x55adbc24e840 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55adbc255710 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55adbc2556f0 <col:51> 'Handler::Flags' EnumConstant 0x55adbc24e4e0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55adbc24fe30 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x55adbc255860 <col:33, line:132:5>
|   `-ReturnStmt 0x55adbc255850 <line:131:2, col:41>
|     `-BinaryOperator 0x55adbc255830 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x55adbc2557b0 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x55adbc255780 <col:9> '<bound member function type>' ->read_visible 0x55adbc24fbf0
|       |   `-CXXThisExpr 0x55adbc255770 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x55adbc255810 <col:27, col:41> 'bool'
|         `-MemberExpr 0x55adbc2557e0 <col:27> '<bound member function type>' ->write_visible 0x55adbc24fd70
|           `-CXXThisExpr 0x55adbc2557d0 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x55adbc24fef0 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x55adbc255970 <col:51, line:138:5>
|   `-ReturnStmt 0x55adbc255960 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x55adbc255948 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55adbc255928 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55adbc255908 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55adbc2558d8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55adbc255888 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55adbc252ed0
|           |   `-CXXThisExpr 0x55adbc255878 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55adbc2558f0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55adbc2558b8 <col:26> 'Handler::Flags' EnumConstant 0x55adbc24e690 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55adbc24ffb0 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x55adbc255a80 <col:50, line:144:5>
|   `-ReturnStmt 0x55adbc255a70 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x55adbc255a58 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55adbc255a38 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55adbc255a18 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55adbc2559e8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55adbc255998 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55adbc252ed0
|           |   `-CXXThisExpr 0x55adbc255988 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55adbc255a00 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55adbc2559c8 <col:26> 'Handler::Flags' EnumConstant 0x55adbc24e690 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55adbc250070 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x55adbc255b70 <col:29, line:166:5>
|   `-ReturnStmt 0x55adbc255b60 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x55adbc255b48 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55adbc255b28 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55adbc255af8 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55adbc255aa8 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55adbc252ed0
|         |   `-CXXThisExpr 0x55adbc255a98 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55adbc255b10 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55adbc255ad8 <col:18> 'Handler::Flags' EnumConstant 0x55adbc24e720 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x55adbc2502f8 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55adbc250120 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x55adbc250198 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x55adbc250210 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc250508 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55adbc2503c0 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x55adbc250438 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55adbc254cb0 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55adbc254c90 <col:62> 'int' 0
| `-CompoundStmt 0x55adbc255e10 <col:71, line:188:5>
|   `-ReturnStmt 0x55adbc255e00 <line:187:2, col:36>
|     `-ExprWithCleanups 0x55adbc255de8 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x55adbc255db8 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55adbc255da0 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55adbc255d80 <col:9, col:36> 'String' (CXXTemporary 0x55adbc255d80)
|             `-CXXMemberCallExpr 0x55adbc255ce0 <col:9, col:36> 'String'
|               |-MemberExpr 0x55adbc255cb0 <col:9> '<bound member function type>' ->call_read 0x55adbc2502f8
|               | `-CXXThisExpr 0x55adbc255ca0 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55adbc255d18 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55adbc255bf8 <col:19> 'Element *' lvalue ParmVar 0x55adbc2503c0 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x55adbc255d48 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x55adbc255d30 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x55adbc255c60 <col:22, col:29> 'String' (CXXTemporary 0x55adbc255c60)
|               |     `-CXXTemporaryObjectExpr 0x55adbc255c28 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x55adbc255d60 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x55adbc255c80 <col:32> 'ErrorHandler *' lvalue ParmVar 0x55adbc250438 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc2507a0 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55adbc2505c8 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x55adbc250640 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55adbc2506b8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc250928 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x55adbc250868 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x55adbc250b58 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x55adbc2509e0 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55adbc250a58 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x55adbc250c70 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x55adbc255e70 <col:50, line:225:5>
|   `-ReturnStmt 0x55adbc255e60 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x55adbc255e48 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc255e28 <col:9> 'const Handler *' lvalue Var 0x55adbc253000 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x55adbc250d10 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x55adbc250e10 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc2519a0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc250df0 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55adbc250dd0 <col:11> 'Handler::Flags' EnumConstant 0x55adbc24e450 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc250ea0 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc2519b8 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc250e80 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55adbc250e60 <col:12> 'Handler::Flags' EnumConstant 0x55adbc24e4e0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc250f30 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc2519d0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc250f10 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55adbc250ef0 <col:17> 'Handler::Flags' EnumConstant 0x55adbc24e570 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc250fc0 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc2519e8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc250fa0 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55adbc250f80 <col:16> 'Handler::Flags' EnumConstant 0x55adbc24e600 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc251050 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251a00 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251030 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x55adbc251010 <col:19> 'Handler::Flags' EnumConstant 0x55adbc24e690 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc2510e0 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251a18 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc2510c0 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55adbc2510a0 <col:10> 'Handler::Flags' EnumConstant 0x55adbc24e720 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc251170 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251a30 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251150 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x55adbc251130 <col:19> 'Handler::Flags' EnumConstant 0x55adbc24e7b0 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc251200 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251a48 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc2511e0 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x55adbc2511c0 <col:20> 'Handler::Flags' EnumConstant 0x55adbc24e840 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc251290 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251a60 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251270 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x55adbc251250 <col:17> 'Handler::Flags' EnumConstant 0x55adbc24e8d0 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc251320 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251a78 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251300 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x55adbc2512e0 <col:15> 'Handler::Flags' EnumConstant 0x55adbc24e960 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc2513b0 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251a90 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251390 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55adbc251370 <col:11> 'Handler::Flags' EnumConstant 0x55adbc24e9f0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc251440 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251aa8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251420 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55adbc251400 <col:16> 'Handler::Flags' EnumConstant 0x55adbc24ea80 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc2514d0 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251ac0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc2514b0 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55adbc251490 <col:13> 'Handler::Flags' EnumConstant 0x55adbc24eb10 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc251560 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251ad8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251540 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55adbc251520 <col:15> 'Handler::Flags' EnumConstant 0x55adbc24eba0 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc2515f0 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251af0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc2515d0 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x55adbc2515b0 <col:20> 'Handler::Flags' EnumConstant 0x55adbc24ec70 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc251680 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251b08 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251660 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x55adbc251640 <col:27> 'Handler::Flags' EnumConstant 0x55adbc24ed40 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc251710 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251b20 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc2516f0 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55adbc2516d0 <col:22> 'Handler::Flags' EnumConstant 0x55adbc24edd0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc2517a0 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251b38 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251780 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x55adbc251760 <col:18> 'Handler::Flags' EnumConstant 0x55adbc24eea0 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc251830 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251b50 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251810 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x55adbc2517f0 <col:25> 'Handler::Flags' EnumConstant 0x55adbc24ef30 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc2518c0 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55adbc251b68 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc2518a0 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x55adbc251880 <col:26> 'Handler::Flags' EnumConstant 0x55adbc24efc0 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x55adbc251950 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x55adbc251b80 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc251930 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x55adbc251910 <col:20> 'Handler::Flags' EnumConstant 0x55adbc24f150 'f_special' 'Handler::Flags'
|-EnumDecl 0x55adbc251b98 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x55adbc251ca0 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55adbc252200 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251c80 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55adbc251c60 <col:12> 'Handler::Flags' EnumConstant 0x55adbc24e450 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc251d30 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55adbc252218 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251d10 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55adbc251cf0 <col:13> 'Handler::Flags' EnumConstant 0x55adbc24e4e0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc251dc0 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55adbc252230 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251da0 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55adbc251d80 <col:15> 'Handler::Flags' EnumConstant 0x55adbc24e570 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc251e50 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55adbc252248 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251e30 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55adbc251e10 <col:8> 'Handler::Flags' EnumConstant 0x55adbc24e720 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc251ee0 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55adbc252260 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251ec0 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55adbc251ea0 <col:9> 'Handler::Flags' EnumConstant 0x55adbc24e9f0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc251f70 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55adbc252278 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251f50 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55adbc251f30 <col:14> 'Handler::Flags' EnumConstant 0x55adbc24ea80 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc252000 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55adbc252290 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc251fe0 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55adbc251fc0 <col:11> 'Handler::Flags' EnumConstant 0x55adbc24eb10 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc252090 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55adbc2522a8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc252070 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55adbc252050 <col:13> 'Handler::Flags' EnumConstant 0x55adbc24eba0 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55adbc252120 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55adbc2522c0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc252100 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55adbc2520e0 <col:20> 'Handler::Flags' EnumConstant 0x55adbc24edd0 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x55adbc2521b0 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x55adbc2522d8 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc252190 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x55adbc252170 <col:16> 'Handler::Flags' EnumConstant 0x55adbc24eea0 'f_user0' 'Handler::Flags'
|-EnumDecl 0x55adbc2522f0 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x55adbc2523b0 <col:25> "" ""
| |-EnumConstantDecl 0x55adbc252460 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x55adbc252540 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc252440 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55adbc252420 <col:14> 'Handler::Flags' EnumConstant 0x55adbc24e600 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x55adbc2524f0 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x55adbc252558 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc2524d0 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x55adbc2524b0 <col:17> 'Handler::Flags' EnumConstant 0x55adbc24e690 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55adbc2526d8 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x55adbc252580 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x55adbc252600 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x55adbc256530 <col:70, line:284:5>
|   |-ParenExpr 0x55adbc256350 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x55adbc256320 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc256050 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc256020 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x55adbc255fc8 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x55adbc255fa8 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x55adbc255f78 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x55adbc255e98 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55adbc252ed0
|   |   |   |   |   `-CXXThisExpr 0x55adbc255e88 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x55adbc255f90 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x55adbc255f58 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x55adbc255f38 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x55adbc255f08 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x55adbc255ec8 <col:34> 'Handler::Flags' EnumConstant 0x55adbc24e450 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x55adbc255f20 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x55adbc255ee8 <col:43> 'Handler::Flags' EnumConstant 0x55adbc24ef30 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x55adbc256008 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x55adbc255fe8 <col:69> 'Handler::Flags' EnumConstant 0x55adbc24e450 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x55adbc2560b0 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc256090 <col:85> 'int' 0
|   |   `-CallExpr 0x55adbc256280 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x55adbc256268 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc256248 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc2562c0 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc256120 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x55adbc2562d8 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc256170 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x55adbc2562f0 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc2561a8 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x55adbc256308 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc256230 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc256218 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc2561c8 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x55adbc256520 <line:283:2, col:38>
|     `-ExprWithCleanups 0x55adbc256508 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x55adbc2564d8 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55adbc2564c0 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55adbc2564a0 <col:9, col:38> 'String' (CXXTemporary 0x55adbc2564a0)
|             `-CallExpr 0x55adbc256438 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x55adbc256420 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x55adbc2563b0 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x55adbc2529e0
|               |   `-MemberExpr 0x55adbc256380 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x55adbc252aa8
|               |     `-CXXThisExpr 0x55adbc256370 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55adbc256468 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55adbc2563e0 <col:22> 'Element *' lvalue ParmVar 0x55adbc252580 'e' 'Element *'
|               `-ImplicitCastExpr 0x55adbc256480 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x55adbc256400 <col:25> 'void *' lvalue ParmVar 0x55adbc252600 'new_user_data' 'void *'
|-AccessSpecDecl 0x55adbc252788 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55adbc2527c0 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x55adbc252810 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55adbc252960 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55adbc2529e0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x55adbc2537d8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55adbc2537d8
| | `-ParmVarDecl 0x55adbc2538e8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x55adbc253988 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55adbc253988
| | `-ParmVarDecl 0x55adbc253a98 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x55adbc253b08 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55adbc253b08
| |-CXXMethodDecl 0x55adbc2543d8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55adbc2543d8
| | `-ParmVarDecl 0x55adbc2544e8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x55adbc254558 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55adbc254558
| | `-ParmVarDecl 0x55adbc254668 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x55adbc5b3268 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55adbc5b3340 <col:5>
|-FieldDecl 0x55adbc252aa8 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x55adbc252b10 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55adbc252c38 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55adbc252cc0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x55adbc253c38 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55adbc253c38
| | `-ParmVarDecl 0x55adbc253d48 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x55adbc253de8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55adbc253de8
| | `-ParmVarDecl 0x55adbc253ef8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x55adbc253f68 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55adbc253f68
| |-CXXMethodDecl 0x55adbc254708 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55adbc254708
| | `-ParmVarDecl 0x55adbc254818 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x55adbc254888 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55adbc254888
| | `-ParmVarDecl 0x55adbc254998 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x55adbc5b33a0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55adbc5b3480 <col:5>
|-FieldDecl 0x55adbc252d88 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x55adbc252e08 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x55adbc252e70 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x55adbc252ed0 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x55adbc252f38 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x55adbc252fa0 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x55adbc253000 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x55adbc253120 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x55adbc253078 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x55adbc254d60 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55adbc254d48 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x55adbc254d30 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55adbc254d10 <col:30, col:37> 'String' (CXXTemporary 0x55adbc254d10)
|           `-CXXTemporaryObjectExpr 0x55adbc254cd8 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x55adbc2532c8 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x55adbc253208 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x55adbc253448 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x55adbc253380 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x55adbc253608 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x55adbc253648 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x55adbc253648
| `-ParmVarDecl 0x55adbc253728 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x55adbc254078 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x55adbc254078
| `-ParmVarDecl 0x55adbc254188 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x55adbc254228 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x55adbc254228
| `-ParmVarDecl 0x55adbc254338 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x55adbc254a08 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x55adbc254a08
| `-ParmVarDecl 0x55adbc254b18 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x55adbc254ba0 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x55adbc254ba0

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc5995b8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x55adbc5997c8 prev 0x55adbc5995b8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55adbc59c3f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55adbc59c3a0 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x55adbc59c380 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x55adbc59c230 'type'
|     `-SubstTemplateTypeParmType 0x55adbc321250 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55adbbfc9040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfc8fe8 'T'
|       `-RecordType 0x55adbc320da0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55adbc320cb8 'sized_array_memory'
|-FieldDecl 0x55adbc59c4f0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55adbc59c540 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55adbc59c578 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x55adbc599860 'void *' sugar
|   |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|   `-PointerType 0x55adbbce2ad0 'void *'
|     `-BuiltinType 0x55adbbce22d0 'void'
|-TypedefDecl 0x55adbc59c608 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x55adbc59c5d0 'void *&'
|   `-SubstTemplateTypeParmType 0x55adbc599860 'void *' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-PointerType 0x55adbbce2ad0 'void *'
|       `-BuiltinType 0x55adbbce22d0 'void'
|-TypedefDecl 0x55adbc59c6c8 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x55adbc59c690 'void *const &'
|   `-QualType 0x55adbc599861 'void *const' const
|     `-SubstTemplateTypeParmType 0x55adbc599860 'void *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbbce2ad0 'void *'
|         `-BuiltinType 0x55adbbce22d0 'void'
|-TypedefDecl 0x55adbc59c758 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x55adbc59c720 'void **'
|   `-SubstTemplateTypeParmType 0x55adbc599860 'void *' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-PointerType 0x55adbbce2ad0 'void *'
|       `-BuiltinType 0x55adbbce22d0 'void'
|-TypedefDecl 0x55adbc59c7e8 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x55adbc59c7b0 'void *const *'
|   `-QualType 0x55adbc599861 'void *const' const
|     `-SubstTemplateTypeParmType 0x55adbc599860 'void *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbbce2ad0 'void *'
|         `-BuiltinType 0x55adbbce22d0 'void'
|-TypedefDecl 0x55adbc59d3d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x55adbc59d380 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x55adbc59d360 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x55adbc59d2f0 'type'
|     `-SubstTemplateTypeParmType 0x55adbc59d0b0 'void *' sugar
|       |-TemplateTypeParmType 0x55adbbfd1240 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfd11f0 'T'
|       `-PointerType 0x55adbbce2ad0 'void *'
|         `-BuiltinType 0x55adbbce22d0 'void'
|-TypedefDecl 0x55adbc59d438 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x55adbc59c690 'void *const &'
|   `-QualType 0x55adbc599861 'void *const' const
|     `-SubstTemplateTypeParmType 0x55adbc599860 'void *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbbce2ad0 'void *'
|         `-BuiltinType 0x55adbbce22d0 'void'
|-TypedefDecl 0x55adbc59d490 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc59d4f8 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x55adbc59c720 'void **'
|   `-SubstTemplateTypeParmType 0x55adbc599860 'void *' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-PointerType 0x55adbbce2ad0 'void *'
|       `-BuiltinType 0x55adbbce22d0 'void'
|-TypedefDecl 0x55adbc59d560 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x55adbc59c7b0 'void *const *'
|   `-QualType 0x55adbc599861 'void *const' const
|     `-SubstTemplateTypeParmType 0x55adbc599860 'void *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbbce2ad0 'void *'
|         `-BuiltinType 0x55adbbce22d0 'void'
|-EnumDecl 0x55adbc59d5b8 <line:134:5> col:5
| `-EnumConstantDecl 0x55adbc59d6b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55adbc59d690 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55adbc0003c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55adbc0003a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55adbc000380 <col:40> 'int' 1
|-CXXConstructorDecl 0x55adbc59d738 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55adbc59d988 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc59d7f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc59d890 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x55adbc59dc48 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x55adbc59db30 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x55adbc59df08 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x55adbc59ddf0 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55adbc59e250 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x55adbc59e130 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x55adbc59e560 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x55adbc59e440 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55adbc59e850 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc59e698 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc59e710 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55adbc59e9a8 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55adbc59ea88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc59eae0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc59eb28 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55adbc59ebd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc59ec30 <col:30> Inherited
|-CXXMethodDecl 0x55adbc59ecf8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc59eda8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc59ee00 <col:30> Inherited
|-CXXMethodDecl 0x55adbc59ee48 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc59eef8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc59ef50 <col:30> Inherited
|-CXXMethodDecl 0x55adbc59ef98 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc59f048 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc59f0a0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc59f0e8 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc59f198 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc59f1f0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc59f218 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc59f2c8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc59f378 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc59f538 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc59f428 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc59f4a0 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55adbc59f688 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc59f5f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc59f838 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x55adbc59f740 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc59f8f0 <col:20>
| `-OptimizeNoneAttr 0x55adbc59f948 <col:30>
|-CXXMethodDecl 0x55adbc59fa68 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55adbc59f970 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc59fb20 <col:20>
| `-OptimizeNoneAttr 0x55adbc59fb78 <col:30>
|-CXXMethodDecl 0x55adbc59fc30 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc59fba0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc59fd78 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc59fce8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc59fea8 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x55adbc59ffd8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x55adbc5a00a8 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x55adbc5a0178 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x55adbc5a02b8 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc5a0228 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc5a0400 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc5a0370 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc5a0548 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55adbc5a04b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc5a0600 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55adbc5a0700 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55adbc5a0670 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc5a07b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55adbc5a0878 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x55adbc5a0978 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x55adbc5a0af8 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc5a0a38 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x55adbc5a12b8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55adbc5a0bb0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x55adbc5a1218 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x55adbc5a1118 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x55adbc5a1398 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc5a14e8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc5a1458 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55adbc5a15a0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55adbc5a17e8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc5a1660 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55adbc5a16d8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55adbc5a19a8 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x55adbc5a18b8 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55adbc5a1bf8 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x55adbc5a1a70 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55adbc5a1ae8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55adbc5a1cb8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc5a1f18 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x55adbc5a1e20 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x55adbc5a1fe8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55adbc5a1fe8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc5a21e0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55adbc5a22f8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x55adbc5a2388 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x55adbc5a2490 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x55adbc5a24e0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc5a2470 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x55adbc5a2450 <col:27> 'int' 4096
|-FieldDecl 0x55adbc5a2508 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x55adbc5a2570 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x55adbc5a2768 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x55adbc5a27f8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x55adbc5a29b8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x55adbc5a2858 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x55adbc5a28d0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x55adbc5a2508 'name' 'String'
| | `-CXXConstructExpr 0x55adbc5ae0f8 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55adbc5ae0b8 <col:20> 'const String' lvalue ParmVar 0x55adbc5a2858 'n' 'const String &'
| |-CXXCtorInitializer Field 0x55adbc5a2570 'nsig' 'int'
| | `-IntegerLiteral 0x55adbc5ae150 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x55adbc5a2768 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x55adbc5ae238 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55adbc5a27f8 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x55adbc5ae1f8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x55adbc5ae1b8 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55adbc5a28d0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x55adbc5ae4c8 <col:42, line:289:9>
|   `-CallExpr 0x55adbc5ae478 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x55adbc5ae460 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55adbc5ae440 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55adbbf4bc28 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55adbc5ae4b0 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x55adbc5ae388 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x55adbc5ae368 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x55adbc5ae350 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55adbc5ae300 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55adbc5a2768
|     |     |   `-CXXThisExpr 0x55adbc5ae2f0 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x55adbc5ae330 <col:25> 'int' 0
|     |-IntegerLiteral 0x55adbc5ae3a0 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55adbc5ae420 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x55adbc5ae400 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x55adbc5ae3d0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55adbc5a2768 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55adbc5ae3c0 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x55adbc5a2a98 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55adbc5a2a98
| `-ParmVarDecl 0x55adbc5a2ba8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x55adbc5a2c48 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55adbc5a2c48
| `-ParmVarDecl 0x55adbc5a2d58 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x55adbc5a2df8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55adbc5a2df8
| `-ParmVarDecl 0x55adbc5a2f08 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x55adbc5a2f78 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55adbc5a2f78
| `-ParmVarDecl 0x55adbc5a3088 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x55adbc5a3110 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55adbc5a3110

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashMap_ArenaFactory
         0 |   (HashMap_ArenaFactory vtable pointer)
         8 |   class HashMap_Arena **[2] _arenas
        24 |   int [2] _narenas
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashMap_Arena
         0 |   struct HashMap_Arena::Link * _free
         8 |   char * _cur_buffer
        16 |   int _buffer_pos
        20 |   uint32_t _element_size
        24 |   char ** _buffers
        32 |   int _nbuffers
        36 |   int _buffers_cap
        40 |   uint32_t _refcount
        44 |   _Bool _detached
           | [sizeof=48, dsize=45, align=8,
           |  nvsize=45, nvalign=8]

*** Dumping AST Record Layout
         0 | struct HashMap_Arena::Link
         0 |   struct HashMap_Arena::Link * next
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc3a18a8 <../dummy_inc/click/bighashmap_arena.hh:21:5, line:23:5> line:21:12 referenced struct Link definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55adbc3a19c8 <col:5, col:12> col:12 implicit referenced struct Link
`-FieldDecl 0x55adbc3a1a98 <line:22:2, col:8> col:8 referenced next 'HashMap_Arena::Link *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap_Arena::Link" = type { %"struct.HashMap_Arena::Link"* }
  NonVirtualBaseLLVMType:%"struct.HashMap_Arena::Link" = type { %"struct.HashMap_Arena::Link"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc3a1020 prev 0x55adbc36e558 <../dummy_inc/click/bighashmap_arena.hh:6:1, line:48:1> line:6:7 referenced class HashMap_Arena definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbc3a1118 <col:1, col:7> col:7 implicit referenced class HashMap_Arena
|-AccessSpecDecl 0x55adbc3a11a8 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x55adbc3a1288 <line:8:5, col:40> col:5 HashMap_Arena 'void (uint32_t)'
| `-ParmVarDecl 0x55adbc3a11e0 <col:19, col:28> col:28 element_size 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc3a1358 <line:10:5, col:31> col:10 referenced use 'void ()'
| `-CompoundStmt 0x55adbc3a2628 <col:16, col:31>
|   `-UnaryOperator 0x55adbc3a2610 <col:18, col:27> 'uint32_t':'unsigned int' postfix '++'
|     `-MemberExpr 0x55adbc3a25e0 <col:18> 'uint32_t':'unsigned int' lvalue ->_refcount 0x55adbc3a1f40
|       `-CXXThisExpr 0x55adbc3a25d0 <col:18> 'HashMap_Arena *' implicit this
|-CXXMethodDecl 0x55adbc3a1418 <line:11:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55adbc3a1508 <line:13:5, col:47> col:10 detached 'bool () const'
| `-CompoundStmt 0x55adbc3a26a8 <col:27, col:47>
|   `-ReturnStmt 0x55adbc3a2698 <col:29, col:36>
|     `-ImplicitCastExpr 0x55adbc3a2680 <col:36> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55adbc3a2650 <col:36> 'const bool' lvalue ->_detached 0x55adbc3a1fa0
|         `-CXXThisExpr 0x55adbc3a2640 <col:36> 'const HashMap_Arena *' implicit this
|-CXXMethodDecl 0x55adbc3a15c8 <line:14:5, col:39> col:10 detach 'void ()'
| `-CompoundStmt 0x55adbc3a2730 <col:19, col:39>
|   `-BinaryOperator 0x55adbc3a2710 <col:21, col:33> 'bool' lvalue '='
|     |-MemberExpr 0x55adbc3a26d0 <col:21> 'bool' lvalue ->_detached 0x55adbc3a1fa0
|     | `-CXXThisExpr 0x55adbc3a26c0 <col:21> 'HashMap_Arena *' implicit this
|     `-CXXBoolLiteralExpr 0x55adbc3a2700 <col:33> 'bool' true
|-CXXMethodDecl 0x55adbc3a1690 <line:16:5, col:17> col:11 alloc 'void *()'
|-CXXMethodDecl 0x55adbc3a17d8 <line:17:5, col:21> col:10 free 'void (void *)'
| `-ParmVarDecl 0x55adbc3a1748 <col:15, col:20> col:21 'void *'
|-AccessSpecDecl 0x55adbc3a1880 <line:19:3, col:10> col:3 private
|-CXXRecordDecl 0x55adbc3a18a8 <line:21:5, line:23:5> line:21:12 referenced struct Link definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55adbc3a19c8 <col:5, col:12> col:12 implicit referenced struct Link
| `-FieldDecl 0x55adbc3a1a98 <line:22:2, col:8> col:8 referenced next 'HashMap_Arena::Link *'
|-FieldDecl 0x55adbc3a1b10 <line:24:5, col:11> col:11 referenced _free 'HashMap_Arena::Link *'
|-EnumDecl 0x55adbc3a1b60 <line:26:5, col:28> col:5
| `-EnumConstantDecl 0x55adbc3a1c60 <col:12, col:24> col:12 NELEMENTS 'HashMap_Arena::(anonymous enum at ../dummy_inc/click/bighashmap_arena.hh:26:5)'
|   `-ImplicitCastExpr 0x55adbc3a1cb0 <col:24> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc3a1c40 <col:24> 'int' Int: 127
|       `-IntegerLiteral 0x55adbc3a1c20 <col:24> 'int' 127
|-FieldDecl 0x55adbc3a1ce0 <line:28:5, col:11> col:11 referenced _cur_buffer 'char *'
|-FieldDecl 0x55adbc3a1d48 <line:29:5, col:9> col:9 referenced _buffer_pos 'int'
|-FieldDecl 0x55adbc3a1da8 <line:31:5, col:14> col:14 referenced _element_size 'uint32_t':'unsigned int'
|-FieldDecl 0x55adbc3a1e10 <line:33:5, col:12> col:12 _buffers 'char **'
|-FieldDecl 0x55adbc3a1e78 <line:34:5, col:9> col:9 _nbuffers 'int'
|-FieldDecl 0x55adbc3a1ee0 <line:35:5, col:9> col:9 _buffers_cap 'int'
|-FieldDecl 0x55adbc3a1f40 <line:37:5, col:14> col:14 referenced _refcount 'uint32_t':'unsigned int'
|-FieldDecl 0x55adbc3a1fa0 <line:38:5, col:10> col:10 referenced _detached 'bool'
|-CXXConstructorDecl 0x55adbc3a20e8 <line:40:5, col:40> col:5 HashMap_Arena 'void (const HashMap_Arena &)'
| `-ParmVarDecl 0x55adbc3a2028 <col:19, col:39> col:40 'const HashMap_Arena &'
|-CXXDestructorDecl 0x55adbc3a21e0 <line:41:5, col:20> col:5 used ~HashMap_Arena 'void () noexcept'
|-CXXMethodDecl 0x55adbc3a23c8 <line:42:5, col:51> col:20 operator= 'HashMap_Arena &(const HashMap_Arena &)'
| `-ParmVarDecl 0x55adbc3a22d0 <col:30, col:50> col:51 'const HashMap_Arena &'
|-CXXMethodDecl 0x55adbc3a2498 <line:44:5, col:22> col:11 used hard_alloc 'void *()'
`-FriendDecl 0x55adbc3a2590 <line:46:5, col:19> col:12 'struct Link':'HashMap_Arena::Link'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap_Arena = type <{ %"struct.HashMap_Arena::Link"*, i8*, i32, i32, i8**, i32, i32, i32, i8, [3 x i8] }>
  NonVirtualBaseLLVMType:%class.HashMap_Arena.base = type <{ %"struct.HashMap_Arena::Link"*, i8*, i32, i32, i8**, i32, i32, i32, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc3a2748 prev 0x55adbc36e610 <../dummy_inc/click/bighashmap_arena.hh:50:1, line:68:1> line:50:7 referenced class HashMap_ArenaFactory definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbc3a2840 <col:1, col:7> col:7 implicit referenced class HashMap_ArenaFactory
|-AccessSpecDecl 0x55adbc3a28d0 <col:30, col:36> col:30 public
|-CXXConstructorDecl 0x55adbc3a2930 <line:52:5, col:26> col:5 HashMap_ArenaFactory 'void ()'
|-CXXDestructorDecl 0x55adbc3a2a20 <line:53:5, col:35> col:13 ~HashMap_ArenaFactory 'void ()' virtual noexcept-unevaluated 0x55adbc3a2a20
|-CXXMethodDecl 0x55adbc3a2b20 <line:55:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55adbc3a2be0 <line:56:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55adbc3a2e18 <line:58:5, col:72> col:27 referenced get_arena 'HashMap_Arena *(uint32_t, HashMap_ArenaFactory *)' static
| |-ParmVarDecl 0x55adbc3a2c90 <col:37> col:45 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55adbc3a2d08 <col:47, col:71> col:70 'HashMap_ArenaFactory *' cinit
|   `-ImplicitCastExpr 0x55adbc3a34e8 <col:71> 'HashMap_ArenaFactory *' <NullToPointer>
|     `-IntegerLiteral 0x55adbc3a34c8 <col:71> 'int' 0
|-CXXMethodDecl 0x55adbc3a2fc8 <line:59:5, col:51> col:28 get_arena_func 'HashMap_Arena *(uint32_t)' virtual
| `-ParmVarDecl 0x55adbc3a2ed8 <col:43> col:51 'uint32_t':'unsigned int'
|-AccessSpecDecl 0x55adbc3a3070 <line:61:3, col:10> col:3 private
|-FieldDecl 0x55adbc3a3170 <line:63:5, col:30> col:21 _arenas 'HashMap_Arena **[2]'
|-FieldDecl 0x55adbc3a3228 <line:64:5, col:19> col:9 _narenas 'int [2]'
|-VarDecl 0x55adbc3a3288 <line:66:5, col:34> col:34 the_factory 'HashMap_ArenaFactory *' static
`-CXXMethodDecl 0x55adbc3a3348 <line:50:7> col:7 implicit operator= 'HashMap_ArenaFactory &(const HashMap_ArenaFactory &)' inline default noexcept-unevaluated 0x55adbc3a3348
  `-ParmVarDecl 0x55adbc3a3458 <col:7> col:7 'const HashMap_ArenaFactory &'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap_ArenaFactory = type { i32 (...)**, [2 x %class.HashMap_Arena**], [2 x i32] }
  NonVirtualBaseLLVMType:%class.HashMap_ArenaFactory = type { i32 (...)**, [2 x %class.HashMap_Arena**], [2 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc563968 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbc563a88 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x55adbc563b18 <col:21, col:27> col:21 public
|-EnumDecl 0x55adbc563b40 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x55adbc563c58 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x55adbc563c38 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55adbc563c20 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55adbc563c00 <col:32> 'int' 1
| `-EnumConstantDecl 0x55adbc563d00 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x55adbc563ce0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55adbc563cc8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55adbc563ca8 <col:53> 'int' 1000
|-CXXConstructorDecl 0x55adbc563db0 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x55adbc5642e8 <col:19, col:21>
|-CXXDestructorDecl 0x55adbc563ea0 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x55adbc5642f8 <col:28, col:30>
|-CXXMethodDecl 0x55adbc564060 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x55adbc563f90 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x55adbc564168 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x55adbc564168
  `-ParmVarDecl 0x55adbc564278 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc564880 prev 0x55adbc1098b0 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55adbc564978 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x55adbc564a08 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x55adbc564a78 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55adbc564b38 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x55adbc564bf8 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x55adbc564cb8 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x55adbc564d78 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x55adbc564e18 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x55adbc564f78 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x55adbc564f58 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x55adbc564f38 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x55adbc564f00 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x55adbc564ee0 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x55adbc564f18 <col:42> 'int' 1
|-CXXMethodDecl 0x55adbc564fe8 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x55adbc565158 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55adbc565098 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x55adbc5652a0 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55adbc565210 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x55adbc565368 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x55adbc565690 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x55adbc565758 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x55adbc5658d8 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x55adbc565810 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55adbc5659a0 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x55adbc565ba8 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x55adbc565a50 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x55adbc565ad0 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x55adbc565d00 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x55adbc565c70 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x55adbc565e50 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x55adbc565dc0 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x55adbc565fa0 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x55adbc565f10 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x55adbc5660f0 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x55adbc566060 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x55adbc5662c0 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x55adbc5661b0 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x55adbc566228 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x55adbc5664c8 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55adbc566380 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x55adbc5663f8 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55adbc5aaaa0 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55adbc5aaa80 <col:60> 'int' 0
|-CXXMethodDecl 0x55adbc566758 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x55adbc566588 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55adbc566600 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x55adbc566678 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55adbc5aaad8 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55adbc5aaab8 <col:76> 'int' 0
|-CXXMethodDecl 0x55adbc5669f8 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55adbc566820 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55adbc566898 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x55adbc566910 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55adbc5aab10 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55adbc5aaaf0 <col:84> 'int' 0
|-CXXMethodDecl 0x55adbc566d50 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55adbc566ac0 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x55adbc566b38 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x55adbc566bb8 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x55adbc566c58 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55adbc567000 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55adbc566e20 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x55adbc566ea0 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x55adbc566f18 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55adbc567268 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55adbc5670c8 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x55adbc567148 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x55adbc5671c0 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55adbc567720 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55adbc567330 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55adbc5673b0 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x55adbc567458 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x55adbc5675d0 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55adbc5677e0 <col:115> "" ""
|-CXXMethodDecl 0x55adbc567ba0 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55adbc567860 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55adbc5678e0 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x55adbc567958 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x55adbc567aa0 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55adbc567c60 <col:113> "" ""
|-CXXMethodDecl 0x55adbc567db0 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x55adbc567ce8 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x55adbc567f80 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x55adbc567e70 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x55adbc567ee8 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x55adbc568188 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x55adbc568040 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x55adbc5680b8 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x55adbc568588 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55adbc568248 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55adbc5682c0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55adbc568338 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55adbc5683b8 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x55adbc568430 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55adbc5aab48 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55adbc5aab28 <col:137> 'int' 0
|-CXXMethodDecl 0x55adbc568998 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55adbc568660 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x55adbc5686d8 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x55adbc568750 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc5687d0 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x55adbc568848 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55adbc5aab80 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55adbc5aab60 <col:139> 'int' 0
|-CXXMethodDecl 0x55adbc568e48 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x55adbc568a70 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x55adbc568ae8 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x55adbc568b60 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55adbc568bd8 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc568c58 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x55adbc5aabb8 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x55adbc5aab98 <col:133> 'int' 0
| `-ParmVarDecl 0x55adbc568cd8 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x55adbc5aabf0 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55adbc5aabd0 <col:160> 'int' 0
|-CXXMethodDecl 0x55adbc5691e0 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55adbc568f28 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55adbc568fa0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55adbc569018 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55adbc569090 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55adbc5aac28 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55adbc5aac08 <col:116> 'int' 0
|-EnumDecl 0x55adbc5692a0 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x55adbc5693a0 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x55adbc5693f0 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc569380 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x55adbc569360 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x55adbc569570 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x55adbc569418 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x55adbc569490 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x55adbc569788 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x55adbc569630 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x55adbc5696b0 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x55adbc569af0 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x55adbc569848 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x55adbc5699a0 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x55adbc569c80 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x55adbc569bb0 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x55adbc569e00 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x55adbc569d38 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x55adbc56a010 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x55adbc569eb8 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x55adbc569f38 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x55adbc56a198 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x55adbc56a0d0 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x55adbc56a288 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x55adbc56a378 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x55adbc56a4e8 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x55adbc56a428 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x55adbc56a670 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x55adbc56a5a0 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x55adbc56a878 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x55adbc56a728 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x55adbc56a7a8 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x55adbc56a9a8 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x55adbc56aa98 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x55adbc56ab58 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x55adbc56ad58 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55adbc56ac08 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x55adbc56ac80 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55adbc5aacd8 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55adbc5aacc0 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x55adbc5aaca8 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55adbc5aac88 <col:58, col:65> 'String' (CXXTemporary 0x55adbc5aac88)
|           `-CXXTemporaryObjectExpr 0x55adbc5aac50 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x55adbc56af28 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55adbc56ae18 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55adbc56ae90 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55adbc5aad88 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55adbc5aad70 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55adbc5aad58 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55adbc5aad38 <col:71, col:78> 'String' (CXXTemporary 0x55adbc5aad38)
|           `-CXXTemporaryObjectExpr 0x55adbc5aad00 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55adbc56b0f8 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55adbc56afe8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55adbc56b060 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55adbc5aae38 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55adbc5aae20 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55adbc5aae08 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55adbc5aade8 <col:71, col:78> 'String' (CXXTemporary 0x55adbc5aade8)
|           `-CXXTemporaryObjectExpr 0x55adbc5aadb0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55adbc56b2c8 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55adbc56b1b8 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x55adbc56b230 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55adbc5aaee8 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55adbc5aaed0 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x55adbc5aaeb8 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55adbc5aae98 <col:70, col:77> 'String' (CXXTemporary 0x55adbc5aae98)
|           `-CXXTemporaryObjectExpr 0x55adbc5aae60 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x55adbc56b448 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x55adbc56b388 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x55adbc56b668 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x55adbc56b500 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x55adbc56b578 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x55adbc56b768 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x55adbc56b768
|-CXXMethodDecl 0x55adbc56b870 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55adbc56b930 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55adbc56b9f0 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x55adbc56bab0 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55adbc56bca8 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x55adbc56bb60 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x55adbc56bbd8 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x55adbc56c060 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x55adbc56bd68 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x55adbc56bde0 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x55adbc56be58 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x55adbc56bed0 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x55adbc56bf50 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x55adbc56c3c0 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x55adbc56c140 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x55adbc56c1c0 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x55adbc56c240 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x55adbc56c2c0 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x55adbc56c4a0 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x55adbc56c5e0 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x55adbc56c550 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x55adbc56c730 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55adbc56c698 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc56c938 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc56c7e8 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x55adbc56c860 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc56ca88 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x55adbc56c9f8 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc56cbd0 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x55adbc56cb40 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x55adbc56ce10 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x55adbc56cc90 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55adbc56cd38 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x55adbc56cf98 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x55adbc56ced0 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x55adbc56d040 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55adbc56d158 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x55adbc56d200 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x55adbc56d268 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x55adbc56d320 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x55adbc5aaf10 <col:16, line:150:9>
| |-CXXConstructorDecl 0x55adbc56d4f8 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x55adbc56d3e0 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x55adbc56d460 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x55adbc56d200 'idx' 'int'
| | | `-ImplicitCastExpr 0x55adbc5aaf60 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55adbc5aaf20 <col:19> 'int' lvalue ParmVar 0x55adbc56d3e0 'i' 'int'
| | |-CXXCtorInitializer Field 0x55adbc56d268 'port' 'int'
| | | `-ImplicitCastExpr 0x55adbc5aafe0 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55adbc5aafa0 <col:28> 'int' lvalue ParmVar 0x55adbc56d460 'p' 'int'
| | `-CompoundStmt 0x55adbc5ab030 <col:31, line:153:9>
| |-CXXMethodDecl 0x55adbc56d6d8 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55adbc56d5e8 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55adbc5ab230 <col:46, line:157:9>
| |   `-ReturnStmt 0x55adbc5ab220 <line:156:13, col:46>
| |     `-BinaryOperator 0x55adbc5ab200 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x55adbc5ab100 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55adbc5ab0d0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55adbc5ab050 <col:20> 'const int' lvalue ->idx 0x55adbc56d200
| |       | |   `-CXXThisExpr 0x55adbc5ab040 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55adbc5ab0e8 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55adbc5ab0a0 <col:27, col:29> 'const int' lvalue .idx 0x55adbc56d200
| |       |     `-DeclRefExpr 0x55adbc5ab080 <col:27> 'const Router::Port' lvalue ParmVar 0x55adbc56d5e8 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55adbc5ab1e0 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x55adbc5ab1b0 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55adbc5ab130 <col:36> 'const int' lvalue ->port 0x55adbc56d268
| |         |   `-CXXThisExpr 0x55adbc5ab120 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55adbc5ab1c8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55adbc5ab180 <col:44, col:46> 'const int' lvalue .port 0x55adbc56d268
| |             `-DeclRefExpr 0x55adbc5ab160 <col:44> 'const Router::Port' lvalue ParmVar 0x55adbc56d5e8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55adbc56d820 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55adbc56d790 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55adbc5ab438 <col:46, line:160:9>
| |   `-ReturnStmt 0x55adbc5ab428 <line:159:13, col:46>
| |     `-BinaryOperator 0x55adbc5ab408 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x55adbc5ab308 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x55adbc5ab2d8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55adbc5ab258 <col:20> 'const int' lvalue ->idx 0x55adbc56d200
| |       | |   `-CXXThisExpr 0x55adbc5ab248 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55adbc5ab2f0 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55adbc5ab2a8 <col:27, col:29> 'const int' lvalue .idx 0x55adbc56d200
| |       |     `-DeclRefExpr 0x55adbc5ab288 <col:27> 'const Router::Port' lvalue ParmVar 0x55adbc56d790 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55adbc5ab3e8 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x55adbc5ab3b8 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55adbc5ab338 <col:36> 'const int' lvalue ->port 0x55adbc56d268
| |         |   `-CXXThisExpr 0x55adbc5ab328 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55adbc5ab3d0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55adbc5ab388 <col:44, col:46> 'const int' lvalue .port 0x55adbc56d268
| |             `-DeclRefExpr 0x55adbc5ab368 <col:44> 'const Router::Port' lvalue ParmVar 0x55adbc56d790 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55adbc56d968 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55adbc56d8d8 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x55adbc5ab760 <col:45, line:163:9>
| |   `-ReturnStmt 0x55adbc5ab750 <line:162:13, col:65>
| |     `-BinaryOperator 0x55adbc5ab730 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x55adbc5ab510 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55adbc5ab4e0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55adbc5ab460 <col:20> 'const int' lvalue ->idx 0x55adbc56d200
| |       | |   `-CXXThisExpr 0x55adbc5ab450 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55adbc5ab4f8 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55adbc5ab4b0 <col:26, col:28> 'const int' lvalue .idx 0x55adbc56d200
| |       |     `-DeclRefExpr 0x55adbc5ab490 <col:26> 'const Router::Port' lvalue ParmVar 0x55adbc56d8d8 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55adbc5ab710 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x55adbc5ab6f0 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x55adbc5ab5f0 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55adbc5ab5c0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55adbc5ab540 <col:36> 'const int' lvalue ->idx 0x55adbc56d200
| |           | |   `-CXXThisExpr 0x55adbc5ab530 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55adbc5ab5d8 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55adbc5ab590 <col:43, col:45> 'const int' lvalue .idx 0x55adbc56d200
| |           |     `-DeclRefExpr 0x55adbc5ab570 <col:43> 'const Router::Port' lvalue ParmVar 0x55adbc56d8d8 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55adbc5ab6d0 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x55adbc5ab6a0 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55adbc5ab620 <col:52> 'const int' lvalue ->port 0x55adbc56d268
| |             |   `-CXXThisExpr 0x55adbc5ab610 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55adbc5ab6b8 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55adbc5ab670 <col:59, col:61> 'const int' lvalue .port 0x55adbc56d268
| |                 `-DeclRefExpr 0x55adbc5ab650 <col:59> 'const Router::Port' lvalue ParmVar 0x55adbc56d8d8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55adbc56dab0 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55adbc56da20 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55adbc5aba88 <col:46, line:166:9>
| |   `-ReturnStmt 0x55adbc5aba78 <line:165:13, col:66>
| |     `-BinaryOperator 0x55adbc5aba58 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x55adbc5ab838 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55adbc5ab808 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55adbc5ab788 <col:20> 'const int' lvalue ->idx 0x55adbc56d200
| |       | |   `-CXXThisExpr 0x55adbc5ab778 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55adbc5ab820 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55adbc5ab7d8 <col:26, col:28> 'const int' lvalue .idx 0x55adbc56d200
| |       |     `-DeclRefExpr 0x55adbc5ab7b8 <col:26> 'const Router::Port' lvalue ParmVar 0x55adbc56da20 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55adbc5aba38 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x55adbc5aba18 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x55adbc5ab918 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55adbc5ab8e8 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55adbc5ab868 <col:36> 'const int' lvalue ->idx 0x55adbc56d200
| |           | |   `-CXXThisExpr 0x55adbc5ab858 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55adbc5ab900 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55adbc5ab8b8 <col:43, col:45> 'const int' lvalue .idx 0x55adbc56d200
| |           |     `-DeclRefExpr 0x55adbc5ab898 <col:43> 'const Router::Port' lvalue ParmVar 0x55adbc56da20 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55adbc5ab9f8 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x55adbc5ab9c8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55adbc5ab948 <col:52> 'const int' lvalue ->port 0x55adbc56d268
| |             |   `-CXXThisExpr 0x55adbc5ab938 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55adbc5ab9e0 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55adbc5ab998 <col:60, col:62> 'const int' lvalue .port 0x55adbc56d268
| |                 `-DeclRefExpr 0x55adbc5ab978 <col:60> 'const Router::Port' lvalue ParmVar 0x55adbc56da20 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x55adbc5abaa0 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x55adbc5abaa0
| | `-ParmVarDecl 0x55adbc5abbb8 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x55adbc5abc58 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x55adbc5abc58
| | `-ParmVarDecl 0x55adbc5abd68 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x55adbc5abe00 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55adbc5ac0d0 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x55adbc5ac0d0
| | `-ParmVarDecl 0x55adbc5ac1d8 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x55adbc5ac248 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55adbc5ac358 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x55adbc5ac678 <col:12>
|     |-BinaryOperator 0x55adbc5ac518 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55adbc5ac4d0 <col:12> 'int' lvalue ->idx 0x55adbc56d200
|     | | `-CXXThisExpr 0x55adbc5ac4c0 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55adbc5ac500 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55adbc5ac490 <col:12> 'int' xvalue .idx 0x55adbc56d200
|     |     `-CXXStaticCastExpr 0x55adbc5ac460 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55adbc5ac430 <col:12> 'Router::Port' lvalue ParmVar 0x55adbc5ac358 '' 'Router::Port &&'
|     |-BinaryOperator 0x55adbc5ac620 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55adbc5ac5d8 <col:12> 'int' lvalue ->port 0x55adbc56d268
|     | | `-CXXThisExpr 0x55adbc5ac5c8 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55adbc5ac608 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55adbc5ac598 <col:12> 'int' xvalue .port 0x55adbc56d268
|     |     `-CXXStaticCastExpr 0x55adbc5ac568 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55adbc5ac538 <col:12> 'Router::Port' lvalue ParmVar 0x55adbc5ac358 '' 'Router::Port &&'
|     `-ReturnStmt 0x55adbc5ac668 <col:12>
|       `-UnaryOperator 0x55adbc5ac650 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55adbc5ac640 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x55adbc56db70 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55adbc56dc88 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x55adbc56de78 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x55adbc56df30 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x55adbc56de78 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55adbc5abdd8 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55adbc5abf10 <col:22, line:173:9>
| |-CXXConstructorDecl 0x55adbc56e268 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x55adbc56dff0 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x55adbc56e070 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x55adbc56e0f0 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x55adbc56e170 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x55adbc56de78 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55adbc5abf20 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55adbc5ac958 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x55adbc5ac748 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x55adbc5ac710 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x55adbc5ac6f8 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x55adbc5ac3e0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55adbc5ac248 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x55adbc5abff0 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x55adbc5abfd8 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x55adbc5abf88 <col:13> 'Router::Port [2]' lvalue ->p 0x55adbc56de78
| |   |   | |   `-CXXThisExpr 0x55adbc5abf78 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x55adbc5abfb8 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x55adbc5ac3c8 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x55adbc5ac090 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x55adbc5ac060 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x55adbc5ac020 <col:25> 'int' lvalue ParmVar 0x55adbc56e0f0 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x55adbc5ac078 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x55adbc5ac040 <col:33> 'int' lvalue ParmVar 0x55adbc56e170 'to_port' 'int'
| |   `-ExprWithCleanups 0x55adbc5ac940 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x55adbc5ac908 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55adbc5ac8f0 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x55adbc5ac8d0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55adbc5ac248 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x55adbc5ac7d8 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x55adbc5ac7c0 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x55adbc5ac770 <col:13> 'Router::Port [2]' lvalue ->p 0x55adbc56de78
| |       | |   `-CXXThisExpr 0x55adbc5ac760 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x55adbc5ac7a0 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x55adbc5ac8b8 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x55adbc5ac878 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x55adbc5ac848 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x55adbc5ac808 <col:25> 'int' lvalue ParmVar 0x55adbc56dff0 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x55adbc5ac860 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x55adbc5ac828 <col:35> 'int' lvalue ParmVar 0x55adbc56e070 'from_port' 'int'
| |-CXXMethodDecl 0x55adbc56e438 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x55adbc56e348 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x55adbc5acf18 <col:45, line:182:9>
| |   |-ParenExpr 0x55adbc5acdf8 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55adbc5acdc8 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55adbc5aca98 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55adbc5aca68 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55adbc5ac9d0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55adbc5ac9b8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55adbc5ac978 <col:34> 'int' lvalue ParmVar 0x55adbc56e348 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55adbc5ac998 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55adbc5aca48 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55adbc5aca30 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55adbc5ac9f0 <col:44> 'int' lvalue ParmVar 0x55adbc56e348 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55adbc5aca10 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55adbc5acaf8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55adbc5acad8 <col:59> 'int' 0
| |   |   `-CallExpr 0x55adbc5acd28 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55adbc5acd10 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55adbc5accf0 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55adbc5acd68 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55adbc5acb68 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55adbc5acd80 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55adbc5acb90 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55adbc5acd98 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55adbc5acbc8 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x55adbc5acdb0 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55adbc5accd8 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55adbc5accc0 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55adbc5acc68 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x55adbc5acf08 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x55adbc5acee8 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55adbc5aceb8 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55adbc5ace28 <col:20> 'Router::Port const[2]' lvalue ->p 0x55adbc56de78
| |       |   `-CXXThisExpr 0x55adbc5ace18 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55adbc5aced0 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55adbc5ace58 <col:22> 'int' lvalue ParmVar 0x55adbc56e348 'i' 'int'
| |-CXXMethodDecl 0x55adbc56e5e8 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x55adbc56e4f8 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x55adbc5ad490 <col:33, line:186:9>
| |   |-ParenExpr 0x55adbc5ad3b0 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55adbc5ad380 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55adbc5ad058 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55adbc5ad028 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55adbc5acf90 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55adbc5acf78 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55adbc5acf38 <col:34> 'int' lvalue ParmVar 0x55adbc56e4f8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55adbc5acf58 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55adbc5ad008 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55adbc5acff0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55adbc5acfb0 <col:44> 'int' lvalue ParmVar 0x55adbc56e4f8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55adbc5acfd0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55adbc5ad0b8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55adbc5ad098 <col:59> 'int' 0
| |   |   `-CallExpr 0x55adbc5ad2e0 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55adbc5ad2c8 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55adbc5ad2a8 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55adbc5ad320 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55adbc5ad128 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55adbc5ad338 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55adbc5ad150 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55adbc5ad350 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55adbc5ad188 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x55adbc5ad368 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55adbc5ad290 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55adbc5ad278 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55adbc5ad228 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x55adbc5ad480 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x55adbc5ad460 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55adbc5ad430 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55adbc5ad3e0 <col:20> 'Router::Port [2]' lvalue ->p 0x55adbc56de78
| |       |   `-CXXThisExpr 0x55adbc5ad3d0 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55adbc5ad448 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55adbc5ad410 <col:22> 'int' lvalue ParmVar 0x55adbc56e4f8 'i' 'int'
| |-CXXMethodDecl 0x55adbc56e788 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x55adbc56e6c8 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x55adbc5ad9e8 <col:52, line:190:9>
| |   `-ReturnStmt 0x55adbc5ad9d8 <line:189:13, col:51>
| |     `-BinaryOperator 0x55adbc5ad9b8 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x55adbc5ad710 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x55adbc5ad6f8 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x55adbc5ad6b0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55adbc56d6d8 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x55adbc5ad528 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x55adbc5ad510 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x55adbc5ad4c0 <col:20> 'Router::Port const[2]' lvalue ->p 0x55adbc56de78
| |       | | |   `-CXXThisExpr 0x55adbc5ad4b0 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x55adbc5ad4f0 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x55adbc5ad5d0 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x55adbc5ad5b8 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x55adbc5ad568 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x55adbc56de78
| |       |   |   `-DeclRefExpr 0x55adbc5ad548 <col:28> 'const Router::Connection' lvalue ParmVar 0x55adbc56e6c8 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x55adbc5ad598 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x55adbc5ad980 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x55adbc5ad968 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x55adbc5ad948 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55adbc56d6d8 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x55adbc5ad7c0 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x55adbc5ad7a8 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x55adbc5ad758 <col:38> 'Router::Port const[2]' lvalue ->p 0x55adbc56de78
| |         | |   `-CXXThisExpr 0x55adbc5ad748 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x55adbc5ad788 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x55adbc5ad868 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x55adbc5ad850 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x55adbc5ad800 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55adbc56de78
| |           |   `-DeclRefExpr 0x55adbc5ad7e0 <col:46> 'const Router::Connection' lvalue ParmVar 0x55adbc56e6c8 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x55adbc5ad830 <col:50> 'int' 1
| `-CXXMethodDecl 0x55adbc56e8d0 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x55adbc56e840 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x55adbc5ae0a0 <col:51, line:193:9>
|     `-ReturnStmt 0x55adbc5ae090 <line:192:13, col:69>
|       `-BinaryOperator 0x55adbc5ae070 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x55adbc5adba8 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x55adbc5adb90 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x55adbc5adb70 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55adbc56d968 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x55adbc5ada78 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x55adbc5ada60 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x55adbc5ada10 <col:20> 'Router::Port const[2]' lvalue ->p 0x55adbc56de78
|         | | |   `-CXXThisExpr 0x55adbc5ada00 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x55adbc5ada40 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x55adbc5adb20 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x55adbc5adb08 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x55adbc5adab8 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x55adbc56de78
|         |   |   `-DeclRefExpr 0x55adbc5ada98 <col:27> 'const Router::Connection' lvalue ParmVar 0x55adbc56e840 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x55adbc5adae8 <col:31> 'int' 0
|         `-ParenExpr 0x55adbc5ae050 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x55adbc5ae030 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x55adbc5ade18 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x55adbc5ade00 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x55adbc5adde0 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55adbc56d6d8 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x55adbc5adc58 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x55adbc5adc40 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x55adbc5adbf0 <col:38> 'Router::Port const[2]' lvalue ->p 0x55adbc56de78
|             | | |   `-CXXThisExpr 0x55adbc5adbe0 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x55adbc5adc20 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x55adbc5add00 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x55adbc5adce8 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x55adbc5adc98 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55adbc56de78
|             |   |   `-DeclRefExpr 0x55adbc5adc78 <col:46> 'const Router::Connection' lvalue ParmVar 0x55adbc56e840 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x55adbc5adcc8 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x55adbc5adff8 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x55adbc5adfe0 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55adbc5adfc0 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55adbc56d968 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x55adbc5adec8 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x55adbc5adeb0 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x55adbc5ade60 <col:56> 'Router::Port const[2]' lvalue ->p 0x55adbc56de78
|               | |   `-CXXThisExpr 0x55adbc5ade50 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x55adbc5ade90 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x55adbc5adf70 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x55adbc5adf58 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x55adbc5adf08 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x55adbc56de78
|                 |   `-DeclRefExpr 0x55adbc5adee8 <col:63> 'const Router::Connection' lvalue ParmVar 0x55adbc56e840 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x55adbc5adf38 <col:67> 'int' 1
|-AccessSpecDecl 0x55adbc56e990 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x55adbc56e9b8 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x55adbc56ea70 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x55adbc56eb30 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55adbc56eb80 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55adbc56ebd0 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55adbc56ec20 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x55adbc56ec70 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x55adbc56ecc0 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x55adbc56edd8 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55adbc56edb8 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x55adbc56eda0 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x55adbc56ed80 <col:25> 'int' 2
| |-EnumConstantDecl 0x55adbc56ee80 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55adbc56ee60 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x55adbc56ee48 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x55adbc56ee28 <col:48> 'int' 1
| |-EnumConstantDecl 0x55adbc56ef10 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55adbc56eef0 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x55adbc56eed0 <col:71> 'int' 0
| |-EnumConstantDecl 0x55adbc56efa0 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55adbc56ef80 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x55adbc56ef60 <col:30> 'int' 1
| `-EnumConstantDecl 0x55adbc56f030 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x55adbc56f010 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x55adbc56eff0 <col:50> 'int' 2
|-FieldDecl 0x55adbc56f090 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x55adbc56f0f0 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x55adbc56f158 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x55adbc56f1f8 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x55adbc56f1d8 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x55adbc56f1a8 <col:30> 'int' 1
|-FieldDecl 0x55adbc56f298 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x55adbc56f278 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x55adbc56f248 <col:33> 'int' 1
|-FieldDecl 0x55adbc56f338 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x55adbc56f318 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x55adbc56f2e8 <col:32> 'int' 1
|-FieldDecl 0x55adbc56f3a0 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x55adbc56f400 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x55adbc5786b0 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x55adbc5787b0 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55adbc5788b0 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55adbc580c20 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x55adbc580d30 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x55adbc580d80 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55adbc580e98 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x55adbc580f38 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x55adbc580f98 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x55adbc581030 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55adbc581030
| | `-ParmVarDecl 0x55adbc581148 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x55adbc5811e8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55adbc5811e8
| | `-ParmVarDecl 0x55adbc5812f8 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x55adbc581398 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55adbc581398
| | `-ParmVarDecl 0x55adbc5814a8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x55adbc581518 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55adbc581518
| | `-ParmVarDecl 0x55adbc581628 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x55adbc5816b0 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55adbc5816b0
|-FieldDecl 0x55adbc58df40 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x55adbc58dfa0 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55adbc58e0b0 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55adbc58e408 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x55adbc58e510 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55adbc598b30 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x55adbc598c40 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55adbc598d40 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55adbc598e50 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55adbc598f60 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55adbc599070 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55adbc599180 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x55adbc5991d0 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x55adbc5992d0 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x55adbc599320 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc5992b0 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x55adbc599290 <col:29> 'int' 256
|-FieldDecl 0x55adbc599380 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x55adbc5993e8 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x55adbc599450 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x55adbc599550 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55adbc5a20d0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x55adbc5a2130 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x55adbc5a2190 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x55adbc5a21e0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55adbc5a22f8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x55adbc5a2388 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x55adbc5a2490 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x55adbc5a24e0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55adbc5a2470 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x55adbc5a2450 <col:27> 'int' 4096
| |-FieldDecl 0x55adbc5a2508 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x55adbc5a2570 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x55adbc5a2768 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x55adbc5a27f8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x55adbc5a29b8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x55adbc5a2858 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x55adbc5a28d0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x55adbc5a2508 'name' 'String'
| | | `-CXXConstructExpr 0x55adbc5ae0f8 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x55adbc5ae0b8 <col:20> 'const String' lvalue ParmVar 0x55adbc5a2858 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x55adbc5a2570 'nsig' 'int'
| | | `-IntegerLiteral 0x55adbc5ae150 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x55adbc5a2768 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x55adbc5ae238 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x55adbc5a27f8 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x55adbc5ae1f8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55adbc5ae1b8 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55adbc5a28d0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x55adbc5ae4c8 <col:42, line:289:9>
| |   `-CallExpr 0x55adbc5ae478 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55adbc5ae460 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55adbc5ae440 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55adbbf4bc28 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55adbc5ae4b0 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x55adbc5ae388 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x55adbc5ae368 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x55adbc5ae350 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x55adbc5ae300 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55adbc5a2768
| |     |     |   `-CXXThisExpr 0x55adbc5ae2f0 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x55adbc5ae330 <col:25> 'int' 0
| |     |-IntegerLiteral 0x55adbc5ae3a0 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55adbc5ae420 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x55adbc5ae400 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x55adbc5ae3d0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55adbc5a2768 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x55adbc5ae3c0 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x55adbc5a2a98 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55adbc5a2a98
| | `-ParmVarDecl 0x55adbc5a2ba8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x55adbc5a2c48 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55adbc5a2c48
| | `-ParmVarDecl 0x55adbc5a2d58 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x55adbc5a2df8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55adbc5a2df8
| | `-ParmVarDecl 0x55adbc5a2f08 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x55adbc5a2f78 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55adbc5a2f78
| | `-ParmVarDecl 0x55adbc5a3088 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x55adbc5a3110 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55adbc5a3110
|-FieldDecl 0x55adbc5a3200 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x55adbc5a3260 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x55adbc5a32c0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x55adbc5a3320 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x55adbc5a3380 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x55adbc5a3490 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55adbc5a3590 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55adbc5a35f0 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x55adbc5a3738 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x55adbc5a3678 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x55adbc5a38e8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x55adbc5a37f8 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x55adbc5a3a30 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x55adbc5a39a0 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x55adbc5a3dd8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x55adbc5a3ae8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x55adbc5a3b60 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x55adbc5a3be0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x55adbc5a3c58 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x55adbc5a3cd0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55adbc5aaf00 <col:57> 'bool' false
|-CXXMethodDecl 0x55adbc5a3f48 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55adbc5a3eb0 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc5a4098 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55adbc5a4000 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc5a82d8 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55adbc5a8240 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc5a8430 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x55adbc5a8398 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x55adbc5a8750 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc5a84e8 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x55adbc5a8560 <col:50> col:54 'bool'
| |-ParmVarDecl 0x55adbc5a85e0 <col:56> col:59 'int'
| `-ParmVarDecl 0x55adbc5a8658 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc5a88b8 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55adbc5a8820 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc5a8980 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x55adbc5a8a40 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x55adbc5a8c40 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x55adbc5a8af0 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x55adbc5a8b68 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x55adbc5a8d10 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x55adbc5a8e58 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x55adbc5a8dc0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x55adbc5ae700 <col:42, line:326:5>
|   `-ReturnStmt 0x55adbc5ae6f0 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x55adbc5ae6d8 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x55adbc5ae6b8 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x55adbc5ae688 <col:16, col:45> '<bound member function type>' .back 0x55adbc47ace8
|           `-ArraySubscriptExpr 0x55adbc5ae608 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x55adbc5ae5d8 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55adbc5ae4f0 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x55adbc58e408
|             |   `-CXXThisExpr 0x55adbc5ae4e0 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x55adbc5ae5f0 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x55adbc5ae520 <col:38> 'bool' lvalue ParmVar 0x55adbc5a8dc0 'isout' 'bool'
|-CXXMethodDecl 0x55adbc5a9028 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x55adbc5a8f10 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x55adbc5a8f88 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x55adbc5a9180 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x55adbc5a90e8 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x55adbc5a9428 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x55adbc5a9238 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x55adbc5a92b0 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x55adbc5a9330 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x55adbc5a9600 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x55adbc5a94f0 <col:30> col:34 'bool'
| `-ParmVarDecl 0x55adbc5a9568 <col:36> col:40 'bool'
|-CXXMethodDecl 0x55adbc5a9788 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x55adbc5a96c8 <col:30> col:33 'int'
|-CXXMethodDecl 0x55adbc5a9a20 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x55adbc5a9848 <col:23> col:26 'int'
| |-ParmVarDecl 0x55adbc5a98c0 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x55adbc5a9938 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x55adbc5a9c38 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x55adbc5a9ae8 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x55adbc5a9b60 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x55adbc5a9e48 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x55adbc5a9d00 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x55adbc5a9d78 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x55adbc5a9fc8 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x55adbc5a9f08 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x55adbc5aa1c8 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x55adbc5aa080 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x55adbc5aa0f8 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x55adbc5aa3a0 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55adbc5aa288 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x55adbc5aa308 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x55adbc5aa680 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55adbc5aa460 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x55adbc5aa4d8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55adbc5aa558 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x55adbc5aa5d0 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x55adbc5aa760 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55adbc5aa7c0 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x55adbc5aaa40 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x55adbc5aa940 parent 0x55adbc257290 prev 0x55adbc265ef8 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x55adbc5aa820 <col:36> col:39 'int'
    `-ParmVarDecl 0x55adbc5aa8a0 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc257290 prev 0x55adbc257010 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbc257388 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55adbc257418 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55adbc257478 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x55adbc257568 <line:32:5, col:22> col:13 ~Element 'void () noexcept' virtual
|-VarDecl 0x55adbc257668 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55adbc257838 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55adbc2576e8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55adbc257760 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55adbc2579c8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55adbc257900 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55adbc257a70 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55adbc257ba8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55adbc257ae0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55adbc257d48 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55adbc257c88 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55adbc257ee8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55adbc257e28 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55adbc257f90 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55adbc258090 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55adbc258170 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc258070 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55adbc258050 <col:26> 'int' 1
| `-EnumConstantDecl 0x55adbc258120 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55adbc258188 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc258100 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55adbc2580e0 <col:44> 'int' 2
|-CXXMethodDecl 0x55adbc2582d0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55adbc2581b8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55adbc258238 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55adbc258428 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55adbc258398 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55adbc258668 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55adbc2584e8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55adbc258560 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55adbc258718 <col:20>
| `-OptimizeNoneAttr 0x55adbc258770 <col:30>
|-CXXMethodDecl 0x55adbc258878 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55adbc2587b0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55adbc258920 <col:20>
| `-OptimizeNoneAttr 0x55adbc258978 <col:30>
|-CXXMethodDecl 0x55adbc2589c8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55adbc258a90 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55adbc258ba8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55adbc258c70 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55adbc258cf8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55adbc258d80 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55adbc258e08 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55adbc258e98 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55adbc258f58 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55adbc258fe0 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x55adbc259068 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55adbc2590f0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55adbc259178 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55adbc259200 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55adbc259290 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55adbc259350 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55adbc2593e0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55adbc259530 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55adbc259498 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55adbc2596c0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55adbc2595f0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55adbc259960 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55adbc259778 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55adbc2597f8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55adbc259878 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55adbc259a18 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55adbc259b20 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55adbc259db0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc259b00 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55adbc259ae0 <col:33> 'int' 0
| |-EnumConstantDecl 0x55adbc259bb0 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55adbc259dc8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc259b90 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55adbc259b70 <col:32> 'int' 20
| |-EnumConstantDecl 0x55adbc259c40 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55adbc259de0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc259c20 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55adbc259c00 <col:38> 'int' 90
| |-EnumConstantDecl 0x55adbc259cd0 <line:83:9, col:35> col:9 referenced CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55adbc259df8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc259cb0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55adbc259c90 <col:35> 'int' 100
| `-EnumConstantDecl 0x55adbc259d60 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55adbc259e10 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc259d40 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55adbc259d20 <col:32> 'int' 2000
|-CXXMethodDecl 0x55adbc259e50 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55adbc25a290 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55adbc25a100 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55adbc25a178 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc25a360 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55adbc25a4e0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55adbc25a410 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc25a6e8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55adbc25a598 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55adbc25a610 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc25a7e8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55adbc25a888 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55adbc25a950 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55adbc25a9e0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55adbc25ac10 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc25a9c0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55adbc25a9a0 <col:36> 'int' EnumConstant 0x55adbc25a950 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55adbc25aa30 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55adbc25aa80 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55adbc25aad0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55adbc25ab20 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55adbc25ab70 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55adbc25abc0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55adbc25acf8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55adbc25ac38 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55adbc25adc0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55adbc25ae80 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55adbc25af40 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55adbc25b000 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55adbc25b118 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55adbc25b1e0 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x55adbc25b360 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55adbc25b290 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55adbc25b488 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55adbc25b688 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55adbc25b538 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55adbc25b5b8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55adbc267fe8 <col:54, line:127:5>
|   |-ParenExpr 0x55adbc267e98 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55adbc267e68 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc267b58 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55adbc267b30 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55adbc267b18 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55adbc267b00 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55adbc267ad0 <col:31> 'Router *' lvalue ->_router 0x55adbc2659b0
|   |   |         `-CXXThisExpr 0x55adbc267ac0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55adbc267bb8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc267b98 <col:48> 'int' 0
|   |   `-CallExpr 0x55adbc267dc8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55adbc267db0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc267d90 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc267e08 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc267c28 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55adbc267e20 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc267c48 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55adbc267e38 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc267c80 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55adbc267e50 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc267d78 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc267d60 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc267d18 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55adbc267f30 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55adbc267ec8 <col:9> 'Router *' lvalue ->_router 0x55adbc2659b0
|   | | `-CXXThisExpr 0x55adbc267eb8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55adbc267f18 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55adbc267ef8 <col:19> 'Router *' lvalue ParmVar 0x55adbc25b538 'r' 'Router *'
|   `-BinaryOperator 0x55adbc267fc8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55adbc267f60 <col:9> 'int' lvalue ->_eindex 0x55adbc265a18
|     | `-CXXThisExpr 0x55adbc267f50 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55adbc267fb0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc267f90 <col:19> 'int' lvalue ParmVar 0x55adbc25b5b8 'eindex' 'int'
|-CXXMethodDecl 0x55adbc25b810 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55adbc25b748 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55adbc25b8e0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55adbc25b9a8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55adbc25ba48 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55adbc25bc98 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55adbc25bb10 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55adbc25bb90 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55adbc25bd48 <col:20>
| `-OptimizeNoneAttr 0x55adbc25bda0 <col:30>
|-CXXMethodDecl 0x55adbc25bea8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55adbc25bde0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55adbc25bf50 <col:20>
| `-OptimizeNoneAttr 0x55adbc25bfa8 <col:30>
|-CXXMethodDecl 0x55adbc25c078 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55adbc25bfe8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55adbc25c120 <col:20>
| `-OptimizeNoneAttr 0x55adbc25c178 <col:30>
|-CXXMethodDecl 0x55adbc25c308 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55adbc25c1b0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55adbc25c230 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55adbc25c498 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55adbc25c3d0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55adbc25c5e8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55adbc25c558 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55adbc25c738 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55adbc25c6a8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55adbc25c888 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55adbc25c7f8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55adbc25cb48 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55adbc25c940 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55adbc25c9c0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55adbc25ca68 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55adbc25cc80 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55adbc25cd40 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55adbc25d010 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55adbc25cec0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55adbc25cf38 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc25d138 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55adbc25d310 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55adbc25d1f0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55adbc25d270 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55adbc25d4f8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55adbc25d3d8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55adbc25d458 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55adbc25d868 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55adbc25d5b8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55adbc25d630 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55adbc25d6b0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55adbc2675d0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55adbc2675b0 <col:106> 'int' 0
| `-ParmVarDecl 0x55adbc25d728 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55adbc267608 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55adbc2675e8 <col:126> 'int' 0
|-CXXMethodDecl 0x55adbc25dbe8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55adbc25d938 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55adbc25d9b0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55adbc25da30 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55adbc25daa8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55adbc267640 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55adbc267620 <col:114> 'int' 0
|-CXXMethodDecl 0x55adbc25df78 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55adbc25dcc0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55adbc25dd38 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55adbc25ddb8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55adbc267658 <col:96> 'int' 0
| `-ParmVarDecl 0x55adbc25de30 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55adbc267698 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55adbc267678 <col:116> 'int' 0
|-CXXMethodDecl 0x55adbc25e2f8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55adbc25e048 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55adbc25e0c0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc25e140 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55adbc2676d0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55adbc2676b0 <col:109> 'int' 0
| `-ParmVarDecl 0x55adbc25e1b8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55adbc267708 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55adbc2676e8 <col:129> 'int' 0
|-CXXMethodDecl 0x55adbc25e678 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55adbc25e3c8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55adbc25e440 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc25e4c0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55adbc25e538 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55adbc267740 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55adbc267720 <col:117> 'int' 0
|-CXXMethodDecl 0x55adbc25ea08 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55adbc25e750 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc25e7c8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc25e848 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55adbc267758 <col:99> 'int' 0
| `-ParmVarDecl 0x55adbc25e8c0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55adbc267798 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55adbc267778 <col:119> 'int' 0
|-CXXMethodDecl 0x55adbc25ee28 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55adbc25ead8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55adbc25eb58 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55adbc25ebd0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc25ec50 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55adbc2677d0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55adbc2677b0 <col:108> 'int' 0
| `-ParmVarDecl 0x55adbc25ecd0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55adbc267808 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55adbc2677e8 <col:141> 'int' 0
|-CXXMethodDecl 0x55adbc25f248 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55adbc25ef00 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55adbc25ef80 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55adbc25eff8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc25f078 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55adbc25f0f8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55adbc267820 <col:121> 'int' 0
|-CXXMethodDecl 0x55adbc25f678 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55adbc25f328 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55adbc25f3a8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55adbc25f420 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc25f4a0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55adbc267840 <col:98> 'int' 0
| `-ParmVarDecl 0x55adbc25f520 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55adbc267860 <col:123> 'int' 0
|-CXXMethodDecl 0x55adbc25f940 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55adbc25f750 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55adbc25f7d0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55adbc25f850 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55adbc267880 <col:80> 'int' 0
|-EnumDecl 0x55adbc25f9f8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55adbc25fb00 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55adbc25fd90 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc25fae0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55adbc25fac0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55adbc25fb90 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55adbc25fda8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc25fb70 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55adbc25fb50 <col:40> 'int' 2
| |-EnumConstantDecl 0x55adbc25fc20 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55adbc25fdc0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc25fc00 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55adbc25fbe0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55adbc25fcb0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55adbc25fdd8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc25fc90 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55adbc25fc70 <col:36> 'int' 7
| `-EnumConstantDecl 0x55adbc25fd40 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55adbc25fdf0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc25fd20 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55adbc25fd00 <col:34> 'int' 6
|-CXXMethodDecl 0x55adbc2600a8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55adbc25fe18 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55adbc25feb8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55adbc25ff38 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55adbc25ffb0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55adbc267938 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55adbc267920 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55adbc267908 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55adbc2678e8 <col:98, col:105> 'String' (CXXTemporary 0x55adbc2678e8)
|           `-CXXTemporaryObjectExpr 0x55adbc2678b0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55adbc260348 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55adbc260178 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55adbc2601f0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55adbc260268 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55adbc2679e8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55adbc2679d0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55adbc2679b8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55adbc267998 <col:94, col:101> 'String' (CXXTemporary 0x55adbc267998)
| |         `-CXXTemporaryObjectExpr 0x55adbc267960 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55adbc2681d0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55adbc268148 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55adbc268118 <col:9> '<bound member function type>' ->add_task_handlers 0x55adbc2600a8
|     | `-CXXThisExpr 0x55adbc268108 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55adbc268188 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55adbc268088 <col:27> 'Task *' lvalue ParmVar 0x55adbc260178 'task' 'Task *'
|     |-ImplicitCastExpr 0x55adbc2681a0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55adbc2680a8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55adbc2601f0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55adbc2681b8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55adbc2680c8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55adbc25fd40 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55adbc2680e8 <col:62> 'const String' lvalue ParmVar 0x55adbc260268 'prefix' 'const String &'
|-CXXMethodDecl 0x55adbc260558 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55adbc260410 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55adbc260488 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55adbc267a98 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55adbc267a80 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55adbc267a68 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55adbc267a48 <col:70, col:77> 'String' (CXXTemporary 0x55adbc267a48)
| |         `-CXXTemporaryObjectExpr 0x55adbc267a10 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55adbc2683a8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55adbc268320 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55adbc2682f0 <col:9> '<bound member function type>' ->add_task_handlers 0x55adbc2600a8
|     | `-CXXThisExpr 0x55adbc2682e0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55adbc268360 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55adbc268260 <col:27> 'Task *' lvalue ParmVar 0x55adbc260410 'task' 'Task *'
|     |-ImplicitCastExpr 0x55adbc268378 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55adbc268280 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55adbc268390 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55adbc2682a0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55adbc25fd40 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55adbc2682c0 <col:57> 'const String' lvalue ParmVar 0x55adbc260488 'prefix' 'const String &'
|-CXXMethodDecl 0x55adbc260838 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55adbc260620 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc2606a0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55adbc260718 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55adbc260ae8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55adbc260908 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc260988 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55adbc260a08 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55adbc260e28 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55adbc260bb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc260c90 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55adbc260d08 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55adbc2610d8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55adbc260ef8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc260f78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55adbc260ff8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55adbc261388 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55adbc2611a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc261228 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55adbc2612a8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55adbc261638 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55adbc261458 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc2614d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55adbc261550 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55adbc2618e8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55adbc261708 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc261788 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55adbc261808 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55adbc261b98 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55adbc2619b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc261a38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55adbc261ab8 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55adbc261e78 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55adbc261c68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc261ce8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55adbc261d90 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55adbc262158 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55adbc261f48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc261fc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55adbc262070 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55adbc2623c0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55adbc262228 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55adbc2622a8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55adbc262320 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55adbc262668 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55adbc262490 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55adbc262510 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55adbc262588 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55adbc262918 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55adbc262738 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc2627b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55adbc262838 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55adbc262bc8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55adbc2629e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc262a68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55adbc262ae0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55adbc262e78 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55adbc262c98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc262d18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55adbc262d90 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55adbc263148 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55adbc262f48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc262fc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55adbc263068 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55adbc263478 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55adbc263218 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55adbc263298 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55adbc263310 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55adbc263388 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55adbc267ab0 <col:93> 'bool' false
|-CXXMethodDecl 0x55adbc263660 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55adbc263548 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55adbc2635c8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55adbc263838 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55adbc263720 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55adbc2637a0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55adbc263b18 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55adbc2638f8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55adbc263970 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55adbc2639f0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55adbc263a68 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc263e08 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55adbc263be8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55adbc263c60 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55adbc263ce0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55adbc263d58 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc264040 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55adbc263ee0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55adbc263f60 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55adbc264228 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55adbc264108 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55adbc264188 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55adbc2642d8 prev 0x55adbc25ba48 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55adbc2643d0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55adbc264460 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55adbc2644d8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55adbc264598 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55adbc264660 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55adbc2647d8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55adbc264710 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55adbc264880 <col:24>
| | `-OptimizeNoneAttr 0x55adbc2648d8 <col:34>
| |-CXXMethodDecl 0x55adbc264920 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55adbc264bd8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55adbc2649d0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55adbc264a48 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55adbc264ac8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55adbc264ca0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55adbc264cd8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55adbc264d40 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55adbc264dc8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55adbc2650e8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55adbc264e80 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55adbc264ef8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55adbc264f70 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55adbc264ff0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55adbc265200 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55adbc1d3888 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55adbc1d3888
| | `-ParmVarDecl 0x55adbc1d3998 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55adbc1d3a38 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55adbc1d3a38
| | `-ParmVarDecl 0x55adbc1d3b48 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55adbc5b3b10 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55adbc265278 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55adbc265318 <col:38> "" ""
|-CXXMethodDecl 0x55adbc2653a8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55adbc265448 <col:44> "" ""
|-AccessSpecDecl 0x55adbc2654b8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55adbc2654e0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55adbc2655e0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55adbc265630 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc2655c0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55adbc2655a0 <col:27> 'int' 4
|-FieldDecl 0x55adbc2656e8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55adbc265898 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55adbc265950 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55adbc2659b0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55adbc265a18 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55adbc265b68 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55adbc265aa8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55adbc265d18 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55adbc265c28 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55adbc265ef8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55adbc265dd8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55adbc265e58 <col:25> col:28 'int'
|-CXXMethodDecl 0x55adbc2661a0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc265fc0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55adbc266040 <col:28> col:31 'int'
| `-ParmVarDecl 0x55adbc2660b8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55adbc266258 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55adbc266320 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55adbc266370 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55adbc2663c0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55adbc2665a0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55adbc266450 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55adbc2664c8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc266848 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55adbc266668 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55adbc2666e8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55adbc266760 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc266a68 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55adbc266918 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55adbc266998 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55adbc266da0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55adbc266b28 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55adbc266ba8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55adbc266c20 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55adbc266ca0 <col:57> col:60 'int'
|-CXXMethodDecl 0x55adbc266f88 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55adbc266e70 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55adbc266ef0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55adbc2670d8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55adbc267048 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55adbc267458 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55adbc267198 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55adbc267218 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55adbc267290 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55adbc267310 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55adbc267570 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashContainer_adapter<class IPRewriterEntry> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |   class IPRewriterEntry ** buckets
         8 |   uint32_t nbuckets
        12 |   uint32_t first_bucket
        16 |   size_t size
        24 |   struct libdivide_u32_t bucket_divider
        24 |     uint32_t magic
        28 |     uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
         0 |     class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |     class IPRewriterEntry ** buckets
         8 |     uint32_t nbuckets
        12 |     uint32_t first_bucket
        16 |     size_t size
        24 |     struct libdivide_u32_t bucket_divider
        24 |       uint32_t magic
        28 |       uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<56> >
         0 |   vector_memory<class sized_array_memory<56> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterInput>
         0 |   class vector_memory<class sized_array_memory<56> > vm_
         0 |     vector_memory<class sized_array_memory<56> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterBase
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |     class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |       class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |       class IPRewriterEntry ** buckets
       120 |       uint32_t nbuckets
       124 |       uint32_t first_bucket
       128 |       size_t size
       136 |       struct libdivide_u32_t bucket_divider
       136 |         uint32_t magic
       140 |         uint8_t more
       144 |   class Vector<class IPRewriterInput> _input_specs
       144 |     class vector_memory<class sized_array_memory<56> > vm_
       144 |       vector_memory<class sized_array_memory<56> >::type * l_
       152 |       vector_memory::size_type n_
       156 |       vector_memory::size_type capacity_
       160 |   class IPRewriterHeap * _heap
       168 |   uint32_t [2] _timeouts
       176 |   uint32_t _gc_interval_sec
       184 |   class Timer _gc_timer
       184 |     int _schedpos1
       192 |     class Timestamp _expiry_s
       192 |       union Timestamp::rep_t _t
       192 |         int64_t x
       200 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |       TimerCallback callback
       208 |     void * _thunk
       216 |     class Element * _owner
       224 |     class RouterThread * _thread
           | [sizeof=232, dsize=232, align=8,
           |  nvsize=232, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc301b68 <../dummy_inc/click/hashcontainer.hh:13:1, col:29> line:33:7 class HashContainer_adapter definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IPRewriterEntry'
|-CXXRecordDecl 0x55adbc334988 prev 0x55adbc301b68 <col:1, col:7> col:7 implicit class HashContainer_adapter
|-AccessSpecDecl 0x55adbc334a18 <col:31, col:37> col:31 public
|-TypedefDecl 0x55adbc334b10 <line:34:5, col:34> col:34 referenced key_type 'typename IPRewriterEntry::key_type':'IPFlowID'
| `-ElaboratedType 0x55adbc334ac0 'typename IPRewriterEntry::key_type' sugar
|   `-TypedefType 0x55adbc334aa0 'IPRewriterEntry::key_type' sugar
|     |-Typedef 0x55adbc3036b0 'key_type'
|     `-RecordType 0x55adbc2f7d80 'IPFlowID'
|       `-CXXRecord 0x55adbc2f7cf0 'IPFlowID'
|-TypedefDecl 0x55adbc334be0 <line:35:5, col:45> col:45 key_const_reference 'typename IPRewriterEntry::key_const_reference':'const IPFlowID &'
| `-ElaboratedType 0x55adbc334b90 'typename IPRewriterEntry::key_const_reference' sugar
|   `-TypedefType 0x55adbc3040f0 'IPRewriterEntry::key_const_reference' sugar
|     |-Typedef 0x55adbc303718 'key_const_reference'
|     `-LValueReferenceType 0x55adbc2fa210 'const IPFlowID &'
|       `-QualType 0x55adbc2f7d81 'const IPFlowID' const
|         `-RecordType 0x55adbc2f7d80 'IPFlowID'
|           `-CXXRecord 0x55adbc2f7cf0 'IPFlowID'
|-CXXMethodDecl 0x55adbc334dd0 <line:36:5, line:38:5> line:36:16 hashnext 'IPRewriterEntry *&(IPRewriterEntry *)' static
| `-ParmVarDecl 0x55adbc334cd8 <col:25, col:28> col:28 e 'IPRewriterEntry *'
|-CXXMethodDecl 0x55adbc334fd8 <line:39:5, line:41:5> line:39:32 hashkey 'HashContainer_adapter<IPRewriterEntry>::key_const_reference (const IPRewriterEntry *)' static
| `-ParmVarDecl 0x55adbc334ee8 <col:40, col:49> col:49 e 'const IPRewriterEntry *'
|-CXXMethodDecl 0x55adbc335238 <line:42:5, line:44:5> line:42:17 hashkeyeq 'bool (const HashContainer_adapter<IPRewriterEntry>::key_type &, const HashContainer_adapter<IPRewriterEntry>::key_type &)' static
| |-ParmVarDecl 0x55adbc3350e8 <col:27, col:43> col:43 a 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
| `-ParmVarDecl 0x55adbc335160 <col:46, col:62> col:62 b 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
|-CXXConstructorDecl 0x55adbc3392b8 <line:33:7> col:7 implicit constexpr HashContainer_adapter 'void (const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x55adbc3392b8
| `-ParmVarDecl 0x55adbc3393c8 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
|-CXXConstructorDecl 0x55adbc339468 <col:7> col:7 implicit constexpr HashContainer_adapter 'void (HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x55adbc339468
| `-ParmVarDecl 0x55adbc339578 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'
|-CXXDestructorDecl 0x55adbc339788 <col:7> col:7 implicit ~HashContainer_adapter 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55adbc3398c8 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x55adbc3398c8
| `-ParmVarDecl 0x55adbc3399d8 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
`-CXXMethodDecl 0x55adbc339a48 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x55adbc339a48
  `-ParmVarDecl 0x55adbc339b58 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_adapter = type { i8 }
  NonVirtualBaseLLVMType:%class.HashContainer_adapter = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc053cb0 prev 0x55adbbfca418 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc053da8 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x55adbc053e38 <col:19, col:25> col:19 public
|-TypedefDecl 0x55adbc053e70 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55adbbe3ffb0 'uninitialized_type'
|   `-CXXRecord 0x55adbbe3ff18 'uninitialized_type'
|-CXXConstructorDecl 0x55adbc053f30 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x55adbc05b7f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55adbc05b898 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55adbc05b858 <col:10> 'int' 0
| `-CompoundStmt 0x55adbc05b8e0 <col:13, line:22:5>
|-CXXConstructorDecl 0x55adbc054080 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x55adbc053ff0 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x55adbc05b7f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55adbc05b930 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x55adbc05b8f0 <col:10> 'unsigned int' lvalue ParmVar 0x55adbc053ff0 'x' 'unsigned int'
| `-CompoundStmt 0x55adbc05b978 <col:13, line:27:5>
|-CXXConstructorDecl 0x55adbc0541d8 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x55adbc054148 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x55adbc05b7f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55adbc05b9e0 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55adbc05b9c8 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x55adbc05b988 <col:10> 'int' lvalue ParmVar 0x55adbc054148 'x' 'int'
| `-CompoundStmt 0x55adbc05ba28 <col:13, line:31:5>
|-CXXConstructorDecl 0x55adbc054330 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x55adbc0542a0 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x55adbc05b7f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55adbc05ba90 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55adbc05ba78 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x55adbc05ba38 <col:10> 'unsigned long' lvalue ParmVar 0x55adbc0542a0 'x' 'unsigned long'
| `-CompoundStmt 0x55adbc05bad8 <col:13, line:35:5>
|-CXXConstructorDecl 0x55adbc054488 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x55adbc0543f8 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x55adbc05b7f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55adbc05bb40 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55adbc05bb28 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x55adbc05bae8 <col:10> 'long' lvalue ParmVar 0x55adbc0543f8 'x' 'long'
| `-CompoundStmt 0x55adbc05bb88 <col:13, line:39:5>
|-CXXConstructorDecl 0x55adbc054648 <line:42:5, line:44:5> line:42:12 used IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x55adbc054558 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x55adbc05b7f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55adbc05bc08 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55adbc05bbb8 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x55adbbf823b0
| |     `-DeclRefExpr 0x55adbc05bb98 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x55adbc054558 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x55adbc05bc50 <col:20, line:44:5>
|-CXXConstructorDecl 0x55adbc059920 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x55adbc054710 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x55adbc05bdb8 <col:51, line:56:5>
|   `-BinaryOperator 0x55adbc05bd98 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55adbc05bc70 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x55adbc05b7f0
|     | `-CXXThisExpr 0x55adbc05bc60 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x55adbc05bd80 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55adbc05bd68 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x55adbc05bd48 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x55adbc05bd18 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x55adbc05bd00 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x55adbc05bca0 <col:47> 'const unsigned char *' lvalue ParmVar 0x55adbc054710 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x55adbc059a70 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x55adbc0599e0 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x55adbc059c18 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55adbc059b58 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x55adbc05be28 <col:56, line:68:5>
|   `-CStyleCastExpr 0x55adbc05be00 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55adbc05bdd0 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55adbc059b58 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x55adbc059da8 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x55adbc059ce0 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x55adbc059e98 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x55adbc05cde8 <col:46, line:83:5>
|   `-ReturnStmt 0x55adbc05cdd8 <line:82:2, col:29>
|     `-ExprWithCleanups 0x55adbc05cdc0 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x55adbc05cd90 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55adbc05cc48 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x55adbc05cb30 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x55adbc05ca18 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x55adbc05be50 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x55adbc059f88 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x55adbc05ce98 <col:31, line:88:5>
|   `-ReturnStmt 0x55adbc05ce88 <line:87:2, col:10>
|     `-UnaryOperator 0x55adbc05ce70 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x55adbc05ce58 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55adbc05ce40 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x55adbc05ce10 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55adbc05b7f0
|             `-CXXThisExpr 0x55adbc05ce00 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55adbc05a048 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x55adbc05cf18 <col:34, line:93:5>
|   `-ReturnStmt 0x55adbc05cf08 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x55adbc05cef0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55adbc05cec0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55adbc05b7f0
|         `-CXXThisExpr 0x55adbc05ceb0 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x55adbc05a118 <line:99:5, line:101:5> line:99:12 used operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x55adbc05cf98 <col:38, line:101:5>
|   `-ReturnStmt 0x55adbc05cf88 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x55adbc05cf70 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55adbc05cf40 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55adbc05b7f0
|         `-CXXThisExpr 0x55adbc05cf30 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55adbc05a1e8 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x55adbc05d268 <col:38, line:108:5>
|   `-ReturnStmt 0x55adbc05d258 <line:107:2, col:58>
|     `-BinaryOperator 0x55adbc05d238 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x55adbc05d150 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x55adbc05d130 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55adbc05d118 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55adbc05cfc0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55adbc05b7f0
|       |   |   `-CXXThisExpr 0x55adbc05cfb0 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55adbc05d0f0 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55adbc05d0d8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55adbc05d058 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55adbbf8f898 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55adbc05d038 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x55adbc05d210 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55adbc05d1f8 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55adbc05d1d8 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x55adbbf8f898 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55adbc05d1b8 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x55adbc05a2a8 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x55adbc05d4d8 <col:39, line:112:5>
|   `-ReturnStmt 0x55adbc05d4c8 <line:111:2, col:56>
|     `-BinaryOperator 0x55adbc05d4a8 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x55adbc05d3c0 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x55adbc05d3a0 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55adbc05d388 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55adbc05d290 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55adbc05b7f0
|       |   |   `-CXXThisExpr 0x55adbc05d280 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55adbc05d360 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55adbc05d348 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55adbc05d328 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55adbbf8f898 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55adbc05d308 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x55adbc05d480 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55adbc05d468 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55adbc05d448 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x55adbbf8f898 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55adbc05d428 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x55adbc05a3d8 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x55adbc05a4e0 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x55adbc05a5f0 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x55adbc05a6e0 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55adbc05a7a0 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55adbc05a868 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x55adbc05aa68 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x55adbc05a918 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x55adbc05a990 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x55adbc05abe8 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55adbc05ab28 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x55adbc05ad30 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55adbc05aca0 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x55adbc05aed8 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55adbc05ade8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55adbc05b020 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55adbc05af90 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55adbc05b168 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55adbc05b0d8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55adbc05b230 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x55adbc05b2f0 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x55adbc05b468 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x55adbc05b3a0 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x55adbc05b530 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x55adbc05b618 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55adbc05b6c0 <col:51> "" ""
|-TypedefDecl 0x55adbc05b760 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x55adbbfca4b0 'IPAddress'
|   `-CXXRecord 0x55adbc053cb0 'IPAddress'
|-AccessSpecDecl 0x55adbc05b7b8 <line:150:3, col:10> col:3 private
|-FieldDecl 0x55adbc05b7f0 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55adbc05be98 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc05bfa8 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x55adbc05b7f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55adbc2fa748 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55adbc2fa700 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x55adbc05b7f0
| |     `-DeclRefExpr 0x55adbc2fa6e0 <col:7> 'const IPAddress' lvalue ParmVar 0x55adbc05bfa8 '' 'const IPAddress &'
| `-CompoundStmt 0x55adbc2fa790 <col:7>
|-CXXConstructorDecl 0x55adbc05c048 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc05c158 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x55adbc05b7f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55adbc05cd38 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55adbc05ccf0 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x55adbc05b7f0
| |     `-CXXStaticCastExpr 0x55adbc05ccc0 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc05cc90 <col:7> 'IPAddress' lvalue ParmVar 0x55adbc05c158 '' 'IPAddress &&'
| `-CompoundStmt 0x55adbc05cd80 <col:7>
|-CXXDestructorDecl 0x55adbc05ca48 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55adbc2fb038 <col:7> col:7 implicit used operator= 'IPAddress &(const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc2fb148 <col:7> col:7 used 'const IPAddress &'
| `-CompoundStmt 0x55adbc2fb4a0 <col:7>
|   |-BinaryOperator 0x55adbc2fb448 <col:7> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x55adbc2fb400 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x55adbc05b7f0
|   | | `-CXXThisExpr 0x55adbc2fb3f0 <col:7> 'IPAddress *' this
|   | `-ImplicitCastExpr 0x55adbc2fb430 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x55adbc2fb3c0 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x55adbc05b7f0
|   |     `-DeclRefExpr 0x55adbc2fb3a0 <col:7> 'const IPAddress' lvalue ParmVar 0x55adbc2fb148 '' 'const IPAddress &'
|   `-ReturnStmt 0x55adbc2fb490 <col:7>
|     `-UnaryOperator 0x55adbc2fb478 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55adbc2fb468 <col:7> 'IPAddress *' this
`-CXXMethodDecl 0x55adbc2fb1b8 <col:7> col:7 implicit operator= 'IPAddress &(IPAddress &&)' inline default trivial noexcept-unevaluated 0x55adbc2fb1b8
  `-ParmVarDecl 0x55adbc2fb2c8 <col:7> col:7 'IPAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc2f7cf0 <../dummy_inc/click/ipflowid.hh:9:1, line:143:1> line:9:7 referenced class IPFlowID definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc2f7e08 <col:1, col:7> col:7 implicit referenced class IPFlowID
|-AccessSpecDecl 0x55adbc2f7e98 <col:18, col:24> col:18 public
|-TypedefDecl 0x55adbc2f7ed0 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55adbbe3ffb0 'uninitialized_type'
|   `-CXXRecord 0x55adbbe3ff18 'uninitialized_type'
|-CXXConstructorDecl 0x55adbc2f7f90 <line:17:5, line:19:5> line:17:5 used IPFlowID 'void ()'
| |-CXXCtorInitializer Field 0x55adbc2f9e98 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55adbc2fa468 <line:18:4, col:11> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55adbc2f9ef8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55adbc2fa4d0 <col:14, col:21> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55adbc2f9f58 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55adbc2fa560 <col:31> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x55adbc2fa520 <col:31> 'int' 0
| |-CXXCtorInitializer Field 0x55adbc2f9fb8 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55adbc2fa5e0 <col:42> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x55adbc2fa5a0 <col:42> 'int' 0
| `-CompoundStmt 0x55adbc2fa640 <col:45, line:19:5>
|-CXXConstructorDecl 0x55adbc2f82f8 <line:26:5, line:28:5> line:26:5 used IPFlowID 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x55adbc2f8048 <col:14, col:24> col:24 used saddr 'IPAddress'
| |-ParmVarDecl 0x55adbc2f80c0 <col:31, col:40> col:40 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x55adbc2f8138 <col:47, col:57> col:57 used daddr 'IPAddress'
| |-ParmVarDecl 0x55adbc2f81b0 <col:64, col:73> col:73 used dport 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x55adbc2f9e98 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55adbc2fa7a0 <line:27:4, col:16> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x55adbc2fa690 <col:11> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x55adbc2fa650 <col:11> 'IPAddress' lvalue ParmVar 0x55adbc2f8048 'saddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x55adbc2f9ef8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55adbc2fa850 <col:19, col:31> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x55adbc2fa838 <col:26> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x55adbc2fa7f8 <col:26> 'IPAddress' lvalue ParmVar 0x55adbc2f8138 'daddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x55adbc2f9f58 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55adbc2fa8e8 <col:41> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x55adbc2fa8a8 <col:41> 'uint16_t':'unsigned short' lvalue ParmVar 0x55adbc2f80c0 'sport' 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x55adbc2f9fb8 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55adbc2fa968 <col:56> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x55adbc2fa928 <col:56> 'uint16_t':'unsigned short' lvalue ParmVar 0x55adbc2f81b0 'dport' 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55adbc2fa9c8 <col:63, line:28:5>
|-CXXConstructorDecl 0x55adbc2f8518 <line:37:5, col:60> col:14 IPFlowID 'void (const Packet *, bool)'
| |-ParmVarDecl 0x55adbc2f83d0 <col:23, col:37> col:37 p 'const Packet *'
| `-ParmVarDecl 0x55adbc2f8448 <col:40, col:55> col:45 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55adbc2fa430 <col:55> 'bool' false
|-CXXConstructorDecl 0x55adbc2f8728 <line:47:5, col:64> col:14 IPFlowID 'void (const click_ip *, bool)'
| |-ParmVarDecl 0x55adbc2f85e0 <col:23, col:39> col:39 iph 'const click_ip *'
| `-ParmVarDecl 0x55adbc2f8658 <col:44, col:59> col:49 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55adbc2fa440 <col:59> 'bool' false
|-CXXConstructorDecl 0x55adbc2f8880 <line:50:5, line:52:5> line:50:12 IPFlowID 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55adbc2f87f0 <col:21, col:47> col:47 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x55adbc2f9e98 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55adbc2fa9d8 <col:12> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55adbc2f9ef8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55adbc2faa28 <col:12> 'IPAddress' 'void ()'
| `-CompoundStmt 0x55adbc2faae0 <col:55, line:52:5>
|   `-CStyleCastExpr 0x55adbc2faab8 <line:51:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55adbc2faa88 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55adbc2f87f0 'unused' 'const uninitialized_type &'
|-TypedefDecl 0x55adbc2f8a38 <line:55:5, col:60> col:35 referenced unspecified_bool_type 'IPAddress (IPFlowID::*)() const'
| `-MemberPointerType 0x55adbc2f89b0 'IPAddress (IPFlowID::*)() const'
|   |-RecordType 0x55adbc2f7d80 'IPFlowID'
|   | `-CXXRecord 0x55adbc2f7cf0 'IPFlowID'
|   `-ParenType 0x55adbc2f8950 'IPAddress () const' sugar
|     `-FunctionProtoType 0x55adbc2203f0 'IPAddress () const' const cdecl
|       `-RecordType 0x55adbbfca4b0 'IPAddress'
|         `-CXXRecord 0x55adbc053cb0 'IPAddress'
|-CXXConversionDecl 0x55adbc2f8b78 <line:57:5, line:59:5> line:57:5 operator IPAddress (IPFlowID::*)() const 'IPFlowID::unspecified_bool_type () const'
| `-CompoundStmt 0x55adbc2fad90 <col:44, line:59:5>
|   `-ReturnStmt 0x55adbc2fad80 <line:58:2, col:47>
|     `-ConditionalOperator 0x55adbc2fad50 <col:9, col:47> 'IPAddress (IPFlowID::*)() const'
|       |-BinaryOperator 0x55adbc2fac78 <col:9, col:19> 'bool' '||'
|       | |-ImplicitCastExpr 0x55adbc2fac48 <col:9> 'bool' <IntegralToBoolean>
|       | | `-ImplicitCastExpr 0x55adbc2fabc8 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | |   `-CXXMemberCallExpr 0x55adbc2faba8 <col:9> 'uint32_t':'unsigned int'
|       | |     `-MemberExpr 0x55adbc2fab78 <col:9> '<bound member function type>' .operator unsigned int 0x55adbc05a118
|       | |       `-MemberExpr 0x55adbc2fab08 <col:9> 'const IPAddress' lvalue ->_saddr 0x55adbc2f9e98
|       | |         `-CXXThisExpr 0x55adbc2faaf8 <col:9> 'const IPFlowID *' implicit this
|       | `-ImplicitCastExpr 0x55adbc2fac60 <col:19> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55adbc2fac30 <col:19> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x55adbc2fac10 <col:19> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x55adbc2fabe0 <col:19> '<bound member function type>' .operator unsigned int 0x55adbc05a118
|       |         `-MemberExpr 0x55adbc2fab48 <col:19> 'const IPAddress' lvalue ->_daddr 0x55adbc2f9ef8
|       |           `-CXXThisExpr 0x55adbc2fab38 <col:19> 'const IPFlowID *' implicit this
|       |-UnaryOperator 0x55adbc2fad00 <col:28, col:39> 'IPAddress (IPFlowID::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55adbc2facd0 <col:29, col:39> 'IPAddress () const' CXXMethod 0x55adbc2f8ca0 'saddr' 'IPAddress () const'
|       `-ImplicitCastExpr 0x55adbc2fad38 <col:47> 'IPAddress (IPFlowID::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x55adbc2fad18 <col:47> 'int' 0
|-CXXMethodDecl 0x55adbc2f8ca0 <line:63:5, line:65:5> line:63:15 used saddr 'IPAddress () const'
| `-CompoundStmt 0x55adbc2fae28 <col:29, line:65:5>
|   `-ReturnStmt 0x55adbc2fae18 <line:64:2, col:9>
|     `-CXXConstructExpr 0x55adbc2fade8 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55adbc2fadb8 <col:9> 'const IPAddress' lvalue ->_saddr 0x55adbc2f9e98
|         `-CXXThisExpr 0x55adbc2fada8 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55adbc2f8db8 <line:67:5, line:69:5> line:67:14 used sport 'uint16_t () const'
| `-CompoundStmt 0x55adbc2faea8 <col:28, line:69:5>
|   `-ReturnStmt 0x55adbc2fae98 <line:68:2, col:9>
|     `-ImplicitCastExpr 0x55adbc2fae80 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x55adbc2fae50 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x55adbc2f9f58
|         `-CXXThisExpr 0x55adbc2fae40 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55adbc2f8e78 <line:71:5, line:73:5> line:71:15 used daddr 'IPAddress () const'
| `-CompoundStmt 0x55adbc2faf40 <col:29, line:73:5>
|   `-ReturnStmt 0x55adbc2faf30 <line:72:2, col:9>
|     `-CXXConstructExpr 0x55adbc2faf00 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55adbc2faed0 <col:9> 'const IPAddress' lvalue ->_daddr 0x55adbc2f9ef8
|         `-CXXThisExpr 0x55adbc2faec0 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55adbc2f8f38 <line:75:5, line:77:5> line:75:14 used dport 'uint16_t () const'
| `-CompoundStmt 0x55adbc2fafc0 <col:28, line:77:5>
|   `-ReturnStmt 0x55adbc2fafb0 <line:76:2, col:9>
|     `-ImplicitCastExpr 0x55adbc2faf98 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x55adbc2faf68 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x55adbc2f9fb8
|         `-CXXThisExpr 0x55adbc2faf58 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55adbc2f9078 <line:80:5, line:82:5> line:80:10 set_saddr 'void (IPAddress)'
| |-ParmVarDecl 0x55adbc2f8fe8 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x55adbc2fb568 <col:33, line:82:5>
|   `-CXXOperatorCallExpr 0x55adbc2fb530 <line:81:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x55adbc2fb518 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55adbc2fb350 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55adbc2fb038 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x55adbc2fafe8 <col:2> 'IPAddress' lvalue ->_saddr 0x55adbc2f9e98
|     | `-CXXThisExpr 0x55adbc2fafd8 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55adbc2fb338 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x55adbc2fb018 <col:11> 'IPAddress' lvalue ParmVar 0x55adbc2f8fe8 'a' 'IPAddress'
|-CXXMethodDecl 0x55adbc2f9228 <line:85:5, line:87:5> line:85:10 set_sport 'void (uint16_t)'
| |-ParmVarDecl 0x55adbc2f9130 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55adbc2fb618 <col:32, line:87:5>
|   `-BinaryOperator 0x55adbc2fb5f8 <line:86:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55adbc2fb590 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x55adbc2f9f58
|     | `-CXXThisExpr 0x55adbc2fb580 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55adbc2fb5e0 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc2fb5c0 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55adbc2f9130 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55adbc2f9370 <line:89:5, line:91:5> line:89:10 set_daddr 'void (IPAddress)'
| |-ParmVarDecl 0x55adbc2f92e0 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x55adbc2fb718 <col:33, line:91:5>
|   `-CXXOperatorCallExpr 0x55adbc2fb6e0 <line:90:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x55adbc2fb6c8 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55adbc2fb6a8 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55adbc2fb038 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x55adbc2fb640 <col:2> 'IPAddress' lvalue ->_daddr 0x55adbc2f9ef8
|     | `-CXXThisExpr 0x55adbc2fb630 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55adbc2fb690 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x55adbc2fb670 <col:11> 'IPAddress' lvalue ParmVar 0x55adbc2f92e0 'a' 'IPAddress'
|-CXXMethodDecl 0x55adbc2f94b8 <line:94:5, line:96:5> line:94:10 set_dport 'void (uint16_t)'
| |-ParmVarDecl 0x55adbc2f9428 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55adbc2fb7c8 <col:32, line:96:5>
|   `-BinaryOperator 0x55adbc2fb7a8 <line:95:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55adbc2fb740 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x55adbc2f9fb8
|     | `-CXXThisExpr 0x55adbc2fb730 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55adbc2fb790 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc2fb770 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55adbc2f9428 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55adbc2f9780 <line:103:5, line:108:5> line:103:10 assign 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x55adbc2f9570 <col:17, col:27> col:27 used saddr 'IPAddress'
| |-ParmVarDecl 0x55adbc2f95e8 <col:34, col:43> col:43 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x55adbc2f9660 <col:50, col:60> col:60 used daddr 'IPAddress'
| |-ParmVarDecl 0x55adbc2f96d8 <col:67, col:76> col:76 used dport 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55adbc2fbae0 <col:83, line:108:5>
|   |-CXXOperatorCallExpr 0x55adbc2fb890 <line:104:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x55adbc2fb878 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55adbc2fb858 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55adbc2fb038 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x55adbc2fb7f0 <col:2> 'IPAddress' lvalue ->_saddr 0x55adbc2f9e98
|   | | `-CXXThisExpr 0x55adbc2fb7e0 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55adbc2fb840 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x55adbc2fb820 <col:11> 'IPAddress' lvalue ParmVar 0x55adbc2f9570 'saddr' 'IPAddress'
|   |-CXXOperatorCallExpr 0x55adbc2fb978 <line:105:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x55adbc2fb960 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55adbc2fb940 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55adbc2fb038 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x55adbc2fb8d8 <col:2> 'IPAddress' lvalue ->_daddr 0x55adbc2f9ef8
|   | | `-CXXThisExpr 0x55adbc2fb8c8 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55adbc2fb928 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x55adbc2fb908 <col:11> 'IPAddress' lvalue ParmVar 0x55adbc2f9660 'daddr' 'IPAddress'
|   |-BinaryOperator 0x55adbc2fba28 <line:106:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55adbc2fb9c0 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x55adbc2f9f58
|   | | `-CXXThisExpr 0x55adbc2fb9b0 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55adbc2fba10 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-DeclRefExpr 0x55adbc2fb9f0 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55adbc2f95e8 'sport' 'uint16_t':'unsigned short'
|   `-BinaryOperator 0x55adbc2fbac0 <line:107:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55adbc2fba58 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x55adbc2f9fb8
|     | `-CXXThisExpr 0x55adbc2fba48 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55adbc2fbaa8 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc2fba88 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55adbc2f96d8 'dport' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55adbc2f9888 <line:113:5, line:115:5> line:113:14 used reverse 'IPFlowID () const'
| `-CompoundStmt 0x55adbc2fc618 <col:30, line:115:5>
|   `-ReturnStmt 0x55adbc2fc608 <line:114:2, col:48>
|     `-ExprWithCleanups 0x55adbc2fc5f0 <col:9, col:48> 'IPFlowID'
|       `-CXXConstructExpr 0x55adbc2fc5c0 <col:9, col:48> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55adbc2fc178 <col:9, col:48> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x55adbc2fbfe8 <col:9, col:48> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x55adbc2fbf58 <col:18> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55adbc2fbb30 <col:18> 'const IPAddress' lvalue ->_daddr 0x55adbc2f9ef8
|             |   `-CXXThisExpr 0x55adbc2fbb20 <col:18> 'const IPFlowID *' implicit this
|             |-ImplicitCastExpr 0x55adbc2fbf88 <col:26> 'uint16_t':'unsigned short' <LValueToRValue>
|             | `-MemberExpr 0x55adbc2fbb70 <col:26> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x55adbc2f9fb8
|             |   `-CXXThisExpr 0x55adbc2fbb60 <col:26> 'const IPFlowID *' implicit this
|             |-CXXConstructExpr 0x55adbc2fbfa0 <col:34> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55adbc2fbbb0 <col:34> 'const IPAddress' lvalue ->_saddr 0x55adbc2f9e98
|             |   `-CXXThisExpr 0x55adbc2fbba0 <col:34> 'const IPFlowID *' implicit this
|             `-ImplicitCastExpr 0x55adbc2fbfd0 <col:42> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-MemberExpr 0x55adbc2fbbf0 <col:42> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x55adbc2f9f58
|                 `-CXXThisExpr 0x55adbc2fbbe0 <col:42> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55adbc2f9948 <line:116:5, col:59> col:21 rev 'IPFlowID () const' inline
| `-DeprecatedAttr 0x55adbc2f99e8 <col:48> "" ""
|-CXXMethodDecl 0x55adbc2f9a78 <line:122:5, col:34> col:23 hashcode 'hashcode_t () const' inline
|-CXXMethodDecl 0x55adbc2f9b38 <line:127:5, col:22> col:12 used unparse 'String () const'
|-CXXConversionDecl 0x55adbc2f9c08 <line:129:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55adbc2f9cb0 <col:51> "" ""
|-CXXMethodDecl 0x55adbc2f9d50 <line:130:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x55adbc2f9df0 <col:44> "" ""
|-AccessSpecDecl 0x55adbc2f9e60 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x55adbc2f9e98 <line:135:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x55adbc2f9ef8 <line:136:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x55adbc2f9f58 <line:137:5, col:14> col:14 referenced _sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55adbc2f9fb8 <line:138:5, col:14> col:14 referenced _dport 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55adbc2fa0f0 <line:140:5, col:26> col:9 unparse 'int (char *) const'
| `-ParmVarDecl 0x55adbc2fa020 <col:17, col:23> col:23 s 'char *'
|-FriendDecl 0x55adbc2fa3d8 <line:141:5, col:76> col:25
| `-FunctionDecl 0x55adbc2fa318 parent 0x55adbbce2278 <col:5, col:76> col:25 operator<< 'StringAccum &(StringAccum &, const IPFlowID &)'
|   |-ParmVarDecl 0x55adbc2fa1a8 <col:36, col:49> col:49 sa 'StringAccum &'
|   `-ParmVarDecl 0x55adbc2fa248 <col:53, col:69> col:69 flow_id 'const IPFlowID &'
|-CXXConstructorDecl 0x55adbc2fbc20 <line:9:7> col:7 implicit constexpr IPFlowID 'void (const IPFlowID &)' inline default trivial noexcept-unevaluated 0x55adbc2fbc20
| `-ParmVarDecl 0x55adbc2fbd38 <col:7> col:7 'const IPFlowID &'
|-CXXConstructorDecl 0x55adbc2fbdd8 <col:7> col:7 implicit used constexpr IPFlowID 'void (IPFlowID &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc2fbee8 <col:7> col:7 used 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55adbc2f9e98 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55adbc2fc268 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x55adbc2fc220 <col:7> 'IPAddress' xvalue ._saddr 0x55adbc2f9e98
| |     `-CXXStaticCastExpr 0x55adbc2fc1f0 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc2fc1c0 <col:7> 'IPFlowID' lvalue ParmVar 0x55adbc2fbee8 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55adbc2f9ef8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55adbc2fc368 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x55adbc2fc320 <col:7> 'IPAddress' xvalue ._daddr 0x55adbc2f9ef8
| |     `-CXXStaticCastExpr 0x55adbc2fc2f0 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc2fc2c0 <col:7> 'IPFlowID' lvalue ParmVar 0x55adbc2fbee8 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55adbc2f9f58 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55adbc2fc468 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x55adbc2fc420 <col:7> 'uint16_t':'unsigned short' xvalue ._sport 0x55adbc2f9f58
| |     `-CXXStaticCastExpr 0x55adbc2fc3f0 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc2fc3c0 <col:7> 'IPFlowID' lvalue ParmVar 0x55adbc2fbee8 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55adbc2f9fb8 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55adbc2fc550 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x55adbc2fc508 <col:7> 'uint16_t':'unsigned short' xvalue ._dport 0x55adbc2f9fb8
| |     `-CXXStaticCastExpr 0x55adbc2fc4d8 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc2fc4a8 <col:7> 'IPFlowID' lvalue ParmVar 0x55adbc2fbee8 '' 'IPFlowID &&'
| `-CompoundStmt 0x55adbc2fc5b0 <col:7>
|-CXXDestructorDecl 0x55adbc2fc038 <col:7> col:7 implicit referenced ~IPFlowID 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55adbc304a30 <col:7> col:7 implicit used operator= 'IPFlowID &(const IPFlowID &) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc304b38 <col:7> col:7 used 'const IPFlowID &'
| `-CompoundStmt 0x55adbc305698 <col:7>
|   |-CXXMemberCallExpr 0x55adbc305328 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55adbc3052e0 <col:7> '<bound member function type>' .operator= 0x55adbc2fb038
|   | | `-MemberExpr 0x55adbc3051f0 <col:7> 'IPAddress' lvalue ->_saddr 0x55adbc2f9e98
|   | |   `-CXXThisExpr 0x55adbc3051e0 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x55adbc3052b0 <col:7> 'const IPAddress' lvalue ._saddr 0x55adbc2f9e98
|   |   `-DeclRefExpr 0x55adbc305290 <col:7> 'const IPFlowID' lvalue ParmVar 0x55adbc304b38 '' 'const IPFlowID &'
|   |-CXXMemberCallExpr 0x55adbc3054a8 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55adbc305460 <col:7> '<bound member function type>' .operator= 0x55adbc2fb038
|   | | `-MemberExpr 0x55adbc305370 <col:7> 'IPAddress' lvalue ->_daddr 0x55adbc2f9ef8
|   | |   `-CXXThisExpr 0x55adbc305360 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x55adbc305430 <col:7> 'const IPAddress' lvalue ._daddr 0x55adbc2f9ef8
|   |   `-DeclRefExpr 0x55adbc305410 <col:7> 'const IPFlowID' lvalue ParmVar 0x55adbc304b38 '' 'const IPFlowID &'
|   |-BinaryOperator 0x55adbc305578 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55adbc305530 <col:7> 'uint16_t':'unsigned short' lvalue ->_sport 0x55adbc2f9f58
|   | | `-CXXThisExpr 0x55adbc305520 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x55adbc305560 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x55adbc3054f0 <col:7> 'const uint16_t':'const unsigned short' lvalue ._sport 0x55adbc2f9f58
|   |     `-DeclRefExpr 0x55adbc3054d0 <col:7> 'const IPFlowID' lvalue ParmVar 0x55adbc304b38 '' 'const IPFlowID &'
|   |-BinaryOperator 0x55adbc305640 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55adbc3055f8 <col:7> 'uint16_t':'unsigned short' lvalue ->_dport 0x55adbc2f9fb8
|   | | `-CXXThisExpr 0x55adbc3055e8 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x55adbc305628 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x55adbc3055b8 <col:7> 'const uint16_t':'const unsigned short' lvalue ._dport 0x55adbc2f9fb8
|   |     `-DeclRefExpr 0x55adbc305598 <col:7> 'const IPFlowID' lvalue ParmVar 0x55adbc304b38 '' 'const IPFlowID &'
|   `-ReturnStmt 0x55adbc305688 <col:7>
|     `-UnaryOperator 0x55adbc305670 <col:7> 'IPFlowID' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55adbc305660 <col:7> 'IPFlowID *' this
`-CXXMethodDecl 0x55adbc304ba8 <col:7> col:7 implicit operator= 'IPFlowID &(IPFlowID &&)' inline default trivial noexcept-unevaluated 0x55adbc304ba8
  `-ParmVarDecl 0x55adbc304cb8 <col:7> col:7 'IPFlowID &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  NonVirtualBaseLLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc3034f0 prev 0x55adbc2ffbf0 <../elements/ip/iprwmapping.hh:16:1, line:65:1> line:16:7 referenced class IPRewriterEntry definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc3035e8 <col:1, col:7> col:7 implicit referenced class IPRewriterEntry
|-AccessSpecDecl 0x55adbc303678 <col:25, col:31> col:25 public
|-TypedefDecl 0x55adbc3036b0 <line:18:5, col:22> col:22 referenced key_type 'IPFlowID'
| `-RecordType 0x55adbc2f7d80 'IPFlowID'
|   `-CXXRecord 0x55adbc2f7cf0 'IPFlowID'
|-TypedefDecl 0x55adbc303718 <line:19:5, col:29> col:29 referenced key_const_reference 'const IPFlowID &'
| `-LValueReferenceType 0x55adbc2fa210 'const IPFlowID &'
|   `-QualType 0x55adbc2f7d81 'const IPFlowID' const
|     `-RecordType 0x55adbc2f7d80 'IPFlowID'
|       `-CXXRecord 0x55adbc2f7cf0 'IPFlowID'
|-CXXConstructorDecl 0x55adbc3037d0 <line:21:5, line:22:5> line:21:5 IPRewriterEntry 'void ()'
| |-CXXCtorInitializer Field 0x55adbc304230 '_flowid' 'IPFlowID'
| | `-CXXConstructExpr 0x55adbc304538 <col:5> 'IPFlowID' 'void ()'
| `-CompoundStmt 0x55adbc304590 <col:23, line:22:5>
|-CXXMethodDecl 0x55adbc303a98 <line:24:5, line:30:5> line:24:10 initialize 'void (const IPFlowID &, uint32_t, bool)'
| |-ParmVarDecl 0x55adbc303888 <col:21, col:37> col:37 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55adbc303900 <col:45, col:54> col:54 used output 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55adbc303978 <col:62, col:67> col:67 used direction 'bool'
| `-CompoundStmt 0x55adbc305958 <col:78, line:30:5>
|   |-ParenExpr 0x55adbc3049b0 <line:25:2, col:164> 'void'
|   | `-ConditionalOperator 0x55adbc304980 <col:3, col:163> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc304640 <col:3, col:41> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc304610 <col:23, col:33> 'bool' '<='
|   |   |   |-ImplicitCastExpr 0x55adbc3045e0 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x55adbc3045a0 <col:23> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc303900 'output' 'uint32_t':'unsigned int'
|   |   |   `-ImplicitCastExpr 0x55adbc3045f8 <col:33> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x55adbc3045c0 <col:33> 'int' 16777215
|   |   |-CXXFunctionalCastExpr 0x55adbc3046a0 <col:45, col:52> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc304680 <col:51> 'int' 0
|   |   `-CallExpr 0x55adbc3048e0 <col:56, col:163> 'void'
|   |     |-ImplicitCastExpr 0x55adbc3048c8 <col:56> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc3048a8 <col:56> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc304920 <col:71> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc304710 <col:71> 'const char [19]' lvalue "output <= 0xFFFFFF"
|   |     |-ImplicitCastExpr 0x55adbc304938 <col:93> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc304740 <col:93> 'const char [30]' lvalue "../elements/ip/iprwmapping.hh"
|   |     |-ImplicitCastExpr 0x55adbc304950 <col:126> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc304778 <col:126> 'int' 25
|   |     `-ImplicitCastExpr 0x55adbc304968 <col:130, col:144> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc304890 <col:130, col:144> 'const char [67]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc304878 <col:144> 'const char [67]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc304818 <col:144> 'const char [67]' lvalue "void IPRewriterEntry::initialize(const IPFlowID &, uint32_t, bool)"
|   |-CXXOperatorCallExpr 0x55adbc305740 <line:26:2, col:12> 'IPFlowID' lvalue
|   | |-ImplicitCastExpr 0x55adbc305728 <col:10> 'IPFlowID &(*)(const IPFlowID &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55adbc305178 <col:10> 'IPFlowID &(const IPFlowID &) noexcept' lvalue CXXMethod 0x55adbc304a30 'operator=' 'IPFlowID &(const IPFlowID &) noexcept'
|   | |-MemberExpr 0x55adbc3049e0 <col:2> 'IPFlowID' lvalue ->_flowid 0x55adbc304230
|   | | `-CXXThisExpr 0x55adbc3049d0 <col:2> 'IPRewriterEntry *' implicit this
|   | `-DeclRefExpr 0x55adbc304a10 <col:12> 'const IPFlowID' lvalue ParmVar 0x55adbc303888 'flowid' 'const IPFlowID &'
|   |-BinaryOperator 0x55adbc3057f0 <line:27:2, col:12> 'uint32_t':'unsigned int' lvalue bitfield '='
|   | |-MemberExpr 0x55adbc305788 <col:2> 'uint32_t':'unsigned int' lvalue bitfield ->_output 0x55adbc3042d0
|   | | `-CXXThisExpr 0x55adbc305778 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x55adbc3057d8 <col:12> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55adbc3057b8 <col:12> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc303900 'output' 'uint32_t':'unsigned int'
|   |-BinaryOperator 0x55adbc3058a0 <line:28:2, col:15> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55adbc305820 <col:2> 'uint8_t':'unsigned char' lvalue ->_direction 0x55adbc304330
|   | | `-CXXThisExpr 0x55adbc305810 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x55adbc305888 <col:15> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x55adbc305870 <col:15> 'bool' <LValueToRValue>
|   |     `-DeclRefExpr 0x55adbc305850 <col:15> 'bool' lvalue ParmVar 0x55adbc303978 'direction' 'bool'
|   `-BinaryOperator 0x55adbc305938 <line:29:2, col:14> 'IPRewriterEntry *' lvalue '='
|     |-MemberExpr 0x55adbc3058d0 <col:2> 'IPRewriterEntry *' lvalue ->_hashnext 0x55adbc304390
|     | `-CXXThisExpr 0x55adbc3058c0 <col:2> 'IPRewriterEntry *' implicit this
|     `-ImplicitCastExpr 0x55adbc305920 <col:14> 'IPRewriterEntry *' <NullToPointer>
|       `-IntegerLiteral 0x55adbc305900 <col:14> 'int' 0
|-CXXMethodDecl 0x55adbc303bc8 <line:32:5, line:34:5> line:32:21 flowid 'const IPFlowID &() const'
| `-CompoundStmt 0x55adbc3059e0 <col:36, line:34:5>
|   `-ReturnStmt 0x55adbc3059d0 <line:33:2, col:9>
|     `-MemberExpr 0x55adbc3059a0 <col:9> 'const IPFlowID' lvalue ->_flowid 0x55adbc304230
|       `-CXXThisExpr 0x55adbc305990 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55adbc303c88 <line:35:5, col:40> col:21 rewritten_flowid 'IPFlowID () const' inline
|-CXXMethodDecl 0x55adbc303d48 <line:37:5, line:39:5> line:37:10 direction 'bool () const'
| `-CompoundStmt 0x55adbc305a78 <col:28, line:39:5>
|   `-ReturnStmt 0x55adbc305a68 <line:38:2, col:9>
|     `-ImplicitCastExpr 0x55adbc305a50 <col:9> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55adbc305a38 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55adbc305a08 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x55adbc304330
|           `-CXXThisExpr 0x55adbc3059f8 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55adbc303e10 <line:41:5, line:43:5> line:41:9 output 'int () const'
| `-CompoundStmt 0x55adbc305b10 <col:24, line:43:5>
|   `-ReturnStmt 0x55adbc305b00 <line:42:2, col:9>
|     `-ImplicitCastExpr 0x55adbc305ae8 <col:9> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55adbc305ad0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x55adbc305aa0 <col:9> 'const uint32_t':'const unsigned int' lvalue bitfield ->_output 0x55adbc3042d0
|           `-CXXThisExpr 0x55adbc305a90 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55adbc303f28 <line:45:5, line:47:5> line:45:21 flow 'IPRewriterFlow *()'
| `-CompoundStmt 0x55adbc305c18 <col:28, line:47:5>
|   `-ReturnStmt 0x55adbc305c08 <line:46:2, col:61>
|     `-CXXReinterpretCastExpr 0x55adbc305bd8 <col:9, col:61> 'IPRewriterFlow *' reinterpret_cast<class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x55adbc305ba8 <col:44, col:51> 'IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x55adbc305b28 <col:44> 'IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x55adbc305b90 <col:51> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55adbc305b78 <col:51> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x55adbc305b48 <col:51> 'uint8_t':'unsigned char' lvalue ->_direction 0x55adbc304330
|               `-CXXThisExpr 0x55adbc305b38 <col:51> 'IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55adbc304048 <line:48:5, line:50:5> line:48:27 flow 'const IPRewriterFlow *() const'
| `-CompoundStmt 0x55adbc305d20 <col:40, line:50:5>
|   `-ReturnStmt 0x55adbc305d10 <line:49:2, col:67>
|     `-CXXReinterpretCastExpr 0x55adbc305ce0 <col:9, col:67> 'const IPRewriterFlow *' reinterpret_cast<const class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x55adbc305cb0 <col:50, col:57> 'const IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x55adbc305c30 <col:50> 'const IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x55adbc305c98 <col:57> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55adbc305c80 <col:57> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x55adbc305c50 <col:57> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x55adbc304330
|               `-CXXThisExpr 0x55adbc305c40 <col:57> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55adbc304158 <line:52:5, line:54:5> line:52:25 used hashkey 'IPRewriterEntry::key_const_reference () const'
| `-CompoundStmt 0x55adbc305d88 <col:41, line:54:5>
|   `-ReturnStmt 0x55adbc305d78 <line:53:2, col:9>
|     `-MemberExpr 0x55adbc305d48 <col:9> 'const IPFlowID' lvalue ->_flowid 0x55adbc304230
|       `-CXXThisExpr 0x55adbc305d38 <col:9> 'const IPRewriterEntry *' implicit this
|-AccessSpecDecl 0x55adbc3041f8 <line:56:3, col:10> col:3 private
|-FieldDecl 0x55adbc304230 <line:58:5, col:14> col:14 referenced _flowid 'IPFlowID'
|-FieldDecl 0x55adbc3042d0 <line:59:5, col:24> col:14 referenced _output 'uint32_t':'unsigned int'
| `-ConstantExpr 0x55adbc3042b0 <col:24> 'int' Int: 24
|   `-IntegerLiteral 0x55adbc304280 <col:24> 'int' 24
|-FieldDecl 0x55adbc304330 <line:60:5, col:13> col:13 referenced _direction 'uint8_t':'unsigned char'
|-FieldDecl 0x55adbc304390 <line:61:5, col:22> col:22 referenced _hashnext 'IPRewriterEntry *'
|-FriendDecl 0x55adbc3044e0 <line:63:5, col:55> col:12 'class HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|-CXXConstructorDecl 0x55adbc35dc48 <line:16:7> col:7 implicit constexpr IPRewriterEntry 'void (const IPRewriterEntry &)' inline default trivial noexcept-unevaluated 0x55adbc35dc48
| `-ParmVarDecl 0x55adbc35dd58 <col:7> col:7 'const IPRewriterEntry &'
|-CXXConstructorDecl 0x55adbc35ddf8 <col:7> col:7 implicit constexpr IPRewriterEntry 'void (IPRewriterEntry &&)' inline default trivial noexcept-unevaluated 0x55adbc35ddf8
| `-ParmVarDecl 0x55adbc35df08 <col:7> col:7 'IPRewriterEntry &&'
`-CXXDestructorDecl 0x55adbc35e0f8 <col:7> col:7 implicit ~IPRewriterEntry 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  NonVirtualBaseLLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:24 IsSigned:0 StorageSize:24 StorageOffset:12>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc28d548 <../dummy_inc/click/libdivide.h:95:1, line:98:1> line:95:8 referenced struct libdivide_u32_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc28d668 <col:1, col:8> col:8 implicit struct libdivide_u32_t
|-FieldDecl 0x55adbc28d708 <line:96:5, col:14> col:14 referenced magic 'uint32_t':'unsigned int'
|-FieldDecl 0x55adbc28d768 <line:97:5, col:13> col:13 referenced more 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55adbc290850 <line:95:8> col:8 implicit used libdivide_u32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55adbc290c88 <col:8>
|-CXXConstructorDecl 0x55adbc290958 <col:8> col:8 implicit constexpr libdivide_u32_t 'void (const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55adbc290958
| `-ParmVarDecl 0x55adbc290a68 <col:8> col:8 'const libdivide_u32_t &'
|-CXXConstructorDecl 0x55adbc290b08 <col:8> col:8 implicit used constexpr libdivide_u32_t 'void (libdivide_u32_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc290c18 <col:8> col:8 used 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55adbc28d708 'magic' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55adbc292b30 <col:8> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55adbc292b00 <col:8> 'uint32_t':'unsigned int' xvalue .magic 0x55adbc28d708
| |     `-CXXStaticCastExpr 0x55adbc292ad0 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc292aa0 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55adbc290c18 '' 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55adbc28d768 'more' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x55adbc292c00 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x55adbc292bd0 <col:8> 'uint8_t':'unsigned char' xvalue .more 0x55adbc28d768
| |     `-CXXStaticCastExpr 0x55adbc292ba0 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc292b70 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55adbc290c18 '' 'libdivide_u32_t &&'
| `-CompoundStmt 0x55adbc292c50 <col:8>
|-CXXDestructorDecl 0x55adbc292fc8 <col:8> col:8 implicit referenced ~libdivide_u32_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55adbc339bf8 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55adbc339bf8
| `-ParmVarDecl 0x55adbc339d08 <col:8> col:8 'const libdivide_u32_t &'
`-CXXMethodDecl 0x55adbc339d78 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(libdivide_u32_t &&)' inline default trivial noexcept-unevaluated 0x55adbc339d78
  `-ParmVarDecl 0x55adbc339e88 <col:8> col:8 'libdivide_u32_t &&'

Layout: <CGRecordLayout
  LLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  NonVirtualBaseLLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc3388d0 <../dummy_inc/click/hashcontainer.hh:19:1, line:29:1> line:20:7 class HashContainer_rep definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_mutable_fields
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55adbc338b68 prev 0x55adbc3388d0 <col:1, col:7> col:7 implicit class HashContainer_rep
|-FieldDecl 0x55adbc338cd0 <line:21:5, col:9> col:9 buckets 'IPRewriterEntry **'
|-FieldDecl 0x55adbc338d20 <line:22:5, col:14> col:14 nbuckets 'uint32_t':'unsigned int'
|-FieldDecl 0x55adbc338d70 <line:23:5, col:22> col:22 first_bucket 'uint32_t':'unsigned int' mutable
|-FieldDecl 0x55adbc338dc0 <line:24:5, col:12> col:12 size 'size_t':'unsigned long'
|-FieldDecl 0x55adbc338e10 <line:25:5, col:21> col:21 bucket_divider 'libdivide_u32_t'
|-FriendDecl 0x55adbc338f68 <line:26:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55adbc3390b8 <line:27:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55adbc339208 <line:28:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x55adbc339600 <line:20:7> col:7 implicit constexpr HashContainer_rep 'void (const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55adbc339600
| `-ParmVarDecl 0x55adbc339718 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55adbc33b490 <col:7> col:7 implicit constexpr operator= 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55adbc33b490
| `-ParmVarDecl 0x55adbc33b598 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXDestructorDecl 0x55adbc5b3a20 <col:7> col:7 implicit ~HashContainer_rep 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  NonVirtualBaseLLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc301ce0 <../dummy_inc/click/hashcontainer.hh:81:1, line:297:1> line:82:7 class HashContainer definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55adbc334808 prev 0x55adbc301ce0 <col:1, col:7> col:7 implicit class HashContainer
|-AccessSpecDecl 0x55adbc334898 <col:23, col:29> col:23 public
|-TypedefDecl 0x55adbc335360 <line:85:5, col:34> col:34 key_type 'typename HashContainer_adapter<IPRewriterEntry>::key_type':'IPFlowID'
| `-ElaboratedType 0x55adbc335310 'typename HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|   `-TypedefType 0x55adbc335090 'HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|     |-Typedef 0x55adbc334b10 'key_type'
|     `-ElaboratedType 0x55adbc334ac0 'typename IPRewriterEntry::key_type' sugar
|       `-TypedefType 0x55adbc334aa0 'IPRewriterEntry::key_type' sugar
|         |-Typedef 0x55adbc3036b0 'key_type'
|         `-RecordType 0x55adbc2f7d80 'IPFlowID'
|           `-CXXRecord 0x55adbc2f7cf0 'IPFlowID'
|-TypedefDecl 0x55adbc3353f8 <line:90:5, col:15> col:15 value_type 'IPRewriterEntry':'IPRewriterEntry'
| `-SubstTemplateTypeParmType 0x55adbc3353c0 'IPRewriterEntry' sugar
|   |-TemplateTypeParmType 0x55adbc29b0b0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbc29b058 'T'
|   `-RecordType 0x55adbc2ffc80 'IPRewriterEntry'
|     `-CXXRecord 0x55adbc3034f0 'IPRewriterEntry'
|-TypedefDecl 0x55adbc335450 <line:93:5, col:20> col:20 referenced size_type 'size_t':'unsigned long'
| `-TypedefType 0x55adbbd8ff90 'size_t' sugar
|   |-Typedef 0x55adbbd52b20 'size_t'
|   `-BuiltinType 0x55adbbce2430 'unsigned long'
|-TypedefDecl 0x55adbc3354a8 <line:96:5, col:22> col:22 referenced bucket_count_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55adbbe402a0 'uint32_t' sugar
|   |-Typedef 0x55adbbd4b408 'uint32_t'
|   `-TypedefType 0x55adbbd24440 '__uint32_t' sugar
|     |-Typedef 0x55adbbd24038 '__uint32_t'
|     `-BuiltinType 0x55adbbce2410 'unsigned int'
|-EnumDecl 0x55adbc335500 <line:98:5> col:5
| |-EnumConstantDecl 0x55adbc335630 <line:102:2, col:42> col:2 max_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
| | `-ConstantExpr 0x55adbc335610 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' Int: 4294967295
| |   `-CStyleCastExpr 0x55adbc3355e8 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' <NoOp>
| |     `-ImplicitCastExpr 0x55adbc3355d0 <col:41, col:42> 'HashContainer::bucket_count_type':'unsigned int' <IntegralCast> part_of_explicit_cast
| |       `-UnaryOperator 0x55adbc29b700 <col:41, col:42> 'int' prefix '-'
| |         `-IntegerLiteral 0x55adbc29b6e0 <col:42> 'int' 1
| `-EnumConstantDecl 0x55adbc3356a0 <line:104:2, col:25> col:2 initial_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
|   `-ImplicitCastExpr 0x55adbc3356f0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc335680 <col:25> 'int' Int: 63
|       `-IntegerLiteral 0x55adbc29b7b8 <col:25> 'int' 63
|-CXXConstructorDecl 0x55adbc335740 <line:108:5, col:19> col:5 HashContainer 'void ()'
|-CXXConstructorDecl 0x55adbc3358a8 <line:111:5, col:47> col:14 used HashContainer 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55adbc3357f8 <col:28, col:46> col:46 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXDestructorDecl 0x55adbc335990 <line:114:5, col:20> col:5 used ~HashContainer 'void () noexcept'
|-CXXMethodDecl 0x55adbc335a80 <line:118:5, line:120:5> line:118:22 size 'HashContainer::size_type () const' inline
|-CXXMethodDecl 0x55adbc335b30 <line:123:5, line:125:5> line:123:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc335be0 <line:128:5, line:130:5> line:128:30 bucket_count 'HashContainer::bucket_count_type () const' inline
|-CXXMethodDecl 0x55adbc335d78 <line:133:5, line:139:5> line:133:22 bucket_size 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55adbc335cb0 <col:34, col:52> col:52 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55adbc335f98 <line:142:5, col:51> col:23 bucket 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| `-ParmVarDecl 0x55adbc335ea8 <col:30, col:46> col:46 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55adbc336050 <line:145:5, line:147:5> line:145:17 unbalanced 'bool () const' inline
|-TypedefDecl 0x55adbc3362e0 <line:149:5, col:48> col:48 const_iterator 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55adbc336240 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55adbc336220 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55adbc336120 'HashContainer_const_iterator'
|-TypedefDecl 0x55adbc336510 <line:150:5, col:42> col:42 referenced iterator 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55adbc336470 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55adbc336450 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55adbc336358 'HashContainer_iterator'
|-CXXMethodDecl 0x55adbc336608 <line:155:5, col:27> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55adbc336758 <line:157:5, col:35> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55adbc336828 <line:161:5, col:25> col:21 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55adbc3368f8 <line:163:5, col:33> col:27 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55adbc336a98 <line:166:5, col:46> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (HashContainer::bucket_count_type)' inline
| `-ParmVarDecl 0x55adbc3369a8 <col:27, col:45> col:45 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55adbc336c48 <line:168:5, col:54> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55adbc336b50 <col:33, col:51> col:51 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55adbc336e08 <line:171:5, col:47> col:17 contains 'bool (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55adbc336d10 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55adbc336fc8 <line:173:5, col:49> col:22 count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55adbc336ed0 <col:28, col:44> col:44 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55adbc337188 <line:183:5, col:45> col:21 used find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55adbc337090 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55adbc337348 <line:185:5, col:53> col:27 find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55adbc337250 <col:32, col:48> col:48 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55adbc3374a0 <line:191:5, col:52> col:21 find_prefer 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55adbc337410 <col:33, col:49> col:49 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55adbc337688 <line:197:5, col:68> col:43 get 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| |-ParmVarDecl 0x55adbc337598 <col:47, col:63> col:63 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
| |-NoInlineAttr 0x55adbc337740 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc337798 <col:30> Inherited
|-CXXMethodDecl 0x55adbc3379b8 <line:219:5, col:51> col:17 insert_at 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55adbc337828 <col:27, col:37> col:37 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| `-ParmVarDecl 0x55adbc3378a0 <col:41, col:44> col:44 element 'IPRewriterEntry *'
|-CXXMethodDecl 0x55adbc337c88 <line:239:5, col:58> col:8 set 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *, bool)'
| |-ParmVarDecl 0x55adbc337a88 <col:12, col:22> col:22 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| |-ParmVarDecl 0x55adbc337b00 <col:26, col:29> col:29 element 'IPRewriterEntry *'
| `-ParmVarDecl 0x55adbc337b68 <col:38, col:53> col:43 balance 'bool'
|-CXXMethodDecl 0x55adbc337e58 <line:249:5, col:57> col:43 set 'IPRewriterEntry *(IPRewriterEntry *)'
| |-ParmVarDecl 0x55adbc337d60 <col:47, col:50> col:50 element 'IPRewriterEntry *'
| |-NoInlineAttr 0x55adbc337f10 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc337f68 <col:30> Inherited
|-CXXMethodDecl 0x55adbc338098 <line:256:5, col:33> col:15 used erase 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &)' inline
| `-ParmVarDecl 0x55adbc337fa0 <col:21, col:31> col:31 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
|-CXXMethodDecl 0x55adbc338258 <line:262:5, col:40> col:15 erase 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55adbc338160 <col:21, col:37> col:37 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55adbc338310 <line:266:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x55adbc3385d8 <line:269:5, col:44> col:17 swap 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline
| `-ParmVarDecl 0x55adbc3384e8 <col:22, col:43> col:43 x 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55adbc338720 <line:277:5, col:36> col:10 rehash 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55adbc338690 <col:17, col:35> col:35 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55adbc3387d8 <line:282:5, line:285:5> line:282:17 balance 'void ()' inline
|-AccessSpecDecl 0x55adbc338888 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55adbc33b620 <line:289:5, col:29> col:29 _rep 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x55adbc33b878 <line:291:5, col:46> col:5 HashContainer 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x55adbc33b768 <col:19, col:45> col:46 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55adbc33bc18 <line:292:5, col:63> col:26 operator= 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x55adbc33bae8 <col:36, col:62> col:63 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-FriendDecl 0x55adbc33bdd8 <line:294:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
`-FriendDecl 0x55adbc33bf28 <line:295:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  NonVirtualBaseLLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc33d560 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<56>'
|-CXXRecordDecl 0x55adbc33d738 prev 0x55adbc33d560 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55adbc33d7c8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55adbc33d7f0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc33f3c0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<56>::type':'char_array<56>'
| `-ElaboratedType 0x55adbc33f370 'typename sized_array_memory<56>::type' sugar
|   `-TypedefType 0x55adbc33dca0 'sized_array_memory<56>::type' sugar
|     |-Typedef 0x55adbc33dba0 'type'
|     `-TemplateSpecializationType 0x55adbc33db30 'char_array<56UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55adbc33da10 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|       |   `-SubstNonTypeTemplateParmExpr 0x55adbc33d9f0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55adbc33d9d0 <col:24> 'unsigned long' 56
|       `-RecordType 0x55adbc33db10 'char_array<56>'
|         `-ClassTemplateSpecialization 0x55adbc33da30 'char_array'
|-TypedefDecl 0x55adbc33f478 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<56> >::type *'
| `-PointerType 0x55adbc33f440 'vector_memory<sized_array_memory<56> >::type *'
|   `-TypedefType 0x55adbc33f420 'vector_memory<sized_array_memory<56> >::type' sugar
|     |-Typedef 0x55adbc33f3c0 'type'
|     `-ElaboratedType 0x55adbc33f370 'typename sized_array_memory<56>::type' sugar
|       `-TypedefType 0x55adbc33dca0 'sized_array_memory<56>::type' sugar
|         |-Typedef 0x55adbc33dba0 'type'
|         `-TemplateSpecializationType 0x55adbc33db30 'char_array<56UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55adbc33da10 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|           |   `-SubstNonTypeTemplateParmExpr 0x55adbc33d9f0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55adbc33d9d0 <col:24> 'unsigned long' 56
|           `-RecordType 0x55adbc33db10 'char_array<56>'
|             `-ClassTemplateSpecialization 0x55adbc33da30 'char_array'
|-CXXMethodDecl 0x55adbc33f5f8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<56> >::type *) const' inline
| `-ParmVarDecl 0x55adbc33f508 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXConstructorDecl 0x55adbc33f6e8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55adbc33f7c8 <line:23:5, col:20> col:5 ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55adbc33fa98 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x55adbc33f9a0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<56> > &'
|-CXXMethodDecl 0x55adbc33fcd8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55adbc33fb50 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc33fbc8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55adbc33fea8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55adbc33fd98 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc33fe10 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55adbc340008 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x55adbc3400d8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x55adbc340328 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55adbc340198 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x55adbc340210 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55adbc340588 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, vector_memory<sized_array_memory<56> >::iterator)'
| |-ParmVarDecl 0x55adbc3403f8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x55adbc340470 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55adbc340748 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x55adbc340658 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55adbc340908 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x55adbc340810 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55adbc3409c0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc340a70 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc340ca8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55adbc340b20 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc340b98 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55adbc340f48 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x55adbc340e50 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<56> > &'
|-FieldDecl 0x55adbc341010 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<56> >::type *'
|-FieldDecl 0x55adbc341060 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55adbc3410b0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.14 = type { %struct.char_array.15*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.14 = type { %struct.char_array.15*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc33bfc8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterInput'
|-CXXRecordDecl 0x55adbc33c1d8 prev 0x55adbc33bfc8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55adbc33d4d0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterInput>::type':'sized_array_memory<56>'
| `-ElaboratedType 0x55adbc33d480 'typename array_memory<IPRewriterInput>::type' sugar
|   `-TypedefType 0x55adbc33d460 'conditional<true, sized_array_memory<56>, typed_array_memory<IPRewriterInput> >::type' sugar
|     |-Typedef 0x55adbc33d310 'type'
|     `-SubstTemplateTypeParmType 0x55adbc33d130 'sized_array_memory<56>' sugar
|       |-TemplateTypeParmType 0x55adbbfc9040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfc8fe8 'T'
|       `-RecordType 0x55adbc33cc80 'sized_array_memory<56>'
|         `-ClassTemplateSpecialization 0x55adbc33cba0 'sized_array_memory'
|-FieldDecl 0x55adbc341100 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterInput>::array_memory_type>':'vector_memory<sized_array_memory<56> >' mutable
|-AccessSpecDecl 0x55adbc341150 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55adbc341188 <line:118:5, col:15> col:15 value_type 'IPRewriterInput':'IPRewriterInput'
| `-SubstTemplateTypeParmType 0x55adbc33c270 'IPRewriterInput' sugar
|   |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|   `-RecordType 0x55adbc2ffd30 'IPRewriterInput'
|     `-CXXRecord 0x55adbc31e1c0 'IPRewriterInput'
|-TypedefDecl 0x55adbc341248 <line:119:5, col:16> col:16 reference 'IPRewriterInput &'
| `-LValueReferenceType 0x55adbc341210 'IPRewriterInput &'
|   `-SubstTemplateTypeParmType 0x55adbc33c270 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc2ffd30 'IPRewriterInput'
|       `-CXXRecord 0x55adbc31e1c0 'IPRewriterInput'
|-TypedefDecl 0x55adbc341308 <line:120:5, col:22> col:22 const_reference 'const IPRewriterInput &'
| `-LValueReferenceType 0x55adbc3412d0 'const IPRewriterInput &'
|   `-QualType 0x55adbc33c271 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55adbc33c270 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc2ffd30 'IPRewriterInput'
|         `-CXXRecord 0x55adbc31e1c0 'IPRewriterInput'
|-TypedefDecl 0x55adbc341398 <line:121:5, col:16> col:16 pointer 'IPRewriterInput *'
| `-PointerType 0x55adbc341360 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x55adbc33c270 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc2ffd30 'IPRewriterInput'
|       `-CXXRecord 0x55adbc31e1c0 'IPRewriterInput'
|-TypedefDecl 0x55adbc341458 <line:122:5, col:22> col:22 const_pointer 'const IPRewriterInput *'
| `-PointerType 0x55adbc341420 'const IPRewriterInput *'
|   `-QualType 0x55adbc33c271 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55adbc33c270 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc2ffd30 'IPRewriterInput'
|         `-CXXRecord 0x55adbc31e1c0 'IPRewriterInput'
|-TypedefDecl 0x55adbc3420b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterInput>::type':'const IPRewriterInput &'
| `-ElaboratedType 0x55adbc342060 'typename fast_argument<IPRewriterInput>::type' sugar
|   `-TypedefType 0x55adbc342040 'fast_argument<IPRewriterInput, true>::type' sugar
|     |-Typedef 0x55adbc341f78 'type'
|     `-LValueReferenceType 0x55adbc341f40 'const IPRewriterInput &'
|       `-QualType 0x55adbc341ce1 'const IPRewriterInput' const
|         `-SubstTemplateTypeParmType 0x55adbc341ce0 'IPRewriterInput' sugar
|           |-TemplateTypeParmType 0x55adbbfd0b10 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55adbbfd0ab8 'T'
|           `-RecordType 0x55adbc2ffd30 'IPRewriterInput'
|             `-CXXRecord 0x55adbc31e1c0 'IPRewriterInput'
|-TypedefDecl 0x55adbc342118 <line:126:5, col:22> col:22 const_access_type 'const IPRewriterInput &'
| `-LValueReferenceType 0x55adbc3412d0 'const IPRewriterInput &'
|   `-QualType 0x55adbc33c271 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55adbc33c270 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc2ffd30 'IPRewriterInput'
|         `-CXXRecord 0x55adbc31e1c0 'IPRewriterInput'
|-TypedefDecl 0x55adbc342170 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc3421d8 <line:130:5, col:16> col:16 iterator 'IPRewriterInput *'
| `-PointerType 0x55adbc341360 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x55adbc33c270 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc2ffd30 'IPRewriterInput'
|       `-CXXRecord 0x55adbc31e1c0 'IPRewriterInput'
|-TypedefDecl 0x55adbc342240 <line:131:5, col:22> col:22 const_iterator 'const IPRewriterInput *'
| `-PointerType 0x55adbc341420 'const IPRewriterInput *'
|   `-QualType 0x55adbc33c271 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55adbc33c270 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc2ffd30 'IPRewriterInput'
|         `-CXXRecord 0x55adbc31e1c0 'IPRewriterInput'
|-EnumDecl 0x55adbc342298 <line:134:5> col:5
| `-EnumConstantDecl 0x55adbc342390 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterInput>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55adbc342370 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55adbc0003c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55adbc0003a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55adbc000380 <col:40> 'int' 1
|-CXXConstructorDecl 0x55adbc342418 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55adbc3426a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc3424d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc342570 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXConstructorDecl 0x55adbc342968 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55adbc342850 <col:19, col:36> col:36 x 'const Vector<IPRewriterInput> &'
|-CXXConstructorDecl 0x55adbc342c28 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x55adbc342b10 <col:19, col:31> col:31 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x55adbc342f70 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterInput> &(const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55adbc342e50 <col:33, col:50> col:50 x 'const Vector<IPRewriterInput> &'
|-CXXMethodDecl 0x55adbc343280 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterInput> &(Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x55adbc343160 <col:33, col:45> col:45 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x55adbc344ea0 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterInput> &(Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc3433b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc344d60 <col:43, col:69> col:63 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55adbc344ff8 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x55adbc3450d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc345130 <col:30> Inherited
|-CXXMethodDecl 0x55adbc345178 <line:151:5, col:53> col:49 end 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x55adbc345228 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc345280 <col:30> Inherited
|-CXXMethodDecl 0x55adbc345348 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55adbc3453f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc345450 <col:30> Inherited
|-CXXMethodDecl 0x55adbc345498 <line:153:5, col:61> col:55 end 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55adbc345548 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc3455a0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc3455e8 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55adbc345698 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc3456f0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc345738 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55adbc3457e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc345840 <col:30> Inherited
|-CXXMethodDecl 0x55adbc345868 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc345918 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc3459c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc345b88 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc345a78 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc345af0 <col:37, col:63> col:57 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55adbc345cd8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc345c48 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc345e88 <line:163:5, col:65> col:43 operator[] 'IPRewriterInput &(Vector::size_type)'
| |-ParmVarDecl 0x55adbc345d90 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc345f40 <col:20>
| `-OptimizeNoneAttr 0x55adbc345f98 <col:30>
|-CXXMethodDecl 0x55adbc3460b8 <line:164:5, col:73> col:49 used operator[] 'const IPRewriterInput &(Vector::size_type) const'
| |-ParmVarDecl 0x55adbc345fc0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc346170 <col:20>
| `-OptimizeNoneAttr 0x55adbc3461c8 <col:30>
|-CXXMethodDecl 0x55adbc346280 <line:165:5, col:29> col:15 at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc3461f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc3463c8 <line:166:5, col:37> col:21 at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc346338 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc3464f8 <line:167:5, col:21> col:15 front 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x55adbc346628 <line:168:5, col:29> col:21 front 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x55adbc3466f8 <line:169:5, col:20> col:15 back 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x55adbc3467c8 <line:170:5, col:28> col:21 back 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x55adbc346908 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc346878 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc346a50 <line:173:5, col:47> col:21 unchecked_at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc3469c0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc346b98 <line:174:5, col:59> col:15 at_u 'IPRewriterInput &(Vector::size_type)' inline
| |-ParmVarDecl 0x55adbc346b08 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc346c50 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55adbc346d50 <line:175:5, col:71> col:21 at_u 'const IPRewriterInput &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55adbc346cc0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc346e08 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55adbc346ec8 <line:177:5, col:20> col:15 data 'IPRewriterInput *()' inline
|-CXXMethodDecl 0x55adbc346fc8 <line:178:5, col:28> col:21 data 'const IPRewriterInput *() const' inline
|-CXXMethodDecl 0x55adbc347178 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc347088 <col:27, col:47> col:47 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-FunctionTemplateDecl 0x55adbc347938 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55adbc347230 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterInput>':'fast_argument<IPRewriterInput, true>'
| `-CXXMethodDecl 0x55adbc347898 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterInput &&)' inline
|   `-ParmVarDecl 0x55adbc347798 <col:58, col:62> col:62 v 'IPRewriterInput &&'
|-CXXMethodDecl 0x55adbc347a18 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc347b68 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc347ad8 <col:28, col:48> col:48 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55adbc347c20 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55adbc347e68 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc347ce0 <col:28, col:37> col:37 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x55adbc347d58 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55adbc348028 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator)' inline
| `-ParmVarDecl 0x55adbc347f38 <col:27, col:36> col:36 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x55adbc348278 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::iterator)' inline
| |-ParmVarDecl 0x55adbc3480f0 <col:27, col:36> col:36 a 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x55adbc348168 <col:39, col:48> col:48 b 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x55adbc348338 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc348598 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55adbc3484a0 <col:22, col:33> col:33 x 'Vector<IPRewriterInput> &'
`-CXXDestructorDecl 0x55adbc348668 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory.14 }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory.14 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterHeap
         0 |   Vector<class IPRewriterFlow *> [2] _heaps
        32 |   int32_t _capacity
        36 |   uint32_t _use_count
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc320070 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterFlow *'
|-CXXRecordDecl 0x55adbc320270 prev 0x55adbc320070 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55adbc3215f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterFlow *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55adbc3215a0 'typename array_memory<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x55adbc321580 'conditional<true, sized_array_memory<8>, typed_array_memory<IPRewriterFlow *> >::type' sugar
|     |-Typedef 0x55adbc321430 'type'
|     `-SubstTemplateTypeParmType 0x55adbc321250 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55adbbfc9040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfc8fe8 'T'
|       `-RecordType 0x55adbc320da0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55adbc320cb8 'sized_array_memory'
|-FieldDecl 0x55adbc327c60 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterFlow *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55adbc327cb0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55adbc327ce8 <line:118:5, col:15> col:15 value_type 'IPRewriterFlow *':'IPRewriterFlow *'
| `-SubstTemplateTypeParmType 0x55adbc320300 'IPRewriterFlow *' sugar
|   |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|   `-PointerType 0x55adbc303eb0 'IPRewriterFlow *'
|     `-RecordType 0x55adbc2ffbd0 'IPRewriterFlow'
|       `-CXXRecord 0x55adbc305da0 'IPRewriterFlow'
|-TypedefDecl 0x55adbc327da8 <line:119:5, col:16> col:16 reference 'IPRewriterFlow *&'
| `-LValueReferenceType 0x55adbc327d70 'IPRewriterFlow *&'
|   `-SubstTemplateTypeParmType 0x55adbc320300 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-PointerType 0x55adbc303eb0 'IPRewriterFlow *'
|       `-RecordType 0x55adbc2ffbd0 'IPRewriterFlow'
|         `-CXXRecord 0x55adbc305da0 'IPRewriterFlow'
|-TypedefDecl 0x55adbc327e68 <line:120:5, col:22> col:22 const_reference 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x55adbc327e30 'IPRewriterFlow *const &'
|   `-QualType 0x55adbc320301 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55adbc320300 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbc303eb0 'IPRewriterFlow *'
|         `-RecordType 0x55adbc2ffbd0 'IPRewriterFlow'
|           `-CXXRecord 0x55adbc305da0 'IPRewriterFlow'
|-TypedefDecl 0x55adbc327ef8 <line:121:5, col:16> col:16 pointer 'IPRewriterFlow **'
| `-PointerType 0x55adbc327ec0 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x55adbc320300 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-PointerType 0x55adbc303eb0 'IPRewriterFlow *'
|       `-RecordType 0x55adbc2ffbd0 'IPRewriterFlow'
|         `-CXXRecord 0x55adbc305da0 'IPRewriterFlow'
|-TypedefDecl 0x55adbc327fb8 <line:122:5, col:22> col:22 const_pointer 'IPRewriterFlow *const *'
| `-PointerType 0x55adbc327f80 'IPRewriterFlow *const *'
|   `-QualType 0x55adbc320301 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55adbc320300 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbc303eb0 'IPRewriterFlow *'
|         `-RecordType 0x55adbc2ffbd0 'IPRewriterFlow'
|           `-CXXRecord 0x55adbc305da0 'IPRewriterFlow'
|-TypedefDecl 0x55adbc328da0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterFlow *>::type':'IPRewriterFlow *'
| `-ElaboratedType 0x55adbc328d50 'typename fast_argument<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x55adbc328d30 'fast_argument<IPRewriterFlow *, false>::type' sugar
|     |-Typedef 0x55adbc328cc0 'type'
|     `-SubstTemplateTypeParmType 0x55adbc328a80 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55adbbfd1240 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfd11f0 'T'
|       `-PointerType 0x55adbc303eb0 'IPRewriterFlow *'
|         `-RecordType 0x55adbc2ffbd0 'IPRewriterFlow'
|           `-CXXRecord 0x55adbc305da0 'IPRewriterFlow'
|-TypedefDecl 0x55adbc328e08 <line:126:5, col:22> col:22 const_access_type 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x55adbc327e30 'IPRewriterFlow *const &'
|   `-QualType 0x55adbc320301 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55adbc320300 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbc303eb0 'IPRewriterFlow *'
|         `-RecordType 0x55adbc2ffbd0 'IPRewriterFlow'
|           `-CXXRecord 0x55adbc305da0 'IPRewriterFlow'
|-TypedefDecl 0x55adbc328e60 <line:128:5, col:17> col:17 referenced size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc328ec8 <line:130:5, col:16> col:16 iterator 'IPRewriterFlow **'
| `-PointerType 0x55adbc327ec0 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x55adbc320300 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-PointerType 0x55adbc303eb0 'IPRewriterFlow *'
|       `-RecordType 0x55adbc2ffbd0 'IPRewriterFlow'
|         `-CXXRecord 0x55adbc305da0 'IPRewriterFlow'
|-TypedefDecl 0x55adbc328f30 <line:131:5, col:22> col:22 const_iterator 'IPRewriterFlow *const *'
| `-PointerType 0x55adbc327f80 'IPRewriterFlow *const *'
|   `-QualType 0x55adbc320301 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55adbc320300 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbc303eb0 'IPRewriterFlow *'
|         `-RecordType 0x55adbc2ffbd0 'IPRewriterFlow'
|           `-CXXRecord 0x55adbc305da0 'IPRewriterFlow'
|-EnumDecl 0x55adbc328f88 <line:134:5> col:5
| `-EnumConstantDecl 0x55adbc329080 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterFlow *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55adbc329060 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55adbc0003c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55adbc0003a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55adbc000380 <col:40> 'int' 1
|-CXXConstructorDecl 0x55adbc329108 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55adbc329398 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc3291c0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc329260 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXConstructorDecl 0x55adbc329658 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55adbc329540 <col:19, col:36> col:36 x 'const Vector<IPRewriterFlow *> &'
|-CXXConstructorDecl 0x55adbc329918 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x55adbc329800 <col:19, col:31> col:31 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x55adbc329c60 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterFlow *> &(const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55adbc329b40 <col:33, col:50> col:50 x 'const Vector<IPRewriterFlow *> &'
|-CXXMethodDecl 0x55adbc329f70 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterFlow *> &(Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x55adbc329e50 <col:33, col:45> col:45 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x55adbc32a260 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterFlow *> &(Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc32a0a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc32a120 <col:43, col:69> col:63 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55adbc32a3b8 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x55adbc32a498 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc32a4f0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc32a538 <line:151:5, col:53> col:49 end 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x55adbc32a5e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc32a640 <col:30> Inherited
|-CXXMethodDecl 0x55adbc32a708 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc32a7b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc32a810 <col:30> Inherited
|-CXXMethodDecl 0x55adbc32a858 <line:153:5, col:61> col:55 end 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc32a908 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc32a960 <col:30> Inherited
|-CXXMethodDecl 0x55adbc32a9a8 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc32aa58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc32aab0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc32aaf8 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc32aba8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc32ac00 <col:30> Inherited
|-CXXMethodDecl 0x55adbc32ac28 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc32acd8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc32ad88 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc32af48 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc32ae38 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc32aeb0 <col:37, col:63> col:57 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55adbc32b098 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc32b008 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc32b248 <line:163:5, col:65> col:43 operator[] 'IPRewriterFlow *&(Vector::size_type)'
| |-ParmVarDecl 0x55adbc32b150 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc32b300 <col:20>
| `-OptimizeNoneAttr 0x55adbc32b358 <col:30>
|-CXXMethodDecl 0x55adbc32b478 <line:164:5, col:73> col:49 operator[] 'IPRewriterFlow *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55adbc32b380 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc32b530 <col:20>
| `-OptimizeNoneAttr 0x55adbc32b588 <col:30>
|-CXXMethodDecl 0x55adbc32b640 <line:165:5, col:29> col:15 at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc32b5b0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc32b788 <line:166:5, col:37> col:21 at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc32b6f8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc32b8b8 <line:167:5, col:21> col:15 front 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x55adbc32b9e8 <line:168:5, col:29> col:21 front 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x55adbc32bab8 <line:169:5, col:20> col:15 back 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x55adbc32bb88 <line:170:5, col:28> col:21 back 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x55adbc32bcc8 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc32bc38 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc32be10 <line:173:5, col:47> col:21 unchecked_at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc32bd80 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc32bf58 <line:174:5, col:59> col:15 at_u 'IPRewriterFlow *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55adbc32bec8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc32c010 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55adbc32c110 <line:175:5, col:71> col:21 at_u 'IPRewriterFlow *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55adbc32c080 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc32c1c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55adbc32c288 <line:177:5, col:20> col:15 data 'IPRewriterFlow **()' inline
|-CXXMethodDecl 0x55adbc32c388 <line:178:5, col:28> col:21 data 'IPRewriterFlow *const *() const' inline
|-CXXMethodDecl 0x55adbc32c538 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc32c448 <col:27, col:47> col:47 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-FunctionTemplateDecl 0x55adbc32cd28 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55adbc32c5f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterFlow *>':'fast_argument<IPRewriterFlow *, false>'
| `-CXXMethodDecl 0x55adbc32cc88 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterFlow *&&)' inline
|   `-ParmVarDecl 0x55adbc32cb88 <col:58, col:62> col:62 v 'IPRewriterFlow *&&'
|-CXXMethodDecl 0x55adbc32ce08 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc32cf58 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc32cec8 <col:28, col:48> col:48 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55adbc32d010 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55adbc32d258 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc32d0d0 <col:28, col:37> col:37 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x55adbc32d148 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55adbc32d418 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator)' inline
| `-ParmVarDecl 0x55adbc32d328 <col:27, col:36> col:36 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x55adbc32d668 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::iterator)' inline
| |-ParmVarDecl 0x55adbc32d4e0 <col:27, col:36> col:36 a 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x55adbc32d558 <col:39, col:48> col:48 b 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x55adbc32d728 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc32d988 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55adbc32d890 <col:22, col:33> col:33 x 'Vector<IPRewriterFlow *> &'
`-CXXDestructorDecl 0x55adbc32da58 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55adbc32e968 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc31fb28 prev 0x55adbc3033b0 <../elements/ip/iprewriterbase.hh:42:1, line:79:1> line:42:7 referenced class IPRewriterHeap definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbc31fc20 <col:1, col:7> col:7 implicit referenced class IPRewriterHeap
|-AccessSpecDecl 0x55adbc31fcb0 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55adbc31fd10 <line:44:5, line:46:5> line:44:5 IPRewriterHeap 'void ()'
| |-CXXCtorInitializer Field 0x55adbc32e2f8 '_heaps' 'Vector<IPRewriterFlow *> [2]'
| | `-CXXConstructExpr 0x55adbc32e940 <col:5> 'Vector<IPRewriterFlow *> [2]' 'void ()'
| |-CXXCtorInitializer Field 0x55adbc32e358 '_capacity' 'int32_t':'int'
| | `-IntegerLiteral 0x55adbc32e858 <line:45:14> 'int' 2147483647
| |-CXXCtorInitializer Field 0x55adbc32e3b8 '_use_count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55adbc32e900 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55adbc32e8c0 <col:38> 'int' 1
| `-CompoundStmt 0x55adbc32e9b8 <col:41, line:46:5>
|-CXXDestructorDecl 0x55adbc31fe00 <line:47:5, line:49:5> line:47:5 used ~IPRewriterHeap 'void () noexcept'
| `-CompoundStmt 0x55adbc32edf8 <col:23, line:49:5>
|   `-ParenExpr 0x55adbc32edd8 <line:48:2, col:153> 'void'
|     `-ConditionalOperator 0x55adbc32eda8 <col:3, col:152> 'void'
|       |-CXXStaticCastExpr 0x55adbc32ea90 <col:3, col:34> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55adbc32ea60 <col:23, col:33> 'bool' '=='
|       |   |-CXXMemberCallExpr 0x55adbc32ea08 <col:23, col:28> 'Vector<IPRewriterFlow *>::size_type':'int'
|       |   | `-MemberExpr 0x55adbc32e9d8 <col:23> '<bound member function type>' ->size 0x55adbc32dc38
|       |   |   `-ImplicitCastExpr 0x55adbc32ea28 <col:23> 'const IPRewriterHeap *' <NoOp>
|       |   |     `-CXXThisExpr 0x55adbc32e9c8 <col:23> 'IPRewriterHeap *' implicit this
|       |   `-IntegerLiteral 0x55adbc32ea40 <col:33> 'int' 0
|       |-CXXFunctionalCastExpr 0x55adbc32eaf0 <col:38, col:45> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55adbc32ead0 <col:44> 'int' 0
|       `-CallExpr 0x55adbc32ed08 <col:49, col:152> 'void'
|         |-ImplicitCastExpr 0x55adbc32ecf0 <col:49> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55adbc32ecd0 <col:49> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55adbc32ed48 <col:64> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55adbc32eb60 <col:64> 'const char [12]' lvalue "size() == 0"
|         |-ImplicitCastExpr 0x55adbc32ed60 <col:79> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55adbc32ec08 <col:79> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|         |-ImplicitCastExpr 0x55adbc32ed78 <col:115> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55adbc32ec40 <col:115> 'int' 48
|         `-ImplicitCastExpr 0x55adbc32ed90 <col:119, col:133> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55adbc32ecb8 <col:119, col:133> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55adbc32eca0 <col:133> 'const char [34]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55adbc32ec60 <col:133> 'const char [34]' lvalue "IPRewriterHeap::~IPRewriterHeap()"
|-CXXMethodDecl 0x55adbc31ff00 <line:51:5, line:53:5> line:51:10 use 'void ()'
| `-CompoundStmt 0x55adbc32ee68 <col:16, line:53:5>
|   `-UnaryOperator 0x55adbc32ee50 <line:52:2, col:4> 'uint32_t':'unsigned int' lvalue prefix '++'
|     `-MemberExpr 0x55adbc32ee20 <col:4> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55adbc32e3b8
|       `-CXXThisExpr 0x55adbc32ee10 <col:4> 'IPRewriterHeap *' implicit this
|-CXXMethodDecl 0x55adbc31ffc0 <line:54:5, line:58:5> line:54:10 unuse 'void ()'
| `-CompoundStmt 0x55adbc32f330 <col:18, line:58:5>
|   |-ParenExpr 0x55adbc32f200 <line:55:2, col:159> 'void'
|   | `-ConditionalOperator 0x55adbc32f1d0 <col:3, col:158> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc32ef40 <col:3, col:37> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc32ef10 <col:23, col:36> 'bool' '>'
|   |   |   |-ImplicitCastExpr 0x55adbc32eee0 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x55adbc32ee90 <col:23> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55adbc32e3b8
|   |   |   |   `-CXXThisExpr 0x55adbc32ee80 <col:23> 'IPRewriterHeap *' implicit this
|   |   |   `-ImplicitCastExpr 0x55adbc32eef8 <col:36> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x55adbc32eec0 <col:36> 'int' 0
|   |   |-CXXFunctionalCastExpr 0x55adbc32efa0 <col:41, col:48> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc32ef80 <col:47> 'int' 0
|   |   `-CallExpr 0x55adbc32f130 <col:52, col:158> 'void'
|   |     |-ImplicitCastExpr 0x55adbc32f118 <col:52> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc32f0f8 <col:52> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc32f170 <col:67> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc32f010 <col:67> 'const char [15]' lvalue "_use_count > 0"
|   |     |-ImplicitCastExpr 0x55adbc32f188 <col:85> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc32f038 <col:85> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|   |     |-ImplicitCastExpr 0x55adbc32f1a0 <col:121> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc32f070 <col:121> 'int' 55
|   |     `-ImplicitCastExpr 0x55adbc32f1b8 <col:125, col:139> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc32f0e0 <col:125, col:139> 'const char [29]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc32f0c8 <col:139> 'const char [29]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc32f090 <col:139> 'const char [29]' lvalue "void IPRewriterHeap::unuse()"
|   `-IfStmt 0x55adbc32f318 <line:56:2, line:57:13>
|     |-BinaryOperator 0x55adbc32f2c8 <line:56:6, col:22> 'bool' '=='
|     | |-ImplicitCastExpr 0x55adbc32f298 <col:6, col:8> 'uint32_t':'unsigned int' <LValueToRValue>
|     | | `-UnaryOperator 0x55adbc32f260 <col:6, col:8> 'uint32_t':'unsigned int' lvalue prefix '--'
|     | |   `-MemberExpr 0x55adbc32f230 <col:8> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55adbc32e3b8
|     | |     `-CXXThisExpr 0x55adbc32f220 <col:8> 'IPRewriterHeap *' implicit this
|     | `-ImplicitCastExpr 0x55adbc32f2b0 <col:22> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x55adbc32f278 <col:22> 'int' 0
|     `-CXXDeleteExpr 0x55adbc32f2f8 <line:57:6, col:13> 'void' Function 0x55adbbe3e0f8 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x55adbc32f2e8 <col:13> 'IPRewriterHeap *' this
|-CXXMethodDecl 0x55adbc32dc38 <line:60:5, line:62:5> line:60:41 used size 'Vector<IPRewriterFlow *>::size_type () const'
| `-CompoundStmt 0x55adbc331f30 <col:54, line:62:5>
|   `-ReturnStmt 0x55adbc331f20 <line:61:2, col:43>
|     `-BinaryOperator 0x55adbc331f00 <col:9, col:43> 'int' '+'
|       |-CXXMemberCallExpr 0x55adbc32f4b0 <col:9, col:24> 'Vector::size_type':'int'
|       | `-MemberExpr 0x55adbc32f480 <col:9, col:19> '<bound member function type>' .size 0x55adbc32ac28
|       |   `-ArraySubscriptExpr 0x55adbc32f460 <col:9, col:17> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|       |     |-ImplicitCastExpr 0x55adbc32f448 <col:9> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x55adbc32f360 <col:9> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x55adbc32e2f8
|       |     |   `-CXXThisExpr 0x55adbc32f350 <col:9> 'const IPRewriterHeap *' implicit this
|       |     `-IntegerLiteral 0x55adbc32f390 <col:16> 'int' 0
|       `-CXXMemberCallExpr 0x55adbc32f598 <col:28, col:43> 'Vector::size_type':'int'
|         `-MemberExpr 0x55adbc32f568 <col:28, col:38> '<bound member function type>' .size 0x55adbc32ac28
|           `-ArraySubscriptExpr 0x55adbc32f548 <col:28, col:36> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|             |-ImplicitCastExpr 0x55adbc32f530 <col:28> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55adbc32f4e0 <col:28> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x55adbc32e2f8
|             |   `-CXXThisExpr 0x55adbc32f4d0 <col:28> 'const IPRewriterHeap *' implicit this
|             `-IntegerLiteral 0x55adbc32f510 <col:35> 'int' 1
|-CXXMethodDecl 0x55adbc32dd28 <line:63:5, line:65:5> line:63:13 capacity 'int32_t () const'
| `-CompoundStmt 0x55adbc331fb0 <col:30, line:65:5>
|   `-ReturnStmt 0x55adbc331fa0 <line:64:2, col:9>
|     `-ImplicitCastExpr 0x55adbc331f88 <col:9> 'int32_t':'int' <LValueToRValue>
|       `-MemberExpr 0x55adbc331f58 <col:9> 'const int32_t':'const int' lvalue ->_capacity 0x55adbc32e358
|         `-CXXThisExpr 0x55adbc331f48 <col:9> 'const IPRewriterHeap *' implicit this
|-AccessSpecDecl 0x55adbc32ddc8 <line:67:3, col:10> col:3 private
|-EnumDecl 0x55adbc32ddf0 <line:69:5, line:71:5> line:69:5
| |-EnumConstantDecl 0x55adbc32def0 <line:70:2, col:18> col:2 h_best_effort 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
| | `-ImplicitCastExpr 0x55adbc32dfd0 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc32ded0 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x55adbc32deb0 <col:18> 'int' 0
| `-EnumConstantDecl 0x55adbc32df80 <col:21, col:35> col:21 h_guarantee 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
|   `-ImplicitCastExpr 0x55adbc32dfe8 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc32df60 <col:35> 'int' Int: 1
|       `-IntegerLiteral 0x55adbc32df40 <col:35> 'int' 1
|-FieldDecl 0x55adbc32e2f8 <line:72:5, col:38> col:30 referenced _heaps 'Vector<IPRewriterFlow *> [2]'
|-FieldDecl 0x55adbc32e358 <line:73:5, col:13> col:13 referenced _capacity 'int32_t':'int'
|-FieldDecl 0x55adbc32e3b8 <line:74:5, col:14> col:14 referenced _use_count 'uint32_t':'unsigned int'
|-FriendDecl 0x55adbc32e428 <line:76:5, col:18> col:12 'class IPRewriterBase':'IPRewriterBase'
|-FriendDecl 0x55adbc32e4c0 <line:77:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x55adbc32e528 <line:42:7> col:7 implicit IPRewriterHeap 'void (const IPRewriterHeap &)' inline default noexcept-unevaluated 0x55adbc32e528
| `-ParmVarDecl 0x55adbc32e638 <col:7> col:7 'const IPRewriterHeap &'
`-CXXMethodDecl 0x55adbc32e6d8 <col:7> col:7 implicit operator= 'IPRewriterHeap &(const IPRewriterHeap &)' inline default noexcept-unevaluated 0x55adbc32e6d8
  `-ParmVarDecl 0x55adbc32e7e8 <col:7> col:7 'const IPRewriterHeap &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.16], i32, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.16], i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc1ece20 prev 0x55adbc1e42b0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc1ecf18 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55adbc1ecfb8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55adbc1f3458 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55adbc1f3838 <col:11>
|-CXXConstructorDecl 0x55adbc1f3530 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc1f3618 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55adbc1f3f80 <col:11>
|-CXXConstructorDecl 0x55adbc1f36b8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc1f37c8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55adbc1f57d8 <col:11>
|-CXXDestructorDecl 0x55adbc1f4ae8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55adbbef4e88 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbbef4f98 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55adbbef5860 <col:11>
|   `-ReturnStmt 0x55adbbef5850 <col:11>
|     `-UnaryOperator 0x55adbbef5838 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55adbbef5828 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55adbbef5008 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55adbbef5118 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55adbc27f7c0 <col:11>
    `-ReturnStmt 0x55adbc27f7b0 <col:11>
      `-UnaryOperator 0x55adbc27f798 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55adbc27f788 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc1e1e98 prev 0x55adbc1e1bb0 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc1e1f90 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55adbc1e2020 <col:19, col:25> col:19 public
|-TypedefDecl 0x55adbc1e2058 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55adbbe40380 'int32_t' sugar
|   |-Typedef 0x55adbbd4b268 'int32_t'
|   `-TypedefType 0x55adbbd243b0 '__int32_t' sugar
|     |-Typedef 0x55adbbd23fc8 '__int32_t'
|     `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc1e20c0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55adbbe40540 'int64_t' sugar
|   |-Typedef 0x55adbbd4b2d0 'int64_t'
|   `-TypedefType 0x55adbbd244d0 '__int64_t' sugar
|     |-Typedef 0x55adbbd240a8 '__int64_t'
|     `-BuiltinType 0x55adbbce2390 'long'
|-EnumDecl 0x55adbc1e2118 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55adbc1e2290 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55adbc1e2270 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55adbc1e2248 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55adbc1e2230 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55adbc1e2200 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55adbc1e2388 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55adbc1e2368 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55adbc1e2340 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55adbc1e2328 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55adbc1e2300 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55adbc1e22e0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55adbc1e23d8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55adbc1e24e0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55adbc1e4000 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc1e24c0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55adbc1e24a0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55adbc1e2570 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55adbc1e4018 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc1e2550 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55adbc1e2530 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55adbc1e2600 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55adbc1e4030 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc1e25e0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55adbc1e25c0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55adbc1e2690 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55adbc1e4048 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc1e2670 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55adbc1e2650 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55adbc1e2720 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55adbc1e4060 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc1e2700 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55adbc1e26e0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55adbc1e27b0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55adbc1e4078 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc1e2790 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55adbc1e2770 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55adbc1e2840 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55adbc1e4090 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc1e2820 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55adbc1e2800 <col:26> 'int' EnumConstant 0x55adbc1e24e0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55adbc1e2910 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55adbc1e40a8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc1e28f0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55adbc1e28d0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55adbc1e2890 <col:27> 'int' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55adbc1e28b0 <col:44> 'int' EnumConstant 0x55adbc1e27b0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55adbc1e3fb0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55adbc1e40c0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc1e29c0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55adbc1e29a0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55adbc1e2960 <col:27> 'int' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55adbc1e2980 <col:44> 'int' EnumConstant 0x55adbc1e2690 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55adbc1e40d8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55adbc1e41e0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55adbc1e4230 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc1e41c0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55adbc1e41a0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55adbc1e4258 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55adbbe3ffb0 'uninitialized_type'
|   `-CXXRecord 0x55adbbe3ff18 'uninitialized_type'
|-CXXRecordDecl 0x55adbc1e42b0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55adbc1e43c0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55adbc1edf68 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55adbc1f3848 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55adbc1f3968 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55adbc1f3920 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55adbc1f38b0 <col:9> '<bound member function type>' ->assign 0x55adbc1eb048
|     | `-CXXThisExpr 0x55adbc1f38a0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55adbc1f38e0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55adbc1f3950 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55adbc1f3900 <col:19> 'int' 0
|-CXXConstructorDecl 0x55adbc1e4608 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55adbc1e4480 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55adbc1e44f8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55adbc1f32f0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55adbc1f32d0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55adbc1edf68 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55adbc1f3980 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55adbc1f3ad0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55adbc1f3a58 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55adbc1f39e8 <col:9> '<bound member function type>' ->assign 0x55adbc1eb048
|     | `-CXXThisExpr 0x55adbc1f39d8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55adbc1f3aa0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55adbc1f3a88 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55adbc1f3a18 <col:16> 'long' lvalue ParmVar 0x55adbc1e4480 'sec' 'long'
|     `-ImplicitCastExpr 0x55adbc1f3ab8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc1f3a38 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1e44f8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55adbc1e4868 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55adbc1e46d8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55adbc1e4750 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55adbc1f3328 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55adbc1f3308 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55adbc1edf68 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55adbc1f3ae8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55adbc1f3c20 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55adbc1f3bc0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55adbc1f3b50 <col:9> '<bound member function type>' ->assign 0x55adbc1eb048
|     | `-CXXThisExpr 0x55adbc1f3b40 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55adbc1f3bf0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55adbc1f3b80 <col:16> 'int' lvalue ParmVar 0x55adbc1e46d8 'sec' 'int'
|     `-ImplicitCastExpr 0x55adbc1f3c08 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc1f3ba0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1e4750 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55adbc1e4ac8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55adbc1e4938 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55adbc1e49b0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55adbc1f3360 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55adbc1f3340 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55adbc1edf68 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55adbc1f3c38 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55adbc1f3d88 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55adbc1f3d10 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55adbc1f3ca0 <col:9> '<bound member function type>' ->assign 0x55adbc1eb048
|     | `-CXXThisExpr 0x55adbc1f3c90 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55adbc1f3d58 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55adbc1f3d40 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55adbc1f3cd0 <col:16> 'unsigned long' lvalue ParmVar 0x55adbc1e4938 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55adbc1f3d70 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc1f3cf0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1e49b0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55adbc1e4d28 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55adbc1e4b98 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55adbc1e4c10 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55adbc1f3398 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55adbc1f3378 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55adbc1edf68 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55adbc1f3da0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55adbc1f3ef0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55adbc1f3e78 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55adbc1f3e08 <col:9> '<bound member function type>' ->assign 0x55adbc1eb048
|     | `-CXXThisExpr 0x55adbc1f3df8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55adbc1f3ec0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55adbc1f3ea8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55adbc1f3e38 <col:16> 'unsigned int' lvalue ParmVar 0x55adbc1e4b98 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55adbc1f3ed8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc1f3e58 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1e4c10 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55adbc1e4e88 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55adbc1e4df8 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55adbc1e5028 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55adbc1e4f60 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55adbc1e5258 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55adbc1e5160 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55adbc1e5408 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55adbc1e5348 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55adbc1edf68 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55adbc1f3f90 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55adbc1f3f08 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55adbc1e5348 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55adbc1f3ff0 <col:19, line:214:5>
|-CXXConstructorDecl 0x55adbc1e55d8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55adbc1e5518 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55adbc1edf68 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55adbc1f4000 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55adbc1f40b0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55adbc1f4088 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55adbc1f4058 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55adbc1e5518 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55adbc1e57c8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55adbc1e5740 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55adbc1e1c40 'Timestamp'
|   | `-CXXRecord 0x55adbc1e1e98 'Timestamp'
|   `-ParenType 0x55adbc1e56e0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55adbc1e56b0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55adbc1e21e0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55adbc1e2058 'seconds_type'
|         `-TypedefType 0x55adbbe40380 'int32_t' sugar
|           |-Typedef 0x55adbbd4b268 'int32_t'
|           `-TypedefType 0x55adbbd243b0 '__int32_t' sugar
|             |-Typedef 0x55adbbd23fc8 '__int32_t'
|             `-BuiltinType 0x55adbbce2370 'int'
|-CXXConversionDecl 0x55adbc1e5908 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55adbc1e59d8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55adbc1f41b8 <col:37, line:231:5>
|   `-ReturnStmt 0x55adbc1f41a8 <line:227:9, col:23>
|     `-BinaryOperator 0x55adbc1f4188 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55adbc1f4158 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55adbc1f4108 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55adbc1ecfb8
|       |   `-MemberExpr 0x55adbc1f40d8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55adbc1edf68
|       |     `-CXXThisExpr 0x55adbc1f40c8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55adbc1f4170 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55adbc1f4138 <col:23> 'int' 0
|-CXXMethodDecl 0x55adbc1e5a98 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55adbc1e5b58 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55adbc1e5c18 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55adbc1e5cd8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55adbc1e5d98 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55adbc1e5f08 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55adbc1e5e48 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55adbc1e6050 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55adbc1e5fc0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc1e6118 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55adbc1e61b8 <col:54> "" ""
|-CXXMethodDecl 0x55adbc1e6248 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55adbc1e62e8 <col:54> "" ""
|-CXXMethodDecl 0x55adbc1e6378 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55adbc1e6418 <col:54> "" ""
|-CXXMethodDecl 0x55adbc1e6518 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55adbc1e65e8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55adbc1e6718 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55adbc1e6810 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55adbc1e6948 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55adbc1f43d0 <col:39, line:271:5>
|   `-ReturnStmt 0x55adbc1f43c0 <line:267:9, col:61>
|     `-CallExpr 0x55adbc1f4360 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55adbc1f4348 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55adbc1f41d0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55adbc1ee298 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55adbc1f4390 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55adbc1f4230 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55adbc1ecfb8
|       |   `-MemberExpr 0x55adbc1f4200 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55adbc1edf68
|       |     `-CXXThisExpr 0x55adbc1f41f0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55adbc1f43a8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55adbc1f42d0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55adbc1f42a0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55adbc1f4260 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55adbc1f42b8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55adbc1f4280 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e27b0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55adbc1e6a08 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55adbc1f4590 <col:39, line:279:5>
|   `-ReturnStmt 0x55adbc1f4580 <line:275:9, col:61>
|     `-CallExpr 0x55adbc1f4520 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55adbc1f4508 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55adbc1f43e8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55adbc1ee298 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55adbc1f4550 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55adbc1f4448 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55adbc1ecfb8
|       |   `-MemberExpr 0x55adbc1f4418 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55adbc1edf68
|       |     `-CXXThisExpr 0x55adbc1f4408 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55adbc1f4568 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55adbc1f44e8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55adbc1f44b8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55adbc1f4478 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55adbc1f44d0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55adbc1f4498 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2690 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55adbc1e6ac8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55adbc1f4728 <col:39, line:287:5>
|   `-ReturnStmt 0x55adbc1f4718 <line:283:9, col:53>
|     `-BinaryOperator 0x55adbc1f46f8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55adbc1f46c8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55adbc1f45e8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55adbc1ecfb8
|       |   `-MemberExpr 0x55adbc1f45b8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55adbc1edf68
|       |     `-CXXThisExpr 0x55adbc1f45a8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55adbc1f46e0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55adbc1f46a8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55adbc1f4688 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55adbc1f4658 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55adbc1f4618 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e24e0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55adbc1f4670 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55adbc1f4638 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55adbc1e6bb8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55adbc1f59c0 <col:40, line:293:5>
|   |-DeclStmt 0x55adbc1f4870 <line:291:9, col:48>
|   | `-VarDecl 0x55adbc1f4750 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55adbc1f4850 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55adbc1f47f8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55adbc1f47c8 <col:22> '<bound member function type>' ->subsec 0x55adbc1e5b58
|   |     |   `-CXXThisExpr 0x55adbc1f47b8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55adbc1f4838 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55adbc1f4818 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2910 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55adbc1f59b0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55adbc1f5998 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55adbc1f5968 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55adbc1f5950 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55adbc1f5930 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55adbc1f5900 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55adbc1f5698 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55adbc1f5680 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55adbc1f4888 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55adbc1f4750 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55adbc1f58a0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55adbc1f5888 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55adbc1f5858 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55adbc1f56b0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55adbc1f5620 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55adbc1f5608 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55adbc1f55b8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55adbc1e1de8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55adbc1f5558 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55adbc1f48b8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55adbc1f48a8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55adbc1f55a0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55adbc1f5588 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55adbc1f4d78 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55adbc1f48e0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55adbc1f4970 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55adbc1f4940 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55adbc1f4900 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2910 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55adbc1f4958 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55adbc1f4920 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55adbc1f4750 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55adbc1f58d0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55adbc1f5668 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55adbc1f5658 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55adbc1e6c78 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55adbc1f5f18 <col:40, line:302:5>
|   |-DeclStmt 0x55adbc1f5b10 <line:297:9, col:48>
|   | `-VarDecl 0x55adbc1f59f0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55adbc1f5af0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55adbc1f5a98 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55adbc1f5a68 <col:22> '<bound member function type>' ->subsec 0x55adbc1e5b58
|   |     |   `-CXXThisExpr 0x55adbc1f5a58 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55adbc1f5ad8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55adbc1f5ab8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e3fb0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55adbc1f5f08 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55adbc1f5ef0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55adbc1f5ec0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55adbc1f5ea8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55adbc1f5e88 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55adbc1f5e58 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55adbc1f5d80 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55adbc1f5d68 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55adbc1f5b28 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55adbc1f59f0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55adbc1f5df8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55adbc1f5de0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55adbc1f5db0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55adbc1f5d98 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55adbc1f5d08 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55adbc1f5cf0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55adbc1f5cd0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55adbc1e1de8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55adbc1f5c70 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55adbc1f5b58 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55adbc1f5b48 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55adbc1f5cb8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55adbc1f5ca0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55adbc1f5c30 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55adbc1f5b80 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55adbc1f5c10 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55adbc1f5be0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55adbc1f5ba0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e3fb0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55adbc1f5bf8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55adbc1f5bc0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55adbc1f59f0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55adbc1f5e28 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55adbc1f5d50 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55adbc1f5d40 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55adbc1e6d38 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55adbc1f5fa0 <col:40, line:306:5>
|   `-ReturnStmt 0x55adbc1f5f90 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55adbc1f5f60 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55adbc1f5f48 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55adbc1f5f38 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55adbc1e6ed8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55adbc1e6de8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55adbc1e70a8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55adbc1e6fb0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55adbc1e7198 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55adbc1e7308 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55adbc1e7248 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55adbc1f60e8 <col:56, line:320:5>
|   `-ReturnStmt 0x55adbc1f60d8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55adbc1f60c0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55adbc1f6090 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55adbc1f6078 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55adbc1f6038 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55adbc1f6008 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55adbc1f5fc8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55adbc1e7248 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55adbc1f6020 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55adbc1f5fe8 <col:31> 'int' 0
|-CXXMethodDecl 0x55adbc1e7548 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55adbc1e73c0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55adbc1e7438 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc1f62b8 <col:72, line:326:5>
|   `-ReturnStmt 0x55adbc1f62a8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55adbc1f6290 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55adbc1f6260 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55adbc1f6248 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55adbc1f6208 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55adbc1f61f0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55adbc1f6110 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55adbc1e73c0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55adbc1f61b0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55adbc1f6198 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55adbc1f6130 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55adbc1ec710 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55adbc1f61d8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55adbc1f6150 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1e7438 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc1e76f8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55adbc1e7608 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55adbc1ffe40 <col:56, line:337:5>
|   |-DeclStmt 0x55adbc1f65b8 <line:329:9, col:51>
|   | `-VarDecl 0x55adbc1f62e0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55adbc1f65a0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55adbc1f6570 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55adbc1f6558 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55adbc1f6540 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55adbc1f6510 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55adbc1f64f8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55adbc1f64e0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55adbc1f63d0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55adbc1ffc30 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55adbc1f6620 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55adbc1ecfb8
|   | | `-MemberExpr 0x55adbc1f65f0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55adbc1edf68
|   | |   `-DeclRefExpr 0x55adbc1f65d0 <col:9> 'Timestamp' lvalue Var 0x55adbc1f62e0 't' 'Timestamp'
|   | `-BinaryOperator 0x55adbc1ffc10 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55adbc1ffbe0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55adbc1f6650 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55adbc1e7608 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55adbc1ffbf8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55adbc1f6700 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55adbc1f66e0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55adbc1f66b0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55adbc1f6670 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55adbc1f66c8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55adbc1f6690 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e27b0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55adbc1ffe28 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55adbc1ffdf8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55adbc1ffde0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55adbc1ffdc0 <col:16> 'Timestamp' lvalue Var 0x55adbc1f62e0 't' 'Timestamp'
|-CXXMethodDecl 0x55adbc1e78c0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55adbc1e77b0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55adbc1e7828 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc1ffff8 <col:72, line:343:5>
|   `-ReturnStmt 0x55adbc1fffe8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55adbc1fffd0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55adbc1fffa0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55adbc1fff88 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55adbc1fff48 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55adbc1fff30 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55adbc1ffe78 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55adbc1e77b0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55adbc1ffef0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55adbc1ffed8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55adbc1ffe98 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55adbc1ec858 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55adbc1fff18 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55adbc1ffeb8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1e7828 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc1e7a10 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55adbc1e7980 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55adbc200440 <col:56, line:354:5>
|   |-DeclStmt 0x55adbc2001e8 <line:346:9, col:51>
|   | `-VarDecl 0x55adbc200020 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55adbc2001d0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55adbc2001a0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55adbc200188 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55adbc200170 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55adbc200140 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55adbc200128 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55adbc200110 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55adbc2000e0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55adbc2003a0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55adbc200250 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55adbc1ecfb8
|   | | `-MemberExpr 0x55adbc200220 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55adbc1edf68
|   | |   `-DeclRefExpr 0x55adbc200200 <col:9> 'Timestamp' lvalue Var 0x55adbc200020 't' 'Timestamp'
|   | `-BinaryOperator 0x55adbc200380 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55adbc200350 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55adbc200280 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55adbc1e7980 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55adbc200368 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55adbc200330 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55adbc200310 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55adbc2002e0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55adbc2002a0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55adbc2002f8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55adbc2002c0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2690 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55adbc200428 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55adbc2003f8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55adbc2003e0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55adbc2003c0 <col:16> 'Timestamp' lvalue Var 0x55adbc200020 't' 'Timestamp'
|-CXXMethodDecl 0x55adbc1e7bd8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55adbc1e7ac8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55adbc1e7b40 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc2005f8 <col:72, line:360:5>
|   `-ReturnStmt 0x55adbc2005e8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55adbc2005d0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55adbc2005a0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55adbc200588 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55adbc200548 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55adbc200530 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55adbc200478 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55adbc1e7ac8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55adbc2004f0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55adbc2004d8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55adbc200498 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55adbc1ec9a0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55adbc200518 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55adbc2004b8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1e7b40 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc1e7d28 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55adbc1e7c98 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55adbc200a68 <col:56, line:371:5>
|   |-DeclStmt 0x55adbc2007e8 <line:363:9, col:51>
|   | `-VarDecl 0x55adbc200620 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55adbc2007d0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55adbc2007a0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55adbc200788 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55adbc200770 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55adbc200740 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55adbc200728 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55adbc200710 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55adbc2006e0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55adbc2009c8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55adbc200850 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55adbc1ecfb8
|   | | `-MemberExpr 0x55adbc200820 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55adbc1edf68
|   | |   `-DeclRefExpr 0x55adbc200800 <col:9> 'Timestamp' lvalue Var 0x55adbc200620 't' 'Timestamp'
|   | `-CallExpr 0x55adbc200968 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55adbc200950 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55adbc200880 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55adbc1ee298 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55adbc200998 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55adbc2008a0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55adbc1e7c98 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55adbc2009b0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55adbc200930 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55adbc200900 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55adbc2008c0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e24e0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55adbc200918 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55adbc2008e0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55adbc200a50 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55adbc200a20 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55adbc200a08 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55adbc2009e8 <col:16> 'Timestamp' lvalue Var 0x55adbc200620 't' 'Timestamp'
|-CXXMethodDecl 0x55adbc1e7e18 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55adbc200ba8 <col:39, line:377:5>
|   `-ReturnStmt 0x55adbc200b98 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55adbc200b80 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55adbc200b50 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55adbc200b38 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55adbc200af8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55adbc200aa0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55adbc200ae0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55adbc200ac0 <col:29> 'int' 1
|-CXXMethodDecl 0x55adbc1e7ed8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55adbc200c88 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55adbc200c40 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55adbc200bd0 <col:9> '<bound member function type>' ->assign 0x55adbc1eb048
|     | `-CXXThisExpr 0x55adbc200bc0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55adbc200c00 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55adbc200c70 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55adbc200c20 <col:19> 'int' 0
|-CXXMethodDecl 0x55adbc1eb048 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55adbc1eaf00 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55adbc1eaf78 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55adbc1f33d0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55adbc1f33b0 <col:60> 'int' 0
| `-CompoundStmt 0x55adbc200e80 <col:63, line:395:5>
|   `-BinaryOperator 0x55adbc200e60 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55adbc200ce0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55adbc1ecfb8
|     | `-MemberExpr 0x55adbc200cb0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55adbc1edf68
|     |   `-CXXThisExpr 0x55adbc200ca0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55adbc200e40 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55adbc200dd0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55adbc200d70 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55adbc200d58 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55adbc200d40 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55adbc200d10 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55adbc1eaf00 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55adbc200db8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55adbc200d98 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55adbc200e28 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55adbc200e10 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55adbc200df0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1eaf78 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc1eb218 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55adbc1eb108 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55adbc1eb180 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc200fd8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55adbc200f90 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55adbc200ea8 <col:9> '<bound member function type>' ->assign 0x55adbc1eb048
|     | `-CXXThisExpr 0x55adbc200e98 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55adbc200fc0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55adbc200ed8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55adbc1eb108 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55adbc200f50 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55adbc200f38 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55adbc200ef8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55adbc1ec858 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55adbc200f78 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55adbc200f18 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1eb180 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc1eb3e8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55adbc1eb2d8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55adbc1eb350 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc201130 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55adbc2010e8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55adbc201000 <col:9> '<bound member function type>' ->assign 0x55adbc1eb048
|     | `-CXXThisExpr 0x55adbc200ff0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55adbc201118 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55adbc201030 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55adbc1eb2d8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55adbc2010a8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55adbc201090 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55adbc201050 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55adbc1ec9a0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55adbc2010d0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55adbc201070 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1eb350 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc1eb5b8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55adbc1eb4a8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55adbc1eb520 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55adbc1f3408 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55adbc1f33e8 <col:57> 'int' 0
| `-DeprecatedAttr 0x55adbc1eb668 <col:75> "" ""
|-CXXMethodDecl 0x55adbc1eb7f8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55adbc1eb6e8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55adbc1eb760 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55adbc1eb8a8 <col:74> "" ""
|-CXXMethodDecl 0x55adbc1eba38 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55adbc1eb928 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55adbc1eb9a0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55adbc1ebae8 <col:74> "" ""
|-CXXMethodDecl 0x55adbc1ebb78 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55adbc1ebc18 <col:42> "" ""
|-CXXMethodDecl 0x55adbc1ebdc0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55adbc1ebca0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55adbc1ebd20 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55adbc1ebe90 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55adbc1ebf50 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55adbc1ebff0 <col:20>
| `-OptimizeNoneAttr 0x55adbc1ec048 <col:30>
|-CXXMethodDecl 0x55adbc1ec090 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55adbc1ec150 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55adbc1ec210 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55adbc1ec2d0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55adbc1ec390 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55adbc1ec450 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55adbc1ec510 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55adbc1ec5d0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55adbc1ec710 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55adbc1ec680 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc201278 <col:58, line:512:5>
|   `-ReturnStmt 0x55adbc201268 <line:511:9, col:53>
|     `-BinaryOperator 0x55adbc201248 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55adbc201218 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55adbc201148 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1ec680 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55adbc201230 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55adbc2011f8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55adbc2011d8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55adbc2011a8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55adbc201168 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55adbc2011c0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55adbc201188 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e27b0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55adbc1ec858 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55adbc1ec7c8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc2013c0 <col:58, line:516:5>
|   `-ReturnStmt 0x55adbc2013b0 <line:515:9, col:53>
|     `-BinaryOperator 0x55adbc201390 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55adbc201360 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55adbc201290 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1ec7c8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55adbc201378 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55adbc201340 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55adbc201320 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55adbc2012f0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55adbc2012b0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55adbc201308 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55adbc2012d0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2690 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55adbc1ec9a0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55adbc1ec910 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc201508 <col:58, line:520:5>
|   `-ReturnStmt 0x55adbc2014f8 <line:519:9, col:53>
|     `-BinaryOperator 0x55adbc2014d8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55adbc2014a8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55adbc2013d8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1ec910 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55adbc2014c0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55adbc201488 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55adbc201468 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55adbc201438 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55adbc2013f8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e24e0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55adbc201450 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55adbc201418 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55adbc1ecae8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55adbc1eca58 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc201650 <col:60, line:524:5>
|   `-ReturnStmt 0x55adbc201640 <line:523:9, col:55>
|     `-BinaryOperator 0x55adbc201620 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55adbc2015f0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55adbc201520 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1eca58 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55adbc201608 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55adbc2015d0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55adbc2015b0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55adbc201580 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55adbc201540 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55adbc201598 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55adbc201560 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e27b0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55adbc1ecc30 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55adbc1ecba0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc201798 <col:60, line:528:5>
|   `-ReturnStmt 0x55adbc201788 <line:527:9, col:55>
|     `-BinaryOperator 0x55adbc201768 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55adbc201738 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55adbc201668 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1ecba0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55adbc201750 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55adbc201718 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55adbc2016f8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55adbc2016c8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55adbc201688 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55adbc2016e0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55adbc2016a8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2690 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55adbc1ecd78 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55adbc1ecce8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc2018e0 <col:60, line:532:5>
|   `-ReturnStmt 0x55adbc2018d0 <line:531:9, col:55>
|     `-BinaryOperator 0x55adbc2018b0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55adbc201880 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55adbc2017b0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1ecce8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55adbc201898 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55adbc201860 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55adbc201840 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55adbc201810 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55adbc2017d0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e24e0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55adbc201828 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55adbc2017f0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55adbc1e2840 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55adbc1ece20 prev 0x55adbc1e42b0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55adbc1ecf18 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55adbc1ecfb8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55adbc1f3458 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55adbc1f3838 <col:11>
| |-CXXConstructorDecl 0x55adbc1f3530 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55adbc1f3618 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55adbc1f3f80 <col:11>
| |-CXXConstructorDecl 0x55adbc1f36b8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55adbc1f37c8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55adbc1f57d8 <col:11>
| |-CXXDestructorDecl 0x55adbc1f4ae8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55adbbef4e88 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55adbbef4f98 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55adbbef5860 <col:11>
| |   `-ReturnStmt 0x55adbbef5850 <col:11>
| |     `-UnaryOperator 0x55adbbef5838 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55adbbef5828 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55adbbef5008 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55adbbef5118 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55adbc27f7c0 <col:11>
|     `-ReturnStmt 0x55adbc27f7b0 <col:11>
|       `-UnaryOperator 0x55adbc27f798 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55adbc27f788 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55adbc1ed020 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55adbc1ed120 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55adbc1ed320 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc1ed100 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55adbc1ed0e0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55adbc1ed1b0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55adbc1ed338 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc1ed190 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55adbc1ed170 <col:23> 'int' 1
| |-EnumConstantDecl 0x55adbc1ed240 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55adbc1ed350 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc1ed220 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55adbc1ed200 <col:23> 'int' 2
| `-EnumConstantDecl 0x55adbc1ed2d0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55adbc1ed368 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc1ed2b0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55adbc1ed290 <col:27> 'int' 3
|-CXXMethodDecl 0x55adbc1ed3a8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55adbc1ed470 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55adbc1ed678 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55adbc1ed520 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55adbc1ed5a0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55adbc1f3420 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55adbc1ed888 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55adbc1ed738 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55adbc1ed7b0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55adbc1ed958 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55adbc1eda18 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55adbc1edb88 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55adbc1edac8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55adbc1edc50 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55adbc1edd10 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55adbc1eddd0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55adbc1ede90 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55adbc1edf30 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55adbc1edf68 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55adbc1edfd8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55adbc2018f8 <col:27, line:684:5>
|-CXXMethodDecl 0x55adbc1ee098 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55adbc201908 <col:27, line:696:5>
|-CXXMethodDecl 0x55adbc1ee298 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55adbc1ee148 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55adbc1ee1c0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc201a90 <col:66, line:700:5>
|   `-ReturnStmt 0x55adbc201a80 <line:699:9, col:31>
|     `-CallExpr 0x55adbc201a20 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55adbc201a08 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55adbc2019b8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55adbc06f1d8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55adbc201a50 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55adbc201978 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55adbc1ee148 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55adbc201a68 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55adbc201998 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1ee1c0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc1ee608 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55adbc1ee358 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55adbc1ee3d0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55adbc1ee448 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55adbc1ee4c0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc201de0 <col:64, line:707:5>
|   |-DeclStmt 0x55adbc201b20 <line:704:9, col:24>
|   | `-VarDecl 0x55adbc201ab8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55adbc201d30 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55adbc201b38 <col:9> 'int32_t':'int' lvalue ParmVar 0x55adbc1ee3d0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55adbc201d18 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55adbc201cb0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55adbc201c98 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc201c18 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55adbc074828 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55adbc201ce8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55adbc201bb8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55adbc1ee448 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55adbc201d00 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55adbc201bd8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc1ee4c0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55adbc201bf8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55adbc201ab8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55adbc201dc0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55adbc201d50 <col:9> 'int32_t':'int' lvalue ParmVar 0x55adbc1ee358 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55adbc201da8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55adbc201d90 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55adbc201d70 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55adbc201ab8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55adbc1ee8a8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55adbc1ee6d8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55adbc1ee750 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55adbc1ee7c8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55adbc1eeb48 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55adbc1ee970 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55adbc1ee9e8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55adbc1eea60 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55adbc1eecd8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55adbc1eec10 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55adbc1f2720 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55adbc1eed90 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55adbc1eee08 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55adbc1f29e8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55adbc1f2928 parent 0x55adbbce2278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55adbc1f27e0 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55adbc1f2858 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55adbc1f2c08 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55adbc1f2b48 parent 0x55adbbce2278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55adbc1f2a38 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55adbc1f2ab0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55adbc1f2dd0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55adbc1f2d18 parent 0x55adbbce2278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55adbc1f2c58 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55adbc1f3058 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55adbc1f2f98 parent 0x55adbbce2278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55adbc1f2e48 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55adbc1f2ec0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55adbc1f3278 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55adbc1f31b8 parent 0x55adbbce2278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55adbc1f30a8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55adbc1f3120 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55adbc1f4990 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc1f4a78 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55adbc1edf68 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55adbc1f54e8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55adbc1f54a0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55adbc1edf68
| |     `-DeclRefExpr 0x55adbc1f5480 <col:7> 'const Timestamp' lvalue ParmVar 0x55adbc1f4a78 '' 'const Timestamp &'
| `-CompoundStmt 0x55adbc1f5548 <col:7>
|-CXXConstructorDecl 0x55adbc1f4bf8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc1f4d08 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55adbc1edf68 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55adbc1f57e8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55adbc1f5790 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55adbc1edf68
| |     `-CXXStaticCastExpr 0x55adbc1f5760 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc1f5730 <col:7> 'Timestamp' lvalue ParmVar 0x55adbc1f4d08 '' 'Timestamp &&'
| `-CompoundStmt 0x55adbc1f5848 <col:7>
|-CXXDestructorDecl 0x55adbc1f4db8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55adbbef4ce0 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbbef4de8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55adbbef58d8 <col:7>
|   |-CXXMemberCallExpr 0x55adbbef5878 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55adbbef57b8 <col:7> '<bound member function type>' .operator= 0x55adbbef4e88
|   | | `-MemberExpr 0x55adbbef56c8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55adbc1edf68
|   | |   `-CXXThisExpr 0x55adbbef56b8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55adbbef5788 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55adbc1edf68
|   |   `-DeclRefExpr 0x55adbbef5768 <col:7> 'const Timestamp' lvalue ParmVar 0x55adbbef4de8 '' 'const Timestamp &'
|   `-ReturnStmt 0x55adbbef58c8 <col:7>
|     `-UnaryOperator 0x55adbbef58b0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55adbbef58a0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55adbbef5188 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55adbbef5298 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55adbc27f838 <col:7>
    |-CXXMemberCallExpr 0x55adbc27f7d8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55adbc27f740 <col:7> '<bound member function type>' .operator= 0x55adbbef5008
    | | `-MemberExpr 0x55adbc27f610 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55adbc1edf68
    | |   `-CXXThisExpr 0x55adbc27f600 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55adbc27f710 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55adbc1edf68
    |   `-CXXStaticCastExpr 0x55adbc27f6e0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55adbc27f6b0 <col:7> 'Timestamp' lvalue ParmVar 0x55adbbef5298 '' 'Timestamp &&'
    `-ReturnStmt 0x55adbc27f828 <col:7>
      `-UnaryOperator 0x55adbc27f810 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55adbc27f800 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc27c818 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55adbc27c948 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55adbc27d438 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.17 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc4d9080 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc4d9198 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55adbc4d9268 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55adbc4d92c8 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55adbc4d9330 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55adbc4d93b8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55adbc4d9620 <col:16, line:46:5>
|   |-BinaryOperator 0x55adbc4d9568 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55adbc4d9488 <col:9> 'TaskLink *' lvalue ->_prev 0x55adbc4d9268
|   | | `-CXXThisExpr 0x55adbc4d9478 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55adbc4d9550 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55adbc4d9530 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55adbc4d94c8 <col:17> 'TaskLink *' lvalue ->_next 0x55adbc4d92c8
|   |     | `-CXXThisExpr 0x55adbc4d94b8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55adbc4d9518 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55adbc4d94f8 <col:25> 'int' 0
|   `-BinaryOperator 0x55adbc4d9600 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55adbc4d9598 <col:9> 'unsigned int' lvalue ->_pass 0x55adbc4d9330
|     | `-CXXThisExpr 0x55adbc4d9588 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55adbc4d95e8 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55adbc4d95c8 <col:17> 'int' 0
|-CXXConstructorDecl 0x55adbc5500e8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55adbc5500e8
| `-ParmVarDecl 0x55adbc5501f8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55adbc550298 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55adbc550298
| `-ParmVarDecl 0x55adbc5503a8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55adbc550598 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55adbc550598
|-CXXMethodDecl 0x55adbc550d98 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55adbc550d98
| `-ParmVarDecl 0x55adbc550ea8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55adbc550f18 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55adbc550f18
  `-ParmVarDecl 0x55adbc551028 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc4dffb8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55adbc4e01c8 prev 0x55adbc4dffb8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55adbc4e3f20 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55adbc4e3ed0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55adbc4e3eb0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55adbc4e3d60 'type'
|     `-SubstTemplateTypeParmType 0x55adbc4e3b80 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55adbbfc9040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfc8fe8 'T'
|       `-RecordType 0x55adbc4e36d0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55adbc4e35e8 'sized_array_memory'
|-FieldDecl 0x55adbc4e7b50 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55adbc4e7ba0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55adbc4e7bd8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55adbc4e0260 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|   `-RecordType 0x55adbc4df1c0 'TimerSet::heap_element'
|     `-CXXRecord 0x55adbc4df130 'heap_element'
|-TypedefDecl 0x55adbc4e7c98 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55adbc4e7c60 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55adbc4e0260 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc4df1c0 'TimerSet::heap_element'
|       `-CXXRecord 0x55adbc4df130 'heap_element'
|-TypedefDecl 0x55adbc4e7d28 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55adbc4e7cf0 'const TimerSet::heap_element &'
|   `-QualType 0x55adbc4e0261 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55adbc4e0260 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc4df1c0 'TimerSet::heap_element'
|         `-CXXRecord 0x55adbc4df130 'heap_element'
|-TypedefDecl 0x55adbc4e7db8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55adbc4e7d80 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55adbc4e0260 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc4df1c0 'TimerSet::heap_element'
|       `-CXXRecord 0x55adbc4df130 'heap_element'
|-TypedefDecl 0x55adbc4e7e78 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55adbc4e7e40 'const TimerSet::heap_element *'
|   `-QualType 0x55adbc4e0261 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55adbc4e0260 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc4df1c0 'TimerSet::heap_element'
|         `-CXXRecord 0x55adbc4df130 'heap_element'
|-TypedefDecl 0x55adbc4e8ad0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55adbc4e8a80 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55adbc4e8a60 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55adbc4e8998 'type'
|     `-LValueReferenceType 0x55adbc4e8960 'const TimerSet::heap_element &'
|       `-QualType 0x55adbc4e8701 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55adbc4e8700 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55adbbfd0b10 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55adbbfd0ab8 'T'
|           `-RecordType 0x55adbc4df1c0 'TimerSet::heap_element'
|             `-CXXRecord 0x55adbc4df130 'heap_element'
|-TypedefDecl 0x55adbc4e8b38 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55adbc4e7cf0 'const TimerSet::heap_element &'
|   `-QualType 0x55adbc4e0261 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55adbc4e0260 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc4df1c0 'TimerSet::heap_element'
|         `-CXXRecord 0x55adbc4df130 'heap_element'
|-TypedefDecl 0x55adbc4e8b90 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc4e8bf8 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55adbc4e7d80 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55adbc4e0260 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc4df1c0 'TimerSet::heap_element'
|       `-CXXRecord 0x55adbc4df130 'heap_element'
|-TypedefDecl 0x55adbc4e8c60 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55adbc4e7e40 'const TimerSet::heap_element *'
|   `-QualType 0x55adbc4e0261 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55adbc4e0260 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc4df1c0 'TimerSet::heap_element'
|         `-CXXRecord 0x55adbc4df130 'heap_element'
|-EnumDecl 0x55adbc4e8cb8 <line:134:5> col:5
| `-EnumConstantDecl 0x55adbc4e8db0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55adbc4e8d90 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55adbc0003c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55adbc0003a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55adbc000380 <col:40> 'int' 1
|-CXXConstructorDecl 0x55adbc4e8e38 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55adbc4e90c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc4e8ef0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc4e8f90 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55adbc4e9388 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55adbc4e9270 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55adbc4e9648 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55adbc4e9530 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55adbc4e9990 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55adbc4e9870 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55adbc4e9ca0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55adbc4e9b80 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55adbc4e9f90 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc4e9dd8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc4e9e50 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55adbc4ea0e8 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55adbc4ea1c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc4ea220 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4ea268 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55adbc4ea318 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc4ea370 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4ea438 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55adbc4ea4e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc4ea540 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4ea588 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55adbc4ea638 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc4ea690 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4ea6d8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55adbc4ea788 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc4ea7e0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4ea828 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55adbc4ea8d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc4ea930 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4ea958 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc4eaa08 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc4eaab8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc4eac78 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc4eab68 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc4eabe0 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55adbc4eadc8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc4ead38 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc4eaf78 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55adbc4eae80 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc4eb030 <col:20>
| `-OptimizeNoneAttr 0x55adbc4eb088 <col:30>
|-CXXMethodDecl 0x55adbc4ecaa0 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55adbc4eb0b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc4ecb58 <col:20>
| `-OptimizeNoneAttr 0x55adbc4ecbb0 <col:30>
|-CXXMethodDecl 0x55adbc4ecc68 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc4ecbd8 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc4ecdb0 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc4ecd20 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc4ecee8 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55adbc4ed018 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55adbc4ed0e8 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55adbc4ed1b8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55adbc4ed2f8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc4ed268 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc4ed440 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc4ed3b0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc4ed588 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55adbc4ed4f8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc4ed640 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55adbc4ed740 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55adbc4ed6b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc4ed7f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55adbc4ed8b8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55adbc4ed9b8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55adbc4edb68 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc4eda78 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55adbc4ee328 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55adbc4edc20 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55adbc4ee288 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55adbc4ee188 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55adbc4ee408 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc4ee558 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc4ee4c8 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55adbc4ee610 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55adbc4ee858 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc4ee6d0 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55adbc4ee748 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55adbc4eea18 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55adbc4ee928 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55adbc4eec68 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55adbc4eeae0 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55adbc4eeb58 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55adbc4eed28 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc4eef88 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55adbc4eee90 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55adbc4ef058 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55adbc4ef058

Layout: <CGRecordLayout
  LLVMType:%class.Vector.18 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.18 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc4ef1a0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55adbc4ef3a8 prev 0x55adbc4ef1a0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55adbc4f03c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55adbc4f0370 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55adbc4f0350 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55adbc4f0200 'type'
|     `-SubstTemplateTypeParmType 0x55adbc321250 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55adbbfc9040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfc8fe8 'T'
|       `-RecordType 0x55adbc320da0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55adbc320cb8 'sized_array_memory'
|-FieldDecl 0x55adbc4f04c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55adbc4f0510 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55adbc4f0548 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55adbc4ef440 'Timer *' sugar
|   |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|   `-PointerType 0x55adbc257df0 'Timer *'
|     `-RecordType 0x55adbc256f40 'Timer'
|       `-CXXRecord 0x55adbc1d6dc8 'Timer'
|-TypedefDecl 0x55adbc4f0608 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55adbc4f05d0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55adbc4ef440 'Timer *' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-PointerType 0x55adbc257df0 'Timer *'
|       `-RecordType 0x55adbc256f40 'Timer'
|         `-CXXRecord 0x55adbc1d6dc8 'Timer'
|-TypedefDecl 0x55adbc4f06c8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55adbc4f0690 'Timer *const &'
|   `-QualType 0x55adbc4ef441 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55adbc4ef440 'Timer *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbc257df0 'Timer *'
|         `-RecordType 0x55adbc256f40 'Timer'
|           `-CXXRecord 0x55adbc1d6dc8 'Timer'
|-TypedefDecl 0x55adbc4f0788 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55adbc4f0750 'Timer **'
|   `-SubstTemplateTypeParmType 0x55adbc4ef440 'Timer *' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-PointerType 0x55adbc257df0 'Timer *'
|       `-RecordType 0x55adbc256f40 'Timer'
|         `-CXXRecord 0x55adbc1d6dc8 'Timer'
|-TypedefDecl 0x55adbc4f0848 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55adbc4f0810 'Timer *const *'
|   `-QualType 0x55adbc4ef441 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55adbc4ef440 'Timer *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbc257df0 'Timer *'
|         `-RecordType 0x55adbc256f40 'Timer'
|           `-CXXRecord 0x55adbc1d6dc8 'Timer'
|-TypedefDecl 0x55adbc4f1420 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55adbc4f13d0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55adbc4f13b0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55adbc4f1340 'type'
|     `-SubstTemplateTypeParmType 0x55adbc4f1100 'Timer *' sugar
|       |-TemplateTypeParmType 0x55adbbfd1240 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfd11f0 'T'
|       `-PointerType 0x55adbc257df0 'Timer *'
|         `-RecordType 0x55adbc256f40 'Timer'
|           `-CXXRecord 0x55adbc1d6dc8 'Timer'
|-TypedefDecl 0x55adbc4f1488 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55adbc4f0690 'Timer *const &'
|   `-QualType 0x55adbc4ef441 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55adbc4ef440 'Timer *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbc257df0 'Timer *'
|         `-RecordType 0x55adbc256f40 'Timer'
|           `-CXXRecord 0x55adbc1d6dc8 'Timer'
|-TypedefDecl 0x55adbc4f14e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc4f1548 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55adbc4f0750 'Timer **'
|   `-SubstTemplateTypeParmType 0x55adbc4ef440 'Timer *' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-PointerType 0x55adbc257df0 'Timer *'
|       `-RecordType 0x55adbc256f40 'Timer'
|         `-CXXRecord 0x55adbc1d6dc8 'Timer'
|-TypedefDecl 0x55adbc4f15b0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55adbc4f0810 'Timer *const *'
|   `-QualType 0x55adbc4ef441 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55adbc4ef440 'Timer *' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-PointerType 0x55adbc257df0 'Timer *'
|         `-RecordType 0x55adbc256f40 'Timer'
|           `-CXXRecord 0x55adbc1d6dc8 'Timer'
|-EnumDecl 0x55adbc4f1608 <line:134:5> col:5
| `-EnumConstantDecl 0x55adbc4f1700 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55adbc4f16e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55adbc0003c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55adbc0003a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55adbc000380 <col:40> 'int' 1
|-CXXConstructorDecl 0x55adbc4f1788 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55adbc4f1a18 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc4f1840 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc4f18e0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55adbc4f1cd8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55adbc4f1bc0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55adbc4f1f98 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55adbc4f1e80 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55adbc4f22e0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55adbc4f21c0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55adbc4f25f0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55adbc4f24d0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55adbc4f28e0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc4f2728 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc4f27a0 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55adbc4f2a38 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55adbc4f2b18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc4f2b70 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4f2bb8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55adbc4f2c68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc4f2cc0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4f2d88 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc4f2e38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc4f2e90 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4f2ed8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc4f2f88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc4f2fe0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4f3028 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc4f30d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc4f3130 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4f3178 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55adbc4f3228 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc4f3280 <col:30> Inherited
|-CXXMethodDecl 0x55adbc4f32a8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc4f3358 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc4f3408 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc4f35c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc4f34b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc4f3530 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55adbc4f3718 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc4f3688 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc4f38c8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55adbc4f37d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc4f3980 <col:20>
| `-OptimizeNoneAttr 0x55adbc4f39d8 <col:30>
|-CXXMethodDecl 0x55adbc4f3af8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55adbc4f3a00 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc4f3bb0 <col:20>
| `-OptimizeNoneAttr 0x55adbc4f3c08 <col:30>
|-CXXMethodDecl 0x55adbc4f3cc0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc4f3c30 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc4f3e08 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc4f3d78 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc4f3f38 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55adbc4f4068 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55adbc4f4138 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55adbc4f4208 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55adbc4f4348 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc4f42b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc4f4490 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc4f4400 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc4f45d8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55adbc4f4548 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc4f4690 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55adbc4f4790 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55adbc4f4700 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc4f4848 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55adbc4f4908 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55adbc4f6070 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55adbc4f61f8 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc4f6130 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55adbc4f69b8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55adbc4f62b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55adbc4f6918 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55adbc4f6818 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55adbc4f6a98 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc4f6be8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc4f6b58 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55adbc4f6ca0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55adbc4f6ee8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc4f6d60 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55adbc4f6dd8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55adbc4f70a8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55adbc4f6fb8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55adbc4f72f8 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55adbc4f7170 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55adbc4f71e8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55adbc4f73b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc4f7618 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55adbc4f7520 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55adbc4f76e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55adbc4f76e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.19 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.19 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbbfb6a80 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbbfb6b98 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55adbbfb6c28 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55adbbfb6cb0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55adbbfb6da0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55adbbfb6ea0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55adbbfb6f60 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55adbbfb7020 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55adbbfb7148 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55adbbfb7148
| `-ParmVarDecl 0x55adbbfb7258 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55adbc4f8498 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55adbc4f8498
  `-ParmVarDecl 0x55adbc4f85a8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc4de2b0 prev 0x55adbc27d2c8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55adbc4de3a8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55adbc4de438 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55adbc4de4c0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55adbc4de5b8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55adbc4f8910 <col:43, col:67>
|   `-ReturnStmt 0x55adbc4f8900 <col:45, col:52>
|     `-CXXConstructExpr 0x55adbc4f88d0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55adbc4f88a0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55adbc4dfda0
|         `-CXXThisExpr 0x55adbc4f8890 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55adbc4de678 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55adbc4de880 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55adbc4de728 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55adbc4de7a0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55adbc4de978 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55adbc4dea40 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55adbc4f8990 <col:39, col:67>
|   `-ReturnStmt 0x55adbc4f8980 <col:41, col:48>
|     `-ImplicitCastExpr 0x55adbc4f8968 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55adbc4f8938 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55adbc4dfe88
|         `-CXXThisExpr 0x55adbc4f8928 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55adbc4deb08 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55adbc4f8a10 <col:35, col:59>
|   `-ReturnStmt 0x55adbc4f8a00 <col:37, col:44>
|     `-ImplicitCastExpr 0x55adbc4f89e8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55adbc4f89b8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55adbc4dfef0
|         `-CXXThisExpr 0x55adbc4f89a8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55adbc4dec50 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55adbc4debc0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55adbc4ded98 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55adbc4ded08 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55adbc4def98 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55adbc4dee50 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55adbc4deec8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55adbc4df068 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55adbc4df108 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55adbc4df130 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55adbc4df248 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55adbc4df2e8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55adbc4df348 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55adbc4df478 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55adbc4df3a8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55adbc4df2e8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55adbc4f8ae8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55adbc4f8a90 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55adbc4f8a60 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55adbc1d8438
|   |       `-ImplicitCastExpr 0x55adbc4f8ab0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55adbc4f8a48 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55adbc4f8a28 <col:17> 'Timer *' lvalue ParmVar 0x55adbc4df3a8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55adbc4df348 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55adbc4f8b80 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55adbc4f8b40 <col:41> 'Timer *' lvalue ParmVar 0x55adbc4df3a8 't_' 'Timer *'
|   `-CompoundStmt 0x55adbc4f8bd0 <col:45, line:44:2>
|-CXXRecordDecl 0x55adbc4df540 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55adbc4df658 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55adbc4df8a8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55adbc4df728 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55adbc4df7a0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55adbc4f8d30 <col:71, line:49:2>
|     `-ReturnStmt 0x55adbc4f8d20 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55adbc4f8ce8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55adbc4f8cd0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55adbc4f8cb0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55adbc20ea88 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55adbc4f8c00 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55adbc4df2e8
|         | `-DeclRefExpr 0x55adbc4f8be0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55adbc4df728 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55adbc4f8c50 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55adbc4df2e8
|           `-DeclRefExpr 0x55adbc4f8c30 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55adbc4df7a0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55adbc4df970 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55adbc4dfa88 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55adbc4dfca8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55adbc4dfb28 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55adbc4dfba0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55adbc4f8f38 <col:63, line:54:2>
|     `-BinaryOperator 0x55adbc4f8f18 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55adbc4f8dc8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55adbc27c768
|       | `-ImplicitCastExpr 0x55adbc4f8db0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55adbc4f8d80 <col:6, col:9> 'Timer *' lvalue ->t 0x55adbc4df348
|       |     `-ImplicitCastExpr 0x55adbc4f8d68 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55adbc4f8d48 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55adbc4dfba0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55adbc4f8f00 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55adbc4f8ee0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55adbc4f8e88 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55adbc4f8e68 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55adbc4f8e38 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55adbc4f8df8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55adbc4dfba0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55adbc4f8e50 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55adbc4f8e18 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55adbc4dfb28 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55adbc4f8ec8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55adbc4f8ea8 <col:39> 'int' 1
|-FieldDecl 0x55adbc4dfda0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55adbc4dfe10 <col:44, col:53> aligned
|   `-ConstantExpr 0x55adbc4dfdf0 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55adbc4dfd70 <col:52> 'int' 8
|-FieldDecl 0x55adbc4dfe88 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55adbc4dfef0 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55adbc4dff58 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55adbc4ef140 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55adbc4f77d0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55adbc4f7830 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55adbc4f7890 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55adbc4f78f0 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc4f79e0 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55adbc4f7950 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55adbc4f7aa8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55adbc4f9390 <col:29, line:81:5>
|   `-IfStmt 0x55adbc4f9368 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55adbc4f9020 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55adbc4f8fc0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55adbc4f8f90 <col:6, col:18> '<bound member function type>' .size 0x55adbc4ea958
|     |     `-ImplicitCastExpr 0x55adbc4f9008 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55adbc4f8f60 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55adbc4ef140
|     |         `-CXXThisExpr 0x55adbc4f8f50 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55adbc4f9210 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55adbc4f91f8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55adbc4f91d8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55adbbef4ce0 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55adbc4f9048 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55adbc4dfda0
|     | | `-CXXThisExpr 0x55adbc4f9038 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55adbc4f91c0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55adbc4f9190 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55adbc4df2e8
|     |     `-CXXMemberCallExpr 0x55adbc4f9168 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55adbc4f9138 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55adbc4ed2f8
|     |       | `-MemberExpr 0x55adbc4f9088 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55adbc4ef140
|     |       |   `-CXXThisExpr 0x55adbc4f9078 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55adbc4f9118 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55adbc4f9350 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55adbc4f9318 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55adbc4f9300 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55adbc4f92e0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55adbbef5188 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55adbc4f9258 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55adbc4dfda0
|         | `-CXXThisExpr 0x55adbc4f9248 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55adbc4f92c8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55adbc4f9298 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55adbc4f7be8 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55adbc4f7b58 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55adbc4f7cb0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55adbc4f7d70 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55adbc4f7e30 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55adbc4f7f20 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55adbc4f7f88 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55adbc4f7f88
| `-ParmVarDecl 0x55adbc4f8098 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55adbc4f8138 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55adbc4f8138
| `-ParmVarDecl 0x55adbc4f8248 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55adbc4f82e8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55adbc4f82e8
| `-ParmVarDecl 0x55adbc4f83f8 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55adbc4f8618 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55adbc4f8618
| `-ParmVarDecl 0x55adbc4f8728 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55adbc4f87b0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55adbc4f87b0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.18, %class.Vector.19, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.18, %class.Vector.19, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc10ad18 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55adbc10af28 prev 0x55adbc10ad18 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55adbc53a290 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55adbc53a240 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55adbc53a220 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55adbc53a0d0 'type'
|     `-SubstTemplateTypeParmType 0x55adbc321250 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55adbbfc9040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfc8fe8 'T'
|       `-RecordType 0x55adbc320da0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55adbc320cb8 'sized_array_memory'
|-FieldDecl 0x55adbc53a390 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55adbc53a3e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55adbc53a418 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55adbc10afc0 'pollfd' sugar
|   |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|   `-RecordType 0x55adbc108dd0 'pollfd'
|     `-CXXRecord 0x55adbc108d40 'pollfd'
|-TypedefDecl 0x55adbc53a4d8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55adbc53a4a0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55adbc10afc0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc108dd0 'pollfd'
|       `-CXXRecord 0x55adbc108d40 'pollfd'
|-TypedefDecl 0x55adbc53a598 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55adbc53a560 'const pollfd &'
|   `-QualType 0x55adbc10afc1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55adbc10afc0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc108dd0 'pollfd'
|         `-CXXRecord 0x55adbc108d40 'pollfd'
|-TypedefDecl 0x55adbc53a628 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55adbc53a5f0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55adbc10afc0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc108dd0 'pollfd'
|       `-CXXRecord 0x55adbc108d40 'pollfd'
|-TypedefDecl 0x55adbc53a6e8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55adbc53a6b0 'const pollfd *'
|   `-QualType 0x55adbc10afc1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55adbc10afc0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc108dd0 'pollfd'
|         `-CXXRecord 0x55adbc108d40 'pollfd'
|-TypedefDecl 0x55adbc53b2c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55adbc53b270 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55adbc53b250 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55adbc53b1e0 'type'
|     `-SubstTemplateTypeParmType 0x55adbc53afa0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55adbbfd1240 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfd11f0 'T'
|       `-RecordType 0x55adbc108dd0 'pollfd'
|         `-CXXRecord 0x55adbc108d40 'pollfd'
|-TypedefDecl 0x55adbc53b328 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55adbc53a560 'const pollfd &'
|   `-QualType 0x55adbc10afc1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55adbc10afc0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc108dd0 'pollfd'
|         `-CXXRecord 0x55adbc108d40 'pollfd'
|-TypedefDecl 0x55adbc53b380 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc53b3e8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55adbc53a5f0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55adbc10afc0 'pollfd' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc108dd0 'pollfd'
|       `-CXXRecord 0x55adbc108d40 'pollfd'
|-TypedefDecl 0x55adbc53b450 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55adbc53a6b0 'const pollfd *'
|   `-QualType 0x55adbc10afc1 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55adbc10afc0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc108dd0 'pollfd'
|         `-CXXRecord 0x55adbc108d40 'pollfd'
|-EnumDecl 0x55adbc53b4a8 <line:134:5> col:5
| `-EnumConstantDecl 0x55adbc53b5a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55adbc53b580 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55adbc0003c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55adbc0003a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55adbc000380 <col:40> 'int' 1
|-CXXConstructorDecl 0x55adbc53b628 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55adbc53b8b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc53b6e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc53b780 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55adbc53bb78 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55adbc53ba60 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55adbc53be38 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55adbc53bd20 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55adbc53c180 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55adbc53c060 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55adbc53c490 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55adbc53c370 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55adbc53c780 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc53c5c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc53c640 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55adbc53c8d8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55adbc53c9b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc53ca10 <col:30> Inherited
|-CXXMethodDecl 0x55adbc53ca58 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55adbc53cb08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc53cb60 <col:30> Inherited
|-CXXMethodDecl 0x55adbc53cc28 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55adbc53ccd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc53cd30 <col:30> Inherited
|-CXXMethodDecl 0x55adbc53cd78 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55adbc53ce28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc53ce80 <col:30> Inherited
|-CXXMethodDecl 0x55adbc53cec8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55adbc53cf78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc53cfd0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc53d018 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55adbc53d0c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc53d120 <col:30> Inherited
|-CXXMethodDecl 0x55adbc53d148 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc53d1f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc53d2a8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc53d468 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc53d358 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc53d3d0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55adbc53d5b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc53d528 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc53d768 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55adbc53d670 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc53d820 <col:20>
| `-OptimizeNoneAttr 0x55adbc53d878 <col:30>
|-CXXMethodDecl 0x55adbc53d998 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55adbc53d8a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc53da50 <col:20>
| `-OptimizeNoneAttr 0x55adbc53daa8 <col:30>
|-CXXMethodDecl 0x55adbc53db60 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc53dad0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc53dca8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc53dc18 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc53ddd8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55adbc53df08 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55adbc53dfd8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55adbc53e0a8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55adbc53e1e8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc53e158 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc53e330 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc53e2a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc53e478 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55adbc53e3e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc53e530 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55adbc53e630 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55adbc53e5a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc53e6e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55adbc53e7a8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55adbc53e8a8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55adbc53ea58 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc53e968 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55adbc53f218 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55adbc53eb10 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55adbc53f178 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55adbc53f078 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55adbc53f2f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc53f448 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc53f3b8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55adbc53f500 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55adbc53f748 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc53f5c0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55adbc53f638 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55adbc53f908 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55adbc53f818 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55adbc53fb58 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55adbc53f9d0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55adbc53fa48 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55adbc53fc18 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc53fe78 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55adbc53fd80 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55adbc53ff48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55adbc53ff48

Layout: <CGRecordLayout
  LLVMType:%class.Vector.20 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.20 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc541430 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55adbc541608 prev 0x55adbc541430 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55adbc541698 <col:46, col:52> col:46 public
|-TypedefDecl 0x55adbc5416c0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc5432c0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55adbc543270 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55adbc541ba0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55adbc541aa0 'type'
|     `-TemplateSpecializationType 0x55adbc541a00 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55adbc5418e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55adbc5418c0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55adbc5418a0 <col:24> 'unsigned long' 24
|       `-RecordType 0x55adbc5419e0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55adbc541900 'char_array'
|-TypedefDecl 0x55adbc543378 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55adbc543340 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55adbc543320 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55adbc5432c0 'type'
|     `-ElaboratedType 0x55adbc543270 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55adbc541ba0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55adbc541aa0 'type'
|         `-TemplateSpecializationType 0x55adbc541a00 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55adbc5418e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55adbc5418c0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55adbc5418a0 <col:24> 'unsigned long' 24
|           `-RecordType 0x55adbc5419e0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55adbc541900 'char_array'
|-CXXMethodDecl 0x55adbc5434f8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55adbc543408 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55adbc5435e8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55adbc5436c8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55adbc5436c8
|-CXXMethodDecl 0x55adbc543998 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55adbc5438a0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55adbc543bd8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55adbc543a50 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc543ac8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55adbc543da8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55adbc543c98 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc543d10 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55adbc543f08 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55adbc543fd8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55adbc544228 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55adbc544098 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55adbc544110 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55adbc544488 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55adbc5442f8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55adbc544370 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55adbc544648 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55adbc544558 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55adbc544808 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55adbc544710 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55adbc5448c0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc544970 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc544ba8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55adbc544a20 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55adbc544a98 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55adbc544e48 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55adbc544d50 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55adbc544f10 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55adbc544f60 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55adbc544fb0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.22 = type { %struct.char_array.23*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.22 = type { %struct.char_array.23*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc540090 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55adbc540298 prev 0x55adbc540090 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55adbc5413a0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55adbc541350 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55adbc541330 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55adbc5411e0 'type'
|     `-SubstTemplateTypeParmType 0x55adbc541000 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55adbbfc9040 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfc8fe8 'T'
|       `-RecordType 0x55adbc41ffa0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55adbc41feb8 'sized_array_memory'
|-FieldDecl 0x55adbc545000 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55adbc545050 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55adbc545088 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55adbc540330 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|   `-RecordType 0x55adbc10a880 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55adbc10a7f0 'SelectorInfo'
|-TypedefDecl 0x55adbc545148 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55adbc545110 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55adbc540330 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc10a880 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55adbc10a7f0 'SelectorInfo'
|-TypedefDecl 0x55adbc545208 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55adbc5451d0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55adbc540331 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55adbc540330 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc10a880 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55adbc10a7f0 'SelectorInfo'
|-TypedefDecl 0x55adbc545298 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55adbc545260 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55adbc540330 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc10a880 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55adbc10a7f0 'SelectorInfo'
|-TypedefDecl 0x55adbc545358 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55adbc545320 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55adbc540331 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55adbc540330 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc10a880 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55adbc10a7f0 'SelectorInfo'
|-TypedefDecl 0x55adbc545fb0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55adbc545f60 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55adbc545f40 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55adbc545e78 'type'
|     `-LValueReferenceType 0x55adbc545e40 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55adbc545be1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55adbc545be0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55adbbfd0b10 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55adbbfd0ab8 'T'
|           `-RecordType 0x55adbc10a880 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55adbc10a7f0 'SelectorInfo'
|-TypedefDecl 0x55adbc546018 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55adbc5451d0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55adbc540331 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55adbc540330 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc10a880 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55adbc10a7f0 'SelectorInfo'
|-TypedefDecl 0x55adbc546070 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-TypedefDecl 0x55adbc5460d8 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55adbc545260 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55adbc540330 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|     `-RecordType 0x55adbc10a880 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55adbc10a7f0 'SelectorInfo'
|-TypedefDecl 0x55adbc546140 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55adbc545320 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55adbc540331 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55adbc540330 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55adbbfff200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55adbbfff1a8 'T'
|       `-RecordType 0x55adbc10a880 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55adbc10a7f0 'SelectorInfo'
|-EnumDecl 0x55adbc546198 <line:134:5> col:5
| `-EnumConstantDecl 0x55adbc546290 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55adbc546270 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55adbc0003c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55adbc0003a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55adbc000380 <col:40> 'int' 1
|-CXXConstructorDecl 0x55adbc546318 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55adbc5465a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc5463d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc546470 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55adbc546868 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55adbc546750 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55adbc546b28 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55adbc546a10 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55adbc546e70 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55adbc546d50 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55adbc547180 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55adbc547060 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55adbc547470 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc5472b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc547330 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55adbc5475c8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55adbc5476a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc547700 <col:30> Inherited
|-CXXMethodDecl 0x55adbc547748 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55adbc5477f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc547850 <col:30> Inherited
|-CXXMethodDecl 0x55adbc547918 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55adbc5479c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc547a20 <col:30> Inherited
|-CXXMethodDecl 0x55adbc547a68 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55adbc547b18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc547b70 <col:30> Inherited
|-CXXMethodDecl 0x55adbc547bb8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55adbc547c68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc547cc0 <col:30> Inherited
|-CXXMethodDecl 0x55adbc547d08 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55adbc547db8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55adbc547e10 <col:30> Inherited
|-CXXMethodDecl 0x55adbc547e38 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc547ee8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55adbc547f98 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc548158 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc548048 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55adbc5480c0 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55adbc5482a8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc548218 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc548458 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55adbc548360 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc548510 <col:20>
| `-OptimizeNoneAttr 0x55adbc548568 <col:30>
|-CXXMethodDecl 0x55adbc548688 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55adbc548590 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55adbc548740 <col:20>
| `-OptimizeNoneAttr 0x55adbc548798 <col:30>
|-CXXMethodDecl 0x55adbc548850 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc5487c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc548998 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc548908 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc548ac8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55adbc548bf8 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55adbc548cc8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55adbc548d98 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55adbc548ed8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55adbc548e48 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc549020 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55adbc548f90 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55adbc549168 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55adbc5490d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc549220 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55adbc549320 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55adbc549290 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55adbc5493d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55adbc549498 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55adbc549598 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55adbc549748 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc549658 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55adbc549f38 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55adbc549800 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55adbc549e98 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55adbc549d98 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55adbc54a018 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55adbc54a168 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55adbc54a0d8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55adbc54a220 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55adbc54a468 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55adbc54a2e0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55adbc54a358 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55adbc54a628 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55adbc54a538 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55adbc54a878 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55adbc54a6f0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55adbc54a768 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55adbc54a938 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc54ab98 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55adbc54aaa0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55adbc54ac68 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55adbc54ac68

Layout: <CGRecordLayout
  LLVMType:%class.Vector.21 = type { %class.vector_memory.22 }
  NonVirtualBaseLLVMType:%class.Vector.21 = type { %class.vector_memory.22 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc1099d0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbc109ae8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55adbc109b78 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55adbc109c00 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55adbc109cf0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55adbc109cf0
|-CXXMethodDecl 0x55adbc109df0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55adbc10a090 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55adbc109ea8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55adbc109f20 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55adbc109fa0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55adbc10a300 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55adbc10a160 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55adbc10a1d8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55adbc10a258 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55adbc10a458 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55adbc10a3c8 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55adbc10a520 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55adbc54c318 <col:34, line:50:5>
|   |-BinaryOperator 0x55adbc54bce8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55adbc54bca8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55adbc10aca8
|   | | `-CXXThisExpr 0x55adbc54bc98 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55adbc54bcd8 <col:23> 'bool' true
|   `-CallExpr 0x55adbc54c2f0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55adbc54c2d8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55adbc54c258 <col:2> 'void (long)' lvalue Function 0x55adbc54c158 'ignore_result' 'void (long)' (FunctionTemplate 0x55adbbfbd038 'ignore_result')
|     `-CallExpr 0x55adbc54bf00 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55adbc54bee8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55adbc54be68 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55adbc4fc3b8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55adbc54bf38 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55adbc54be10 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55adbc54bdf8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55adbc54bda8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55adbc10ac48
|       |   |   `-CXXThisExpr 0x55adbc54bd98 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55adbc54bdd8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55adbc54bf68 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55adbc54bf50 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55adbc54be30 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55adbc54bf80 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55adbc54be48 <col:41> 'int' 1
|-CXXMethodDecl 0x55adbc10a660 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55adbc10a5d0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55adbc10a728 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55adbc10a7c8 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55adbc10a7f0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55adbc10a908 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55adbc10a9a8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55adbc10aa08 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55adbc10aa70 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55adbc10ab20 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55adbc10a9a8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55adbc54c378 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55adbc54c338 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55adbc10aa08 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55adbc54c3f8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55adbc54c3b8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55adbc10aa70 'pollfd' 'int'
|   | `-UnaryOperator 0x55adbc54c458 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55adbc54c438 <col:35> 'int' 1
|   `-CompoundStmt 0x55adbc54c4d0 <line:64:2, line:65:2>
|-FieldDecl 0x55adbc10ac48 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55adbc10aca8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55adbc540030 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55adbc54ad50 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55adbc54af88 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55adbc54adb8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55adbc54ae30 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55adbc54aea8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55adbc54b170 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55adbc54b058 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55adbc54b0d8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55adbc54b3b8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55adbc54b238 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55adbc54b2b8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55adbc54b5c8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55adbc54b478 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55adbc54b4f0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55adbc54b718 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55adbc54b688 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55adbc54b7e0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55adbc54b8a0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55adbc54b968 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55adbc54b968
| `-ParmVarDecl 0x55adbc54ba78 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55adbc54bb18 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55adbc54bb18
  `-ParmVarDecl 0x55adbc54bc28 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.20, %class.Vector.21 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.20, %class.Vector.21 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbbfb59f0 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbbfb5b08 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55adbbfb5b98 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55adbbfb5c20 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55adbbfb5d10 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55adbbfb5e10 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55adbbfb5ed0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55adbbfb5f90 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55adbbfb6078 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55adbbfb6198 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55adbbfb6198
| `-ParmVarDecl 0x55adbbfb62a8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55adbc5510c8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55adbc5510c8
  `-ParmVarDecl 0x55adbc5511d8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc4dc258 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc4dc378 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55adbc4dc418 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55adbc4dc478 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55adbc5506c8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55adbc5506c8
| `-ParmVarDecl 0x55adbc5507d8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55adbc550878 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55adbc550878
| `-ParmVarDecl 0x55adbc550988 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55adbc5509f8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55adbc5509f8
|-CXXMethodDecl 0x55adbc551278 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55adbc551278
| `-ParmVarDecl 0x55adbc551388 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55adbc5513f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55adbc5513f8
| `-ParmVarDecl 0x55adbc551508 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55adbc55fb48 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55adbc55fc20 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbbfb78e0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbbfb79f8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55adbbfb7a88 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55adbbfb7b10 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55adbbfb7bd0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55adbbce2370 'int'
|-CXXMethodDecl 0x55adbbfb7c98 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55adbbfb7d38 <col:45> always_inline
|-CXXMethodDecl 0x55adbbfb7e68 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55adbbfb7da0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55adbbfb7f10 <col:49> always_inline
|-CXXConstructorDecl 0x55adbbfb8008 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55adbbfb8008
| `-ParmVarDecl 0x55adbbfb8118 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55adbbfb81b8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55adbbfb81b8
| `-ParmVarDecl 0x55adbbfb9498 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55adbc550ae0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55adbc550ae0
|-CXXMethodDecl 0x55adbc5515a8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55adbc5515a8
| `-ParmVarDecl 0x55adbc5516b8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55adbc551728 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55adbc551728
  `-ParmVarDecl 0x55adbc551838 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc54c940 prev 0x55adbc109940 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55adbc54ca38 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55adbc54cac8 <col:22, col:28> col:22 public
|-EnumDecl 0x55adbc54caf0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55adbc54cc08 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55adbc54cbe8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55adbc54cbd0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55adbc54cbb0 <col:32> 'int' 1
| `-EnumConstantDecl 0x55adbc54ccb0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55adbc54cc90 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55adbc54cc78 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55adbc54cc58 <col:53> 'int' 1000
|-CXXMethodDecl 0x55adbc54cd50 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55adbc54ce10 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55adbc54cef8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55adbc5518f8 <col:34, col:52>
|   `-ReturnStmt 0x55adbc5518e8 <col:36, col:43>
|     `-MemberExpr 0x55adbc5518b8 <col:43> 'TimerSet' lvalue ->_timers 0x55adbc54ebc8
|       `-CXXThisExpr 0x55adbc5518a8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55adbc54cfe8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55adbc551960 <col:46, col:64>
|   `-ReturnStmt 0x55adbc551950 <col:48, col:55>
|     `-MemberExpr 0x55adbc551920 <col:55> 'const TimerSet' lvalue ->_timers 0x55adbc54ebc8
|       `-CXXThisExpr 0x55adbc551910 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55adbc54d0d8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55adbc5519c8 <col:36, col:55>
|   `-ReturnStmt 0x55adbc5519b8 <col:38, col:45>
|     `-MemberExpr 0x55adbc551988 <col:45> 'SelectSet' lvalue ->_selects 0x55adbc54ec28
|       `-CXXThisExpr 0x55adbc551978 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55adbc54d1c8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55adbc551a30 <col:48, col:67>
|   `-ReturnStmt 0x55adbc551a20 <col:50, col:57>
|     `-MemberExpr 0x55adbc5519f0 <col:57> 'const SelectSet' lvalue ->_selects 0x55adbc54ec28
|       `-CXXThisExpr 0x55adbc5519e0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55adbc54d288 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55adbc54d378 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55adbc54d4e8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55adbc54d428 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55adbc54d5b0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55adbc54d9f8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55adbc54d660 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55adbc54d8e0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55adbc54dac8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55adbc54db88 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55adbc54dc48 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55adbc54dd88 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55adbc54dcf8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55adbc54de50 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55adbc54df10 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55adbc54dfd0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55adbc54e090 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55adbc54e1d0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55adbc54e140 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55adbc54e298 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55adbc54e358 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55adbc54e3f8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55adbc54e4c0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55adbc54e510 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55adbc54e560 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55adbc54e5b0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55adbc54e600 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55adbc54e650 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55adbc54e6a0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55adbc54e6f0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55adbc54e740 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55adbc54e790 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55adbc54e7e0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55adbc54e8d8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55adbc54e848 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55adbc54ea28 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55adbc54e998 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55adbc54ead0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55adbc54eb08 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55adbc54eb68 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55adbc54ebc8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55adbc54ec28 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55adbc54eca8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55adbc54ed18 <col:40, col:50> aligned
|   `-ConstantExpr 0x55adbc54ecf8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55adbc54ec78 <col:48> 'int' 64
|-FieldDecl 0x55adbc54ed88 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55adbc54ede8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55adbc54eee0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55adbc54eff0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55adbc54f050 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55adbc54f0d0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55adbc54f140 <col:36, col:46> aligned
|   `-ConstantExpr 0x55adbc54f120 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55adbc54f0a0 <col:44> 'int' 64
|-FieldDecl 0x55adbc54f1b8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55adbc54f218 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55adbc54f268 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55adbc54f2a8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55adbc54f310 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55adbc54f360 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55adbc54f508 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55adbc54f398 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55adbc54f418 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55adbc54f608 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55adbc54f608
|-CXXMethodDecl 0x55adbc54f710 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55adbc54f7d8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55adbc559b70 <col:34, line:217:5>
|   `-ReturnStmt 0x55adbc559b60 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55adbc559b48 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55adbc559b18 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55adbc4d9330
|         `-ImplicitCastExpr 0x55adbc559b00 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55adbc559ad0 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55adbc4d92c8
|             `-MemberExpr 0x55adbc551a58 <col:16> 'const TaskLink' lvalue ->_task_link 0x55adbc54eb08
|               `-CXXThisExpr 0x55adbc551a48 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55adbc54f898 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55adbc54f958 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55adbc55a290 <col:39, line:226:5>
|   |-DeclStmt 0x55adbc559dc0 <line:223:9, col:68>
|   | `-VarDecl 0x55adbc559b98 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55adbc559d78 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55adbc559d48 <col:24, col:38> '<bound member function type>' .compare_swap 0x55adbbfb1130
|   |     | `-MemberExpr 0x55adbc559c10 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55adbc54ed88
|   |     |   `-CXXThisExpr 0x55adbc559c00 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55adbc559d00 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55adbc559ce8 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55adbc559cc0 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55adbc559ca0 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55adbc559da8 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55adbc559d28 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55adbc559e08 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55adbc559dd8 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55adbc559b98 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55adbc55a270 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55adbc55a240 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55adbc559f20 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55adbc559ef0 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55adbc559ed8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55adbc559e30 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55adbc559b98 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55adbc559eb0 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55adbc559e98 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55adbc559e70 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55adbc559e50 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55adbc559f80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55adbc559f60 <col:60> 'int' 0
|       `-CallExpr 0x55adbc55a1a0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55adbc55a188 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55adbc55a168 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55adbc55a1e0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55adbc55a068 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55adbc55a1f8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55adbc55a098 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55adbc55a210 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55adbc55a0d8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55adbc55a228 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55adbc55a150 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55adbc55a138 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55adbc55a0f8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55adbc54faa0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55adbc54fa10 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55adbc54fb68 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55adbc54fc28 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55adbc54fce8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55adbc54fda8 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55adbc54fe68 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55adbc54ff60 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55adbc54ffc0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55adbc550050 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55adbc550418 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55adbc550418
| `-ParmVarDecl 0x55adbc550528 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55adbc550be8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55adbc550be8
  `-ParmVarDecl 0x55adbc550cf8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc1d6dc8 prev 0x55adbc256eb0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 referenced class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbc1d6ec0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55adbc1d6f50 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55adbc1d6fb0 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55adbc1d7058 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55adbc1d7178 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55adbc1d7318 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55adbc1d7258 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55adbc1d7568 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55adbc1d73d8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55adbc1d7458 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55adbc1d76f8 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55adbc1d7630 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55adbc1d7878 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55adbc1d77b8 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55adbc1d7a28 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55adbc1d7968 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55adbc1d7b20 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55adbc27d610 <col:21, line:58:5>
|   `-IfStmt 0x55adbc27d5f8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55adbc27d560 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55adbc27d530 <col:6> '<bound member function type>' ->scheduled 0x55adbc1d8378
|     |   `-ImplicitCastExpr 0x55adbc27d580 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55adbc27d520 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55adbc27d5d8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55adbc27d5a8 <col:6> '<bound member function type>' ->unschedule 0x55adbc27bcc0
|         `-CXXThisExpr 0x55adbc27d598 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55adbc1d7c20 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55adbc27d7b0 <col:26, line:65:5>
|   |-BinaryOperator 0x55adbc27d6d0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55adbc27d668 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55adbc27c948
|   | | `-MemberExpr 0x55adbc27d638 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55adbc27ca08
|   | |   `-CXXThisExpr 0x55adbc27d628 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55adbc27d6b8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55adbc27d698 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55adbc27ce68 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55adbc27d790 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55adbc27d700 <col:2> 'void *' lvalue ->_thunk 0x55adbc27ca88
|     | `-CXXThisExpr 0x55adbc27d6f0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55adbc27d768 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55adbc27d730 <col:20> 'int' 1
|-CXXMethodDecl 0x55adbc1d7d60 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55adbc1d7cd0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55adbc27d910 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55adbc27d800 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55adbc27d7d0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55adbc1d7cd0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55adbc27d8f0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55adbc27d8c0 <col:2> '<bound member function type>' ->assign 0x55adbc1d7c20
|       `-CXXThisExpr 0x55adbc27d8b0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55adbc1d7f30 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55adbc1d7e18 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55adbc1d7e98 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55adbc27da90 <col:58, line:79:5>
|   |-BinaryOperator 0x55adbc27d9d8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55adbc27d970 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55adbc27c948
|   | | `-MemberExpr 0x55adbc27d940 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55adbc27ca08
|   | |   `-CXXThisExpr 0x55adbc27d930 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55adbc27d9c0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55adbc27d9a0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55adbc1d7e18 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55adbc27da70 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55adbc27da08 <col:2> 'void *' lvalue ->_thunk 0x55adbc27ca88
|     | `-CXXThisExpr 0x55adbc27d9f8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55adbc27da58 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc27da38 <col:11> 'void *' lvalue ParmVar 0x55adbc1d7e98 'user_data' 'void *'
|-CXXMethodDecl 0x55adbc1d8080 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55adbc1d7ff0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55adbc27dc28 <col:35, line:87:5>
|   |-BinaryOperator 0x55adbc27db58 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55adbc27daf0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55adbc27c948
|   | | `-MemberExpr 0x55adbc27dac0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55adbc27ca08
|   | |   `-CXXThisExpr 0x55adbc27dab0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55adbc27db40 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55adbc27db20 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55adbc27d040 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55adbc27dc08 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55adbc27db88 <col:2> 'void *' lvalue ->_thunk 0x55adbc27ca88
|     | `-CXXThisExpr 0x55adbc27db78 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55adbc27dbf0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55adbc27dbd8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55adbc27dbb8 <col:11> 'Element *' lvalue ParmVar 0x55adbc1d7ff0 'element' 'Element *'
|-CXXMethodDecl 0x55adbc1d81c8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55adbc1d8138 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55adbc27ddc0 <col:29, line:94:5>
|   |-BinaryOperator 0x55adbc27dcf0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55adbc27dc88 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55adbc27c948
|   | | `-MemberExpr 0x55adbc27dc58 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55adbc27ca08
|   | |   `-CXXThisExpr 0x55adbc27dc48 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55adbc27dcd8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55adbc27dcb8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55adbc27d218 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55adbc27dda0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55adbc27dd20 <col:2> 'void *' lvalue ->_thunk 0x55adbc27ca88
|     | `-CXXThisExpr 0x55adbc27dd10 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55adbc27dd88 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55adbc27dd70 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55adbc27dd50 <col:11> 'Task *' lvalue ParmVar 0x55adbc1d8138 'task' 'Task *'
|-CXXMethodDecl 0x55adbc1d82b8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55adbc27dea0 <col:37, line:100:5>
|   `-ReturnStmt 0x55adbc27de90 <line:99:2, col:19>
|     `-BinaryOperator 0x55adbc27de70 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55adbc27de40 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55adbc27ddf0 <col:9> 'Element *const' lvalue ->_owner 0x55adbc27cae8
|       |   `-CXXThisExpr 0x55adbc27dde0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55adbc27de58 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55adbc27de20 <col:19> 'int' 0
|-CXXMethodDecl 0x55adbc1d8378 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55adbc27df60 <col:35, line:105:5>
|   `-ReturnStmt 0x55adbc27df50 <line:104:2, col:23>
|     `-BinaryOperator 0x55adbc27df30 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55adbc27df18 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55adbc27dec8 <col:9> 'const int' lvalue ->_schedpos1 0x55adbc27c768
|       |   `-CXXThisExpr 0x55adbc27deb8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55adbc27def8 <col:23> 'int' 0
|-CXXMethodDecl 0x55adbc1d8438 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55adbc27dfc8 <col:51, line:118:5>
|   `-ReturnStmt 0x55adbc27dfb8 <line:117:2, col:9>
|     `-MemberExpr 0x55adbc27df88 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55adbc27c7c8
|       `-CXXThisExpr 0x55adbc27df78 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55adbc1d84f8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55adbc27e520 <col:37, line:136:5>
|   `-IfStmt 0x55adbc27e4f8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55adbc27e088 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55adbc27e070 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55adbc27e050 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55adbc27e020 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55adbc1e5908
|     |       `-MemberExpr 0x55adbc27dff0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55adbc27c7c8
|     |         `-CXXThisExpr 0x55adbc27dfe0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55adbc27e468 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55adbc27e450 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55adbc27e420 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55adbc27e408 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55adbc27e3d0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55adbc27e3b8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55adbc27e398 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55adbc211010 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55adbc27e338 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55adbc27e320 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55adbc27e248 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55adbc27e230 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55adbc27e210 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55adbc210cd0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55adbc27e1b0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55adbc27e0b0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55adbc27c7c8
|     |         |     |   `-CXXThisExpr 0x55adbc27e0a0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55adbc27e1f8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55adbc27e1e0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55adbc27e190 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55adbc27e178 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55adbc27e118 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55adbc0560a0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55adbc27e380 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55adbc27e368 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55adbc27e300 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55adbc27e2e8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55adbc27e2b8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55adbc056d70 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55adbc27e4e8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55adbc27e4b8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55adbc27e488 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55adbc27c7c8
|           `-CXXThisExpr 0x55adbc27e478 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55adbc1d85b8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55adbc27e608 <col:35, line:141:5>
|   `-ReturnStmt 0x55adbc27e5f8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55adbc27e5c0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55adbc27e590 <col:9, col:17> '<bound member function type>' ->router 0x55adbc268650
|         `-ImplicitCastExpr 0x55adbc27e5e0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55adbc27e578 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55adbc27e548 <col:9> 'Element *const' lvalue ->_owner 0x55adbc27cae8
|               `-CXXThisExpr 0x55adbc27e538 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55adbc1d8678 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55adbc27e688 <col:37, line:146:5>
|   `-ReturnStmt 0x55adbc27e678 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55adbc27e660 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55adbc27e630 <col:9> 'Element *const' lvalue ->_owner 0x55adbc27cae8
|         `-CXXThisExpr 0x55adbc27e620 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55adbc1d8738 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55adbc27e708 <col:41, line:151:5>
|   `-ReturnStmt 0x55adbc27e6f8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55adbc27e6e0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55adbc27e6b0 <col:9> 'RouterThread *const' lvalue ->_thread 0x55adbc27cb48
|         `-CXXThisExpr 0x55adbc27e6a0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55adbc1d8800 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55adbc27ace0 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55adbc1d88b0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55adbc1d8928 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55adbc27d428 <col:50> 'bool' false
|-CXXMethodDecl 0x55adbc27ae68 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55adbc27ada0 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55adbc27afb0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55adbc27af20 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55adbc27b0f8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55adbc27b068 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55adbc27b240 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55adbc27b1b0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55adbc27b388 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55adbc27b2f8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55adbc27b450 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55adbc27e870 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55adbc27e858 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55adbc27e800 <col:2, col:47> 'void'
|       |-MemberExpr 0x55adbc27e730 <col:2> '<bound member function type>' ->schedule_at_steady 0x55adbc27afb0
|       | `-CXXThisExpr 0x55adbc27e720 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55adbc27e840 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55adbc27e828 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55adbc27e7e0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55adbc27e7c8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55adbc27e798 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55adbc056d70 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55adbc27b590 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55adbc27b500 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55adbc27b6d8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55adbc27b648 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc27e9f8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55adbc27e9e0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55adbc27e988 <col:2, col:40> 'void'
|       |-MemberExpr 0x55adbc27e898 <col:2> '<bound member function type>' ->schedule_after 0x55adbc27b590
|       | `-CXXThisExpr 0x55adbc27e888 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55adbc27e9c8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55adbc27e9b0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55adbc27e948 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55adbc27e918 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55adbc27e8d8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc27b648 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55adbc27e930 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55adbc27e8f8 <col:38> 'int' 0
|-CXXMethodDecl 0x55adbc27b820 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55adbc27b790 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc27ec68 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55adbc27ec50 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55adbc27ebf8 <col:2, col:49> 'void'
|       |-MemberExpr 0x55adbc27ea20 <col:2> '<bound member function type>' ->schedule_after 0x55adbc27b590
|       | `-CXXThisExpr 0x55adbc27ea10 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55adbc27ec38 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55adbc27ec20 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55adbc27eba0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55adbc27eb88 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55adbc27eaf8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55adbc1e76f8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55adbc27ebe0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55adbc27ebc8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55adbc27ead8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc27b790 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc27b968 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55adbc27b8d8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55adbc27ee48 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55adbc27ee30 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55adbc27edd8 <col:2, col:38> 'void'
|       |-MemberExpr 0x55adbc27ec90 <col:2> '<bound member function type>' ->schedule_at_steady 0x55adbc27afb0
|       | `-CXXThisExpr 0x55adbc27ec80 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55adbc27ee18 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55adbc27ee00 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55adbc27eda0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55adbc27ed88 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55adbc27ed68 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55adbc210cd0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55adbc27ed38 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55adbc27ed20 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55adbc27ecd0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55adbc27c7c8
|             |     `-CXXThisExpr 0x55adbc27ecc0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55adbc27ed00 <col:33> 'const Timestamp' lvalue ParmVar 0x55adbc27b8d8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55adbc27bab0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55adbc27ba20 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc27f120 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55adbc27f108 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55adbc27f0b0 <col:2, col:79> 'void'
|       |-MemberExpr 0x55adbc27ee70 <col:2> '<bound member function type>' ->schedule_at_steady 0x55adbc27afb0
|       | `-CXXThisExpr 0x55adbc27ee60 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55adbc27f0f0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55adbc27f0d8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55adbc27f070 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55adbc27efa8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55adbc27ef90 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55adbc27ef20 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55adbc27eef0 <col:31, col:41> '<bound member function type>' .sec 0x55adbc058868
|             | |     `-ImplicitCastExpr 0x55adbc27ef40 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55adbc27eec0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55adbc27c7c8
|             | |         `-CXXThisExpr 0x55adbc27eeb0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55adbc27ef78 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55adbc27ef58 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc27ba20 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55adbc27f038 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55adbc27f008 <col:60, col:70> '<bound member function type>' .subsec 0x55adbc058f60
|                 `-ImplicitCastExpr 0x55adbc27f058 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55adbc27efd8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55adbc27c7c8
|                     `-CXXThisExpr 0x55adbc27efc8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55adbc27bbf8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55adbc27bb68 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55adbc27f458 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55adbc27f440 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55adbc27f3e8 <col:2, col:65> 'void'
|       |-MemberExpr 0x55adbc27f148 <col:2> '<bound member function type>' ->schedule_at_steady 0x55adbc27afb0
|       | `-CXXThisExpr 0x55adbc27f138 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55adbc27f428 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55adbc27f410 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55adbc27f3b0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55adbc27f398 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55adbc27f378 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55adbc210cd0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55adbc27f318 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55adbc27f300 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55adbc27f188 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55adbc27c7c8
|             |     `-CXXThisExpr 0x55adbc27f178 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55adbc27f360 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55adbc27f348 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55adbc27f2a8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55adbc27f290 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55adbc27f260 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55adbc1e76f8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55adbc27f2e8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55adbc27f2d0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55adbc27f240 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55adbc27bb68 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc27bcc0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55adbc27bd80 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55adbc27f920 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55adbc27f4b0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55adbc27f480 <col:2> '<bound member function type>' ->unschedule 0x55adbc27bcc0
|   |   `-CXXThisExpr 0x55adbc27f470 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55adbc27f908 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55adbc27f8d0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55adbc27f8b8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55adbc27f568 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55adbbef5188 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55adbc27f4e0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55adbc27c7c8
|       | `-CXXThisExpr 0x55adbc27f4d0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55adbc27f550 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55adbc27f520 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55adbc27be40 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55adbc27fc78 <col:42, line:310:5>
|   |-IfStmt 0x55adbc27fac0 <line:306:2, line:307:23>
|   | |-CallExpr 0x55adbc27f9f0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55adbc27f9d8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55adbc27f978 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55adbc2027e0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55adbc27fab0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55adbc27fa98 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55adbc27fa68 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55adbc27fa50 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55adbc27fa20 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55adbc27fc68 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55adbc27fc50 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55adbc27fc20 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55adbc27fc08 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55adbc27fbc8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55adbc27fbb0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55adbc27fb80 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55adbc1e7a10 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55adbc27fbf0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55adbc27fb60 <col:30> 'int' 500
|-CXXMethodDecl 0x55adbc27bf80 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55adbc27bef0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55adbc27c028 <col:69> "" ""
|-CXXMethodDecl 0x55adbc27c138 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55adbc27c0a8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55adbc27c1e0 <col:70> "" ""
|-CXXMethodDecl 0x55adbc27c2f0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55adbc27c260 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55adbc27c398 <col:71> "" ""
|-CXXMethodDecl 0x55adbc27c4a8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55adbc27c418 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55adbc27c550 <col:72> "" ""
|-EnumDecl 0x55adbc27c5c0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55adbc27c6c0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55adbc27c710 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc27c6a0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55adbc27c680 <col:25> 'int' 1
|-AccessSpecDecl 0x55adbc27c728 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55adbc27c768 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55adbc27c7c8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55adbc27c818 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55adbc27c948 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55adbc27d438 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55adbc27ca08 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55adbc27ca88 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55adbc27cae8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55adbc27cb48 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55adbc27cc98 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55adbc27cba8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55adbc27ce68 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55adbc27cd50 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55adbc27cdd0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55adbc27d040 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55adbc27cf28 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55adbc27cfa8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55adbc27d218 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55adbc27d100 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55adbc27d180 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55adbc27d3e8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.17, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.17, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc331fc8 prev 0x55adbc303268 <../elements/ip/iprewriterbase.hh:81:1, line:182:1> line:81:7 referenced class IPRewriterBase definition
|-DefinitionData polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55adbc332100 <col:1, col:7> col:7 implicit referenced class IPRewriterBase
|-AccessSpecDecl 0x55adbc332190 <col:41, col:47> col:41 public
|-TypedefDecl 0x55adbc3322f0 <line:83:5, col:44> col:44 referenced Map 'HashContainer<IPRewriterEntry>':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55adbc332250 'HashContainer<IPRewriterEntry>' sugar HashContainer
|   |-TemplateArgument type 'IPRewriterEntry'
|   `-RecordType 0x55adbc301de0 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55adbc301ce0 'HashContainer'
|-EnumDecl 0x55adbc332348 <line:84:5, line:86:5> line:84:5
| |-EnumConstantDecl 0x55adbc332468 <line:85:2, col:13> col:2 rw_drop 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
| | `-ConstantExpr 0x55adbc332448 <col:12, col:13> 'int' Int: -1
| |   `-UnaryOperator 0x55adbc332430 <col:12, col:13> 'int' prefix '-'
| |     `-IntegerLiteral 0x55adbc332410 <col:13> 'int' 1
| `-EnumConstantDecl 0x55adbc332510 <col:16, col:29> col:16 rw_addmap 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
|   `-ConstantExpr 0x55adbc3324f0 <col:28, col:29> 'int' Int: -2
|     `-UnaryOperator 0x55adbc3324d8 <col:28, col:29> 'int' prefix '-'
|       `-IntegerLiteral 0x55adbc3324b8 <col:29> 'int' 2
|-CXXConstructorDecl 0x55adbc332598 <line:88:5, col:20> col:5 IPRewriterBase 'void ()'
|-CXXDestructorDecl 0x55adbc332688 <line:89:5, col:21> col:5 ~IPRewriterBase 'void () noexcept'
| `-Overrides: [ 0x55adbc257568 Element::~Element 'void () noexcept' ]
|-EnumDecl 0x55adbc332770 <line:91:5, line:96:5> line:91:10 ConfigurePhase
| |-EnumConstantDecl 0x55adbc332870 <line:92:2, col:29> col:2 CONFIGURE_PHASE_PATTERNS 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55adbc332b20 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc332850 <col:29> 'Element::ConfigurePhase' Int: 20
| |     `-DeclRefExpr 0x55adbc332830 <col:29> 'Element::ConfigurePhase' EnumConstant 0x55adbc259bb0 'CONFIGURE_PHASE_INFO' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x55adbc332900 <line:93:2, col:29> col:2 referenced CONFIGURE_PHASE_REWRITER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55adbc332b38 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc3328e0 <col:29> 'Element::ConfigurePhase' Int: 100
| |     `-DeclRefExpr 0x55adbc3328c0 <col:29> 'Element::ConfigurePhase' EnumConstant 0x55adbc259cd0 'CONFIGURE_PHASE_DEFAULT' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x55adbc3329e8 <line:94:2, col:54> col:2 CONFIGURE_PHASE_MAPPER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55adbc332b50 <col:27, col:54> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc3329c8 <col:27, col:54> 'int' Int: 99
| |     `-BinaryOperator 0x55adbc3329a8 <col:27, col:54> 'int' '-'
| |       |-ImplicitCastExpr 0x55adbc332990 <col:27> 'int' <IntegralCast>
| |       | `-DeclRefExpr 0x55adbc332950 <col:27> 'Element::ConfigurePhase' EnumConstant 0x55adbc332900 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
| |       `-IntegerLiteral 0x55adbc332970 <col:54> 'int' 1
| `-EnumConstantDecl 0x55adbc332ad0 <line:95:2, col:52> col:2 CONFIGURE_PHASE_USER 'IPRewriterBase::ConfigurePhase'
|   `-ImplicitCastExpr 0x55adbc332b68 <col:25, col:52> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc332ab0 <col:25, col:52> 'int' Int: 101
|       `-BinaryOperator 0x55adbc332a90 <col:25, col:52> 'int' '+'
|         |-ImplicitCastExpr 0x55adbc332a78 <col:25> 'int' <IntegralCast>
|         | `-DeclRefExpr 0x55adbc332a38 <col:25> 'Element::ConfigurePhase' EnumConstant 0x55adbc332900 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|         `-IntegerLiteral 0x55adbc332a58 <col:52> 'int' 1
|-CXXMethodDecl 0x55adbc332bd0 <line:98:5, col:54> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55adbc258a90 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55adbc34b490 <col:36, col:54>
|   `-ReturnStmt 0x55adbc34b480 <col:38, col:45>
|     `-ImplicitCastExpr 0x55adbc34b468 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55adbc34b448 <col:45> 'const char [6]' lvalue "1-/1-"
|-CXXMethodDecl 0x55adbc332c98 <line:99:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55adbc258e98 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55adbc34b4f0 <col:36, col:51>
|   `-ReturnStmt 0x55adbc34b4e0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55adbc34b4c8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55adbc34b4a8 <col:45> 'const char []' lvalue Var 0x55adbc258fe0 'PUSH' 'const char []'
|-CXXMethodDecl 0x55adbc332d60 <line:101:5, col:68> col:9 configure_phase 'int () const'
| |-Overrides: [ 0x55adbc259e50 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x55adbc34b550 <col:33, col:68>
|   `-ReturnStmt 0x55adbc34b540 <col:35, col:42>
|     `-ImplicitCastExpr 0x55adbc34b528 <col:42> 'int' <IntegralCast>
|       `-DeclRefExpr 0x55adbc34b508 <col:42> 'IPRewriterBase::ConfigurePhase' EnumConstant 0x55adbc332900 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|-CXXMethodDecl 0x55adbc333030 <line:102:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55adbc25a290 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55adbc332ee0 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x55adbc332f58 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc333188 <line:103:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55adbc25a4e0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55adbc3330f0 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc3332d0 <line:104:5, col:54> col:10 add_rewriter_handlers 'void (bool)'
| `-ParmVarDecl 0x55adbc333240 <col:32, col:37> col:37 writable_patterns 'bool'
|-CXXMethodDecl 0x55adbc333418 <line:105:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55adbc25acf8 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55adbc333388 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x55adbc333508 <line:107:5, line:109:5> line:107:27 flow_heap 'const IPRewriterHeap *() const'
| `-CompoundStmt 0x55adbc34b5e8 <col:45, line:109:5>
|   `-ReturnStmt 0x55adbc34b5d8 <line:108:2, col:9>
|     `-ImplicitCastExpr 0x55adbc34b5c0 <col:9> 'const IPRewriterHeap *' <NoOp>
|       `-ImplicitCastExpr 0x55adbc34b5a8 <col:9> 'IPRewriterHeap *' <LValueToRValue>
|         `-MemberExpr 0x55adbc34b578 <col:9> 'IPRewriterHeap *const' lvalue ->_heap 0x55adbc3487b0
|           `-CXXThisExpr 0x55adbc34b568 <col:9> 'const IPRewriterBase *' implicit this
|-CXXMethodDecl 0x55adbc333688 <line:110:5, line:112:5> line:110:21 reply_element 'IPRewriterBase *(int) const'
| |-ParmVarDecl 0x55adbc3335c0 <col:35, col:39> col:39 used input 'int'
| `-CompoundStmt 0x55adbc34b7c0 <col:52, line:112:5>
|   `-ReturnStmt 0x55adbc34b7b0 <line:111:2, col:29>
|     `-ImplicitCastExpr 0x55adbc34b798 <col:9, col:29> 'IPRewriterBase *' <LValueToRValue>
|       `-MemberExpr 0x55adbc34b768 <col:9, col:29> 'IPRewriterBase *const' lvalue .reply_element 0x55adbc31e790
|         `-CXXOperatorCallExpr 0x55adbc34b730 <col:9, col:27> 'const IPRewriterInput':'const IPRewriterInput' lvalue
|           |-ImplicitCastExpr 0x55adbc34b718 <col:21, col:27> 'const IPRewriterInput &(*)(Vector::size_type) const' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x55adbc34b6a0 <col:21, col:27> 'const IPRewriterInput &(Vector::size_type) const' lvalue CXXMethod 0x55adbc3460b8 'operator[]' 'const IPRewriterInput &(Vector::size_type) const'
|           |-MemberExpr 0x55adbc34b610 <col:9> 'const Vector<IPRewriterInput>':'const Vector<IPRewriterInput>' lvalue ->_input_specs 0x55adbc348750
|           | `-CXXThisExpr 0x55adbc34b600 <col:9> 'const IPRewriterBase *' implicit this
|           `-ImplicitCastExpr 0x55adbc34b688 <col:22> 'int' <LValueToRValue>
|             `-DeclRefExpr 0x55adbc34b640 <col:22> 'int' lvalue ParmVar 0x55adbc3335c0 'input' 'int'
|-CXXMethodDecl 0x55adbc3339c0 <line:113:5, line:115:5> line:113:45 get_map 'HashContainer<IPRewriterEntry> *(int)' virtual
| |-ParmVarDecl 0x55adbc333848 <col:53, col:57> col:57 used mapid 'int'
| `-CompoundStmt 0x55adbc34bb30 <col:64, line:115:5>
|   `-ReturnStmt 0x55adbc34bb20 <line:114:2, col:84>
|     `-ConditionalOperator 0x55adbc34baf0 <col:9, col:84> 'IPRewriterBase::Map *'
|       |-ImplicitCastExpr 0x55adbc34bac0 <col:9, col:72> 'bool' <IntegralToBoolean>
|       | `-CallExpr 0x55adbc34b9e8 <col:9, col:72> 'long'
|       |   |-ImplicitCastExpr 0x55adbc34b9d0 <col:9> 'long (*)(long, long) noexcept' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x55adbc34b7d8 <col:9> '<builtin fn type>' Function 0x55adbc018298 '__builtin_expect' 'long (long, long) noexcept'
|       |   |-ImplicitCastExpr 0x55adbc34ba18 <col:26, col:68> 'long' <IntegralCast>
|       |   | `-UnaryOperator 0x55adbc34b998 <col:26, col:68> 'bool' prefix '!' cannot overflow
|       |   |   `-UnaryOperator 0x55adbc34b980 <col:27, col:68> 'bool' prefix '!' cannot overflow
|       |   |     `-ParenExpr 0x55adbc34b960 <col:28, col:68> 'bool'
|       |   |       `-BinaryOperator 0x55adbc34b940 <col:29, col:55> 'bool' '=='
|       |   |         |-ImplicitCastExpr 0x55adbc34b910 <col:29> 'int' <LValueToRValue>
|       |   |         | `-DeclRefExpr 0x55adbc34b7f8 <col:29> 'int' lvalue ParmVar 0x55adbc333848 'mapid' 'int'
|       |   |         `-ImplicitCastExpr 0x55adbc34b928 <col:38, col:55> 'int' <IntegralCast>
|       |   |           `-DeclRefExpr 0x55adbc34b850 <col:38, col:55> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55adbc31edd0 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|       |   `-ImplicitCastExpr 0x55adbc34ba30 <col:71> 'long' <IntegralCast>
|       |     `-IntegerLiteral 0x55adbc34b9b0 <col:71> 'int' 1
|       |-UnaryOperator 0x55adbc34ba88 <col:76, col:77> 'IPRewriterBase::Map *' prefix '&' cannot overflow
|       | `-MemberExpr 0x55adbc34ba58 <col:77> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_map 0x55adbc33bf68
|       |   `-CXXThisExpr 0x55adbc34ba48 <col:77> 'IPRewriterBase *' implicit this
|       `-ImplicitCastExpr 0x55adbc34bad8 <col:84> 'IPRewriterBase::Map *' <NullToPointer>
|         `-IntegerLiteral 0x55adbc34baa0 <col:84> 'int' 0
|-EnumDecl 0x55adbc333a68 <line:117:5, line:119:5> line:117:5
| |-EnumConstantDecl 0x55adbc333b88 <line:118:2, col:21> col:2 get_entry_check 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
| | `-ConstantExpr 0x55adbc333b68 <col:20, col:21> 'int' Int: -1
| |   `-UnaryOperator 0x55adbc333b50 <col:20, col:21> 'int' prefix '-'
| |     `-IntegerLiteral 0x55adbc333b30 <col:21> 'int' 1
| `-EnumConstantDecl 0x55adbc333c30 <col:24, col:43> col:24 get_entry_reply 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
|   `-ConstantExpr 0x55adbc333c10 <col:42, col:43> 'int' Int: -2
|     `-UnaryOperator 0x55adbc333bf8 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x55adbc333bd8 <col:43> 'int' 2
|-CXXMethodDecl 0x55adbc333e78 <line:120:5, line:121:21> line:120:30 get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)' virtual
| |-ParmVarDecl 0x55adbc333c98 <col:40, col:44> col:44 ip_p 'int'
| |-ParmVarDecl 0x55adbc333d10 <col:50, col:66> col:66 flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55adbc333d90 <line:121:12, col:16> col:16 input 'int'
|-CXXMethodDecl 0x55adbc3341a8 <line:122:5, line:124:24> line:122:30 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' virtual pure
| |-ParmVarDecl 0x55adbc333f48 <col:39, col:43> col:43 ip_p 'int'
| |-ParmVarDecl 0x55adbc333fc0 <col:49, col:65> col:65 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55adbc334038 <line:123:11, col:27> col:27 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55adbc3340b8 <line:124:11, col:15> col:15 input 'int'
|-CXXMethodDecl 0x55adbc334308 <line:125:5, col:55> col:18 destroy_flow 'void (IPRewriterFlow *)' virtual pure
| `-ParmVarDecl 0x55adbc334278 <col:31, col:47> col:47 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x55adbc3344b8 <line:126:5, line:128:5> line:126:29 best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' virtual
| |-ParmVarDecl 0x55adbc3343c0 <col:48, col:70> col:70 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x55adbc34bd80 <col:76, line:128:5>
|   `-ReturnStmt 0x55adbc34bd70 <line:127:2, col:52>
|     `-BinaryOperator 0x55adbc34bd50 <col:9, col:52> 'unsigned int' '-'
|       |-BinaryOperator 0x55adbc34bc80 <col:9, col:37> 'unsigned int' '+'
|       | |-CXXMemberCallExpr 0x55adbc34bbb0 <col:9, col:22> 'click_jiffies_t':'unsigned int'
|       | | `-MemberExpr 0x55adbc34bb80 <col:9, col:15> '<bound member function type>' ->expiry 0x55adbc3067a0
|       | |   `-ImplicitCastExpr 0x55adbc34bb68 <col:9> 'const IPRewriterFlow *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x55adbc34bb48 <col:9> 'const IPRewriterFlow *' lvalue ParmVar 0x55adbc3343c0 'flow' 'const IPRewriterFlow *'
|       | `-ImplicitCastExpr 0x55adbc34bc68 <col:26, col:37> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x55adbc34bc48 <col:26, col:37> 'uint32_t':'unsigned int' lvalue
|       |     |-ImplicitCastExpr 0x55adbc34bc30 <col:26> 'uint32_t *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x55adbc34bbe0 <col:26> 'uint32_t [2]' lvalue ->_timeouts 0x55adbc348898
|       |     |   `-CXXThisExpr 0x55adbc34bbd0 <col:26> 'IPRewriterBase *' implicit this
|       |     `-IntegerLiteral 0x55adbc34bc10 <col:36> 'int' 0
|       `-ImplicitCastExpr 0x55adbc34bd38 <col:41, col:52> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-ArraySubscriptExpr 0x55adbc34bd18 <col:41, col:52> 'uint32_t':'unsigned int' lvalue
|           |-ImplicitCastExpr 0x55adbc34bd00 <col:41> 'uint32_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x55adbc34bcb0 <col:41> 'uint32_t [2]' lvalue ->_timeouts 0x55adbc348898
|           |   `-CXXThisExpr 0x55adbc34bca0 <col:41> 'IPRewriterBase *' implicit this
|           `-IntegerLiteral 0x55adbc34bce0 <col:51> 'int' 1
|-CXXMethodDecl 0x55adbc334698 <line:130:5, col:43> col:9 llrpc 'int (unsigned int, void *)'
| |-Overrides: [ 0x55adbc264040 Element::llrpc 'int (unsigned int, void *)' ]
| |-ParmVarDecl 0x55adbc334578 <col:15, col:24> col:24 command 'unsigned int'
| `-ParmVarDecl 0x55adbc3345f8 <col:33, col:39> col:39 data 'void *'
|-AccessSpecDecl 0x55adbc334748 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x55adbc33bf68 <line:134:5, col:9> col:9 referenced _map 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FieldDecl 0x55adbc348750 <line:136:5, col:29> col:29 referenced _input_specs 'Vector<IPRewriterInput>':'Vector<IPRewriterInput>'
|-FieldDecl 0x55adbc3487b0 <line:138:5, col:21> col:21 referenced _heap 'IPRewriterHeap *'
|-FieldDecl 0x55adbc348898 <line:139:5, col:25> col:14 referenced _timeouts 'uint32_t [2]'
|-FieldDecl 0x55adbc3488f8 <line:140:5, col:14> col:14 _gc_interval_sec 'uint32_t':'unsigned int'
|-FieldDecl 0x55adbc348958 <line:141:5, col:11> col:11 _gc_timer 'Timer'
|-EnumDecl 0x55adbc3489a8 <line:143:5, line:147:5> line:143:5
| |-EnumConstantDecl 0x55adbc348ab0 <line:144:2, col:20> col:2 default_timeout 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x55adbc348c60 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc348a90 <col:20> 'int' Int: 300
| |     `-IntegerLiteral 0x55adbc348a70 <col:20> 'int' 300
| |-EnumConstantDecl 0x55adbc348b40 <line:145:2, col:22> col:2 default_guarantee 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x55adbc348c78 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc348b20 <col:22> 'int' Int: 5
| |     `-IntegerLiteral 0x55adbc348b00 <col:22> 'int' 5
| `-EnumConstantDecl 0x55adbc348c10 <line:146:2, col:29> col:2 default_gc_interval 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
|   `-ImplicitCastExpr 0x55adbc348c90 <col:24, col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc348bf0 <col:24, col:29> 'int' Int: 900
|       `-BinaryOperator 0x55adbc348bd0 <col:24, col:29> 'int' '*'
|         |-IntegerLiteral 0x55adbc348b90 <col:24> 'int' 60
|         `-IntegerLiteral 0x55adbc348bb0 <col:29> 'int' 15
|-CXXMethodDecl 0x55adbc348df8 <line:149:5, line:151:5> line:149:21 relevant_timeout 'uint32_t (const uint32_t *)' static
| |-ParmVarDecl 0x55adbc348d08 <col:38, col:63> col:53 used timeouts 'const uint32_t *':'const uint32_t *'
| `-CompoundStmt 0x55adbc34bf88 <col:66, line:151:5>
|   `-ReturnStmt 0x55adbc34bf78 <line:150:2, col:47>
|     `-ImplicitCastExpr 0x55adbc34bf60 <col:9, col:47> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-ConditionalOperator 0x55adbc34bf30 <col:9, col:47> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55adbc34bf18 <col:9, col:19> 'bool' <IntegralToBoolean>
|         | `-ImplicitCastExpr 0x55adbc34bf00 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55adbc34bdf0 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |     |-ImplicitCastExpr 0x55adbc34bdd8 <col:9> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         |     | `-DeclRefExpr 0x55adbc34bd98 <col:9> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55adbc348d08 'timeouts' 'const uint32_t *':'const uint32_t *'
|         |     `-IntegerLiteral 0x55adbc34bdb8 <col:18> 'int' 1
|         |-ArraySubscriptExpr 0x55adbc34be68 <col:23, col:33> 'const uint32_t':'const unsigned int' lvalue
|         | |-ImplicitCastExpr 0x55adbc34be50 <col:23> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         | | `-DeclRefExpr 0x55adbc34be10 <col:23> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55adbc348d08 'timeouts' 'const uint32_t *':'const uint32_t *'
|         | `-IntegerLiteral 0x55adbc34be30 <col:32> 'int' 1
|         `-ArraySubscriptExpr 0x55adbc34bee0 <col:37, col:47> 'const uint32_t':'const unsigned int' lvalue
|           |-ImplicitCastExpr 0x55adbc34bec8 <col:37> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|           | `-DeclRefExpr 0x55adbc34be88 <col:37> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55adbc348d08 'timeouts' 'const uint32_t *':'const uint32_t *'
|           `-IntegerLiteral 0x55adbc34bea8 <col:46> 'int' 0
|-CXXMethodDecl 0x55adbc3491b8 <line:153:5, line:154:37> line:153:22 store_flow 'IPRewriterEntry *(IPRewriterFlow *, int, IPRewriterBase::Map &, IPRewriterBase::Map *)'
| |-ParmVarDecl 0x55adbc348eb0 <col:33, col:49> col:49 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x55adbc348f30 <col:55, col:59> col:59 input 'int'
| |-ParmVarDecl 0x55adbc348fd8 <line:154:5, col:10> col:10 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x55adbc349078 <col:15, col:36> col:20 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x55adbc34b3f8 <col:36> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x55adbc34b3d8 <col:36> 'int' 0
|-CXXMethodDecl 0x55adbc349498 <line:155:5, line:156:39> line:155:17 used unmap_flow 'void (IPRewriterFlow *, IPRewriterBase::Map &, IPRewriterBase::Map *)' inline
| |-ParmVarDecl 0x55adbc349288 <col:28, col:44> col:44 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x55adbc349300 <line:156:7, col:12> col:12 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x55adbc349378 <col:17, col:38> col:22 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x55adbc34b430 <col:38> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x55adbc34b410 <col:38> 'int' 0
|-CXXMethodDecl 0x55adbc349678 <line:158:5, col:56> col:17 gc_timer_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55adbc349560 <col:31, col:38> col:38 t 'Timer *'
| `-ParmVarDecl 0x55adbc3495e0 <col:41, col:47> col:47 user_data 'void *'
|-CXXMethodDecl 0x55adbc3499a0 <line:160:5, line:161:41> line:160:9 parse_input_spec 'int (const String &, IPRewriterInput &, int, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc349738 <col:26, col:40> col:40 str 'const String &'
| |-ParmVarDecl 0x55adbc3497b0 <col:45, col:62> col:62 is 'IPRewriterInput &'
| |-ParmVarDecl 0x55adbc349830 <line:161:5, col:9> col:9 input_number 'int'
| `-ParmVarDecl 0x55adbc3498a8 <col:23, col:37> col:37 errh 'ErrorHandler *'
|-EnumDecl 0x55adbc349a60 <line:163:5, line:166:5> line:163:5
| |-EnumConstantDecl 0x55adbc349b78 <line:164:2, col:17> col:2 h_nmappings 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55adbc349b58 <col:16, col:17> 'int' Int: -1
| |   `-UnaryOperator 0x55adbc349b40 <col:16, col:17> 'int' prefix '-'
| |     `-IntegerLiteral 0x55adbc349b20 <col:17> 'int' 1
| |-EnumConstantDecl 0x55adbc349c20 <col:20, col:42> col:20 h_mapping_failures 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55adbc349c00 <col:41, col:42> 'int' Int: -2
| |   `-UnaryOperator 0x55adbc349be8 <col:41, col:42> 'int' prefix '-'
| |     `-IntegerLiteral 0x55adbc349bc8 <col:42> 'int' 2
| |-EnumConstantDecl 0x55adbc349cc8 <col:45, col:59> col:45 h_patterns 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55adbc349ca8 <col:58, col:59> 'int' Int: -3
| |   `-UnaryOperator 0x55adbc349c90 <col:58, col:59> 'int' prefix '-'
| |     `-IntegerLiteral 0x55adbc349c70 <col:59> 'int' 3
| |-EnumConstantDecl 0x55adbc349d70 <line:165:2, col:12> col:2 h_size 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55adbc349d50 <col:11, col:12> 'int' Int: -4
| |   `-UnaryOperator 0x55adbc349d38 <col:11, col:12> 'int' prefix '-'
| |     `-IntegerLiteral 0x55adbc349d18 <col:12> 'int' 4
| |-EnumConstantDecl 0x55adbc349e18 <col:15, col:29> col:15 h_capacity 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55adbc349df8 <col:28, col:29> 'int' Int: -5
| |   `-UnaryOperator 0x55adbc349de0 <col:28, col:29> 'int' prefix '-'
| |     `-IntegerLiteral 0x55adbc349dc0 <col:29> 'int' 5
| `-EnumConstantDecl 0x55adbc349ec0 <col:32, col:43> col:32 h_clear 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
|   `-ConstantExpr 0x55adbc349ea0 <col:42, col:43> 'int' Int: -6
|     `-UnaryOperator 0x55adbc349e88 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x55adbc349e68 <col:43> 'int' 6
|-CXXMethodDecl 0x55adbc34a038 <line:167:5, col:59> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55adbc349f20 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55adbc349fa0 <col:44, col:50> col:50 user_data 'void *'
|-CXXMethodDecl 0x55adbc34a318 <line:168:5, col:96> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55adbc34a0f8 <col:30, col:44> col:44 str 'const String &'
| |-ParmVarDecl 0x55adbc34a170 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x55adbc34a1f0 <col:61, col:67> col:67 user_data 'void *'
| `-ParmVarDecl 0x55adbc34a268 <col:78, col:92> col:92 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc34a608 <line:169:5, col:104> col:16 pattern_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55adbc34a3e8 <col:38, col:52> col:52 str 'const String &'
| |-ParmVarDecl 0x55adbc34a460 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55adbc34a4e0 <col:69, col:75> col:75 user_data 'void *'
| `-ParmVarDecl 0x55adbc34a558 <col:86, col:100> col:100 errh 'ErrorHandler *'
|-FriendDecl 0x55adbc34aaa8 <line:171:5, line:172:52> line:171:33
| `-CXXMethodDecl 0x55adbc34a918 parent 0x55adbc31e1c0 prev 0x55adbc31f160 <col:5, line:172:52> line:171:33 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
|   |-ParmVarDecl 0x55adbc34a6f8 <col:48, col:64> col:64 flowid 'const IPFlowID &'
|   |-ParmVarDecl 0x55adbc34a770 <line:172:4, col:14> col:14 rewritten_flowid 'IPFlowID &'
|   |-ParmVarDecl 0x55adbc34a7e8 <col:32, col:40> col:40 p 'Packet *'
|   |-ParmVarDecl 0x55adbc34a868 <col:43, col:47> col:47 mapid 'int' cinit
|   | `-ImplicitCastExpr 0x55adbc31f2d8 <line:39:33> 'int' <IntegralCast>
|   |   `-DeclRefExpr 0x55adbc31f2b8 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55adbc31edd0 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   |-NoInlineAttr 0x55adbc34aa58 <line:37:20> Inherited
|   `-OptimizeNoneAttr 0x55adbc34aa80 <col:30> Inherited
|-AccessSpecDecl 0x55adbc34aae8 <line:174:3, col:10> col:3 private
|-CXXMethodDecl 0x55adbc34abe8 <line:176:5, col:54> col:10 shift_heap_best_effort 'void (click_jiffies_t)'
| `-ParmVarDecl 0x55adbc34ab20 <col:33, col:49> col:49 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55adbc34ae28 <line:177:5, col:78> col:10 shrink_heap_for_new_flow 'bool (IPRewriterFlow *, click_jiffies_t)'
| |-ParmVarDecl 0x55adbc34aca0 <col:35, col:51> col:51 flow 'IPRewriterFlow *'
| `-ParmVarDecl 0x55adbc34ad18 <col:57, col:73> col:73 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55adbc34af78 <line:178:5, col:36> col:10 shrink_heap 'void (bool)'
| `-ParmVarDecl 0x55adbc34aee8 <col:22, col:27> col:27 clear_all 'bool'
|-FriendDecl 0x55adbc34b040 <line:180:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x55adbc34b0a8 <line:81:7> col:7 implicit IPRewriterBase 'void (const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x55adbc34b0a8
| `-ParmVarDecl 0x55adbc34b1b8 <col:7> col:7 'const IPRewriterBase &'
`-CXXMethodDecl 0x55adbc34b258 <col:7> col:7 implicit operator= 'IPRewriterBase &(const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x55adbc34b258
  `-ParmVarDecl 0x55adbc34b368 <col:7> col:7 'const IPRewriterBase &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector.13, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  NonVirtualBaseLLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector.13, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashAllocator
         0 |   struct HashAllocator::link * _free
         8 |   struct HashAllocator::buffer * _buffer
        16 |   size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class SizedHashAllocator<80>
         0 |   class HashAllocator (base)
         0 |     struct HashAllocator::link * _free
         8 |     struct HashAllocator::buffer * _buffer
        16 |     size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class TCPRewriter
         0 |   class IPRewriterBase (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |     class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |       class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |         class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |         class IPRewriterEntry ** buckets
       120 |         uint32_t nbuckets
       124 |         uint32_t first_bucket
       128 |         size_t size
       136 |         struct libdivide_u32_t bucket_divider
       136 |           uint32_t magic
       140 |           uint8_t more
       144 |     class Vector<class IPRewriterInput> _input_specs
       144 |       class vector_memory<class sized_array_memory<56> > vm_
       144 |         vector_memory<class sized_array_memory<56> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       160 |     class IPRewriterHeap * _heap
       168 |     uint32_t [2] _timeouts
       176 |     uint32_t _gc_interval_sec
       184 |     class Timer _gc_timer
       184 |       int _schedpos1
       192 |       class Timestamp _expiry_s
       192 |         union Timestamp::rep_t _t
       192 |           int64_t x
       200 |       union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |         TimerCallback callback
       208 |       void * _thunk
       216 |       class Element * _owner
       224 |       class RouterThread * _thread
       232 |   class SizedHashAllocator<80> _allocator
       232 |     class HashAllocator (base)
       232 |       struct HashAllocator::link * _free
       240 |       struct HashAllocator::buffer * _buffer
       248 |       size_t _size
       256 |   unsigned int _annos
       260 |   uint32_t _tcp_data_timeout
       264 |   uint32_t _tcp_done_timeout
           | [sizeof=272, dsize=268, align=8,
           |  nvsize=268, nvalign=8]

*** Dumping AST Record Layout
         0 | struct HashAllocator::link
         0 |   struct HashAllocator::link * next
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc2c38c8 <../dummy_inc/click/hashallocator.hh:26:5, line:28:5> line:26:12 referenced struct link definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55adbc2c39e8 <col:5, col:12> col:12 implicit referenced struct link
`-FieldDecl 0x55adbc2c3ab8 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashAllocator::buffer
         0 |   struct HashAllocator::buffer * next
         8 |   size_t pos
        16 |   size_t maxpos
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc2c3b20 <../dummy_inc/click/hashallocator.hh:30:5, line:34:5> line:30:12 referenced struct buffer definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55adbc2c3c38 <col:5, col:12> col:12 implicit referenced struct buffer
|-FieldDecl 0x55adbc2c3d08 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
|-FieldDecl 0x55adbc2c3d68 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
`-FieldDecl 0x55adbc2c3dc8 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc2c2ee0 <../dummy_inc/click/hashallocator.hh:9:1, line:55:1> line:9:7 referenced class HashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbc2c2ff8 <col:1, col:7> col:7 implicit referenced class HashAllocator
|-AccessSpecDecl 0x55adbc2c3088 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x55adbc2c31c8 <line:11:5, col:30> col:5 referenced HashAllocator 'void (size_t)'
| `-ParmVarDecl 0x55adbc2c30c0 <col:19, col:26> col:26 size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x55adbc2c32c0 <line:12:5, col:20> col:5 used ~HashAllocator 'void () noexcept'
|-CXXMethodDecl 0x55adbc2c3440 <line:14:5, line:17:5> line:14:17 increase_size 'void (size_t)' inline
| |-ParmVarDecl 0x55adbc2c33b0 <col:31, col:38> col:38 used new_size 'size_t':'unsigned long'
| `-CompoundStmt 0x55adbc2c6050 <col:48, line:17:5>
|   |-ParenExpr 0x55adbc2c5f98 <line:15:2, col:212> 'void'
|   | `-ConditionalOperator 0x55adbc2c5f68 <col:3, col:211> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc2c4800 <col:3, col:62> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc2c47d0 <col:23, col:57> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55adbc2c4700 <col:23, col:34> 'bool' '&&'
|   |   |   | |-UnaryOperator 0x55adbc2c4660 <col:23, col:24> 'bool' prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x55adbc2c4648 <col:24> 'bool' <PointerToBoolean>
|   |   |   | |   `-ImplicitCastExpr 0x55adbc2c4630 <col:24> 'HashAllocator::link *' <LValueToRValue>
|   |   |   | |     `-MemberExpr 0x55adbc2c4600 <col:24> 'HashAllocator::link *' lvalue ->_free 0x55adbc2c40f8
|   |   |   | |       `-CXXThisExpr 0x55adbc2c45f0 <col:24> 'HashAllocator *' implicit this
|   |   |   | `-UnaryOperator 0x55adbc2c46e8 <col:33, col:34> 'bool' prefix '!' cannot overflow
|   |   |   |   `-ImplicitCastExpr 0x55adbc2c46d0 <col:34> 'bool' <PointerToBoolean>
|   |   |   |     `-ImplicitCastExpr 0x55adbc2c46b8 <col:34> 'HashAllocator::buffer *' <LValueToRValue>
|   |   |   |       `-MemberExpr 0x55adbc2c4688 <col:34> 'HashAllocator::buffer *' lvalue ->_buffer 0x55adbc2c4158
|   |   |   |         `-CXXThisExpr 0x55adbc2c4678 <col:34> 'HashAllocator *' implicit this
|   |   |   `-BinaryOperator 0x55adbc2c47b0 <col:45, col:57> 'bool' '>='
|   |   |     |-ImplicitCastExpr 0x55adbc2c4780 <col:45> 'size_t':'unsigned long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55adbc2c4720 <col:45> 'size_t':'unsigned long' lvalue ParmVar 0x55adbc2c33b0 'new_size' 'size_t':'unsigned long'
|   |   |     `-ImplicitCastExpr 0x55adbc2c4798 <col:57> 'size_t':'unsigned long' <LValueToRValue>
|   |   |       `-MemberExpr 0x55adbc2c4750 <col:57> 'size_t':'unsigned long' lvalue ->_size 0x55adbc2c41b8
|   |   |         `-CXXThisExpr 0x55adbc2c4740 <col:57> 'HashAllocator *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55adbc2c5c90 <col:66, col:73> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc2c5c70 <col:72> 'int' 0
|   |   `-CallExpr 0x55adbc2c5ec8 <col:77, col:211> 'void'
|   |     |-ImplicitCastExpr 0x55adbc2c5eb0 <col:77> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc2c5e90 <col:77> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc2c5f08 <col:92> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc2c5d00 <col:92> 'const char [40]' lvalue "!_free && !_buffer && new_size >= _size"
|   |     |-ImplicitCastExpr 0x55adbc2c5f20 <col:135> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc2c5d40 <col:135> 'const char [36]' lvalue "../dummy_inc/click/hashallocator.hh"
|   |     |-ImplicitCastExpr 0x55adbc2c5f38 <col:174> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc2c5d80 <col:174> 'int' 15
|   |     `-ImplicitCastExpr 0x55adbc2c5f50 <col:178, col:192> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc2c5e78 <col:178, col:192> 'const char [42]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc2c5e60 <col:192> 'const char [42]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc2c5e18 <col:192> 'const char [42]' lvalue "void HashAllocator::increase_size(size_t)"
|   `-BinaryOperator 0x55adbc2c6030 <line:16:2, col:10> 'size_t':'unsigned long' lvalue '='
|     |-MemberExpr 0x55adbc2c5fc8 <col:2> 'size_t':'unsigned long' lvalue ->_size 0x55adbc2c41b8
|     | `-CXXThisExpr 0x55adbc2c5fb8 <col:2> 'HashAllocator *' implicit this
|     `-ImplicitCastExpr 0x55adbc2c6018 <col:10> 'size_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc2c5ff8 <col:10> 'size_t':'unsigned long' lvalue ParmVar 0x55adbc2c33b0 'new_size' 'size_t':'unsigned long'
|-CXXMethodDecl 0x55adbc2c3510 <line:19:5, col:27> col:18 allocate 'void *()' inline
|-CXXMethodDecl 0x55adbc2c3658 <line:20:5, col:35> col:17 used deallocate 'void (void *)' inline
| `-ParmVarDecl 0x55adbc2c35c8 <col:28, col:34> col:34 p 'void *'
|-CXXMethodDecl 0x55adbc2c37f8 <line:22:5, col:31> col:10 swap 'void (HashAllocator &)'
| `-ParmVarDecl 0x55adbc2c3738 <col:15, col:30> col:30 x 'HashAllocator &'
|-AccessSpecDecl 0x55adbc2c38a0 <line:24:3, col:10> col:3 private
|-CXXRecordDecl 0x55adbc2c38c8 <line:26:5, line:28:5> line:26:12 referenced struct link definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55adbc2c39e8 <col:5, col:12> col:12 implicit referenced struct link
| `-FieldDecl 0x55adbc2c3ab8 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'
|-CXXRecordDecl 0x55adbc2c3b20 <line:30:5, line:34:5> line:30:12 referenced struct buffer definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55adbc2c3c38 <col:5, col:12> col:12 implicit referenced struct buffer
| |-FieldDecl 0x55adbc2c3d08 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
| |-FieldDecl 0x55adbc2c3d68 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
| `-FieldDecl 0x55adbc2c3dc8 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'
|-EnumDecl 0x55adbc2c3e30 <line:36:5, line:44:5> line:36:5
| |-EnumConstantDecl 0x55adbc2c3f30 <line:37:2, col:20> col:2 min_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x55adbc2c40a0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc2c3f10 <col:20> 'int' Int: 1024
| |     `-IntegerLiteral 0x55adbc2c3ef0 <col:20> 'int' 1024
| |-EnumConstantDecl 0x55adbc2c3fc0 <line:41:2, col:20> col:2 max_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x55adbc2c40b8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc2c3fa0 <col:20> 'int' Int: 1048576
| |     `-IntegerLiteral 0x55adbc2c3f80 <col:20> 'int' 1048576
| `-EnumConstantDecl 0x55adbc2c4050 <line:43:2, col:18> col:2 min_nelements 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
|   `-ImplicitCastExpr 0x55adbc2c40d0 <col:18> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc2c4030 <col:18> 'int' Int: 8
|       `-IntegerLiteral 0x55adbc2c4010 <col:18> 'int' 8
|-FieldDecl 0x55adbc2c40f8 <line:46:5, col:11> col:11 referenced _free 'HashAllocator::link *'
|-FieldDecl 0x55adbc2c4158 <line:47:5, col:13> col:13 referenced _buffer 'HashAllocator::buffer *'
|-FieldDecl 0x55adbc2c41b8 <line:48:5, col:12> col:12 referenced _size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55adbc2c4230 <line:50:5, col:25> col:11 used hard_allocate 'void *()'
|-CXXConstructorDecl 0x55adbc2c43c8 <line:52:5, col:41> col:5 HashAllocator 'void (const HashAllocator &)'
| `-ParmVarDecl 0x55adbc2c4308 <col:19, col:40> col:40 x 'const HashAllocator &'
`-CXXMethodDecl 0x55adbc2c4548 <line:53:5, col:52> col:20 operator= 'HashAllocator &(const HashAllocator &)'
  `-ParmVarDecl 0x55adbc2c4488 <col:30, col:51> col:51 x 'const HashAllocator &'

Layout: <CGRecordLayout
  LLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  NonVirtualBaseLLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc35c578 <../dummy_inc/click/hashallocator.hh:58:1, line:65:1> line:59:7 class SizedHashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'HashAllocator'
|-TemplateArgument integral 80
|-CXXRecordDecl 0x55adbc35c7b8 prev 0x55adbc35c578 <col:1, col:7> col:7 implicit class SizedHashAllocator
|-AccessSpecDecl 0x55adbc35c848 <col:51, col:57> col:51 public
|-CXXConstructorDecl 0x55adbc35c8a8 <line:61:5, line:63:5> line:61:5 SizedHashAllocator 'void ()'
|-CXXConstructorDecl 0x55adbc35c988 <line:59:7> col:7 implicit SizedHashAllocator 'void (const SizedHashAllocator<80> &)' inline default_delete noexcept-unevaluated 0x55adbc35c988
| `-ParmVarDecl 0x55adbc35ca98 <col:7> col:7 'const SizedHashAllocator<80> &'
|-CXXConstructorDecl 0x55adbc35cb38 <col:7> col:7 implicit SizedHashAllocator 'void (SizedHashAllocator<80> &&)' inline default_delete noexcept-unevaluated 0x55adbc35cb38
| `-ParmVarDecl 0x55adbc35cc48 <col:7> col:7 'SizedHashAllocator<80> &&'
|-CXXMethodDecl 0x55adbc35cce8 <col:7> col:7 implicit operator= 'SizedHashAllocator<80> &(SizedHashAllocator<80> &&)' inline default_delete noexcept-unevaluated 0x55adbc35cce8
| `-ParmVarDecl 0x55adbc35cdf8 <col:7> col:7 'SizedHashAllocator<80> &&'
`-CXXDestructorDecl 0x55adbc35ce80 <col:7> col:7 implicit ~SizedHashAllocator 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  NonVirtualBaseLLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc357c58 <../elements/tcpudp/tcprewriter.hh:95:1, line:195:1> line:95:7 referenced class TCPRewriter definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'IPRewriterBase'
|-CXXRecordDecl 0x55adbc357db8 <col:1, col:7> col:7 implicit referenced class TCPRewriter
|-AccessSpecDecl 0x55adbc357e48 <col:45, col:51> col:45 public
|-CXXRecordDecl 0x55adbc357e70 <line:97:5, line:155:5> line:97:11 referenced class TCPFlow definition
| |-DefinitionData has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-public 'IPRewriterFlow'
| |-CXXRecordDecl 0x55adbc357fc8 <col:5, col:11> col:11 implicit referenced class TCPFlow
| |-AccessSpecDecl 0x55adbc358058 <col:45, col:51> col:45 public
| |-CXXConstructorDecl 0x55adbc358408 <line:99:2, line:104:2> line:99:2 TCPFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, bool, click_jiffies_t)'
| | |-ParmVarDecl 0x55adbc358090 <col:10, col:27> col:27 used owner 'IPRewriterInput *'
| | |-ParmVarDecl 0x55adbc358108 <col:34, col:50> col:50 used flowid 'const IPFlowID &'
| | |-ParmVarDecl 0x55adbc358180 <line:100:3, col:19> col:19 used rewritten_flowid 'const IPFlowID &'
| | |-ParmVarDecl 0x55adbc3581f8 <line:101:3, col:8> col:8 used guaranteed 'bool'
| | |-ParmVarDecl 0x55adbc358270 <col:20, col:36> col:36 used expiry_j 'click_jiffies_t':'unsigned int'
| | |-CXXCtorInitializer 'IPRewriterFlow'
| | | `-CXXConstructExpr 0x55adbc35e3e8 <line:102:8, line:103:32> 'IPRewriterFlow' 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| | |   |-ImplicitCastExpr 0x55adbc35e388 <line:102:23> 'IPRewriterInput *' <LValueToRValue>
| | |   | `-DeclRefExpr 0x55adbc35db08 <col:23> 'IPRewriterInput *' lvalue ParmVar 0x55adbc358090 'owner' 'IPRewriterInput *'
| | |   |-DeclRefExpr 0x55adbc35db28 <col:30> 'const IPFlowID' lvalue ParmVar 0x55adbc358108 'flowid' 'const IPFlowID &'
| | |   |-DeclRefExpr 0x55adbc35db48 <col:38> 'const IPFlowID' lvalue ParmVar 0x55adbc358180 'rewritten_flowid' 'const IPFlowID &'
| | |   |-ImplicitCastExpr 0x55adbc35e3a0 <line:103:9> 'uint8_t':'unsigned char' <IntegralCast>
| | |   | `-IntegerLiteral 0x55adbc35db68 <col:9> 'int' 6
| | |   |-ImplicitCastExpr 0x55adbc35e3b8 <col:12> 'bool' <LValueToRValue>
| | |   | `-DeclRefExpr 0x55adbc35db88 <col:12> 'bool' lvalue ParmVar 0x55adbc3581f8 'guaranteed' 'bool'
| | |   `-ImplicitCastExpr 0x55adbc35e3d0 <col:24> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| | |     `-DeclRefExpr 0x55adbc35dba8 <col:24> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55adbc358270 'expiry_j' 'click_jiffies_t':'unsigned int'
| | |-CXXCtorInitializer Field 0x55adbc35b0d8 '_dt' 'TCPRewriter::TCPFlow::delta_transition *'
| | | `-ImplicitCastExpr 0x55adbc35e4a8 <col:39> 'TCPRewriter::TCPFlow::delta_transition *' <NullToPointer>
| | |   `-IntegerLiteral 0x55adbc35e468 <col:39> 'int' 0
| | `-CompoundStmt 0x55adbc35e4f8 <col:42, line:104:2>
| |-CXXDestructorDecl 0x55adbc358520 <line:106:2, line:111:2> line:106:2 used ~TCPFlow 'void () noexcept'
| | `-CompoundStmt 0x55adbc35e9a8 <col:13, line:111:2>
| |   `-WhileStmt 0x55adbc35e970 <line:107:6, line:110:6> has_var
| |     |-DeclStmt 0x55adbc35e990 <line:107:13, col:35>
| |     | `-VarDecl 0x55adbc35e600 <col:13, col:35> col:31 used x 'TCPRewriter::TCPFlow::delta_transition *' cinit
| |     |   `-ImplicitCastExpr 0x55adbc35e6a8 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |     |     `-MemberExpr 0x55adbc35e678 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55adbc35b0d8
| |     |       `-CXXThisExpr 0x55adbc35e668 <col:35> 'TCPRewriter::TCPFlow *' implicit this
| |     |-ImplicitCastExpr 0x55adbc35e6f8 <col:31> 'bool' <PointerToBoolean>
| |     | `-ImplicitCastExpr 0x55adbc35e6e0 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |     |   `-DeclRefExpr 0x55adbc35e6c0 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55adbc35e600 'x' 'TCPRewriter::TCPFlow::delta_transition *'
| |     `-CompoundStmt 0x55adbc35e950 <col:40, line:110:6>
| |       |-BinaryOperator 0x55adbc35e7f0 <line:108:3, col:17> 'TCPRewriter::TCPFlow::delta_transition *' lvalue '='
| |       | |-MemberExpr 0x55adbc35e720 <col:3> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55adbc35b0d8
| |       | | `-CXXThisExpr 0x55adbc35e710 <col:3> 'TCPRewriter::TCPFlow *' implicit this
| |       | `-CXXMemberCallExpr 0x55adbc35e7b8 <col:9, col:17> 'TCPRewriter::TCPFlow::delta_transition *'
| |       |   `-MemberExpr 0x55adbc35e788 <col:9, col:12> '<bound member function type>' ->next 0x55adbc35ae98
| |       |     `-ImplicitCastExpr 0x55adbc35e7d8 <col:9> 'const TCPRewriter::TCPFlow::delta_transition *' <NoOp>
| |       |       `-ImplicitCastExpr 0x55adbc35e770 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |       |         `-DeclRefExpr 0x55adbc35e750 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55adbc35e600 'x' 'TCPRewriter::TCPFlow::delta_transition *'
| |       `-CXXDeleteExpr 0x55adbc35e930 <line:109:3, col:10> 'void' Function 0x55adbbe3e0f8 'operator delete' 'void (void *) noexcept'
| |         `-ImplicitCastExpr 0x55adbc35e830 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |           `-DeclRefExpr 0x55adbc35e810 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55adbc35e600 'x' 'TCPRewriter::TCPFlow::delta_transition *'
| |-EnumDecl 0x55adbc358600 <line:113:2, line:118:2> line:113:2
| | |-EnumConstantDecl 0x55adbc358700 <line:114:6, col:23> col:6 referenced s_forward_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55adbc358ae0 <col:23> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55adbc3586e0 <col:23> 'int' Int: 1
| | |     `-IntegerLiteral 0x55adbc3586c0 <col:23> 'int' 1
| | |-EnumConstantDecl 0x55adbc358790 <col:26, col:41> col:26 referenced s_reply_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55adbc358af8 <col:41> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55adbc358770 <col:41> 'int' Int: 2
| | |     `-IntegerLiteral 0x55adbc358750 <col:41> 'int' 2
| | |-EnumConstantDecl 0x55adbc358880 <line:115:6, col:50> col:6 referenced s_both_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55adbc358b10 <col:20, col:50> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55adbc358860 <col:20, col:50> 'int' Int: 3
| | |     `-ParenExpr 0x55adbc358840 <col:20, col:50> 'int'
| | |       `-BinaryOperator 0x55adbc358820 <col:21, col:38> 'int' '|'
| | |         |-DeclRefExpr 0x55adbc3587e0 <col:21> 'int' EnumConstant 0x55adbc358700 's_forward_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | |         `-DeclRefExpr 0x55adbc358800 <col:38> 'int' EnumConstant 0x55adbc358790 's_reply_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | |-EnumConstantDecl 0x55adbc358910 <line:116:6, col:23> col:6 referenced s_forward_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55adbc358b28 <col:23> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55adbc3588f0 <col:23> 'int' Int: 4
| | |     `-IntegerLiteral 0x55adbc3588d0 <col:23> 'int' 4
| | |-EnumConstantDecl 0x55adbc3589a0 <col:26, col:41> col:26 referenced s_reply_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55adbc358b40 <col:41> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55adbc358980 <col:41> 'int' Int: 8
| | |     `-IntegerLiteral 0x55adbc358960 <col:41> 'int' 8
| | `-EnumConstantDecl 0x55adbc358a90 <line:117:6, col:50> col:6 referenced s_both_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |   `-ImplicitCastExpr 0x55adbc358b58 <col:20, col:50> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55adbc358a70 <col:20, col:50> 'int' Int: 12
| |       `-ParenExpr 0x55adbc358a50 <col:20, col:50> 'int'
| |         `-BinaryOperator 0x55adbc358a30 <col:21, col:38> 'int' '|'
| |           |-DeclRefExpr 0x55adbc3589f0 <col:21> 'int' EnumConstant 0x55adbc358910 's_forward_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |           `-DeclRefExpr 0x55adbc358a10 <col:38> 'int' EnumConstant 0x55adbc3589a0 's_reply_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-CXXMethodDecl 0x55adbc358bb8 <line:119:2, line:121:2> line:119:7 used both_done 'bool () const'
| | `-CompoundStmt 0x55adbc35ebc0 <col:25, line:121:2>
| |   `-ReturnStmt 0x55adbc35ebb0 <line:120:6, col:40>
| |     `-BinaryOperator 0x55adbc35eb90 <col:13, col:40> 'bool' '=='
| |       |-ParenExpr 0x55adbc35eaa8 <col:13, col:35> 'int'
| |       | `-BinaryOperator 0x55adbc35ea88 <col:14, col:24> 'int' '&'
| |       |   |-ImplicitCastExpr 0x55adbc35ea58 <col:14> 'int' <IntegralCast>
| |       |   | `-ImplicitCastExpr 0x55adbc35ea40 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
| |       |   |   `-MemberExpr 0x55adbc35e9f0 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55adbc308d78
| |       |   |     `-ImplicitCastExpr 0x55adbc35e9d0 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
| |       |   |       `-CXXThisExpr 0x55adbc35e9c0 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
| |       |   `-ImplicitCastExpr 0x55adbc35ea70 <col:24> 'int' <IntegralCast>
| |       |     `-DeclRefExpr 0x55adbc35ea20 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55adbc358880 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |       `-ImplicitCastExpr 0x55adbc35eb78 <col:40> 'int' <IntegralCast>
| |         `-DeclRefExpr 0x55adbc35eac8 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55adbc358880 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-CXXMethodDecl 0x55adbc358c78 <line:122:2, line:124:2> line:122:7 used both_data 'bool () const'
| | `-CompoundStmt 0x55adbc35edd8 <col:25, line:124:2>
| |   `-ReturnStmt 0x55adbc35edc8 <line:123:6, col:40>
| |     `-BinaryOperator 0x55adbc35eda8 <col:13, col:40> 'bool' '=='
| |       |-ParenExpr 0x55adbc35ecc0 <col:13, col:35> 'int'
| |       | `-BinaryOperator 0x55adbc35eca0 <col:14, col:24> 'int' '&'
| |       |   |-ImplicitCastExpr 0x55adbc35ec70 <col:14> 'int' <IntegralCast>
| |       |   | `-ImplicitCastExpr 0x55adbc35ec58 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
| |       |   |   `-MemberExpr 0x55adbc35ec08 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55adbc308d78
| |       |   |     `-ImplicitCastExpr 0x55adbc35ebe8 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
| |       |   |       `-CXXThisExpr 0x55adbc35ebd8 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
| |       |   `-ImplicitCastExpr 0x55adbc35ec88 <col:24> 'int' <IntegralCast>
| |       |     `-DeclRefExpr 0x55adbc35ec38 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55adbc358a90 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |       `-ImplicitCastExpr 0x55adbc35ed90 <col:40> 'int' <IntegralCast>
| |         `-DeclRefExpr 0x55adbc35ece0 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55adbc358a90 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-CXXMethodDecl 0x55adbc358f40 <line:126:2, col:75> col:6 update_seqno_delta 'int (bool, tcp_seq_t, int32_t)'
| | |-ParmVarDecl 0x55adbc358d28 <col:25, col:30> col:30 direction 'bool'
| | |-ParmVarDecl 0x55adbc358da0 <col:41, col:51> col:51 old_seqno 'tcp_seq_t':'unsigned int'
| | `-ParmVarDecl 0x55adbc358e18 <col:62, col:70> col:70 delta 'int32_t':'int'
| |-CXXMethodDecl 0x55adbc359198 <line:127:2, col:53> col:12 new_seq 'tcp_seq_t (bool, tcp_seq_t) const'
| | |-ParmVarDecl 0x55adbc359008 <col:20, col:25> col:25 direction 'bool'
| | `-ParmVarDecl 0x55adbc359080 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
| |-CXXMethodDecl 0x55adbc35a388 <line:128:2, col:53> col:12 new_ack 'tcp_seq_t (bool, tcp_seq_t) const'
| | |-ParmVarDecl 0x55adbc359258 <col:20, col:25> col:25 direction 'bool'
| | `-ParmVarDecl 0x55adbc35a2f0 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
| |-CXXMethodDecl 0x55adbc35a5e0 <line:130:2, col:62> col:7 apply 'void (WritablePacket *, bool, unsigned int)'
| | |-ParmVarDecl 0x55adbc35a448 <col:13, col:29> col:29 p 'WritablePacket *'
| | |-ParmVarDecl 0x55adbc35a4c0 <col:32, col:37> col:37 direction 'bool'
| | `-ParmVarDecl 0x55adbc35a540 <col:48, col:57> col:57 annos 'unsigned int'
| |-CXXMethodDecl 0x55adbc35a838 <line:132:2, col:69> col:7 unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| | |-ParmVarDecl 0x55adbc35a6a8 <col:15, col:28> col:28 sa 'StringAccum &'
| | |-ParmVarDecl 0x55adbc35a720 <col:32, col:37> col:37 direction 'bool'
| | `-ParmVarDecl 0x55adbc35a798 <col:48, col:64> col:64 now 'click_jiffies_t':'unsigned int'
| |-AccessSpecDecl 0x55adbc35a8f0 <line:134:7, col:14> col:7 private
| |-CXXRecordDecl 0x55adbc35a918 <line:136:2, line:149:2> line:136:9 referenced struct delta_transition definition
| | |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | | |-DefaultConstructor exists non_trivial user_provided
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-CXXRecordDecl 0x55adbc35aa38 <col:2, col:9> col:9 implicit referenced struct delta_transition
| | |-FieldDecl 0x55adbc35ab68 <line:137:6, col:21> col:14 referenced delta 'int32_t [2]'
| | |-FieldDecl 0x55adbc35ac58 <line:138:6, col:25> col:16 referenced trigger 'tcp_seq_t [2]'
| | |-FieldDecl 0x55adbc35acb8 <line:139:6, col:16> col:16 referenced nextptr 'uintptr_t':'unsigned long'
| | |-CXXConstructorDecl 0x55adbc35ad70 <line:140:6, line:142:6> line:140:6 delta_transition 'void ()'
| | | `-CompoundStmt 0x55adbc35ef20 <col:25, line:142:6>
| | |   `-CallExpr 0x55adbc35eed0 <line:141:3, col:43> 'void *'
| | |     |-ImplicitCastExpr 0x55adbc35eeb8 <col:3> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x55adbc35ee98 <col:3> 'void *(void *, int, size_t) throw()' lvalue Function 0x55adbbf4bc28 'memset' 'void *(void *, int, size_t) throw()'
| | |     |-ImplicitCastExpr 0x55adbc35ef08 <col:10> 'void *' <BitCast>
| | |     | `-CXXThisExpr 0x55adbc35ee38 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' this
| | |     |-IntegerLiteral 0x55adbc35ee48 <col:16> 'int' 0
| | |     `-UnaryExprOrTypeTraitExpr 0x55adbc35ee78 <col:19, col:42> 'unsigned long' sizeof 'TCPRewriter::TCPFlow::delta_transition'
| | |-CXXMethodDecl 0x55adbc35ae98 <line:143:6, line:145:6> line:143:24 used next 'TCPRewriter::TCPFlow::delta_transition *() const'
| | | `-CompoundStmt 0x55adbc35f0d0 <col:37, line:145:6>
| | |   `-ReturnStmt 0x55adbc35f0c0 <line:144:3, col:70>
| | |     `-CXXReinterpretCastExpr 0x55adbc35f090 <col:10, col:70> 'TCPRewriter::TCPFlow::delta_transition *' reinterpret_cast<struct TCPRewriter::TCPFlow::delta_transition *> <IntegralToPointer>
| | |       `-BinaryOperator 0x55adbc35f060 <col:47, col:69> 'unsigned long' '-'
| | |         |-ImplicitCastExpr 0x55adbc35f048 <col:47> 'uintptr_t':'unsigned long' <LValueToRValue>
| | |         | `-MemberExpr 0x55adbc35ef48 <col:47> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55adbc35acb8
| | |         |   `-CXXThisExpr 0x55adbc35ef38 <col:47> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| | |         `-ParenExpr 0x55adbc35f028 <col:57, col:69> 'unsigned long'
| | |           `-BinaryOperator 0x55adbc35f008 <col:58, col:68> 'unsigned long' '&'
| | |             |-ImplicitCastExpr 0x55adbc35efd8 <col:58> 'uintptr_t':'unsigned long' <LValueToRValue>
| | |             | `-MemberExpr 0x55adbc35ef88 <col:58> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55adbc35acb8
| | |             |   `-CXXThisExpr 0x55adbc35ef78 <col:58> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| | |             `-ImplicitCastExpr 0x55adbc35eff0 <col:68> 'unsigned long' <IntegralCast>
| | |               `-IntegerLiteral 0x55adbc35efb8 <col:68> 'int' 3
| | |-CXXMethodDecl 0x55adbc35b008 <line:146:6, line:148:6> line:146:11 used has_trigger 'bool (bool) const'
| | | |-ParmVarDecl 0x55adbc35af48 <col:23, col:28> col:28 used direction 'bool'
| | | `-CompoundStmt 0x55adbc35f250 <col:45, line:148:6>
| | |   `-ReturnStmt 0x55adbc35f240 <line:147:3, col:35>
| | |     `-ImplicitCastExpr 0x55adbc35f228 <col:10, col:35> 'bool' <IntegralToBoolean>
| | |       `-BinaryOperator 0x55adbc35f208 <col:10, col:35> 'unsigned long' '&'
| | |         |-ImplicitCastExpr 0x55adbc35f1d8 <col:10> 'uintptr_t':'unsigned long' <LValueToRValue>
| | |         | `-MemberExpr 0x55adbc35f0f8 <col:10> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55adbc35acb8
| | |         |   `-CXXThisExpr 0x55adbc35f0e8 <col:10> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| | |         `-ImplicitCastExpr 0x55adbc35f1f0 <col:20, col:35> 'unsigned long' <IntegralCast>
| | |           `-ParenExpr 0x55adbc35f1b8 <col:20, col:35> 'int'
| | |             `-BinaryOperator 0x55adbc35f198 <col:21, col:26> 'int' '<<'
| | |               |-IntegerLiteral 0x55adbc35f128 <col:21> 'int' 1
| | |               `-ImplicitCastExpr 0x55adbc35f180 <col:26> 'int' <IntegralCast>
| | |                 `-ImplicitCastExpr 0x55adbc35f168 <col:26> 'bool' <LValueToRValue>
| | |                   `-DeclRefExpr 0x55adbc35f148 <col:26> 'bool' lvalue ParmVar 0x55adbc35af48 'direction' 'bool'
| | `-CXXDestructorDecl 0x55adbc35e848 <line:136:9> col:9 implicit ~delta_transition 'void ()' inline default trivial noexcept-unevaluated 0x55adbc35e848
| |-FieldDecl 0x55adbc35b0d8 <line:151:2, col:20> col:20 referenced _dt 'TCPRewriter::TCPFlow::delta_transition *'
| `-CXXMethodDecl 0x55adbc35b318 <line:153:2, col:67> col:7 apply_sack 'void (bool, click_tcp *, int)'
|   |-ParmVarDecl 0x55adbc35b138 <col:18, col:23> col:23 direction 'bool'
|   |-ParmVarDecl 0x55adbc35b1b0 <col:34, col:45> col:45 tcp 'click_tcp *'
|   `-ParmVarDecl 0x55adbc35b230 <col:50, col:54> col:54 transport_len 'int'
|-CXXConstructorDecl 0x55adbc35b430 <line:157:5, col:17> col:5 used TCPRewriter 'void ()'
|-CXXDestructorDecl 0x55adbc35b520 <line:158:5, col:18> col:5 used ~TCPRewriter 'void () noexcept'
| `-Overrides: [ 0x55adbc332688 IPRewriterBase::~IPRewriterBase 'void () noexcept' ]
|-CXXMethodDecl 0x55adbc35b650 <line:160:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55adbc2589c8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55adbc35f2b8 <col:36, col:60>
|   `-ReturnStmt 0x55adbc35f2a8 <col:38, col:45>
|     `-ImplicitCastExpr 0x55adbc35f290 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55adbc35f268 <col:45> 'const char [12]' lvalue "TCPRewriter"
|-CXXMethodDecl 0x55adbc35b7a0 <line:161:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x55adbc2596c0 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55adbc35b708 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x55adbc35ba80 <line:163:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55adbc333030 IPRewriterBase::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55adbc35b930 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55adbc35b9a8 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc35bd60 <line:165:5, line:166:53> line:165:22 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)'
| |-Overrides: [ 0x55adbc3341a8 IPRewriterBase::add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' ]
| |-ParmVarDecl 0x55adbc35bb48 <col:31, col:35> col:35 ip_p 'int'
| |-ParmVarDecl 0x55adbc35bbc0 <col:41, col:57> col:57 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55adbc35bc38 <line:166:10, col:26> col:26 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55adbc35bcb8 <col:44, col:48> col:48 input 'int'
|-CXXMethodDecl 0x55adbc35bec0 <line:167:5, col:43> col:10 used destroy_flow 'void (IPRewriterFlow *)'
| |-Overrides: [ 0x55adbc334308 IPRewriterBase::destroy_flow 'void (IPRewriterFlow *)' ]
| `-ParmVarDecl 0x55adbc35be30 <col:23, col:39> col:39 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x55adbc35c008 <line:168:5, line:170:5> line:168:21 used best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)'
| |-Overrides: [ 0x55adbc3344b8 IPRewriterBase::best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' ]
| |-ParmVarDecl 0x55adbc35bf78 <col:40, col:62> col:62 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x55adbc35f590 <col:68, line:170:5>
|   `-ReturnStmt 0x55adbc35f580 <line:169:2, col:92>
|     `-BinaryOperator 0x55adbc35f560 <col:9, col:92> 'unsigned int' '-'
|       |-BinaryOperator 0x55adbc35f470 <col:9, col:77> 'unsigned int' '+'
|       | |-CXXMemberCallExpr 0x55adbc35f338 <col:9, col:22> 'click_jiffies_t':'unsigned int'
|       | | `-MemberExpr 0x55adbc35f308 <col:9, col:15> '<bound member function type>' ->expiry 0x55adbc3067a0
|       | |   `-ImplicitCastExpr 0x55adbc35f2f0 <col:9> 'const IPRewriterFlow *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x55adbc35f2d0 <col:9> 'const IPRewriterFlow *' lvalue ParmVar 0x55adbc35bf78 'flow' 'const IPRewriterFlow *'
|       | `-ImplicitCastExpr 0x55adbc35f458 <col:26, col:77> 'unsigned int' <IntegralCast>
|       |   `-CXXMemberCallExpr 0x55adbc35f418 <col:26, col:77> 'int'
|       |     |-MemberExpr 0x55adbc35f368 <col:26> '<bound member function type>' ->tcp_flow_timeout 0x55adbc35d1b0
|       |     | `-ImplicitCastExpr 0x55adbc35f440 <col:26> 'const TCPRewriter *' <NoOp>
|       |     |   `-CXXThisExpr 0x55adbc35f358 <col:26> 'TCPRewriter *' implicit this
|       |     `-CXXStaticCastExpr 0x55adbc35f3e0 <col:43, col:76> 'const TCPRewriter::TCPFlow *' static_cast<const class TCPRewriter::TCPFlow *> <BaseToDerived (IPRewriterFlow)>
|       |       `-ImplicitCastExpr 0x55adbc35f3c8 <col:72> 'const IPRewriterFlow *' <LValueToRValue> part_of_explicit_cast
|       |         `-DeclRefExpr 0x55adbc35f398 <col:72> 'const IPRewriterFlow *' lvalue ParmVar 0x55adbc35bf78 'flow' 'const IPRewriterFlow *'
|       `-ImplicitCastExpr 0x55adbc35f548 <col:81, col:92> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-ArraySubscriptExpr 0x55adbc35f528 <col:81, col:92> 'uint32_t':'unsigned int' lvalue
|           |-ImplicitCastExpr 0x55adbc35f510 <col:81> 'uint32_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x55adbc35f4c0 <col:81> 'uint32_t [2]' lvalue ->_timeouts 0x55adbc348898
|           |   `-ImplicitCastExpr 0x55adbc35f4a0 <col:81> 'IPRewriterBase *' <UncheckedDerivedToBase (IPRewriterBase)>
|           |     `-CXXThisExpr 0x55adbc35f490 <col:81> 'TCPRewriter *' implicit this
|           `-IntegerLiteral 0x55adbc35f4f0 <col:91> 'int' 1
|-CXXMethodDecl 0x55adbc35c1d8 <line:172:5, col:28> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55adbc257838 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55adbc35c0c8 <col:15> col:18 'int'
| `-ParmVarDecl 0x55adbc35c140 <col:20, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x55adbc35c2a8 <line:174:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55adbc25a360 Element::add_handlers 'void ()' ]
|-AccessSpecDecl 0x55adbc35c348 <line:176:2, col:11> col:2 protected
|-FieldDecl 0x55adbc35cf60 <line:178:5, col:41> col:41 referenced _allocator 'SizedHashAllocator<sizeof(TCPRewriter::TCPFlow)>':'SizedHashAllocator<80>'
|-FieldDecl 0x55adbc35cfc8 <line:179:5, col:14> col:14 _annos 'unsigned int'
|-FieldDecl 0x55adbc35d028 <line:180:5, col:14> col:14 referenced _tcp_data_timeout 'uint32_t':'unsigned int'
|-FieldDecl 0x55adbc35d088 <line:181:5, col:14> col:14 referenced _tcp_done_timeout 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc35d1b0 <line:183:5, line:190:5> line:183:9 used tcp_flow_timeout 'int (const TCPRewriter::TCPFlow *) const'
| |-ParmVarDecl 0x55adbc35d0e8 <col:26, col:41> col:41 used mf 'const TCPRewriter::TCPFlow *'
| `-CompoundStmt 0x55adbc35f900 <col:51, line:190:5>
|   `-IfStmt 0x55adbc35f8d8 <line:184:2, line:189:24> has_else
|     |-CXXMemberCallExpr 0x55adbc35f610 <line:184:6, col:20> 'bool'
|     | `-MemberExpr 0x55adbc35f5e0 <col:6, col:10> '<bound member function type>' ->both_done 0x55adbc358bb8
|     |   `-ImplicitCastExpr 0x55adbc35f5c8 <col:6> 'const TCPRewriter::TCPFlow *' <LValueToRValue>
|     |     `-DeclRefExpr 0x55adbc35f5a8 <col:6> 'const TCPRewriter::TCPFlow *' lvalue ParmVar 0x55adbc35d0e8 'mf' 'const TCPRewriter::TCPFlow *'
|     |-ReturnStmt 0x55adbc35f6a0 <line:185:6, col:13>
|     | `-ImplicitCastExpr 0x55adbc35f688 <col:13> 'int' <IntegralCast>
|     |   `-ImplicitCastExpr 0x55adbc35f670 <col:13> 'uint32_t':'unsigned int' <LValueToRValue>
|     |     `-MemberExpr 0x55adbc35f640 <col:13> 'const uint32_t':'const unsigned int' lvalue ->_tcp_done_timeout 0x55adbc35d088
|     |       `-CXXThisExpr 0x55adbc35f630 <col:13> 'const TCPRewriter *' implicit this
|     `-IfStmt 0x55adbc35f8b0 <line:186:7, line:189:24> has_else
|       |-CXXMemberCallExpr 0x55adbc35f718 <line:186:11, col:25> 'bool'
|       | `-MemberExpr 0x55adbc35f6e8 <col:11, col:15> '<bound member function type>' ->both_data 0x55adbc358c78
|       |   `-ImplicitCastExpr 0x55adbc35f6d0 <col:11> 'const TCPRewriter::TCPFlow *' <LValueToRValue>
|       |     `-DeclRefExpr 0x55adbc35f6b0 <col:11> 'const TCPRewriter::TCPFlow *' lvalue ParmVar 0x55adbc35d0e8 'mf' 'const TCPRewriter::TCPFlow *'
|       |-ReturnStmt 0x55adbc35f7a8 <line:187:6, col:13>
|       | `-ImplicitCastExpr 0x55adbc35f790 <col:13> 'int' <IntegralCast>
|       |   `-ImplicitCastExpr 0x55adbc35f778 <col:13> 'uint32_t':'unsigned int' <LValueToRValue>
|       |     `-MemberExpr 0x55adbc35f748 <col:13> 'const uint32_t':'const unsigned int' lvalue ->_tcp_data_timeout 0x55adbc35d028
|       |       `-CXXThisExpr 0x55adbc35f738 <col:13> 'const TCPRewriter *' implicit this
|       `-ReturnStmt 0x55adbc35f8a0 <line:189:6, col:24>
|         `-ImplicitCastExpr 0x55adbc35f888 <col:13, col:24> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55adbc35f870 <col:13, col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|             `-ArraySubscriptExpr 0x55adbc35f850 <col:13, col:24> 'const uint32_t':'const unsigned int' lvalue
|               |-ImplicitCastExpr 0x55adbc35f838 <col:13> 'const uint32_t *' <ArrayToPointerDecay>
|               | `-MemberExpr 0x55adbc35f7e8 <col:13> 'uint32_t const[2]' lvalue ->_timeouts 0x55adbc348898
|               |   `-ImplicitCastExpr 0x55adbc35f7c8 <col:13> 'IPRewriterBase *' <UncheckedDerivedToBase (IPRewriterBase)>
|               |     `-CXXThisExpr 0x55adbc35f7b8 <col:13> 'const TCPRewriter *' implicit this
|               `-IntegerLiteral 0x55adbc35f818 <col:23> 'int' 0
|-CXXMethodDecl 0x55adbc35d380 <line:192:5, col:57> col:19 tcp_mappings_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55adbc35d268 <col:40, col:48> col:49 'Element *'
| `-ParmVarDecl 0x55adbc35d2e8 <col:51, col:56> col:57 'void *'
|-CXXMethodDecl 0x55adbc35d6e0 <line:193:5, col:101> col:16 tcp_lookup_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x55adbc35d448 <col:35> col:38 'int'
| |-ParmVarDecl 0x55adbc35d4c0 <col:40, col:48> col:48 str 'String &'
| |-ParmVarDecl 0x55adbc35d538 <col:53, col:62> col:62 e 'Element *'
| |-ParmVarDecl 0x55adbc35d5b0 <col:65, col:80> col:80 h 'const Handler *'
| `-ParmVarDecl 0x55adbc35d628 <col:83, col:97> col:97 errh 'ErrorHandler *'
|-CXXConstructorDecl 0x55adbc35d7d8 <line:95:7> col:7 implicit TCPRewriter 'void (const TCPRewriter &)' inline default_delete noexcept-unevaluated 0x55adbc35d7d8
| `-ParmVarDecl 0x55adbc35d8e8 <col:7> col:7 'const TCPRewriter &'
`-CXXMethodDecl 0x55adbc35d988 <col:7> col:7 implicit operator= 'TCPRewriter &(const TCPRewriter &)' inline default_delete noexcept-unevaluated 0x55adbc35d988
  `-ParmVarDecl 0x55adbc35da98 <col:7> col:7 'const TCPRewriter &'

Layout: <CGRecordLayout
  LLVMType:%class.TCPRewriter = type <{ %class.IPRewriterBase, %class.SizedHashAllocator, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TCPRewriter.base = type <{ %class.IPRewriterBase, %class.SizedHashAllocator, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashMap<struct NatExternKey, class IPFlowID>
         0 |   struct HashMap<struct NatExternKey, class IPFlowID>::Elt ** _buckets
         8 |   size_t _nbuckets
        16 |   class IPFlowID _default_value
        16 |     class IPAddress _saddr
        16 |       uint32_t _addr
        20 |     class IPAddress _daddr
        20 |       uint32_t _addr
        24 |     uint16_t _sport
        26 |     uint16_t _dport
        32 |   size_t _n
        40 |   size_t _capacity
        48 |   class HashMap_Arena * _arena
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashMap<struct NatInternKey, class IPFlowID>
         0 |   struct HashMap<struct NatInternKey, class IPFlowID>::Elt ** _buckets
         8 |   size_t _nbuckets
        16 |   class IPFlowID _default_value
        16 |     class IPAddress _saddr
        16 |       uint32_t _addr
        20 |     class IPAddress _daddr
        20 |       uint32_t _addr
        24 |     uint16_t _sport
        26 |     uint16_t _dport
        32 |   size_t _n
        40 |   size_t _capacity
        48 |   class HashMap_Arena * _arena
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | class SizedHashAllocator<72>
         0 |   class HashAllocator (base)
         0 |     struct HashAllocator::link * _free
         8 |     struct HashAllocator::buffer * _buffer
        16 |     size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class MyIPRewriterMod
         0 |   class TCPRewriter (primary base)
         0 |     class IPRewriterBase (primary base)
         0 |       class Element (primary base)
         0 |         (Element vtable pointer)
         8 |         class Element::Port *[2] _ports
        24 |         class Element::Port [4] _inline_ports
        88 |         int [2] _nports
        96 |         class Router * _router
       104 |         int _eindex
       112 |       class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |         class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |           class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |           class IPRewriterEntry ** buckets
       120 |           uint32_t nbuckets
       124 |           uint32_t first_bucket
       128 |           size_t size
       136 |           struct libdivide_u32_t bucket_divider
       136 |             uint32_t magic
       140 |             uint8_t more
       144 |       class Vector<class IPRewriterInput> _input_specs
       144 |         class vector_memory<class sized_array_memory<56> > vm_
       144 |           vector_memory<class sized_array_memory<56> >::type * l_
       152 |           vector_memory::size_type n_
       156 |           vector_memory::size_type capacity_
       160 |       class IPRewriterHeap * _heap
       168 |       uint32_t [2] _timeouts
       176 |       uint32_t _gc_interval_sec
       184 |       class Timer _gc_timer
       184 |         int _schedpos1
       192 |         class Timestamp _expiry_s
       192 |           union Timestamp::rep_t _t
       192 |             int64_t x
       200 |         union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |           TimerCallback callback
       208 |         void * _thunk
       216 |         class Element * _owner
       224 |         class RouterThread * _thread
       232 |     class SizedHashAllocator<80> _allocator
       232 |       class HashAllocator (base)
       232 |         struct HashAllocator::link * _free
       240 |         struct HashAllocator::buffer * _buffer
       248 |         size_t _size
       256 |     unsigned int _annos
       260 |     uint32_t _tcp_data_timeout
       264 |     uint32_t _tcp_done_timeout
       268 |   uint32_t _public_ip
       272 |   class HashMap<struct NatExternKey, class IPFlowID> _map_extern
       272 |     struct HashMap<struct NatExternKey, class IPFlowID>::Elt ** _buckets
       280 |     size_t _nbuckets
       288 |     class IPFlowID _default_value
       288 |       class IPAddress _saddr
       288 |         uint32_t _addr
       292 |       class IPAddress _daddr
       292 |         uint32_t _addr
       296 |       uint16_t _sport
       298 |       uint16_t _dport
       304 |     size_t _n
       312 |     size_t _capacity
       320 |     class HashMap_Arena * _arena
       328 |   class HashMap<struct NatInternKey, class IPFlowID> _map_intern
       328 |     struct HashMap<struct NatInternKey, class IPFlowID>::Elt ** _buckets
       336 |     size_t _nbuckets
       344 |     class IPFlowID _default_value
       344 |       class IPAddress _saddr
       344 |         uint32_t _addr
       348 |       class IPAddress _daddr
       348 |         uint32_t _addr
       352 |       uint16_t _sport
       354 |       uint16_t _dport
       360 |     size_t _n
       368 |     size_t _capacity
       376 |     class HashMap_Arena * _arena
       384 |   class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _udp_map
       384 |     class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       384 |       class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       384 |       class IPRewriterEntry ** buckets
       392 |       uint32_t nbuckets
       396 |       uint32_t first_bucket
       400 |       size_t size
       408 |       struct libdivide_u32_t bucket_divider
       408 |         uint32_t magic
       412 |         uint8_t more
       416 |   class SizedHashAllocator<72> _udp_allocator
       416 |     class HashAllocator (base)
       416 |       struct HashAllocator::link * _free
       424 |       struct HashAllocator::buffer * _buffer
       432 |       size_t _size
       440 |   uint32_t [2] _udp_timeouts
       448 |   uint32_t _udp_streaming_timeout
           | [sizeof=456, dsize=452, align=8,
           |  nvsize=452, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc3e9e98 <../dummy_inc/click/hashmap.hh:25:1, line:116:1> line:26:7 class HashMap definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'NatExternKey'
|-TemplateArgument type 'IPFlowID'
|-CXXRecordDecl 0x55adbc3ea160 prev 0x55adbc3e9e98 <col:1, col:7> col:7 implicit class HashMap
|-AccessSpecDecl 0x55adbc3ea1f0 <col:17, col:23> col:17 public
|-TypedefDecl 0x55adbc3ea258 <line:28:5, col:15> col:15 key_type 'NatExternKey':'NatExternKey'
| `-SubstTemplateTypeParmType 0x55adbc3ea220 'NatExternKey' sugar
|   |-TemplateTypeParmType 0x55adbc36f2e0 'K' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbc36f288 'K'
|   `-RecordType 0x55adbc3e4390 'NatExternKey'
|     `-CXXRecord 0x55adbc3e4300 'NatExternKey'
|-TypedefDecl 0x55adbc3ea2e8 <line:29:5, col:15> col:15 mapped_type 'IPFlowID':'IPFlowID'
| `-SubstTemplateTypeParmType 0x55adbc3ea2b0 'IPFlowID' sugar
|   |-TemplateTypeParmType 0x55adbc36f360 'V' dependent depth 0 index 1
|   | `-TemplateTypeParm 0x55adbc36f308 'V'
|   `-RecordType 0x55adbc2f7d80 'IPFlowID'
|     `-CXXRecord 0x55adbc2f7cf0 'IPFlowID'
|-CXXRecordDecl 0x55adbc3ea340 <line:30:5, col:12> col:12 struct Pair
|-CXXConstructorDecl 0x55adbc3ea438 <line:32:5, col:13> col:5 used HashMap 'void ()'
|-CXXConstructorDecl 0x55adbc3ea6c8 <line:33:5, col:59> col:14 HashMap 'void (const IPFlowID &, HashMap_ArenaFactory *)'
| |-ParmVarDecl 0x55adbc3ea528 <col:22, col:30> col:31 'const IPFlowID &'
| `-ParmVarDecl 0x55adbc3ea590 <col:33, col:58> col:56 'HashMap_ArenaFactory *'
|-CXXConstructorDecl 0x55adbc3ea9c8 <line:34:5, col:34> col:5 HashMap 'void (const HashMap<NatExternKey, IPFlowID> &)'
| `-ParmVarDecl 0x55adbc3ea8b8 <col:13, col:33> col:34 'const HashMap<NatExternKey, IPFlowID> &'
|-CXXDestructorDecl 0x55adbc3eaab0 <line:35:5, col:14> col:5 used ~HashMap 'void () noexcept'
|-CXXMethodDecl 0x55adbc3eac30 <line:37:3, col:40> col:8 set_arena 'void (HashMap_ArenaFactory *)'
| `-ParmVarDecl 0x55adbc3eaba0 <col:18, col:39> col:40 'HashMap_ArenaFactory *'
|-CXXMethodDecl 0x55adbc3eace8 <line:39:3, col:36> col:10 size 'size_t () const'
|-CXXMethodDecl 0x55adbc3ead98 <line:40:3, col:40> col:8 empty 'bool () const'
|-CXXMethodDecl 0x55adbc3eae48 <line:41:3, col:47> col:10 nbuckets 'size_t () const'
|-CXXMethodDecl 0x55adbc3eb058 <line:43:3, col:30> col:9 find_pair 'HashMap<NatExternKey, IPFlowID>::Pair *(const NatExternKey &) const'
| `-ParmVarDecl 0x55adbc3eaf68 <col:19, col:27> col:28 'const NatExternKey &'
|-CXXMethodDecl 0x55adbc3eb238 <line:44:3, col:58> col:41 findp 'IPFlowID *(const NatExternKey &) const'
| |-ParmVarDecl 0x55adbc3eb148 <col:47, col:55> col:56 'const NatExternKey &'
| |-NoInlineAttr 0x55adbc3eb318 <col:18> Inherited
| `-OptimizeNoneAttr 0x55adbc3eb370 <col:28> Inherited
|-CXXMethodDecl 0x55adbc3eb538 <line:45:3, col:46> col:19 find 'const IPFlowID &(const NatExternKey &, const IPFlowID &) const' inline
| |-ParmVarDecl 0x55adbc3eb3a8 <col:24, col:32> col:33 'const NatExternKey &'
| `-ParmVarDecl 0x55adbc3eb420 <col:35, col:43> col:44 'const IPFlowID &'
|-CXXMethodDecl 0x55adbc3eb6f8 <line:46:3, col:35> col:19 find 'const IPFlowID &(const NatExternKey &) const' inline
| `-ParmVarDecl 0x55adbc3eb608 <col:24, col:32> col:33 'const NatExternKey &'
|-CXXMethodDecl 0x55adbc3eb850 <line:47:3, col:41> col:19 operator[] 'const IPFlowID &(const NatExternKey &) const' inline
| `-ParmVarDecl 0x55adbc3eb7c0 <col:30, col:38> col:39 'const NatExternKey &'
|-CXXMethodDecl 0x55adbc3ebaa8 <line:49:3, col:45> col:9 find_pair_force 'HashMap<NatExternKey, IPFlowID>::Pair *(const NatExternKey &, const IPFlowID &)'
| |-ParmVarDecl 0x55adbc3eb918 <col:25, col:33> col:34 'const NatExternKey &'
| `-ParmVarDecl 0x55adbc3eb990 <col:36, col:44> col:45 'const IPFlowID &'
|-CXXMethodDecl 0x55adbc3ebc68 <line:50:3, col:82> col:9 find_pair_force 'HashMap<NatExternKey, IPFlowID>::Pair *(const NatExternKey &)'
| `-ParmVarDecl 0x55adbc3ebb78 <col:25, col:34> col:34 k 'const NatExternKey &'
|-CXXMethodDecl 0x55adbc3ebeb8 <line:51:3, col:114> col:6 findp_force 'IPFlowID *(const NatExternKey &, const IPFlowID &)'
| |-ParmVarDecl 0x55adbc3ebd30 <col:18, col:27> col:27 k 'const NatExternKey &'
| `-ParmVarDecl 0x55adbc3ebda8 <col:30, col:39> col:39 v 'const IPFlowID &'
|-CXXMethodDecl 0x55adbc3ec148 <line:52:3, col:70> col:6 find_force 'IPFlowID &(const NatExternKey &, const IPFlowID &)'
| |-ParmVarDecl 0x55adbc3ebfb8 <col:17, col:26> col:26 k 'const NatExternKey &'
| `-ParmVarDecl 0x55adbc3ec030 <col:29, col:38> col:38 v 'const IPFlowID &'
|-CXXMethodDecl 0x55adbc3ec308 <line:53:3, col:71> col:6 findp_force 'IPFlowID *(const NatExternKey &)'
| `-ParmVarDecl 0x55adbc3ec218 <col:18, col:27> col:27 k 'const NatExternKey &'
|-CXXMethodDecl 0x55adbc3ec4c8 <line:54:3, col:71> col:6 find_force 'IPFlowID &(const NatExternKey &)'
| `-ParmVarDecl 0x55adbc3ec3d0 <col:17, col:26> col:26 k 'const NatExternKey &'
|-CXXMethodDecl 0x55adbc3ec718 <line:56:3, col:35> col:8 insert 'bool (const NatExternKey &, const IPFlowID &)'
| |-ParmVarDecl 0x55adbc3ec590 <col:15, col:23> col:24 'const NatExternKey &'
| `-ParmVarDecl 0x55adbc3ec608 <col:26, col:34> col:35 'const IPFlowID &'
|-CXXMethodDecl 0x55adbc3ec8d8 <line:57:3, col:23> col:8 erase 'bool (const NatExternKey &)'
| `-ParmVarDecl 0x55adbc3ec7e8 <col:14, col:22> col:23 'const NatExternKey &'
|-CXXMethodDecl 0x55adbc3eca30 <line:58:3, line:60:3> line:58:8 remove 'bool (const NatExternKey &)'
| `-ParmVarDecl 0x55adbc3ec9a0 <col:15, col:24> col:24 key 'const NatExternKey &'
|-CXXMethodDecl 0x55adbc3ecae8 <line:61:3, col:14> col:8 clear 'void ()'
|-CXXMethodDecl 0x55adbc3ecdb8 <line:63:3, col:28> col:8 swap 'void (HashMap<NatExternKey, IPFlowID> &)'
| `-ParmVarDecl 0x55adbc3eccc8 <col:13, col:27> col:28 'HashMap<NatExternKey, IPFlowID> &'
|-TypedefDecl 0x55adbc3ed050 <line:66:3, col:41> col:41 const_iterator '_HashMap_const_iterator<NatExternKey, IPFlowID>':'_HashMap_const_iterator<NatExternKey, IPFlowID>'
| `-TemplateSpecializationType 0x55adbc3ecfb0 '_HashMap_const_iterator<NatExternKey, IPFlowID>' sugar _HashMap_const_iterator
|   |-TemplateArgument type 'NatExternKey':'NatExternKey'
|   |-TemplateArgument type 'IPFlowID':'IPFlowID'
|   `-RecordType 0x55adbc3ecf90 '_HashMap_const_iterator<NatExternKey, IPFlowID>'
|     `-ClassTemplateSpecialization 0x55adbc3ece90 '_HashMap_const_iterator'
|-TypedefDecl 0x55adbc3ed280 <line:67:3, col:35> col:35 iterator '_HashMap_iterator<NatExternKey, IPFlowID>':'_HashMap_iterator<NatExternKey, IPFlowID>'
| `-TemplateSpecializationType 0x55adbc3ed1e0 '_HashMap_iterator<NatExternKey, IPFlowID>' sugar _HashMap_iterator
|   |-TemplateArgument type 'NatExternKey':'NatExternKey'
|   |-TemplateArgument type 'IPFlowID':'IPFlowID'
|   `-RecordType 0x55adbc3ed1c0 '_HashMap_iterator<NatExternKey, IPFlowID>'
|     `-ClassTemplateSpecialization 0x55adbc3ed0c8 '_HashMap_iterator'
|-CXXMethodDecl 0x55adbc3ed378 <line:68:3, col:33> col:25 begin 'HashMap<NatExternKey, IPFlowID>::const_iterator () const' inline
|-CXXMethodDecl 0x55adbc3ed4c8 <line:69:3, col:25> col:19 begin 'HashMap<NatExternKey, IPFlowID>::iterator ()' inline
|-CXXMethodDecl 0x55adbc3ed598 <line:70:3, col:31> col:25 end 'HashMap<NatExternKey, IPFlowID>::const_iterator () const' inline
|-CXXMethodDecl 0x55adbc3ed668 <line:71:3, col:23> col:19 end 'HashMap<NatExternKey, IPFlowID>::iterator ()' inline
|-CXXMethodDecl 0x55adbc3ed7a8 <line:74:3, col:21> col:8 resize 'void (size_t)'
| `-ParmVarDecl 0x55adbc3ed718 <col:15> col:21 'size_t':'unsigned long'
|-CXXMethodDecl 0x55adbc3ed860 <line:75:3, col:66> col:8 dynamic_resizing 'bool () const'
|-CXXMethodDecl 0x55adbc3ed9a0 <line:76:3, col:33> col:8 set_dynamic_resizing 'void (bool)'
| `-ParmVarDecl 0x55adbc3ed910 <col:29> col:33 'bool'
|-CXXMethodDecl 0x55adbc3edd38 <line:78:3, col:49> col:18 operator= 'HashMap<NatExternKey, IPFlowID> &(const HashMap<NatExternKey, IPFlowID> &)'
| `-ParmVarDecl 0x55adbc3edc08 <col:28, col:48> col:49 'const HashMap<NatExternKey, IPFlowID> &'
|-CXXRecordDecl 0x55adbc3eddf0 prev 0x55adbc3ea340 <line:80:3, col:10> col:10 struct Pair
|-EnumDecl 0x55adbc3ede90 <line:85:3> col:3
| |-EnumConstantDecl 0x55adbc3edf80 <col:10, col:25> col:10 MAX_NBUCKETS 'HashMap<NatExternKey, IPFlowID>::(anonymous enum at ../dummy_inc/click/hashmap.hh:85:3)'
| | `-ImplicitCastExpr 0x55adbc3ee0b0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc3edf60 <col:25> 'int' Int: 4194303
| |     `-IntegerLiteral 0x55adbc3731f0 <col:25> 'int' 4194303
| |-EnumConstantDecl 0x55adbc3edff0 <line:86:3, col:30> col:3 DEFAULT_INITIAL_NBUCKETS 'HashMap<NatExternKey, IPFlowID>::(anonymous enum at ../dummy_inc/click/hashmap.hh:85:3)'
| | `-ImplicitCastExpr 0x55adbc3ee0c8 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc3edfd0 <col:30> 'int' Int: 127
| |     `-IntegerLiteral 0x55adbc373260 <col:30> 'int' 127
| `-EnumConstantDecl 0x55adbc3ee060 <line:87:3, col:30> col:3 DEFAULT_RESIZE_THRESHOLD 'HashMap<NatExternKey, IPFlowID>::(anonymous enum at ../dummy_inc/click/hashmap.hh:85:3)'
|   `-ImplicitCastExpr 0x55adbc3ee0e0 <col:30> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc3ee040 <col:30> 'int' Int: 2
|       `-IntegerLiteral 0x55adbc3732d0 <col:30> 'int' 2
|-AccessSpecDecl 0x55adbc3ee0f8 <line:89:2, col:9> col:2 private
|-CXXRecordDecl 0x55adbc3ee120 <line:91:5, col:12> col:12 struct Elt
|-FieldDecl 0x55adbc3ee250 <line:99:3, col:9> col:9 _buckets 'HashMap<NatExternKey, IPFlowID>::Elt **'
|-FieldDecl 0x55adbc3ee2a0 <line:100:3, col:10> col:10 _nbuckets 'size_t':'unsigned long'
|-FieldDecl 0x55adbc3ee300 <line:101:3, col:5> col:5 _default_value 'IPFlowID':'IPFlowID'
|-FieldDecl 0x55adbc3ee350 <line:103:3, col:10> col:10 _n 'size_t':'unsigned long'
|-FieldDecl 0x55adbc3ee3a0 <line:104:3, col:10> col:10 _capacity 'size_t':'unsigned long'
|-FieldDecl 0x55adbc3ee3f0 <line:106:3, col:18> col:18 _arena 'HashMap_Arena *'
|-CXXMethodDecl 0x55adbc3ee540 <line:108:3, col:49> col:8 initialize 'void (HashMap_ArenaFactory *, size_t)'
| |-ParmVarDecl 0x55adbc3ee440 <col:19, col:40> col:41 'HashMap_ArenaFactory *'
| `-ParmVarDecl 0x55adbc3ee4a8 <col:43> col:49 'size_t':'unsigned long'
|-CXXMethodDecl 0x55adbc3ee7b8 <line:109:3, col:39> col:8 copy_from 'void (const HashMap<NatExternKey, IPFlowID> &)'
| `-ParmVarDecl 0x55adbc3ee6f8 <col:18, col:38> col:39 'const HashMap<NatExternKey, IPFlowID> &'
|-CXXMethodDecl 0x55adbc3ee900 <line:110:3, col:22> col:8 resize0 'void (size_t)'
| `-ParmVarDecl 0x55adbc3ee870 <col:16> col:22 'size_t':'unsigned long'
|-CXXMethodDecl 0x55adbc3eeab8 <line:111:3, col:28> col:10 bucket 'size_t (const NatExternKey &) const'
| `-ParmVarDecl 0x55adbc3ee9c8 <col:17, col:25> col:26 'const NatExternKey &'
|-FriendDecl 0x55adbc3eec78 <line:113:3, col:38> col:10 'class _HashMap_iterator<NatExternKey, IPFlowID>':'_HashMap_iterator<NatExternKey, IPFlowID>'
`-FriendDecl 0x55adbc3eedc8 <line:114:3, col:44> col:10 'class _HashMap_const_iterator<NatExternKey, IPFlowID>':'_HashMap_const_iterator<NatExternKey, IPFlowID>'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap = type { %"struct.HashMap<NatExternKey, IPFlowID>::Elt"**, i64, %class.IPFlowID, i64, i64, %class.HashMap_Arena* }
  NonVirtualBaseLLVMType:%class.HashMap = type { %"struct.HashMap<NatExternKey, IPFlowID>::Elt"**, i64, %class.IPFlowID, i64, i64, %class.HashMap_Arena* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc3eee78 <../dummy_inc/click/hashmap.hh:25:1, line:116:1> line:26:7 class HashMap definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'NatInternKey'
|-TemplateArgument type 'IPFlowID'
|-CXXRecordDecl 0x55adbc3ef140 prev 0x55adbc3eee78 <col:1, col:7> col:7 implicit class HashMap
|-AccessSpecDecl 0x55adbc3ef1d0 <col:17, col:23> col:17 public
|-TypedefDecl 0x55adbc3ef238 <line:28:5, col:15> col:15 key_type 'NatInternKey':'NatInternKey'
| `-SubstTemplateTypeParmType 0x55adbc3ef200 'NatInternKey' sugar
|   |-TemplateTypeParmType 0x55adbc36f2e0 'K' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55adbc36f288 'K'
|   `-RecordType 0x55adbc3e5000 'NatInternKey'
|     `-CXXRecord 0x55adbc3e4f68 'NatInternKey'
|-TypedefDecl 0x55adbc3ef2a0 <line:29:5, col:15> col:15 mapped_type 'IPFlowID':'IPFlowID'
| `-SubstTemplateTypeParmType 0x55adbc3ea2b0 'IPFlowID' sugar
|   |-TemplateTypeParmType 0x55adbc36f360 'V' dependent depth 0 index 1
|   | `-TemplateTypeParm 0x55adbc36f308 'V'
|   `-RecordType 0x55adbc2f7d80 'IPFlowID'
|     `-CXXRecord 0x55adbc2f7cf0 'IPFlowID'
|-CXXRecordDecl 0x55adbc3ef2f8 <line:30:5, col:12> col:12 struct Pair
|-CXXConstructorDecl 0x55adbc3ef3f8 <line:32:5, col:13> col:5 used HashMap 'void ()'
|-CXXConstructorDecl 0x55adbc3f0a40 <line:33:5, col:59> col:14 HashMap 'void (const IPFlowID &, HashMap_ArenaFactory *)'
| |-ParmVarDecl 0x55adbc3f0920 <col:22, col:30> col:31 'const IPFlowID &'
| `-ParmVarDecl 0x55adbc3f0988 <col:33, col:58> col:56 'HashMap_ArenaFactory *'
|-CXXConstructorDecl 0x55adbc3f0d48 <line:34:5, col:34> col:5 HashMap 'void (const HashMap<NatInternKey, IPFlowID> &)'
| `-ParmVarDecl 0x55adbc3f0c38 <col:13, col:33> col:34 'const HashMap<NatInternKey, IPFlowID> &'
|-CXXDestructorDecl 0x55adbc3f0e30 <line:35:5, col:14> col:5 used ~HashMap 'void () noexcept'
|-CXXMethodDecl 0x55adbc3f0fb0 <line:37:3, col:40> col:8 set_arena 'void (HashMap_ArenaFactory *)'
| `-ParmVarDecl 0x55adbc3f0f20 <col:18, col:39> col:40 'HashMap_ArenaFactory *'
|-CXXMethodDecl 0x55adbc3f1068 <line:39:3, col:36> col:10 size 'size_t () const'
|-CXXMethodDecl 0x55adbc3f1118 <line:40:3, col:40> col:8 empty 'bool () const'
|-CXXMethodDecl 0x55adbc3f11c8 <line:41:3, col:47> col:10 nbuckets 'size_t () const'
|-CXXMethodDecl 0x55adbc3f13d8 <line:43:3, col:30> col:9 find_pair 'HashMap<NatInternKey, IPFlowID>::Pair *(const NatInternKey &) const'
| `-ParmVarDecl 0x55adbc3f12e8 <col:19, col:27> col:28 'const NatInternKey &'
|-CXXMethodDecl 0x55adbc3f1598 <line:44:3, col:58> col:41 findp 'IPFlowID *(const NatInternKey &) const'
| |-ParmVarDecl 0x55adbc3f14a0 <col:47, col:55> col:56 'const NatInternKey &'
| |-NoInlineAttr 0x55adbc3f1678 <col:18> Inherited
| `-OptimizeNoneAttr 0x55adbc3f16d0 <col:28> Inherited
|-CXXMethodDecl 0x55adbc3f1898 <line:45:3, col:46> col:19 find 'const IPFlowID &(const NatInternKey &, const IPFlowID &) const' inline
| |-ParmVarDecl 0x55adbc3f1708 <col:24, col:32> col:33 'const NatInternKey &'
| `-ParmVarDecl 0x55adbc3f1780 <col:35, col:43> col:44 'const IPFlowID &'
|-CXXMethodDecl 0x55adbc3f1a58 <line:46:3, col:35> col:19 find 'const IPFlowID &(const NatInternKey &) const' inline
| `-ParmVarDecl 0x55adbc3f1968 <col:24, col:32> col:33 'const NatInternKey &'
|-CXXMethodDecl 0x55adbc3f1bb0 <line:47:3, col:41> col:19 operator[] 'const IPFlowID &(const NatInternKey &) const' inline
| `-ParmVarDecl 0x55adbc3f1b20 <col:30, col:38> col:39 'const NatInternKey &'
|-CXXMethodDecl 0x55adbc3f1e08 <line:49:3, col:45> col:9 find_pair_force 'HashMap<NatInternKey, IPFlowID>::Pair *(const NatInternKey &, const IPFlowID &)'
| |-ParmVarDecl 0x55adbc3f1c78 <col:25, col:33> col:34 'const NatInternKey &'
| `-ParmVarDecl 0x55adbc3f1cf0 <col:36, col:44> col:45 'const IPFlowID &'
|-CXXMethodDecl 0x55adbc3f1fc8 <line:50:3, col:82> col:9 find_pair_force 'HashMap<NatInternKey, IPFlowID>::Pair *(const NatInternKey &)'
| `-ParmVarDecl 0x55adbc3f1ed8 <col:25, col:34> col:34 k 'const NatInternKey &'
|-CXXMethodDecl 0x55adbc3f2218 <line:51:3, col:114> col:6 findp_force 'IPFlowID *(const NatInternKey &, const IPFlowID &)'
| |-ParmVarDecl 0x55adbc3f2090 <col:18, col:27> col:27 k 'const NatInternKey &'
| `-ParmVarDecl 0x55adbc3f2108 <col:30, col:39> col:39 v 'const IPFlowID &'
|-CXXMethodDecl 0x55adbc3f2478 <line:52:3, col:70> col:6 find_force 'IPFlowID &(const NatInternKey &, const IPFlowID &)'
| |-ParmVarDecl 0x55adbc3f22e8 <col:17, col:26> col:26 k 'const NatInternKey &'
| `-ParmVarDecl 0x55adbc3f2360 <col:29, col:38> col:38 v 'const IPFlowID &'
|-CXXMethodDecl 0x55adbc3f2638 <line:53:3, col:71> col:6 findp_force 'IPFlowID *(const NatInternKey &)'
| `-ParmVarDecl 0x55adbc3f2548 <col:18, col:27> col:27 k 'const NatInternKey &'
|-CXXMethodDecl 0x55adbc3f27f8 <line:54:3, col:71> col:6 find_force 'IPFlowID &(const NatInternKey &)'
| `-ParmVarDecl 0x55adbc3f2700 <col:17, col:26> col:26 k 'const NatInternKey &'
|-CXXMethodDecl 0x55adbc3f2a48 <line:56:3, col:35> col:8 insert 'bool (const NatInternKey &, const IPFlowID &)'
| |-ParmVarDecl 0x55adbc3f28c0 <col:15, col:23> col:24 'const NatInternKey &'
| `-ParmVarDecl 0x55adbc3f2938 <col:26, col:34> col:35 'const IPFlowID &'
|-CXXMethodDecl 0x55adbc3f2c08 <line:57:3, col:23> col:8 erase 'bool (const NatInternKey &)'
| `-ParmVarDecl 0x55adbc3f2b18 <col:14, col:22> col:23 'const NatInternKey &'
|-CXXMethodDecl 0x55adbc3f2d60 <line:58:3, line:60:3> line:58:8 remove 'bool (const NatInternKey &)'
| `-ParmVarDecl 0x55adbc3f2cd0 <col:15, col:24> col:24 key 'const NatInternKey &'
|-CXXMethodDecl 0x55adbc3f2e18 <line:61:3, col:14> col:8 clear 'void ()'
|-CXXMethodDecl 0x55adbc3f30e8 <line:63:3, col:28> col:8 swap 'void (HashMap<NatInternKey, IPFlowID> &)'
| `-ParmVarDecl 0x55adbc3f2ff8 <col:13, col:27> col:28 'HashMap<NatInternKey, IPFlowID> &'
|-TypedefDecl 0x55adbc3f3380 <line:66:3, col:41> col:41 const_iterator '_HashMap_const_iterator<NatInternKey, IPFlowID>':'_HashMap_const_iterator<NatInternKey, IPFlowID>'
| `-TemplateSpecializationType 0x55adbc3f32e0 '_HashMap_const_iterator<NatInternKey, IPFlowID>' sugar _HashMap_const_iterator
|   |-TemplateArgument type 'NatInternKey':'NatInternKey'
|   |-TemplateArgument type 'IPFlowID':'IPFlowID'
|   `-RecordType 0x55adbc3f32c0 '_HashMap_const_iterator<NatInternKey, IPFlowID>'
|     `-ClassTemplateSpecialization 0x55adbc3f31c0 '_HashMap_const_iterator'
|-TypedefDecl 0x55adbc3f35b0 <line:67:3, col:35> col:35 iterator '_HashMap_iterator<NatInternKey, IPFlowID>':'_HashMap_iterator<NatInternKey, IPFlowID>'
| `-TemplateSpecializationType 0x55adbc3f3510 '_HashMap_iterator<NatInternKey, IPFlowID>' sugar _HashMap_iterator
|   |-TemplateArgument type 'NatInternKey':'NatInternKey'
|   |-TemplateArgument type 'IPFlowID':'IPFlowID'
|   `-RecordType 0x55adbc3f34f0 '_HashMap_iterator<NatInternKey, IPFlowID>'
|     `-ClassTemplateSpecialization 0x55adbc3f33f8 '_HashMap_iterator'
|-CXXMethodDecl 0x55adbc3f36a8 <line:68:3, col:33> col:25 begin 'HashMap<NatInternKey, IPFlowID>::const_iterator () const' inline
|-CXXMethodDecl 0x55adbc3f37f8 <line:69:3, col:25> col:19 begin 'HashMap<NatInternKey, IPFlowID>::iterator ()' inline
|-CXXMethodDecl 0x55adbc3f38c8 <line:70:3, col:31> col:25 end 'HashMap<NatInternKey, IPFlowID>::const_iterator () const' inline
|-CXXMethodDecl 0x55adbc3f3998 <line:71:3, col:23> col:19 end 'HashMap<NatInternKey, IPFlowID>::iterator ()' inline
|-CXXMethodDecl 0x55adbc3f3ad8 <line:74:3, col:21> col:8 resize 'void (size_t)'
| `-ParmVarDecl 0x55adbc3f3a48 <col:15> col:21 'size_t':'unsigned long'
|-CXXMethodDecl 0x55adbc3f3b90 <line:75:3, col:66> col:8 dynamic_resizing 'bool () const'
|-CXXMethodDecl 0x55adbc3f3cd0 <line:76:3, col:33> col:8 set_dynamic_resizing 'void (bool)'
| `-ParmVarDecl 0x55adbc3f3c40 <col:29> col:33 'bool'
|-CXXMethodDecl 0x55adbc3f4068 <line:78:3, col:49> col:18 operator= 'HashMap<NatInternKey, IPFlowID> &(const HashMap<NatInternKey, IPFlowID> &)'
| `-ParmVarDecl 0x55adbc3f3f38 <col:28, col:48> col:49 'const HashMap<NatInternKey, IPFlowID> &'
|-CXXRecordDecl 0x55adbc3f4120 prev 0x55adbc3ef2f8 <line:80:3, col:10> col:10 struct Pair
|-EnumDecl 0x55adbc3f41c0 <line:85:3> col:3
| |-EnumConstantDecl 0x55adbc3f42b0 <col:10, col:25> col:10 MAX_NBUCKETS 'HashMap<NatInternKey, IPFlowID>::(anonymous enum at ../dummy_inc/click/hashmap.hh:85:3)'
| | `-ImplicitCastExpr 0x55adbc3f43e0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc3f4290 <col:25> 'int' Int: 4194303
| |     `-IntegerLiteral 0x55adbc3731f0 <col:25> 'int' 4194303
| |-EnumConstantDecl 0x55adbc3f4320 <line:86:3, col:30> col:3 DEFAULT_INITIAL_NBUCKETS 'HashMap<NatInternKey, IPFlowID>::(anonymous enum at ../dummy_inc/click/hashmap.hh:85:3)'
| | `-ImplicitCastExpr 0x55adbc3f43f8 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc3f4300 <col:30> 'int' Int: 127
| |     `-IntegerLiteral 0x55adbc373260 <col:30> 'int' 127
| `-EnumConstantDecl 0x55adbc3f4390 <line:87:3, col:30> col:3 DEFAULT_RESIZE_THRESHOLD 'HashMap<NatInternKey, IPFlowID>::(anonymous enum at ../dummy_inc/click/hashmap.hh:85:3)'
|   `-ImplicitCastExpr 0x55adbc3f4410 <col:30> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc3f4370 <col:30> 'int' Int: 2
|       `-IntegerLiteral 0x55adbc3732d0 <col:30> 'int' 2
|-AccessSpecDecl 0x55adbc3f4428 <line:89:2, col:9> col:2 private
|-CXXRecordDecl 0x55adbc3f4450 <line:91:5, col:12> col:12 struct Elt
|-FieldDecl 0x55adbc3f4580 <line:99:3, col:9> col:9 _buckets 'HashMap<NatInternKey, IPFlowID>::Elt **'
|-FieldDecl 0x55adbc3f45d0 <line:100:3, col:10> col:10 _nbuckets 'size_t':'unsigned long'
|-FieldDecl 0x55adbc3f4630 <line:101:3, col:5> col:5 _default_value 'IPFlowID':'IPFlowID'
|-FieldDecl 0x55adbc3f4680 <line:103:3, col:10> col:10 _n 'size_t':'unsigned long'
|-FieldDecl 0x55adbc3f46d0 <line:104:3, col:10> col:10 _capacity 'size_t':'unsigned long'
|-FieldDecl 0x55adbc3f4720 <line:106:3, col:18> col:18 _arena 'HashMap_Arena *'
|-CXXMethodDecl 0x55adbc3f4870 <line:108:3, col:49> col:8 initialize 'void (HashMap_ArenaFactory *, size_t)'
| |-ParmVarDecl 0x55adbc3f4770 <col:19, col:40> col:41 'HashMap_ArenaFactory *'
| `-ParmVarDecl 0x55adbc3f47d8 <col:43> col:49 'size_t':'unsigned long'
|-CXXMethodDecl 0x55adbc3f4ae8 <line:109:3, col:39> col:8 copy_from 'void (const HashMap<NatInternKey, IPFlowID> &)'
| `-ParmVarDecl 0x55adbc3f4a28 <col:18, col:38> col:39 'const HashMap<NatInternKey, IPFlowID> &'
|-CXXMethodDecl 0x55adbc3f4c30 <line:110:3, col:22> col:8 resize0 'void (size_t)'
| `-ParmVarDecl 0x55adbc3f4ba0 <col:16> col:22 'size_t':'unsigned long'
|-CXXMethodDecl 0x55adbc3f4de8 <line:111:3, col:28> col:10 bucket 'size_t (const NatInternKey &) const'
| `-ParmVarDecl 0x55adbc3f4cf8 <col:17, col:25> col:26 'const NatInternKey &'
|-FriendDecl 0x55adbc3f4fa8 <line:113:3, col:38> col:10 'class _HashMap_iterator<NatInternKey, IPFlowID>':'_HashMap_iterator<NatInternKey, IPFlowID>'
`-FriendDecl 0x55adbc3f50f8 <line:114:3, col:44> col:10 'class _HashMap_const_iterator<NatInternKey, IPFlowID>':'_HashMap_const_iterator<NatInternKey, IPFlowID>'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap.24 = type { %"struct.HashMap<NatInternKey, IPFlowID>::Elt"**, i64, %class.IPFlowID, i64, i64, %class.HashMap_Arena* }
  NonVirtualBaseLLVMType:%class.HashMap.24 = type { %"struct.HashMap<NatInternKey, IPFlowID>::Elt"**, i64, %class.IPFlowID, i64, i64, %class.HashMap_Arena* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc36c4e0 <../dummy_inc/click/hashallocator.hh:58:1, line:65:1> line:59:7 class SizedHashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'HashAllocator'
|-TemplateArgument integral 72
|-CXXRecordDecl 0x55adbc36c718 prev 0x55adbc36c4e0 <col:1, col:7> col:7 implicit class SizedHashAllocator
|-AccessSpecDecl 0x55adbc36c7a8 <col:51, col:57> col:51 public
|-CXXConstructorDecl 0x55adbc36c808 <line:61:5, line:63:5> line:61:5 used SizedHashAllocator 'void ()'
|-CXXConstructorDecl 0x55adbc36c8e8 <line:59:7> col:7 implicit SizedHashAllocator 'void (const SizedHashAllocator<72> &)' inline default_delete noexcept-unevaluated 0x55adbc36c8e8
| `-ParmVarDecl 0x55adbc36c9f8 <col:7> col:7 'const SizedHashAllocator<72> &'
|-CXXConstructorDecl 0x55adbc36ca98 <col:7> col:7 implicit SizedHashAllocator 'void (SizedHashAllocator<72> &&)' inline default_delete noexcept-unevaluated 0x55adbc36ca98
| `-ParmVarDecl 0x55adbc36cba8 <col:7> col:7 'SizedHashAllocator<72> &&'
|-CXXMethodDecl 0x55adbc36cc48 <col:7> col:7 implicit operator= 'SizedHashAllocator<72> &(SizedHashAllocator<72> &&)' inline default_delete noexcept-unevaluated 0x55adbc36cc48
| `-ParmVarDecl 0x55adbc36cd58 <col:7> col:7 'SizedHashAllocator<72> &&'
`-CXXDestructorDecl 0x55adbc36cde0 <col:7> col:7 implicit used ~SizedHashAllocator 'void () noexcept' inline default
  `-CompoundStmt 0x55adbc5b3b00 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.SizedHashAllocator.25 = type { %class.HashAllocator }
  NonVirtualBaseLLVMType:%class.SizedHashAllocator.25 = type { %class.HashAllocator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc3e8658 <../elements/tcpudp/myrewritermod.hh:251:1, line:314:1> line:251:7 class MyIPRewriterMod definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'TCPRewriter'
|-CXXRecordDecl 0x55adbc3e87b8 <col:1, col:7> col:7 implicit referenced class MyIPRewriterMod
|-AccessSpecDecl 0x55adbc3e8848 <col:46, col:52> col:46 public
|-TypedefDecl 0x55adbc3e88d0 <line:253:5, col:34> col:34 referenced UDPFlow 'UDPRewriter::UDPFlow':'UDPRewriter::UDPFlow'
| `-ElaboratedType 0x55adbc3cd5b0 'UDPRewriter::UDPFlow' sugar
|   `-RecordType 0x55adbc361780 'UDPRewriter::UDPFlow'
|     `-CXXRecord 0x55adbc3616f0 'UDPFlow'
|-CXXConstructorDecl 0x55adbc3e8990 <line:255:5, col:21> col:5 MyIPRewriterMod 'void ()'
|-CXXDestructorDecl 0x55adbc3e8a80 <line:256:5, col:22> col:5 ~MyIPRewriterMod 'void ()' noexcept-unevaluated 0x55adbc3e8a80
| `-Overrides: [ 0x55adbc35b520 TCPRewriter::~TCPRewriter 'void () noexcept' ]
|-CXXMethodDecl 0x55adbc3e8bb0 <line:258:5, col:61> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55adbc35b650 TCPRewriter::class_name 'const char *() const' ]
| `-CompoundStmt 0x55adbc3f6078 <col:36, col:61>
|   `-ReturnStmt 0x55adbc3f6068 <col:38, col:45>
|     `-ImplicitCastExpr 0x55adbc3f6050 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55adbc3f6028 <col:45> 'const char [13]' lvalue "MyIPRewriter"
|-CXXMethodDecl 0x55adbc3e8d00 <line:259:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x55adbc35b7a0 TCPRewriter::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55adbc3e8c68 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x55adbc3e8fe0 <line:261:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55adbc35ba80 TCPRewriter::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55adbc3e8e90 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55adbc3e8f08 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc3e9240 <line:263:5, col:75> col:22 get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)'
| |-Overrides: [ 0x55adbc333e78 IPRewriterBase::get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)' ]
| |-ParmVarDecl 0x55adbc3e90a8 <col:32, col:36> col:36 ip_p 'int'
| |-ParmVarDecl 0x55adbc3e9120 <col:42, col:58> col:58 flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55adbc3e91a0 <col:66, col:70> col:70 input 'int'
|-CXXMethodDecl 0x55adbc3e9530 <line:264:5, line:271:5> line:264:37 get_map 'HashContainer<IPRewriterEntry> *(int)'
| |-Overrides: [ 0x55adbc3339c0 IPRewriterBase::get_map 'HashContainer<IPRewriterEntry> *(int)' ]
| |-ParmVarDecl 0x55adbc3e9418 <col:45, col:49> col:49 used mapid 'int'
| `-CompoundStmt 0x55adbc3f6550 <col:56, line:271:5>
|   `-IfStmt 0x55adbc3f6528 <line:265:2, line:270:13> has_else
|     |-BinaryOperator 0x55adbc3f6208 <line:265:6, col:32> 'bool' '=='
|     | |-ImplicitCastExpr 0x55adbc3f61d8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55adbc3f6090 <col:6> 'int' lvalue ParmVar 0x55adbc3e9418 'mapid' 'int'
|     | `-ImplicitCastExpr 0x55adbc3f61f0 <col:15, col:32> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55adbc3f60e8 <col:15, col:32> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55adbc31edd0 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|     |-ReturnStmt 0x55adbc3f62a8 <line:266:6, col:14>
|     | `-UnaryOperator 0x55adbc3f6290 <col:13, col:14> 'IPRewriterBase::Map *' prefix '&' cannot overflow
|     |   `-MemberExpr 0x55adbc3f6260 <col:14> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_map 0x55adbc33bf68
|     |     `-ImplicitCastExpr 0x55adbc3f6238 <col:14> 'IPRewriterBase *' <UncheckedDerivedToBase (TCPRewriter -> IPRewriterBase)>
|     |       `-CXXThisExpr 0x55adbc3f6228 <col:14> 'MyIPRewriterMod *' implicit this
|     `-IfStmt 0x55adbc3f6500 <line:267:7, line:270:13> has_else
|       |-BinaryOperator 0x55adbc3f6430 <line:267:11, col:37> 'bool' '=='
|       | |-ImplicitCastExpr 0x55adbc3f6400 <col:11> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x55adbc3f62b8 <col:11> 'int' lvalue ParmVar 0x55adbc3e9418 'mapid' 'int'
|       | `-ImplicitCastExpr 0x55adbc3f6418 <col:20, col:37> 'int' <IntegralCast>
|       |   `-DeclRefExpr 0x55adbc3f6310 <col:20, col:37> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55adbc31ee60 'mapid_iprewriter_udp' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|       |-ReturnStmt 0x55adbc3f64a8 <line:268:6, col:14>
|       | `-UnaryOperator 0x55adbc3f6490 <col:13, col:14> 'IPRewriterBase::Map *' prefix '&' cannot overflow
|       |   `-MemberExpr 0x55adbc3f6460 <col:14> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_udp_map 0x55adbc3f5198
|       |     `-CXXThisExpr 0x55adbc3f6450 <col:14> 'MyIPRewriterMod *' implicit this
|       `-ReturnStmt 0x55adbc3f64f0 <line:270:6, col:13>
|         `-ImplicitCastExpr 0x55adbc3f64d8 <col:13> 'HashContainer<IPRewriterEntry> *' <NullToPointer>
|           `-IntegerLiteral 0x55adbc3f64b8 <col:13> 'int' 0
|-CXXMethodDecl 0x55adbc3e9808 <line:272:5, line:273:53> line:272:22 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)'
| |-Overrides: [ 0x55adbc35bd60 TCPRewriter::add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' ]
| |-ParmVarDecl 0x55adbc3e95f0 <col:31, col:35> col:35 ip_p 'int'
| |-ParmVarDecl 0x55adbc3e9668 <col:41, col:57> col:57 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55adbc3e96e0 <line:273:10, col:26> col:26 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55adbc3e9760 <col:44, col:48> col:48 input 'int'
|-CXXMethodDecl 0x55adbc3e9968 <line:274:5, col:43> col:10 destroy_flow 'void (IPRewriterFlow *)'
| |-Overrides: [ 0x55adbc35bec0 TCPRewriter::destroy_flow 'void (IPRewriterFlow *)' ]
| `-ParmVarDecl 0x55adbc3e98d8 <col:23, col:39> col:39 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x55adbc3e9ab0 <line:275:5, line:280:5> line:275:21 best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)'
| |-Overrides: [ 0x55adbc35c008 TCPRewriter::best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' ]
| |-ParmVarDecl 0x55adbc3e9a20 <col:40, col:62> col:62 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x55adbc3f6a30 <col:68, line:280:5>
|   `-IfStmt 0x55adbc3f6a08 <line:276:2, line:279:100> has_else
|     |-BinaryOperator 0x55adbc3f6628 <line:276:6, col:22> 'bool' '=='
|     | |-ImplicitCastExpr 0x55adbc3f6610 <col:6, col:17> 'int' <IntegralCast>
|     | | `-CXXMemberCallExpr 0x55adbc3f65d0 <col:6, col:17> 'uint8_t':'unsigned char'
|     | |   `-MemberExpr 0x55adbc3f65a0 <col:6, col:12> '<bound member function type>' ->ip_p 0x55adbc3071c8
|     | |     `-ImplicitCastExpr 0x55adbc3f6588 <col:6> 'const IPRewriterFlow *' <LValueToRValue>
|     | |       `-DeclRefExpr 0x55adbc3f6568 <col:6> 'const IPRewriterFlow *' lvalue ParmVar 0x55adbc3e9a20 'flow' 'const IPRewriterFlow *'
|     | `-IntegerLiteral 0x55adbc3f65f0 <col:22> 'int' 6
|     |-ReturnStmt 0x55adbc3f6758 <line:277:6, col:49>
|     | `-CXXMemberCallExpr 0x55adbc3f66f8 <col:13, col:49> 'click_jiffies_t':'unsigned int'
|     |   |-MemberExpr 0x55adbc3f6690 <col:13, col:26> '<bound member function type>' ->best_effort_expiry 0x55adbc35c008
|     |   | `-ImplicitCastExpr 0x55adbc3f6720 <col:26> 'TCPRewriter *' <UncheckedDerivedToBase (TCPRewriter)>
|     |   |   `-CXXThisExpr 0x55adbc3f6680 <col:26> 'MyIPRewriterMod *' implicit this
|     |   `-ImplicitCastExpr 0x55adbc3f6740 <col:45> 'const IPRewriterFlow *' <LValueToRValue>
|     |     `-DeclRefExpr 0x55adbc3f66d8 <col:45> 'const IPRewriterFlow *' lvalue ParmVar 0x55adbc3e9a20 'flow' 'const IPRewriterFlow *'
|     `-ReturnStmt 0x55adbc3f69f8 <line:279:6, col:100>
|       `-BinaryOperator 0x55adbc3f69d8 <col:13, col:100> 'unsigned int' '-'
|         |-BinaryOperator 0x55adbc3f6908 <col:13, col:81> 'unsigned int' '+'
|         | |-CXXMemberCallExpr 0x55adbc3f67d0 <col:13, col:26> 'click_jiffies_t':'unsigned int'
|         | | `-MemberExpr 0x55adbc3f67a0 <col:13, col:19> '<bound member function type>' ->expiry 0x55adbc3067a0
|         | |   `-ImplicitCastExpr 0x55adbc3f6788 <col:13> 'const IPRewriterFlow *' <LValueToRValue>
|         | |     `-DeclRefExpr 0x55adbc3f6768 <col:13> 'const IPRewriterFlow *' lvalue ParmVar 0x55adbc3e9a20 'flow' 'const IPRewriterFlow *'
|         | `-ImplicitCastExpr 0x55adbc3f68f0 <col:30, col:81> 'unsigned int' <IntegralCast>
|         |   `-CXXMemberCallExpr 0x55adbc3f68b0 <col:30, col:81> 'int'
|         |     |-MemberExpr 0x55adbc3f6800 <col:30> '<bound member function type>' ->udp_flow_timeout 0x55adbc3f5560
|         |     | `-ImplicitCastExpr 0x55adbc3f68d8 <col:30> 'const MyIPRewriterMod *' <NoOp>
|         |     |   `-CXXThisExpr 0x55adbc3f67f0 <col:30> 'MyIPRewriterMod *' implicit this
|         |     `-CXXStaticCastExpr 0x55adbc3f6878 <col:47, col:80> 'const MyIPRewriterMod::UDPFlow *' static_cast<const MyIPRewriterMod::UDPFlow *> <BaseToDerived (IPRewriterFlow)>
|         |       `-ImplicitCastExpr 0x55adbc3f6860 <col:76> 'const IPRewriterFlow *' <LValueToRValue> part_of_explicit_cast
|         |         `-DeclRefExpr 0x55adbc3f6830 <col:76> 'const IPRewriterFlow *' lvalue ParmVar 0x55adbc3e9a20 'flow' 'const IPRewriterFlow *'
|         `-ImplicitCastExpr 0x55adbc3f69c0 <col:85, col:100> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-ArraySubscriptExpr 0x55adbc3f69a0 <col:85, col:100> 'uint32_t':'unsigned int' lvalue
|             |-ImplicitCastExpr 0x55adbc3f6988 <col:85> 'uint32_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55adbc3f6938 <col:85> 'uint32_t [2]' lvalue ->_udp_timeouts 0x55adbc3f53b0
|             |   `-CXXThisExpr 0x55adbc3f6928 <col:85> 'MyIPRewriterMod *' implicit this
|             `-IntegerLiteral 0x55adbc3f6968 <col:99> 'int' 1
|-CXXMethodDecl 0x55adbc3e9c80 <line:282:5, col:28> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55adbc35c1d8 TCPRewriter::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55adbc3e9b70 <col:15> col:18 'int'
| `-ParmVarDecl 0x55adbc3e9be8 <col:20, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x55adbc3e9d50 <line:284:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55adbc35c2a8 TCPRewriter::add_handlers 'void ()' ]
|-AccessSpecDecl 0x55adbc3e9df0 <line:286:3, col:10> col:3 private
|-FieldDecl 0x55adbc3e9e28 <line:288:5, col:14> col:14 _public_ip 'uint32_t':'unsigned int'
|-FieldDecl 0x55adbc3eee08 <line:289:5, col:37> col:37 _map_extern 'HashMap<NatExternKey, IPFlowID>':'HashMap<NatExternKey, IPFlowID>'
|-FieldDecl 0x55adbc3f5138 <line:290:5, col:37> col:37 _map_intern 'HashMap<NatInternKey, IPFlowID>':'HashMap<NatInternKey, IPFlowID>'
|-FieldDecl 0x55adbc3f5198 <line:292:5, col:9> col:9 referenced _udp_map 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FieldDecl 0x55adbc3f5300 <line:293:5, col:41> col:41 referenced _udp_allocator 'SizedHashAllocator<sizeof(MyIPRewriterMod::UDPFlow)>':'SizedHashAllocator<72>'
|-FieldDecl 0x55adbc3f53b0 <line:294:5, col:29> col:14 referenced _udp_timeouts 'uint32_t [2]'
|-FieldDecl 0x55adbc3f5410 <line:295:5, col:14> col:14 referenced _udp_streaming_timeout 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc3f5560 <line:297:5, line:302:5> line:297:9 used udp_flow_timeout 'int (const MyIPRewriterMod::UDPFlow *) const'
| |-ParmVarDecl 0x55adbc3f5498 <col:26, col:41> col:41 used mf 'const MyIPRewriterMod::UDPFlow *'
| `-CompoundStmt 0x55adbc3f6c50 <col:51, line:302:5>
|   `-IfStmt 0x55adbc3f6c28 <line:298:2, line:301:28> has_else
|     |-CXXMemberCallExpr 0x55adbc3f6ab0 <line:298:6, col:20> 'bool'
|     | `-MemberExpr 0x55adbc3f6a80 <col:6, col:10> '<bound member function type>' ->streaming 0x55adbc361e48
|     |   `-ImplicitCastExpr 0x55adbc3f6a68 <col:6> 'const MyIPRewriterMod::UDPFlow *' <LValueToRValue>
|     |     `-DeclRefExpr 0x55adbc3f6a48 <col:6> 'const MyIPRewriterMod::UDPFlow *' lvalue ParmVar 0x55adbc3f5498 'mf' 'const MyIPRewriterMod::UDPFlow *'
|     |-ReturnStmt 0x55adbc3f6b40 <line:299:6, col:13>
|     | `-ImplicitCastExpr 0x55adbc3f6b28 <col:13> 'int' <IntegralCast>
|     |   `-ImplicitCastExpr 0x55adbc3f6b10 <col:13> 'uint32_t':'unsigned int' <LValueToRValue>
|     |     `-MemberExpr 0x55adbc3f6ae0 <col:13> 'const uint32_t':'const unsigned int' lvalue ->_udp_streaming_timeout 0x55adbc3f5410
|     |       `-CXXThisExpr 0x55adbc3f6ad0 <col:13> 'const MyIPRewriterMod *' implicit this
|     `-ReturnStmt 0x55adbc3f6c18 <line:301:6, col:28>
|       `-ImplicitCastExpr 0x55adbc3f6c00 <col:13, col:28> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x55adbc3f6be8 <col:13, col:28> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-ArraySubscriptExpr 0x55adbc3f6bc8 <col:13, col:28> 'const uint32_t':'const unsigned int' lvalue
|             |-ImplicitCastExpr 0x55adbc3f6bb0 <col:13> 'const uint32_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55adbc3f6b60 <col:13> 'uint32_t const[2]' lvalue ->_udp_timeouts 0x55adbc3f53b0
|             |   `-CXXThisExpr 0x55adbc3f6b50 <col:13> 'const MyIPRewriterMod *' implicit this
|             `-IntegerLiteral 0x55adbc3f6b90 <col:27> 'int' 0
|-CXXMethodDecl 0x55adbc3f5728 <line:304:5, col:70> col:10 tcp_flow_apply 'void (const MyIPRewriterEntry &, WritablePacket *)'
| |-ParmVarDecl 0x55adbc3f5618 <col:25, col:50> col:50 e 'const MyIPRewriterEntry &'
| `-ParmVarDecl 0x55adbc3f5690 <col:53, col:69> col:69 p 'WritablePacket *'
|-CXXMethodDecl 0x55adbc3f58f8 <line:305:5, col:70> col:10 udp_flow_apply 'void (const MyIPRewriterEntry &, WritablePacket *)'
| |-ParmVarDecl 0x55adbc3f57e8 <col:25, col:50> col:50 e 'const MyIPRewriterEntry &'
| `-ParmVarDecl 0x55adbc3f5860 <col:53, col:69> col:69 p 'WritablePacket *'
|-CXXMethodDecl 0x55adbc3f5a48 <line:307:5, line:310:5> line:307:24 used reply_udp_map 'IPRewriterBase::Map &(IPRewriterInput *)' static inline
| |-ParmVarDecl 0x55adbc3f59b8 <col:38, col:55> col:55 used rwinput 'IPRewriterInput *'
| `-CompoundStmt 0x55adbc3f6e40 <col:64, line:310:5>
|   |-DeclStmt 0x55adbc3f6db0 <line:308:2, col:77>
|   | `-VarDecl 0x55adbc3f6c78 <col:2, col:76> col:19 used x 'MyIPRewriterMod *' cinit
|   |   `-CXXStaticCastExpr 0x55adbc3f6d70 <col:23, col:76> 'MyIPRewriterMod *' static_cast<class MyIPRewriterMod *> <BaseToDerived (TCPRewriter -> IPRewriterBase)>
|   |     `-ImplicitCastExpr 0x55adbc3f6d58 <col:54, col:63> 'IPRewriterBase *' <LValueToRValue> part_of_explicit_cast
|   |       `-MemberExpr 0x55adbc3f6d18 <col:54, col:63> 'IPRewriterBase *' lvalue ->reply_element 0x55adbc31e790
|   |         `-ImplicitCastExpr 0x55adbc3f6d00 <col:54> 'IPRewriterInput *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55adbc3f6ce0 <col:54> 'IPRewriterInput *' lvalue ParmVar 0x55adbc3f59b8 'rwinput' 'IPRewriterInput *'
|   `-ReturnStmt 0x55adbc3f6e30 <line:309:2, col:12>
|     `-MemberExpr 0x55adbc3f6e00 <col:9, col:12> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_udp_map 0x55adbc3f5198
|       `-ImplicitCastExpr 0x55adbc3f6de8 <col:9> 'MyIPRewriterMod *' <LValueToRValue>
|         `-DeclRefExpr 0x55adbc3f6dc8 <col:9> 'MyIPRewriterMod *' lvalue Var 0x55adbc3f6c78 'x' 'MyIPRewriterMod *'
|-CXXMethodDecl 0x55adbc3f5c18 <line:312:5, col:67> col:19 udp_mappings_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55adbc3f5b00 <col:40, col:49> col:49 e 'Element *'
| `-ParmVarDecl 0x55adbc3f5b80 <col:52, col:58> col:58 user_data 'void *'
|-CXXConstructorDecl 0x55adbc3f5cf8 <line:251:7> col:7 implicit MyIPRewriterMod 'void (const MyIPRewriterMod &)' inline default_delete noexcept-unevaluated 0x55adbc3f5cf8
| `-ParmVarDecl 0x55adbc3f5e08 <col:7> col:7 'const MyIPRewriterMod &'
`-CXXMethodDecl 0x55adbc3f5ea8 <col:7> col:7 implicit operator= 'MyIPRewriterMod &(const MyIPRewriterMod &)' inline default_delete noexcept-unevaluated 0x55adbc3f5ea8
  `-ParmVarDecl 0x55adbc3f5fb8 <col:7> col:7 'const MyIPRewriterMod &'

Layout: <CGRecordLayout
  LLVMType:%class.MyIPRewriterMod = type <{ %class.TCPRewriter.base, i32, %class.HashMap, %class.HashMap.24, %class.HashContainer, %class.SizedHashAllocator.25, [2 x i32], i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.MyIPRewriterMod.base = type <{ %class.TCPRewriter.base, i32, %class.HashMap, %class.HashMap.24, %class.HashContainer, %class.SizedHashAllocator.25, [2 x i32], i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc4dbb88 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55adbc4dbcb8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55adbc4dbd18 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55adbc4dbd78 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55adbc55f278 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55adbc55f350 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55adbc55f350
|-CXXConstructorDecl 0x55adbc55f608 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55adbc55f608
| `-ParmVarDecl 0x55adbc55f718 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55adbc55f7b8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55adbc55f7b8
  `-ParmVarDecl 0x55adbc55f8c8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc4db9e0 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55adbc4dbaf8 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55adbc4dbb88 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55adbc4dbcb8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55adbc4dbd18 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55adbc4dbd78 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55adbc55f278 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55adbc55f350 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55adbc55f350
| |-CXXConstructorDecl 0x55adbc55f608 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55adbc55f608
| | `-ParmVarDecl 0x55adbc55f718 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55adbc55f7b8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55adbc55f7b8
|   `-ParmVarDecl 0x55adbc55f8c8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55adbc4dbe38 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55adbc4dbe98 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55adbc4dbe38 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55adbc4dbcb8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55adbc4dbef0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55adbc4dbe38 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55adbc4dbd18 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55adbc4dbf48 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55adbc4dbe38 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55adbc4dbd78 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55adbc4dbfa0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55adbc55f188 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55adbc55fae8 <col:11>
|-CXXConstructorDecl 0x55adbc55f458 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55adbc55f458
| `-ParmVarDecl 0x55adbc55f568 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55adbc55f968 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55adbc55f968
  `-ParmVarDecl 0x55adbc55fa78 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc4d9640 prev 0x55adbc256e00 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55adbc4d9778 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55adbc4d9808 <col:33, col:39> col:33 public
|-EnumDecl 0x55adbc4d9830 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55adbc4d9970 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55adbc4d9950 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55adbc4d9930 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55adbc4d98f0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55adbc4d9910 <col:26> 'int' 16
| `-EnumConstantDecl 0x55adbc4d9a40 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55adbc4d9a20 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55adbc4d9a00 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55adbc4d99c0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55adbc4d99e0 <col:47> 'int' 31
|-EnumDecl 0x55adbc4d9a90 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55adbc4d9bd0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55adbc4d9cf0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc4d9bb0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55adbc4d9b90 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55adbc4d9b50 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55adbc4d9b70 <col:29> 'int' 15
| `-EnumConstantDecl 0x55adbc4d9ca0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55adbc4d9d08 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc4d9c80 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55adbc4d9c60 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55adbc4d9c20 <col:51> 'int' 1
|         `-IntegerLiteral 0x55adbc4d9c40 <col:54> 'int' 10
|-CXXConstructorDecl 0x55adbc4d9ed8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55adbc4d9d30 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55adbc4d9db0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55adbc4da030 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55adbc4d9fa0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55adbc4da128 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55adbc4da128
|-CXXMethodDecl 0x55adbc4da2b8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55adbc4dd3b8 <col:42, line:100:5>
|   `-ReturnStmt 0x55adbc4dd3a8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55adbc4dd390 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55adbc4dd360 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55adbc4dc0e0
|         `-CXXThisExpr 0x55adbc4dd350 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55adbc4da380 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55adbc4dd438 <col:36, line:105:5>
|   `-ReturnStmt 0x55adbc4dd428 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55adbc4dd410 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55adbc4dd3e0 <col:16> 'void *const' lvalue ->_thunk 0x55adbc4dc148
|         `-CXXThisExpr 0x55adbc4dd3d0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55adbc4da440 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55adbc4dd4b8 <col:37, line:110:5>
|   `-ReturnStmt 0x55adbc4dd4a8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55adbc4dd490 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55adbc4dd460 <col:16> 'Element *const' lvalue ->_owner 0x55adbc4dc208
|         `-CXXThisExpr 0x55adbc4dd450 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55adbc4da500 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55adbc4da5c8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55adbc4da688 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55adbc4da748 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55adbc4dd5a0 <col:35, line:137:5>
|   `-ReturnStmt 0x55adbc4dd590 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55adbc4dd558 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55adbc4dd528 <col:16, col:24> '<bound member function type>' ->router 0x55adbc268650
|         `-ImplicitCastExpr 0x55adbc4dd578 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55adbc4dd510 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55adbc4dd4e0 <col:16> 'Element *const' lvalue ->_owner 0x55adbc4dc208
|               `-CXXThisExpr 0x55adbc4dd4d0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55adbc4da808 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55adbc4da9c8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55adbc4da8b8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55adbc4da930 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55adbc4dabd8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55adbc4daa88 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55adbc4dab00 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55adbc4daca8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55adbc4dd6b0 <col:35, line:181:5>
|   `-ReturnStmt 0x55adbc4dd6a0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55adbc4dd688 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55adbc4dd670 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55adbc4dd640 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55adbc4dbd18
|           `-MemberExpr 0x55adbc4dd5f8 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55adbc4dbe38
|             `-MemberExpr 0x55adbc4dd5c8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55adbc4dc068
|               `-CXXThisExpr 0x55adbc4dd5b8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55adbc4dad68 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55adbc4dd7c8 <col:30, line:192:5>
|   `-BinaryOperator 0x55adbc4dd7a8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55adbc4dd750 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55adbc4dbd18
|     | `-MemberExpr 0x55adbc4dd708 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55adbc4dbe38
|     |   `-MemberExpr 0x55adbc4dd6d8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55adbc4dc068
|     |     `-CXXThisExpr 0x55adbc4dd6c8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55adbc4dd790 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55adbc4dd780 <col:32> 'bool' false
|-CXXMethodDecl 0x55adbc4dae28 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55adbc4ddb18 <col:30, line:206:5>
|   |-BinaryOperator 0x55adbc4dd8c0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55adbc4dd868 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55adbc4dbd18
|   | | `-MemberExpr 0x55adbc4dd820 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55adbc4dbe38
|   | |   `-MemberExpr 0x55adbc4dd7f0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55adbc4dc068
|   | |     `-CXXThisExpr 0x55adbc4dd7e0 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55adbc4dd8a8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55adbc4dd898 <col:32> 'bool' true
|   |-CallExpr 0x55adbc4dd960 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55adbc4dd948 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55adbc4dd928 <col:9> 'void ()' lvalue Function 0x55adbbe40ae8 'click_fence' 'void ()'
|   `-IfStmt 0x55adbc4ddb00 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55adbc4dda40 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55adbc4dda10 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55adbc4dd9c0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55adbc4dc478
|     | |   `-MemberExpr 0x55adbc4dd990 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55adbc4dc4f0
|     | |     `-CXXThisExpr 0x55adbc4dd980 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55adbc4dda28 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55adbc4dd9f0 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55adbc4ddac0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55adbc4dda70 <col:13> '<bound member function type>' ->complete_schedule 0x55adbc4dcef0
|       | `-CXXThisExpr 0x55adbc4dda60 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55adbc4ddae8 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55adbc4ddaa0 <col:31> 'int' 0
|-CXXMethodDecl 0x55adbc4daee8 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55adbc4ddc40 <col:35, line:240:5>
|   `-BinaryOperator 0x55adbc4ddc20 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55adbc4ddbc8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55adbc4dbd18
|     | `-MemberExpr 0x55adbc4ddb80 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55adbc4dbe38
|     |   `-MemberExpr 0x55adbc4ddb50 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55adbc4dc068
|     |     `-CXXThisExpr 0x55adbc4ddb40 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55adbc4ddc08 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55adbc4ddbf8 <col:32> 'bool' true
|-CXXMethodDecl 0x55adbc4dafa8 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55adbc4dde58 <col:37, line:253:5>
|   |-BinaryOperator 0x55adbc4ddd38 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55adbc4ddce0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55adbc4dbd18
|   | | `-MemberExpr 0x55adbc4ddc98 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55adbc4dbe38
|   | |   `-MemberExpr 0x55adbc4ddc68 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55adbc4dc068
|   | |     `-CXXThisExpr 0x55adbc4ddc58 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55adbc4ddd20 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55adbc4ddd10 <col:32> 'bool' false
|   `-BinaryOperator 0x55adbc4dde38 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55adbc4ddde0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55adbc4dbd78
|     | `-MemberExpr 0x55adbc4ddd98 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55adbc4dbe38
|     |   `-MemberExpr 0x55adbc4ddd68 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55adbc4dc068
|     |     `-CXXThisExpr 0x55adbc4ddd58 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55adbc4dde20 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55adbc4dde10 <col:41> 'bool' true
|-CXXMethodDecl 0x55adbc4db068 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55adbc4ddfd8 <col:37, line:264:5>
|   |-BinaryOperator 0x55adbc4ddf58 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55adbc4ddf00 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55adbc4dbd78
|   | | `-MemberExpr 0x55adbc4ddeb8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55adbc4dbe38
|   | |   `-MemberExpr 0x55adbc4dde88 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55adbc4dc068
|   | |     `-CXXThisExpr 0x55adbc4dde78 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55adbc4ddf40 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55adbc4ddf30 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55adbc4ddfb8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55adbc4ddf88 <col:9> '<bound member function type>' ->reschedule 0x55adbc4dae28
|       `-CXXThisExpr 0x55adbc4ddf78 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55adbc4db1b0 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55adbc4db120 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55adbc4db280 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55adbc4db3c8 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55adbc4db338 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55adbc4db518 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55adbc4db488 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55adbc4db5e0 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55adbc4db6a0 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55adbc4db740 <col:53> "" ""
|-CXXMethodDecl 0x55adbc4db7d8 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55adbc4db878 <col:47> "" ""
|-AccessSpecDecl 0x55adbc4db8e8 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55adbc4db928 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55adbc4db990 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55adbc4db9e0 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55adbc4dbaf8 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55adbc4dbb88 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55adbc4dbcb8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55adbc4dbd18 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55adbc4dbd78 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55adbc55f278 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55adbc55f350 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55adbc55f350
| | |-CXXConstructorDecl 0x55adbc55f608 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55adbc55f608
| | | `-ParmVarDecl 0x55adbc55f718 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55adbc55f7b8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55adbc55f7b8
| |   `-ParmVarDecl 0x55adbc55f8c8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55adbc4dbe38 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55adbc4dbe98 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55adbc4dbe38 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55adbc4dbcb8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55adbc4dbef0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55adbc4dbe38 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55adbc4dbd18 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55adbc4dbf48 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55adbc4dbe38 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55adbc4dbd78 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55adbc4dbfa0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55adbc55f188 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55adbc55fae8 <col:11>
| |-CXXConstructorDecl 0x55adbc55f458 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55adbc55f458
| | `-ParmVarDecl 0x55adbc55f568 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55adbc55f968 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55adbc55f968
|   `-ParmVarDecl 0x55adbc55fa78 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55adbc4dc068 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55adbc4dc0e0 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55adbc4dc148 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55adbc4dc1a8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55adbc4dc208 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55adbc4dc258 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55adbc4dc378 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55adbc4dc418 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55adbc4dc478 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55adbc5506c8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55adbc5506c8
| | `-ParmVarDecl 0x55adbc5507d8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55adbc550878 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55adbc550878
| | `-ParmVarDecl 0x55adbc550988 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55adbc5509f8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55adbc5509f8
| |-CXXMethodDecl 0x55adbc551278 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55adbc551278
| | `-ParmVarDecl 0x55adbc551388 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55adbc5513f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55adbc5513f8
| | `-ParmVarDecl 0x55adbc551508 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55adbc55fb48 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55adbc55fc20 <col:11>
|-FieldDecl 0x55adbc4dc4f0 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55adbc4dc638 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55adbc4dc578 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55adbc4dc7e8 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55adbc4dc6f8 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55adbc4dc8b0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55adbc4dc970 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55adbc4dca30 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55adbc4de0e8 <col:41, line:355:5>
|   `-ReturnStmt 0x55adbc4de0d8 <line:354:9, col:38>
|     `-BinaryOperator 0x55adbc4de0b8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55adbc4de088 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55adbc4de038 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55adbc4dc478
|       |   `-MemberExpr 0x55adbc4de008 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55adbc4dc4f0
|       |     `-CXXThisExpr 0x55adbc4ddff8 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55adbc4de0a0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55adbc4de068 <col:38> 'int' 0
|-CXXMethodDecl 0x55adbc4dcaf0 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55adbc4dcc30 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55adbc4dcba0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55adbc4dcda8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55adbc4dcce8 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55adbc4dcef0 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55adbc4dce60 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55adbc4dcfb8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55adbc4dd180 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55adbc4dd068 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55adbc4dd0e8 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55adbc4dd280 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55adbc4dd310 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc446a18 prev 0x55adbc216248 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc446b10 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55adbc446ba0 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55adbc446cd8 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55adbc446bd8 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55adbc448100 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55adbc4480e0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55adbc447c78 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55adbc448190 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55adbc448150 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55adbc446bd8 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55adbc447ce0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55adbc448210 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55adbc4481d0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55adbc447d40 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55adbc448250 <col:54> 'bool' false
| `-CompoundStmt 0x55adbc448358 <col:61, line:38:5>
|   `-BinaryOperator 0x55adbc448338 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55adbc4482d0 <col:9> 'const Element *' lvalue ->_context 0x55adbc447c18
|     | `-CXXThisExpr 0x55adbc4482c0 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55adbc448320 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55adbc448300 <col:20> 'int' 0
|-CXXConstructorDecl 0x55adbc446ee8 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc446d98 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55adbc446e10 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55adbc448138 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55adbc448118 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55adbc447c18 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55adbc4483b0 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55adbc448370 <col:20> 'const Element *' lvalue ParmVar 0x55adbc446d98 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55adbc447c78 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55adbc448430 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55adbc4483f0 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55adbc446e10 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55adbc447ce0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55adbc4484b0 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55adbc448470 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55adbc447d40 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55adbc4484f0 <col:73> 'bool' false
| `-CompoundStmt 0x55adbc448568 <col:80, line:46:5>
|-CXXMethodDecl 0x55adbc447018 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55adbc4485e0 <col:36, line:51:5>
|   `-ReturnStmt 0x55adbc4485d0 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55adbc4485b8 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55adbc448588 <col:16> 'const Element *const' lvalue ->_context 0x55adbc447c18
|         `-CXXThisExpr 0x55adbc448578 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55adbc447108 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55adbc448660 <col:32, line:57:5>
|   `-ReturnStmt 0x55adbc448650 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55adbc448638 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55adbc448608 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55adbc447c78
|         `-CXXThisExpr 0x55adbc4485f8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55adbc4471c8 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55adbc447350 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55adbc447280 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4474a0 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55adbc447410 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4475f0 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55adbc447560 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55adbc4477f8 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55adbc4476a8 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55adbc447720 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55adbc447b28 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55adbc4478b8 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55adbc447938 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55adbc447a00 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55adbc447be0 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55adbc447c18 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55adbc447c78 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55adbc447ce0 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55adbc447d40 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55adbc447d90 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55adbc447d90
| `-ParmVarDecl 0x55adbc447ea8 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x55adbc447f48 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55adbc447f48
| `-ParmVarDecl 0x55adbc448058 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x55adbc5b7aa8 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc45fd78 prev 0x55adbc44d598 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbc45fe70 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x55adbc45ff60 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x55adbc48f878 <col:16, line:828:9>
|-CXXDestructorDecl 0x55adbc460050 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x55adbc48f888 <col:25, line:830:9>
|-CXXMethodDecl 0x55adbc460150 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x55adbc460200 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x55adbc4602a8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55adbc4602a8
| `-ParmVarDecl 0x55adbc4603b8 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x55adbc460b78 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55adbc460b78
  `-ParmVarDecl 0x55adbc460c88 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc44d3a8 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x55adbc44d508 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x55adbc44d598 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x55adbc44d650 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x55adbc44d758 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x55adbc44d688 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55adbc47e0e8 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55adbc47e0c8 <col:31> 'int' 0
|-CXXConstructorDecl 0x55adbc44da78 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc44d8f0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x55adbc44d968 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55adbc47e120 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55adbc47e100 <col:59> 'int' 0
|-CXXConstructorDecl 0x55adbc44dc50 <line:265:5, col:56> col:5 used Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc44db40 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x55adbc44dbb8 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55adbc47e158 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55adbc47e138 <col:55> 'int' 0
|-CXXConstructorDecl 0x55adbc44e008 <line:271:5, line:272:32> line:271:5 Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55adbc44ddf0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x55adbc44de68 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x55adbc44dee0 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55adbc47e190 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55adbc47e170 <col:31> 'int' 0
|-CXXConstructorDecl 0x55adbc44e1c8 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x55adbc44e108 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x55adbc44e2c0 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x55adbc44e4a8 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x55adbc44e3b0 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x55adbc44e598 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x55adbc47e540 <col:24, line:291:5>
|   `-ReturnStmt 0x55adbc47e530 <line:290:9, col:79>
|     `-BinaryOperator 0x55adbc47e510 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x55adbc47e3e8 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x55adbc47e340 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x55adbc47e320 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x55adbc47e218 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x55adbc47e200 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x55adbc47e1e8 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x55adbc47e1b8 <col:18> 'Vector<String> *const' lvalue ->_conf 0x55adbc461ba0
|       | |   |       `-CXXThisExpr 0x55adbc47e1a8 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x55adbc47e308 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x55adbc47e2f0 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x55adbc47e2b8 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x55adbc47e288 <col:28, col:35> '<bound member function type>' ->size 0x55adbc428358
|       | |           `-ImplicitCastExpr 0x55adbc47e2d8 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x55adbc47e270 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x55adbc47e240 <col:28> 'Vector<String> *const' lvalue ->_conf 0x55adbc461ba0
|       | |                 `-CXXThisExpr 0x55adbc47e230 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x55adbc47e3d0 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x55adbc47e3b8 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x55adbc47e3a0 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x55adbc47e370 <col:47> 'Args::Slot *const' lvalue ->_slots 0x55adbc47cca0
|       |         `-CXXThisExpr 0x55adbc47e360 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x55adbc47e4f0 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x55adbc47e4d8 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55adbc47e4c0 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55adbc47e480 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55adbc47e468 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55adbc47e418 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55adbc47cd50
|         |     |   `-CXXThisExpr 0x55adbc47e408 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55adbc47e448 <col:73> 'int' 0
|         `-IntegerLiteral 0x55adbc47e4a0 <col:79> 'int' 0
|-CXXMethodDecl 0x55adbc44e658 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x55adbc47e718 <col:32, line:296:5>
|   `-ReturnStmt 0x55adbc47e708 <line:295:9, col:49>
|     `-BinaryOperator 0x55adbc47e6e8 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x55adbc47e5c8 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x55adbc47e5b0 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55adbc47e598 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x55adbc47e568 <col:17> 'Args::Slot *const' lvalue ->_slots 0x55adbc47cca0
|       |       `-CXXThisExpr 0x55adbc47e558 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x55adbc47e6c8 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x55adbc47e6b0 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55adbc47e698 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55adbc47e658 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55adbc47e640 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55adbc47e5f0 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55adbc47cd50
|         |     |   `-CXXThisExpr 0x55adbc47e5e0 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55adbc47e620 <col:43> 'int' 0
|         `-IntegerLiteral 0x55adbc47e678 <col:49> 'int' 0
|-CXXMethodDecl 0x55adbc44e748 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x55adbc47e928 <col:19, line:306:5>
|   |-IfStmt 0x55adbc47e848 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x55adbc47e788 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x55adbc47e770 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x55adbc47e740 <col:13> 'Vector<String> *' lvalue ->_conf 0x55adbc461ba0
|   | |     `-CXXThisExpr 0x55adbc47e730 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x55adbc47e828 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x55adbc47e7f8 <col:13, col:20> '<bound member function type>' ->clear 0x55adbc42ad28
|   |     `-ImplicitCastExpr 0x55adbc47e7e0 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x55adbc47e7b0 <col:13> 'Vector<String> *' lvalue ->_conf 0x55adbc461ba0
|   |         `-CXXThisExpr 0x55adbc47e7a0 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x55adbc47e8d0 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x55adbc47e8a0 <col:9, col:16> '<bound member function type>' .clear 0x55adbc47c828
|   |   `-MemberExpr 0x55adbc47e870 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x55adbc47cc40
|   |     `-CXXThisExpr 0x55adbc47e860 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x55adbc47e918 <line:305:9, col:17>
|     `-UnaryOperator 0x55adbc47e900 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55adbc47e8f0 <col:17> 'Args *' this
|-CXXMethodDecl 0x55adbc44e9c8 <line:313:5, col:36> col:11 used bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x55adbc44e8d0 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x55adbc44eb48 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x55adbc44ea80 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x55adbc44eec8 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x55adbc44ebf0 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x55adbc44ee28 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x55adbc44ec98 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x55adbc44ed10 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x55adbc47ec78 <col:67, line:327:5>
|     |-WhileStmt 0x55adbc47ec28 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x55adbc47ea40 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55adbc47e990 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55adbc3a0d98 0x55adbc318f40 0x55adbc2feaa8 0x55adbc2f64c8 0x55adbc2c2c68 0x55adbc28b368 0x55adbc20e778 0x55adbc05e8b8 0x55adbc05e590 0x55adbc04c0f0 0x55adbc04bda0 0x55adbc04b490 0x55adbbfb4bd0 0x55adbbfa45e0
|     | | |-DeclRefExpr 0x55adbc47e950 <col:16> 'Iter' lvalue ParmVar 0x55adbc44ec98 'begin' 'Iter'
|     | | `-DeclRefExpr 0x55adbc47e970 <col:25> 'Iter' lvalue ParmVar 0x55adbc44ed10 'end' 'Iter'
|     | `-CompoundStmt 0x55adbc47ec08 <col:30, line:325:9>
|     |   |-CallExpr 0x55adbc47eba8 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x55adbc47ea88 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x55adbc47eb78 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x55adbc47eb08 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55adbc213878 0x55adbc213498 0x55adbc2130c8 0x55adbc212ce8 0x55adbc212908 0x55adbc212538
|     |   |   `-DeclRefExpr 0x55adbc47eae8 <col:24> 'Iter' lvalue ParmVar 0x55adbc44ec98 'begin' 'Iter'
|     |   `-UnaryOperator 0x55adbc47ebf0 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x55adbc47ebd0 <col:15> 'Iter' lvalue ParmVar 0x55adbc44ec98 'begin' 'Iter'
|     `-ReturnStmt 0x55adbc47ec68 <line:326:9, col:17>
|       `-UnaryOperator 0x55adbc47ec50 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55adbc47ec40 <col:17> 'Args *' this
|-CXXMethodDecl 0x55adbc44efd0 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x55adbc44ef40 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x55adbc44f118 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x55adbc44f088 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x55adbc44f1e0 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x55adbc47ed58 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x55adbc47ecf8 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x55adbc47eca8 <col:9> '<bound member function type>' ->reset_from 0x55adbc47d0c8
|   | | `-CXXThisExpr 0x55adbc47ec98 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x55adbc47ecd8 <col:20> 'int' 0
|   `-ReturnStmt 0x55adbc47ed48 <line:352:9, col:17>
|     `-UnaryOperator 0x55adbc47ed30 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55adbc47ed20 <col:17> 'Args *' this
|-VarDecl 0x55adbc44f298 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x55adbc44f300 <col:38> 'int' 1
|-VarDecl 0x55adbc44f390 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x55adbc44f3f8 <col:39> 'int' 2
|-VarDecl 0x55adbc44f488 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x55adbc44f4f0 <col:39> 'int' 4
|-VarDecl 0x55adbc44f580 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x55adbc44f5e8 <col:39> 'int' 8
|-FunctionTemplateDecl 0x55adbc44f968 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x55adbc44f660 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55adbc44f8c8 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55adbc44f710 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc44f7b8 <col:37, col:40> col:40 referenced x 'T &'
|   `-CompoundStmt 0x55adbc47eeb0 <col:43, line:371:5>
|     `-ReturnStmt 0x55adbc47eea0 <line:370:9, col:34>
|       `-CallExpr 0x55adbc47ee68 <col:16, col:34> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc47ed88 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc47ee08 <col:21> 'const char *' lvalue ParmVar 0x55adbc44f710 'keyword' 'const char *'
|         |-IntegerLiteral 0x55adbc47ee28 <col:30> 'int' 0
|         `-DeclRefExpr 0x55adbc47ee48 <col:33> 'T' lvalue ParmVar 0x55adbc44f7b8 'x' 'T &'
|-FunctionTemplateDecl 0x55adbc44fc98 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x55adbc44f9d0 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55adbc44fbf8 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55adbc44fa80 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc44fb28 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55adbc47f000 <col:45, line:375:5>
|     `-ReturnStmt 0x55adbc47eff0 <line:374:9, col:42>
|       `-CallExpr 0x55adbc47efb8 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc47eed8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc47ef58 <col:21> 'const char *' lvalue ParmVar 0x55adbc44fa80 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc47ef78 <col:30> 'const int' lvalue Var 0x55adbc44f298 'mandatory' 'const int'
|         `-DeclRefExpr 0x55adbc47ef98 <col:41> 'T' lvalue ParmVar 0x55adbc44fb28 'x' 'T &'
|-FunctionTemplateDecl 0x55adbc44ffc8 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x55adbc44fd00 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55adbc44ff28 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55adbc44fdb0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc44fe58 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55adbc47f150 <col:45, line:379:5>
|     `-ReturnStmt 0x55adbc47f140 <line:378:9, col:43>
|       `-CallExpr 0x55adbc47f108 <col:16, col:43> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc47f028 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc47f0a8 <col:21> 'const char *' lvalue ParmVar 0x55adbc44fdb0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc47f0c8 <col:30> 'const int' lvalue Var 0x55adbc44f390 'positional' 'const int'
|         `-DeclRefExpr 0x55adbc47f0e8 <col:42> 'T' lvalue ParmVar 0x55adbc44fe58 'x' 'T &'
|-FunctionTemplateDecl 0x55adbc4502f8 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x55adbc450030 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55adbc450258 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55adbc4500e0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc450188 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x55adbc47f350 <col:46, line:383:5>
|     `-ReturnStmt 0x55adbc47f340 <line:382:9, col:55>
|       `-CallExpr 0x55adbc47f308 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc47f178 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc47f1f8 <col:21> 'const char *' lvalue ParmVar 0x55adbc4500e0 'keyword' 'const char *'
|         |-BinaryOperator 0x55adbc47f2c8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55adbc47f278 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55adbc47f258 <col:30> 'const int' lvalue Var 0x55adbc44f298 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55adbc47f2b0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55adbc47f290 <col:42> 'const int' lvalue Var 0x55adbc44f390 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55adbc47f2e8 <col:54> 'T' lvalue ParmVar 0x55adbc450188 'x' 'T &'
|-FunctionTemplateDecl 0x55adbc4506f8 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x55adbc450360 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55adbc450658 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x55adbc450410 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc450490 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc450538 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x55adbc47f490 <col:54, line:388:5>
|     |-CallExpr 0x55adbc47f418 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55adbc47f368 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55adbc47f3a8 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55adbc47f3b8 <col:30> 'const char *' lvalue ParmVar 0x55adbc450410 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55adbc47f3d8 <col:39> 'int' lvalue ParmVar 0x55adbc450490 'flags' 'int'
|     | `-DeclRefExpr 0x55adbc47f3f8 <col:46> 'T' lvalue ParmVar 0x55adbc450538 'x' 'T &'
|     `-ReturnStmt 0x55adbc47f480 <line:387:9, col:17>
|       `-UnaryOperator 0x55adbc47f468 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55adbc47f458 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55adbc450bd0 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x55adbc450768 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55adbc4507e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55adbc450b30 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55adbc4508a8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc450948 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x55adbc4509e8 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x55adbc47f600 <col:74, line:403:5>
|     `-ReturnStmt 0x55adbc47f5f0 <line:402:9, col:56>
|       `-CallExpr 0x55adbc47f5b0 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc47f4c0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc47f530 <col:28> 'const char *' lvalue ParmVar 0x55adbc4508a8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55adbc47f550 <col:37> 'int' 0
|         |-DeclRefExpr 0x55adbc47f570 <col:40> 'T' lvalue ParmVar 0x55adbc450948 'x' 'T &'
|         `-DeclRefExpr 0x55adbc47f590 <col:43> 'const V' lvalue ParmVar 0x55adbc4509e8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55adbc451038 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55adbc450c40 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55adbc450cb8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55adbc450f98 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55adbc450d78 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc450e18 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x55adbc450eb8 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x55adbc47f768 <col:76, line:407:5>
|     `-ReturnStmt 0x55adbc47f758 <line:406:9, col:65>
|       `-CallExpr 0x55adbc47f718 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc47f628 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc47f698 <col:28> 'const char *' lvalue ParmVar 0x55adbc450d78 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc47f6b8 <col:37> 'const int' lvalue Var 0x55adbc44f390 'positional' 'const int'
|         |-DeclRefExpr 0x55adbc47f6d8 <col:49> 'T' lvalue ParmVar 0x55adbc450e18 'x' 'T &'
|         `-DeclRefExpr 0x55adbc47f6f8 <col:52> 'const V' lvalue ParmVar 0x55adbc450eb8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55adbc451588 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x55adbc4510a8 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55adbc451128 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55adbc4514e8 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55adbc4511e8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc451268 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc451308 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x55adbc4513a8 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x55adbc47f8d0 <col:85, line:412:5>
|     |-CallExpr 0x55adbc47f850 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55adbc47f780 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55adbc47f7c0 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55adbc47f7d0 <col:37> 'const char *' lvalue ParmVar 0x55adbc4511e8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55adbc47f7f0 <col:46> 'int' lvalue ParmVar 0x55adbc451268 'flags' 'int'
|     | |-DeclRefExpr 0x55adbc47f810 <col:53> 'T' lvalue ParmVar 0x55adbc451308 'x' 'T &'
|     | `-DeclRefExpr 0x55adbc47f830 <col:56> 'const V' lvalue ParmVar 0x55adbc4513a8 'default_value' 'const V &'
|     `-ReturnStmt 0x55adbc47f8c0 <line:411:9, col:17>
|       `-UnaryOperator 0x55adbc47f8a8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55adbc47f898 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55adbc451a18 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x55adbc451600 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc451678 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x55adbc451978 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x55adbc451738 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55adbc4517b0 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x55adbc451858 <col:47, col:50> col:50 referenced x 'T &'
| | `-CompoundStmt 0x55adbc47fa50 <col:53, line:425:5>
| |   `-ReturnStmt 0x55adbc47fa40 <line:424:9, col:42>
| |     `-CallExpr 0x55adbc47fa00 <col:16, col:42> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55adbc47f900 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55adbc47f980 <col:21> 'const char *' lvalue ParmVar 0x55adbc451738 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55adbc47f9a0 <col:30> 'int' 0
| |       |-DeclRefExpr 0x55adbc47f9c0 <col:33> 'P' lvalue ParmVar 0x55adbc4517b0 'parser' 'P'
| |       `-DeclRefExpr 0x55adbc47f9e0 <col:41> 'T' lvalue ParmVar 0x55adbc451858 'x' 'T &'
| `-CXXMethodDecl 0x55adbc5e3b68 <line:423:5, line:425:5> line:423:11 used read 'Args &(const char *, SecondsArg, unsigned int &)'
|   |-TemplateArgument type 'SecondsArg'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x55adbc5e38d8 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x55adbc5e3978 <col:37, col:39> col:39 parser 'SecondsArg':'SecondsArg'
|   `-ParmVarDecl 0x55adbc5e3a48 <col:47, col:50> col:50 x 'unsigned int &'
|-FunctionTemplateDecl 0x55adbc451e68 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x55adbc451a88 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc451b08 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc451dc8 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55adbc451bc8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc451c40 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc451ce8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55adbc47fbc8 <col:55, line:429:5>
|     `-ReturnStmt 0x55adbc47fbb8 <line:428:9, col:50>
|       `-CallExpr 0x55adbc47fb78 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc47fa78 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc47faf8 <col:21> 'const char *' lvalue ParmVar 0x55adbc451bc8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc47fb18 <col:30> 'const int' lvalue Var 0x55adbc44f298 'mandatory' 'const int'
|         |-DeclRefExpr 0x55adbc47fb38 <col:41> 'P' lvalue ParmVar 0x55adbc451c40 'parser' 'P'
|         `-DeclRefExpr 0x55adbc47fb58 <col:49> 'T' lvalue ParmVar 0x55adbc451ce8 'x' 'T &'
|-FunctionTemplateDecl 0x55adbc4522b8 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x55adbc451ed8 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc451f58 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc452218 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55adbc452018 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc452090 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc452138 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55adbc47fd40 <col:55, line:433:5>
|     `-ReturnStmt 0x55adbc47fd30 <line:432:9, col:51>
|       `-CallExpr 0x55adbc47fcf0 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc47fbf0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc47fc70 <col:21> 'const char *' lvalue ParmVar 0x55adbc452018 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc47fc90 <col:30> 'const int' lvalue Var 0x55adbc44f390 'positional' 'const int'
|         |-DeclRefExpr 0x55adbc47fcb0 <col:42> 'P' lvalue ParmVar 0x55adbc452090 'parser' 'P'
|         `-DeclRefExpr 0x55adbc47fcd0 <col:50> 'T' lvalue ParmVar 0x55adbc452138 'x' 'T &'
|-FunctionTemplateDecl 0x55adbc452708 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x55adbc452328 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc4523a8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc452668 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55adbc452468 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc4524e0 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc452588 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x55adbc47ff68 <col:56, line:437:5>
|     `-ReturnStmt 0x55adbc47ff58 <line:436:9, col:63>
|       `-CallExpr 0x55adbc47ff18 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc47fd68 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc47fde8 <col:21> 'const char *' lvalue ParmVar 0x55adbc452468 'keyword' 'const char *'
|         |-BinaryOperator 0x55adbc47feb8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55adbc47fe68 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55adbc47fe48 <col:30> 'const int' lvalue Var 0x55adbc44f298 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55adbc47fea0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55adbc47fe80 <col:42> 'const int' lvalue Var 0x55adbc44f390 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55adbc47fed8 <col:54> 'P' lvalue ParmVar 0x55adbc4524e0 'parser' 'P'
|         `-DeclRefExpr 0x55adbc47fef8 <col:62> 'T' lvalue ParmVar 0x55adbc452588 'x' 'T &'
|-FunctionTemplateDecl 0x55adbc452c38 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x55adbc452778 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc4527f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc452b98 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55adbc4528b8 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc452938 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc4529b0 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc452a58 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x55adbc4800d0 <col:64, line:442:5>
|     |-CallExpr 0x55adbc480050 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55adbc47ff80 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55adbc47ffc0 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55adbc47ffd0 <col:30> 'const char *' lvalue ParmVar 0x55adbc4528b8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55adbc47fff0 <col:39> 'int' lvalue ParmVar 0x55adbc452938 'flags' 'int'
|     | |-DeclRefExpr 0x55adbc480010 <col:46> 'P' lvalue ParmVar 0x55adbc4529b0 'parser' 'P'
|     | `-DeclRefExpr 0x55adbc480030 <col:54> 'T' lvalue ParmVar 0x55adbc452a58 'x' 'T &'
|     `-ReturnStmt 0x55adbc4800c0 <line:441:9, col:17>
|       `-UnaryOperator 0x55adbc4800a8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55adbc480098 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55adbc453238 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x55adbc452cb0 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc452d28 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55adbc452da8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55adbc453198 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55adbc452e70 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc452ee8 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc452f88 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x55adbc453058 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x55adbc480268 <col:84, line:458:5>
|     `-ReturnStmt 0x55adbc480258 <line:457:9, col:64>
|       `-CallExpr 0x55adbc480210 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc480100 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc480170 <col:28> 'const char *' lvalue ParmVar 0x55adbc452e70 'keyword' 'const char *'
|         |-IntegerLiteral 0x55adbc480190 <col:37> 'int' 0
|         |-DeclRefExpr 0x55adbc4801b0 <col:40> 'P' lvalue ParmVar 0x55adbc452ee8 'parser' 'P'
|         |-DeclRefExpr 0x55adbc4801d0 <col:48> 'T' lvalue ParmVar 0x55adbc452f88 'x' 'T &'
|         `-DeclRefExpr 0x55adbc4801f0 <col:51> 'const V' lvalue ParmVar 0x55adbc453058 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55adbc4537b8 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55adbc4532b0 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc453328 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55adbc4533a8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55adbc453718 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55adbc453470 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc4534e8 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc453588 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x55adbc453628 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x55adbc4803f8 <col:86, line:462:5>
|     `-ReturnStmt 0x55adbc4803e8 <line:461:9, col:73>
|       `-CallExpr 0x55adbc4803a0 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc480290 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc480300 <col:28> 'const char *' lvalue ParmVar 0x55adbc453470 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc480320 <col:37> 'const int' lvalue Var 0x55adbc44f390 'positional' 'const int'
|         |-DeclRefExpr 0x55adbc480340 <col:49> 'P' lvalue ParmVar 0x55adbc4534e8 'parser' 'P'
|         |-DeclRefExpr 0x55adbc480360 <col:57> 'T' lvalue ParmVar 0x55adbc453588 'x' 'T &'
|         `-DeclRefExpr 0x55adbc480380 <col:60> 'const V' lvalue ParmVar 0x55adbc453628 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55adbc453e18 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x55adbc453830 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc4538a8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55adbc453928 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55adbc453d78 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55adbc4539f0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc453a70 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc453ae8 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc453b88 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x55adbc453c28 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x55adbc480588 <col:95, line:467:5>
|     |-CallExpr 0x55adbc480500 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55adbc480410 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55adbc480450 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55adbc480460 <col:37> 'const char *' lvalue ParmVar 0x55adbc4539f0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55adbc480480 <col:46> 'int' lvalue ParmVar 0x55adbc453a70 'flags' 'int'
|     | |-DeclRefExpr 0x55adbc4804a0 <col:53> 'P' lvalue ParmVar 0x55adbc453ae8 'parser' 'P'
|     | |-DeclRefExpr 0x55adbc4804c0 <col:61> 'T' lvalue ParmVar 0x55adbc453b88 'x' 'T &'
|     | `-DeclRefExpr 0x55adbc4804e0 <col:64> 'const V' lvalue ParmVar 0x55adbc453c28 'default_value' 'const V &'
|     `-ReturnStmt 0x55adbc480578 <line:466:9, col:17>
|       `-UnaryOperator 0x55adbc480560 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55adbc480550 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55adbc4543f8 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x55adbc453e98 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc453f18 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55adbc453f98 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55adbc454358 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55adbc454060 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc4540d8 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc454178 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55adbc454218 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x55adbc480730 <col:63, line:481:5>
|     `-ReturnStmt 0x55adbc480720 <line:480:9, col:47>
|       `-CallExpr 0x55adbc4806d8 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc4805b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc480638 <col:21> 'const char *' lvalue ParmVar 0x55adbc454060 'keyword' 'const char *'
|         |-IntegerLiteral 0x55adbc480658 <col:30> 'int' 0
|         |-DeclRefExpr 0x55adbc480678 <col:33> 'P' lvalue ParmVar 0x55adbc4540d8 'parser' 'P'
|         |-DeclRefExpr 0x55adbc480698 <col:41> 'T1' lvalue ParmVar 0x55adbc454178 'x1' 'T1 &'
|         `-DeclRefExpr 0x55adbc4806b8 <col:45> 'T2' lvalue ParmVar 0x55adbc454218 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55adbc454978 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x55adbc454470 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc4544e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55adbc454568 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55adbc4548d8 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55adbc454630 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc4546a8 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc454748 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55adbc4547e8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55adbc4808d0 <col:65, line:485:5>
|     `-ReturnStmt 0x55adbc4808c0 <line:484:9, col:55>
|       `-CallExpr 0x55adbc480878 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc480758 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc4807d8 <col:21> 'const char *' lvalue ParmVar 0x55adbc454630 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc4807f8 <col:30> 'const int' lvalue Var 0x55adbc44f298 'mandatory' 'const int'
|         |-DeclRefExpr 0x55adbc480818 <col:41> 'P' lvalue ParmVar 0x55adbc4546a8 'parser' 'P'
|         |-DeclRefExpr 0x55adbc480838 <col:49> 'T1' lvalue ParmVar 0x55adbc454748 'x1' 'T1 &'
|         `-DeclRefExpr 0x55adbc480858 <col:53> 'T2' lvalue ParmVar 0x55adbc4547e8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55adbc454ef8 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x55adbc4549f0 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc454a68 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55adbc454ae8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55adbc454e58 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55adbc454bb0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc454c28 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc454cc8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55adbc454d68 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55adbc480a70 <col:65, line:489:5>
|     `-ReturnStmt 0x55adbc480a60 <line:488:9, col:56>
|       `-CallExpr 0x55adbc480a18 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc4808f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc480978 <col:21> 'const char *' lvalue ParmVar 0x55adbc454bb0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc480998 <col:30> 'const int' lvalue Var 0x55adbc44f390 'positional' 'const int'
|         |-DeclRefExpr 0x55adbc4809b8 <col:42> 'P' lvalue ParmVar 0x55adbc454c28 'parser' 'P'
|         |-DeclRefExpr 0x55adbc4809d8 <col:50> 'T1' lvalue ParmVar 0x55adbc454cc8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55adbc4809f8 <col:54> 'T2' lvalue ParmVar 0x55adbc454d68 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55adbc455478 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x55adbc454f70 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc454fe8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55adbc455068 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55adbc4553d8 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55adbc455130 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc4551a8 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc455248 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55adbc4552e8 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x55adbc480cc0 <col:66, line:493:5>
|     `-ReturnStmt 0x55adbc480cb0 <line:492:9, col:68>
|       `-CallExpr 0x55adbc480c68 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc480a98 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc480b18 <col:21> 'const char *' lvalue ParmVar 0x55adbc455130 'keyword' 'const char *'
|         |-BinaryOperator 0x55adbc480be8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55adbc480b98 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55adbc480b78 <col:30> 'const int' lvalue Var 0x55adbc44f298 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55adbc480bd0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55adbc480bb0 <col:42> 'const int' lvalue Var 0x55adbc44f390 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55adbc480c08 <col:54> 'P' lvalue ParmVar 0x55adbc4551a8 'parser' 'P'
|         |-DeclRefExpr 0x55adbc480c28 <col:62> 'T1' lvalue ParmVar 0x55adbc455248 'x1' 'T1 &'
|         `-DeclRefExpr 0x55adbc480c48 <col:66> 'T2' lvalue ParmVar 0x55adbc4552e8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55adbc455ad8 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x55adbc4554f0 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc455568 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55adbc4555e8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55adbc455a38 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55adbc4556b0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc455730 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc4557a8 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc455848 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55adbc4558e8 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x55adbc480e50 <col:74, line:498:5>
|     |-CallExpr 0x55adbc480dc8 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55adbc480cd8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55adbc480d18 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55adbc480d28 <col:30> 'const char *' lvalue ParmVar 0x55adbc4556b0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55adbc480d48 <col:39> 'int' lvalue ParmVar 0x55adbc455730 'flags' 'int'
|     | |-DeclRefExpr 0x55adbc480d68 <col:46> 'P' lvalue ParmVar 0x55adbc4557a8 'parser' 'P'
|     | |-DeclRefExpr 0x55adbc480d88 <col:54> 'T1' lvalue ParmVar 0x55adbc455848 'x1' 'T1 &'
|     | `-DeclRefExpr 0x55adbc480da8 <col:58> 'T2' lvalue ParmVar 0x55adbc4558e8 'x2' 'T2 &'
|     `-ReturnStmt 0x55adbc480e40 <line:497:9, col:17>
|       `-UnaryOperator 0x55adbc480e28 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55adbc480e18 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55adbc455e38 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x55adbc455b58 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55adbc455d98 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55adbc455c10 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc455c88 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x55adbc480f98 <col:52, line:509:5>
|     `-ReturnStmt 0x55adbc480f88 <line:508:9, col:44>
|       `-CallExpr 0x55adbc480f50 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc480e80 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc480ef0 <col:26> 'const char *' lvalue ParmVar 0x55adbc455c10 'keyword' 'const char *'
|         |-IntegerLiteral 0x55adbc480f10 <col:35> 'int' 0
|         `-DeclRefExpr 0x55adbc480f30 <col:38> 'P' lvalue ParmVar 0x55adbc455c88 'parser' 'P'
|-FunctionTemplateDecl 0x55adbc456138 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x55adbc455ea0 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55adbc456098 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55adbc455f50 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc455fc8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55adbc4810d8 <col:54, line:513:5>
|     `-ReturnStmt 0x55adbc4810c8 <line:512:9, col:52>
|       `-CallExpr 0x55adbc481090 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc480fc0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc481030 <col:26> 'const char *' lvalue ParmVar 0x55adbc455f50 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc481050 <col:35> 'const int' lvalue Var 0x55adbc44f298 'mandatory' 'const int'
|         `-DeclRefExpr 0x55adbc481070 <col:46> 'P' lvalue ParmVar 0x55adbc455fc8 'parser' 'P'
|-FunctionTemplateDecl 0x55adbc456438 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x55adbc4561a0 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55adbc456398 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55adbc456250 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc4562c8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55adbc481218 <col:54, line:517:5>
|     `-ReturnStmt 0x55adbc481208 <line:516:9, col:53>
|       `-CallExpr 0x55adbc4811d0 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc481100 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc481170 <col:26> 'const char *' lvalue ParmVar 0x55adbc456250 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc481190 <col:35> 'const int' lvalue Var 0x55adbc44f390 'positional' 'const int'
|         `-DeclRefExpr 0x55adbc4811b0 <col:47> 'P' lvalue ParmVar 0x55adbc4562c8 'parser' 'P'
|-FunctionTemplateDecl 0x55adbc456738 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x55adbc4564a0 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55adbc456698 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55adbc456550 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc4565c8 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x55adbc481408 <col:55, line:521:5>
|     `-ReturnStmt 0x55adbc4813f8 <line:520:9, col:65>
|       `-CallExpr 0x55adbc4813c0 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc481240 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc4812b0 <col:26> 'const char *' lvalue ParmVar 0x55adbc456550 'keyword' 'const char *'
|         |-BinaryOperator 0x55adbc481380 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x55adbc481330 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55adbc481310 <col:35> 'const int' lvalue Var 0x55adbc44f298 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55adbc481368 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55adbc481348 <col:47> 'const int' lvalue Var 0x55adbc44f390 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55adbc4813a0 <col:59> 'P' lvalue ParmVar 0x55adbc4565c8 'parser' 'P'
|-FunctionTemplateDecl 0x55adbc456b08 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x55adbc4567a0 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55adbc456a68 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55adbc456850 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc4568d0 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc456948 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x55adbc481548 <col:63, line:526:5>
|     |-CallExpr 0x55adbc4814d0 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55adbc481420 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x55adbc481460 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x55adbc481470 <col:35> 'const char *' lvalue ParmVar 0x55adbc456850 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55adbc481490 <col:44> 'int' lvalue ParmVar 0x55adbc4568d0 'flags' 'int'
|     | `-DeclRefExpr 0x55adbc4814b0 <col:51> 'P' lvalue ParmVar 0x55adbc456948 'parser' 'P'
|     `-ReturnStmt 0x55adbc481538 <line:525:9, col:17>
|       `-UnaryOperator 0x55adbc481520 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55adbc481510 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55adbc456f58 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x55adbc456b78 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc456bf8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc456eb8 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55adbc456cb8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc456d30 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc456dd8 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x55adbc4816a0 <col:58, line:541:5>
|     `-ReturnStmt 0x55adbc481690 <line:540:9, col:39>
|       `-CallExpr 0x55adbc481658 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc481578 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc4815f8 <col:21> 'const char *' lvalue ParmVar 0x55adbc456cb8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc481618 <col:30> 'P' lvalue ParmVar 0x55adbc456d30 'parser' 'P'
|         `-DeclRefExpr 0x55adbc481638 <col:38> 'T' lvalue ParmVar 0x55adbc456dd8 'x' 'T &'
|-FunctionTemplateDecl 0x55adbc4573a8 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x55adbc456fc8 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc457048 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc457308 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55adbc457108 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc457180 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc457228 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55adbc4817d8 <col:60, line:545:5>
|     `-ReturnStmt 0x55adbc4817c8 <line:544:9, col:41>
|       `-CallExpr 0x55adbc481790 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc4816c8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc481730 <col:23> 'const char *' lvalue ParmVar 0x55adbc457108 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc481750 <col:32> 'P' lvalue ParmVar 0x55adbc457180 'parser' 'P'
|         `-DeclRefExpr 0x55adbc481770 <col:40> 'T' lvalue ParmVar 0x55adbc457228 'x' 'T &'
|-FunctionTemplateDecl 0x55adbc4577f8 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x55adbc457418 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc457498 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc457758 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55adbc457558 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc4575d0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc457678 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55adbc481910 <col:60, line:549:5>
|     `-ReturnStmt 0x55adbc481900 <line:548:9, col:41>
|       `-CallExpr 0x55adbc4818c8 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc481800 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc481868 <col:23> 'const char *' lvalue ParmVar 0x55adbc457558 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc481888 <col:32> 'P' lvalue ParmVar 0x55adbc4575d0 'parser' 'P'
|         `-DeclRefExpr 0x55adbc4818a8 <col:40> 'T' lvalue ParmVar 0x55adbc457678 'x' 'T &'
|-FunctionTemplateDecl 0x55adbc457c48 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x55adbc457868 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc4578e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc457ba8 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55adbc4579a8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc457a20 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc457ac8 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x55adbc481a48 <col:61, line:553:5>
|     `-ReturnStmt 0x55adbc481a38 <line:552:9, col:42>
|       `-CallExpr 0x55adbc481a00 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc481938 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc4819a0 <col:24> 'const char *' lvalue ParmVar 0x55adbc4579a8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc4819c0 <col:33> 'P' lvalue ParmVar 0x55adbc457a20 'parser' 'P'
|         `-DeclRefExpr 0x55adbc4819e0 <col:41> 'T' lvalue ParmVar 0x55adbc457ac8 'x' 'T &'
|-FunctionTemplateDecl 0x55adbc458128 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x55adbc457cb8 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc457d38 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc458088 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55adbc457df8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc457e78 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc457ef0 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc457f98 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x55adbc481bc0 <col:69, line:557:5>
|     `-ReturnStmt 0x55adbc481bb0 <line:556:9, col:46>
|       `-CallExpr 0x55adbc481b70 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc481a70 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc481af0 <col:21> 'const char *' lvalue ParmVar 0x55adbc457df8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc481b10 <col:30> 'int' lvalue ParmVar 0x55adbc457e78 'flags' 'int'
|         |-DeclRefExpr 0x55adbc481b30 <col:37> 'P' lvalue ParmVar 0x55adbc457ef0 'parser' 'P'
|         `-DeclRefExpr 0x55adbc481b50 <col:45> 'T' lvalue ParmVar 0x55adbc457f98 'x' 'T &'
|-FunctionTemplateDecl 0x55adbc458438 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x55adbc4581a0 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55adbc458398 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55adbc458250 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc4582c8 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x55adbc481d00 <col:56, line:571:5>
|     `-ReturnStmt 0x55adbc481cf0 <line:570:9, col:48>
|       `-CallExpr 0x55adbc481cb8 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc481be8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc481c58 <col:30> 'const char *' lvalue ParmVar 0x55adbc458250 'keyword' 'const char *'
|         |-IntegerLiteral 0x55adbc481c78 <col:39> 'int' 0
|         `-DeclRefExpr 0x55adbc481c98 <col:42> 'P' lvalue ParmVar 0x55adbc4582c8 'parser' 'P'
|-FunctionTemplateDecl 0x55adbc4587c8 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x55adbc4584a0 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55adbc458728 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55adbc458550 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc4585d0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc458648 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55adbc481ed0 <col:67, line:576:5>
|     |-CallExpr 0x55adbc481e58 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55adbc481d18 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55adbc481d58 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55adbc481d68 <col:39> 'const char *' lvalue ParmVar 0x55adbc458550 'keyword' 'const char *'
|     | |-BinaryOperator 0x55adbc481e18 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55adbc481dc8 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55adbc481d88 <col:48> 'int' lvalue ParmVar 0x55adbc4585d0 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55adbc481e00 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55adbc481de0 <col:56> 'const int' lvalue Var 0x55adbc44f580 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x55adbc481e38 <col:68> 'P' lvalue ParmVar 0x55adbc458648 'parser' 'P'
|     `-ReturnStmt 0x55adbc481ec0 <line:575:9, col:17>
|       `-UnaryOperator 0x55adbc481ea8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55adbc481e98 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55adbc45a168 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x55adbc458838 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc4588b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc45a0c8 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55adbc458978 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc4589f0 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc458a98 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x55adbc482040 <col:62, line:592:5>
|     `-ReturnStmt 0x55adbc482030 <line:591:9, col:51>
|       `-CallExpr 0x55adbc481ff0 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc481f00 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc481f70 <col:30> 'const char *' lvalue ParmVar 0x55adbc458978 'keyword' 'const char *'
|         |-IntegerLiteral 0x55adbc481f90 <col:39> 'int' 0
|         |-DeclRefExpr 0x55adbc481fb0 <col:42> 'P' lvalue ParmVar 0x55adbc4589f0 'parser' 'P'
|         `-DeclRefExpr 0x55adbc481fd0 <col:50> 'T' lvalue ParmVar 0x55adbc458a98 'x' 'T &'
|-FunctionTemplateDecl 0x55adbc45a648 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x55adbc45a1d8 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc45a258 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc45a5a8 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55adbc45a318 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc45a398 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc45a410 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc45a4b8 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x55adbc482238 <col:73, line:597:5>
|     |-CallExpr 0x55adbc4821b8 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55adbc482058 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55adbc482098 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55adbc4820a8 <col:39> 'const char *' lvalue ParmVar 0x55adbc45a318 'keyword' 'const char *'
|     | |-BinaryOperator 0x55adbc482158 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55adbc482108 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55adbc4820c8 <col:48> 'int' lvalue ParmVar 0x55adbc45a398 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55adbc482140 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55adbc482120 <col:56> 'const int' lvalue Var 0x55adbc44f580 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55adbc482178 <col:68> 'P' lvalue ParmVar 0x55adbc45a410 'parser' 'P'
|     | `-DeclRefExpr 0x55adbc482198 <col:76> 'T' lvalue ParmVar 0x55adbc45a4b8 'x' 'T &'
|     `-ReturnStmt 0x55adbc482228 <line:596:9, col:17>
|       `-UnaryOperator 0x55adbc482210 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55adbc482200 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55adbc45abf8 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x55adbc45a6c0 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc45a738 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc45ab58 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x55adbc45a7f8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc45a870 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc45aa30 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55adbc4823a8 <col:65, line:614:5>
|     `-ReturnStmt 0x55adbc482398 <line:613:9, col:46>
|       `-CallExpr 0x55adbc482358 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc482268 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc4822d8 <col:25> 'const char *' lvalue ParmVar 0x55adbc45a7f8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55adbc4822f8 <col:34> 'int' 0
|         |-DeclRefExpr 0x55adbc482318 <col:37> 'P' lvalue ParmVar 0x55adbc45a870 'parser' 'P'
|         `-DeclRefExpr 0x55adbc482338 <col:45> 'Vector<T>' lvalue ParmVar 0x55adbc45aa30 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55adbc45b028 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x55adbc45ac68 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55adbc45af88 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x55adbc45ad20 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc45ae70 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55adbc484b00 <col:55, line:618:5>
|     `-ReturnStmt 0x55adbc484af0 <line:617:9, col:55>
|       `-CallExpr 0x55adbc484ab0 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc4823d0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc482440 <col:25> 'const char *' lvalue ParmVar 0x55adbc45ad20 'keyword' 'const char *'
|         |-IntegerLiteral 0x55adbc482460 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x55adbc482530 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55adbc484a90 <col:54> 'Vector<T>' lvalue ParmVar 0x55adbc45ae70 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55adbc45b5f8 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x55adbc45b090 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc45b108 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc45b558 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55adbc45b1c8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc45b248 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc45b2c0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc45b410 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55adbc484cf8 <col:76, line:623:5>
|     |-CallExpr 0x55adbc484c78 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55adbc484b18 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x55adbc484b58 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x55adbc484b68 <col:34> 'const char *' lvalue ParmVar 0x55adbc45b1c8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55adbc484c18 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x55adbc484bc8 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55adbc484b88 <col:43> 'int' lvalue ParmVar 0x55adbc45b248 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55adbc484c00 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55adbc484be0 <col:51> 'const int' lvalue Var 0x55adbc44f580 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55adbc484c38 <col:63> 'P' lvalue ParmVar 0x55adbc45b2c0 'parser' 'P'
|     | `-DeclRefExpr 0x55adbc484c58 <col:71> 'Vector<T>' lvalue ParmVar 0x55adbc45b410 'x' 'Vector<T> &'
|     `-ReturnStmt 0x55adbc484ce8 <line:622:9, col:17>
|       `-UnaryOperator 0x55adbc484cd0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55adbc484cc0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55adbc45bb38 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x55adbc45b670 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc45b6e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc45ba98 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x55adbc45b7a8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc45b828 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc45b970 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55adbc484f60 <col:66, line:627:5>
|     `-ReturnStmt 0x55adbc484f50 <line:626:9, col:59>
|       `-CallExpr 0x55adbc484f10 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55adbc484d28 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55adbc484d98 <col:25> 'const char *' lvalue ParmVar 0x55adbc45b7a8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55adbc484db8 <col:34> 'int' lvalue ParmVar 0x55adbc45b828 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x55adbc484ed0 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55adbc484ef0 <col:58> 'Vector<T>' lvalue ParmVar 0x55adbc45b970 'x' 'Vector<T> &'
|-CXXMethodDecl 0x55adbc45bbc8 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x55adbc484fe0 <col:25, line:633:5>
|   `-ReturnStmt 0x55adbc484fd0 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x55adbc484fb8 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55adbc484f88 <col:16> 'const bool' lvalue ->_status 0x55adbc461a08
|         `-CXXThisExpr 0x55adbc484f78 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55adbc45bd48 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x55adbc45bc80 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x55adbc4850c8 <col:27, line:639:5>
|   |-BinaryOperator 0x55adbc485070 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55adbc484ff8 <col:9> 'bool' lvalue ParmVar 0x55adbc45bc80 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55adbc485058 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55adbc485028 <col:13> 'bool' lvalue ->_status 0x55adbc461a08
|   |     `-CXXThisExpr 0x55adbc485018 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55adbc4850b8 <line:638:9, col:17>
|     `-UnaryOperator 0x55adbc4850a0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55adbc485090 <col:17> 'Args *' this
|-CXXMethodDecl 0x55adbc45bec8 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55adbc45be08 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x55adbc4851b8 <col:39, line:644:5>
|   |-BinaryOperator 0x55adbc485160 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55adbc4850e8 <col:9> 'bool' lvalue ParmVar 0x55adbc45be08 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55adbc485148 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55adbc485118 <col:13> 'const bool' lvalue ->_status 0x55adbc461a08
|   |     `-CXXThisExpr 0x55adbc485108 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55adbc4851a8 <line:643:9, col:17>
|     `-UnaryOperator 0x55adbc485190 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55adbc485180 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55adbc45bf90 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x55adbc485260 <col:30, line:651:5>
|   `-ReturnStmt 0x55adbc485250 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x55adbc485238 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55adbc485208 <col:16> 'bool' lvalue ->_read_status 0x55adbc447d40
|         `-ImplicitCastExpr 0x55adbc4851e8 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x55adbc4851d8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55adbc45c0d8 <line:655:5, line:658:5> line:655:11 used read_status 'Args &(bool &)'
| |-ParmVarDecl 0x55adbc45c048 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x55adbc485368 <col:32, line:658:5>
|   |-BinaryOperator 0x55adbc485310 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55adbc485278 <col:9> 'bool' lvalue ParmVar 0x55adbc45c048 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55adbc4852f8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55adbc4852c8 <col:13> 'bool' lvalue ->_read_status 0x55adbc447d40
|   |     `-ImplicitCastExpr 0x55adbc4852a8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55adbc485298 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55adbc485358 <line:657:9, col:17>
|     `-UnaryOperator 0x55adbc485340 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55adbc485330 <col:17> 'Args *' this
|-CXXMethodDecl 0x55adbc45c228 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55adbc45c198 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x55adbc485478 <col:44, line:663:5>
|   |-BinaryOperator 0x55adbc485420 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55adbc485388 <col:9> 'bool' lvalue ParmVar 0x55adbc45c198 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55adbc485408 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55adbc4853d8 <col:13> 'bool' lvalue ->_read_status 0x55adbc447d40
|   |     `-ImplicitCastExpr 0x55adbc4853b8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55adbc4853a8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55adbc485468 <line:662:9, col:17>
|     `-UnaryOperator 0x55adbc485450 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55adbc485440 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55adbc45c2f0 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x55adbc45c3b8 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x55adbc45c480 <line:684:5, col:17> col:9 used consume 'int ()'
|-CXXMethodDecl 0x55adbc45c548 <line:693:5, col:18> col:9 complete 'int ()'
|-FunctionTemplateDecl 0x55adbc45c858 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x55adbc45c5e8 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55adbc45c7b8 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x55adbc45c6c8 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x55adbc485838 <col:19, line:706:5>
|     `-IfStmt 0x55adbc485810 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x55adbc485578 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x55adbc485740 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x55adbc485710 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x55adbc4856d0 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x55adbc4855d0 <col:42> '<bound member function type>' ->simple_slot 0x55adbc47dd50
|       |     | `-CXXThisExpr 0x55adbc4855c0 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x55adbc485670 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x55adbc485620 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x55adbc319ce0 0x55adbc0605c8
|       |     | `-DeclRefExpr 0x55adbc485600 <col:55> 'T' lvalue ParmVar 0x55adbc45c6c8 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x55adbc4856b0 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x55adbc485800 <line:705:13, col:34>
|         `-CallExpr 0x55adbc4857d8 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x55adbc485760 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x55adbc4857b8 <col:33> 'T' lvalue ParmVar 0x55adbc45c6c8 'x' 'T &'
|-FunctionTemplateDecl 0x55adbc45cb28 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x55adbc45c8b8 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55adbc45ca88 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x55adbc45c998 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x55adbc485c10 <col:31, line:717:5>
|     |-DeclStmt 0x55adbc485978 <line:713:9, col:23>
|     | `-VarDecl 0x55adbc485860 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x55adbc485950 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55adbc4858d8 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55adbc485930 <col:21> 'T' lvalue ParmVar 0x55adbc45c998 'x' 'T &'
|     |-IfStmt 0x55adbc485bc0 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x55adbc485a68 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x55adbc485ba0 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55adbc485b40 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55adbc485ad0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55adbc213878 0x55adbc213498 0x55adbc2130c8 0x55adbc212ce8 0x55adbc212908 0x55adbc212538
|     |   | `-DeclRefExpr 0x55adbc485ab0 <col:14> 'T *' lvalue Var 0x55adbc485860 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x55adbc485b80 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x55adbc485bf8 <line:716:9, col:16>
|       `-DeclRefExpr 0x55adbc485bd8 <col:16> 'T *' lvalue Var 0x55adbc485860 's' 'T *'
|-FunctionTemplateDecl 0x55adbc45cf38 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x55adbc45cb88 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55adbc45cc08 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55adbc45ce98 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x55adbc45cce8 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x55adbc45cd88 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x55adbc485f20 <col:37, line:726:5>
|     |-IfStmt 0x55adbc485eb0 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x55adbc485ed0 <line:723:13, col:26>
|     | | `-VarDecl 0x55adbc485c78 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x55adbc485d68 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x55adbc485cf0 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x55adbc485d48 <col:25> 'T' lvalue ParmVar 0x55adbc45cce8 'x' 'T &'
|     | |-DeclRefExpr 0x55adbc485d90 <col:16> 'T *' lvalue Var 0x55adbc485c78 's' 'T *'
|     | `-BinaryOperator 0x55adbc485e90 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55adbc485e40 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55adbc485dd0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55adbc213878 0x55adbc213498 0x55adbc2130c8 0x55adbc212ce8 0x55adbc212908 0x55adbc212538
|     |   | `-DeclRefExpr 0x55adbc485db0 <col:14> 'T *' lvalue Var 0x55adbc485c78 's' 'T *'
|     |   `-DeclRefExpr 0x55adbc485e70 <col:18> 'const V' lvalue ParmVar 0x55adbc45cd88 'value' 'const V &'
|     `-ReturnStmt 0x55adbc485f10 <line:725:9, col:17>
|       `-UnaryOperator 0x55adbc485ef8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55adbc485ee8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55adbc45d338 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x55adbc45cfa0 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55adbc45d298 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x55adbc45d050 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc45d0d0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc45d178 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x55adbc486d40 <col:65, line:737:5>
|     |-DeclStmt 0x55adbc485fb8 <line:732:9, col:26>
|     | `-VarDecl 0x55adbc485f50 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55adbc486d08 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x55adbc486d28 <line:733:13, col:58>
|       | `-VarDecl 0x55adbc485fe0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55adbc4861c0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55adbc486190 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55adbc486178 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55adbc486158 <col:26, col:58> 'String' (CXXTemporary 0x55adbc486158)
|       |           `-CXXMemberCallExpr 0x55adbc4860e8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55adbc486058 <col:26> '<bound member function type>' ->find 0x55adbc47d398
|       |             | `-CXXThisExpr 0x55adbc486048 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55adbc486120 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55adbc486088 <col:31> 'const char *' lvalue ParmVar 0x55adbc45d050 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55adbc486138 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55adbc4860a8 <col:40> 'int' lvalue ParmVar 0x55adbc45d0d0 'flags' 'int'
|       |             `-DeclRefExpr 0x55adbc4860c8 <col:47> 'Args::Slot *' lvalue Var 0x55adbc485f50 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55adbc486278 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55adbc486260 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55adbc486240 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55adbc486210 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55adbc022df8
|       |       `-ImplicitCastExpr 0x55adbc4861f8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55adbc4861d8 <col:20> 'String' lvalue Var 0x55adbc485fe0 'str' 'String'
|       `-CompoundStmt 0x55adbc486ce8 <col:61, line:736:9>
|         |-DeclStmt 0x55adbc486730 <line:734:13, col:76>
|         | `-VarDecl 0x55adbc4862c8 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55adbc486700 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55adbc486670 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55adbc4866b8 <col:60> 'T' lvalue ParmVar 0x55adbc45d178 'variable' 'T &'
|         |     `-UnaryOperator 0x55adbc4866e8 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55adbc4866d8 <col:71> 'Args *' this
|         `-CallExpr 0x55adbc486cb8 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x55adbc486758 <col:13> '<bound member function type>' ->postparse 0x55adbc47d5a8
|           | `-CXXThisExpr 0x55adbc486748 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55adbc486c78 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55adbc486788 <col:23> 'T *' lvalue Var 0x55adbc4862c8 's' 'T *'
|           | `-CallExpr 0x55adbc486c38 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55adbc486a10 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x55adbc486b10 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x55adbc486b30 <col:86> 'String' lvalue Var 0x55adbc485fe0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55adbc486be0 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55adbc486b70 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55adbc213878 0x55adbc213498 0x55adbc2130c8 0x55adbc212ce8 0x55adbc212908 0x55adbc212538
|           |   | `-DeclRefExpr 0x55adbc486b50 <col:92> 'T *' lvalue Var 0x55adbc4862c8 's' 'T *'
|           |   `-UnaryOperator 0x55adbc486c20 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55adbc486c10 <col:96> 'Args *' this
|           `-DeclRefExpr 0x55adbc486c98 <col:103> 'Args::Slot *' lvalue Var 0x55adbc485f50 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55adbc45d888 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55adbc45d3a8 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55adbc45d428 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55adbc45d7e8 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55adbc45d4e8 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc45d568 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc45d608 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x55adbc45d6a8 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x55adbc487be0 <col:88, line:745:5>
|     |-DeclStmt 0x55adbc486dd8 <line:741:9, col:26>
|     | `-VarDecl 0x55adbc486d70 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55adbc486ff8 <line:742:9, col:55>
|     | `-VarDecl 0x55adbc486e00 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55adbc486fe0 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55adbc486fb0 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55adbc486f98 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55adbc486f78 <col:22, col:54> 'String' (CXXTemporary 0x55adbc486f78)
|     |           `-CXXMemberCallExpr 0x55adbc486f08 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55adbc486e78 <col:22> '<bound member function type>' ->find 0x55adbc47d398
|     |             | `-CXXThisExpr 0x55adbc486e68 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55adbc486f40 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55adbc486ea8 <col:27> 'const char *' lvalue ParmVar 0x55adbc45d4e8 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55adbc486f58 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55adbc486ec8 <col:36> 'int' lvalue ParmVar 0x55adbc45d568 'flags' 'int'
|     |             `-DeclRefExpr 0x55adbc486ee8 <col:43> 'Args::Slot *' lvalue Var 0x55adbc486d70 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55adbc4873d0 <line:743:9, col:72>
|     | `-VarDecl 0x55adbc487048 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55adbc4873a0 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55adbc487310 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55adbc487358 <col:56> 'T' lvalue ParmVar 0x55adbc45d608 'variable' 'T &'
|     |     `-UnaryOperator 0x55adbc487388 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55adbc487378 <col:67> 'Args *' this
|     `-CallExpr 0x55adbc487bb0 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x55adbc4873f8 <col:9> '<bound member function type>' ->postparse 0x55adbc47d5a8
|       | `-CXXThisExpr 0x55adbc4873e8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55adbc487b70 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55adbc487428 <col:19> 'T *' lvalue Var 0x55adbc487048 's' 'T *'
|       | `-ParenExpr 0x55adbc487b50 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x55adbc487b20 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55adbc487b08 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55adbc487af0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55adbc487ad0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55adbc487aa0 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55adbc022df8
|       |     |       `-ImplicitCastExpr 0x55adbc487a88 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55adbc487448 <col:25> 'String' lvalue Var 0x55adbc486e00 'str' 'String'
|       |     |-CallExpr 0x55adbc4878f8 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55adbc4876d0 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x55adbc4877d0 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x55adbc4877f0 <col:89> 'String' lvalue Var 0x55adbc486e00 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55adbc4878a0 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55adbc487830 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55adbc213878 0x55adbc213498 0x55adbc2130c8 0x55adbc212ce8 0x55adbc212908 0x55adbc212538
|       |     | | `-DeclRefExpr 0x55adbc487810 <col:95> 'T *' lvalue Var 0x55adbc487048 's' 'T *'
|       |     | `-UnaryOperator 0x55adbc4878e0 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55adbc4878d0 <col:99> 'Args *' this
|       |     `-ParenExpr 0x55adbc487a68 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x55adbc487a48 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x55adbc487a18 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55adbc4879c8 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55adbc487958 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55adbc213878 0x55adbc213498 0x55adbc2130c8 0x55adbc212ce8 0x55adbc212908 0x55adbc212538
|       |         | | `-DeclRefExpr 0x55adbc487938 <col:109> 'T *' lvalue Var 0x55adbc487048 's' 'T *'
|       |         | `-DeclRefExpr 0x55adbc4879f8 <col:113> 'const V' lvalue ParmVar 0x55adbc45d6a8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55adbc487a38 <col:120> 'bool' true
|       `-DeclRefExpr 0x55adbc487b90 <col:128> 'Args::Slot *' lvalue Var 0x55adbc486d70 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55adbc45ddb8 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x55adbc45d900 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc45d978 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc45dd18 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55adbc45da38 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc45dab8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc45db30 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc45dbd8 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x55adbc4887d8 <col:75, line:754:5>
|     |-DeclStmt 0x55adbc487c88 <line:749:9, col:26>
|     | `-VarDecl 0x55adbc487c20 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55adbc4887a0 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x55adbc4887c0 <line:750:13, col:58>
|       | `-VarDecl 0x55adbc487cb0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55adbc487e90 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55adbc487e60 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55adbc487e48 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55adbc487e28 <col:26, col:58> 'String' (CXXTemporary 0x55adbc487e28)
|       |           `-CXXMemberCallExpr 0x55adbc487db8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55adbc487d28 <col:26> '<bound member function type>' ->find 0x55adbc47d398
|       |             | `-CXXThisExpr 0x55adbc487d18 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55adbc487df0 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55adbc487d58 <col:31> 'const char *' lvalue ParmVar 0x55adbc45da38 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55adbc487e08 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55adbc487d78 <col:40> 'int' lvalue ParmVar 0x55adbc45dab8 'flags' 'int'
|       |             `-DeclRefExpr 0x55adbc487d98 <col:47> 'Args::Slot *' lvalue Var 0x55adbc487c20 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55adbc487f48 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55adbc487f30 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55adbc487f10 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55adbc487ee0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55adbc022df8
|       |       `-ImplicitCastExpr 0x55adbc487ec8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55adbc487ea8 <col:20> 'String' lvalue Var 0x55adbc487cb0 'str' 'String'
|       `-CompoundStmt 0x55adbc488780 <col:61, line:753:9>
|         |-DeclStmt 0x55adbc488320 <line:751:13, col:63>
|         | `-VarDecl 0x55adbc487f98 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55adbc4882f0 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55adbc488260 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55adbc4882a8 <col:47> 'T' lvalue ParmVar 0x55adbc45dbd8 'variable' 'T &'
|         |     `-UnaryOperator 0x55adbc4882d8 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55adbc4882c8 <col:58> 'Args *' this
|         `-CallExpr 0x55adbc488750 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x55adbc488348 <col:13> '<bound member function type>' ->postparse 0x55adbc47d5a8
|           | `-CXXThisExpr 0x55adbc488338 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55adbc488710 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55adbc488378 <col:23> 'T *' lvalue Var 0x55adbc487f98 's' 'T *'
|           | `-CallExpr 0x55adbc4886d0 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55adbc488560 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55adbc4885a8 <col:56> 'P' lvalue ParmVar 0x55adbc45db30 'parser' 'P'
|           |   |-DeclRefExpr 0x55adbc4885c8 <col:64> 'String' lvalue Var 0x55adbc487cb0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55adbc488678 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55adbc488608 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55adbc213878 0x55adbc213498 0x55adbc2130c8 0x55adbc212ce8 0x55adbc212908 0x55adbc212538
|           |   | `-DeclRefExpr 0x55adbc4885e8 <col:70> 'T *' lvalue Var 0x55adbc487f98 's' 'T *'
|           |   `-UnaryOperator 0x55adbc4886b8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55adbc4886a8 <col:74> 'Args *' this
|           `-DeclRefExpr 0x55adbc488730 <col:81> 'Args::Slot *' lvalue Var 0x55adbc487c20 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55adbc45e418 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55adbc45de30 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55adbc45dea8 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x55adbc45df28 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55adbc45e378 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55adbc45dff0 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc45e070 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc45e0e8 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc45e188 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x55adbc45e228 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x55adbc489568 <col:98, line:762:5>
|     |-DeclStmt 0x55adbc488870 <line:758:9, col:26>
|     | `-VarDecl 0x55adbc488808 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55adbc488a90 <line:759:9, col:55>
|     | `-VarDecl 0x55adbc488898 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55adbc488a78 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55adbc488a48 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55adbc488a30 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55adbc488a10 <col:22, col:54> 'String' (CXXTemporary 0x55adbc488a10)
|     |           `-CXXMemberCallExpr 0x55adbc4889a0 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55adbc488910 <col:22> '<bound member function type>' ->find 0x55adbc47d398
|     |             | `-CXXThisExpr 0x55adbc488900 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55adbc4889d8 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55adbc488940 <col:27> 'const char *' lvalue ParmVar 0x55adbc45dff0 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55adbc4889f0 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55adbc488960 <col:36> 'int' lvalue ParmVar 0x55adbc45e070 'flags' 'int'
|     |             `-DeclRefExpr 0x55adbc488980 <col:43> 'Args::Slot *' lvalue Var 0x55adbc488808 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55adbc488eb0 <line:760:9, col:59>
|     | `-VarDecl 0x55adbc488ae8 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55adbc488e80 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55adbc488df0 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55adbc488e38 <col:43> 'T' lvalue ParmVar 0x55adbc45e188 'variable' 'T &'
|     |     `-UnaryOperator 0x55adbc488e68 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55adbc488e58 <col:54> 'Args *' this
|     `-CallExpr 0x55adbc489538 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x55adbc488ed8 <col:9> '<bound member function type>' ->postparse 0x55adbc47d5a8
|       | `-CXXThisExpr 0x55adbc488ec8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55adbc4894f8 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55adbc488f08 <col:19> 'T *' lvalue Var 0x55adbc488ae8 's' 'T *'
|       | `-ParenExpr 0x55adbc4894d8 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x55adbc4894a8 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55adbc489490 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55adbc489478 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55adbc489458 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55adbc489428 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55adbc022df8
|       |     |       `-ImplicitCastExpr 0x55adbc489410 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55adbc488f28 <col:25> 'String' lvalue Var 0x55adbc488898 'str' 'String'
|       |     |-CallExpr 0x55adbc489280 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55adbc489110 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x55adbc489158 <col:59> 'P' lvalue ParmVar 0x55adbc45e0e8 'parser' 'P'
|       |     | |-DeclRefExpr 0x55adbc489178 <col:67> 'String' lvalue Var 0x55adbc488898 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55adbc489228 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55adbc4891b8 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55adbc213878 0x55adbc213498 0x55adbc2130c8 0x55adbc212ce8 0x55adbc212908 0x55adbc212538
|       |     | | `-DeclRefExpr 0x55adbc489198 <col:73> 'T *' lvalue Var 0x55adbc488ae8 's' 'T *'
|       |     | `-UnaryOperator 0x55adbc489268 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55adbc489258 <col:77> 'Args *' this
|       |     `-ParenExpr 0x55adbc4893f0 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x55adbc4893d0 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x55adbc4893a0 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55adbc489350 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55adbc4892e0 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55adbc213878 0x55adbc213498 0x55adbc2130c8 0x55adbc212ce8 0x55adbc212908 0x55adbc212538
|       |         | | `-DeclRefExpr 0x55adbc4892c0 <col:87> 'T *' lvalue Var 0x55adbc488ae8 's' 'T *'
|       |         | `-DeclRefExpr 0x55adbc489380 <col:91> 'const V' lvalue ParmVar 0x55adbc45e228 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55adbc4893c0 <col:98> 'bool' true
|       `-DeclRefExpr 0x55adbc489518 <col:106> 'Args::Slot *' lvalue Var 0x55adbc488808 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55adbc45ea88 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x55adbc45e498 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc45e518 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55adbc45e598 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55adbc45e9e8 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55adbc45e660 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc45e6e0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc45e758 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc45e7f8 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x55adbc45e898 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x55adbc48a548 <col:60, line:773:5>
|     |-DeclStmt 0x55adbc489610 <line:767:9, col:26>
|     | `-VarDecl 0x55adbc4895a8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55adbc48a510 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x55adbc48a530 <line:768:13, col:58>
|       | `-VarDecl 0x55adbc489638 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55adbc489818 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55adbc4897e8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55adbc4897d0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55adbc4897b0 <col:26, col:58> 'String' (CXXTemporary 0x55adbc4897b0)
|       |           `-CXXMemberCallExpr 0x55adbc489740 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55adbc4896b0 <col:26> '<bound member function type>' ->find 0x55adbc47d398
|       |             | `-CXXThisExpr 0x55adbc4896a0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55adbc489778 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55adbc4896e0 <col:31> 'const char *' lvalue ParmVar 0x55adbc45e660 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55adbc489790 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55adbc489700 <col:40> 'int' lvalue ParmVar 0x55adbc45e6e0 'flags' 'int'
|       |             `-DeclRefExpr 0x55adbc489720 <col:47> 'Args::Slot *' lvalue Var 0x55adbc4895a8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55adbc4898d0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55adbc4898b8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55adbc489898 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55adbc489868 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55adbc022df8
|       |       `-ImplicitCastExpr 0x55adbc489850 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55adbc489830 <col:20> 'String' lvalue Var 0x55adbc489638 'str' 'String'
|       `-CompoundStmt 0x55adbc48a4e8 <col:61, line:772:9>
|         |-DeclStmt 0x55adbc489c10 <line:769:13, col:66>
|         | `-VarDecl 0x55adbc489928 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x55adbc489be0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55adbc489b50 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55adbc489b98 <col:49> 'T1' lvalue ParmVar 0x55adbc45e7f8 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x55adbc489bc8 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55adbc489bb8 <col:61> 'Args *' this
|         |-DeclStmt 0x55adbc489f80 <line:770:13, col:66>
|         | `-VarDecl 0x55adbc489c98 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x55adbc489f50 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55adbc489ec0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55adbc489f08 <col:49> 'T2' lvalue ParmVar 0x55adbc45e898 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x55adbc489f38 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55adbc489f28 <col:61> 'Args *' this
|         `-CallExpr 0x55adbc48a4b8 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x55adbc489fa8 <col:13> '<bound member function type>' ->postparse 0x55adbc47d5a8
|           | `-CXXThisExpr 0x55adbc489f98 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55adbc48a478 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x55adbc48a018 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x55adbc489fd8 <col:23> 'T1 *' lvalue Var 0x55adbc489928 's1' 'T1 *'
|           | | `-DeclRefExpr 0x55adbc489ff8 <col:29> 'T2 *' lvalue Var 0x55adbc489c98 's2' 'T2 *'
|           | `-CallExpr 0x55adbc48a430 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55adbc48a200 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55adbc48a248 <col:63> 'P' lvalue ParmVar 0x55adbc45e758 'parser' 'P'
|           |   |-DeclRefExpr 0x55adbc48a268 <col:71> 'String' lvalue Var 0x55adbc489638 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55adbc48a318 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55adbc48a2a8 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55adbc213878 0x55adbc213498 0x55adbc2130c8 0x55adbc212ce8 0x55adbc212908 0x55adbc212538
|           |   | `-DeclRefExpr 0x55adbc48a288 <col:77> 'T1 *' lvalue Var 0x55adbc489928 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x55adbc48a3d8 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55adbc48a368 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55adbc213878 0x55adbc213498 0x55adbc2130c8 0x55adbc212ce8 0x55adbc212908 0x55adbc212538
|           |   | `-DeclRefExpr 0x55adbc48a348 <col:82> 'T2 *' lvalue Var 0x55adbc489c98 's2' 'T2 *'
|           |   `-UnaryOperator 0x55adbc48a418 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55adbc48a408 <col:87> 'Args *' this
|           `-DeclRefExpr 0x55adbc48a498 <col:94> 'Args::Slot *' lvalue Var 0x55adbc4895a8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55adbc45ee78 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x55adbc45eb08 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55adbc45edd8 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55adbc45ebc0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc45ec40 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc45ecb8 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55adbc48aa60 <col:67, line:780:5>
|     |-DeclStmt 0x55adbc48a5e0 <line:777:9, col:26>
|     | `-VarDecl 0x55adbc48a578 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55adbc48aa28 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x55adbc48aa48 <line:778:13, col:58>
|       | `-VarDecl 0x55adbc48a608 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55adbc48a7e8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55adbc48a7b8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55adbc48a7a0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55adbc48a780 <col:26, col:58> 'String' (CXXTemporary 0x55adbc48a780)
|       |           `-CXXMemberCallExpr 0x55adbc48a710 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55adbc48a680 <col:26> '<bound member function type>' ->find 0x55adbc47d398
|       |             | `-CXXThisExpr 0x55adbc48a670 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55adbc48a748 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55adbc48a6b0 <col:31> 'const char *' lvalue ParmVar 0x55adbc45ebc0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55adbc48a760 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55adbc48a6d0 <col:40> 'int' lvalue ParmVar 0x55adbc45ec40 'flags' 'int'
|       |             `-DeclRefExpr 0x55adbc48a6f0 <col:47> 'Args::Slot *' lvalue Var 0x55adbc48a578 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55adbc48a8a0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55adbc48a888 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55adbc48a868 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55adbc48a838 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55adbc022df8
|       |       `-ImplicitCastExpr 0x55adbc48a820 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55adbc48a800 <col:20> 'String' lvalue Var 0x55adbc48a608 'str' 'String'
|       `-CallExpr 0x55adbc48a9f8 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x55adbc48a8c8 <col:13> '<bound member function type>' ->postparse 0x55adbc47d5a8
|         | `-CXXThisExpr 0x55adbc48a8b8 <col:13> 'Args *' implicit this
|         |-CallExpr 0x55adbc48a9a8 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x55adbc48a918 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x55adbc48a8f8 <col:23> 'P' lvalue ParmVar 0x55adbc45ecb8 'parser' 'P'
|         | |-DeclRefExpr 0x55adbc48a960 <col:36> 'String' lvalue Var 0x55adbc48a608 'str' 'String'
|         | `-UnaryOperator 0x55adbc48a990 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x55adbc48a980 <col:42> 'Args *' this
|         `-DeclRefExpr 0x55adbc48a9d8 <col:49> 'Args::Slot *' lvalue Var 0x55adbc48a578 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55adbc45f218 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55adbc45eee8 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55adbc45f178 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55adbc45efa0 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc45f020 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc45f098 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x55adbc48b3d0 <col:71, line:792:5>
|     |-DeclStmt 0x55adbc48aaf8 <line:784:9, col:26>
|     | `-VarDecl 0x55adbc48aa90 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55adbc48abc8 <line:785:9, col:29>
|     | `-VarDecl 0x55adbc48ab28 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55adbc48abb0 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55adbc48ab90 <col:28> 'int' 1
|     |-WhileStmt 0x55adbc48b280 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x55adbc48b2a0 <line:786:16, col:61>
|     | | `-VarDecl 0x55adbc48abf0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55adbc48add0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55adbc48ada0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55adbc48ad88 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55adbc48ad68 <col:29, col:61> 'String' (CXXTemporary 0x55adbc48ad68)
|     | |           `-CXXMemberCallExpr 0x55adbc48acf8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55adbc48ac68 <col:29> '<bound member function type>' ->find 0x55adbc47d398
|     | |             | `-CXXThisExpr 0x55adbc48ac58 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55adbc48ad30 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55adbc48ac98 <col:34> 'const char *' lvalue ParmVar 0x55adbc45efa0 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55adbc48ad48 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55adbc48acb8 <col:43> 'int' lvalue ParmVar 0x55adbc45f020 'flags' 'int'
|     | |             `-DeclRefExpr 0x55adbc48acd8 <col:50> 'Args::Slot *' lvalue Var 0x55adbc48aa90 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55adbc48ae88 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55adbc48ae70 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55adbc48ae50 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55adbc48ae20 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55adbc022df8
|     | |       `-ImplicitCastExpr 0x55adbc48ae08 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55adbc48ade8 <col:23> 'String' lvalue Var 0x55adbc48abf0 'str' 'String'
|     | `-CompoundStmt 0x55adbc48b258 <col:64, line:790:9>
|     |   |-CallExpr 0x55adbc48afe0 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x55adbc48aeb0 <col:13> '<bound member function type>' ->postparse 0x55adbc47d5a8
|     |   | | `-CXXThisExpr 0x55adbc48aea0 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55adbc48af90 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55adbc48af00 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55adbc48aee0 <col:23> 'P' lvalue ParmVar 0x55adbc45f098 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55adbc48af48 <col:36> 'String' lvalue Var 0x55adbc48abf0 'str' 'String'
|     |   | | `-UnaryOperator 0x55adbc48af78 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55adbc48af68 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x55adbc48afc0 <col:49> 'Args::Slot *' lvalue Var 0x55adbc48aa90 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55adbc48b178 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55adbc48b010 <col:13> 'int' lvalue Var 0x55adbc48ab28 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55adbc48b160 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55adbc48b140 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55adbc48b0a8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55adbc48b088 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55adbc48b070 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55adbc48b030 <col:28> 'int' lvalue Var 0x55adbc48ab28 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55adbc48b050 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55adbc48b128 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55adbc48b0f8 <col:49> 'bool' lvalue ->_read_status 0x55adbc447d40
|     |   |         `-ImplicitCastExpr 0x55adbc48b0d8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55adbc48b0c8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55adbc48b228 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55adbc48b198 <col:13> 'int' lvalue ParmVar 0x55adbc45f020 'flags' 'int'
|     |     `-UnaryOperator 0x55adbc48b210 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55adbc48b1f8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55adbc48b1d8 <col:23> 'const int' lvalue Var 0x55adbc44f298 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55adbc48b3b0 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55adbc48b2e8 <col:9> 'bool' lvalue ->_read_status 0x55adbc447d40
|       | `-ImplicitCastExpr 0x55adbc48b2c8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55adbc48b2b8 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55adbc48b390 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55adbc48b370 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55adbc48b358 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55adbc48b318 <col:25> 'int' lvalue Var 0x55adbc48ab28 'read_status' 'int'
|           `-IntegerLiteral 0x55adbc48b338 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55adbc45f6f8 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55adbc45f288 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc45f308 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc45f658 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55adbc45f3c8 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc45f448 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc45f4c0 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc45f568 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x55adbc48c360 <col:84, line:805:5>
|     |-DeclStmt 0x55adbc48b478 <line:796:9, col:26>
|     | `-VarDecl 0x55adbc48b410 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55adbc48b548 <line:797:9, col:29>
|     | `-VarDecl 0x55adbc48b4a8 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55adbc48b530 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55adbc48b510 <col:28> 'int' 1
|     |-DeclStmt 0x55adbc48b880 <line:798:9, col:71>
|     | `-VarDecl 0x55adbc48b598 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55adbc48b850 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55adbc48b7c0 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x55adbc48b808 <col:55> 'T' lvalue ParmVar 0x55adbc45f568 'variable' 'T &'
|     |     `-UnaryOperator 0x55adbc48b838 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55adbc48b828 <col:66> 'Args *' this
|     |-WhileStmt 0x55adbc48c210 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x55adbc48c230 <line:799:16, col:61>
|     | | `-VarDecl 0x55adbc48b8a8 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55adbc48ba88 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55adbc48ba58 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55adbc48ba40 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55adbc48ba20 <col:29, col:61> 'String' (CXXTemporary 0x55adbc48ba20)
|     | |           `-CXXMemberCallExpr 0x55adbc48b9b0 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55adbc48b920 <col:29> '<bound member function type>' ->find 0x55adbc47d398
|     | |             | `-CXXThisExpr 0x55adbc48b910 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55adbc48b9e8 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55adbc48b950 <col:34> 'const char *' lvalue ParmVar 0x55adbc45f3c8 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55adbc48ba00 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55adbc48b970 <col:43> 'int' lvalue ParmVar 0x55adbc45f448 'flags' 'int'
|     | |             `-DeclRefExpr 0x55adbc48b990 <col:50> 'Args::Slot *' lvalue Var 0x55adbc48b410 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55adbc48bb40 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55adbc48bb28 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55adbc48bb08 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55adbc48bad8 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55adbc022df8
|     | |       `-ImplicitCastExpr 0x55adbc48bac0 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55adbc48baa0 <col:23> 'String' lvalue Var 0x55adbc48b8a8 'str' 'String'
|     | `-CompoundStmt 0x55adbc48c1e8 <col:64, line:803:9>
|     |   |-CallExpr 0x55adbc48bf70 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x55adbc48bb68 <col:13> '<bound member function type>' ->postparse 0x55adbc47d5a8
|     |   | | `-CXXThisExpr 0x55adbc48bb58 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x55adbc48bf30 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x55adbc48bb98 <col:23> 'T *' lvalue Var 0x55adbc48b598 's' 'T *'
|     |   | | `-CallExpr 0x55adbc48bef0 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x55adbc48bd80 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x55adbc48bdc8 <col:56> 'P' lvalue ParmVar 0x55adbc45f4c0 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x55adbc48bde8 <col:64> 'String' lvalue Var 0x55adbc48b8a8 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x55adbc48be98 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x55adbc48be28 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55adbc213878 0x55adbc213498 0x55adbc2130c8 0x55adbc212ce8 0x55adbc212908 0x55adbc212538
|     |   | |   | `-DeclRefExpr 0x55adbc48be08 <col:70> 'T *' lvalue Var 0x55adbc48b598 's' 'T *'
|     |   | |   `-UnaryOperator 0x55adbc48bed8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x55adbc48bec8 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x55adbc48bf50 <col:81> 'Args::Slot *' lvalue Var 0x55adbc48b410 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55adbc48c108 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55adbc48bfa0 <col:13> 'int' lvalue Var 0x55adbc48b4a8 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55adbc48c0f0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55adbc48c0d0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55adbc48c038 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55adbc48c018 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55adbc48c000 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55adbc48bfc0 <col:28> 'int' lvalue Var 0x55adbc48b4a8 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55adbc48bfe0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55adbc48c0b8 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55adbc48c088 <col:49> 'bool' lvalue ->_read_status 0x55adbc447d40
|     |   |         `-ImplicitCastExpr 0x55adbc48c068 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55adbc48c058 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55adbc48c1b8 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55adbc48c128 <col:13> 'int' lvalue ParmVar 0x55adbc45f448 'flags' 'int'
|     |     `-UnaryOperator 0x55adbc48c1a0 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55adbc48c188 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55adbc48c168 <col:23> 'const int' lvalue Var 0x55adbc44f298 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55adbc48c340 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55adbc48c278 <col:9> 'bool' lvalue ->_read_status 0x55adbc447d40
|       | `-ImplicitCastExpr 0x55adbc48c258 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55adbc48c248 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55adbc48c320 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55adbc48c300 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55adbc48c2e8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55adbc48c2a8 <col:25> 'int' lvalue Var 0x55adbc48b4a8 'read_status' 'int'
|           `-IntegerLiteral 0x55adbc48c2c8 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55adbc45fcd8 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x55adbc45f770 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55adbc45f7e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55adbc45fc38 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55adbc45f8a8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55adbc45f928 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x55adbc45f9a0 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x55adbc45faf0 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x55adbc48f840 <col:87, line:821:5>
|     |-DeclStmt 0x55adbc48c410 <line:809:9, col:26>
|     | `-VarDecl 0x55adbc48c3a8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55adbc48c4e0 <line:810:9, col:29>
|     | `-VarDecl 0x55adbc48c440 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55adbc48c4c8 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55adbc48c4a8 <col:28> 'int' 1
|     |-DeclStmt 0x55adbc48c728 <line:811:9, col:38>
|     | `-VarDecl 0x55adbc48c610 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x55adbc48c700 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55adbc48c688 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55adbc48c6e0 <col:29> 'Vector<T>' lvalue ParmVar 0x55adbc45faf0 'variable' 'Vector<T> &'
|     |-WhileStmt 0x55adbc48f6f0 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x55adbc48f710 <line:812:16, col:61>
|     | | `-VarDecl 0x55adbc48c750 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55adbc48c930 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55adbc48c900 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55adbc48c8e8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55adbc48c8c8 <col:29, col:61> 'String' (CXXTemporary 0x55adbc48c8c8)
|     | |           `-CXXMemberCallExpr 0x55adbc48c858 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55adbc48c7c8 <col:29> '<bound member function type>' ->find 0x55adbc47d398
|     | |             | `-CXXThisExpr 0x55adbc48c7b8 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55adbc48c890 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55adbc48c7f8 <col:34> 'const char *' lvalue ParmVar 0x55adbc45f8a8 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55adbc48c8a8 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55adbc48c818 <col:43> 'int' lvalue ParmVar 0x55adbc45f928 'flags' 'int'
|     | |             `-DeclRefExpr 0x55adbc48c838 <col:50> 'Args::Slot *' lvalue Var 0x55adbc48c3a8 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55adbc48c9e8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55adbc48c9d0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55adbc48c9b0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55adbc48c980 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55adbc022df8
|     | |       `-ImplicitCastExpr 0x55adbc48c968 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55adbc48c948 <col:23> 'String' lvalue Var 0x55adbc48c750 'str' 'String'
|     | `-CompoundStmt 0x55adbc48f6b8 <col:64, line:819:9>
|     |   |-DeclStmt 0x55adbc48f180 <line:813:13, col:23>
|     |   | `-VarDecl 0x55adbc48ca10 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x55adbc48f160 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x55adbc48f300 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x55adbc48f1a8 <col:13> '<bound member function type>' ->postparse 0x55adbc47d5a8
|     |   | | `-CXXThisExpr 0x55adbc48f198 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55adbc48f2a8 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55adbc48f1f8 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55adbc48f1d8 <col:23> 'P' lvalue ParmVar 0x55adbc45f9a0 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55adbc48f240 <col:36> 'String' lvalue Var 0x55adbc48c750 'str' 'String'
|     |   | | |-DeclRefExpr 0x55adbc48f260 <col:41> 'T' lvalue Var 0x55adbc48ca10 'sx' 'T'
|     |   | | `-UnaryOperator 0x55adbc48f290 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55adbc48f280 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x55adbc48f2e0 <col:53> 'Args::Slot *' lvalue Var 0x55adbc48c3a8 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x55adbc48f458 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x55adbc48f390 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x55adbc48f360 <col:17> 'bool' lvalue ->_read_status 0x55adbc447d40
|     |   | |   `-ImplicitCastExpr 0x55adbc48f340 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x55adbc48f330 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x55adbc48f430 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x55adbc48f3c8 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x55adbc48f3a8 <col:17> 'Vector<T> *' lvalue Var 0x55adbc48c610 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x55adbc48f410 <col:30> 'T' lvalue Var 0x55adbc48ca10 'sx' 'T'
|     |   |-BinaryOperator 0x55adbc48f5d8 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55adbc48f470 <col:13> 'int' lvalue Var 0x55adbc48c440 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55adbc48f5c0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55adbc48f5a0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55adbc48f508 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55adbc48f4e8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55adbc48f4d0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55adbc48f490 <col:28> 'int' lvalue Var 0x55adbc48c440 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55adbc48f4b0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55adbc48f588 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55adbc48f558 <col:49> 'bool' lvalue ->_read_status 0x55adbc447d40
|     |   |         `-ImplicitCastExpr 0x55adbc48f538 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55adbc48f528 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55adbc48f688 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55adbc48f5f8 <col:13> 'int' lvalue ParmVar 0x55adbc45f928 'flags' 'int'
|     |     `-UnaryOperator 0x55adbc48f670 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55adbc48f658 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55adbc48f638 <col:23> 'const int' lvalue Var 0x55adbc44f298 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55adbc48f820 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55adbc48f758 <col:9> 'bool' lvalue ->_read_status 0x55adbc447d40
|       | `-ImplicitCastExpr 0x55adbc48f738 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55adbc48f728 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55adbc48f800 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55adbc48f7e0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55adbc48f7c8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55adbc48f788 <col:25> 'int' lvalue Var 0x55adbc48c440 'read_status' 'int'
|           `-IntegerLiteral 0x55adbc48f7a8 <col:40> 'int' 1
|-AccessSpecDecl 0x55adbc45fd50 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x55adbc45fd78 prev 0x55adbc44d598 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x55adbc45fe70 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x55adbc45ff60 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x55adbc48f878 <col:16, line:828:9>
| |-CXXDestructorDecl 0x55adbc460050 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x55adbc48f888 <col:25, line:830:9>
| |-CXXMethodDecl 0x55adbc460150 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x55adbc460200 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x55adbc4602a8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55adbc4602a8
| | `-ParmVarDecl 0x55adbc4603b8 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x55adbc460b78 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55adbc460b78
|   `-ParmVarDecl 0x55adbc460c88 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x55adbc460428 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x55adbc460588 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x55adbc460780 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x55adbc460630 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x55adbc4606a8 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x55adbc48fa68 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x55adbc460a38 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x55adbc48f8d8 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55adbc48f898 <col:20> 'void *' lvalue ParmVar 0x55adbc460630 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x55adbc460aa0 '_slot' 'char *'
| | | `-CXXNewExpr 0x55adbc48f960 <col:32, col:45> 'char *' array Function 0x55adbbe3df48 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x55adbc48f948 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x55adbc48f918 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x55adbc4606a8 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x55adbc460b00 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x55adbc48fa28 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x55adbc48f9e8 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x55adbc4606a8 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x55adbc48fae8 <col:61, line:838:9>
| |-CXXDestructorDecl 0x55adbc460880 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x55adbc460050 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x55adbc48fb70 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x55adbc48fb50 <line:840:13, col:22> 'void' array Function 0x55adbbe3e2a8 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x55adbc48fb38 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x55adbc48fb08 <col:22> 'char *' lvalue ->_slot 0x55adbc460aa0
| |         `-CXXThisExpr 0x55adbc48faf8 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x55adbc460980 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x55adbc460150 Slot::store 'void ()' ]
| | `-CompoundStmt 0x55adbc48fd60 <col:22, line:844:9>
| |   `-CallExpr 0x55adbc48fcc8 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x55adbc48fcb0 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55adbc48fc90 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55adbbf4b0f8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x55adbc48fd00 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x55adbc48fbe0 <col:20> 'void *' lvalue ->_ptr 0x55adbc460a38
| |     |   `-CXXThisExpr 0x55adbc48fbd0 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x55adbc48fd30 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x55adbc48fd18 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x55adbc48fc20 <col:26> 'char *' lvalue ->_slot 0x55adbc460aa0
| |     |     `-CXXThisExpr 0x55adbc48fc10 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x55adbc48fd48 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x55adbc48fc60 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x55adbc460b00
| |         `-CXXThisExpr 0x55adbc48fc50 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x55adbc460a38 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x55adbc460aa0 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x55adbc460b00 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x55adbc460cf8 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55adbc460cf8
| | `-ParmVarDecl 0x55adbc460e08 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x55adbc460ea8 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55adbc460ea8
|   `-ParmVarDecl 0x55adbc460fb8 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x55adbc461158 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x55adbc461028 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x55adbc4610c8 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x55adbc4613f0 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x55adbc4615e8 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x55adbc4614b8 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x55adbc461768 '_ptr' 'T *'
|   | | `-ParenListExpr 0x55adbc48fd98 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x55adbc48fd78 <col:20> 'T *' lvalue ParmVar 0x55adbc4614b8 'ptr' 'T *'
|   | `-CompoundStmt 0x55adbc48fde8 <col:25, line:854:9>
|   |-CXXMethodDecl 0x55adbc4616b8 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x55adbc460150 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x55adbc48ffa8 <col:22, line:857:9>
|   |   `-CallExpr 0x55adbc48ff78 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x55adbc48fdf8 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x55adbc31ad08 0x55adbc2f73b8 0x55adbc0167c8 0x55adbbfc5c08
|   |     |-CXXOperatorCallExpr 0x55adbc48ff08 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x55adbc48fe98 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55adbc213878 0x55adbc213498 0x55adbc2130c8 0x55adbc212ce8 0x55adbc212908 0x55adbc212538
|   |     | `-MemberExpr 0x55adbc48fe68 <col:29> 'T *' lvalue ->_ptr 0x55adbc461768
|   |     |   `-CXXThisExpr 0x55adbc48fe58 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x55adbc48ff48 <col:35> 'T' lvalue ->_slot 0x55adbc4617c8
|   |       `-CXXThisExpr 0x55adbc48ff38 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x55adbc461768 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x55adbc4617c8 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x55adbc461830 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x55adbc461930 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x55adbc461980 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc461910 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x55adbc4618f0 <col:31> 'int' 48
|-FieldDecl 0x55adbc4619a8 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x55adbc461a08 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x55adbc461a68 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x55adbc461ba0 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x55adbc47cc40 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55adbc47cca0 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x55adbc47cd50 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x55adbc47cf78 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x55adbc47ce80 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x55adbc47d0c8 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x55adbc47d038 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x55adbc47d398 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x55adbc47d188 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x55adbc47d208 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x55adbc47d2b0 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x55adbc47d5a8 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x55adbc47d460 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x55adbc47d4d8 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x55adbc47d678 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x55adbc47d7c8 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x55adbc47d730 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x55adbc47db28 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x55adbc47d888 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x55adbc47d908 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x55adbc47d988 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x55adbc47da38 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x55adbc47dd50 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x55adbc47dc00 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x55adbc47dc78 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x55adbc47e068 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x55adbc47de00 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x55adbc47dfc8 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x55adbc47ded8 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class SecondsArg
         0 |   class NumArg (base) (empty)
         0 |   int fraction_digits
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc498740 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc498858 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55adbc4988e8 <col:16, col:22> col:16 public
|-EnumDecl 0x55adbc498910 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55adbc498a10 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55adbc498c60 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc4989f0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55adbc4989d0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55adbc498aa0 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55adbc498c78 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc498a80 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55adbc498a60 <col:24> 'int' 22
| |-EnumConstantDecl 0x55adbc498b30 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55adbc498c90 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc498b10 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55adbc498af0 <col:24> 'int' 34
| |-EnumConstantDecl 0x55adbc498bc0 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55adbc498ca8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc498ba0 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55adbc498b80 <col:25> 'int' 95
| `-EnumConstantDecl 0x55adbc498c10 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55adbc49a620 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55adbc49aa58 <col:7>
|-CXXConstructorDecl 0x55adbc49a728 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55adbc49a728
| `-ParmVarDecl 0x55adbc49a838 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55adbc49a8d8 <col:7> col:7 implicit used constexpr NumArg 'void (NumArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc49a9e8 <col:7> col:7 'NumArg &&'
| `-CompoundStmt 0x55adbc5e3e20 <col:7>
`-CXXDestructorDecl 0x55adbc49cdc8 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc4a8928 <../dummy_inc/click/args.hh:1310:1, line:1321:1> line:1310:7 referenced class SecondsArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55adbc4a8a88 <col:1, col:7> col:7 implicit referenced class SecondsArg
|-AccessSpecDecl 0x55adbc4a8b18 <col:36, col:42> col:36 public
|-CXXConstructorDecl 0x55adbc4a8c28 <line:1311:5, line:1313:5> line:1311:5 used SecondsArg 'void (int)'
| |-ParmVarDecl 0x55adbc4a8b58 <col:16, col:24> col:20 used d 'int' cinit
| | `-IntegerLiteral 0x55adbc4a94d0 <col:24> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55adbc4a95d0 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55adbc4a9400 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x55adbc4a9590 <line:1312:27> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55adbc4a9550 <col:27> 'int' lvalue ParmVar 0x55adbc4a8b58 'd' 'int'
| `-CompoundStmt 0x55adbc4a9640 <col:30, line:1313:5>
|-CXXMethodDecl 0x55adbc4a8e78 <line:1314:5, col:99> col:10 parse_saturating 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x55adbc4a8ce8 <col:27, col:41> col:41 str 'const String &'
| |-ParmVarDecl 0x55adbc4a8d60 <col:46, col:56> col:56 result 'uint32_t &'
| `-ParmVarDecl 0x55adbc4a8dd8 <col:64, col:89> col:82 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55adbc4a94f0 <col:89> 'const ArgContext' lvalue Var 0x55adbc48ffd0 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55adbc4a90d0 <line:1315:5, col:88> col:10 parse 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x55adbc4a8f40 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55adbc4a8fb8 <col:35, col:45> col:45 result 'uint32_t &'
| `-ParmVarDecl 0x55adbc4a9030 <col:53, col:78> col:71 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55adbc4a9510 <col:78> 'const ArgContext' lvalue Var 0x55adbc48ffd0 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55adbc4a9330 <line:1317:5, col:86> col:10 parse 'bool (const String &, double &, const ArgContext &)'
| |-ParmVarDecl 0x55adbc4a9198 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55adbc4a9218 <col:35, col:43> col:43 result 'double &'
| `-ParmVarDecl 0x55adbc4a9290 <col:51, col:76> col:69 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55adbc4a9530 <col:76> 'const ArgContext' lvalue Var 0x55adbc48ffd0 'blank_args' 'const ArgContext'
|-FieldDecl 0x55adbc4a9400 <line:1319:5, col:9> col:9 referenced fraction_digits 'int'
|-FieldDecl 0x55adbc4a9468 <line:1320:5, col:9> col:9 referenced status 'int'
|-CXXConstructorDecl 0x55adbc5b7d28 <line:1310:7> col:7 implicit constexpr SecondsArg 'void (const SecondsArg &)' inline default trivial noexcept-unevaluated 0x55adbc5b7d28
| `-ParmVarDecl 0x55adbc5b7e38 <col:7> col:7 'const SecondsArg &'
|-CXXConstructorDecl 0x55adbc5b7ed8 <col:7> col:7 implicit used constexpr SecondsArg 'void (SecondsArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc5b7fe8 <col:7> col:7 used 'SecondsArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55adbc5e3e30 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55adbc5e3e00 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x55adbc5e3dd0 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc5e3da0 <col:7> 'SecondsArg' lvalue ParmVar 0x55adbc5b7fe8 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x55adbc4a9400 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x55adbc5e3f28 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55adbc5e3ef8 <col:7> 'int' xvalue .fraction_digits 0x55adbc4a9400
| |     `-CXXStaticCastExpr 0x55adbc5e3ec8 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc5e3e98 <col:7> 'SecondsArg' lvalue ParmVar 0x55adbc5b7fe8 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x55adbc4a9468 'status' 'int'
| | `-ImplicitCastExpr 0x55adbc5e3ff8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55adbc5e3fc8 <col:7> 'int' xvalue .status 0x55adbc4a9468
| |     `-CXXStaticCastExpr 0x55adbc5e3f98 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc5e3f68 <col:7> 'SecondsArg' lvalue ParmVar 0x55adbc5b7fe8 '' 'SecondsArg &&'
| `-CompoundStmt 0x55adbc5e4050 <col:7>
`-CXXDestructorDecl 0x55adbc5b80b0 <col:7> col:7 implicit referenced ~SecondsArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.SecondsArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.SecondsArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class MyIPRewriterEntry
         0 |   class IPFlowID orig_flow
         0 |     class IPAddress _saddr
         0 |       uint32_t _addr
         4 |     class IPAddress _daddr
         4 |       uint32_t _addr
         8 |     uint16_t _sport
        10 |     uint16_t _dport
        12 |   class IPFlowID changed_flow
        12 |     class IPAddress _saddr
        12 |       uint32_t _addr
        16 |     class IPAddress _daddr
        16 |       uint32_t _addr
        20 |     uint16_t _sport
        22 |     uint16_t _dport
        24 |   int port
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc3cbe58 <../elements/tcpudp/myrewriter.hh:221:1, line:226:1> line:221:7 referenced class MyIPRewriterEntry definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55adbc3cbf78 <col:1, col:7> col:7 implicit class MyIPRewriterEntry
|-AccessSpecDecl 0x55adbc3cc008 <line:222:1, col:7> col:1 public
|-FieldDecl 0x55adbc3cc040 <line:223:5, col:14> col:14 orig_flow 'IPFlowID'
|-FieldDecl 0x55adbc3cc0a0 <line:224:5, col:14> col:14 referenced changed_flow 'IPFlowID'
`-FieldDecl 0x55adbc3cc108 <line:225:5, col:9> col:9 port 'int'

Layout: <CGRecordLayout
  LLVMType:%class.MyIPRewriterEntry = type { %class.IPFlowID, %class.IPFlowID, i32 }
  NonVirtualBaseLLVMType:%class.MyIPRewriterEntry = type { %class.IPFlowID, %class.IPFlowID, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc22bf18 prev 0x55adbc21e440 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc22c010 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55adbc22c100 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55adbc22c228 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55adbc22c3a8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55adbc22c528 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55adbc22c6a8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55adbc240ff8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55adbc241868 <col:11>
|-CXXDestructorDecl 0x55adbc2410d0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55adbc241208 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55adbc241208
| `-ParmVarDecl 0x55adbc241318 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55adbc2413b8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55adbc2413b8
| `-ParmVarDecl 0x55adbc2414c8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55adbc2441f8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc244308 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55adbc244588 <col:11>
|   `-ReturnStmt 0x55adbc244578 <col:11>
|     `-UnaryOperator 0x55adbc244560 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55adbc244550 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55adbc244378 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55adbc244378
  `-ParmVarDecl 0x55adbc244488 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc22c710 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc22c828 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55adbc22c8c8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55adbc22c930 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55adbc22c998 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55adbc22ca00 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55adbc22ca60 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55adbc22cb20 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55adbc22cb80 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55adbc22cbe0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55adbc240f08 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55adbc22c8c8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55adbc241878 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55adbc2418d0 <col:12>
|-CXXConstructorDecl 0x55adbc241538 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55adbc241538
| `-ParmVarDecl 0x55adbc241648 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55adbc2416e8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55adbc2416e8
| `-ParmVarDecl 0x55adbc2417f8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55adbc2438e0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc217b10 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbc217c98 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55adbc217d28 <col:16, col:22> col:16 public
|-EnumDecl 0x55adbc217d50 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55adbc217e50 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55adbc217f30 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc217e30 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55adbc217e10 <col:21> 'int' 28
| `-EnumConstantDecl 0x55adbc217ee0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55adbc217f48 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc217ec0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55adbc217ea0 <col:22> 'int' 64
|-CXXMethodDecl 0x55adbc218288 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55adbc217f70 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55adbc217ff0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55adbc218068 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55adbc2180e0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55adbc218348 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55adbc218548 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55adbc2183c0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55adbc218438 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55adbc2185f8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55adbc218758 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55adbc218668 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55adbc218800 <col:72> warn_unused_result ""
|-TypedefDecl 0x55adbc218b30 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55adbc218ac0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55adbc218a60 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55adbc218a20 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55adbbce22d0 'void'
|       |-PointerType 0x55adbbf93d20 'unsigned char *'
|       | `-BuiltinType 0x55adbbce23d0 'unsigned char'
|       |-TypedefType 0x55adbbd8ff90 'size_t' sugar
|       | |-Typedef 0x55adbbd52b20 'size_t'
|       | `-BuiltinType 0x55adbbce2430 'unsigned long'
|       `-PointerType 0x55adbbce2ad0 'void *'
|         `-BuiltinType 0x55adbbce22d0 'void'
|-CXXMethodDecl 0x55adbc218fa8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55adbc218ba0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55adbc218c18 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55adbc218cb0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55adbc218d30 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55adbc237460 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55adbc237448 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55adbc237410 <col:58> 'int' 0
| |-ParmVarDecl 0x55adbc218db0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55adbc237488 <col:76> 'int' 0
| |-ParmVarDecl 0x55adbc218e30 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55adbc2374a8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55adbc219078 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55adbc2190f8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55adbc2191b8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55adbc219258 <col:20>
| `-OptimizeNoneAttr 0x55adbc2192b0 <col:30>
|-CXXMethodDecl 0x55adbc219328 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55adbc2193c8 <col:20>
| `-OptimizeNoneAttr 0x55adbc219420 <col:30>
|-CXXMethodDecl 0x55adbc219498 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55adbc219538 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55adbc2195e8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55adbc219688 <col:20>
| |-OptimizeNoneAttr 0x55adbc2196e0 <col:30>
| `-WarnUnusedResultAttr 0x55adbc219708 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55adbc219760 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55adbc219800 <col:20>
| `-OptimizeNoneAttr 0x55adbc219858 <col:30>
|-CXXMethodDecl 0x55adbc2198a8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55adbc219948 <col:20>
| `-OptimizeNoneAttr 0x55adbc2199a0 <col:30>
|-CXXMethodDecl 0x55adbc2199e8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55adbc219a88 <col:20>
| `-OptimizeNoneAttr 0x55adbc219ae0 <col:30>
|-CXXMethodDecl 0x55adbc219b28 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55adbc219be8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55adbc219cb0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55adbc219d78 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55adbc219e38 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55adbc219f58 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55adbc237570 <col:54, line:99:5>
|   `-ReturnStmt 0x55adbc237560 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55adbc237548 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55adbc237518 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55adbc236308
|         `-CXXThisExpr 0x55adbc237508 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55adbc21a0f8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55adbc21a008 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55adbc237620 <col:67, line:103:5>
|   `-BinaryOperator 0x55adbc237600 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55adbc237598 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55adbc236308
|     | `-CXXThisExpr 0x55adbc237588 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55adbc2375e8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc2375c8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55adbc21a008 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55adbc21a1f0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55adbc2376a0 <col:33, line:107:5>
|   `-ReturnStmt 0x55adbc237690 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55adbc237678 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55adbc237648 <col:16> 'void *' lvalue ->_destructor_argument 0x55adbc236370
|         `-CXXThisExpr 0x55adbc237638 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55adbc21a2b0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55adbc237cd0 <col:25, line:113:5>
|   |-ParenExpr 0x55adbc237a18 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55adbc2379e8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc237758 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55adbc237730 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55adbc2376f8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55adbc2376c8 <col:24> '<bound member function type>' ->shared 0x55adbc219328
|   |   |       `-ImplicitCastExpr 0x55adbc237718 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55adbc2376b8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55adbc2377b8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc237798 <col:42> 'int' 0
|   |   `-CallExpr 0x55adbc237948 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55adbc237930 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc237910 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc237988 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc237828 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55adbc2379a0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc237850 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55adbc2379b8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc237888 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55adbc2379d0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc2378f8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc2378e0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc2378a8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55adbc237c18 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55adbc237a48 <col:2> 'unsigned char *' lvalue ->_head 0x55adbc22cd20
|   | | `-CXXThisExpr 0x55adbc237a38 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55adbc237c00 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55adbc237be0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55adbc237a88 <col:10> 'unsigned char *' lvalue ->_data 0x55adbc22cd88
|   |     | `-CXXThisExpr 0x55adbc237a78 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55adbc237bc8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55adbc237ba8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55adbc237ac8 <col:18> 'unsigned char *' lvalue ->_tail 0x55adbc2361e0
|   |         | `-CXXThisExpr 0x55adbc237ab8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55adbc237b90 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55adbc237b70 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55adbc237b08 <col:26> 'unsigned char *' lvalue ->_end 0x55adbc236248
|   |             | `-CXXThisExpr 0x55adbc237af8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55adbc237b58 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55adbc237b38 <col:33> 'int' 0
|   `-BinaryOperator 0x55adbc237cb0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55adbc237c48 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55adbc236308
|     | `-CXXThisExpr 0x55adbc237c38 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55adbc237c98 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55adbc237c78 <col:16> 'int' 0
|-CXXMethodDecl 0x55adbc21a3f0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55adbc21a360 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55adbc21a498 <col:20>
| |-OptimizeNoneAttr 0x55adbc21a4f0 <col:30>
| `-WarnUnusedResultAttr 0x55adbc21a518 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55adbc21a5e8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55adbc21a558 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55adbc21a690 <col:20>
| |-OptimizeNoneAttr 0x55adbc21a6e8 <col:30>
| `-WarnUnusedResultAttr 0x55adbc21a710 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55adbc21a848 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55adbc21a750 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55adbc21a8f0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55adbc21a9f0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55adbc21a960 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55adbc21aa98 <col:20>
| `-OptimizeNoneAttr 0x55adbc21aaf0 <col:30>
|-CXXMethodDecl 0x55adbc21abb8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55adbc21ab28 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55adbc21ac60 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55adbc21ad60 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55adbc21acd0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55adbc21ae08 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55adbc21af08 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55adbc21ae78 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55adbc21afb0 <col:20>
| `-OptimizeNoneAttr 0x55adbc21b008 <col:30>
|-CXXMethodDecl 0x55adbc21b198 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55adbc21b048 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55adbc21b0c0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55adbc2374c8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55adbc21b248 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55adbc21b448 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55adbc21b2c0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55adbc21b338 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc21b658 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55adbc21b508 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55adbc21b580 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc21b868 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55adbc21b718 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55adbc21b798 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55adbc2374d8 <col:39> 'int' 0
|-CXXMethodDecl 0x55adbc21b938 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55adbc21ba00 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55adbc21bac8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55adbc21bb88 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55adbc21bc68 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55adbc21bdb0 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55adbc21bd20 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55adbc21bf80 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55adbc21be70 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55adbc21bee8 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc21c050 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55adbc21c110 <line:288:5, col:66> col:45 used has_network_header 'bool () const'
| |-NoInlineAttr 0x55adbc21c1b0 <col:20>
| `-OptimizeNoneAttr 0x55adbc21c208 <col:30>
|-CXXMethodDecl 0x55adbc21c258 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55adbc21c2f8 <col:20>
| `-OptimizeNoneAttr 0x55adbc21c350 <col:30>
|-CXXMethodDecl 0x55adbc21c3a0 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55adbc21c460 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55adbc21c528 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55adbc21c5c8 <col:20>
| `-OptimizeNoneAttr 0x55adbc21c620 <col:30>
|-CXXMethodDecl 0x55adbc21c770 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55adbc21c660 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55adbc21c6d8 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc21c8c0 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55adbc21c830 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc21c988 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55adbc21ca48 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55adbc21cae8 <col:20>
| `-OptimizeNoneAttr 0x55adbc21cb40 <col:30>
|-CXXMethodDecl 0x55adbc21cb90 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55adbc21cc30 <col:20>
| `-OptimizeNoneAttr 0x55adbc21cc88 <col:30>
|-CXXMethodDecl 0x55adbc21ccd8 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55adbc21cda0 <line:300:5, col:63> col:44 used transport_length 'int () const'
| |-NoInlineAttr 0x55adbc21ce40 <col:20>
| `-OptimizeNoneAttr 0x55adbc21ce98 <col:30>
|-CXXMethodDecl 0x55adbc21cee0 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55adbc21cff8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55adbc21d168 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55adbc21d0a8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55adbc21d258 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55adbc21d2f8 <col:20>
| `-OptimizeNoneAttr 0x55adbc21d350 <col:30>
|-CXXMethodDecl 0x55adbc21d3a0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55adbc21d460 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55adbc21d698 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55adbc21d510 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55adbc21d588 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55adbc21d748 <col:20>
| `-OptimizeNoneAttr 0x55adbc21d7a0 <col:30>
|-CXXMethodDecl 0x55adbc21d848 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55adbc21d8e8 <col:20>
| `-OptimizeNoneAttr 0x55adbc21d940 <col:30>
|-CXXMethodDecl 0x55adbc21d990 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55adbc21da30 <col:20>
| `-OptimizeNoneAttr 0x55adbc21da88 <col:30>
|-CXXMethodDecl 0x55adbc21dad0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55adbc21db70 <col:20>
| `-OptimizeNoneAttr 0x55adbc21dbc8 <col:30>
|-CXXMethodDecl 0x55adbc21dcc8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55adbc21dc00 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55adbc21dd70 <col:20>
| `-OptimizeNoneAttr 0x55adbc21ddc8 <col:30>
|-CXXMethodDecl 0x55adbc21df88 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55adbc21de00 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55adbc21de78 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55adbc21e038 <col:20>
| `-OptimizeNoneAttr 0x55adbc21e090 <col:30>
|-CXXMethodDecl 0x55adbc21e138 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55adbc21e258 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55adbc21e378 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55adbc21e418 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55adbc21e440 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55adbc21e568 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55adbc21e608 <col:20>
| `-OptimizeNoneAttr 0x55adbc21e660 <col:30>
|-CXXMethodDecl 0x55adbc21e708 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55adbc21e7a8 <col:20>
| `-OptimizeNoneAttr 0x55adbc21e800 <col:30>
|-AccessSpecDecl 0x55adbc21e828 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55adbc21e850 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55adbc21e950 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55adbc21e9a0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc21e930 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55adbc21e910 <col:14> 'int' 48
|-CXXMethodDecl 0x55adbc21ea08 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55adbc21eaa8 <col:20>
| `-OptimizeNoneAttr 0x55adbc21eb00 <col:30>
|-CXXMethodDecl 0x55adbc21eb78 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55adbc21ec18 <col:20>
| `-OptimizeNoneAttr 0x55adbc21ec70 <col:30>
|-CXXMethodDecl 0x55adbc21ed38 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55adbc21eca8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55adbc21eed8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55adbc21f078 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55adbc21ef88 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55adbc21f120 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55adbc21f220 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55adbc21f5d0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc21f200 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55adbc21f1e0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55adbc21f2b0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55adbc21f5e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc21f290 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55adbc21f270 <col:14> 'int' 1
| |-EnumConstantDecl 0x55adbc21f340 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55adbc21f600 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc21f320 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55adbc21f300 <col:14> 'int' 2
| |-EnumConstantDecl 0x55adbc21f3d0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55adbc21f618 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc21f3b0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55adbc21f390 <col:14> 'int' 3
| |-EnumConstantDecl 0x55adbc21f460 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55adbc21f630 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc21f440 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55adbc21f420 <col:13> 'int' 4
| |-EnumConstantDecl 0x55adbc21f4f0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55adbc21f648 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc21f4d0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55adbc21f4b0 <col:13> 'int' 5
| `-EnumConstantDecl 0x55adbc21f580 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55adbc21f660 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc21f560 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55adbc21f540 <col:14> 'int' 6
|-CXXMethodDecl 0x55adbc21f6c8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55adbc21f768 <col:20>
| `-OptimizeNoneAttr 0x55adbc21f7c0 <col:30>
|-CXXMethodDecl 0x55adbc21f8b8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55adbc21f7f8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55adbc21f960 <col:20>
| `-OptimizeNoneAttr 0x55adbc21f9b8 <col:30>
|-CXXMethodDecl 0x55adbc21fa28 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55adbc21fb50 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55adbc21fd18 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55adbc21fc50 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55adbc21fde0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55adbc21fea8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55adbc21ffe8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55adbc21ff58 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55adbc220090 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55adbc220190 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55adbc220390 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc220170 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55adbc220150 <col:23> 'int' 0
| |-EnumConstantDecl 0x55adbc220220 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55adbc2203a8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc220200 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55adbc2201e0 <col:45> 'int' 4
| |-EnumConstantDecl 0x55adbc2202b0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55adbc2203c0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc220290 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55adbc220270 <col:24> 'int' 0
| `-EnumConstantDecl 0x55adbc220340 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55adbc2203d8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc220320 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55adbc220300 <col:47> 'int' 16
|-CXXMethodDecl 0x55adbc220438 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55adbc2205a8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55adbc2204e8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55adbc220650 <col:20>
| `-OptimizeNoneAttr 0x55adbc2206a8 <col:30>
|-CXXMethodDecl 0x55adbc2206f8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55adbc237df0 <col:18, col:36>
|   `-ReturnStmt 0x55adbc237de0 <col:20, col:33>
|     `-ImplicitCastExpr 0x55adbc237dc8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55adbc237da8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55adbc237d78 <col:27> '<bound member function type>' ->xanno 0x55adbc21e708
|           `-CXXThisExpr 0x55adbc237d68 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55adbc2207f0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55adbc237f00 <col:30, col:48>
|   `-ReturnStmt 0x55adbc237ef0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55adbc237ed8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55adbc237eb8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55adbc237e88 <col:39> '<bound member function type>' ->xanno 0x55adbc21e568
|           `-CXXThisExpr 0x55adbc237e78 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55adbc2208d8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55adbc238098 <col:24, col:50>
|   `-ReturnStmt 0x55adbc238088 <col:26, col:47>
|     `-UnaryOperator 0x55adbc238070 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55adbc238050 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55adbc238038 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55adbc237fe8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55adbc22c228
|         |   `-CXXMemberCallExpr 0x55adbc237fc8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55adbc237f98 <col:34> '<bound member function type>' ->xanno 0x55adbc21e708
|         |       `-CXXThisExpr 0x55adbc237f88 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55adbc238018 <col:46> 'int' 0
|-CXXMethodDecl 0x55adbc2209c8 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55adbc238268 <col:36, col:62>
|   `-ReturnStmt 0x55adbc238258 <col:38, col:59>
|     `-UnaryOperator 0x55adbc238240 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55adbc238220 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55adbc238208 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55adbc238180 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55adbc22c228
|         |   `-CXXMemberCallExpr 0x55adbc238160 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55adbc238130 <col:46> '<bound member function type>' ->xanno 0x55adbc21e568
|         |       `-CXXThisExpr 0x55adbc238120 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55adbc2381b0 <col:58> 'int' 0
|-CXXMethodDecl 0x55adbc220ae8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55adbc238400 <col:26, col:53>
|   `-ReturnStmt 0x55adbc2383f0 <col:28, col:50>
|     `-UnaryOperator 0x55adbc2383d8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55adbc2383b8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55adbc2383a0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55adbc238350 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55adbc22c528
|         |   `-CXXMemberCallExpr 0x55adbc238330 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55adbc238300 <col:36> '<bound member function type>' ->xanno 0x55adbc21e708
|         |       `-CXXThisExpr 0x55adbc2382f0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55adbc238380 <col:49> 'int' 0
|-CXXMethodDecl 0x55adbc220c08 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55adbc2385d8 <col:38, col:65>
|   `-ReturnStmt 0x55adbc2385c8 <col:40, col:62>
|     `-UnaryOperator 0x55adbc2385b0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55adbc238590 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55adbc238578 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55adbc2384e8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55adbc22c528
|         |   `-CXXMemberCallExpr 0x55adbc2384c8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55adbc238498 <col:48> '<bound member function type>' ->xanno 0x55adbc21e568
|         |       `-CXXThisExpr 0x55adbc238488 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55adbc238518 <col:61> 'int' 0
|-CXXMethodDecl 0x55adbc220db8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55adbc220cc0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55adbc238ca8 <col:34, line:463:5>
|   |-ParenExpr 0x55adbc238af0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55adbc238ac0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc238728 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc2386f8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55adbc238648 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55adbc238630 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55adbc2385f0 <col:23> 'int' lvalue ParmVar 0x55adbc220cc0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55adbc238610 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55adbc2386d8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55adbc2386a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55adbc238668 <col:33> 'int' lvalue ParmVar 0x55adbc220cc0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55adbc2386c0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55adbc238688 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55adbc21e950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55adbc238788 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc238768 <col:56> 'int' 0
|   |   `-CallExpr 0x55adbc238a20 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55adbc238a08 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc2389e8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc238a60 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc238878 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55adbc238a78 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc2388a8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55adbc238a90 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc2388e0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55adbc238aa8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc2389d0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc2389b8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc238978 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55adbc238c98 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55adbc238c80 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55adbc238c60 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55adbc238c30 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55adbc238be0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55adbc22c228
|         |   `-CXXMemberCallExpr 0x55adbc238bc0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55adbc238b90 <col:9> '<bound member function type>' ->xanno 0x55adbc21e568
|         |       `-CXXThisExpr 0x55adbc238b80 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55adbc238c48 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55adbc238c10 <col:21> 'int' lvalue ParmVar 0x55adbc220cc0 'i' 'int'
|-CXXMethodDecl 0x55adbc221008 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55adbc220e78 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55adbc220ef0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55adbc239338 <col:40, line:472:5>
|   |-ParenExpr 0x55adbc239150 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55adbc239120 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc238e00 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc238dd0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55adbc238d20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55adbc238d08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55adbc238cc8 <col:23> 'int' lvalue ParmVar 0x55adbc220e78 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55adbc238ce8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55adbc238db0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55adbc238d80 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55adbc238d40 <col:33> 'int' lvalue ParmVar 0x55adbc220e78 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55adbc238d98 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55adbc238d60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55adbc21e950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55adbc238e60 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc238e40 <col:56> 'int' 0
|   |   `-CallExpr 0x55adbc239080 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55adbc239068 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc239048 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc2390c0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc238ed0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55adbc2390d8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc238f00 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55adbc2390f0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc238f38 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55adbc239108 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc239030 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc239018 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc238fd8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55adbc239318 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55adbc2392c0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55adbc239290 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55adbc239240 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55adbc22c228
|     | |   `-CXXMemberCallExpr 0x55adbc239220 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55adbc2391f0 <col:2> '<bound member function type>' ->xanno 0x55adbc21e708
|     | |       `-CXXThisExpr 0x55adbc2391e0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55adbc2392a8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55adbc239270 <col:14> 'int' lvalue ParmVar 0x55adbc220e78 'i' 'int'
|     `-ImplicitCastExpr 0x55adbc239300 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc2392e0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55adbc220ef0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55adbc2211c8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55adbc2210d0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55adbc239ab8 <col:36, line:485:5>
|   |-ParenExpr 0x55adbc239820 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55adbc2397f0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc2394d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc2394a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55adbc2393b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55adbc239398 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55adbc239358 <col:23> 'int' lvalue ParmVar 0x55adbc2210d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55adbc239378 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55adbc239480 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55adbc239468 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55adbc2393d0 <col:33> 'int' lvalue ParmVar 0x55adbc2210d0 'i' 'int'
|   |   |     `-BinaryOperator 0x55adbc239448 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55adbc239430 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55adbc2393f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55adbc21e950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55adbc239410 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55adbc239530 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc239510 <col:60> 'int' 0
|   |   `-CallExpr 0x55adbc239750 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55adbc239738 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc239718 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc239790 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc2395a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55adbc2397a8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc2395d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55adbc2397c0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc239610 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55adbc2397d8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc239700 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc2396e8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc2396a8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55adbc239aa8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55adbc239a90 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55adbc239a78 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55adbc239a48 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55adbc2399e8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55adbc2399b8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55adbc239930 <col:61, col:70> 'char const[48]' lvalue ->c 0x55adbc22c100
|             |   `-CXXMemberCallExpr 0x55adbc239910 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55adbc2398e0 <col:61> '<bound member function type>' ->xanno 0x55adbc21e568
|             |       `-CXXThisExpr 0x55adbc2398d0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55adbc2399d0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55adbc239960 <col:74> 'int' lvalue ParmVar 0x55adbc2210d0 'i' 'int'
|-CXXMethodDecl 0x55adbc221418 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55adbc221288 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55adbc221300 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55adbc23a228 <col:42, line:500:5>
|   |-ParenExpr 0x55adbc239fa0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55adbc239f70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc239c50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc239c20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55adbc239b30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55adbc239b18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55adbc239ad8 <col:23> 'int' lvalue ParmVar 0x55adbc221288 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55adbc239af8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55adbc239c00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55adbc239be8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55adbc239b50 <col:33> 'int' lvalue ParmVar 0x55adbc221288 'i' 'int'
|   |   |     `-BinaryOperator 0x55adbc239bc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55adbc239bb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55adbc239b70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55adbc21e950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55adbc239b90 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55adbc239cb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc239c90 <col:60> 'int' 0
|   |   `-CallExpr 0x55adbc239ed0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55adbc239eb8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc239e98 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc239f10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc239d20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55adbc239f28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc239d58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55adbc239f40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc239d90 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55adbc239f58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc239e80 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc239e68 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc239e28 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55adbc23a208 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55adbc23a198 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55adbc23a168 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55adbc23a110 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55adbc23a0e0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55adbc23a090 <col:48, col:57> 'char [48]' lvalue ->c 0x55adbc22c100
|     |     |   `-CXXMemberCallExpr 0x55adbc23a070 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55adbc23a040 <col:48> '<bound member function type>' ->xanno 0x55adbc21e708
|     |     |       `-CXXThisExpr 0x55adbc23a030 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55adbc23a0f8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55adbc23a0c0 <col:61> 'int' lvalue ParmVar 0x55adbc221288 'i' 'int'
|     `-ImplicitCastExpr 0x55adbc23a1f0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc23a1b0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55adbc221300 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55adbc2215d8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55adbc2214e0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55adbc23a988 <col:35, line:513:5>
|   |-ParenExpr 0x55adbc23a698 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55adbc23a668 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc23a3c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc23a390 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55adbc23a2a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55adbc23a288 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55adbc23a248 <col:23> 'int' lvalue ParmVar 0x55adbc2214e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55adbc23a268 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55adbc23a370 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55adbc23a358 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55adbc23a2c0 <col:33> 'int' lvalue ParmVar 0x55adbc2214e0 'i' 'int'
|   |   |     `-BinaryOperator 0x55adbc23a338 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55adbc23a320 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55adbc23a2e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55adbc21e950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55adbc23a300 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55adbc23a420 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc23a400 <col:60> 'int' 0
|   |   `-CallExpr 0x55adbc23a5c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55adbc23a5b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc23a590 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc23a608 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23a490 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55adbc23a620 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23a4c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55adbc23a638 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc23a500 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55adbc23a650 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc23a578 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc23a560 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc23a520 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55adbc23a978 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55adbc23a960 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55adbc23a948 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55adbc23a918 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55adbc23a890 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55adbc23a860 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55adbc23a810 <col:60, col:69> 'char const[48]' lvalue ->c 0x55adbc22c100
|             |   `-CXXMemberCallExpr 0x55adbc23a7f0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55adbc23a7c0 <col:60> '<bound member function type>' ->xanno 0x55adbc21e568
|             |       `-CXXThisExpr 0x55adbc23a7b0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55adbc23a878 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55adbc23a840 <col:73> 'int' lvalue ParmVar 0x55adbc2214e0 'i' 'int'
|-CXXMethodDecl 0x55adbc221828 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55adbc221698 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55adbc221710 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55adbc23b098 <col:41, line:528:5>
|   |-ParenExpr 0x55adbc23ae30 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55adbc23ae00 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc23ab20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc23aaf0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55adbc23aa00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55adbc23a9e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55adbc23a9a8 <col:23> 'int' lvalue ParmVar 0x55adbc221698 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55adbc23a9c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55adbc23aad0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55adbc23aab8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55adbc23aa20 <col:33> 'int' lvalue ParmVar 0x55adbc221698 'i' 'int'
|   |   |     `-BinaryOperator 0x55adbc23aa98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55adbc23aa80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55adbc23aa40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55adbc21e950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55adbc23aa60 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55adbc23ab80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc23ab60 <col:60> 'int' 0
|   |   `-CallExpr 0x55adbc23ad60 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55adbc23ad48 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc23ad28 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc23ada0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23abf0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55adbc23adb8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23ac28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55adbc23add0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc23ac60 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55adbc23ade8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc23ad10 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc23acf8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc23acb8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55adbc23b078 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55adbc23b028 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55adbc23aff8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55adbc23afa0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55adbc23af70 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55adbc23af20 <col:47, col:56> 'char [48]' lvalue ->c 0x55adbc22c100
|     |     |   `-CXXMemberCallExpr 0x55adbc23af00 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55adbc23aed0 <col:47> '<bound member function type>' ->xanno 0x55adbc21e708
|     |     |       `-CXXThisExpr 0x55adbc23aec0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55adbc23af88 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55adbc23af50 <col:60> 'int' lvalue ParmVar 0x55adbc221698 'i' 'int'
|     `-ImplicitCastExpr 0x55adbc23b060 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc23b040 <col:65> 'int16_t':'short' lvalue ParmVar 0x55adbc221710 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55adbc2219e8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55adbc2218f0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55adbc23b768 <col:36, line:541:5>
|   |-ParenExpr 0x55adbc23b508 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55adbc23b4d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc23b230 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc23b200 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55adbc23b110 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55adbc23b0f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55adbc23b0b8 <col:23> 'int' lvalue ParmVar 0x55adbc2218f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55adbc23b0d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55adbc23b1e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55adbc23b1c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55adbc23b130 <col:33> 'int' lvalue ParmVar 0x55adbc2218f0 'i' 'int'
|   |   |     `-BinaryOperator 0x55adbc23b1a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55adbc23b190 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55adbc23b150 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55adbc21e950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55adbc23b170 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55adbc23b290 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc23b270 <col:60> 'int' 0
|   |   `-CallExpr 0x55adbc23b438 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55adbc23b420 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc23b400 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc23b478 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23b300 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55adbc23b490 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23b338 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55adbc23b4a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc23b370 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55adbc23b4c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc23b3e8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc23b3d0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc23b390 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55adbc23b758 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55adbc23b740 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55adbc23b728 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55adbc23b6f8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55adbc23b6a0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55adbc23b670 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55adbc23b620 <col:61, col:70> 'char const[48]' lvalue ->c 0x55adbc22c100
|             |   `-CXXMemberCallExpr 0x55adbc23b600 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55adbc23b5d0 <col:61> '<bound member function type>' ->xanno 0x55adbc21e568
|             |       `-CXXThisExpr 0x55adbc23b5c0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55adbc23b688 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55adbc23b650 <col:74> 'int' lvalue ParmVar 0x55adbc2218f0 'i' 'int'
|-CXXMethodDecl 0x55adbc221bb8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55adbc221aa8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55adbc221b20 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55adbc221c68 <col:20>
| `-OptimizeNoneAttr 0x55adbc221cc0 <col:30>
|-CXXMethodDecl 0x55adbc221df8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55adbc221d00 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55adbc23be38 <col:35, line:562:5>
|   |-ParenExpr 0x55adbc23bbd8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55adbc23bba8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc23b900 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc23b8d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55adbc23b7e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55adbc23b7c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55adbc23b788 <col:23> 'int' lvalue ParmVar 0x55adbc221d00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55adbc23b7a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55adbc23b8b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55adbc23b898 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55adbc23b800 <col:33> 'int' lvalue ParmVar 0x55adbc221d00 'i' 'int'
|   |   |     `-BinaryOperator 0x55adbc23b878 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55adbc23b860 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55adbc23b820 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55adbc21e950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55adbc23b840 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55adbc23b960 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc23b940 <col:60> 'int' 0
|   |   `-CallExpr 0x55adbc23bb08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55adbc23baf0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc23bad0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc23bb48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23b9d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55adbc23bb60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23ba08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55adbc23bb78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc23ba40 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55adbc23bb90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc23bab8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc23baa0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc23ba60 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55adbc23be28 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55adbc23be10 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55adbc23bdf8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55adbc23bdc8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55adbc23bd70 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55adbc23bd40 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55adbc23bcf0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55adbc22c100
|             |   `-CXXMemberCallExpr 0x55adbc23bcd0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55adbc23bca0 <col:60> '<bound member function type>' ->xanno 0x55adbc21e568
|             |       `-CXXThisExpr 0x55adbc23bc90 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55adbc23bd58 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55adbc23bd20 <col:73> 'int' lvalue ParmVar 0x55adbc221d00 'i' 'int'
|-CXXMethodDecl 0x55adbc222008 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55adbc221eb8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55adbc221f30 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55adbc23c518 <col:41, line:577:5>
|   |-ParenExpr 0x55adbc23c2a8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55adbc23c278 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc23bfd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc23bfa0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55adbc23beb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55adbc23be98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55adbc23be58 <col:23> 'int' lvalue ParmVar 0x55adbc221eb8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55adbc23be78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55adbc23bf80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55adbc23bf68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55adbc23bed0 <col:33> 'int' lvalue ParmVar 0x55adbc221eb8 'i' 'int'
|   |   |     `-BinaryOperator 0x55adbc23bf48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55adbc23bf30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55adbc23bef0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55adbc21e950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55adbc23bf10 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55adbc23c030 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc23c010 <col:60> 'int' 0
|   |   `-CallExpr 0x55adbc23c1d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55adbc23c1c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc23c1a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc23c218 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23c0a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55adbc23c230 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23c0d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55adbc23c248 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc23c110 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55adbc23c260 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc23c188 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc23c170 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc23c130 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55adbc23c4f8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55adbc23c4a8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55adbc23c478 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55adbc23c418 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55adbc23c3e8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55adbc23c398 <col:47, col:56> 'char [48]' lvalue ->c 0x55adbc22c100
|     |     |   `-CXXMemberCallExpr 0x55adbc23c378 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55adbc23c348 <col:47> '<bound member function type>' ->xanno 0x55adbc21e708
|     |     |       `-CXXThisExpr 0x55adbc23c338 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55adbc23c400 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55adbc23c3c8 <col:60> 'int' lvalue ParmVar 0x55adbc221eb8 'i' 'int'
|     `-ImplicitCastExpr 0x55adbc23c4e0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc23c4c0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55adbc221f30 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55adbc2221c8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55adbc2220d0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55adbc23cc48 <col:36, line:591:5>
|   |-ParenExpr 0x55adbc23c988 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55adbc23c958 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc23c6b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc23c680 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55adbc23c590 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55adbc23c578 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55adbc23c538 <col:23> 'int' lvalue ParmVar 0x55adbc2220d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55adbc23c558 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55adbc23c660 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55adbc23c648 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55adbc23c5b0 <col:33> 'int' lvalue ParmVar 0x55adbc2220d0 'i' 'int'
|   |   |     `-BinaryOperator 0x55adbc23c628 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55adbc23c610 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55adbc23c5d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55adbc21e950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55adbc23c5f0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55adbc23c710 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc23c6f0 <col:60> 'int' 0
|   |   `-CallExpr 0x55adbc23c8b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55adbc23c8a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc23c880 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc23c8f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23c780 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55adbc23c910 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23c7b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55adbc23c928 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc23c7f0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55adbc23c940 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc23c868 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc23c850 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc23c810 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55adbc23cc38 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55adbc23cc20 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55adbc23cc08 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55adbc23cbd8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55adbc23cb50 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55adbc23cb20 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55adbc23cad0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55adbc22c100
|             |   `-CXXMemberCallExpr 0x55adbc23cab0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55adbc23ca80 <col:61> '<bound member function type>' ->xanno 0x55adbc21e568
|             |       `-CXXThisExpr 0x55adbc23ca70 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55adbc23cb38 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55adbc23cb00 <col:74> 'int' lvalue ParmVar 0x55adbc2220d0 'i' 'int'
|-CXXMethodDecl 0x55adbc222418 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55adbc222288 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55adbc222300 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55adbc23d328 <col:42, line:606:5>
|   |-ParenExpr 0x55adbc23d0b8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55adbc23d088 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc23cde0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc23cdb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55adbc23ccc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55adbc23cca8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55adbc23cc68 <col:23> 'int' lvalue ParmVar 0x55adbc222288 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55adbc23cc88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55adbc23cd90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55adbc23cd78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55adbc23cce0 <col:33> 'int' lvalue ParmVar 0x55adbc222288 'i' 'int'
|   |   |     `-BinaryOperator 0x55adbc23cd58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55adbc23cd40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55adbc23cd00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55adbc21e950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55adbc23cd20 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55adbc23ce40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc23ce20 <col:60> 'int' 0
|   |   `-CallExpr 0x55adbc23cfe8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55adbc23cfd0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc23cfb0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc23d028 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23ceb0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55adbc23d040 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23cee8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55adbc23d058 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc23cf20 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55adbc23d070 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc23cf98 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc23cf80 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc23cf40 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55adbc23d308 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55adbc23d2b8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55adbc23d288 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55adbc23d228 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55adbc23d1f8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55adbc23d1a8 <col:48, col:57> 'char [48]' lvalue ->c 0x55adbc22c100
|     |     |   `-CXXMemberCallExpr 0x55adbc23d188 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55adbc23d158 <col:48> '<bound member function type>' ->xanno 0x55adbc21e708
|     |     |       `-CXXThisExpr 0x55adbc23d148 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55adbc23d210 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55adbc23d1d8 <col:61> 'int' lvalue ParmVar 0x55adbc222288 'i' 'int'
|     `-ImplicitCastExpr 0x55adbc23d2f0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc23d2d0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55adbc222300 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55adbc2225b0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55adbc2224e0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55adbc23db98 <col:33, line:620:5>
|   |-ParenExpr 0x55adbc23d910 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55adbc23d8e0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc23d530 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc23d500 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55adbc23d3a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55adbc23d388 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55adbc23d348 <col:23> 'int' lvalue ParmVar 0x55adbc2224e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55adbc23d368 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55adbc23d4e0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55adbc23d4c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55adbc23d3c0 <col:33> 'int' lvalue ParmVar 0x55adbc2224e0 'i' 'int'
|   |   |     `-BinaryOperator 0x55adbc23d4a8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55adbc23d490 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55adbc23d3e0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55adbc21e950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55adbc23d468 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55adbc23d450 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55adbc23d418 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55adbc23d590 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc23d570 <col:79> 'int' 0
|   |   `-CallExpr 0x55adbc23d840 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55adbc23d828 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc23d808 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc23d880 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23d678 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55adbc23d898 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23d6c0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55adbc23d8b0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc23d6f8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55adbc23d8c8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc23d7f0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc23d7d8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc23d798 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55adbc23db88 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55adbc23db70 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55adbc23db58 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55adbc23db28 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55adbc23daa0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55adbc23da70 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55adbc23da20 <col:67, col:76> 'char const[48]' lvalue ->c 0x55adbc22c100
|             |   `-CXXMemberCallExpr 0x55adbc23da00 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55adbc23d9d0 <col:67> '<bound member function type>' ->xanno 0x55adbc21e568
|             |       `-CXXThisExpr 0x55adbc23d9c0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55adbc23da88 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55adbc23da50 <col:80> 'int' lvalue ParmVar 0x55adbc2224e0 'i' 'int'
|-CXXMethodDecl 0x55adbc2227c8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55adbc222670 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55adbc2226f0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55adbc240df0 <col:45, line:635:5>
|   |-ParenExpr 0x55adbc23e108 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55adbc23e0d8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55adbc23dda0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55adbc23dd70 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55adbc23dc10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55adbc23dbf8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55adbc23dbb8 <col:23> 'int' lvalue ParmVar 0x55adbc222670 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55adbc23dbd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55adbc23dd50 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55adbc23dd38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55adbc23dc30 <col:33> 'int' lvalue ParmVar 0x55adbc222670 'i' 'int'
|   |   |     `-BinaryOperator 0x55adbc23dd18 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55adbc23dd00 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55adbc23dc50 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55adbc21e950 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55adbc23dcd8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55adbc23dcc0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55adbc23dc88 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55adbc23de00 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55adbc23dde0 <col:79> 'int' 0
|   |   `-CallExpr 0x55adbc23e038 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55adbc23e020 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55adbc23e000 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55adbbd86da0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55adbc23e078 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23de70 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55adbc23e090 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55adbc23deb8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55adbc23e0a8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55adbc23def0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55adbc23e0c0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55adbc23dfe8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55adbc23dfd0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55adbc23df88 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55adbc240dd0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55adbc240d38 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55adbc240d08 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55adbc240cb0 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55adbc240c80 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55adbc240c30 <col:54, col:63> 'char [48]' lvalue ->c 0x55adbc22c100
|     |     |   `-CXXMemberCallExpr 0x55adbc240c10 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55adbc23e1a8 <col:54> '<bound member function type>' ->xanno 0x55adbc21e708
|     |     |       `-CXXThisExpr 0x55adbc23e198 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55adbc240c98 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55adbc240c60 <col:67> 'int' lvalue ParmVar 0x55adbc222670 'i' 'int'
|     `-CXXConstCastExpr 0x55adbc240da0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55adbc240d88 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55adbc240d50 <col:91> 'const void *' lvalue ParmVar 0x55adbc2226f0 'x' 'const void *'
|-CXXMethodDecl 0x55adbc222898 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55adbc240e78 <col:34, line:640:5>
|   `-ReturnStmt 0x55adbc240e68 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55adbc240e50 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55adbc240e20 <col:16> 'Packet *' lvalue ->_data_packet 0x55adbc22ccb8
|         `-CXXThisExpr 0x55adbc240e10 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55adbc2229d8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55adbc222948 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55adbc2374f8 <col:46> 'bool' true
|-CXXMethodDecl 0x55adbc222b58 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55adbc222a90 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55adbc222c00 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55adbc2233b0 <line:660:22> "" ""
| |-EnumConstantDecl 0x55adbc222d00 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55adbc223420 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc222ce0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55adbc222cc0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55adbc217e50 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55adbc222d90 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55adbc223438 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc222d70 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55adbc222d50 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55adbc217ee0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55adbc222e20 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55adbc223450 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc222e00 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55adbc222de0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55adbc222eb0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55adbc223468 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc222e90 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55adbc222e70 <col:19> 'int' 16
| |-EnumConstantDecl 0x55adbc222f40 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55adbc223480 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc222f20 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55adbc222f00 <col:21> 'int' 16
| |-EnumConstantDecl 0x55adbc222fd0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55adbc223498 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc222fb0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55adbc222f90 <col:19> 'int' 32
| |-EnumConstantDecl 0x55adbc223060 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55adbc2234b0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc223040 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55adbc223020 <col:19> 'int' EnumConstant 0x55adbc222eb0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55adbc2230f0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55adbc2234c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc2230d0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55adbc2230b0 <col:19> 'int' EnumConstant 0x55adbc222fd0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55adbc2231c0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55adbc2234e0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc2231a0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55adbc223180 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55adbc223140 <col:23> 'int' EnumConstant 0x55adbc2230f0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55adbc223160 <col:40> 'int' 2
| |-EnumConstantDecl 0x55adbc223290 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55adbc2234f8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc223270 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55adbc223250 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55adbc223210 <col:23> 'int' EnumConstant 0x55adbc2230f0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55adbc223230 <col:40> 'int' 4
| `-EnumConstantDecl 0x55adbc223360 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55adbc223510 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc223340 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55adbc223320 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55adbc2232e0 <col:23> 'int' EnumConstant 0x55adbc2230f0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55adbc223300 <col:40> 'int' 8
|-CXXMethodDecl 0x55adbc223550 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55adbc2235f0 <col:68> "" ""
|-CXXMethodDecl 0x55adbc223688 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55adbc223728 <col:45> "" ""
|-CXXMethodDecl 0x55adbc2237c0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55adbc223860 <col:57> "" ""
|-CXXMethodDecl 0x55adbc2238f8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55adbc223998 <col:45> "" ""
|-CXXMethodDecl 0x55adbc223a30 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55adbc223ad0 <col:57> "" ""
|-CXXMethodDecl 0x55adbc223b60 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55adbc223c00 <col:51> "" ""
|-CXXMethodDecl 0x55adbc228e70 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55adbc228f10 <col:63> "" ""
|-CXXMethodDecl 0x55adbc228fa0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55adbc229040 <col:53> "" ""
|-CXXMethodDecl 0x55adbc2290d0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55adbc229170 <col:65> "" ""
|-CXXMethodDecl 0x55adbc229288 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55adbc2291f8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55adbc229330 <col:61> "" ""
|-CXXMethodDecl 0x55adbc2294c8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55adbc2293b8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55adbc229430 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55adbc229578 <col:67> "" ""
|-CXXMethodDecl 0x55adbc229690 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55adbc229600 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55adbc229738 <col:63> "" ""
|-CXXMethodDecl 0x55adbc2298d0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55adbc2297c0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55adbc229838 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55adbc229980 <col:69> "" ""
|-CXXMethodDecl 0x55adbc229a98 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55adbc229a08 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55adbc229b40 <col:63> "" ""
|-CXXMethodDecl 0x55adbc229cd8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55adbc229bc8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55adbc229c40 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55adbc229d88 <col:69> "" ""
|-CXXMethodDecl 0x55adbc229ea0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55adbc229e10 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55adbc229f48 <col:62> "" ""
|-CXXMethodDecl 0x55adbc22a0e0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55adbc229fd0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55adbc22a048 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55adbc22a190 <col:68> "" ""
|-CXXMethodDecl 0x55adbc22a2a8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55adbc22a218 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55adbc22a350 <col:63> "" ""
|-CXXMethodDecl 0x55adbc22a4e8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55adbc22a3d8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55adbc22a450 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55adbc22a598 <col:69> "" ""
|-CXXMethodDecl 0x55adbc22a628 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55adbc22a6c8 <col:64> "" ""
|-CXXMethodDecl 0x55adbc22a758 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55adbc22a7f8 <col:52> "" ""
|-CXXMethodDecl 0x55adbc22a888 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55adbc22a928 <col:67> "" ""
|-CXXMethodDecl 0x55adbc22a9b8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55adbc22aa58 <col:55> "" ""
|-CXXMethodDecl 0x55adbc22ab70 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55adbc22aae0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55adbc22ac18 <col:58> "" ""
|-CXXMethodDecl 0x55adbc22adb0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55adbc22aca0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55adbc22ad18 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55adbc22ae60 <col:62> "" ""
|-CXXMethodDecl 0x55adbc22af78 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55adbc22aee8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55adbc22b020 <col:58> "" ""
|-CXXMethodDecl 0x55adbc22b1b8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55adbc22b0a8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55adbc22b120 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55adbc22b268 <col:62> "" ""
|-CXXMethodDecl 0x55adbc22b380 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55adbc22b2f0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55adbc22b428 <col:60> "" ""
|-CXXMethodDecl 0x55adbc22b5c0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55adbc22b4b0 <col:34> col:37 'int'
| |-ParmVarDecl 0x55adbc22b528 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55adbc22b670 <col:64> "" ""
|-CXXMethodDecl 0x55adbc22b788 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55adbc22b6f8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55adbc22b830 <col:58> "" ""
|-CXXMethodDecl 0x55adbc22b9c8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55adbc22b8b8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55adbc22b930 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55adbc22ba78 <col:62> "" ""
|-CXXMethodDecl 0x55adbc22bb90 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55adbc22bb00 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55adbc22bc38 <col:59> "" ""
|-CXXMethodDecl 0x55adbc22bdd0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55adbc22bcc0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55adbc22bd38 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55adbc22be80 <col:63> "" ""
|-AccessSpecDecl 0x55adbc22bef0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55adbc22bf18 prev 0x55adbc21e440 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55adbc22c010 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55adbc22c100 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55adbc22c228 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55adbc22c3a8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55adbc22c528 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55adbc22c6a8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55adbc240ff8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55adbc241868 <col:11>
| |-CXXDestructorDecl 0x55adbc2410d0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55adbc241208 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55adbc241208
| | `-ParmVarDecl 0x55adbc241318 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55adbc2413b8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55adbc2413b8
| | `-ParmVarDecl 0x55adbc2414c8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55adbc2441f8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55adbc244308 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55adbc244588 <col:11>
| |   `-ReturnStmt 0x55adbc244578 <col:11>
| |     `-UnaryOperator 0x55adbc244560 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55adbc244550 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55adbc244378 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55adbc244378
|   `-ParmVarDecl 0x55adbc244488 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55adbc22c710 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55adbc22c828 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55adbc22c8c8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55adbc22c930 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55adbc22c998 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55adbc22ca00 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55adbc22ca60 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55adbc22cb20 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55adbc22cb80 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55adbc22cbe0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55adbc240f08 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55adbc22c8c8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55adbc241878 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55adbc2418d0 <col:12>
| |-CXXConstructorDecl 0x55adbc241538 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55adbc241538
| | `-ParmVarDecl 0x55adbc241648 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55adbc2416e8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55adbc2416e8
| | `-ParmVarDecl 0x55adbc2417f8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55adbc2438e0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55adbc22cc58 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55adbc22ccb8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55adbc22cd20 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55adbc22cd88 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55adbc2361e0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55adbc236248 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55adbc2362a8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55adbc236308 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55adbc236370 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55adbc2363f8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55adbc22cc58 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55adbc240ea0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55adbc2362a8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55adbc2418e0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55adbc241940 <col:21, line:755:5>
|-CXXConstructorDecl 0x55adbc236598 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55adbc2364d8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55adbc236690 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55adbc236878 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55adbc236780 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55adbc236b48 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55adbc236930 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55adbc2369a8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55adbc236a20 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc236d68 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55adbc236c18 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55adbc236c90 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55adbc237038 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55adbc236e28 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55adbc236ea0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55adbc236f18 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55adbc237190 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55adbc237100 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc2372d8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55adbc237248 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55adbc2373d0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc241950 prev 0x55adbc217a60 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x55adbc241a88 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x55adbc241b18 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x55adbc241bc0 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x55adbc241c60 <col:20>
| `-OptimizeNoneAttr 0x55adbc241cb8 <col:30>
|-CXXMethodDecl 0x55adbc241d08 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x55adbc241da8 <col:20>
| `-OptimizeNoneAttr 0x55adbc241e00 <col:30>
|-CXXMethodDecl 0x55adbc241e50 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55adbc241f18 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55adbc241fe0 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55adbc2420f8 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x55adbc2421c0 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x55adbc242260 <col:20>
| `-OptimizeNoneAttr 0x55adbc2422b8 <col:30>
|-CXXMethodDecl 0x55adbc242328 <line:787:5, col:62> col:50 used ip_header 'click_ip *() const'
| |-NoInlineAttr 0x55adbc2423c8 <col:20>
| `-OptimizeNoneAttr 0x55adbc242420 <col:30>
|-CXXMethodDecl 0x55adbc2424c8 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x55adbc242568 <col:20>
| `-OptimizeNoneAttr 0x55adbc2425c0 <col:30>
|-CXXMethodDecl 0x55adbc242610 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55adbc242728 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x55adbc242848 <line:791:5, col:36> col:23 used tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x55adbc242968 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x55adbc242a30 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x55adbc242ad0 <col:62> "" ""
|-AccessSpecDecl 0x55adbc242b40 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x55adbc242ba0 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x55adbc243798 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x55adbc2439c0 <col:29, col:31>
|-CXXMethodDecl 0x55adbc242c68 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x55adbc242da8 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x55adbc242d18 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x55adbc242ea0 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x55adbc2439d0 <col:23, col:25>
|-CXXMethodDecl 0x55adbc243058 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x55adbc242f90 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x55adbc243328 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55adbc243110 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55adbc243188 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55adbc243200 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc2434b8 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x55adbc2433f0 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x55adbc2435b0 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x55adbc243618 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x55adbc243618
  `-ParmVarDecl 0x55adbc243728 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbbf821c8 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbbf822e8 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x55adbbf823b0 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x55adbc05c1e0 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55adbc05f038 <col:8>
|-CXXConstructorDecl 0x55adbc05c2e8 <col:8> col:8 implicit used constexpr in_addr 'void (const in_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc05c3f8 <col:8> col:8 used 'const in_addr &'
| |-CXXCtorInitializer Field 0x55adbbf823b0 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x55adbc3e8110 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55adbc3e80e0 <col:8> 'const in_addr_t':'const unsigned int' lvalue .s_addr 0x55adbbf823b0
| |     `-DeclRefExpr 0x55adbc3e80c0 <col:8> 'const in_addr' lvalue ParmVar 0x55adbc05c3f8 '' 'const in_addr &'
| `-CompoundStmt 0x55adbc3e8158 <col:8>
|-CXXConstructorDecl 0x55adbc05c498 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc05c5a8 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x55adbbf823b0 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x55adbc05f250 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55adbc05f220 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55adbbf823b0
| |     `-CXXStaticCastExpr 0x55adbc05f1f0 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc05f1c0 <col:8> 'in_addr' lvalue ParmVar 0x55adbc05c5a8 '' 'in_addr &&'
| `-CompoundStmt 0x55adbc05f298 <col:8>
|-CXXDestructorDecl 0x55adbc05f4d0 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55adbc5e8d78 <col:8> col:8 implicit constexpr operator= 'in_addr &(const in_addr &)' inline default trivial noexcept-unevaluated 0x55adbc5e8d78
| `-ParmVarDecl 0x55adbc5e8e88 <col:8> col:8 'const in_addr &'
`-CXXMethodDecl 0x55adbc5e8ef8 <col:8> col:8 implicit used constexpr operator= 'in_addr &(in_addr &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55adbc5e9008 <col:8> col:8 used 'in_addr &&'
  `-CompoundStmt 0x55adbc5e92c0 <col:8>
    |-BinaryOperator 0x55adbc5e9268 <col:8> 'in_addr_t':'unsigned int' lvalue '='
    | |-MemberExpr 0x55adbc5e9220 <col:8> 'in_addr_t':'unsigned int' lvalue ->s_addr 0x55adbbf823b0
    | | `-CXXThisExpr 0x55adbc5e9210 <col:8> 'in_addr *' this
    | `-ImplicitCastExpr 0x55adbc5e9250 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x55adbc5e91e0 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55adbbf823b0
    |     `-CXXStaticCastExpr 0x55adbc5e91b0 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
    |       `-DeclRefExpr 0x55adbc5e9180 <col:8> 'in_addr' lvalue ParmVar 0x55adbc5e9008 '' 'in_addr &&'
    `-ReturnStmt 0x55adbc5e92b0 <col:8>
      `-UnaryOperator 0x55adbc5e9298 <col:8> 'in_addr' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55adbc5e9288 <col:8> 'in_addr *' this

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc050d88 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55adbc050ea8 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x55adbc050f90 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x55adbc050f70 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x55adbc050f38 <col:22> 'int' 4
|-FieldDecl 0x55adbc051038 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x55adbc051018 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x55adbc050fe0 <col:21> 'int' 4
|-FieldDecl 0x55adbc051098 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x55adbc0510f8 <line:40:5, col:14> col:14 ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x55adbc051158 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x55adbc0511b8 <line:42:5, col:14> col:14 referenced ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x55adbc051218 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x55adbc051278 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55adbc0512d8 <line:49:5, col:14> col:14 ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x55adbc051348 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x55adbc0513b8 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc357648 prev 0x55adbc217850 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 referenced struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55adbc357740 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x55adbc3577e0 <line:25:5, col:14> col:14 referenced th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55adbc357840 <line:26:5, col:14> col:14 referenced th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x55adbc3578c0 <line:27:5, col:15> col:15 th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55adbc357920 <line:28:5, col:15> col:15 th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55adbc3579c8 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x55adbc3579a8 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x55adbc357970 <col:26> 'int' 4
|-FieldDecl 0x55adbc357a70 <line:31:5, col:23> col:14 referenced th_off 'unsigned int'
| `-ConstantExpr 0x55adbc357a50 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x55adbc357a18 <col:23> 'int' 4
|-FieldDecl 0x55adbc357ad0 <line:39:5, col:13> col:13 th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x55adbc357b30 <line:48:5, col:14> col:14 th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x55adbc357b90 <line:49:5, col:14> col:14 th_sum 'uint16_t':'unsigned short'
`-FieldDecl 0x55adbc357bf0 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | struct click_udp
         0 |   uint16_t uh_sport
         2 |   uint16_t uh_dport
         4 |   uint16_t uh_ulen
         6 |   uint16_t uh_sum
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc3f7658 prev 0x55adbc217900 <../dummy_inc/clicknet/udp.h:11:1, line:16:1> line:11:8 referenced struct click_udp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55adbc3f7750 <col:1, col:8> col:8 implicit struct click_udp
|-FieldDecl 0x55adbc3f77f0 <line:12:5, col:14> col:14 referenced uh_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55adbc3f7850 <line:13:5, col:14> col:14 referenced uh_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x55adbc3f78b0 <line:14:5, col:14> col:14 uh_ulen 'uint16_t':'unsigned short'
`-FieldDecl 0x55adbc3f7910 <line:15:5, col:14> col:14 uh_sum 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct NatInternKey
         0 |   struct in_addr addr
         0 |     in_addr_t s_addr
         4 |   uint16_t port
         6 |   uint8_t protocol
           | [sizeof=7, dsize=7, align=1,
           |  nvsize=7, nvalign=1]

*** Dumping AST Record Layout
         0 | struct NatExternKey
         0 |   uint16_t port
         2 |   uint8_t protocol
           | [sizeof=3, dsize=3, align=1,
           |  nvsize=3, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc3e4f68 <../elements/tcpudp/myrewritermod.hh:236:1, line:248:1> line:236:8 referenced struct NatInternKey definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-PackedAttr 0x55adbc3e78f0 <line:248:18>
|-CXXRecordDecl 0x55adbc3e74a0 <line:236:1, col:8> col:8 implicit referenced struct NatInternKey
|-FieldDecl 0x55adbc3e7550 <line:237:5, col:20> col:20 referenced addr 'struct in_addr':'in_addr'
|-FieldDecl 0x55adbc3e75b0 <line:238:5, col:14> col:14 referenced port 'uint16_t':'unsigned short'
|-FieldDecl 0x55adbc3e7610 <line:239:5, col:13> col:13 referenced protocol 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55adbc3e76a8 <line:241:5, line:243:5> line:241:23 hashcode 'hashcode_t () const' inline
| `-CompoundStmt 0x55adbc3e7f28 <col:40, line:243:5>
|   `-ReturnStmt 0x55adbc3e7f18 <line:242:9, col:80>
|     `-BinaryOperator 0x55adbc3e7ef8 <col:16, col:80> 'unsigned long' '^'
|       |-BinaryOperator 0x55adbc3e7d40 <col:16, col:57> 'unsigned long' '^'
|       | |-CallExpr 0x55adbc3e7b80 <col:16, col:38> 'hashcode_t':'unsigned long'
|       | | |-ImplicitCastExpr 0x55adbc3e7b68 <col:16, col:18> 'hashcode_t (*)(const unsigned int &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55adbc3e7ad8 <col:16, col:18> 'hashcode_t (const unsigned int &)' lvalue Function 0x55adbc284f68 'hashcode' 'hashcode_t (const unsigned int &)' (FunctionTemplate 0x55adbc281288 'hashcode')
|       | | `-MemberExpr 0x55adbc3e7a38 <col:27, col:32> 'const in_addr_t':'const unsigned int' lvalue .s_addr 0x55adbbf823b0
|       | |   `-MemberExpr 0x55adbc3e7a08 <col:27> 'const struct in_addr':'const in_addr' lvalue ->addr 0x55adbc3e7550
|       | |     `-CXXThisExpr 0x55adbc3e79f8 <col:27> 'const NatInternKey *' implicit this
|       | `-CallExpr 0x55adbc3e7d18 <col:42, col:57> 'hashcode_t':'unsigned long'
|       |   |-ImplicitCastExpr 0x55adbc3e7d00 <col:42, col:44> 'hashcode_t (*)(const unsigned short &)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55adbc3e7cc8 <col:42, col:44> 'hashcode_t (const unsigned short &)' lvalue Function 0x55adbc282aa8 'hashcode' 'hashcode_t (const unsigned short &)' (FunctionTemplate 0x55adbc281288 'hashcode')
|       |   `-MemberExpr 0x55adbc3e7c28 <col:53> 'const uint16_t':'const unsigned short' lvalue ->port 0x55adbc3e75b0
|       |     `-CXXThisExpr 0x55adbc3e7c18 <col:53> 'const NatInternKey *' implicit this
|       `-CallExpr 0x55adbc3e7ed0 <col:61, col:80> 'hashcode_t':'unsigned long'
|         |-ImplicitCastExpr 0x55adbc3e7eb8 <col:61, col:63> 'hashcode_t (*)(const unsigned char &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55adbc3e7e80 <col:61, col:63> 'hashcode_t (const unsigned char &)' lvalue Function 0x55adbc281fe8 'hashcode' 'hashcode_t (const unsigned char &)' (FunctionTemplate 0x55adbc281288 'hashcode')
|         `-MemberExpr 0x55adbc3e7de0 <col:72> 'const uint8_t':'const unsigned char' lvalue ->protocol 0x55adbc3e7610
|           `-CXXThisExpr 0x55adbc3e7dd0 <col:72> 'const NatInternKey *' implicit this
|-CXXMethodDecl 0x55adbc3e7848 <line:245:5, line:247:5> line:245:17 operator== 'bool (const NatInternKey &) const' inline
| |-ParmVarDecl 0x55adbc3e7788 <col:28, col:48> col:48 used o 'const NatInternKey &'
| `-CompoundStmt 0x55adbc3e8640 <col:57, line:247:5>
|   `-ReturnStmt 0x55adbc3e8630 <line:246:9, col:79>
|     `-ExprWithCleanups 0x55adbc3e8618 <col:16, col:79> 'bool'
|       `-BinaryOperator 0x55adbc3e85f8 <col:16, col:79> 'bool' '&&'
|         |-BinaryOperator 0x55adbc3e84a8 <col:16, col:51> 'bool' '&&'
|         | |-ParenExpr 0x55adbc3e8358 <col:16, col:31> 'bool'
|         | | `-CXXOperatorCallExpr 0x55adbc3e8320 <col:17, col:27> 'bool'
|         | |   |-ImplicitCastExpr 0x55adbc3e8308 <col:22> 'bool (*)(IPAddress, IPAddress)' <FunctionToPointerDecay>
|         | |   | `-DeclRefExpr 0x55adbc3e82e8 <col:22> 'bool (IPAddress, IPAddress)' lvalue Function 0x55adbc05d648 'operator==' 'bool (IPAddress, IPAddress)'
|         | |   |-CXXConstructExpr 0x55adbc3e81f8 <col:17> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         | |   | `-MaterializeTemporaryExpr 0x55adbc3e81e0 <col:17> 'IPAddress' xvalue
|         | |   |   `-ImplicitCastExpr 0x55adbc3e81c8 <col:17> 'IPAddress' <ConstructorConversion>
|         | |   |     `-CXXConstructExpr 0x55adbc3e8198 <col:17> 'IPAddress' 'void (struct in_addr)'
|         | |   |       `-CXXConstructExpr 0x55adbc3e8168 <col:17> 'struct in_addr':'in_addr' 'void (const in_addr &) noexcept'
|         | |   |         `-MemberExpr 0x55adbc3e7f50 <col:17> 'const struct in_addr':'const in_addr' lvalue ->addr 0x55adbc3e7550
|         | |   |           `-CXXThisExpr 0x55adbc3e7f40 <col:17> 'const NatInternKey *' implicit this
|         | |   `-CXXConstructExpr 0x55adbc3e82b8 <col:25, col:27> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         | |     `-MaterializeTemporaryExpr 0x55adbc3e82a0 <col:25, col:27> 'IPAddress' xvalue
|         | |       `-ImplicitCastExpr 0x55adbc3e8288 <col:25, col:27> 'IPAddress' <ConstructorConversion>
|         | |         `-CXXConstructExpr 0x55adbc3e8258 <col:25, col:27> 'IPAddress' 'void (struct in_addr)'
|         | |           `-CXXConstructExpr 0x55adbc3e8228 <col:25, col:27> 'struct in_addr':'in_addr' 'void (const in_addr &) noexcept'
|         | |             `-MemberExpr 0x55adbc3e7fa0 <col:25, col:27> 'const struct in_addr':'const in_addr' lvalue .addr 0x55adbc3e7550
|         | |               `-DeclRefExpr 0x55adbc3e7f80 <col:25> 'const NatInternKey' lvalue ParmVar 0x55adbc3e7788 'o' 'const NatInternKey &'
|         | `-ParenExpr 0x55adbc3e8488 <col:36, col:51> 'bool'
|         |   `-BinaryOperator 0x55adbc3e8468 <col:37, col:47> 'bool' '=='
|         |     |-ImplicitCastExpr 0x55adbc3e8438 <col:37> 'int' <IntegralCast>
|         |     | `-ImplicitCastExpr 0x55adbc3e8408 <col:37> 'uint16_t':'unsigned short' <LValueToRValue>
|         |     |   `-MemberExpr 0x55adbc3e8388 <col:37> 'const uint16_t':'const unsigned short' lvalue ->port 0x55adbc3e75b0
|         |     |     `-CXXThisExpr 0x55adbc3e8378 <col:37> 'const NatInternKey *' implicit this
|         |     `-ImplicitCastExpr 0x55adbc3e8450 <col:45, col:47> 'int' <IntegralCast>
|         |       `-ImplicitCastExpr 0x55adbc3e8420 <col:45, col:47> 'uint16_t':'unsigned short' <LValueToRValue>
|         |         `-MemberExpr 0x55adbc3e83d8 <col:45, col:47> 'const uint16_t':'const unsigned short' lvalue .port 0x55adbc3e75b0
|         |           `-DeclRefExpr 0x55adbc3e83b8 <col:45> 'const NatInternKey' lvalue ParmVar 0x55adbc3e7788 'o' 'const NatInternKey &'
|         `-ParenExpr 0x55adbc3e85d8 <col:56, col:79> 'bool'
|           `-BinaryOperator 0x55adbc3e85b8 <col:57, col:71> 'bool' '=='
|             |-ImplicitCastExpr 0x55adbc3e8588 <col:57> 'int' <IntegralCast>
|             | `-ImplicitCastExpr 0x55adbc3e8558 <col:57> 'uint8_t':'unsigned char' <LValueToRValue>
|             |   `-MemberExpr 0x55adbc3e84d8 <col:57> 'const uint8_t':'const unsigned char' lvalue ->protocol 0x55adbc3e7610
|             |     `-CXXThisExpr 0x55adbc3e84c8 <col:57> 'const NatInternKey *' implicit this
|             `-ImplicitCastExpr 0x55adbc3e85a0 <col:69, col:71> 'int' <IntegralCast>
|               `-ImplicitCastExpr 0x55adbc3e8570 <col:69, col:71> 'uint8_t':'unsigned char' <LValueToRValue>
|                 `-MemberExpr 0x55adbc3e8528 <col:69, col:71> 'const uint8_t':'const unsigned char' lvalue .protocol 0x55adbc3e7610
|                   `-DeclRefExpr 0x55adbc3e8508 <col:69> 'const NatInternKey' lvalue ParmVar 0x55adbc3e7788 'o' 'const NatInternKey &'
|-CXXConstructorDecl 0x55adbc60f780 <line:236:8> col:8 implicit used NatInternKey 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55adbc3e7550 'addr' 'struct in_addr':'in_addr'
| | `-CXXConstructExpr 0x55adbc60fb98 <col:8> 'struct in_addr':'in_addr' 'void () noexcept'
| `-CompoundStmt 0x55adbc60fbf0 <col:8>
|-CXXConstructorDecl 0x55adbc60f860 <col:8> col:8 implicit constexpr NatInternKey 'void (const NatInternKey &)' inline default trivial noexcept-unevaluated 0x55adbc60f860
| `-ParmVarDecl 0x55adbc60f978 <col:8> col:8 'const NatInternKey &'
`-CXXConstructorDecl 0x55adbc60fa18 <col:8> col:8 implicit constexpr NatInternKey 'void (NatInternKey &&)' inline default trivial noexcept-unevaluated 0x55adbc60fa18
  `-ParmVarDecl 0x55adbc60fb28 <col:8> col:8 'NatInternKey &&'

Layout: <CGRecordLayout
  LLVMType:%struct.NatInternKey = type <{ %struct.in_addr, i16, i8 }>
  NonVirtualBaseLLVMType:%struct.NatInternKey = type <{ %struct.in_addr, i16, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc3e4300 <../elements/tcpudp/myrewritermod.hh:223:1, line:234:1> line:223:8 referenced struct NatExternKey definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-PackedAttr 0x55adbc3e4800 <line:234:18>
|-CXXRecordDecl 0x55adbc3e4418 <line:223:1, col:8> col:8 implicit referenced struct NatExternKey
|-FieldDecl 0x55adbc3e44b8 <line:224:5, col:14> col:14 referenced port 'uint16_t':'unsigned short'
|-FieldDecl 0x55adbc3e4518 <line:225:5, col:13> col:13 referenced protocol 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55adbc3e45b8 <line:227:5, line:229:5> line:227:23 hashcode 'hashcode_t () const' inline
| `-CompoundStmt 0x55adbc3e4ca8 <col:40, line:229:5>
|   `-ReturnStmt 0x55adbc3e4c98 <line:228:9, col:54>
|     `-BinaryOperator 0x55adbc3e4c78 <col:16, col:54> 'unsigned long' '^'
|       |-CallExpr 0x55adbc3e4a60 <col:16, col:31> 'hashcode_t':'unsigned long'
|       | |-ImplicitCastExpr 0x55adbc3e4a48 <col:16, col:18> 'hashcode_t (*)(const unsigned short &)' <FunctionToPointerDecay>
|       | | `-DeclRefExpr 0x55adbc3e49b8 <col:16, col:18> 'hashcode_t (const unsigned short &)' lvalue Function 0x55adbc282aa8 'hashcode' 'hashcode_t (const unsigned short &)' (FunctionTemplate 0x55adbc281288 'hashcode')
|       | `-MemberExpr 0x55adbc3e4918 <col:27> 'const uint16_t':'const unsigned short' lvalue ->port 0x55adbc3e44b8
|       |   `-CXXThisExpr 0x55adbc3e4908 <col:27> 'const NatExternKey *' implicit this
|       `-CallExpr 0x55adbc3e4c50 <col:35, col:54> 'hashcode_t':'unsigned long'
|         |-ImplicitCastExpr 0x55adbc3e4c38 <col:35, col:37> 'hashcode_t (*)(const unsigned char &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55adbc3e4ba8 <col:35, col:37> 'hashcode_t (const unsigned char &)' lvalue Function 0x55adbc281fe8 'hashcode' 'hashcode_t (const unsigned char &)' (FunctionTemplate 0x55adbc281288 'hashcode')
|         `-MemberExpr 0x55adbc3e4b08 <col:46> 'const uint8_t':'const unsigned char' lvalue ->protocol 0x55adbc3e4518
|           `-CXXThisExpr 0x55adbc3e4af8 <col:46> 'const NatExternKey *' implicit this
|-CXXMethodDecl 0x55adbc3e4758 <line:231:5, line:233:5> line:231:17 operator== 'bool (const NatExternKey &) const' inline
| |-ParmVarDecl 0x55adbc3e4698 <col:28, col:48> col:48 used o 'const NatExternKey &'
| `-CompoundStmt 0x55adbc3e4f50 <col:57, line:233:5>
|   `-ReturnStmt 0x55adbc3e4f40 <line:232:9, col:59>
|     `-BinaryOperator 0x55adbc3e4f20 <col:16, col:59> 'bool' '&&'
|       |-ParenExpr 0x55adbc3e4dd0 <col:16, col:31> 'bool'
|       | `-BinaryOperator 0x55adbc3e4db0 <col:17, col:27> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55adbc3e4d80 <col:17> 'int' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x55adbc3e4d50 <col:17> 'uint16_t':'unsigned short' <LValueToRValue>
|       |   |   `-MemberExpr 0x55adbc3e4cd0 <col:17> 'const uint16_t':'const unsigned short' lvalue ->port 0x55adbc3e44b8
|       |   |     `-CXXThisExpr 0x55adbc3e4cc0 <col:17> 'const NatExternKey *' implicit this
|       |   `-ImplicitCastExpr 0x55adbc3e4d98 <col:25, col:27> 'int' <IntegralCast>
|       |     `-ImplicitCastExpr 0x55adbc3e4d68 <col:25, col:27> 'uint16_t':'unsigned short' <LValueToRValue>
|       |       `-MemberExpr 0x55adbc3e4d20 <col:25, col:27> 'const uint16_t':'const unsigned short' lvalue .port 0x55adbc3e44b8
|       |         `-DeclRefExpr 0x55adbc3e4d00 <col:25> 'const NatExternKey' lvalue ParmVar 0x55adbc3e4698 'o' 'const NatExternKey &'
|       `-ParenExpr 0x55adbc3e4f00 <col:36, col:59> 'bool'
|         `-BinaryOperator 0x55adbc3e4ee0 <col:37, col:51> 'bool' '=='
|           |-ImplicitCastExpr 0x55adbc3e4eb0 <col:37> 'int' <IntegralCast>
|           | `-ImplicitCastExpr 0x55adbc3e4e80 <col:37> 'uint8_t':'unsigned char' <LValueToRValue>
|           |   `-MemberExpr 0x55adbc3e4e00 <col:37> 'const uint8_t':'const unsigned char' lvalue ->protocol 0x55adbc3e4518
|           |     `-CXXThisExpr 0x55adbc3e4df0 <col:37> 'const NatExternKey *' implicit this
|           `-ImplicitCastExpr 0x55adbc3e4ec8 <col:49, col:51> 'int' <IntegralCast>
|             `-ImplicitCastExpr 0x55adbc3e4e98 <col:49, col:51> 'uint8_t':'unsigned char' <LValueToRValue>
|               `-MemberExpr 0x55adbc3e4e50 <col:49, col:51> 'const uint8_t':'const unsigned char' lvalue .protocol 0x55adbc3e4518
|                 `-DeclRefExpr 0x55adbc3e4e30 <col:49> 'const NatExternKey' lvalue ParmVar 0x55adbc3e4698 'o' 'const NatExternKey &'
|-CXXConstructorDecl 0x55adbc610150 <line:223:8> col:8 implicit used NatExternKey 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55adbc610568 <col:8>
|-CXXConstructorDecl 0x55adbc610230 <col:8> col:8 implicit constexpr NatExternKey 'void (const NatExternKey &)' inline default trivial noexcept-unevaluated 0x55adbc610230
| `-ParmVarDecl 0x55adbc610348 <col:8> col:8 'const NatExternKey &'
`-CXXConstructorDecl 0x55adbc6103e8 <col:8> col:8 implicit constexpr NatExternKey 'void (NatExternKey &&)' inline default trivial noexcept-unevaluated 0x55adbc6103e8
  `-ParmVarDecl 0x55adbc6104f8 <col:8> col:8 'NatExternKey &&'

Layout: <CGRecordLayout
  LLVMType:%struct.NatExternKey = type <{ i16, i8 }>
  NonVirtualBaseLLVMType:%struct.NatExternKey = type <{ i16, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc4b2910 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc4b2a28 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x55adbc4b2ad0 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x55adbc4b2b38 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x55adbc4b2ba0 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x55adbc4b2c50 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x55adbc4b2ad0 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x55adbc4b3ad0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x55adbc4b3a88 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x55adbc4b3a50 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x55adbc4b3a38 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x55adbc4b39e0 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55adbc0482d0 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x55adbc4b2b38 'len' 'int'
| | `-IntegerLiteral 0x55adbc4b3b48 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x55adbc4b2ba0 'cap' 'int'
| | `-IntegerLiteral 0x55adbc4b3bb0 <col:20> 'int' 0
| `-CompoundStmt 0x55adbc4b3c30 <col:23, line:119:2>
|-CXXConstructorDecl 0x55adbc4b2dc8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x55adbc4b2d08 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x55adbc4b3c40 <col:37, line:121:2>
|-CXXConstructorDecl 0x55adbc4b5e58 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc4b5f68 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55adbc4b2ad0 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x55adbc4b78b0 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x55adbc4b7880 <col:12> 'unsigned char *const' lvalue .s 0x55adbc4b2ad0
| |     `-DeclRefExpr 0x55adbc4b7860 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55adbc4b5f68 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55adbc4b2b38 'len' 'int'
| | `-ImplicitCastExpr 0x55adbc4b7940 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55adbc4b7910 <col:12> 'const int' lvalue .len 0x55adbc4b2b38
| |     `-DeclRefExpr 0x55adbc4b78f0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55adbc4b5f68 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55adbc4b2ba0 'cap' 'int'
| | `-ImplicitCastExpr 0x55adbc4b79d0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55adbc4b79a0 <col:12> 'const int' lvalue .cap 0x55adbc4b2ba0
| |     `-DeclRefExpr 0x55adbc4b7980 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55adbc4b5f68 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x55adbc4b7a28 <col:12>
|-CXXConstructorDecl 0x55adbc4b6008 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55adbc4b6008
| `-ParmVarDecl 0x55adbc4b6118 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x55adbc4b7ce0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc4ae068 prev 0x55adbc3f7b28 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbc4ae160 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x55adbc4ae1f0 <col:21, col:27> col:21 public
|-TypedefDecl 0x55adbc4ae230 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55adbbce2dc0 'const char *'
|   `-QualType 0x55adbbce2311 'const char' const
|     `-BuiltinType 0x55adbbce2310 'char'
|-TypedefDecl 0x55adbc4ae2a0 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x55adbbce2f90 'char *'
|   `-BuiltinType 0x55adbbce2310 'char'
|-TypedefDecl 0x55adbc4ae3e0 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x55adbc4ae350 'int (StringAccum::*)() const'
|   |-RecordType 0x55adbbfa8b20 'StringAccum'
|   | `-CXXRecord 0x55adbc4ae068 'StringAccum'
|   `-ParenType 0x55adbc01f8d0 'int () const' sugar
|     `-FunctionProtoType 0x55adbc002000 'int () const' const cdecl
|       `-BuiltinType 0x55adbbce2370 'int'
|-CXXConstructorDecl 0x55adbc4ae4a0 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x55adbc4ae5f0 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x55adbc4ae560 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x55adbc4ae740 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x55adbc4ae6b0 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x55adbc4ae8e8 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x55adbc4ae828 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x55adbc4aea98 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x55adbc4ae9d8 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x55adbc4aeb90 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x55adbc4aed48 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x55adbc4aec80 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x55adbc4aeec8 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x55adbc4aee00 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x55adbc4aefc0 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55adbc4af088 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x55adbc4af1a0 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55adbc4af268 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x55adbc4af330 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x55adbc4af498 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55adbc4af568 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55adbc4af628 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55adbc4af738 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55adbc4af848 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55adbc4af908 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55adbc4af9c8 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55adbc4afb10 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55adbc4afa80 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55adbc4afca0 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x55adbc4afbd0 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55adbc4afd68 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55adbc4afe60 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x55adbc4aff20 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55adbc4affe8 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x55adbc4b00a8 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55adbc4b0168 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55adbc4b0228 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55adbc4b0378 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x55adbc4b02e0 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x55adbc4b04c8 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x55adbc4b0438 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x55adbc4b0620 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x55adbc4b0588 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x55adbc4b0770 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x55adbc4b06e0 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x55adbc4b0990 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x55adbc4b0830 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x55adbc4b08b0 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x55adbc4b3908 <col:53> 'int' 0
|-CXXMethodDecl 0x55adbc4b0ae8 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x55adbc4b0a58 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x55adbc4b3928 <col:34> 'int' 1
|-CXXMethodDecl 0x55adbc4b0c30 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x55adbc4b0ba0 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55adbc4b0d80 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x55adbc4b0cf0 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x55adbc4b0ed0 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x55adbc4b0e40 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x55adbc4b1020 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55adbc4b0f90 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55adbc4b11f8 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55adbc4b10e0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55adbc4b1160 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55adbc4b13d8 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55adbc4b12c0 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x55adbc4b1340 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x55adbc4b15b8 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55adbc4b14a0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55adbc4b1520 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55adbc4b1798 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55adbc4b1680 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x55adbc4b1700 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x55adbc4b1978 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55adbc4b1860 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55adbc4b18e0 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55adbc4b1cd8 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x55adbc4b1ac0 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55adbc4b1b40 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55adbc4b3948 <col:56> 'int' 10
| `-ParmVarDecl 0x55adbc4b1bb8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55adbc4b3968 <col:77> 'bool' true
|-CXXMethodDecl 0x55adbc4b2038 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x55adbc4b1e20 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55adbc4b1ea0 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x55adbc4b3978 <col:57> 'int' 10
| `-ParmVarDecl 0x55adbc4b1f18 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55adbc4b3998 <col:78> 'bool' true
|-CXXMethodDecl 0x55adbc4b2260 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x55adbc4b2108 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x55adbc4b2188 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x55adbc4b2358 <line:98:5, col:24> col:12 used take_string 'String ()'
|-CXXMethodDecl 0x55adbc4b24c8 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x55adbc4b2408 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x55adbc4b2618 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x55adbc4b2588 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x55adbc4b26c0 <col:51> "" ""
|-AccessSpecDecl 0x55adbc4b2730 <line:106:3, col:10> col:3 private
|-EnumDecl 0x55adbc4b2758 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x55adbc4b28a8 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x55adbc4b28f8 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc4b2888 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x55adbc4b2858 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x55adbc029638 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x55adbc4b2910 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55adbc4b2a28 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x55adbc4b2ad0 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x55adbc4b2b38 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x55adbc4b2ba0 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x55adbc4b2c50 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x55adbc4b2ad0 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x55adbc4b3ad0 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x55adbc4b3a88 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x55adbc4b3a50 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x55adbc4b3a38 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x55adbc4b39e0 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55adbc0482d0 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x55adbc4b2b38 'len' 'int'
| | | `-IntegerLiteral 0x55adbc4b3b48 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x55adbc4b2ba0 'cap' 'int'
| | | `-IntegerLiteral 0x55adbc4b3bb0 <col:20> 'int' 0
| | `-CompoundStmt 0x55adbc4b3c30 <col:23, line:119:2>
| |-CXXConstructorDecl 0x55adbc4b2dc8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x55adbc4b2d08 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x55adbc4b3c40 <col:37, line:121:2>
| |-CXXConstructorDecl 0x55adbc4b5e58 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55adbc4b5f68 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55adbc4b2ad0 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x55adbc4b78b0 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x55adbc4b7880 <col:12> 'unsigned char *const' lvalue .s 0x55adbc4b2ad0
| | |     `-DeclRefExpr 0x55adbc4b7860 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55adbc4b5f68 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55adbc4b2b38 'len' 'int'
| | | `-ImplicitCastExpr 0x55adbc4b7940 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55adbc4b7910 <col:12> 'const int' lvalue .len 0x55adbc4b2b38
| | |     `-DeclRefExpr 0x55adbc4b78f0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55adbc4b5f68 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55adbc4b2ba0 'cap' 'int'
| | | `-ImplicitCastExpr 0x55adbc4b79d0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55adbc4b79a0 <col:12> 'const int' lvalue .cap 0x55adbc4b2ba0
| | |     `-DeclRefExpr 0x55adbc4b7980 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55adbc4b5f68 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x55adbc4b7a28 <col:12>
| |-CXXConstructorDecl 0x55adbc4b6008 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55adbc4b6008
| | `-ParmVarDecl 0x55adbc4b6118 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x55adbc4b7ce0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x55adbc4b2ea0 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x55adbc4b2fa0 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x55adbc4b2f08 <col:16> col:19 'int'
|-CXXMethodDecl 0x55adbc4b3180 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x55adbc4b3060 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x55adbc4b30e0 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x55adbc4b3360 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x55adbc4b3248 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55adbc4b32c8 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55adbc4b34b8 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x55adbc4b3428 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x55adbc4b3608 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x55adbc4b3578 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x55adbc4b38c8 <line:132:5, col:70> col:25
  `-FunctionDecl 0x55adbc4b3808 parent 0x55adbbce2278 <col:5, col:70> col:25 operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x55adbc4b36c0 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x55adbc4b3738 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc336120 <../dummy_inc/click/hashcontainer.hh:14:1, col:69> line:302:7 class HashContainer_const_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55adbc351b68 prev 0x55adbc336120 <col:1, col:7> col:7 implicit class HashContainer_const_iterator
|-AccessSpecDecl 0x55adbc351bf8 <col:38, col:44> col:38 public
|-TypedefDecl 0x55adbc351dc0 <line:304:5, col:53> col:53 size_type 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type':'unsigned long'
| `-ElaboratedType 0x55adbc351d70 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type' sugar
|   `-TypedefType 0x55adbc335c90 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type' sugar
|     |-Typedef 0x55adbc335450 'size_type'
|     `-TypedefType 0x55adbbd8ff90 'size_t' sugar
|       |-Typedef 0x55adbbd52b20 'size_t'
|       `-BuiltinType 0x55adbbce2430 'unsigned long'
|-TypedefDecl 0x55adbc351f60 <line:305:5, col:61> col:61 referenced bucket_count_type 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| `-ElaboratedType 0x55adbc351f10 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type' sugar
|   `-TypedefType 0x55adbc335e30 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type' sugar
|     |-Typedef 0x55adbc3354a8 'bucket_count_type'
|     `-TypedefType 0x55adbbe402a0 'uint32_t' sugar
|       |-Typedef 0x55adbbd4b408 'uint32_t'
|       `-TypedefType 0x55adbbd24440 '__uint32_t' sugar
|         |-Typedef 0x55adbbd24038 '__uint32_t'
|         `-BuiltinType 0x55adbbce2410 'unsigned int'
|-CXXConstructorDecl 0x55adbc351ff0 <line:308:5, line:309:5> line:308:5 HashContainer_const_iterator 'void ()'
|-CXXMethodDecl 0x55adbc352158 <line:312:5, line:314:5> line:312:8 used get 'IPRewriterEntry *() const'
|-CXXMethodDecl 0x55adbc352228 <line:317:5, line:319:5> line:317:8 used operator-> 'IPRewriterEntry *() const'
|-CXXMethodDecl 0x55adbc352388 <line:323:5, line:325:5> line:323:8 operator* 'IPRewriterEntry &() const'
|-CXXMethodDecl 0x55adbc352438 <line:328:5, line:330:5> line:328:17 used live 'bool () const' inline
|-TypedefDecl 0x55adbc3525c8 <line:332:5, col:73> col:48 unspecified_bool_type 'IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const'
| `-MemberPointerType 0x55adbc352560 'IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const'
|   |-RecordType 0x55adbc336220 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|   | `-ClassTemplateSpecialization 0x55adbc336120 'HashContainer_const_iterator'
|   `-ParenType 0x55adbc3524f0 'IPRewriterEntry *() const' sugar
|     `-FunctionProtoType 0x55adbc352110 'IPRewriterEntry *() const' const cdecl
|       `-PointerType 0x55adbc3520b0 'IPRewriterEntry *'
|         `-SubstTemplateTypeParmType 0x55adbc351c20 'IPRewriterEntry' sugar
|           |-TemplateTypeParmType 0x55adbc2a6270 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55adbc2a6218 'T'
|           `-RecordType 0x55adbc2ffc80 'IPRewriterEntry'
|             `-CXXRecord 0x55adbc3034f0 'IPRewriterEntry'
|-CXXConversionDecl 0x55adbc3526e0 <line:334:5, line:336:5> line:334:12 operator IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55adbc352938 <line:339:5, line:341:5> line:339:32 hashcontainer 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *() const'
|-CXXMethodDecl 0x55adbc352a58 <line:344:5, line:346:5> line:344:23 bucket 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type () const'
|-CXXMethodDecl 0x55adbc352b08 <line:349:5, line:361:5> line:349:10 used operator++ 'void ()'
|-CXXMethodDecl 0x55adbc352c48 <line:364:5, line:366:5> line:364:10 operator++ 'void (int)'
| `-ParmVarDecl 0x55adbc352bb8 <col:21> col:24 'int'
|-AccessSpecDecl 0x55adbc352d00 <line:368:3, col:10> col:3 private
|-FieldDecl 0x55adbc352d38 <line:370:5, col:8> col:8 referenced _element 'IPRewriterEntry *'
|-FieldDecl 0x55adbc352dd0 <line:371:5, col:9> col:9 referenced _pprev 'IPRewriterEntry **'
|-FieldDecl 0x55adbc352e30 <line:372:5, col:23> col:23 referenced _bucket 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
|-FieldDecl 0x55adbc352f78 <line:373:5, col:32> col:32 referenced _hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x55adbc3531d8 <line:375:5, line:385:5> line:375:12 HashContainer_const_iterator 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *)' inline
| `-ParmVarDecl 0x55adbc3530c8 <col:41, col:68> col:68 hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x55adbc353668 <line:387:5, line:390:5> line:387:12 HashContainer_const_iterator 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *, HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type, IPRewriterEntry **, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55adbc353398 <col:41, col:68> col:68 hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| |-ParmVarDecl 0x55adbc353410 <col:72, col:90> col:90 b 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x55adbc353490 <col:93, col:97> col:97 pprev 'IPRewriterEntry **'
| `-ParmVarDecl 0x55adbc353508 <col:104, col:107> col:107 element 'IPRewriterEntry *'
|-FriendDecl 0x55adbc353848 <line:392:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55adbc353998 <line:393:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXDestructorDecl 0x55adbc354a90 <line:302:7> col:7 implicit ~HashContainer_const_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55adbc354bc8 <col:7> col:7 implicit constexpr HashContainer_const_iterator 'void (const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55adbc354bc8
| `-ParmVarDecl 0x55adbc354cd8 <col:7> col:7 'const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXConstructorDecl 0x55adbc354d78 <col:7> col:7 implicit used constexpr HashContainer_const_iterator 'void (HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc354e88 <col:7> col:7 used 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55adbc352d38 '_element' 'IPRewriterEntry *'
| | `-ImplicitCastExpr 0x55adbc355428 <col:7> 'IPRewriterEntry *' <LValueToRValue>
| |   `-MemberExpr 0x55adbc3553e0 <col:7> 'IPRewriterEntry *' xvalue ._element 0x55adbc352d38
| |     `-CXXStaticCastExpr 0x55adbc3553b0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc355380 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55adbc354e88 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55adbc352dd0 '_pprev' 'IPRewriterEntry **'
| | `-ImplicitCastExpr 0x55adbc355510 <col:7> 'IPRewriterEntry **' <LValueToRValue>
| |   `-MemberExpr 0x55adbc3554c8 <col:7> 'IPRewriterEntry **' xvalue ._pprev 0x55adbc352dd0
| |     `-CXXStaticCastExpr 0x55adbc355498 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc355468 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55adbc354e88 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55adbc352e30 '_bucket' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| | `-ImplicitCastExpr 0x55adbc3555f8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55adbc3555b0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x55adbc352e30
| |     `-CXXStaticCastExpr 0x55adbc355580 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc355550 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55adbc354e88 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55adbc352f78 '_hc' 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| | `-ImplicitCastExpr 0x55adbc3556e0 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' <LValueToRValue>
| |   `-MemberExpr 0x55adbc355698 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' xvalue ._hc 0x55adbc352f78
| |     `-CXXStaticCastExpr 0x55adbc355668 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc355638 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55adbc354e88 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| `-CompoundStmt 0x55adbc355740 <col:7>
|-CXXMethodDecl 0x55adbc356188 <col:7> col:7 implicit operator= 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55adbc356188
| `-ParmVarDecl 0x55adbc356298 <col:7> col:7 'const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x55adbc356308 <col:7> col:7 implicit used operator= 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55adbc356418 <col:7> col:7 used 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
  `-CompoundStmt 0x55adbc357110 <col:7>
    |-BinaryOperator 0x55adbc356da0 <col:7> 'IPRewriterEntry *' lvalue '='
    | |-MemberExpr 0x55adbc356d58 <col:7> 'IPRewriterEntry *' lvalue ->_element 0x55adbc352d38
    | | `-CXXThisExpr 0x55adbc356d48 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55adbc356d88 <col:7> 'IPRewriterEntry *' <LValueToRValue>
    |   `-MemberExpr 0x55adbc356d18 <col:7> 'IPRewriterEntry *' xvalue ._element 0x55adbc352d38
    |     `-CXXStaticCastExpr 0x55adbc356ce8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55adbc356cb8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55adbc356418 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x55adbc356ea8 <col:7> 'IPRewriterEntry **' lvalue '='
    | |-MemberExpr 0x55adbc356e60 <col:7> 'IPRewriterEntry **' lvalue ->_pprev 0x55adbc352dd0
    | | `-CXXThisExpr 0x55adbc356e50 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55adbc356e90 <col:7> 'IPRewriterEntry **' <LValueToRValue>
    |   `-MemberExpr 0x55adbc356e20 <col:7> 'IPRewriterEntry **' xvalue ._pprev 0x55adbc352dd0
    |     `-CXXStaticCastExpr 0x55adbc356df0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55adbc356dc0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55adbc356418 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x55adbc356fb0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' lvalue '='
    | |-MemberExpr 0x55adbc356f68 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' lvalue ->_bucket 0x55adbc352e30
    | | `-CXXThisExpr 0x55adbc356f58 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55adbc356f98 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x55adbc356f28 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x55adbc352e30
    |     `-CXXStaticCastExpr 0x55adbc356ef8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55adbc356ec8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55adbc356418 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x55adbc3570b8 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' lvalue '='
    | |-MemberExpr 0x55adbc357070 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' lvalue ->_hc 0x55adbc352f78
    | | `-CXXThisExpr 0x55adbc357060 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55adbc3570a0 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' <LValueToRValue>
    |   `-MemberExpr 0x55adbc357030 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' xvalue ._hc 0x55adbc352f78
    |     `-CXXStaticCastExpr 0x55adbc357000 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55adbc356fd0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55adbc356418 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    `-ReturnStmt 0x55adbc357100 <col:7>
      `-UnaryOperator 0x55adbc3570e8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55adbc3570d8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_const_iterator = type { %class.IPRewriterEntry*, %class.IPRewriterEntry**, i32, %class.HashContainer* }
  NonVirtualBaseLLVMType:%class.HashContainer_const_iterator = type { %class.IPRewriterEntry*, %class.IPRewriterEntry**, i32, %class.HashContainer* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc336358 <../dummy_inc/click/hashcontainer.hh:15:1, col:69> line:400:7 class HashContainer_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55adbc353a20 prev 0x55adbc336358 <col:1, col:7> col:7 implicit class HashContainer_iterator
|-AccessSpecDecl 0x55adbc353ab0 <col:76, col:82> col:76 public
|-TypedefDecl 0x55adbc353ba0 <line:402:5, col:48> col:48 inherited 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55adbc353b00 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55adbc336220 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55adbc336120 'HashContainer_const_iterator'
|-CXXConstructorDecl 0x55adbc353c30 <line:405:5, line:406:5> line:405:5 HashContainer_iterator 'void ()'
|-CXXMethodDecl 0x55adbc353ce8 <line:414:5, line:416:5> line:414:10 can_insert 'bool () const'
|-CXXMethodDecl 0x55adbc353f08 <line:419:5, line:421:5> line:419:26 hashcontainer 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *() const'
|-AccessSpecDecl 0x55adbc353fb8 <line:423:3, col:10> col:3 private
|-CXXConstructorDecl 0x55adbc3541e8 <line:425:5, line:427:5> line:425:12 HashContainer_iterator 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *)' inline
| `-ParmVarDecl 0x55adbc3540d8 <col:35, col:56> col:56 hc 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x55adbc354778 <line:429:5, line:431:5> line:429:12 HashContainer_iterator 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *, typename inherited::bucket_count_type, IPRewriterEntry **, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55adbc3543a8 <col:35, col:56> col:56 hc 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| |-ParmVarDecl 0x55adbc3544c0 <col:60, col:98> col:98 b 'typename inherited::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x55adbc3545a0 <col:101, col:105> col:105 pprev 'IPRewriterEntry **'
| `-ParmVarDecl 0x55adbc354618 <col:112, col:115> col:115 element 'IPRewriterEntry *'
|-FriendDecl 0x55adbc354958 <line:433:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXDestructorDecl 0x55adbc3549b0 <line:400:7> col:7 implicit referenced ~HashContainer_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55adbc354ef8 <col:7> col:7 implicit constexpr HashContainer_iterator 'void (const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55adbc354ef8
| `-ParmVarDecl 0x55adbc355008 <col:7> col:7 'const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXConstructorDecl 0x55adbc3550a8 <col:7> col:7 implicit used constexpr HashContainer_iterator 'void (HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55adbc3551b8 <col:7> col:7 used 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| | `-CXXConstructExpr 0x55adbc355750 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' 'void (HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept'
| |   `-ImplicitCastExpr 0x55adbc355360 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
| |     `-CXXStaticCastExpr 0x55adbc355330 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55adbc355300 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55adbc3551b8 '' 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| `-CompoundStmt 0x55adbc355818 <col:7>
|-CXXMethodDecl 0x55adbc355fd8 <col:7> col:7 implicit operator= 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55adbc355fd8
| `-ParmVarDecl 0x55adbc3560e8 <col:7> col:7 'const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x55adbc356488 <col:7> col:7 implicit used operator= 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55adbc356598 <col:7> col:7 used 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
  `-CompoundStmt 0x55adbc3571a8 <col:7>
    |-CXXMemberCallExpr 0x55adbc357148 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue
    | |-MemberExpr 0x55adbc356c40 <col:7> '<bound member function type>' .operator= 0x55adbc356308
    | | `-ImplicitCastExpr 0x55adbc356b70 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
    | |   `-UnaryOperator 0x55adbc356b58 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
    | |     `-CXXThisExpr 0x55adbc356b48 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55adbc356c20 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
    |   `-DeclRefExpr 0x55adbc356c00 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55adbc356598 '' 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    `-ReturnStmt 0x55adbc357198 <col:7>
      `-UnaryOperator 0x55adbc357180 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55adbc357170 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  NonVirtualBaseLLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterPattern
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   int _sport
         8 |   class IPAddress _daddr
         8 |     uint32_t _addr
        12 |   int _dport
        16 |   uint32_t _variation_top
        20 |   uint32_t _next_variation
        24 |   _Bool _is_napt
        25 |   _Bool _sequential
        26 |   _Bool _same_first
        28 |   int _refcount
           | [sizeof=32, dsize=32, align=4,
           |  nvsize=32, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc2ffd50 <../elements/ip/iprwpattern.hh:12:1, line:68:1> line:12:7 class IPRewriterPattern definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc2ffe68 <col:1, col:7> col:7 implicit referenced class IPRewriterPattern
|-AccessSpecDecl 0x55adbc2ffef8 <col:27, col:33> col:27 public
|-CXXConstructorDecl 0x55adbc300468 <line:14:5, line:17:27> line:14:5 IPRewriterPattern 'void (const IPAddress &, int, const IPAddress &, int, bool, bool, bool, uint32_t)'
| |-ParmVarDecl 0x55adbc2fff30 <col:23, col:40> col:40 saddr 'const IPAddress &'
| |-ParmVarDecl 0x55adbc2fffb0 <col:47, col:51> col:51 sport 'int'
| |-ParmVarDecl 0x55adbc300028 <line:15:9, col:26> col:26 daddr 'const IPAddress &'
| |-ParmVarDecl 0x55adbc3000a8 <col:33, col:37> col:37 dport 'int'
| |-ParmVarDecl 0x55adbc300120 <line:16:9, col:14> col:14 is_napt 'bool'
| |-ParmVarDecl 0x55adbc300198 <col:23, col:28> col:28 sequential 'bool'
| |-ParmVarDecl 0x55adbc300210 <col:40, col:45> col:45 same_first 'bool'
| `-ParmVarDecl 0x55adbc300288 <line:17:9, col:18> col:18 variation 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc300948 <line:18:5, line:19:45> line:18:17 parse 'bool (const Vector<String> &, IPRewriterPattern **, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55adbc300660 <col:23, col:45> col:45 words 'const Vector<String> &'
| |-ParmVarDecl 0x55adbc300710 <col:52, col:72> col:72 result 'IPRewriterPattern **'
| |-ParmVarDecl 0x55adbc300788 <line:19:9, col:18> col:18 context 'Element *'
| `-ParmVarDecl 0x55adbc300800 <col:27, col:41> col:41 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc3012c8 <line:20:5, line:21:42> line:20:17 parse_ports 'bool (const Vector<String> &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55adbc300af0 <col:29, col:51> col:51 words 'const Vector<String> &'
| |-ParmVarDecl 0x55adbc300b98 <col:58, col:75> col:75 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55adbc300c10 <line:21:8, col:17> col:17 model 'Element *'
| `-ParmVarDecl 0x55adbc301180 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc3015f8 <line:22:5, line:23:42> line:22:17 parse_with_ports 'bool (const String &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55adbc301398 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55adbc301410 <col:53, col:70> col:70 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55adbc301488 <line:23:6, col:15> col:15 context 'Element *'
| `-ParmVarDecl 0x55adbc301500 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc3016d8 <line:25:5, line:27:5> line:25:10 use 'void ()'
| `-CompoundStmt 0x55adbc302a30 <col:16, line:27:5>
|   `-UnaryOperator 0x55adbc302a18 <line:26:2, col:11> 'int' postfix '++'
|     `-MemberExpr 0x55adbc3029e8 <col:2> 'int' lvalue ->_refcount 0x55adbc302618
|       `-CXXThisExpr 0x55adbc3029d8 <col:2> 'IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55adbc301798 <line:28:5, line:31:5> line:28:10 unuse 'void ()'
| `-CompoundStmt 0x55adbc302c28 <col:18, line:31:5>
|   `-IfStmt 0x55adbc302c10 <line:29:2, line:30:13>
|     |-BinaryOperator 0x55adbc302ad8 <line:29:6, col:21> 'bool' '<='
|     | |-ImplicitCastExpr 0x55adbc302ac0 <col:6, col:8> 'int' <LValueToRValue>
|     | | `-UnaryOperator 0x55adbc302a88 <col:6, col:8> 'int' lvalue prefix '--'
|     | |   `-MemberExpr 0x55adbc302a58 <col:8> 'int' lvalue ->_refcount 0x55adbc302618
|     | |     `-CXXThisExpr 0x55adbc302a48 <col:8> 'IPRewriterPattern *' implicit this
|     | `-IntegerLiteral 0x55adbc302aa0 <col:21> 'int' 0
|     `-CXXDeleteExpr 0x55adbc302bf0 <line:30:6, col:13> 'void' Function 0x55adbbe3e0f8 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x55adbc302af8 <col:13> 'IPRewriterPattern *' this
|-CXXConversionDecl 0x55adbc301898 <line:33:5, line:35:5> line:33:5 operator bool 'bool () const'
| `-CompoundStmt 0x55adbc302f10 <col:27, line:35:5>
|   `-ReturnStmt 0x55adbc302f00 <line:34:2, col:39>
|     `-BinaryOperator 0x55adbc302ee0 <col:9, col:39> 'bool' '||'
|       |-BinaryOperator 0x55adbc302e50 <col:9, col:29> 'bool' '||'
|       | |-BinaryOperator 0x55adbc302d70 <col:9, col:19> 'bool' '||'
|       | | |-ImplicitCastExpr 0x55adbc302d28 <col:9> 'bool' <IntegralToBoolean>
|       | | | `-ImplicitCastExpr 0x55adbc302d10 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | | |   `-CXXMemberCallExpr 0x55adbc302cf0 <col:9> 'uint32_t':'unsigned int'
|       | | |     `-MemberExpr 0x55adbc302cc0 <col:9> '<bound member function type>' .operator unsigned int 0x55adbc05a118
|       | | |       `-MemberExpr 0x55adbc302c50 <col:9> 'const IPAddress' lvalue ->_saddr 0x55adbc3022a0
|       | | |         `-CXXThisExpr 0x55adbc302c40 <col:9> 'const IPRewriterPattern *' implicit this
|       | | `-ImplicitCastExpr 0x55adbc302d58 <col:19> 'bool' <IntegralToBoolean>
|       | |   `-ImplicitCastExpr 0x55adbc302d40 <col:19> 'int' <LValueToRValue>
|       | |     `-MemberExpr 0x55adbc302c90 <col:19> 'const int' lvalue ->_sport 0x55adbc302308
|       | |       `-CXXThisExpr 0x55adbc302c80 <col:19> 'const IPRewriterPattern *' implicit this
|       | `-ImplicitCastExpr 0x55adbc302e38 <col:29> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55adbc302e20 <col:29> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x55adbc302e00 <col:29> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x55adbc302dd0 <col:29> '<bound member function type>' .operator unsigned int 0x55adbc05a118
|       |         `-MemberExpr 0x55adbc302da0 <col:29> 'const IPAddress' lvalue ->_daddr 0x55adbc302368
|       |           `-CXXThisExpr 0x55adbc302d90 <col:29> 'const IPRewriterPattern *' implicit this
|       `-ImplicitCastExpr 0x55adbc302ec8 <col:39> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55adbc302eb0 <col:39> 'int' <LValueToRValue>
|           `-MemberExpr 0x55adbc302e80 <col:39> 'const int' lvalue ->_dport 0x55adbc3023d0
|             `-CXXThisExpr 0x55adbc302e70 <col:39> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55adbc301968 <line:36:5, line:38:5> line:36:15 daddr 'IPAddress () const'
| `-CompoundStmt 0x55adbc302fa8 <col:29, line:38:5>
|   `-ReturnStmt 0x55adbc302f98 <line:37:2, col:9>
|     `-CXXConstructExpr 0x55adbc302f68 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55adbc302f38 <col:9> 'const IPAddress' lvalue ->_daddr 0x55adbc302368
|         `-CXXThisExpr 0x55adbc302f28 <col:9> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55adbc302030 <line:40:5, line:41:57> line:40:9 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, const HashContainer<IPRewriterEntry> &)'
| |-ParmVarDecl 0x55adbc301a18 <col:24, col:40> col:40 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55adbc301ab8 <col:48, col:58> col:58 rewritten_flowid 'IPFlowID &'
| `-ParmVarDecl 0x55adbc301f00 <line:41:10, col:48> col:48 reply_map 'const HashContainer<IPRewriterEntry> &'
|-CXXMethodDecl 0x55adbc302108 <line:43:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55adbc3021c8 <line:45:5, line:47:5> line:45:21 get_flow_id 'IPFlowID () const' inline
| `-CompoundStmt 0x55adbc303250 <col:41, line:47:5>
|   `-ReturnStmt 0x55adbc303240 <line:46:9, col:55>
|     `-ExprWithCleanups 0x55adbc303228 <col:16, col:55> 'IPFlowID'
|       `-CXXConstructExpr 0x55adbc3031f8 <col:16, col:55> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55adbc3031e0 <col:16, col:55> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x55adbc303190 <col:16, col:55> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x55adbc3030d0 <col:25> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55adbc302fe0 <col:25> 'const IPAddress' lvalue ->_saddr 0x55adbc3022a0
|             |   `-CXXThisExpr 0x55adbc302fd0 <col:25> 'const IPRewriterPattern *' implicit this
|             |-ImplicitCastExpr 0x55adbc303118 <col:33> 'uint16_t':'unsigned short' <IntegralCast>
|             | `-ImplicitCastExpr 0x55adbc303100 <col:33> 'int' <LValueToRValue>
|             |   `-MemberExpr 0x55adbc303020 <col:33> 'const int' lvalue ->_sport 0x55adbc302308
|             |     `-CXXThisExpr 0x55adbc303010 <col:33> 'const IPRewriterPattern *' implicit this
|             |-CXXConstructExpr 0x55adbc303130 <col:41> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55adbc303060 <col:41> 'const IPAddress' lvalue ->_daddr 0x55adbc302368
|             |   `-CXXThisExpr 0x55adbc303050 <col:41> 'const IPRewriterPattern *' implicit this
|             `-ImplicitCastExpr 0x55adbc303178 <col:49> 'uint16_t':'unsigned short' <IntegralCast>
|               `-ImplicitCastExpr 0x55adbc303160 <col:49> 'int' <LValueToRValue>
|                 `-MemberExpr 0x55adbc3030a0 <col:49> 'const int' lvalue ->_dport 0x55adbc3023d0
|                   `-CXXThisExpr 0x55adbc303090 <col:49> 'const IPRewriterPattern *' implicit this
|-AccessSpecDecl 0x55adbc302268 <line:49:1, col:8> col:1 private
|-FieldDecl 0x55adbc3022a0 <line:51:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x55adbc302308 <line:52:5, col:9> col:9 referenced _sport 'int'
|-FieldDecl 0x55adbc302368 <line:53:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x55adbc3023d0 <line:54:5, col:9> col:9 referenced _dport 'int'
|-FieldDecl 0x55adbc302430 <line:56:5, col:14> col:14 _variation_top 'uint32_t':'unsigned int'
|-FieldDecl 0x55adbc302490 <line:57:5, col:14> col:14 _next_variation 'uint32_t':'unsigned int'
|-FieldDecl 0x55adbc3024f0 <line:59:5, col:10> col:10 _is_napt 'bool'
|-FieldDecl 0x55adbc302550 <line:60:5, col:10> col:10 _sequential 'bool'
|-FieldDecl 0x55adbc3025b0 <line:61:5, col:10> col:10 _same_first 'bool'
|-FieldDecl 0x55adbc302618 <line:63:5, col:9> col:9 referenced _refcount 'int'
|-CXXConstructorDecl 0x55adbc302768 <line:65:5, col:47> col:5 IPRewriterPattern 'void (const IPRewriterPattern &)'
| `-ParmVarDecl 0x55adbc3026a8 <col:23, col:46> col:47 'const IPRewriterPattern &'
|-CXXMethodDecl 0x55adbc302918 <line:66:5, col:58> col:24 operator= 'IPRewriterPattern &(const IPRewriterPattern &)'
| `-ParmVarDecl 0x55adbc302828 <col:34, col:57> col:58 'const IPRewriterPattern &'
`-CXXDestructorDecl 0x55adbc302b08 <line:12:7> col:7 implicit ~IPRewriterPattern 'void ()' inline default trivial noexcept-unevaluated 0x55adbc302b08

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPMapper
         0 |   (IPMapper vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc34bfa0 prev 0x55adbc31e080 <../elements/ip/iprewriterbase.hh:185:1, line:197:1> line:185:7 class IPMapper definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55adbc34c098 <col:1, col:7> col:7 implicit referenced class IPMapper
|-AccessSpecDecl 0x55adbc34c128 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55adbc34c188 <line:187:5, col:18> col:5 IPMapper 'void ()'
| `-CompoundStmt 0x55adbc34cba8 <col:16, col:18>
|-CXXDestructorDecl 0x55adbc34c278 <line:188:5, col:27> col:13 ~IPMapper 'void () noexcept' virtual
| `-CompoundStmt 0x55adbc34cbb8 <col:25, col:27>
|-CXXMethodDecl 0x55adbc34c548 <line:190:5, line:191:24> line:190:18 notify_rewriter 'void (IPRewriterBase *, IPRewriterInput *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55adbc34c370 <col:34, col:50> col:50 user 'IPRewriterBase *'
| |-ParmVarDecl 0x55adbc34c3e8 <col:56, col:73> col:73 input 'IPRewriterInput *'
| `-ParmVarDecl 0x55adbc34c460 <line:191:6, col:20> col:20 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55adbc34c900 <line:192:5, line:195:31> line:192:17 rewrite_flowid 'int (IPRewriterInput *, const IPFlowID &, IPFlowID &, Packet *, int)' virtual
| |-ParmVarDecl 0x55adbc34c610 <col:32, col:49> col:49 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55adbc34c688 <line:193:11, col:27> col:27 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55adbc34c700 <line:194:11, col:21> col:21 rewritten_flowid 'IPFlowID &'
| |-ParmVarDecl 0x55adbc34c778 <line:195:11, col:19> col:19 p 'Packet *'
| `-ParmVarDecl 0x55adbc34c7f8 <col:22, col:26> col:26 mapid 'int'
`-CXXMethodDecl 0x55adbc34ca28 <line:185:7> col:7 implicit operator= 'IPMapper &(const IPMapper &)' inline default noexcept-unevaluated 0x55adbc34ca28
  `-ParmVarDecl 0x55adbc34cb38 <col:7> col:7 'const IPMapper &'

Layout: <CGRecordLayout
  LLVMType:%class.IPMapper = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.IPMapper = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc31e908 <../elements/ip/iprewriterbase.hh:23:5, line:26:5> line:23:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x55adbc31ea38 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
|-FieldDecl 0x55adbc31eac8 <line:25:2, col:12> col:12 mapper 'IPMapper *'
|-CXXConstructorDecl 0x55adbc31f588 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x55adbc31f9b8 <col:5>
|-CXXConstructorDecl 0x55adbc31f688 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x55adbc31f688
| `-ParmVarDecl 0x55adbc31f798 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
`-CXXConstructorDecl 0x55adbc31f838 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x55adbc31f838
  `-ParmVarDecl 0x55adbc31f948 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon.26 = type { %class.IPRewriterPattern* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc31e1c0 prev 0x55adbc303460 <../elements/ip/iprewriterbase.hh:11:1, line:40:1> line:11:7 referenced class IPRewriterInput definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55adbc31e2b8 <col:1, col:7> col:7 implicit referenced class IPRewriterInput
|-AccessSpecDecl 0x55adbc31e348 <col:25, col:31> col:25 public
|-EnumDecl 0x55adbc31e370 <line:12:5, line:14:5> line:12:5
| |-EnumConstantDecl 0x55adbc31e430 <line:13:2> col:2 referenced i_drop 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55adbc31e480 <col:10> col:10 i_nochange 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55adbc31e4d0 <col:22> col:22 i_keep 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55adbc31e520 <col:30> col:30 i_pattern 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| `-EnumConstantDecl 0x55adbc31e570 <col:41> col:41 i_mapper 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
|-FieldDecl 0x55adbc31e5f8 <line:15:5, col:21> col:21 owner 'IPRewriterBase *'
|-FieldDecl 0x55adbc31e660 <line:16:5, col:9> col:9 owner_input 'int'
|-FieldDecl 0x55adbc31e6c8 <line:17:5, col:9> col:9 kind 'int'
|-FieldDecl 0x55adbc31e730 <line:18:5, col:9> col:9 foutput 'int'
|-FieldDecl 0x55adbc31e790 <line:19:5, col:21> col:21 referenced reply_element 'IPRewriterBase *'
|-FieldDecl 0x55adbc31e7f8 <line:20:5, col:9> col:9 routput 'int'
|-FieldDecl 0x55adbc31e858 <line:21:5, col:14> col:14 count 'uint32_t':'unsigned int'
|-FieldDecl 0x55adbc31e8b8 <line:22:5, col:14> col:14 failures 'uint32_t':'unsigned int'
|-CXXRecordDecl 0x55adbc31e908 <line:23:5, line:26:5> line:23:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x55adbc31ea38 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
| |-FieldDecl 0x55adbc31eac8 <line:25:2, col:12> col:12 mapper 'IPMapper *'
| |-CXXConstructorDecl 0x55adbc31f588 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55adbc31f9b8 <col:5>
| |-CXXConstructorDecl 0x55adbc31f688 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x55adbc31f688
| | `-ParmVarDecl 0x55adbc31f798 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
| `-CXXConstructorDecl 0x55adbc31f838 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x55adbc31f838
|   `-ParmVarDecl 0x55adbc31f948 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'
|-FieldDecl 0x55adbc31eb88 <col:5, line:26:7> col:7 referenced u 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
|-CXXConstructorDecl 0x55adbc31ec28 <line:28:5, line:31:5> line:28:5 IPRewriterInput 'void ()'
| |-CXXCtorInitializer Field 0x55adbc31e6c8 'kind' 'int'
| | `-ImplicitCastExpr 0x55adbc31f330 <line:29:9> 'int' <IntegralCast>
| |   `-DeclRefExpr 0x55adbc31f2f0 <col:9> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)' EnumConstant 0x55adbc31e430 'i_drop' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-CXXCtorInitializer Field 0x55adbc31e730 'foutput' 'int'
| | `-UnaryOperator 0x55adbc31f390 <col:26, col:27> 'int' prefix '-'
| |   `-IntegerLiteral 0x55adbc31f370 <col:27> 'int' 1
| |-CXXCtorInitializer Field 0x55adbc31e7f8 'routput' 'int'
| | `-UnaryOperator 0x55adbc31f410 <col:39, col:40> 'int' prefix '-'
| |   `-IntegerLiteral 0x55adbc31f3f0 <col:40> 'int' 1
| |-CXXCtorInitializer Field 0x55adbc31e858 'count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55adbc31f4b0 <col:50> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55adbc31f470 <col:50> 'int' 0
| |-CXXCtorInitializer Field 0x55adbc31e8b8 'failures' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55adbc31f530 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55adbc31f4f0 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55adbc31eb88 'u' 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
| | `-CXXConstructExpr 0x55adbc31f9c8 <line:28:5> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' 'void () noexcept'
| `-CompoundStmt 0x55adbc31fb10 <line:29:66, line:31:5>
|   `-BinaryOperator 0x55adbc31faf0 <line:30:2, col:14> 'IPRewriterPattern *' lvalue '='
|     |-MemberExpr 0x55adbc31fa88 <col:2, col:4> 'IPRewriterPattern *' lvalue .pattern 0x55adbc31ea38
|     | `-MemberExpr 0x55adbc31fa58 <col:2> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' lvalue ->u 0x55adbc31eb88
|     |   `-CXXThisExpr 0x55adbc31fa48 <col:2> 'IPRewriterInput *' implicit this
|     `-ImplicitCastExpr 0x55adbc31fad8 <col:14> 'IPRewriterPattern *' <NullToPointer>
|       `-IntegerLiteral 0x55adbc31fab8 <col:14> 'int' 0
|-EnumDecl 0x55adbc31ecd0 <line:33:5, line:35:5> line:33:5
| |-EnumConstantDecl 0x55adbc31edd0 <line:34:2, col:18> col:2 referenced mapid_default 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
| | `-ImplicitCastExpr 0x55adbc31eeb0 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc31edb0 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x55adbc31ed90 <col:18> 'int' 0
| `-EnumConstantDecl 0x55adbc31ee60 <col:21, col:44> col:21 referenced mapid_iprewriter_udp 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   `-ImplicitCastExpr 0x55adbc31eec8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc31ee40 <col:44> 'int' Int: 1
|       `-IntegerLiteral 0x55adbc31ee20 <col:44> 'int' 1
`-CXXMethodDecl 0x55adbc31f160 <line:37:5, line:39:46> line:37:44 used rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
  |-ParmVarDecl 0x55adbc31eef0 <col:59, col:75> col:75 flowid 'const IPFlowID &'
  |-ParmVarDecl 0x55adbc31ef68 <line:38:10, col:20> col:20 rewritten_flowid 'IPFlowID &'
  |-ParmVarDecl 0x55adbc31efe0 <line:39:10, col:18> col:18 p 'Packet *'
  |-ParmVarDecl 0x55adbc31f060 <col:21, col:33> col:25 mapid 'int' cinit
  | `-ImplicitCastExpr 0x55adbc31f2d8 <col:33> 'int' <IntegralCast>
  |   `-DeclRefExpr 0x55adbc31f2b8 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55adbc31edd0 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
  |-NoInlineAttr 0x55adbc31f220 <line:37:20>
  `-OptimizeNoneAttr 0x55adbc31f278 <col:30>

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.26 }
  NonVirtualBaseLLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.26 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc305da0 prev 0x55adbc303320 <../elements/ip/iprwmapping.hh:68:1, line:174:1> line:68:7 referenced class IPRewriterFlow definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc305e98 <col:1, col:7> col:7 implicit referenced class IPRewriterFlow
|-AccessSpecDecl 0x55adbc305f28 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55adbc306348 <line:70:5, line:72:61> line:70:5 used IPRewriterFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55adbc305f60 <col:20, col:37> col:37 owner 'IPRewriterInput *'
| |-ParmVarDecl 0x55adbc305fd8 <col:44, col:60> col:60 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55adbc306050 <line:71:6, col:22> col:22 rewritten_flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55adbc3060c8 <line:72:6, col:14> col:14 ip_p 'uint8_t':'unsigned char'
| |-ParmVarDecl 0x55adbc306140 <col:20, col:25> col:25 guaranteed 'bool'
| `-ParmVarDecl 0x55adbc3061b8 <col:37, col:53> col:53 expiry_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55adbc306528 <line:74:5, line:76:5> line:74:22 used entry 'IPRewriterEntry &(bool)'
| |-ParmVarDecl 0x55adbc306430 <col:28, col:33> col:33 used direction 'bool'
| `-CompoundStmt 0x55adbc30bd00 <col:44, line:76:5>
|   `-ReturnStmt 0x55adbc30bcf0 <line:75:2, col:21>
|     `-ArraySubscriptExpr 0x55adbc30bcd0 <col:9, col:21> 'IPRewriterEntry' lvalue
|       |-ImplicitCastExpr 0x55adbc30bca0 <col:9> 'IPRewriterEntry *' <ArrayToPointerDecay>
|       | `-MemberExpr 0x55adbc30bc50 <col:9> 'IPRewriterEntry [2]' lvalue ->_e 0x55adbc308af8
|       |   `-CXXThisExpr 0x55adbc30bc40 <col:9> 'IPRewriterFlow *' implicit this
|       `-ImplicitCastExpr 0x55adbc30bcb8 <col:12> 'bool' <LValueToRValue>
|         `-DeclRefExpr 0x55adbc30bc80 <col:12> 'bool' lvalue ParmVar 0x55adbc306430 'direction' 'bool'
|-CXXMethodDecl 0x55adbc3066d8 <line:77:5, line:79:5> line:77:28 entry 'const IPRewriterEntry &(bool) const'
| |-ParmVarDecl 0x55adbc3065e0 <col:34, col:39> col:39 used direction 'bool'
| `-CompoundStmt 0x55adbc30be18 <col:56, line:79:5>
|   `-ReturnStmt 0x55adbc30be08 <line:78:2, col:21>
|     `-ArraySubscriptExpr 0x55adbc30bde8 <col:9, col:21> 'const IPRewriterEntry' lvalue
|       |-ImplicitCastExpr 0x55adbc30bdb8 <col:9> 'const IPRewriterEntry *' <ArrayToPointerDecay>
|       | `-MemberExpr 0x55adbc30bd28 <col:9> 'IPRewriterEntry const[2]' lvalue ->_e 0x55adbc308af8
|       |   `-CXXThisExpr 0x55adbc30bd18 <col:9> 'const IPRewriterFlow *' implicit this
|       `-ImplicitCastExpr 0x55adbc30bdd0 <col:12> 'bool' <LValueToRValue>
|         `-DeclRefExpr 0x55adbc30bd58 <col:12> 'bool' lvalue ParmVar 0x55adbc3065e0 'direction' 'bool'
|-CXXMethodDecl 0x55adbc3067a0 <line:83:5, line:85:5> line:83:21 used expiry 'click_jiffies_t () const'
| `-CompoundStmt 0x55adbc30be98 <col:36, line:85:5>
|   `-ReturnStmt 0x55adbc30be88 <line:84:2, col:9>
|     `-ImplicitCastExpr 0x55adbc30be70 <col:9> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55adbc30be40 <col:9> 'const click_jiffies_t':'const unsigned int' lvalue ->_expiry_j 0x55adbc308c18
|         `-CXXThisExpr 0x55adbc30be30 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55adbc306948 <line:89:5, line:91:5> line:89:10 expired 'bool (click_jiffies_t) const'
| |-ParmVarDecl 0x55adbc306850 <col:18, col:34> col:34 used now_j 'click_jiffies_t':'unsigned int'
| `-CompoundStmt 0x55adbc30c0b8 <col:47, line:91:5>
|   `-ReturnStmt 0x55adbc30c0a8 <line:90:2, col:67>
|     `-UnaryOperator 0x55adbc30c090 <col:9, col:67> 'bool' prefix '!' cannot overflow
|       `-ParenExpr 0x55adbc30c070 <col:10, col:67> 'bool'
|         `-BinaryOperator 0x55adbc30c050 <col:11, col:66> 'bool' '<'
|           |-CStyleCastExpr 0x55adbc30c008 <col:11, col:62> 'click_jiffies_difference_t':'int' <NoOp>
|           | `-ImplicitCastExpr 0x55adbc30bff0 <col:40, col:62> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|           |   `-ParenExpr 0x55adbc30bfd0 <col:40, col:62> 'unsigned int'
|           |     `-BinaryOperator 0x55adbc30bf80 <col:41, col:61> 'unsigned int' '-'
|           |       |-ImplicitCastExpr 0x55adbc30bf50 <col:41, col:47> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |       | `-ParenExpr 0x55adbc30bed0 <col:41, col:47> 'click_jiffies_t':'unsigned int' lvalue
|           |       |   `-DeclRefExpr 0x55adbc30beb0 <col:42> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55adbc306850 'now_j' 'click_jiffies_t':'unsigned int'
|           |       `-ImplicitCastExpr 0x55adbc30bf68 <col:51, col:61> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |         `-ParenExpr 0x55adbc30bf30 <col:51, col:61> 'const click_jiffies_t':'const unsigned int' lvalue
|           |           `-MemberExpr 0x55adbc30bf00 <col:52> 'const click_jiffies_t':'const unsigned int' lvalue ->_expiry_j 0x55adbc308c18
|           |             `-CXXThisExpr 0x55adbc30bef0 <col:52> 'const IPRewriterFlow *' implicit this
|           `-IntegerLiteral 0x55adbc30c030 <col:66> 'int' 0
|-CXXMethodDecl 0x55adbc306a10 <line:94:5, line:96:5> line:94:10 guaranteed 'bool () const'
| `-CompoundStmt 0x55adbc30c138 <col:29, line:96:5>
|   `-ReturnStmt 0x55adbc30c128 <line:95:2, col:9>
|     `-ImplicitCastExpr 0x55adbc30c110 <col:9> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55adbc30c0e0 <col:9> 'const bool' lvalue ->_guaranteed 0x55adbc308dd8
|         `-CXXThisExpr 0x55adbc30c0d0 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55adbc306cf8 <line:102:5, line:103:34> line:102:10 used change_expiry 'void (IPRewriterHeap *, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55adbc306ae8 <col:24, col:40> col:40 h 'IPRewriterHeap *'
| |-ParmVarDecl 0x55adbc306b60 <col:43, col:48> col:48 guaranteed 'bool'
| `-ParmVarDecl 0x55adbc306bd8 <line:103:10, col:26> col:26 expiry_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55adbc307098 <line:114:5, line:118:5> line:114:10 change_expiry_by_timeout 'void (IPRewriterHeap *, click_jiffies_t, const uint32_t *)'
| |-ParmVarDecl 0x55adbc306dc0 <col:35, col:51> col:51 used h 'IPRewriterHeap *'
| |-ParmVarDecl 0x55adbc306e38 <col:54, col:70> col:70 used now_j 'click_jiffies_t':'unsigned int'
| |-ParmVarDecl 0x55adbc306f70 <line:115:7, col:32> col:22 used timeouts 'const uint32_t *':'const uint32_t *'
| `-CompoundStmt 0x55adbc30c5d8 <col:35, line:118:5>
|   |-DeclStmt 0x55adbc30c3a8 <line:116:2, col:60>
|   | `-VarDecl 0x55adbc30c160 <col:2, col:59> col:11 used timeout 'uint32_t':'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x55adbc30c390 <col:21, col:59> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     `-ConditionalOperator 0x55adbc30c360 <col:21, col:59> 'const uint32_t':'const unsigned int' lvalue
|   |       |-ImplicitCastExpr 0x55adbc30c348 <col:21, col:31> 'bool' <IntegralToBoolean>
|   |       | `-ImplicitCastExpr 0x55adbc30c330 <col:21, col:31> 'uint32_t':'unsigned int' <LValueToRValue>
|   |       |   `-ArraySubscriptExpr 0x55adbc30c220 <col:21, col:31> 'const uint32_t':'const unsigned int' lvalue
|   |       |     |-ImplicitCastExpr 0x55adbc30c208 <col:21> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x55adbc30c1c8 <col:21> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55adbc306f70 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |       |     `-IntegerLiteral 0x55adbc30c1e8 <col:30> 'int' 1
|   |       |-ArraySubscriptExpr 0x55adbc30c298 <col:35, col:45> 'const uint32_t':'const unsigned int' lvalue
|   |       | |-ImplicitCastExpr 0x55adbc30c280 <col:35> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x55adbc30c240 <col:35> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55adbc306f70 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |       | `-IntegerLiteral 0x55adbc30c260 <col:44> 'int' 1
|   |       `-ArraySubscriptExpr 0x55adbc30c310 <col:49, col:59> 'const uint32_t':'const unsigned int' lvalue
|   |         |-ImplicitCastExpr 0x55adbc30c2f8 <col:49> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x55adbc30c2b8 <col:49> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55adbc306f70 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |         `-IntegerLiteral 0x55adbc30c2d8 <col:58> 'int' 0
|   `-CXXMemberCallExpr 0x55adbc30c588 <line:117:2, col:49> 'void'
|     |-MemberExpr 0x55adbc30c3d0 <col:2> '<bound member function type>' ->change_expiry 0x55adbc306cf8
|     | `-CXXThisExpr 0x55adbc30c3c0 <col:2> 'IPRewriterFlow *' implicit this
|     |-ImplicitCastExpr 0x55adbc30c5c0 <col:16> 'IPRewriterHeap *' <LValueToRValue>
|     | `-DeclRefExpr 0x55adbc30c400 <col:16> 'IPRewriterHeap *' lvalue ParmVar 0x55adbc306dc0 'h' 'IPRewriterHeap *'
|     |-UnaryOperator 0x55adbc30c4e0 <col:19, col:31> 'bool' prefix '!' cannot overflow
|     | `-UnaryOperator 0x55adbc30c4c8 <col:20, col:31> 'bool' prefix '!' cannot overflow
|     |   `-ImplicitCastExpr 0x55adbc30c4b0 <col:21, col:31> 'bool' <IntegralToBoolean>
|     |     `-ImplicitCastExpr 0x55adbc30c498 <col:21, col:31> 'uint32_t':'unsigned int' <LValueToRValue>
|     |       `-ArraySubscriptExpr 0x55adbc30c478 <col:21, col:31> 'const uint32_t':'const unsigned int' lvalue
|     |         |-ImplicitCastExpr 0x55adbc30c460 <col:21> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|     |         | `-DeclRefExpr 0x55adbc30c420 <col:21> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55adbc306f70 'timeouts' 'const uint32_t *':'const uint32_t *'
|     |         `-IntegerLiteral 0x55adbc30c440 <col:30> 'int' 1
|     `-BinaryOperator 0x55adbc30c568 <col:34, col:42> 'unsigned int' '+'
|       |-ImplicitCastExpr 0x55adbc30c538 <col:34> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55adbc30c4f8 <col:34> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55adbc306e38 'now_j' 'click_jiffies_t':'unsigned int'
|       `-ImplicitCastExpr 0x55adbc30c550 <col:42> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55adbc30c518 <col:42> 'uint32_t':'unsigned int' lvalue Var 0x55adbc30c160 'timeout' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55adbc3071c8 <line:120:5, line:122:5> line:120:13 used ip_p 'uint8_t () const'
| `-CompoundStmt 0x55adbc30c660 <col:26, line:122:5>
|   `-ReturnStmt 0x55adbc30c650 <line:121:2, col:9>
|     `-ImplicitCastExpr 0x55adbc30c638 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-MemberExpr 0x55adbc30c608 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_ip_p 0x55adbc308d18
|         `-CXXThisExpr 0x55adbc30c5f8 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55adbc3072b8 <line:124:5, line:126:5> line:124:22 used owner 'IPRewriterInput *() const'
| `-CompoundStmt 0x55adbc30c6e0 <col:36, line:126:5>
|   `-ReturnStmt 0x55adbc30c6d0 <line:125:2, col:9>
|     `-ImplicitCastExpr 0x55adbc30c6b8 <col:9> 'IPRewriterInput *' <LValueToRValue>
|       `-MemberExpr 0x55adbc30c688 <col:9> 'IPRewriterInput *const' lvalue ->_owner 0x55adbc308e98
|         `-CXXThisExpr 0x55adbc30c678 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55adbc307378 <line:128:5, line:130:5> line:128:13 reply_anno 'uint8_t () const'
| `-CompoundStmt 0x55adbc30c760 <col:32, line:130:5>
|   `-ReturnStmt 0x55adbc30c750 <line:129:2, col:9>
|     `-ImplicitCastExpr 0x55adbc30c738 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-MemberExpr 0x55adbc30c708 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_reply_anno 0x55adbc308e38
|         `-CXXThisExpr 0x55adbc30c6f8 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55adbc3074e8 <line:131:5, line:133:5> line:131:10 set_reply_anno 'void (uint8_t)'
| |-ParmVarDecl 0x55adbc307428 <col:25, col:33> col:33 used reply_anno 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55adbc30c810 <col:45, line:133:5>
|   `-BinaryOperator 0x55adbc30c7f0 <line:132:2, col:16> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55adbc30c788 <col:2> 'uint8_t':'unsigned char' lvalue ->_reply_anno 0x55adbc308e38
|     | `-CXXThisExpr 0x55adbc30c778 <col:2> 'IPRewriterFlow *' implicit this
|     `-ImplicitCastExpr 0x55adbc30c7d8 <col:16> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55adbc30c7b8 <col:16> 'uint8_t':'unsigned char' lvalue ParmVar 0x55adbc307428 'reply_anno' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55adbc3077b8 <line:135:5, line:136:27> line:135:24 update_csum 'void (uint16_t *, bool, uint16_t)' static inline
| |-ParmVarDecl 0x55adbc3075a0 <col:36, col:46> col:46 csum 'uint16_t *'
| |-ParmVarDecl 0x55adbc307618 <col:52, col:57> col:57 direction 'bool'
| `-ParmVarDecl 0x55adbc307690 <line:136:8, col:17> col:17 csum_delta 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55adbc307a58 <line:138:5, col:65> col:10 apply 'void (WritablePacket *, bool, unsigned int)'
| |-ParmVarDecl 0x55adbc307880 <col:16, col:32> col:32 p 'WritablePacket *'
| |-ParmVarDecl 0x55adbc3078f8 <col:35, col:40> col:40 direction 'bool'
| `-ParmVarDecl 0x55adbc307978 <col:51, col:60> col:60 annos 'unsigned int'
|-CXXMethodDecl 0x55adbc307d38 <line:140:5, col:72> col:10 used unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x55adbc307b20 <col:18, col:31> col:31 sa 'StringAccum &'
| |-ParmVarDecl 0x55adbc307b98 <col:35, col:40> col:40 direction 'bool'
| `-ParmVarDecl 0x55adbc307c10 <col:51, col:67> col:67 now 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55adbc307f90 <line:141:5, col:78> col:10 unparse_ports 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x55adbc307e00 <col:24, col:37> col:37 sa 'StringAccum &'
| |-ParmVarDecl 0x55adbc307e78 <col:41, col:46> col:46 direction 'bool'
| `-ParmVarDecl 0x55adbc307ef0 <col:57, col:73> col:73 now 'click_jiffies_t':'unsigned int'
|-CXXRecordDecl 0x55adbc308048 <line:143:5, line:147:5> line:143:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55adbc308168 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55adbc308388 <line:144:2, line:146:2> line:144:14 operator() 'bool (IPRewriterFlow *, IPRewriterFlow *)' inline
|   |-ParmVarDecl 0x55adbc308208 <col:25, col:41> col:41 used a 'IPRewriterFlow *'
|   |-ParmVarDecl 0x55adbc308280 <col:44, col:60> col:60 used b 'IPRewriterFlow *'
|   `-CompoundStmt 0x55adbc30cac8 <col:63, line:146:2>
|     `-ReturnStmt 0x55adbc30cab8 <line:145:6, col:78>
|       `-ParenExpr 0x55adbc30ca98 <col:13, col:78> 'bool'
|         `-BinaryOperator 0x55adbc30ca78 <col:14, col:77> 'bool' '<'
|           |-CStyleCastExpr 0x55adbc30ca30 <col:14, col:73> 'click_jiffies_difference_t':'int' <NoOp>
|           | `-ImplicitCastExpr 0x55adbc30ca18 <col:43, col:73> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|           |   `-ParenExpr 0x55adbc30c9f8 <col:43, col:73> 'unsigned int'
|           |     `-BinaryOperator 0x55adbc30c9a8 <col:44, col:72> 'unsigned int' '-'
|           |       |-ParenExpr 0x55adbc30c8c8 <col:44, col:56> 'click_jiffies_t':'unsigned int'
|           |       | `-CXXMemberCallExpr 0x55adbc30c890 <col:45, col:55> 'click_jiffies_t':'unsigned int'
|           |       |   `-MemberExpr 0x55adbc30c860 <col:45, col:48> '<bound member function type>' ->expiry 0x55adbc3067a0
|           |       |     `-ImplicitCastExpr 0x55adbc30c8b0 <col:45> 'const IPRewriterFlow *' <NoOp>
|           |       |       `-ImplicitCastExpr 0x55adbc30c848 <col:45> 'IPRewriterFlow *' <LValueToRValue>
|           |       |         `-DeclRefExpr 0x55adbc30c828 <col:45> 'IPRewriterFlow *' lvalue ParmVar 0x55adbc308208 'a' 'IPRewriterFlow *'
|           |       `-ParenExpr 0x55adbc30c988 <col:60, col:72> 'click_jiffies_t':'unsigned int'
|           |         `-CXXMemberCallExpr 0x55adbc30c950 <col:61, col:71> 'click_jiffies_t':'unsigned int'
|           |           `-MemberExpr 0x55adbc30c920 <col:61, col:64> '<bound member function type>' ->expiry 0x55adbc3067a0
|           |             `-ImplicitCastExpr 0x55adbc30c970 <col:61> 'const IPRewriterFlow *' <NoOp>
|           |               `-ImplicitCastExpr 0x55adbc30c908 <col:61> 'IPRewriterFlow *' <LValueToRValue>
|           |                 `-DeclRefExpr 0x55adbc30c8e8 <col:61> 'IPRewriterFlow *' lvalue ParmVar 0x55adbc308280 'b' 'IPRewriterFlow *'
|           `-IntegerLiteral 0x55adbc30ca58 <col:77> 'int' 0
|-CXXRecordDecl 0x55adbc308450 <line:148:5, line:152:5> line:148:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55adbc308568 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55adbc3087c8 <line:149:2, line:151:2> line:149:14 operator() 'void (IPRewriterFlow **, IPRewriterFlow **)' inline
|   |-ParmVarDecl 0x55adbc308640 <col:25, col:42> col:42 used begin 'IPRewriterFlow **'
|   |-ParmVarDecl 0x55adbc3086c0 <col:49, col:66> col:66 used it 'IPRewriterFlow **'
|   `-CompoundStmt 0x55adbc30cc60 <col:70, line:151:2>
|     `-BinaryOperator 0x55adbc30cc40 <line:150:6, col:27> 'size_t':'unsigned long' lvalue bitfield '='
|       |-MemberExpr 0x55adbc30cb68 <col:6, col:13> 'size_t':'unsigned long' lvalue bitfield ->_place 0x55adbc308cb8
|       | `-ImplicitCastExpr 0x55adbc30cb50 <col:6, col:10> 'IPRewriterFlow *' <LValueToRValue>
|       |   `-ParenExpr 0x55adbc30cb30 <col:6, col:10> 'IPRewriterFlow *' lvalue
|       |     `-UnaryOperator 0x55adbc30cb18 <col:7, col:8> 'IPRewriterFlow *' lvalue prefix '*' cannot overflow
|       |       `-ImplicitCastExpr 0x55adbc30cb00 <col:8> 'IPRewriterFlow **' <LValueToRValue>
|       |         `-DeclRefExpr 0x55adbc30cae0 <col:8> 'IPRewriterFlow **' lvalue ParmVar 0x55adbc3086c0 'it' 'IPRewriterFlow **'
|       `-ImplicitCastExpr 0x55adbc30cc28 <col:22, col:27> 'size_t':'unsigned long' <IntegralCast>
|         `-BinaryOperator 0x55adbc30cc08 <col:22, col:27> 'long' '-'
|           |-ImplicitCastExpr 0x55adbc30cbd8 <col:22> 'IPRewriterFlow **' <LValueToRValue>
|           | `-DeclRefExpr 0x55adbc30cb98 <col:22> 'IPRewriterFlow **' lvalue ParmVar 0x55adbc3086c0 'it' 'IPRewriterFlow **'
|           `-ImplicitCastExpr 0x55adbc30cbf0 <col:27> 'IPRewriterFlow **' <LValueToRValue>
|             `-DeclRefExpr 0x55adbc30cbb8 <col:27> 'IPRewriterFlow **' lvalue ParmVar 0x55adbc308640 'begin' 'IPRewriterFlow **'
|-AccessSpecDecl 0x55adbc308890 <line:154:3, col:12> col:3 protected
|-FieldDecl 0x55adbc308af8 <line:156:5, col:25> col:21 referenced _e 'IPRewriterEntry [2]'
|-FieldDecl 0x55adbc308b58 <line:157:5, col:14> col:14 _ip_csum_delta 'uint16_t':'unsigned short'
|-FieldDecl 0x55adbc308bb8 <line:158:5, col:14> col:14 _udp_csum_delta 'uint16_t':'unsigned short'
|-FieldDecl 0x55adbc308c18 <line:159:5, col:21> col:21 referenced _expiry_j 'click_jiffies_t':'unsigned int'
|-FieldDecl 0x55adbc308cb8 <line:160:5, col:21> col:12 referenced _place 'size_t':'unsigned long'
| `-ConstantExpr 0x55adbc308c98 <col:21> 'int' Int: 32
|   `-IntegerLiteral 0x55adbc308c68 <col:21> 'int' 32
|-FieldDecl 0x55adbc308d18 <line:161:5, col:13> col:13 referenced _ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55adbc308d78 <line:162:5, col:13> col:13 referenced _tflags 'uint8_t':'unsigned char'
|-FieldDecl 0x55adbc308dd8 <line:163:5, col:10> col:10 referenced _guaranteed 'bool'
|-FieldDecl 0x55adbc308e38 <line:164:5, col:13> col:13 referenced _reply_anno 'uint8_t':'unsigned char'
|-FieldDecl 0x55adbc308e98 <line:165:5, col:22> col:22 referenced _owner 'IPRewriterInput *'
|-FriendDecl 0x55adbc308f40 <line:167:5, col:18> col:12 'class IPRewriterBase':'IPRewriterBase'
|-FriendDecl 0x55adbc308fd0 <line:168:5, col:18> col:12 'class IPRewriterEntry':'IPRewriterEntry'
|-AccessSpecDecl 0x55adbc309010 <line:170:3, col:10> col:3 private
|-CXXMethodDecl 0x55adbc30bb80 <line:172:5, col:38> col:10 destroy 'void (IPRewriterHeap *)'
| `-ParmVarDecl 0x55adbc309048 <col:18, col:34> col:34 heap 'IPRewriterHeap *'
|-CXXConstructorDecl 0x55adbc35df78 <line:68:7> col:7 implicit constexpr IPRewriterFlow 'void (const IPRewriterFlow &)' inline default trivial noexcept-unevaluated 0x55adbc35df78
| `-ParmVarDecl 0x55adbc35e088 <col:7> col:7 'const IPRewriterFlow &'
|-CXXConstructorDecl 0x55adbc35e208 <col:7> col:7 implicit constexpr IPRewriterFlow 'void (IPRewriterFlow &&)' inline default trivial noexcept-unevaluated 0x55adbc35e208
| `-ParmVarDecl 0x55adbc35e318 <col:7> col:7 'IPRewriterFlow &&'
`-CXXDestructorDecl 0x55adbc35e508 <col:7> col:7 implicit referenced ~IPRewriterFlow 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterFlow = type { [2 x %class.IPRewriterEntry], i16, i16, i32, i32, i8, i8, i8, i8, %class.IPRewriterInput* }
  NonVirtualBaseLLVMType:%class.IPRewriterFlow = type { [2 x %class.IPRewriterEntry], i16, i16, i32, i32, i8, i8, i8, i8, %class.IPRewriterInput* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:32 IsSigned:0 StorageSize:32 StorageOffset:56>
]>

*** Dumping AST Record Layout
         0 | struct char_array<8>
         0 |   char [8] x
           | [sizeof=8, dsize=8, align=1,
           |  nvsize=8, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc321b50 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 8
|-PackedAttr 0x55adbc615930 <line:167:18>
|-CXXRecordDecl 0x55adbc6159f0 prev 0x55adbc321b50 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55adbc615b00 <line:166:5, col:13> col:10 x 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [8 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55adbc4e4480 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55adbc655b08 <line:167:18>
|-CXXRecordDecl 0x55adbc655bc8 prev 0x55adbc4e4480 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55adbc655cd8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashMap<struct NatExternKey, class IPFlowID>::Pair
         0 |   struct NatExternKey key
         0 |     uint16_t port
         2 |     uint8_t protocol
         4 |   class IPFlowID value
         4 |     class IPAddress _saddr
         4 |       uint32_t _addr
         8 |     class IPAddress _daddr
         8 |       uint32_t _addr
        12 |     uint16_t _sport
        14 |     uint16_t _dport
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc3ea340 <../dummy_inc/click/hashmap.hh:80:3, line:83:3> line:80:10 struct Pair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55adbc659cc0 prev 0x55adbc3eddf0 <col:3, col:10> col:10 implicit struct Pair
|-FieldDecl 0x55adbc659d60 <line:81:5, col:7> col:7 key 'NatExternKey':'NatExternKey'
`-FieldDecl 0x55adbc659dc0 <line:82:5, col:7> col:7 value 'IPFlowID':'IPFlowID'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap<NatExternKey, IPFlowID>::Pair" = type { %struct.NatExternKey, %class.IPFlowID }
  NonVirtualBaseLLVMType:%"struct.HashMap<NatExternKey, IPFlowID>::Pair" = type { %struct.NatExternKey, %class.IPFlowID }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashMap<struct NatExternKey, class IPFlowID>::Elt
         0 |   struct HashMap<struct NatExternKey, class IPFlowID>::Pair (base)
         0 |     struct NatExternKey key
         0 |       uint16_t port
         2 |       uint8_t protocol
         4 |     class IPFlowID value
         4 |       class IPAddress _saddr
         4 |         uint32_t _addr
         8 |       class IPAddress _daddr
         8 |         uint32_t _addr
        12 |       uint16_t _sport
        14 |       uint16_t _dport
        16 |   struct HashMap<struct NatExternKey, class IPFlowID>::Elt * next
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc3ee120 <../dummy_inc/click/hashmap.hh:91:5, line:97:5> line:91:12 struct Elt definition
|-DefinitionData pass_in_registers trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'HashMap<NatExternKey, IPFlowID>::Pair'
|-CXXRecordDecl 0x55adbc659e58 prev 0x55adbc3ee120 <col:5, col:12> col:12 implicit struct Elt
`-FieldDecl 0x55adbc659ef8 <line:92:2, col:7> col:7 next 'HashMap<NatExternKey, IPFlowID>::Elt *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap<NatExternKey, IPFlowID>::Elt" = type { %"struct.HashMap<NatExternKey, IPFlowID>::Pair", %"struct.HashMap<NatExternKey, IPFlowID>::Elt"* }
  NonVirtualBaseLLVMType:%"struct.HashMap<NatExternKey, IPFlowID>::Elt" = type { %"struct.HashMap<NatExternKey, IPFlowID>::Pair", %"struct.HashMap<NatExternKey, IPFlowID>::Elt"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashMap<struct NatInternKey, class IPFlowID>::Pair
         0 |   struct NatInternKey key
         0 |     struct in_addr addr
         0 |       in_addr_t s_addr
         4 |     uint16_t port
         6 |     uint8_t protocol
         8 |   class IPFlowID value
         8 |     class IPAddress _saddr
         8 |       uint32_t _addr
        12 |     class IPAddress _daddr
        12 |       uint32_t _addr
        16 |     uint16_t _sport
        18 |     uint16_t _dport
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc3ef2f8 <../dummy_inc/click/hashmap.hh:80:3, line:83:3> line:80:10 struct Pair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55adbc65ba90 prev 0x55adbc3f4120 <col:3, col:10> col:10 implicit struct Pair
|-FieldDecl 0x55adbc65bb30 <line:81:5, col:7> col:7 key 'NatInternKey':'NatInternKey'
`-FieldDecl 0x55adbc65bb90 <line:82:5, col:7> col:7 value 'IPFlowID':'IPFlowID'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap<NatInternKey, IPFlowID>::Pair" = type { %struct.NatInternKey, %class.IPFlowID }
  NonVirtualBaseLLVMType:%"struct.HashMap<NatInternKey, IPFlowID>::Pair" = type { %struct.NatInternKey, %class.IPFlowID }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashMap<struct NatInternKey, class IPFlowID>::Elt
         0 |   struct HashMap<struct NatInternKey, class IPFlowID>::Pair (base)
         0 |     struct NatInternKey key
         0 |       struct in_addr addr
         0 |         in_addr_t s_addr
         4 |       uint16_t port
         6 |       uint8_t protocol
         8 |     class IPFlowID value
         8 |       class IPAddress _saddr
         8 |         uint32_t _addr
        12 |       class IPAddress _daddr
        12 |         uint32_t _addr
        16 |       uint16_t _sport
        18 |       uint16_t _dport
        24 |   struct HashMap<struct NatInternKey, class IPFlowID>::Elt * next
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc3f4450 <../dummy_inc/click/hashmap.hh:91:5, line:97:5> line:91:12 struct Elt definition
|-DefinitionData pass_in_registers trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'HashMap<NatInternKey, IPFlowID>::Pair'
|-CXXRecordDecl 0x55adbc65bc28 prev 0x55adbc3f4450 <col:5, col:12> col:12 implicit struct Elt
`-FieldDecl 0x55adbc65bcc8 <line:92:2, col:7> col:7 next 'HashMap<NatInternKey, IPFlowID>::Elt *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap<NatInternKey, IPFlowID>::Elt" = type { %"struct.HashMap<NatInternKey, IPFlowID>::Pair", %"struct.HashMap<NatInternKey, IPFlowID>::Elt"* }
  NonVirtualBaseLLVMType:%"struct.HashMap<NatInternKey, IPFlowID>::Elt" = type { %"struct.HashMap<NatInternKey, IPFlowID>::Pair", %"struct.HashMap<NatInternKey, IPFlowID>::Elt"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<unsigned int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   unsigned int * _ptr
        24 |   unsigned int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbbe3ff18 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbbe40038 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x55adbc05c630 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55adbc05c710 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x55adbc05c710
| `-ParmVarDecl 0x55adbc05c7f8 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x55adbc05c898 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x55adbc05c898
| `-ParmVarDecl 0x55adbc05c9a8 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x55adbc1f6400 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TCPRewriter::TCPFlow::delta_transition
         0 |   int32_t [2] delta
         8 |   tcp_seq_t [2] trigger
        16 |   uintptr_t nextptr
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc35a918 <../elements/tcpudp/tcprewriter.hh:136:2, line:149:2> line:136:9 referenced struct delta_transition definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55adbc35aa38 <col:2, col:9> col:9 implicit referenced struct delta_transition
|-FieldDecl 0x55adbc35ab68 <line:137:6, col:21> col:14 referenced delta 'int32_t [2]'
|-FieldDecl 0x55adbc35ac58 <line:138:6, col:25> col:16 referenced trigger 'tcp_seq_t [2]'
|-FieldDecl 0x55adbc35acb8 <line:139:6, col:16> col:16 referenced nextptr 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55adbc35ad70 <line:140:6, line:142:6> line:140:6 delta_transition 'void ()'
| `-CompoundStmt 0x55adbc35ef20 <col:25, line:142:6>
|   `-CallExpr 0x55adbc35eed0 <line:141:3, col:43> 'void *'
|     |-ImplicitCastExpr 0x55adbc35eeb8 <col:3> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55adbc35ee98 <col:3> 'void *(void *, int, size_t) throw()' lvalue Function 0x55adbbf4bc28 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55adbc35ef08 <col:10> 'void *' <BitCast>
|     | `-CXXThisExpr 0x55adbc35ee38 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' this
|     |-IntegerLiteral 0x55adbc35ee48 <col:16> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55adbc35ee78 <col:19, col:42> 'unsigned long' sizeof 'TCPRewriter::TCPFlow::delta_transition'
|-CXXMethodDecl 0x55adbc35ae98 <line:143:6, line:145:6> line:143:24 used next 'TCPRewriter::TCPFlow::delta_transition *() const'
| `-CompoundStmt 0x55adbc35f0d0 <col:37, line:145:6>
|   `-ReturnStmt 0x55adbc35f0c0 <line:144:3, col:70>
|     `-CXXReinterpretCastExpr 0x55adbc35f090 <col:10, col:70> 'TCPRewriter::TCPFlow::delta_transition *' reinterpret_cast<struct TCPRewriter::TCPFlow::delta_transition *> <IntegralToPointer>
|       `-BinaryOperator 0x55adbc35f060 <col:47, col:69> 'unsigned long' '-'
|         |-ImplicitCastExpr 0x55adbc35f048 <col:47> 'uintptr_t':'unsigned long' <LValueToRValue>
|         | `-MemberExpr 0x55adbc35ef48 <col:47> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55adbc35acb8
|         |   `-CXXThisExpr 0x55adbc35ef38 <col:47> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
|         `-ParenExpr 0x55adbc35f028 <col:57, col:69> 'unsigned long'
|           `-BinaryOperator 0x55adbc35f008 <col:58, col:68> 'unsigned long' '&'
|             |-ImplicitCastExpr 0x55adbc35efd8 <col:58> 'uintptr_t':'unsigned long' <LValueToRValue>
|             | `-MemberExpr 0x55adbc35ef88 <col:58> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55adbc35acb8
|             |   `-CXXThisExpr 0x55adbc35ef78 <col:58> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
|             `-ImplicitCastExpr 0x55adbc35eff0 <col:68> 'unsigned long' <IntegralCast>
|               `-IntegerLiteral 0x55adbc35efb8 <col:68> 'int' 3
|-CXXMethodDecl 0x55adbc35b008 <line:146:6, line:148:6> line:146:11 used has_trigger 'bool (bool) const'
| |-ParmVarDecl 0x55adbc35af48 <col:23, col:28> col:28 used direction 'bool'
| `-CompoundStmt 0x55adbc35f250 <col:45, line:148:6>
|   `-ReturnStmt 0x55adbc35f240 <line:147:3, col:35>
|     `-ImplicitCastExpr 0x55adbc35f228 <col:10, col:35> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55adbc35f208 <col:10, col:35> 'unsigned long' '&'
|         |-ImplicitCastExpr 0x55adbc35f1d8 <col:10> 'uintptr_t':'unsigned long' <LValueToRValue>
|         | `-MemberExpr 0x55adbc35f0f8 <col:10> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55adbc35acb8
|         |   `-CXXThisExpr 0x55adbc35f0e8 <col:10> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
|         `-ImplicitCastExpr 0x55adbc35f1f0 <col:20, col:35> 'unsigned long' <IntegralCast>
|           `-ParenExpr 0x55adbc35f1b8 <col:20, col:35> 'int'
|             `-BinaryOperator 0x55adbc35f198 <col:21, col:26> 'int' '<<'
|               |-IntegerLiteral 0x55adbc35f128 <col:21> 'int' 1
|               `-ImplicitCastExpr 0x55adbc35f180 <col:26> 'int' <IntegralCast>
|                 `-ImplicitCastExpr 0x55adbc35f168 <col:26> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x55adbc35f148 <col:26> 'bool' lvalue ParmVar 0x55adbc35af48 'direction' 'bool'
`-CXXDestructorDecl 0x55adbc35e848 <line:136:9> col:9 implicit ~delta_transition 'void ()' inline default trivial noexcept-unevaluated 0x55adbc35e848

Layout: <CGRecordLayout
  LLVMType:%"struct.TCPRewriter::TCPFlow::delta_transition" = type { [2 x i32], [2 x i32], i64 }
  NonVirtualBaseLLVMType:%"struct.TCPRewriter::TCPFlow::delta_transition" = type { [2 x i32], [2 x i32], i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc357e70 <../elements/tcpudp/tcprewriter.hh:97:5, line:155:5> line:97:11 referenced class TCPFlow definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-public 'IPRewriterFlow'
|-CXXRecordDecl 0x55adbc357fc8 <col:5, col:11> col:11 implicit referenced class TCPFlow
|-AccessSpecDecl 0x55adbc358058 <col:45, col:51> col:45 public
|-CXXConstructorDecl 0x55adbc358408 <line:99:2, line:104:2> line:99:2 TCPFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55adbc358090 <col:10, col:27> col:27 used owner 'IPRewriterInput *'
| |-ParmVarDecl 0x55adbc358108 <col:34, col:50> col:50 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55adbc358180 <line:100:3, col:19> col:19 used rewritten_flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55adbc3581f8 <line:101:3, col:8> col:8 used guaranteed 'bool'
| |-ParmVarDecl 0x55adbc358270 <col:20, col:36> col:36 used expiry_j 'click_jiffies_t':'unsigned int'
| |-CXXCtorInitializer 'IPRewriterFlow'
| | `-CXXConstructExpr 0x55adbc35e3e8 <line:102:8, line:103:32> 'IPRewriterFlow' 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| |   |-ImplicitCastExpr 0x55adbc35e388 <line:102:23> 'IPRewriterInput *' <LValueToRValue>
| |   | `-DeclRefExpr 0x55adbc35db08 <col:23> 'IPRewriterInput *' lvalue ParmVar 0x55adbc358090 'owner' 'IPRewriterInput *'
| |   |-DeclRefExpr 0x55adbc35db28 <col:30> 'const IPFlowID' lvalue ParmVar 0x55adbc358108 'flowid' 'const IPFlowID &'
| |   |-DeclRefExpr 0x55adbc35db48 <col:38> 'const IPFlowID' lvalue ParmVar 0x55adbc358180 'rewritten_flowid' 'const IPFlowID &'
| |   |-ImplicitCastExpr 0x55adbc35e3a0 <line:103:9> 'uint8_t':'unsigned char' <IntegralCast>
| |   | `-IntegerLiteral 0x55adbc35db68 <col:9> 'int' 6
| |   |-ImplicitCastExpr 0x55adbc35e3b8 <col:12> 'bool' <LValueToRValue>
| |   | `-DeclRefExpr 0x55adbc35db88 <col:12> 'bool' lvalue ParmVar 0x55adbc3581f8 'guaranteed' 'bool'
| |   `-ImplicitCastExpr 0x55adbc35e3d0 <col:24> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |     `-DeclRefExpr 0x55adbc35dba8 <col:24> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55adbc358270 'expiry_j' 'click_jiffies_t':'unsigned int'
| |-CXXCtorInitializer Field 0x55adbc35b0d8 '_dt' 'TCPRewriter::TCPFlow::delta_transition *'
| | `-ImplicitCastExpr 0x55adbc35e4a8 <col:39> 'TCPRewriter::TCPFlow::delta_transition *' <NullToPointer>
| |   `-IntegerLiteral 0x55adbc35e468 <col:39> 'int' 0
| `-CompoundStmt 0x55adbc35e4f8 <col:42, line:104:2>
|-CXXDestructorDecl 0x55adbc358520 <line:106:2, line:111:2> line:106:2 used ~TCPFlow 'void () noexcept'
| `-CompoundStmt 0x55adbc35e9a8 <col:13, line:111:2>
|   `-WhileStmt 0x55adbc35e970 <line:107:6, line:110:6> has_var
|     |-DeclStmt 0x55adbc35e990 <line:107:13, col:35>
|     | `-VarDecl 0x55adbc35e600 <col:13, col:35> col:31 used x 'TCPRewriter::TCPFlow::delta_transition *' cinit
|     |   `-ImplicitCastExpr 0x55adbc35e6a8 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|     |     `-MemberExpr 0x55adbc35e678 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55adbc35b0d8
|     |       `-CXXThisExpr 0x55adbc35e668 <col:35> 'TCPRewriter::TCPFlow *' implicit this
|     |-ImplicitCastExpr 0x55adbc35e6f8 <col:31> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55adbc35e6e0 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|     |   `-DeclRefExpr 0x55adbc35e6c0 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55adbc35e600 'x' 'TCPRewriter::TCPFlow::delta_transition *'
|     `-CompoundStmt 0x55adbc35e950 <col:40, line:110:6>
|       |-BinaryOperator 0x55adbc35e7f0 <line:108:3, col:17> 'TCPRewriter::TCPFlow::delta_transition *' lvalue '='
|       | |-MemberExpr 0x55adbc35e720 <col:3> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55adbc35b0d8
|       | | `-CXXThisExpr 0x55adbc35e710 <col:3> 'TCPRewriter::TCPFlow *' implicit this
|       | `-CXXMemberCallExpr 0x55adbc35e7b8 <col:9, col:17> 'TCPRewriter::TCPFlow::delta_transition *'
|       |   `-MemberExpr 0x55adbc35e788 <col:9, col:12> '<bound member function type>' ->next 0x55adbc35ae98
|       |     `-ImplicitCastExpr 0x55adbc35e7d8 <col:9> 'const TCPRewriter::TCPFlow::delta_transition *' <NoOp>
|       |       `-ImplicitCastExpr 0x55adbc35e770 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|       |         `-DeclRefExpr 0x55adbc35e750 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55adbc35e600 'x' 'TCPRewriter::TCPFlow::delta_transition *'
|       `-CXXDeleteExpr 0x55adbc35e930 <line:109:3, col:10> 'void' Function 0x55adbbe3e0f8 'operator delete' 'void (void *) noexcept'
|         `-ImplicitCastExpr 0x55adbc35e830 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|           `-DeclRefExpr 0x55adbc35e810 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55adbc35e600 'x' 'TCPRewriter::TCPFlow::delta_transition *'
|-EnumDecl 0x55adbc358600 <line:113:2, line:118:2> line:113:2
| |-EnumConstantDecl 0x55adbc358700 <line:114:6, col:23> col:6 referenced s_forward_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55adbc358ae0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc3586e0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55adbc3586c0 <col:23> 'int' 1
| |-EnumConstantDecl 0x55adbc358790 <col:26, col:41> col:26 referenced s_reply_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55adbc358af8 <col:41> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc358770 <col:41> 'int' Int: 2
| |     `-IntegerLiteral 0x55adbc358750 <col:41> 'int' 2
| |-EnumConstantDecl 0x55adbc358880 <line:115:6, col:50> col:6 referenced s_both_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55adbc358b10 <col:20, col:50> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc358860 <col:20, col:50> 'int' Int: 3
| |     `-ParenExpr 0x55adbc358840 <col:20, col:50> 'int'
| |       `-BinaryOperator 0x55adbc358820 <col:21, col:38> 'int' '|'
| |         |-DeclRefExpr 0x55adbc3587e0 <col:21> 'int' EnumConstant 0x55adbc358700 's_forward_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |         `-DeclRefExpr 0x55adbc358800 <col:38> 'int' EnumConstant 0x55adbc358790 's_reply_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-EnumConstantDecl 0x55adbc358910 <line:116:6, col:23> col:6 referenced s_forward_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55adbc358b28 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc3588f0 <col:23> 'int' Int: 4
| |     `-IntegerLiteral 0x55adbc3588d0 <col:23> 'int' 4
| |-EnumConstantDecl 0x55adbc3589a0 <col:26, col:41> col:26 referenced s_reply_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55adbc358b40 <col:41> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55adbc358980 <col:41> 'int' Int: 8
| |     `-IntegerLiteral 0x55adbc358960 <col:41> 'int' 8
| `-EnumConstantDecl 0x55adbc358a90 <line:117:6, col:50> col:6 referenced s_both_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|   `-ImplicitCastExpr 0x55adbc358b58 <col:20, col:50> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55adbc358a70 <col:20, col:50> 'int' Int: 12
|       `-ParenExpr 0x55adbc358a50 <col:20, col:50> 'int'
|         `-BinaryOperator 0x55adbc358a30 <col:21, col:38> 'int' '|'
|           |-DeclRefExpr 0x55adbc3589f0 <col:21> 'int' EnumConstant 0x55adbc358910 's_forward_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|           `-DeclRefExpr 0x55adbc358a10 <col:38> 'int' EnumConstant 0x55adbc3589a0 's_reply_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|-CXXMethodDecl 0x55adbc358bb8 <line:119:2, line:121:2> line:119:7 used both_done 'bool () const'
| `-CompoundStmt 0x55adbc35ebc0 <col:25, line:121:2>
|   `-ReturnStmt 0x55adbc35ebb0 <line:120:6, col:40>
|     `-BinaryOperator 0x55adbc35eb90 <col:13, col:40> 'bool' '=='
|       |-ParenExpr 0x55adbc35eaa8 <col:13, col:35> 'int'
|       | `-BinaryOperator 0x55adbc35ea88 <col:14, col:24> 'int' '&'
|       |   |-ImplicitCastExpr 0x55adbc35ea58 <col:14> 'int' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x55adbc35ea40 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   |   `-MemberExpr 0x55adbc35e9f0 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55adbc308d78
|       |   |     `-ImplicitCastExpr 0x55adbc35e9d0 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
|       |   |       `-CXXThisExpr 0x55adbc35e9c0 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
|       |   `-ImplicitCastExpr 0x55adbc35ea70 <col:24> 'int' <IntegralCast>
|       |     `-DeclRefExpr 0x55adbc35ea20 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55adbc358880 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|       `-ImplicitCastExpr 0x55adbc35eb78 <col:40> 'int' <IntegralCast>
|         `-DeclRefExpr 0x55adbc35eac8 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55adbc358880 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|-CXXMethodDecl 0x55adbc358c78 <line:122:2, line:124:2> line:122:7 used both_data 'bool () const'
| `-CompoundStmt 0x55adbc35edd8 <col:25, line:124:2>
|   `-ReturnStmt 0x55adbc35edc8 <line:123:6, col:40>
|     `-BinaryOperator 0x55adbc35eda8 <col:13, col:40> 'bool' '=='
|       |-ParenExpr 0x55adbc35ecc0 <col:13, col:35> 'int'
|       | `-BinaryOperator 0x55adbc35eca0 <col:14, col:24> 'int' '&'
|       |   |-ImplicitCastExpr 0x55adbc35ec70 <col:14> 'int' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x55adbc35ec58 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   |   `-MemberExpr 0x55adbc35ec08 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55adbc308d78
|       |   |     `-ImplicitCastExpr 0x55adbc35ebe8 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
|       |   |       `-CXXThisExpr 0x55adbc35ebd8 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
|       |   `-ImplicitCastExpr 0x55adbc35ec88 <col:24> 'int' <IntegralCast>
|       |     `-DeclRefExpr 0x55adbc35ec38 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55adbc358a90 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|       `-ImplicitCastExpr 0x55adbc35ed90 <col:40> 'int' <IntegralCast>
|         `-DeclRefExpr 0x55adbc35ece0 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55adbc358a90 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|-CXXMethodDecl 0x55adbc358f40 <line:126:2, col:75> col:6 update_seqno_delta 'int (bool, tcp_seq_t, int32_t)'
| |-ParmVarDecl 0x55adbc358d28 <col:25, col:30> col:30 direction 'bool'
| |-ParmVarDecl 0x55adbc358da0 <col:41, col:51> col:51 old_seqno 'tcp_seq_t':'unsigned int'
| `-ParmVarDecl 0x55adbc358e18 <col:62, col:70> col:70 delta 'int32_t':'int'
|-CXXMethodDecl 0x55adbc359198 <line:127:2, col:53> col:12 new_seq 'tcp_seq_t (bool, tcp_seq_t) const'
| |-ParmVarDecl 0x55adbc359008 <col:20, col:25> col:25 direction 'bool'
| `-ParmVarDecl 0x55adbc359080 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
|-CXXMethodDecl 0x55adbc35a388 <line:128:2, col:53> col:12 new_ack 'tcp_seq_t (bool, tcp_seq_t) const'
| |-ParmVarDecl 0x55adbc359258 <col:20, col:25> col:25 direction 'bool'
| `-ParmVarDecl 0x55adbc35a2f0 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
|-CXXMethodDecl 0x55adbc35a5e0 <line:130:2, col:62> col:7 apply 'void (WritablePacket *, bool, unsigned int)'
| |-ParmVarDecl 0x55adbc35a448 <col:13, col:29> col:29 p 'WritablePacket *'
| |-ParmVarDecl 0x55adbc35a4c0 <col:32, col:37> col:37 direction 'bool'
| `-ParmVarDecl 0x55adbc35a540 <col:48, col:57> col:57 annos 'unsigned int'
|-CXXMethodDecl 0x55adbc35a838 <line:132:2, col:69> col:7 unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x55adbc35a6a8 <col:15, col:28> col:28 sa 'StringAccum &'
| |-ParmVarDecl 0x55adbc35a720 <col:32, col:37> col:37 direction 'bool'
| `-ParmVarDecl 0x55adbc35a798 <col:48, col:64> col:64 now 'click_jiffies_t':'unsigned int'
|-AccessSpecDecl 0x55adbc35a8f0 <line:134:7, col:14> col:7 private
|-CXXRecordDecl 0x55adbc35a918 <line:136:2, line:149:2> line:136:9 referenced struct delta_transition definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55adbc35aa38 <col:2, col:9> col:9 implicit referenced struct delta_transition
| |-FieldDecl 0x55adbc35ab68 <line:137:6, col:21> col:14 referenced delta 'int32_t [2]'
| |-FieldDecl 0x55adbc35ac58 <line:138:6, col:25> col:16 referenced trigger 'tcp_seq_t [2]'
| |-FieldDecl 0x55adbc35acb8 <line:139:6, col:16> col:16 referenced nextptr 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55adbc35ad70 <line:140:6, line:142:6> line:140:6 delta_transition 'void ()'
| | `-CompoundStmt 0x55adbc35ef20 <col:25, line:142:6>
| |   `-CallExpr 0x55adbc35eed0 <line:141:3, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55adbc35eeb8 <col:3> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55adbc35ee98 <col:3> 'void *(void *, int, size_t) throw()' lvalue Function 0x55adbbf4bc28 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55adbc35ef08 <col:10> 'void *' <BitCast>
| |     | `-CXXThisExpr 0x55adbc35ee38 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' this
| |     |-IntegerLiteral 0x55adbc35ee48 <col:16> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55adbc35ee78 <col:19, col:42> 'unsigned long' sizeof 'TCPRewriter::TCPFlow::delta_transition'
| |-CXXMethodDecl 0x55adbc35ae98 <line:143:6, line:145:6> line:143:24 used next 'TCPRewriter::TCPFlow::delta_transition *() const'
| | `-CompoundStmt 0x55adbc35f0d0 <col:37, line:145:6>
| |   `-ReturnStmt 0x55adbc35f0c0 <line:144:3, col:70>
| |     `-CXXReinterpretCastExpr 0x55adbc35f090 <col:10, col:70> 'TCPRewriter::TCPFlow::delta_transition *' reinterpret_cast<struct TCPRewriter::TCPFlow::delta_transition *> <IntegralToPointer>
| |       `-BinaryOperator 0x55adbc35f060 <col:47, col:69> 'unsigned long' '-'
| |         |-ImplicitCastExpr 0x55adbc35f048 <col:47> 'uintptr_t':'unsigned long' <LValueToRValue>
| |         | `-MemberExpr 0x55adbc35ef48 <col:47> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55adbc35acb8
| |         |   `-CXXThisExpr 0x55adbc35ef38 <col:47> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| |         `-ParenExpr 0x55adbc35f028 <col:57, col:69> 'unsigned long'
| |           `-BinaryOperator 0x55adbc35f008 <col:58, col:68> 'unsigned long' '&'
| |             |-ImplicitCastExpr 0x55adbc35efd8 <col:58> 'uintptr_t':'unsigned long' <LValueToRValue>
| |             | `-MemberExpr 0x55adbc35ef88 <col:58> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55adbc35acb8
| |             |   `-CXXThisExpr 0x55adbc35ef78 <col:58> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| |             `-ImplicitCastExpr 0x55adbc35eff0 <col:68> 'unsigned long' <IntegralCast>
| |               `-IntegerLiteral 0x55adbc35efb8 <col:68> 'int' 3
| |-CXXMethodDecl 0x55adbc35b008 <line:146:6, line:148:6> line:146:11 used has_trigger 'bool (bool) const'
| | |-ParmVarDecl 0x55adbc35af48 <col:23, col:28> col:28 used direction 'bool'
| | `-CompoundStmt 0x55adbc35f250 <col:45, line:148:6>
| |   `-ReturnStmt 0x55adbc35f240 <line:147:3, col:35>
| |     `-ImplicitCastExpr 0x55adbc35f228 <col:10, col:35> 'bool' <IntegralToBoolean>
| |       `-BinaryOperator 0x55adbc35f208 <col:10, col:35> 'unsigned long' '&'
| |         |-ImplicitCastExpr 0x55adbc35f1d8 <col:10> 'uintptr_t':'unsigned long' <LValueToRValue>
| |         | `-MemberExpr 0x55adbc35f0f8 <col:10> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55adbc35acb8
| |         |   `-CXXThisExpr 0x55adbc35f0e8 <col:10> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| |         `-ImplicitCastExpr 0x55adbc35f1f0 <col:20, col:35> 'unsigned long' <IntegralCast>
| |           `-ParenExpr 0x55adbc35f1b8 <col:20, col:35> 'int'
| |             `-BinaryOperator 0x55adbc35f198 <col:21, col:26> 'int' '<<'
| |               |-IntegerLiteral 0x55adbc35f128 <col:21> 'int' 1
| |               `-ImplicitCastExpr 0x55adbc35f180 <col:26> 'int' <IntegralCast>
| |                 `-ImplicitCastExpr 0x55adbc35f168 <col:26> 'bool' <LValueToRValue>
| |                   `-DeclRefExpr 0x55adbc35f148 <col:26> 'bool' lvalue ParmVar 0x55adbc35af48 'direction' 'bool'
| `-CXXDestructorDecl 0x55adbc35e848 <line:136:9> col:9 implicit ~delta_transition 'void ()' inline default trivial noexcept-unevaluated 0x55adbc35e848
|-FieldDecl 0x55adbc35b0d8 <line:151:2, col:20> col:20 referenced _dt 'TCPRewriter::TCPFlow::delta_transition *'
`-CXXMethodDecl 0x55adbc35b318 <line:153:2, col:67> col:7 apply_sack 'void (bool, click_tcp *, int)'
  |-ParmVarDecl 0x55adbc35b138 <col:18, col:23> col:23 direction 'bool'
  |-ParmVarDecl 0x55adbc35b1b0 <col:34, col:45> col:45 tcp 'click_tcp *'
  `-ParmVarDecl 0x55adbc35b230 <col:50, col:54> col:54 transport_len 'int'

Layout: <CGRecordLayout
  LLVMType:%"class.TCPRewriter::TCPFlow" = type { %class.IPRewriterFlow, %"struct.TCPRewriter::TCPFlow::delta_transition"* }
  NonVirtualBaseLLVMType:%"class.TCPRewriter::TCPFlow" = type { %class.IPRewriterFlow, %"struct.TCPRewriter::TCPFlow::delta_transition"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55adbc3616f0 <../elements/tcpudp/udprewriter.hh:165:5, line:180:5> line:165:11 referenced class UDPFlow definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'IPRewriterFlow'
|-CXXRecordDecl 0x55adbc361848 <col:5, col:11> col:11 implicit referenced class UDPFlow
|-AccessSpecDecl 0x55adbc3618d8 <col:45, col:51> col:45 public
|-CXXConstructorDecl 0x55adbc361d28 <line:167:2, line:172:2> line:167:2 UDPFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, int, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55adbc361910 <col:10, col:27> col:27 used owner 'IPRewriterInput *'
| |-ParmVarDecl 0x55adbc361988 <col:34, col:50> col:50 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55adbc361a00 <line:168:3, col:19> col:19 used rewritten_flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55adbc361a80 <col:37, col:41> col:41 used ip_p 'int'
| |-ParmVarDecl 0x55adbc361af8 <line:169:3, col:8> col:8 used guaranteed 'bool'
| |-ParmVarDecl 0x55adbc361b70 <col:20, col:36> col:36 used expiry_j 'click_jiffies_t':'unsigned int'
| |-CXXCtorInitializer 'IPRewriterFlow'
| | `-CXXConstructExpr 0x55adbc36d978 <line:170:8, line:171:35> 'IPRewriterFlow' 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| |   |-ImplicitCastExpr 0x55adbc36d900 <line:170:23> 'IPRewriterInput *' <LValueToRValue>
| |   | `-DeclRefExpr 0x55adbc36d7e8 <col:23> 'IPRewriterInput *' lvalue ParmVar 0x55adbc361910 'owner' 'IPRewriterInput *'
| |   |-DeclRefExpr 0x55adbc36d808 <col:30> 'const IPFlowID' lvalue ParmVar 0x55adbc361988 'flowid' 'const IPFlowID &'
| |   |-DeclRefExpr 0x55adbc36d828 <col:38> 'const IPFlowID' lvalue ParmVar 0x55adbc361a00 'rewritten_flowid' 'const IPFlowID &'
| |   |-ImplicitCastExpr 0x55adbc36d930 <line:171:9> 'uint8_t':'unsigned char' <IntegralCast>
| |   | `-ImplicitCastExpr 0x55adbc36d918 <col:9> 'int' <LValueToRValue>
| |   |   `-DeclRefExpr 0x55adbc36d848 <col:9> 'int' lvalue ParmVar 0x55adbc361a80 'ip_p' 'int'
| |   |-ImplicitCastExpr 0x55adbc36d948 <col:15> 'bool' <LValueToRValue>
| |   | `-DeclRefExpr 0x55adbc36d868 <col:15> 'bool' lvalue ParmVar 0x55adbc361af8 'guaranteed' 'bool'
| |   `-ImplicitCastExpr 0x55adbc36d960 <col:27> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |     `-DeclRefExpr 0x55adbc36d888 <col:27> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55adbc361b70 'expiry_j' 'click_jiffies_t':'unsigned int'
| `-CompoundStmt 0x55adbc36da00 <col:37, line:172:2>
|-CXXMethodDecl 0x55adbc361e48 <line:174:2, line:176:2> line:174:7 used streaming 'bool () const'
| `-CompoundStmt 0x55adbc36daf0 <col:25, line:176:2>
|   `-ReturnStmt 0x55adbc36dae0 <line:175:6, col:23>
|     `-BinaryOperator 0x55adbc36dac0 <col:13, col:23> 'bool' '>'
|       |-ImplicitCastExpr 0x55adbc36daa8 <col:13> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x55adbc36da90 <col:13> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   `-MemberExpr 0x55adbc36da40 <col:13> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55adbc308d78
|       |     `-ImplicitCastExpr 0x55adbc36da20 <col:13> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
|       |       `-CXXThisExpr 0x55adbc36da10 <col:13> 'const UDPRewriter::UDPFlow *' implicit this
|       `-IntegerLiteral 0x55adbc36da70 <col:23> 'int' 6
`-CXXMethodDecl 0x55adbc362090 <line:178:2, col:62> col:7 apply 'void (WritablePacket *, bool, unsigned int)'
  |-ParmVarDecl 0x55adbc361ef8 <col:13, col:29> col:29 p 'WritablePacket *'
  |-ParmVarDecl 0x55adbc361f70 <col:32, col:37> col:37 direction 'bool'
  `-ParmVarDecl 0x55adbc361ff0 <col:48, col:57> col:57 annos 'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%"class.UDPRewriter::UDPFlow" = type { %class.IPRewriterFlow }
  NonVirtualBaseLLVMType:%"class.UDPRewriter::UDPFlow" = type { %class.IPRewriterFlow }
  IsZeroInitializable:1
  BitFields:[
]>
