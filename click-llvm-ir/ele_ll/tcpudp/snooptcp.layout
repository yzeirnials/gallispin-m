
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct SnoopTCP::SCacheEntry
         0 |   class Packet * packet
         8 |   unsigned int seq
        12 |   unsigned int size
        16 |   class Timestamp snd_time
        16 |     union Timestamp::rep_t _t
        16 |       int64_t x
        24 |   int num_rxmit
        28 |   int sender_rxmit
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b17cd38 prev 0x56222b1744d8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56222b17ce30 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x56222b17cec0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x56222b17cf38 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x56222b17cff8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x56222b17d0c0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x56222b17d238 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x56222b17d170 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x56222b17d2e0 <col:24>
| `-OptimizeNoneAttr 0x56222b17d338 <col:34>
|-CXXMethodDecl 0x56222b17d380 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x56222b17d638 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x56222b17d430 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56222b17d4a8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x56222b17d528 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x56222b17d6f0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x56222b17d728 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x56222b17d790 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x56222b17d818 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x56222b17db38 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x56222b17d8d0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56222b17d948 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x56222b17d9c0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x56222b17da40 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x56222b17dc50 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x56222b1855c8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56222b1855c8
| `-ParmVarDecl 0x56222b1856d8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x56222b185778 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56222b185778
| `-ParmVarDecl 0x56222b185888 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x56222b2790f0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b16fd50 prev 0x56222b16fad0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56222b16fe48 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x56222b16fed8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x56222b16ff38 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x56222b170028 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x56222b170128 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x56222b1702f8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x56222b1701a8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x56222b170220 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x56222b170488 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x56222b1703c0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x56222b170530 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x56222b170668 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x56222b1705a0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x56222b170808 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x56222b170748 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x56222b1709a8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x56222b1708e8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x56222b170a50 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x56222b170b50 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x56222b170c30 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b170b30 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x56222b170b10 <col:26> 'int' 1
| `-EnumConstantDecl 0x56222b170be0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x56222b170c48 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b170bc0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x56222b170ba0 <col:44> 'int' 2
|-CXXMethodDecl 0x56222b170d90 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x56222b170c78 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56222b170cf8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x56222b170ee8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x56222b170e58 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x56222b171128 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x56222b170fa8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x56222b171020 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x56222b1711d8 <col:20>
| `-OptimizeNoneAttr 0x56222b171230 <col:30>
|-CXXMethodDecl 0x56222b171338 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x56222b171270 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x56222b1713e0 <col:20>
| `-OptimizeNoneAttr 0x56222b171438 <col:30>
|-CXXMethodDecl 0x56222b171488 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x56222b171550 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x56222b171668 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x56222b1716f0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x56222b171778 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x56222b171800 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x56222b171888 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x56222b171918 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x56222b1719d8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x56222b171a60 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x56222b171ae8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x56222b171b70 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x56222b171bf8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x56222b171c80 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x56222b171d10 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x56222b171dd0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x56222b171e60 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x56222b171fb0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x56222b171f18 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x56222b172140 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x56222b172070 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x56222b1723f0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x56222b1721f8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x56222b172278 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x56222b1722f8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x56222b1724a8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x56222b1725b0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56222b172840 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b172590 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x56222b172570 <col:33> 'int' 0
| |-EnumConstantDecl 0x56222b172640 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56222b172858 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b172620 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x56222b172600 <col:32> 'int' 20
| |-EnumConstantDecl 0x56222b1726d0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56222b172870 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b1726b0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x56222b172690 <col:38> 'int' 90
| |-EnumConstantDecl 0x56222b172760 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56222b172888 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b172740 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x56222b172720 <col:35> 'int' 100
| `-EnumConstantDecl 0x56222b1727f0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x56222b1728a0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b1727d0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x56222b1727b0 <col:32> 'int' 2000
|-CXXMethodDecl 0x56222b1728e0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x56222b172d20 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56222b172b90 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x56222b172c08 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56222b172df0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x56222b172f70 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x56222b172ea0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56222b173178 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56222b173028 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x56222b1730a0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56222b173278 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x56222b173318 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x56222b1733e0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x56222b173470 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x56222b1736a0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b173450 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x56222b173430 <col:36> 'int' EnumConstant 0x56222b1733e0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x56222b1734c0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56222b173510 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56222b173560 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56222b1735b0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56222b173600 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x56222b173650 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x56222b173788 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x56222b1736c8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x56222b173850 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x56222b173910 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x56222b1739d0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x56222b173a90 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x56222b173ba8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x56222b173c70 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x56222b173df0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x56222b173d20 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x56222b173f18 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56222b174118 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x56222b173fc8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x56222b174048 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x56222b181a68 <col:54, line:127:5>
|   |-ParenExpr 0x56222b181918 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x56222b1818e8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x56222b1815d8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56222b1815b0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x56222b181598 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x56222b181580 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x56222b181550 <col:31> 'Router *' lvalue ->_router 0x56222b17f430
|   |   |         `-CXXThisExpr 0x56222b181540 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56222b181638 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56222b181618 <col:48> 'int' 0
|   |   `-CallExpr 0x56222b181848 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x56222b181830 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b181810 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56222b181888 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b1816a8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x56222b1818a0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b1816c8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x56222b1818b8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56222b181700 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x56222b1818d0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56222b1817f8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56222b1817e0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56222b181798 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x56222b1819b0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x56222b181948 <col:9> 'Router *' lvalue ->_router 0x56222b17f430
|   | | `-CXXThisExpr 0x56222b181938 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x56222b181998 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56222b181978 <col:19> 'Router *' lvalue ParmVar 0x56222b173fc8 'r' 'Router *'
|   `-BinaryOperator 0x56222b181a48 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x56222b1819e0 <col:9> 'int' lvalue ->_eindex 0x56222b17f498
|     | `-CXXThisExpr 0x56222b1819d0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x56222b181a30 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x56222b181a10 <col:19> 'int' lvalue ParmVar 0x56222b174048 'eindex' 'int'
|-CXXMethodDecl 0x56222b1742a0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x56222b1741d8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x56222b174370 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x56222b174438 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x56222b1744d8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x56222b174728 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x56222b1745a0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x56222b174620 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x56222b1747d8 <col:20>
| `-OptimizeNoneAttr 0x56222b174830 <col:30>
|-CXXMethodDecl 0x56222b174938 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56222b174870 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x56222b1749e0 <col:20>
| `-OptimizeNoneAttr 0x56222b174a38 <col:30>
|-CXXMethodDecl 0x56222b174b08 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56222b174a78 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x56222b174bb0 <col:20>
| `-OptimizeNoneAttr 0x56222b174c08 <col:30>
|-CXXMethodDecl 0x56222b174d98 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x56222b174c40 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x56222b174cc0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x56222b174f28 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56222b174e60 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56222b175078 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56222b174fe8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56222b1751c8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56222b175138 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56222b175318 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56222b175288 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56222b1755d8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x56222b1753d0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x56222b175450 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x56222b1754f8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x56222b1756b0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x56222b175770 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x56222b175a40 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56222b1758f0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x56222b175968 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x56222b175b68 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x56222b175d40 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x56222b175c20 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x56222b175ca0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x56222b175f28 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x56222b175e08 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x56222b175e88 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x56222b176298 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56222b175fe8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56222b176060 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56222b1760e0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56222b181050 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56222b181030 <col:106> 'int' 0
| `-ParmVarDecl 0x56222b176158 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56222b181088 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56222b181068 <col:126> 'int' 0
|-CXXMethodDecl 0x56222b176638 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56222b176368 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56222b176400 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56222b176480 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x56222b1764f8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56222b1810c0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56222b1810a0 <col:114> 'int' 0
|-CXXMethodDecl 0x56222b1769c8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56222b176710 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x56222b176788 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56222b176808 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x56222b1810d8 <col:96> 'int' 0
| `-ParmVarDecl 0x56222b176880 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56222b181118 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56222b1810f8 <col:116> 'int' 0
|-CXXMethodDecl 0x56222b176d48 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56222b176a98 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56222b176b10 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56222b176b90 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56222b181150 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56222b181130 <col:109> 'int' 0
| `-ParmVarDecl 0x56222b176c08 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56222b181188 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56222b181168 <col:129> 'int' 0
|-CXXMethodDecl 0x56222b1770c8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56222b176e18 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56222b176e90 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56222b176f10 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x56222b176f88 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56222b1811c0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56222b1811a0 <col:117> 'int' 0
|-CXXMethodDecl 0x56222b177458 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56222b1771a0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b177218 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56222b177298 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x56222b1811d8 <col:99> 'int' 0
| `-ParmVarDecl 0x56222b177310 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56222b181218 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56222b1811f8 <col:119> 'int' 0
|-CXXMethodDecl 0x56222b177878 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x56222b177528 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56222b1775a8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56222b177620 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56222b1776a0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56222b181250 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56222b181230 <col:108> 'int' 0
| `-ParmVarDecl 0x56222b177720 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x56222b181288 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x56222b181268 <col:141> 'int' 0
|-CXXMethodDecl 0x56222b177c98 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56222b177950 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56222b1779d0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56222b177a48 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56222b177ac8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x56222b177b48 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56222b1812a0 <col:121> 'int' 0
|-CXXMethodDecl 0x56222b1780c8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56222b177d78 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x56222b177df8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x56222b177e70 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56222b177ef0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x56222b1812c0 <col:98> 'int' 0
| `-ParmVarDecl 0x56222b177f70 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56222b1812e0 <col:123> 'int' 0
|-CXXMethodDecl 0x56222b178390 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x56222b1781a0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56222b178220 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x56222b1782a0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x56222b181300 <col:80> 'int' 0
|-EnumDecl 0x56222b178448 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x56222b178550 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56222b1787e0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b178530 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x56222b178510 <col:42> 'int' 1
| |-EnumConstantDecl 0x56222b1785e0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56222b1787f8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b1785c0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x56222b1785a0 <col:40> 'int' 2
| |-EnumConstantDecl 0x56222b178670 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56222b178810 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b178650 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x56222b178630 <col:44> 'int' 4
| |-EnumConstantDecl 0x56222b178700 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56222b178828 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b1786e0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x56222b1786c0 <col:36> 'int' 7
| `-EnumConstantDecl 0x56222b178790 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x56222b178840 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b178770 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x56222b178750 <col:34> 'int' 6
|-CXXMethodDecl 0x56222b178af8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x56222b178868 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x56222b178908 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x56222b178988 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x56222b178a00 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x56222b1813b8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56222b1813a0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x56222b181388 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56222b181368 <col:98, col:105> 'String' (CXXTemporary 0x56222b181368)
|           `-CXXTemporaryObjectExpr 0x56222b181330 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x56222b178d98 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x56222b178bc8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56222b178c40 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x56222b178cb8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56222b181468 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56222b181450 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56222b181438 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56222b181418 <col:94, col:101> 'String' (CXXTemporary 0x56222b181418)
| |         `-CXXTemporaryObjectExpr 0x56222b1813e0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x56222b181c50 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x56222b181bc8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x56222b181b98 <col:9> '<bound member function type>' ->add_task_handlers 0x56222b178af8
|     | `-CXXThisExpr 0x56222b181b88 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56222b181c08 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56222b181b08 <col:27> 'Task *' lvalue ParmVar 0x56222b178bc8 'task' 'Task *'
|     |-ImplicitCastExpr 0x56222b181c20 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x56222b181b28 <col:33> 'NotifierSignal *' lvalue ParmVar 0x56222b178c40 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x56222b181c38 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56222b181b48 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56222b178790 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56222b181b68 <col:62> 'const String' lvalue ParmVar 0x56222b178cb8 'prefix' 'const String &'
|-CXXMethodDecl 0x56222b178fa8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x56222b178e60 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56222b178ed8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56222b181518 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56222b181500 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56222b1814e8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56222b1814c8 <col:70, col:77> 'String' (CXXTemporary 0x56222b1814c8)
| |         `-CXXTemporaryObjectExpr 0x56222b181490 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x56222b181e28 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x56222b181da0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x56222b181d70 <col:9> '<bound member function type>' ->add_task_handlers 0x56222b178af8
|     | `-CXXThisExpr 0x56222b181d60 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56222b181de0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56222b181ce0 <col:27> 'Task *' lvalue ParmVar 0x56222b178e60 'task' 'Task *'
|     |-ImplicitCastExpr 0x56222b181df8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x56222b181d00 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x56222b181e10 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56222b181d20 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56222b178790 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56222b181d40 <col:57> 'const String' lvalue ParmVar 0x56222b178ed8 'prefix' 'const String &'
|-CXXMethodDecl 0x56222b179288 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x56222b179070 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b1790f0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56222b179168 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x56222b179538 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x56222b179358 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b1793d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56222b179458 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x56222b179828 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56222b179608 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b179688 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56222b179700 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x56222b179ad8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x56222b1798f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b179978 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56222b1799f8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x56222b179d88 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x56222b179ba8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b179c28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56222b179ca8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x56222b17a038 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x56222b179e58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b179ed8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56222b179f50 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x56222b17a2e8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x56222b17a108 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b17a188 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56222b17a208 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x56222b17a5f8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x56222b17a410 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b17a490 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56222b17a510 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x56222b17a8d8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x56222b17a6c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b17a748 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56222b17a7f0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x56222b17abb8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x56222b17a9a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b17aa28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56222b17aad0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x56222b17ae20 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56222b17ac88 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56222b17ad08 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56222b17ad80 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x56222b17b0c8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x56222b17aef0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56222b17af70 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56222b17afe8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x56222b17b378 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x56222b17b198 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b17b218 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56222b17b298 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x56222b17b628 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x56222b17b448 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b17b4c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56222b17b540 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x56222b17b8d8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x56222b17b6f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b17b778 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56222b17b7f0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x56222b17bba8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x56222b17b9a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b17ba28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56222b17bac8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x56222b17bed8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x56222b17bc78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56222b17bcf8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x56222b17bd70 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x56222b17bde8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56222b181530 <col:93> 'bool' false
|-CXXMethodDecl 0x56222b17c0c0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56222b17bfa8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x56222b17c028 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x56222b17c298 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56222b17c180 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x56222b17c200 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x56222b17c578 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56222b17c358 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x56222b17c3d0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x56222b17c450 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x56222b17c4c8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x56222b17c868 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56222b17c648 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x56222b17c6c0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x56222b17c740 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x56222b17c7b8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x56222b17caa0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x56222b17c940 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x56222b17c9c0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x56222b17cc88 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x56222b17cb68 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x56222b17cbe8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x56222b17cd38 prev 0x56222b1744d8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56222b17ce30 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x56222b17cec0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x56222b17cf38 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x56222b17cff8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x56222b17d0c0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x56222b17d238 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x56222b17d170 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x56222b17d2e0 <col:24>
| | `-OptimizeNoneAttr 0x56222b17d338 <col:34>
| |-CXXMethodDecl 0x56222b17d380 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x56222b17d638 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x56222b17d430 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56222b17d4a8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x56222b17d528 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x56222b17d6f0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x56222b17d728 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x56222b17d790 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x56222b17d818 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x56222b17db38 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x56222b17d8d0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56222b17d948 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x56222b17d9c0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x56222b17da40 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x56222b17dc50 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x56222b1855c8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56222b1855c8
| | `-ParmVarDecl 0x56222b1856d8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x56222b185778 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56222b185778
| | `-ParmVarDecl 0x56222b185888 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x56222b2790f0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56222b17dcc8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x56222b17dd68 <col:38> "" ""
|-CXXMethodDecl 0x56222b17ddf8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x56222b17de98 <col:44> "" ""
|-AccessSpecDecl 0x56222b17df08 <line:260:3, col:10> col:3 private
|-EnumDecl 0x56222b17df30 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x56222b17e030 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x56222b17e080 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b17e010 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x56222b17dff0 <col:27> 'int' 4
|-FieldDecl 0x56222b17e138 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x56222b17e2e8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x56222b17e3a0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x56222b17f430 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x56222b17f498 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x56222b17f5e8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x56222b17f528 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x56222b17f798 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x56222b17f6a8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x56222b17f978 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x56222b17f858 <col:20> col:23 'int'
| `-ParmVarDecl 0x56222b17f8d8 <col:25> col:28 'int'
|-CXXMethodDecl 0x56222b17fc20 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x56222b17fa40 <col:23> col:26 'int'
| |-ParmVarDecl 0x56222b17fac0 <col:28> col:31 'int'
| `-ParmVarDecl 0x56222b17fb38 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x56222b17fcd8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x56222b17fda0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x56222b17fdf0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x56222b17fe40 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x56222b180020 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x56222b17fed0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x56222b17ff48 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56222b1802c8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x56222b1800e8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x56222b180168 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x56222b1801e0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x56222b1804e8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x56222b180398 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x56222b180418 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x56222b180820 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x56222b1805a8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x56222b180628 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x56222b1806a0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x56222b180720 <col:57> col:60 'int'
|-CXXMethodDecl 0x56222b180a08 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56222b1808f0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x56222b180970 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x56222b180b58 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x56222b180ac8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x56222b180ed8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x56222b180c18 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x56222b180c98 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x56222b180d10 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x56222b180d90 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x56222b180ff0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashMap<class IPFlowID, void *>
         0 |   struct HashMap<class IPFlowID, void *>::Elt ** _buckets
         8 |   size_t _nbuckets
        16 |   void * _default_value
        24 |   size_t _n
        32 |   size_t _capacity
        40 |   class HashMap_Arena * _arena
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashMap<class IPFlowID, struct SnoopTCP::PCB *>
         0 |   class HashMap<class IPFlowID, void *> (base)
         0 |     struct HashMap<class IPFlowID, void *>::Elt ** _buckets
         8 |     size_t _nbuckets
        16 |     void * _default_value
        24 |     size_t _n
        32 |     size_t _capacity
        40 |     class HashMap_Arena * _arena
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class SnoopTCP
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class HashMap<class IPFlowID, struct SnoopTCP::PCB *> _map
       112 |     class HashMap<class IPFlowID, void *> (base)
       112 |       struct HashMap<class IPFlowID, void *>::Elt ** _buckets
       120 |       size_t _nbuckets
       128 |       void * _default_value
       136 |       size_t _n
       144 |       size_t _capacity
       152 |       class HashMap_Arena * _arena
           | [sizeof=160, dsize=160, align=8,
           |  nvsize=160, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashMap_Arena
         0 |   struct HashMap_Arena::Link * _free
         8 |   char * _cur_buffer
        16 |   int _buffer_pos
        20 |   uint32_t _element_size
        24 |   char ** _buffers
        32 |   int _nbuffers
        36 |   int _buffers_cap
        40 |   uint32_t _refcount
        44 |   _Bool _detached
           | [sizeof=48, dsize=45, align=8,
           |  nvsize=45, nvalign=8]

*** Dumping AST Record Layout
         0 | struct HashMap_Arena::Link
         0 |   struct HashMap_Arena::Link * next
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b1d4238 <../dummy_inc/click/bighashmap_arena.hh:21:5, line:23:5> line:21:12 referenced struct Link definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56222b1d4358 <col:5, col:12> col:12 implicit referenced struct Link
`-FieldDecl 0x56222b1d4428 <line:22:2, col:8> col:8 referenced next 'HashMap_Arena::Link *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap_Arena::Link" = type { %"struct.HashMap_Arena::Link"* }
  NonVirtualBaseLLVMType:%"struct.HashMap_Arena::Link" = type { %"struct.HashMap_Arena::Link"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b1d39b0 prev 0x56222b0f4768 <../dummy_inc/click/bighashmap_arena.hh:6:1, line:48:1> line:6:7 referenced class HashMap_Arena definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56222b1d3aa8 <col:1, col:7> col:7 implicit referenced class HashMap_Arena
|-AccessSpecDecl 0x56222b1d3b38 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x56222b1d3c18 <line:8:5, col:40> col:5 HashMap_Arena 'void (uint32_t)'
| `-ParmVarDecl 0x56222b1d3b70 <col:19, col:28> col:28 element_size 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b1d3ce8 <line:10:5, col:31> col:10 referenced use 'void ()'
| `-CompoundStmt 0x56222b1d4fb8 <col:16, col:31>
|   `-UnaryOperator 0x56222b1d4fa0 <col:18, col:27> 'uint32_t':'unsigned int' postfix '++'
|     `-MemberExpr 0x56222b1d4f70 <col:18> 'uint32_t':'unsigned int' lvalue ->_refcount 0x56222b1d48d0
|       `-CXXThisExpr 0x56222b1d4f60 <col:18> 'HashMap_Arena *' implicit this
|-CXXMethodDecl 0x56222b1d3da8 <line:11:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x56222b1d3e98 <line:13:5, col:47> col:10 detached 'bool () const'
| `-CompoundStmt 0x56222b1d5038 <col:27, col:47>
|   `-ReturnStmt 0x56222b1d5028 <col:29, col:36>
|     `-ImplicitCastExpr 0x56222b1d5010 <col:36> 'bool' <LValueToRValue>
|       `-MemberExpr 0x56222b1d4fe0 <col:36> 'const bool' lvalue ->_detached 0x56222b1d4930
|         `-CXXThisExpr 0x56222b1d4fd0 <col:36> 'const HashMap_Arena *' implicit this
|-CXXMethodDecl 0x56222b1d3f58 <line:14:5, col:39> col:10 detach 'void ()'
| `-CompoundStmt 0x56222b1d50c0 <col:19, col:39>
|   `-BinaryOperator 0x56222b1d50a0 <col:21, col:33> 'bool' lvalue '='
|     |-MemberExpr 0x56222b1d5060 <col:21> 'bool' lvalue ->_detached 0x56222b1d4930
|     | `-CXXThisExpr 0x56222b1d5050 <col:21> 'HashMap_Arena *' implicit this
|     `-CXXBoolLiteralExpr 0x56222b1d5090 <col:33> 'bool' true
|-CXXMethodDecl 0x56222b1d4020 <line:16:5, col:17> col:11 alloc 'void *()'
|-CXXMethodDecl 0x56222b1d4168 <line:17:5, col:21> col:10 free 'void (void *)'
| `-ParmVarDecl 0x56222b1d40d8 <col:15, col:20> col:21 'void *'
|-AccessSpecDecl 0x56222b1d4210 <line:19:3, col:10> col:3 private
|-CXXRecordDecl 0x56222b1d4238 <line:21:5, line:23:5> line:21:12 referenced struct Link definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56222b1d4358 <col:5, col:12> col:12 implicit referenced struct Link
| `-FieldDecl 0x56222b1d4428 <line:22:2, col:8> col:8 referenced next 'HashMap_Arena::Link *'
|-FieldDecl 0x56222b1d44a0 <line:24:5, col:11> col:11 referenced _free 'HashMap_Arena::Link *'
|-EnumDecl 0x56222b1d44f0 <line:26:5, col:28> col:5
| `-EnumConstantDecl 0x56222b1d45f0 <col:12, col:24> col:12 NELEMENTS 'HashMap_Arena::(anonymous enum at ../dummy_inc/click/bighashmap_arena.hh:26:5)'
|   `-ImplicitCastExpr 0x56222b1d4640 <col:24> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b1d45d0 <col:24> 'int' Int: 127
|       `-IntegerLiteral 0x56222b1d45b0 <col:24> 'int' 127
|-FieldDecl 0x56222b1d4670 <line:28:5, col:11> col:11 referenced _cur_buffer 'char *'
|-FieldDecl 0x56222b1d46d8 <line:29:5, col:9> col:9 referenced _buffer_pos 'int'
|-FieldDecl 0x56222b1d4738 <line:31:5, col:14> col:14 referenced _element_size 'uint32_t':'unsigned int'
|-FieldDecl 0x56222b1d47a0 <line:33:5, col:12> col:12 _buffers 'char **'
|-FieldDecl 0x56222b1d4808 <line:34:5, col:9> col:9 _nbuffers 'int'
|-FieldDecl 0x56222b1d4870 <line:35:5, col:9> col:9 _buffers_cap 'int'
|-FieldDecl 0x56222b1d48d0 <line:37:5, col:14> col:14 referenced _refcount 'uint32_t':'unsigned int'
|-FieldDecl 0x56222b1d4930 <line:38:5, col:10> col:10 referenced _detached 'bool'
|-CXXConstructorDecl 0x56222b1d4a78 <line:40:5, col:40> col:5 HashMap_Arena 'void (const HashMap_Arena &)'
| `-ParmVarDecl 0x56222b1d49b8 <col:19, col:39> col:40 'const HashMap_Arena &'
|-CXXDestructorDecl 0x56222b1d4b70 <line:41:5, col:20> col:5 used ~HashMap_Arena 'void () noexcept'
|-CXXMethodDecl 0x56222b1d4d58 <line:42:5, col:51> col:20 operator= 'HashMap_Arena &(const HashMap_Arena &)'
| `-ParmVarDecl 0x56222b1d4c60 <col:30, col:50> col:51 'const HashMap_Arena &'
|-CXXMethodDecl 0x56222b1d4e28 <line:44:5, col:22> col:11 used hard_alloc 'void *()'
`-FriendDecl 0x56222b1d4f20 <line:46:5, col:19> col:12 'struct Link':'HashMap_Arena::Link'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap_Arena = type <{ %"struct.HashMap_Arena::Link"*, i8*, i32, i32, i8**, i32, i32, i32, i8, [3 x i8] }>
  NonVirtualBaseLLVMType:%class.HashMap_Arena.base = type <{ %"struct.HashMap_Arena::Link"*, i8*, i32, i32, i8**, i32, i32, i32, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56222b1ff020 <../dummy_inc/click/hashmap.hh:228:1, line:319:1> line:229:7 class HashMap definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'IPFlowID'
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x56222b1ff4e0 prev 0x56222b1ff020 <col:1, col:7> col:7 implicit class HashMap
|-AccessSpecDecl 0x56222b1ff570 <col:28, col:34> col:28 public
|-TypedefDecl 0x56222b1ff5a8 <line:231:5, col:15> col:15 key_type 'IPFlowID':'IPFlowID'
| `-SubstTemplateTypeParmType 0x56222b1ff220 'IPFlowID' sugar
|   |-TemplateTypeParmType 0x56222b1b06d0 'K' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56222b1b0680 'K'
|   `-RecordType 0x56222b18d140 'IPFlowID'
|     `-CXXRecord 0x56222b18d0a8 'IPFlowID'
|-TypedefDecl 0x56222b1ff600 <line:232:5, col:19> col:19 mapped_type 'void *'
| `-PointerType 0x56222ac0dce0 'void *'
|   `-BuiltinType 0x56222ac0d4e0 'void'
|-CXXRecordDecl 0x56222b1ff658 <line:233:5, col:12> col:12 struct Pair
|-CXXConstructorDecl 0x56222b1ff758 <line:235:3, col:11> col:3 HashMap 'void ()'
|-CXXConstructorDecl 0x56222b1ff930 <line:236:3, col:54> col:12 HashMap 'void (void *, HashMap_ArenaFactory *)'
| |-ParmVarDecl 0x56222b1ff810 <col:20, col:25> col:26 'void *'
| `-ParmVarDecl 0x56222b1ff878 <col:28, col:53> col:51 'HashMap_ArenaFactory *'
|-CXXConstructorDecl 0x56222b1ffc28 <line:237:3, col:37> col:3 HashMap 'void (const HashMap<IPFlowID, void *> &)'
| `-ParmVarDecl 0x56222b1ffb18 <col:11, col:36> col:37 'const HashMap<IPFlowID, void *> &'
|-CXXDestructorDecl 0x56222b1ffd10 <line:238:3, col:12> col:3 ~HashMap 'void () noexcept'
|-CXXMethodDecl 0x56222b1ffe90 <line:240:3, col:40> col:8 set_arena 'void (HashMap_ArenaFactory *)'
| `-ParmVarDecl 0x56222b1ffe00 <col:18, col:39> col:40 'HashMap_ArenaFactory *'
|-CXXMethodDecl 0x56222b1fff48 <line:242:3, col:36> col:10 size 'size_t () const'
|-CXXMethodDecl 0x56222b1ffff8 <line:243:3, col:40> col:8 empty 'bool () const'
|-CXXMethodDecl 0x56222b2000a8 <line:244:3, col:47> col:10 nbuckets 'size_t () const'
|-CXXMethodDecl 0x56222b2002b8 <line:246:3, col:30> col:9 find_pair 'HashMap<IPFlowID, void *>::Pair *(const IPFlowID &) const'
| `-ParmVarDecl 0x56222b2001c8 <col:19, col:27> col:28 'const IPFlowID &'
|-CXXMethodDecl 0x56222b200480 <line:247:3, col:34> col:17 findp 'void **(const IPFlowID &) const' inline
| `-ParmVarDecl 0x56222b200380 <col:23, col:31> col:32 'const IPFlowID &'
|-CXXMethodDecl 0x56222b2006d0 <line:248:3, col:40> col:16 find 'void *(const IPFlowID &, void *) const' inline
| |-ParmVarDecl 0x56222b200548 <col:21, col:29> col:30 'const IPFlowID &'
| `-ParmVarDecl 0x56222b2005b0 <col:32, col:37> col:38 'void *'
|-CXXMethodDecl 0x56222b2008a0 <line:249:3, col:32> col:16 find 'void *(const IPFlowID &) const' inline
| `-ParmVarDecl 0x56222b2007a0 <col:21, col:29> col:30 'const IPFlowID &'
|-CXXMethodDecl 0x56222b2026a0 <line:250:3, col:38> col:16 operator[] 'void *(const IPFlowID &) const' inline
| `-ParmVarDecl 0x56222b200968 <col:27, col:35> col:36 'const IPFlowID &'
|-CXXMethodDecl 0x56222b2028e8 <line:252:3, col:42> col:9 find_pair_force 'HashMap<IPFlowID, void *>::Pair *(const IPFlowID &, void *)'
| |-ParmVarDecl 0x56222b202768 <col:25, col:33> col:34 'const IPFlowID &'
| `-ParmVarDecl 0x56222b2027d0 <col:36, col:41> col:42 'void *'
|-CXXMethodDecl 0x56222b202aa8 <line:253:3, col:82> col:9 find_pair_force 'HashMap<IPFlowID, void *>::Pair *(const IPFlowID &)'
| `-ParmVarDecl 0x56222b2029b8 <col:25, col:34> col:34 k 'const IPFlowID &'
|-CXXMethodDecl 0x56222b202cf0 <line:254:3, col:115> col:10 findp_force 'void **(const IPFlowID &, void *)'
| |-ParmVarDecl 0x56222b202b70 <col:22, col:31> col:31 k 'const IPFlowID &'
| `-ParmVarDecl 0x56222b202bd8 <col:34, col:40> col:40 v 'void *'
|-CXXMethodDecl 0x56222b202f40 <line:255:3, col:71> col:10 find_force 'void *&(const IPFlowID &, void *)'
| |-ParmVarDecl 0x56222b202dc0 <col:21, col:30> col:30 k 'const IPFlowID &'
| `-ParmVarDecl 0x56222b202e28 <col:33, col:39> col:39 v 'void *'
|-CXXMethodDecl 0x56222b203110 <line:256:3, col:75> col:10 findp_force 'void **(const IPFlowID &)'
| `-ParmVarDecl 0x56222b203010 <col:22, col:31> col:31 k 'const IPFlowID &'
|-CXXMethodDecl 0x56222b2032d0 <line:257:3, col:75> col:10 find_force 'void *&(const IPFlowID &)'
| `-ParmVarDecl 0x56222b2031d8 <col:21, col:30> col:30 k 'const IPFlowID &'
|-CXXMethodDecl 0x56222b203518 <line:259:3, col:32> col:8 insert 'bool (const IPFlowID &, void *)'
| |-ParmVarDecl 0x56222b203398 <col:15, col:23> col:24 'const IPFlowID &'
| `-ParmVarDecl 0x56222b203400 <col:26, col:31> col:32 'void *'
|-CXXMethodDecl 0x56222b2036d8 <line:260:3, col:23> col:8 erase 'bool (const IPFlowID &)'
| `-ParmVarDecl 0x56222b2035e8 <col:14, col:22> col:23 'const IPFlowID &'
|-CXXMethodDecl 0x56222b203830 <line:261:3, line:263:3> line:261:8 remove 'bool (const IPFlowID &)'
| `-ParmVarDecl 0x56222b2037a0 <col:15, col:24> col:24 key 'const IPFlowID &'
|-CXXMethodDecl 0x56222b2038e8 <line:264:3, col:14> col:8 clear 'void ()'
|-CXXMethodDecl 0x56222b203ba8 <line:266:3, col:33> col:8 swap 'void (HashMap<IPFlowID, void *> &)'
| `-ParmVarDecl 0x56222b203ab8 <col:13, col:32> col:33 'HashMap<IPFlowID, void *> &'
|-TypedefDecl 0x56222b203e30 <line:269:3, col:46> col:46 const_iterator '_HashMap_const_iterator<IPFlowID, void *>':'_HashMap_const_iterator<IPFlowID, void *>'
| `-TemplateSpecializationType 0x56222b203d90 '_HashMap_const_iterator<IPFlowID, void *>' sugar _HashMap_const_iterator
|   |-TemplateArgument type 'IPFlowID':'IPFlowID'
|   |-TemplateArgument type 'void *'
|   `-RecordType 0x56222b203d70 '_HashMap_const_iterator<IPFlowID, void *>'
|     `-ClassTemplateSpecialization 0x56222b203c70 '_HashMap_const_iterator'
|-TypedefDecl 0x56222b204050 <line:270:3, col:40> col:40 iterator '_HashMap_iterator<IPFlowID, void *>':'_HashMap_iterator<IPFlowID, void *>'
| `-TemplateSpecializationType 0x56222b203fb0 '_HashMap_iterator<IPFlowID, void *>' sugar _HashMap_iterator
|   |-TemplateArgument type 'IPFlowID':'IPFlowID'
|   |-TemplateArgument type 'void *'
|   `-RecordType 0x56222b203f90 '_HashMap_iterator<IPFlowID, void *>'
|     `-ClassTemplateSpecialization 0x56222b203e98 '_HashMap_iterator'
|-CXXMethodDecl 0x56222b204148 <line:271:3, col:33> col:25 begin 'HashMap<IPFlowID, void *>::const_iterator () const' inline
|-CXXMethodDecl 0x56222b204298 <line:272:3, col:25> col:19 begin 'HashMap<IPFlowID, void *>::iterator ()' inline
|-CXXMethodDecl 0x56222b204368 <line:273:3, col:31> col:25 end 'HashMap<IPFlowID, void *>::const_iterator () const' inline
|-CXXMethodDecl 0x56222b204438 <line:274:3, col:23> col:19 end 'HashMap<IPFlowID, void *>::iterator ()' inline
|-CXXMethodDecl 0x56222b204578 <line:277:3, col:21> col:8 resize 'void (size_t)'
| `-ParmVarDecl 0x56222b2044e8 <col:15> col:21 'size_t':'unsigned long'
|-CXXMethodDecl 0x56222b204630 <line:278:3, col:66> col:8 dynamic_resizing 'bool () const'
|-CXXMethodDecl 0x56222b204770 <line:279:3, col:33> col:8 set_dynamic_resizing 'void (bool)'
| `-ParmVarDecl 0x56222b2046e0 <col:29> col:33 'bool'
|-CXXMethodDecl 0x56222b204ae8 <line:281:3, col:59> col:23 operator= 'HashMap<IPFlowID, void *> &(const HashMap<IPFlowID, void *> &)'
| `-ParmVarDecl 0x56222b2049b8 <col:33, col:58> col:59 'const HashMap<IPFlowID, void *> &'
|-CXXRecordDecl 0x56222b204ba0 prev 0x56222b1ff658 <line:283:3, col:10> col:10 struct Pair
|-EnumDecl 0x56222b204c40 <line:288:3> col:3
| |-EnumConstantDecl 0x56222b204d30 <col:10, col:25> col:10 MAX_NBUCKETS 'HashMap<IPFlowID, void *>::(anonymous enum at ../dummy_inc/click/hashmap.hh:288:3)'
| | `-ImplicitCastExpr 0x56222b204e60 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b204d10 <col:25> 'int' Int: 32767
| |     `-IntegerLiteral 0x56222b1b4890 <col:25> 'int' 32767
| |-EnumConstantDecl 0x56222b204da0 <line:289:3, col:30> col:3 DEFAULT_INITIAL_NBUCKETS 'HashMap<IPFlowID, void *>::(anonymous enum at ../dummy_inc/click/hashmap.hh:288:3)'
| | `-ImplicitCastExpr 0x56222b204e78 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b204d80 <col:30> 'int' Int: 127
| |     `-IntegerLiteral 0x56222b1b4900 <col:30> 'int' 127
| `-EnumConstantDecl 0x56222b204e10 <line:290:3, col:30> col:3 DEFAULT_RESIZE_THRESHOLD 'HashMap<IPFlowID, void *>::(anonymous enum at ../dummy_inc/click/hashmap.hh:288:3)'
|   `-ImplicitCastExpr 0x56222b204e90 <col:30> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b204df0 <col:30> 'int' Int: 2
|       `-IntegerLiteral 0x56222b1b4970 <col:30> 'int' 2
|-AccessSpecDecl 0x56222b204ea8 <line:292:3, col:10> col:3 private
|-CXXRecordDecl 0x56222b204ed0 <line:294:5, col:12> col:12 struct Elt
|-FieldDecl 0x56222b205000 <line:302:3, col:9> col:9 _buckets 'HashMap<IPFlowID, void *>::Elt **'
|-FieldDecl 0x56222b205050 <line:303:3, col:10> col:10 _nbuckets 'size_t':'unsigned long'
|-FieldDecl 0x56222b2050a0 <line:304:3, col:9> col:9 _default_value 'void *'
|-FieldDecl 0x56222b2050f0 <line:306:3, col:10> col:10 _n 'size_t':'unsigned long'
|-FieldDecl 0x56222b205140 <line:307:3, col:10> col:10 _capacity 'size_t':'unsigned long'
|-FieldDecl 0x56222b205190 <line:309:3, col:18> col:18 _arena 'HashMap_Arena *'
|-CXXMethodDecl 0x56222b2052e0 <line:311:3, col:49> col:8 initialize 'void (HashMap_ArenaFactory *, size_t)'
| |-ParmVarDecl 0x56222b2051e0 <col:19, col:40> col:41 'HashMap_ArenaFactory *'
| `-ParmVarDecl 0x56222b205248 <col:43> col:49 'size_t':'unsigned long'
|-CXXMethodDecl 0x56222b205548 <line:312:3, col:44> col:8 copy_from 'void (const HashMap<IPFlowID, void *> &)'
| `-ParmVarDecl 0x56222b205488 <col:18, col:43> col:44 'const HashMap<IPFlowID, void *> &'
|-CXXMethodDecl 0x56222b205690 <line:313:3, col:22> col:8 resize0 'void (size_t)'
| `-ParmVarDecl 0x56222b205600 <col:16> col:22 'size_t':'unsigned long'
|-CXXMethodDecl 0x56222b205848 <line:314:3, col:28> col:10 bucket 'size_t (const IPFlowID &) const'
| `-ParmVarDecl 0x56222b205758 <col:17, col:25> col:26 'const IPFlowID &'
|-FriendDecl 0x56222b2059f8 <line:316:3, col:43> col:10 'class _HashMap_iterator<IPFlowID, void *>':'_HashMap_iterator<IPFlowID, void *>'
`-FriendDecl 0x56222b205b38 <line:317:3, col:49> col:10 'class _HashMap_const_iterator<IPFlowID, void *>':'_HashMap_const_iterator<IPFlowID, void *>'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap.0 = type { %"struct.HashMap<IPFlowID, void *>::Elt"**, i64, i8*, i64, i64, %class.HashMap_Arena* }
  NonVirtualBaseLLVMType:%class.HashMap.0 = type { %"struct.HashMap<IPFlowID, void *>::Elt"**, i64, i8*, i64, i64, %class.HashMap_Arena* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56222b1fec58 <../dummy_inc/click/hashmap.hh:431:1, line:488:1> line:432:7 class HashMap definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'HashMap<IPFlowID, void *>':'HashMap<IPFlowID, void *>'
|-TemplateArgument type 'IPFlowID'
|-TemplateArgument type 'SnoopTCP::PCB *'
|-CXXRecordDecl 0x56222b205ba8 prev 0x56222b1fec58 <col:1, col:7> col:7 implicit class HashMap
|-AccessSpecDecl 0x56222b205c38 <col:53, col:59> col:53 public
|-TypedefDecl 0x56222b205c70 <line:434:5, col:15> col:15 key_type 'IPFlowID':'IPFlowID'
| `-SubstTemplateTypeParmType 0x56222b1feef0 'IPFlowID' sugar
|   |-TemplateTypeParmType 0x56222b1c3a50 'K' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56222b1c3a00 'K'
|   `-RecordType 0x56222b18d140 'IPFlowID'
|     `-CXXRecord 0x56222b18d0a8 'IPFlowID'
|-TypedefDecl 0x56222b205cd8 <line:435:5, col:16> col:16 mapped_type 'SnoopTCP::PCB *'
| `-PointerType 0x56222b1fef60 'SnoopTCP::PCB *'
|   `-SubstTemplateTypeParmType 0x56222b1fef30 'SnoopTCP::PCB' sugar
|     |-TemplateTypeParmType 0x56222b1c3ad0 'T' dependent depth 0 index 1
|     | `-TemplateTypeParm 0x56222b1c3a78 'T'
|     `-RecordType 0x56222b1febf0 'SnoopTCP::PCB'
|       `-CXXRecord 0x56222b209958 'PCB'
|-TypedefDecl 0x56222b205de0 <line:436:5, col:32> col:32 inherited 'HashMap<IPFlowID, void *>':'HashMap<IPFlowID, void *>'
| `-TemplateSpecializationType 0x56222b205d40 'HashMap<IPFlowID, void *>' sugar HashMap
|   |-TemplateArgument type 'IPFlowID':'IPFlowID'
|   |-TemplateArgument type 'void *'
|   `-RecordType 0x56222b1ff120 'HashMap<IPFlowID, void *>'
|     `-ClassTemplateSpecialization 0x56222b1ff020 'HashMap'
|-CXXRecordDecl 0x56222b205e38 <line:437:5, col:12> col:12 struct Pair
|-CXXConstructorDecl 0x56222b205f38 <line:439:3, col:29> col:3 used HashMap 'void ()'
|-CXXConstructorDecl 0x56222b206198 <line:440:3, line:441:34> line:440:12 HashMap 'void (SnoopTCP::PCB *, HashMap_ArenaFactory *)'
| |-ParmVarDecl 0x56222b206000 <col:20, col:23> col:23 def 'SnoopTCP::PCB *'
| `-ParmVarDecl 0x56222b206068 <col:28, col:60> col:50 factory 'HashMap_ArenaFactory *'
|-CXXConstructorDecl 0x56222b206498 <line:442:3, col:54> col:3 HashMap 'void (const HashMap<IPFlowID, SnoopTCP::PCB *> &)'
| `-ParmVarDecl 0x56222b206388 <col:11, col:34> col:34 o 'const HashMap<IPFlowID, SnoopTCP::PCB *> &'
|-CXXDestructorDecl 0x56222b206580 <line:443:3, col:16> col:3 used ~HashMap 'void () noexcept'
|-CXXMethodDecl 0x56222b206700 <line:445:3, col:72> col:8 set_arena 'void (HashMap_ArenaFactory *)'
| `-ParmVarDecl 0x56222b206670 <col:18, col:40> col:40 af 'HashMap_ArenaFactory *'
|-CXXMethodDecl 0x56222b206918 <line:451:3, col:97> col:9 find_pair 'HashMap<IPFlowID, SnoopTCP::PCB *>::Pair *(const IPFlowID &) const'
| `-ParmVarDecl 0x56222b206828 <col:19, col:28> col:28 k 'const IPFlowID &'
|-CXXMethodDecl 0x56222b206b30 <line:452:3, col:85> col:7 findp 'SnoopTCP::PCB **(const IPFlowID &) const'
| `-ParmVarDecl 0x56222b206a38 <col:13, col:22> col:22 k 'const IPFlowID &'
|-CXXMethodDecl 0x56222b206d88 <line:453:3, col:90> col:6 find 'SnoopTCP::PCB *(const IPFlowID &, SnoopTCP::PCB *) const'
| |-ParmVarDecl 0x56222b206bf8 <col:11, col:20> col:20 k 'const IPFlowID &'
| `-ParmVarDecl 0x56222b206c70 <col:23, col:26> col:26 v 'SnoopTCP::PCB *'
|-CXXMethodDecl 0x56222b206f48 <line:454:3, col:81> col:6 find 'SnoopTCP::PCB *(const IPFlowID &) const'
| `-ParmVarDecl 0x56222b206e58 <col:11, col:20> col:20 k 'const IPFlowID &'
|-CXXMethodDecl 0x56222b2070a0 <line:455:3, col:93> col:6 operator[] 'SnoopTCP::PCB *(const IPFlowID &) const'
| `-ParmVarDecl 0x56222b207010 <col:17, col:26> col:26 k 'const IPFlowID &'
|-CXXMethodDecl 0x56222b2072f8 <line:457:3, col:112> col:9 find_pair_force 'HashMap<IPFlowID, SnoopTCP::PCB *>::Pair *(const IPFlowID &, SnoopTCP::PCB *)'
| |-ParmVarDecl 0x56222b207168 <col:25, col:34> col:34 k 'const IPFlowID &'
| `-ParmVarDecl 0x56222b2071e0 <col:37, col:40> col:40 v 'SnoopTCP::PCB *'
|-CXXMethodDecl 0x56222b2074b8 <line:458:3, col:103> col:9 find_pair_force 'HashMap<IPFlowID, SnoopTCP::PCB *>::Pair *(const IPFlowID &)'
| `-ParmVarDecl 0x56222b2073c8 <col:25, col:34> col:34 k 'const IPFlowID &'
|-CXXMethodDecl 0x56222b207710 <line:459:3, col:100> col:7 findp_force 'SnoopTCP::PCB **(const IPFlowID &, SnoopTCP::PCB *)'
| |-ParmVarDecl 0x56222b207580 <col:19, col:28> col:28 k 'const IPFlowID &'
| `-ParmVarDecl 0x56222b2075f8 <col:31, col:34> col:34 v 'SnoopTCP::PCB *'
|-CXXMethodDecl 0x56222b2079d0 <line:460:3, col:100> col:7 find_force 'SnoopTCP::PCB *&(const IPFlowID &, SnoopTCP::PCB *)'
| |-ParmVarDecl 0x56222b207838 <col:18, col:27> col:27 k 'const IPFlowID &'
| `-ParmVarDecl 0x56222b2078b0 <col:30, col:33> col:33 v 'SnoopTCP::PCB *'
|-CXXMethodDecl 0x56222b207ba0 <line:461:3, col:91> col:7 findp_force 'SnoopTCP::PCB **(const IPFlowID &)'
| `-ParmVarDecl 0x56222b207aa0 <col:19, col:28> col:28 k 'const IPFlowID &'
|-CXXMethodDecl 0x56222b207d60 <line:462:3, col:91> col:7 find_force 'SnoopTCP::PCB *&(const IPFlowID &)'
| `-ParmVarDecl 0x56222b207c68 <col:18, col:27> col:27 k 'const IPFlowID &'
|-CXXMethodDecl 0x56222b207fb8 <line:464:3, col:67> col:8 insert 'bool (const IPFlowID &, SnoopTCP::PCB *)'
| |-ParmVarDecl 0x56222b207e28 <col:15, col:24> col:24 k 'const IPFlowID &'
| `-ParmVarDecl 0x56222b207ea0 <col:27, col:30> col:30 v 'SnoopTCP::PCB *'
|-CXXMethodDecl 0x56222b208298 <line:469:3, col:55> col:8 swap 'void (HashMap<IPFlowID, SnoopTCP::PCB *> &)'
| `-ParmVarDecl 0x56222b2081a8 <col:13, col:30> col:30 o 'HashMap<IPFlowID, SnoopTCP::PCB *> &'
|-TypedefDecl 0x56222b208530 <line:472:3, col:43> col:43 const_iterator '_HashMap_const_iterator<IPFlowID, SnoopTCP::PCB *>':'_HashMap_const_iterator<IPFlowID, SnoopTCP::PCB *>'
| `-TemplateSpecializationType 0x56222b208490 '_HashMap_const_iterator<IPFlowID, SnoopTCP::PCB *>' sugar _HashMap_const_iterator
|   |-TemplateArgument type 'IPFlowID':'IPFlowID'
|   |-TemplateArgument type 'SnoopTCP::PCB *'
|   `-RecordType 0x56222b208470 '_HashMap_const_iterator<IPFlowID, SnoopTCP::PCB *>'
|     `-ClassTemplateSpecialization 0x56222b208370 '_HashMap_const_iterator'
|-TypedefDecl 0x56222b208760 <line:473:3, col:37> col:37 iterator '_HashMap_iterator<IPFlowID, SnoopTCP::PCB *>':'_HashMap_iterator<IPFlowID, SnoopTCP::PCB *>'
| `-TemplateSpecializationType 0x56222b2086c0 '_HashMap_iterator<IPFlowID, SnoopTCP::PCB *>' sugar _HashMap_iterator
|   |-TemplateArgument type 'IPFlowID':'IPFlowID'
|   |-TemplateArgument type 'SnoopTCP::PCB *'
|   `-RecordType 0x56222b2086a0 '_HashMap_iterator<IPFlowID, SnoopTCP::PCB *>'
|     `-ClassTemplateSpecialization 0x56222b2085a8 '_HashMap_iterator'
|-CXXMethodDecl 0x56222b208858 <line:474:3, col:33> col:25 begin 'HashMap<IPFlowID, SnoopTCP::PCB *>::const_iterator () const' inline
|-CXXMethodDecl 0x56222b2089a8 <line:475:3, col:25> col:19 begin 'HashMap<IPFlowID, SnoopTCP::PCB *>::iterator ()' inline
|-CXXMethodDecl 0x56222b208a78 <line:476:3, col:31> col:25 end 'HashMap<IPFlowID, SnoopTCP::PCB *>::const_iterator () const' inline
|-CXXMethodDecl 0x56222b208b48 <line:477:3, col:23> col:19 end 'HashMap<IPFlowID, SnoopTCP::PCB *>::iterator ()' inline
|-CXXMethodDecl 0x56222b208ed8 <line:481:3, col:122> col:20 operator= 'HashMap<IPFlowID, SnoopTCP::PCB *> &(const HashMap<IPFlowID, SnoopTCP::PCB *> &)'
| `-ParmVarDecl 0x56222b208da8 <col:30, col:53> col:53 o 'const HashMap<IPFlowID, SnoopTCP::PCB *> &'
`-CXXRecordDecl 0x56222b208f90 prev 0x56222b205e38 <line:483:3, col:10> col:10 struct Pair

Layout: <CGRecordLayout
  LLVMType:%class.HashMap = type { %class.HashMap.0 }
  NonVirtualBaseLLVMType:%class.HashMap = type { %class.HashMap.0 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b1fd808 <../elements/tcpudp/snooptcp.hh:27:1, line:64:1> line:27:7 class SnoopTCP definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x56222b1fd968 <col:1, col:7> col:7 implicit referenced class SnoopTCP
|-AccessSpecDecl 0x56222b1fd9f8 <col:35, col:41> col:35 public
|-CXXConstructorDecl 0x56222b1fda80 <line:29:3, col:12> col:3 SnoopTCP 'void ()'
|-CXXDestructorDecl 0x56222b1fdb70 <line:30:3, col:13> col:3 ~SnoopTCP 'void ()' noexcept-unevaluated 0x56222b1fdb70
| `-Overrides: [ 0x56222b170028 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x56222b1fdca0 <line:32:3, col:55> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x56222b171488 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x56222b209800 <col:34, col:55>
|   `-ReturnStmt 0x56222b2097f0 <col:36, col:43>
|     `-ImplicitCastExpr 0x56222b2097d8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56222b2097b8 <col:43> 'const char [9]' lvalue "SnoopTCP"
|-CXXMethodDecl 0x56222b1fdd68 <line:33:3, col:50> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x56222b171550 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x56222b209860 <col:34, col:50>
|   `-ReturnStmt 0x56222b209850 <col:36, col:43>
|     `-ImplicitCastExpr 0x56222b209838 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56222b209818 <col:43> 'const char [4]' lvalue "2/4"
|-CXXMethodDecl 0x56222b1fde30 <line:34:3, col:54> col:15 processing 'const char *() const'
| |-Overrides: [ 0x56222b171918 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x56222b2098c0 <col:34, col:54>
|   `-ReturnStmt 0x56222b2098b0 <col:36, col:43>
|     `-ImplicitCastExpr 0x56222b209898 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56222b209878 <col:43> 'const char [8]' lvalue "aa/aahh"
|-CXXMethodDecl 0x56222b1fdef8 <line:35:3, col:52> col:15 flow_code 'const char *() const'
| |-Overrides: [ 0x56222b171d10 Element::flow_code 'const char *() const' ]
| `-CompoundStmt 0x56222b209920 <col:33, col:52>
|   `-ReturnStmt 0x56222b209910 <col:35, col:42>
|     `-ImplicitCastExpr 0x56222b2098f8 <col:42> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56222b2098d8 <col:42> 'const char [7]' lvalue "xyz/xy"
|-CXXMethodDecl 0x56222b1fe040 <line:37:3, col:32> col:7 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x56222b172f70 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x56222b1fdfa8 <col:18, col:31> col:32 'ErrorHandler *'
|-CXXMethodDecl 0x56222b1fe210 <line:39:3, col:31> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x56222b1702f8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x56222b1fe100 <col:13, col:17> col:17 port 'int'
| `-ParmVarDecl 0x56222b1fe178 <col:23, col:30> col:31 'Packet *'
|-CXXMethodDecl 0x56222b1fe368 <line:40:3, col:24> col:11 pull 'Packet *(int)'
| |-Overrides: [ 0x56222b170488 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x56222b1fe2d8 <col:16, col:20> col:20 port 'int'
|-AccessSpecDecl 0x56222b1fe410 <line:42:2, col:9> col:2 private
|-CXXMethodDecl 0x56222b1fe598 <line:44:3, col:38> col:11 handle_packet 'Packet *(int, Packet *)'
| |-ParmVarDecl 0x56222b1fe450 <col:25> col:28 'int'
| `-ParmVarDecl 0x56222b1fe4c8 <col:30, col:37> col:38 'Packet *'
|-CXXRecordDecl 0x56222b1fe648 <line:46:3, line:55:3> line:46:10 referenced struct SCacheEntry definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56222b1fe768 <col:3, col:10> col:10 implicit struct SCacheEntry
| |-FieldDecl 0x56222b1fe808 <line:47:5, col:13> col:13 packet 'Packet *'
| |-FieldDecl 0x56222b1fe870 <line:48:5, col:14> col:14 seq 'unsigned int'
| |-FieldDecl 0x56222b1fe8d8 <line:49:5, col:14> col:14 size 'unsigned int'
| |-FieldDecl 0x56222b1fe938 <line:50:5, col:15> col:15 snd_time 'Timestamp'
| |-FieldDecl 0x56222b1fe9a0 <line:51:5, col:9> col:9 num_rxmit 'int'
| |-FieldDecl 0x56222b1fea08 <line:52:5, col:9> col:9 sender_rxmit 'int'
| `-CXXMethodDecl 0x56222b1feaa8 <line:54:5, col:16> col:10 clear 'void ()'
|-CXXRecordDecl 0x56222b1feb60 <line:57:3, col:10> col:10 referenced struct PCB
|-FieldDecl 0x56222b209030 <line:59:3, col:28> col:28 _map 'HashMap<IPFlowID, SnoopTCP::PCB *>':'HashMap<IPFlowID, SnoopTCP::PCB *>'
|-CXXMethodDecl 0x56222b209398 <line:61:3, line:62:50> line:61:8 find 'SnoopTCP::PCB *(unsigned int, unsigned short, unsigned int, unsigned short, bool)'
| |-ParmVarDecl 0x56222b209098 <col:13, col:22> col:22 s_ip 'unsigned int'
| |-ParmVarDecl 0x56222b209118 <col:28, col:43> col:43 s_port 'unsigned short'
| |-ParmVarDecl 0x56222b209198 <line:62:6, col:15> col:15 mh_ip 'unsigned int'
| |-ParmVarDecl 0x56222b209218 <col:22, col:37> col:37 mh_port 'unsigned short'
| `-ParmVarDecl 0x56222b209290 <col:46> col:50 'bool'
|-CXXConstructorDecl 0x56222b209488 <line:27:7> col:7 implicit SnoopTCP 'void (const SnoopTCP &)' inline default_delete noexcept-unevaluated 0x56222b209488
| `-ParmVarDecl 0x56222b209598 <col:7> col:7 'const SnoopTCP &'
`-CXXMethodDecl 0x56222b209638 <col:7> col:7 implicit operator= 'SnoopTCP &(const SnoopTCP &)' inline default_delete noexcept-unevaluated 0x56222b209638
  `-ParmVarDecl 0x56222b209748 <col:7> col:7 'const SnoopTCP &'

Layout: <CGRecordLayout
  LLVMType:%class.SnoopTCP = type { %class.Element.base, %class.HashMap }
  NonVirtualBaseLLVMType:%class.SnoopTCP = type { %class.Element.base, %class.HashMap }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b254928 prev 0x56222b212060 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56222b254a20 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x56222b254ab0 <col:22, col:28> col:22 public
|-EnumDecl 0x56222b254ad8 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x56222b254bf8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x56222b254bd8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x56222b254bc0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x56222b254ba0 <col:14> 'int' 999
| |-EnumConstantDecl 0x56222b254ca0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x56222b254c80 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x56222b254c68 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x56222b254c48 <col:14> 'int' 1
| |-EnumConstantDecl 0x56222b254d30 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x56222b254d10 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x56222b254cf0 <col:17> 'int' 0
| |-EnumConstantDecl 0x56222b254dc0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x56222b254da0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x56222b254d80 <col:13> 'int' 1
| |-EnumConstantDecl 0x56222b254e50 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x56222b254e30 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x56222b254e10 <col:16> 'int' 2
| |-EnumConstantDecl 0x56222b254ee0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x56222b254ec0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x56222b254ea0 <col:13> 'int' 3
| |-EnumConstantDecl 0x56222b254f70 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x56222b254f50 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x56222b254f30 <col:15> 'int' 4
| |-EnumConstantDecl 0x56222b255000 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x56222b254fe0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x56222b254fc0 <col:14> 'int' 5
| |-EnumConstantDecl 0x56222b255090 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x56222b255070 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x56222b255050 <col:12> 'int' 6
| `-EnumConstantDecl 0x56222b255120 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x56222b255100 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x56222b2550e0 <col:13> 'int' 7
|-VarDecl 0x56222b255190 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x56222b255218 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x56222b2552a0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x56222b255328 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x56222b2553b0 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x56222b255438 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x56222b2554c0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x56222b255548 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x56222b2555d0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x56222b255658 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x56222b2556e0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x56222b2557e0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x56222b25ab58 '_nerrors' 'int'
| | `-IntegerLiteral 0x56222b25b2e8 <line:128:13> 'int' 0
| `-CompoundStmt 0x56222b25b358 <col:16, line:129:5>
|-CXXDestructorDecl 0x56222b2558d0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x56222b25b368 <col:29, line:132:5>
|-CXXMethodDecl 0x56222b255a88 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x56222b2559c0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56222b255b50 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56222b255c38 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x56222b25b3c0 <col:44, line:161:5>
|   `-ReturnStmt 0x56222b25b3b0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x56222b25b398 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x56222b25b378 <col:9> 'ErrorHandler *' lvalue Var 0x56222b25abb8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x56222b255da8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x56222b255ce8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56222b255e70 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x56222b25b420 <col:43, line:173:5>
|   `-ReturnStmt 0x56222b25b410 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x56222b25b3f8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x56222b25b3d8 <col:9> 'ErrorHandler *' lvalue Var 0x56222b25ac30 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x56222b255f28 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x56222b255fa8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x56222b2560b8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x56222b256028 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x56222b256208 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x56222b256178 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x56222b256360 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x56222b2562c8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x56222b2564b8 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x56222b256420 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x56222b256610 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x56222b256578 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x56222b256820 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x56222b2566c8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x56222b256748 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x56222b2569f8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x56222b2568e0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x56222b256960 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x56222b256c18 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56222b256ab8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x56222b256b38 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x56222b256df8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56222b256cd8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x56222b256d58 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x56222b256fd8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56222b256eb8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x56222b256f38 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x56222b257160 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x56222b257098 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x56222b257330 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x56222b257218 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x56222b257290 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x56222b25b678 <col:57, line:234:5>
|   `-ReturnStmt 0x56222b25b668 <line:233:2, col:41>
|     `-ExprWithCleanups 0x56222b25b650 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x56222b25b5f8 <col:9, col:41> 'int'
|         |-MemberExpr 0x56222b25b5c8 <col:9> '<bound member function type>' ->xmessage 0x56222b257160
|         | `-CXXThisExpr 0x56222b25b5b8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x56222b25b638 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x56222b25b620 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56222b25b598 <col:18, col:40> 'String' (CXXTemporary 0x56222b25b598)
|               `-CallExpr 0x56222b25b560 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x56222b25b548 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x56222b25b4c0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x56222b259388 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x56222b25b4e0 <col:31> 'const String' lvalue ParmVar 0x56222b257290 'str' 'const String &'
|                 `-DeclRefExpr 0x56222b25b500 <col:36> 'const String' lvalue ParmVar 0x56222b257218 'anno' 'const String &'
|-CXXMethodDecl 0x56222b257670 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x56222b2573f0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x56222b257470 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x56222b257540 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56222b25b908 <col:68, line:243:5>
|   `-ReturnStmt 0x56222b25b8f8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x56222b25b8e0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x56222b25b880 <col:9, col:41> 'int'
|         |-MemberExpr 0x56222b25b850 <col:9> '<bound member function type>' ->xmessage 0x56222b257330
|         | `-CXXThisExpr 0x56222b25b840 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x56222b25b718 <col:18> 'const String' lvalue ParmVar 0x56222b2573f0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x56222b25b8c8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x56222b25b8b0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56222b25b820 <col:24, col:40> 'String' (CXXTemporary 0x56222b25b820)
|               `-CXXMemberCallExpr 0x56222b25b7b8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x56222b25b748 <col:24> '<bound member function type>' ->vformat 0x56222b258850
|                 | `-CXXThisExpr 0x56222b25b738 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x56222b25b7e8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x56222b25b778 <col:32> 'const char *' lvalue ParmVar 0x56222b257470 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x56222b25b800 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x56222b25b798 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56222b257540 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56222b257910 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x56222b257738 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x56222b2577b0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x56222b257828 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x56222b25bc58 <col:23, line:254:5>
|   `-ReturnStmt 0x56222b25bc48 <line:253:2, col:71>
|     `-ExprWithCleanups 0x56222b25bc30 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x56222b25bbd0 <col:9, col:71> 'int'
|         |-MemberExpr 0x56222b25bba0 <col:9> '<bound member function type>' ->xmessage 0x56222b257330
|         | `-CXXThisExpr 0x56222b25bb80 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x56222b25bc18 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x56222b25bc00 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x56222b25bb40 <col:18, col:65> 'String' (CXXTemporary 0x56222b25bb40)
|         |     `-CallExpr 0x56222b25bad8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x56222b25bac0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x56222b25b9a8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x56222b259388 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x56222b25b9c8 <col:31> 'const String' lvalue ParmVar 0x56222b2577b0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x56222b25bb20 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x56222b25bb08 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x56222b25baa0 <col:37, col:64> 'String' (CXXTemporary 0x56222b25baa0)
|         |             `-CallExpr 0x56222b25ba70 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x56222b25ba58 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x56222b25b9e8 <col:37> 'String (const String &)' lvalue CXXMethod 0x56222b2599d8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x56222b25ba08 <col:56> 'const String' lvalue ParmVar 0x56222b257738 'landmark' 'const String &'
|         `-DeclRefExpr 0x56222b25bb60 <col:68> 'const String' lvalue ParmVar 0x56222b257828 'str' 'const String &'
|-CXXMethodDecl 0x56222b257c90 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x56222b2579d8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x56222b257a50 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x56222b257ad0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x56222b257b48 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56222b25bf10 <col:34, line:267:5>
|   `-ReturnStmt 0x56222b25bf00 <line:266:2, col:51>
|     `-ExprWithCleanups 0x56222b25bee8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x56222b25be80 <col:9, col:51> 'int'
|         |-MemberExpr 0x56222b25be50 <col:9> '<bound member function type>' ->xmessage 0x56222b257910
|         | `-CXXThisExpr 0x56222b25be40 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x56222b25bcf8 <col:18> 'const String' lvalue ParmVar 0x56222b2579d8 'landmark' 'const String &'
|         |-DeclRefExpr 0x56222b25bd18 <col:28> 'const String' lvalue ParmVar 0x56222b257a50 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x56222b25bed0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x56222b25beb8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56222b25be20 <col:34, col:50> 'String' (CXXTemporary 0x56222b25be20)
|               `-CXXMemberCallExpr 0x56222b25bdb8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x56222b25bd48 <col:34> '<bound member function type>' ->vformat 0x56222b258850
|                 | `-CXXThisExpr 0x56222b25bd38 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x56222b25bde8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x56222b25bd78 <col:42> 'const char *' lvalue ParmVar 0x56222b257ad0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x56222b25be00 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x56222b25bd98 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56222b257b48 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56222b257da0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x56222b25bf90 <col:25, line:288:5>
|   `-ReturnStmt 0x56222b25bf80 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x56222b25bf68 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x56222b25bf38 <col:9> 'const int' lvalue ->_nerrors 0x56222b25ab58
|         `-CXXThisExpr 0x56222b25bf28 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x56222b257fb0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x56222b257e58 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x56222b257ed8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x56222b258298 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x56222b258078 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x56222b2580f8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x56222b258170 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56222b258430 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x56222b258368 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x56222b258678 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x56222b2584f0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x56222b258568 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56222b25c1f0 <col:58, line:357:5>
|   `-ReturnStmt 0x56222b25c1e0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x56222b25c1c8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x56222b25c198 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56222b25c180 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x56222b25c160 <col:9, col:29> 'String' (CXXTemporary 0x56222b25c160)
|             `-CallExpr 0x56222b25c0f0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x56222b25c0d8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56222b25c058 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x56222b258298 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x56222b25bff8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x56222b25c128 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x56222b25c018 <col:21> 'const char *' lvalue ParmVar 0x56222b2584f0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x56222b25c140 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x56222b25c038 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56222b258568 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56222b258850 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x56222b258740 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x56222b2587b8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56222b2589a8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x56222b258918 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x56222b258af0 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x56222b258a60 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x56222b258d90 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x56222b258ba8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x56222b258c28 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x56222b258ca0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x56222b258ef0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x56222b258e60 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x56222b25c308 <col:37, line:441:5>
|   `-IfStmt 0x56222b25c2f0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x56222b25c278 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x56222b25c248 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x56222b25c208 <col:6> 'int' lvalue ParmVar 0x56222b258e60 'level' 'int'
|     | `-ImplicitCastExpr 0x56222b25c260 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x56222b25c228 <col:15> 'ErrorHandler::Level' EnumConstant 0x56222b254ee0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x56222b25c2d8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x56222b25c2a8 <col:8> 'int' lvalue ->_nerrors 0x56222b25ab58
|         `-CXXThisExpr 0x56222b25c298 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x56222b258fb8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x56222b25c3a0 <col:26, line:448:5>
|   `-BinaryOperator 0x56222b25c380 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x56222b25c330 <col:2> 'int' lvalue ->_nerrors 0x56222b25ab58
|     | `-CXXThisExpr 0x56222b25c320 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x56222b25c360 <col:13> 'int' 0
|-CXXMethodDecl 0x56222b259180 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x56222b259070 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x56222b2590e8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x56222b259388 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x56222b259240 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x56222b2592b8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x56222b259638 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x56222b259448 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x56222b2594c8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x56222b259548 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x56222b2596f0 <col:59> 0 0
|-CXXMethodDecl 0x56222b259888 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x56222b259768 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x56222b2597e8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x56222b25ca10 <col:70, line:534:5>
|   |-DeclStmt 0x56222b25c510 <line:528:2, col:20>
|   | |-VarDecl 0x56222b25c3c8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x56222b25c430 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x56222b25c468 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x56222b25c4d0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x56222b25c5e0 <line:529:2, col:23>
|   | `-VarDecl 0x56222b25c540 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x56222b25c5c8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x56222b25c5a8 <col:18> 'const char *' lvalue ParmVar 0x56222b259768 'begin' 'const char *'
|   |-DoStmt 0x56222b25c9a8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x56222b25c8d8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x56222b25c8c0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x56222b25c8a0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x56222b25c5f8 <col:6> 'const char *' lvalue Var 0x56222b25c540 'x' 'const char *'
|   | |     `-CallExpr 0x56222b25c7f0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x56222b25c7d8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x56222b25c790 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x56222b25b030 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x56222b25c858 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x56222b25c840 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x56222b25c6b0 <col:20, col:27> 'String' (CXXTemporary 0x56222b25c6b0)
|   | |       |     `-CXXTemporaryObjectExpr 0x56222b25c678 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x56222b25c870 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56222b25c6d0 <col:30> 'const char *' lvalue Var 0x56222b25c540 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x56222b25c888 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56222b25c6f0 <col:33> 'const char *' lvalue ParmVar 0x56222b2597e8 'end' 'const char *'
|   | |       |-UnaryOperator 0x56222b25c730 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56222b25c710 <col:39> 'String' lvalue Var 0x56222b25c3c8 'name' 'String'
|   | |       |-UnaryOperator 0x56222b25c768 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56222b25c748 <col:46> 'String' lvalue Var 0x56222b25c468 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x56222b25c780 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x56222b25c990 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x56222b25c978 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x56222b25c958 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x56222b25c928 <col:11> '<bound member function type>' .operator int (String::*)() const 0x56222af3d948
|   |         `-ImplicitCastExpr 0x56222b25c910 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x56222b25c8f0 <col:11> 'String' lvalue Var 0x56222b25c3c8 'name' 'String'
|   `-ReturnStmt 0x56222b25ca00 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x56222b25c9e8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x56222b25c9c8 <col:9> 'const char *' lvalue Var 0x56222b25c540 'x' 'const char *'
|-CXXMethodDecl 0x56222b2599d8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x56222b259948 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x56222b25d018 <col:55, line:550:5>
|   `-IfStmt 0x56222b25cff0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x56222b25cc50 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x56222b25cc38 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x56222b25cc20 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x56222b25cc00 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x56222b25cbd0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x56222af3d948
|     | |       `-DeclRefExpr 0x56222b25ca70 <col:6> 'const String' lvalue ParmVar 0x56222b259948 'x' 'const String &'
|     | `-BinaryOperator 0x56222b25cbb0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x56222b25cb80 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x56222b25cb30 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x56222b25cb18 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x56222b25cad0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x56222af57180 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x56222b25ca90 <col:11> 'const String' lvalue ParmVar 0x56222b259948 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x56222b25cab0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x56222b25cb98 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x56222b25cb68 <col:19> 'char' 123
|     |-ReturnStmt 0x56222b25ccc0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x56222b25cc90 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x56222b25cc70 <col:13> 'const String' lvalue ParmVar 0x56222b259948 'x' 'const String &'
|     `-IfStmt 0x56222b25cfc8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x56222b25cd58 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x56222b25cd40 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x56222b25cd20 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x56222b25ccf0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x56222af3d948
|       |       `-DeclRefExpr 0x56222b25ccd0 <col:11> 'const String' lvalue ParmVar 0x56222b259948 'x' 'const String &'
|       |-ReturnStmt 0x56222b25cee0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x56222b25cec8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x56222b25ce98 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x56222b25ce80 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x56222b25ce60 <col:13, col:29> 'String' (CXXTemporary 0x56222b25ce60)
|       |         `-CallExpr 0x56222b25ce10 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x56222b25cdf8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x56222b25cd70 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x56222b259180 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x56222b25ce40 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x56222b25cd90 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x56222b25cdb0 <col:28> 'const String' lvalue ParmVar 0x56222b259948 'x' 'const String &'
|       `-ReturnStmt 0x56222b25cfb8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x56222b25cfa0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x56222b25cf70 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x56222b25cf58 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x56222b25cf38 <col:13, col:20> 'String' (CXXTemporary 0x56222b25cf38)
|                 `-CXXTemporaryObjectExpr 0x56222b25cf00 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x56222b259ba0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x56222b259a90 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x56222b259b08 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56222b25b2d8 <col:71> 'bool' false
|-CXXRecordDecl 0x56222b259c50 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x56222b259f48 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x56222b259ee0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x56222b259e80 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x56222b259e40 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x56222af3a1e0 'String'
|       | `-CXXRecord 0x56222af3a150 'String'
|       |-BuiltinType 0x56222ac0d580 'int'
|       `-DecayedType 0x56222b257510 '__va_list_tag *' sugar
|         |-TypedefType 0x56222b2574e0 'va_list' sugar
|         | |-Typedef 0x56222ae2c2a0 'va_list'
|         | `-TypedefType 0x56222ae2c250 '__gnuc_va_list' sugar
|         |   |-Typedef 0x56222ad63e78 '__gnuc_va_list'
|         |   `-TypedefType 0x56222ad63de0 '__builtin_va_list' sugar
|         |     |-Typedef 0x56222ac4ed38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x56222ac4ece0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x56222ac0e2d0 '__va_list_tag'
|         |         `-CXXRecord 0x56222ac0e238 '__va_list_tag'
|         `-PointerType 0x56222ae31b40 '__va_list_tag *'
|           `-RecordType 0x56222ac0e2d0 '__va_list_tag'
|             `-CXXRecord 0x56222ac0e238 '__va_list_tag'
|-EnumDecl 0x56222b259fa0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x56222b25a0a0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56222b25a600 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b25a080 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x56222b25a060 <col:16> 'int' 1
| |-EnumConstantDecl 0x56222b25a130 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56222b25a618 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b25a110 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x56222b25a0f0 <col:21> 'int' 2
| |-EnumConstantDecl 0x56222b25a1c0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56222b25a630 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b25a1a0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x56222b25a180 <col:22> 'int' 4
| |-EnumConstantDecl 0x56222b25a250 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56222b25a648 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b25a230 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x56222b25a210 <col:17> 'int' 8
| |-EnumConstantDecl 0x56222b25a2e0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56222b25a660 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b25a2c0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x56222b25a2a0 <col:22> 'int' 16
| |-EnumConstantDecl 0x56222b25a370 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56222b25a678 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b25a350 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56222b25a330 <col:19> 'int' 32
| |-EnumConstantDecl 0x56222b25a400 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56222b25a690 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b25a3e0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x56222b25a3c0 <col:17> 'int' 64
| |-EnumConstantDecl 0x56222b25a490 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56222b25a6a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b25a470 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x56222b25a450 <col:14> 'int' 128
| |-EnumConstantDecl 0x56222b25a520 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56222b25a6c0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b25a500 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x56222b25a4e0 <col:16> 'int' 256
| `-EnumConstantDecl 0x56222b25a5b0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x56222b25a6d8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b25a590 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x56222b25a570 <col:12> 'int' 1024
|-CXXMethodDecl 0x56222b25a8e8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x56222b25a700 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x56222b25a7a0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x56222b25aa70 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x56222b25a9a8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x56222b25ab18 <line:580:3, col:10> col:3 private
|-FieldDecl 0x56222b25ab58 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x56222b25abb8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x56222b25ac30 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x56222b25b030 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x56222b25aca8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x56222b25ad28 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x56222b25ada8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x56222b25ae20 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x56222b25ae98 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x56222b25af10 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x56222b25b158 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x56222b25b158
| `-ParmVarDecl 0x56222b25b268 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x56222b25d378 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x56222b25d378
  `-ParmVarDecl 0x56222b25d488 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct SnoopTCP::PCB
         0 |   struct SnoopTCP::SCacheEntry [1024] _s_cache
     32768 |   int _head
     32772 |   int _tail
     32776 |   unsigned int _s_una
     32780 |   unsigned int _s_max
     32784 |   unsigned int _mh_last_ack
     32788 |   unsigned short _mh_last_win
     32792 |   int _mh_expected_dup_acks
     32796 |   int _mh_dup_acks
     32800 |   int _dup_acks
 32804:0-0 |   _Bool _s_exists
 32804:1-1 |   _Bool _s_alive
 32804:2-2 |   _Bool _mh_exists
 32804:3-3 |   _Bool _mh_alive
           | [sizeof=32808, dsize=32805, align=8,
           |  nvsize=32805, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222af2e800 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56222af2e918 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x56222af2e9a8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x56222af2ea78 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x56222af2eb60 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x56222af2ed78 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56222af2ec20 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222af2ef28 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56222af2ee30 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56222af2f070 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56222af2efe0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56222af2f1b8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56222af2f128 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222af2f300 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56222af2f270 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222af2f3c8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x56222af2f510 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x56222af2f480 <col:28> col:31 'int'
|-CXXMethodDecl 0x56222af2f5d8 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x56222af2f720 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x56222af2f690 <col:28> col:31 'int'
|-CXXMethodDecl 0x56222af2f898 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56222af2f7d8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222af2f9e0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56222af2f950 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222af2faa8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x56222af2fc68 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56222af2fb58 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56222af2fbd0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222af2feb8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56222af2fd28 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56222af2fda0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56222af2ff68 <col:86> "" ""
|-CXXMethodDecl 0x56222af301d8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x56222af30048 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x56222af300c0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222af30388 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56222af30298 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56222af30538 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56222af30440 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56222af30808 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56222af305f0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56222af30668 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56222af306e0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222af30ae8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56222af308d0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56222af30948 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56222af309c0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56222af30ba0 <col:115> "" ""
|-AccessSpecDecl 0x56222af30c10 <line:84:3, col:10> col:3 private
|-FieldDecl 0x56222af30c48 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222af31150 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56222af31150
| `-ParmVarDecl 0x56222af31258 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x56222af312f8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56222af312f8
| `-ParmVarDecl 0x56222af31408 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x56222af66a38 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56222b159840 <col:7>
|-CXXConstructorDecl 0x56222af66b10 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56222af66b10
| `-ParmVarDecl 0x56222af66c28 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x56222af66c98 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56222af66c98
| `-ParmVarDecl 0x56222af66da8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x56222b15c240 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b1483e8 prev 0x56222b13d5f0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56222b1484e0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x56222b1485d0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x56222b1486f8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x56222b148878 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x56222b1489f8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x56222b148b78 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x56222b1599a8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56222b15a218 <col:11>
|-CXXDestructorDecl 0x56222b159a80 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56222b159bb8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56222b159bb8
| `-ParmVarDecl 0x56222b159cc8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x56222b159d68 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56222b159d68
| `-ParmVarDecl 0x56222b159e78 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x56222b15cc38 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x56222b15cd48 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x56222b15cfc8 <col:11>
|   `-ReturnStmt 0x56222b15cfb8 <col:11>
|     `-UnaryOperator 0x56222b15cfa0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56222b15cf90 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x56222b15cdb8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56222b15cdb8
  `-ParmVarDecl 0x56222b15cec8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b148be0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56222b148cf8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x56222b148d98 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x56222b148e00 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x56222b148e68 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x56222b148ed0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x56222b148f30 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x56222b148ff0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x56222b149050 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x56222b1490b0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x56222b1598b8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x56222b148d98 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x56222b15a228 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x56222b15a280 <col:12>
|-CXXConstructorDecl 0x56222b159ee8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56222b159ee8
| `-ParmVarDecl 0x56222b159ff8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x56222b15a098 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56222b15a098
| `-ParmVarDecl 0x56222b15a1a8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x56222b15c320 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b136d00 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56222b136e18 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x56222b136ea8 <col:16, col:22> col:16 public
|-EnumDecl 0x56222b136ed0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x56222b136fd0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x56222b1370b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b136fb0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x56222b136f90 <col:21> 'int' 28
| `-EnumConstantDecl 0x56222b137060 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x56222b1370c8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b137040 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x56222b137020 <col:22> 'int' 64
|-CXXMethodDecl 0x56222b137408 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56222b1370f0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56222b137170 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x56222b1371e8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56222b137260 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56222b1374c8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56222b1376c8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x56222b137540 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x56222b1375b8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56222b137778 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56222b1378d8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x56222b1377e8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56222b137980 <col:72> warn_unused_result ""
|-TypedefDecl 0x56222b137ce0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x56222b137c70 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x56222b137c10 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x56222b137bd0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x56222ac0d4e0 'void'
|       |-PointerType 0x56222aeb70a0 'unsigned char *'
|       | `-BuiltinType 0x56222ac0d5e0 'unsigned char'
|       |-TypedefType 0x56222acb3670 'size_t' sugar
|       | |-Typedef 0x56222ac7dbe0 'size_t'
|       | `-BuiltinType 0x56222ac0d640 'unsigned long'
|       `-PointerType 0x56222ac0dce0 'void *'
|         `-BuiltinType 0x56222ac0d4e0 'void'
|-CXXMethodDecl 0x56222b138158 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x56222b137d50 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x56222b137dc8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56222b137e60 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x56222b137ee0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x56222b152850 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x56222b152838 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x56222b152800 <col:58> 'int' 0
| |-ParmVarDecl 0x56222b137f60 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x56222b152878 <col:76> 'int' 0
| |-ParmVarDecl 0x56222b137fe0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x56222b152898 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x56222b138228 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x56222b1382a8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56222b138368 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x56222b138408 <col:20>
| `-OptimizeNoneAttr 0x56222b138460 <col:30>
|-CXXMethodDecl 0x56222b1384d8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x56222b138578 <col:20>
| `-OptimizeNoneAttr 0x56222b1385d0 <col:30>
|-CXXMethodDecl 0x56222b138648 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x56222b1386e8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x56222b138798 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x56222b138838 <col:20>
| |-OptimizeNoneAttr 0x56222b138890 <col:30>
| `-WarnUnusedResultAttr 0x56222b1388b8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x56222b138910 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x56222b1389b0 <col:20>
| `-OptimizeNoneAttr 0x56222b138a08 <col:30>
|-CXXMethodDecl 0x56222b138a58 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x56222b138af8 <col:20>
| `-OptimizeNoneAttr 0x56222b138b50 <col:30>
|-CXXMethodDecl 0x56222b138b98 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x56222b138c38 <col:20>
| `-OptimizeNoneAttr 0x56222b138c90 <col:30>
|-CXXMethodDecl 0x56222b138cd8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56222b138d98 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56222b138e60 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56222b138f28 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56222b138fe8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56222b139108 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x56222b152960 <col:54, line:99:5>
|   `-ReturnStmt 0x56222b152950 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x56222b152938 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x56222b152908 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56222b1493e8
|         `-CXXThisExpr 0x56222b1528f8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x56222b1392a8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x56222b1391b8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x56222b152a10 <col:67, line:103:5>
|   `-BinaryOperator 0x56222b1529f0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56222b152988 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56222b1493e8
|     | `-CXXThisExpr 0x56222b152978 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56222b1529d8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x56222b1529b8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x56222b1391b8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x56222b1393a0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x56222b152a90 <col:33, line:107:5>
|   `-ReturnStmt 0x56222b152a80 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x56222b152a68 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56222b152a38 <col:16> 'void *' lvalue ->_destructor_argument 0x56222b149450
|         `-CXXThisExpr 0x56222b152a28 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56222b139460 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x56222b1530c0 <col:25, line:113:5>
|   |-ParenExpr 0x56222b152e08 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x56222b152dd8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x56222b152b48 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56222b152b20 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x56222b152ae8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x56222b152ab8 <col:24> '<bound member function type>' ->shared 0x56222b1384d8
|   |   |       `-ImplicitCastExpr 0x56222b152b08 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x56222b152aa8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56222b152ba8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56222b152b88 <col:42> 'int' 0
|   |   `-CallExpr 0x56222b152d38 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x56222b152d20 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b152d00 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56222b152d78 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b152c18 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x56222b152d90 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b152c40 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56222b152da8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56222b152c78 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x56222b152dc0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56222b152ce8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56222b152cd0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56222b152c98 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x56222b153008 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x56222b152e38 <col:2> 'unsigned char *' lvalue ->_head 0x56222b1491f0
|   | | `-CXXThisExpr 0x56222b152e28 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x56222b152ff0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x56222b152fd0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x56222b152e78 <col:10> 'unsigned char *' lvalue ->_data 0x56222b149258
|   |     | `-CXXThisExpr 0x56222b152e68 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x56222b152fb8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x56222b152f98 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x56222b152eb8 <col:18> 'unsigned char *' lvalue ->_tail 0x56222b1492c0
|   |         | `-CXXThisExpr 0x56222b152ea8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x56222b152f80 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x56222b152f60 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x56222b152ef8 <col:26> 'unsigned char *' lvalue ->_end 0x56222b149328
|   |             | `-CXXThisExpr 0x56222b152ee8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x56222b152f48 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x56222b152f28 <col:33> 'int' 0
|   `-BinaryOperator 0x56222b1530a0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56222b153038 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56222b1493e8
|     | `-CXXThisExpr 0x56222b153028 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56222b153088 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x56222b153068 <col:16> 'int' 0
|-CXXMethodDecl 0x56222b1395a0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56222b139510 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56222b139648 <col:20>
| |-OptimizeNoneAttr 0x56222b1396a0 <col:30>
| `-WarnUnusedResultAttr 0x56222b1396c8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56222b139798 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56222b139708 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56222b139840 <col:20>
| |-OptimizeNoneAttr 0x56222b139898 <col:30>
| `-WarnUnusedResultAttr 0x56222b1398c0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x56222b1399f8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56222b139900 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56222b139aa0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x56222b139ba0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x56222b139b10 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56222b139c48 <col:20>
| `-OptimizeNoneAttr 0x56222b139ca0 <col:30>
|-CXXMethodDecl 0x56222b139d68 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56222b139cd8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56222b139e10 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x56222b139f10 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56222b139e80 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56222b139fb8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56222b13a0b8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x56222b13a028 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56222b13a160 <col:20>
| `-OptimizeNoneAttr 0x56222b13a1b8 <col:30>
|-CXXMethodDecl 0x56222b13a348 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x56222b13a1f8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x56222b13a270 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x56222b1528b8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x56222b13a3f8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x56222b13a5f8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56222b13a470 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x56222b13a4e8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b13a808 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56222b13a6b8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56222b13a730 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b13aa18 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x56222b13a8c8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x56222b13a948 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x56222b1528c8 <col:39> 'int' 0
|-CXXMethodDecl 0x56222b13aae8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x56222b13abb0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56222b13ac78 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x56222b13ad38 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56222b13ae00 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x56222b13af48 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x56222b13aeb8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x56222b13b118 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56222b13b008 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x56222b13b080 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b13b1e8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x56222b13b2a8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x56222b13b348 <col:20>
| `-OptimizeNoneAttr 0x56222b13b3a0 <col:30>
|-CXXMethodDecl 0x56222b13b3f0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56222b13b490 <col:20>
| `-OptimizeNoneAttr 0x56222b13b4e8 <col:30>
|-CXXMethodDecl 0x56222b13b538 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x56222b13b5f8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56222b13b6c0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x56222b13b760 <col:20>
| `-OptimizeNoneAttr 0x56222b13b7b8 <col:30>
|-CXXMethodDecl 0x56222b13b908 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56222b13b7f8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x56222b13b870 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b13ba58 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x56222b13b9c8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b13bb30 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x56222b13bbf0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x56222b13bc90 <col:20>
| `-OptimizeNoneAttr 0x56222b13bce8 <col:30>
|-CXXMethodDecl 0x56222b13bd38 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56222b13bdd8 <col:20>
| `-OptimizeNoneAttr 0x56222b13be30 <col:30>
|-CXXMethodDecl 0x56222b13be80 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x56222b13bf48 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x56222b13bfe8 <col:20>
| `-OptimizeNoneAttr 0x56222b13c040 <col:30>
|-CXXMethodDecl 0x56222b13c088 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x56222b13c1a8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x56222b13c318 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x56222b13c258 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x56222b13c408 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x56222b13c4a8 <col:20>
| `-OptimizeNoneAttr 0x56222b13c500 <col:30>
|-CXXMethodDecl 0x56222b13c550 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x56222b13c610 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56222b13c848 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x56222b13c6c0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x56222b13c738 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56222b13c8f8 <col:20>
| `-OptimizeNoneAttr 0x56222b13c950 <col:30>
|-CXXMethodDecl 0x56222b13c9f8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x56222b13ca98 <col:20>
| `-OptimizeNoneAttr 0x56222b13caf0 <col:30>
|-CXXMethodDecl 0x56222b13cb40 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x56222b13cbe0 <col:20>
| `-OptimizeNoneAttr 0x56222b13cc38 <col:30>
|-CXXMethodDecl 0x56222b13cc80 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x56222b13cd20 <col:20>
| `-OptimizeNoneAttr 0x56222b13cd78 <col:30>
|-CXXMethodDecl 0x56222b13ce78 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x56222b13cdb0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x56222b13cf20 <col:20>
| `-OptimizeNoneAttr 0x56222b13cf78 <col:30>
|-CXXMethodDecl 0x56222b13d138 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x56222b13cfb0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x56222b13d028 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56222b13d1e8 <col:20>
| `-OptimizeNoneAttr 0x56222b13d240 <col:30>
|-CXXMethodDecl 0x56222b13d2e8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x56222b13d408 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x56222b13d528 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x56222b13d5c8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x56222b13d5f0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x56222b13d718 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x56222b13d7b8 <col:20>
| `-OptimizeNoneAttr 0x56222b13d810 <col:30>
|-CXXMethodDecl 0x56222b13d8b8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x56222b13d958 <col:20>
| `-OptimizeNoneAttr 0x56222b13d9b0 <col:30>
|-AccessSpecDecl 0x56222b13d9d8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x56222b13da00 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x56222b13db00 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x56222b13db50 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b13dae0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x56222b13dac0 <col:14> 'int' 48
|-CXXMethodDecl 0x56222b13dbb8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x56222b13dc58 <col:20>
| `-OptimizeNoneAttr 0x56222b13dcb0 <col:30>
|-CXXMethodDecl 0x56222b13dd28 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x56222b13ddc8 <col:20>
| `-OptimizeNoneAttr 0x56222b13de20 <col:30>
|-CXXMethodDecl 0x56222b13dee8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56222b13de58 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x56222b13e088 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x56222b13e228 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x56222b13e138 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x56222b13e2d0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x56222b13e3d0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56222b13e780 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b13e3b0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x56222b13e390 <col:9> 'int' 0
| |-EnumConstantDecl 0x56222b13e460 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56222b13e798 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b13e440 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x56222b13e420 <col:14> 'int' 1
| |-EnumConstantDecl 0x56222b13e4f0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56222b13e7b0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b13e4d0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x56222b13e4b0 <col:14> 'int' 2
| |-EnumConstantDecl 0x56222b13e580 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56222b13e7c8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b13e560 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x56222b13e540 <col:14> 'int' 3
| |-EnumConstantDecl 0x56222b13e610 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56222b13e7e0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b13e5f0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x56222b13e5d0 <col:13> 'int' 4
| |-EnumConstantDecl 0x56222b13e6a0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56222b13e7f8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b13e680 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x56222b13e660 <col:13> 'int' 5
| `-EnumConstantDecl 0x56222b13e730 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x56222b13e810 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b13e710 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x56222b13e6f0 <col:14> 'int' 6
|-CXXMethodDecl 0x56222b13e878 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x56222b13e918 <col:20>
| `-OptimizeNoneAttr 0x56222b13e970 <col:30>
|-CXXMethodDecl 0x56222b13ea68 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x56222b13e9a8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x56222b13eb10 <col:20>
| `-OptimizeNoneAttr 0x56222b13eb68 <col:30>
|-CXXMethodDecl 0x56222b13ebd8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x56222b13ed00 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x56222b13ee78 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x56222b13edb0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x56222b13ef40 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x56222b13f008 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x56222b13f148 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x56222b13f0b8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x56222b13f1f0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x56222b13f2f0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56222b13f4f0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b13f2d0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x56222b13f2b0 <col:23> 'int' 0
| |-EnumConstantDecl 0x56222b13f380 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56222b13f508 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b13f360 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x56222b13f340 <col:45> 'int' 4
| |-EnumConstantDecl 0x56222b13f410 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56222b13f520 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b13f3f0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x56222b13f3d0 <col:24> 'int' 0
| `-EnumConstantDecl 0x56222b13f4a0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x56222b13f538 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b13f480 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x56222b13f460 <col:47> 'int' 16
|-CXXMethodDecl 0x56222b13f598 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x56222b13f708 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x56222b13f648 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x56222b13f7b0 <col:20>
| `-OptimizeNoneAttr 0x56222b13f808 <col:30>
|-CXXMethodDecl 0x56222b13f858 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x56222b1531e0 <col:18, col:36>
|   `-ReturnStmt 0x56222b1531d0 <col:20, col:33>
|     `-ImplicitCastExpr 0x56222b1531b8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x56222b153198 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x56222b153168 <col:27> '<bound member function type>' ->xanno 0x56222b13d8b8
|           `-CXXThisExpr 0x56222b153158 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x56222b13f950 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x56222b1532f0 <col:30, col:48>
|   `-ReturnStmt 0x56222b1532e0 <col:32, col:45>
|     `-ImplicitCastExpr 0x56222b1532c8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x56222b1532a8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x56222b153278 <col:39> '<bound member function type>' ->xanno 0x56222b13d718
|           `-CXXThisExpr 0x56222b153268 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x56222b13fa38 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x56222b153488 <col:24, col:50>
|   `-ReturnStmt 0x56222b153478 <col:26, col:47>
|     `-UnaryOperator 0x56222b153460 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56222b153440 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x56222b153428 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56222b1533d8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x56222b1486f8
|         |   `-CXXMemberCallExpr 0x56222b1533b8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x56222b153388 <col:34> '<bound member function type>' ->xanno 0x56222b13d8b8
|         |       `-CXXThisExpr 0x56222b153378 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x56222b153408 <col:46> 'int' 0
|-CXXMethodDecl 0x56222b13fb40 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x56222b153658 <col:36, col:62>
|   `-ReturnStmt 0x56222b153648 <col:38, col:59>
|     `-UnaryOperator 0x56222b153630 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56222b153610 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56222b1535f8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56222b153570 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x56222b1486f8
|         |   `-CXXMemberCallExpr 0x56222b153550 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56222b153520 <col:46> '<bound member function type>' ->xanno 0x56222b13d718
|         |       `-CXXThisExpr 0x56222b153510 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56222b1535a0 <col:58> 'int' 0
|-CXXMethodDecl 0x56222b13fc58 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x56222b1537f0 <col:26, col:53>
|   `-ReturnStmt 0x56222b1537e0 <col:28, col:50>
|     `-UnaryOperator 0x56222b1537c8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56222b1537a8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x56222b153790 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56222b153740 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x56222b1489f8
|         |   `-CXXMemberCallExpr 0x56222b153720 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x56222b1536f0 <col:36> '<bound member function type>' ->xanno 0x56222b13d8b8
|         |       `-CXXThisExpr 0x56222b1536e0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x56222b153770 <col:49> 'int' 0
|-CXXMethodDecl 0x56222b13fd78 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x56222b1539c8 <col:38, col:65>
|   `-ReturnStmt 0x56222b1539b8 <col:40, col:62>
|     `-UnaryOperator 0x56222b1539a0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56222b153980 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x56222b153968 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56222b1538d8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x56222b1489f8
|         |   `-CXXMemberCallExpr 0x56222b1538b8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56222b153888 <col:48> '<bound member function type>' ->xanno 0x56222b13d718
|         |       `-CXXThisExpr 0x56222b153878 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56222b153908 <col:61> 'int' 0
|-CXXMethodDecl 0x56222b13ff28 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x56222b13fe30 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x56222b154098 <col:34, line:463:5>
|   |-ParenExpr 0x56222b153ee0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x56222b153eb0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56222b153b18 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56222b153ae8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56222b153a38 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56222b153a20 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56222b1539e0 <col:23> 'int' lvalue ParmVar 0x56222b13fe30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56222b153a00 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56222b153ac8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56222b153a98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56222b153a58 <col:33> 'int' lvalue ParmVar 0x56222b13fe30 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56222b153ab0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56222b153a78 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56222b13db00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56222b153b78 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56222b153b58 <col:56> 'int' 0
|   |   `-CallExpr 0x56222b153e10 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56222b153df8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b153dd8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56222b153e50 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b153c68 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56222b153e68 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b153c98 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56222b153e80 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56222b153cd0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x56222b153e98 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56222b153dc0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56222b153da8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56222b153d68 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x56222b154088 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x56222b154070 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x56222b154050 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56222b154020 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56222b153fd0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x56222b1486f8
|         |   `-CXXMemberCallExpr 0x56222b153fb0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56222b153f80 <col:9> '<bound member function type>' ->xanno 0x56222b13d718
|         |       `-CXXThisExpr 0x56222b153f70 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x56222b154038 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x56222b154000 <col:21> 'int' lvalue ParmVar 0x56222b13fe30 'i' 'int'
|-CXXMethodDecl 0x56222b140178 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x56222b13ffe8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x56222b140060 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x56222b154728 <col:40, line:472:5>
|   |-ParenExpr 0x56222b154540 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x56222b154510 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56222b1541f0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56222b1541c0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56222b154110 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56222b1540f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56222b1540b8 <col:23> 'int' lvalue ParmVar 0x56222b13ffe8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56222b1540d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56222b1541a0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56222b154170 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56222b154130 <col:33> 'int' lvalue ParmVar 0x56222b13ffe8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56222b154188 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56222b154150 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56222b13db00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56222b154250 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56222b154230 <col:56> 'int' 0
|   |   `-CallExpr 0x56222b154470 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56222b154458 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b154438 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56222b1544b0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b1542c0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56222b1544c8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b1542f0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56222b1544e0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56222b154328 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x56222b1544f8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56222b154420 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56222b154408 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56222b1543c8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x56222b154708 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x56222b1546b0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x56222b154680 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x56222b154630 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x56222b1486f8
|     | |   `-CXXMemberCallExpr 0x56222b154610 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x56222b1545e0 <col:2> '<bound member function type>' ->xanno 0x56222b13d8b8
|     | |       `-CXXThisExpr 0x56222b1545d0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x56222b154698 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56222b154660 <col:14> 'int' lvalue ParmVar 0x56222b13ffe8 'i' 'int'
|     `-ImplicitCastExpr 0x56222b1546f0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x56222b1546d0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x56222b140060 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x56222b140338 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x56222b140240 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56222b154ea8 <col:36, line:485:5>
|   |-ParenExpr 0x56222b154c10 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x56222b154be0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56222b1548c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56222b154890 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56222b1547a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56222b154788 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56222b154748 <col:23> 'int' lvalue ParmVar 0x56222b140240 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56222b154768 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56222b154870 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56222b154858 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56222b1547c0 <col:33> 'int' lvalue ParmVar 0x56222b140240 'i' 'int'
|   |   |     `-BinaryOperator 0x56222b154838 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56222b154820 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56222b1547e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56222b13db00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56222b154800 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56222b154920 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56222b154900 <col:60> 'int' 0
|   |   `-CallExpr 0x56222b154b40 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56222b154b28 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b154b08 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56222b154b80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b154990 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56222b154b98 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b1549c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56222b154bb0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56222b154a00 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x56222b154bc8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56222b154af0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56222b154ad8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56222b154a98 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x56222b154e98 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x56222b154e80 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x56222b154e68 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56222b154e38 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x56222b154dd8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56222b154da8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56222b154d20 <col:61, col:70> 'char const[48]' lvalue ->c 0x56222b1485d0
|             |   `-CXXMemberCallExpr 0x56222b154d00 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56222b154cd0 <col:61> '<bound member function type>' ->xanno 0x56222b13d718
|             |       `-CXXThisExpr 0x56222b154cc0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56222b154dc0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56222b154d50 <col:74> 'int' lvalue ParmVar 0x56222b140240 'i' 'int'
|-CXXMethodDecl 0x56222b140588 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x56222b1403f8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56222b140470 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x56222b1555f8 <col:42, line:500:5>
|   |-ParenExpr 0x56222b155390 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x56222b155360 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56222b155040 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56222b155010 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56222b154f20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56222b154f08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56222b154ec8 <col:23> 'int' lvalue ParmVar 0x56222b1403f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56222b154ee8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56222b154ff0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56222b154fd8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56222b154f40 <col:33> 'int' lvalue ParmVar 0x56222b1403f8 'i' 'int'
|   |   |     `-BinaryOperator 0x56222b154fb8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56222b154fa0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56222b154f60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56222b13db00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56222b154f80 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56222b1550a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56222b155080 <col:60> 'int' 0
|   |   `-CallExpr 0x56222b1552c0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56222b1552a8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b155288 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56222b155300 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b155110 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56222b155318 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b155148 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56222b155330 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56222b155180 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x56222b155348 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56222b155270 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56222b155258 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56222b155218 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x56222b1555d8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x56222b155588 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56222b155558 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x56222b155500 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56222b1554d0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56222b155480 <col:48, col:57> 'char [48]' lvalue ->c 0x56222b1485d0
|     |     |   `-CXXMemberCallExpr 0x56222b155460 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56222b155430 <col:48> '<bound member function type>' ->xanno 0x56222b13d8b8
|     |     |       `-CXXThisExpr 0x56222b155420 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56222b1554e8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56222b1554b0 <col:61> 'int' lvalue ParmVar 0x56222b1403f8 'i' 'int'
|     `-ImplicitCastExpr 0x56222b1555c0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x56222b1555a0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x56222b140470 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x56222b140748 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x56222b140650 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56222b155d58 <col:35, line:513:5>
|   |-ParenExpr 0x56222b155a68 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x56222b155a38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56222b155790 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56222b155760 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56222b155670 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56222b155658 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56222b155618 <col:23> 'int' lvalue ParmVar 0x56222b140650 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56222b155638 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56222b155740 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56222b155728 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56222b155690 <col:33> 'int' lvalue ParmVar 0x56222b140650 'i' 'int'
|   |   |     `-BinaryOperator 0x56222b155708 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56222b1556f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56222b1556b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56222b13db00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56222b1556d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56222b1557f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56222b1557d0 <col:60> 'int' 0
|   |   `-CallExpr 0x56222b155998 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56222b155980 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b155960 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56222b1559d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b155860 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56222b1559f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b155898 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56222b155a08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56222b1558d0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x56222b155a20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56222b155948 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56222b155930 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56222b1558f0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x56222b155d48 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x56222b155d30 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x56222b155d18 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56222b155ce8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x56222b155c60 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56222b155c30 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56222b155be0 <col:60, col:69> 'char const[48]' lvalue ->c 0x56222b1485d0
|             |   `-CXXMemberCallExpr 0x56222b155bc0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56222b155b90 <col:60> '<bound member function type>' ->xanno 0x56222b13d718
|             |       `-CXXThisExpr 0x56222b155b80 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56222b155c48 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56222b155c10 <col:73> 'int' lvalue ParmVar 0x56222b140650 'i' 'int'
|-CXXMethodDecl 0x56222b140998 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x56222b140808 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56222b140880 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x56222b156478 <col:41, line:528:5>
|   |-ParenExpr 0x56222b156200 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x56222b1561d0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56222b155ef0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56222b155ec0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56222b155dd0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56222b155db8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56222b155d78 <col:23> 'int' lvalue ParmVar 0x56222b140808 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56222b155d98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56222b155ea0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56222b155e88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56222b155df0 <col:33> 'int' lvalue ParmVar 0x56222b140808 'i' 'int'
|   |   |     `-BinaryOperator 0x56222b155e68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56222b155e50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56222b155e10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56222b13db00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56222b155e30 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56222b155f50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56222b155f30 <col:60> 'int' 0
|   |   `-CallExpr 0x56222b156130 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56222b156118 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b1560f8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56222b156170 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b155fc0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56222b156188 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b155ff8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56222b1561a0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56222b156030 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x56222b1561b8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56222b1560e0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56222b1560c8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56222b156088 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x56222b156458 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x56222b156408 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56222b1563d8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x56222b156380 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56222b156340 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56222b1562f0 <col:47, col:56> 'char [48]' lvalue ->c 0x56222b1485d0
|     |     |   `-CXXMemberCallExpr 0x56222b1562d0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56222b1562a0 <col:47> '<bound member function type>' ->xanno 0x56222b13d8b8
|     |     |       `-CXXThisExpr 0x56222b156290 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56222b156358 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56222b156320 <col:60> 'int' lvalue ParmVar 0x56222b140808 'i' 'int'
|     `-ImplicitCastExpr 0x56222b156440 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x56222b156420 <col:65> 'int16_t':'short' lvalue ParmVar 0x56222b140880 'x' 'int16_t':'short'
|-CXXMethodDecl 0x56222b140b58 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x56222b140a60 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56222b156b48 <col:36, line:541:5>
|   |-ParenExpr 0x56222b1568e8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x56222b1568b8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56222b156610 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56222b1565e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56222b1564f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56222b1564d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56222b156498 <col:23> 'int' lvalue ParmVar 0x56222b140a60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56222b1564b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56222b1565c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56222b1565a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56222b156510 <col:33> 'int' lvalue ParmVar 0x56222b140a60 'i' 'int'
|   |   |     `-BinaryOperator 0x56222b156588 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56222b156570 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56222b156530 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56222b13db00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56222b156550 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56222b156670 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56222b156650 <col:60> 'int' 0
|   |   `-CallExpr 0x56222b156818 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56222b156800 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b1567e0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56222b156858 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b1566e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56222b156870 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b156718 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56222b156888 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56222b156750 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x56222b1568a0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56222b1567c8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56222b1567b0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56222b156770 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x56222b156b38 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x56222b156b20 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x56222b156b08 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56222b156ad8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x56222b156a80 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56222b156a50 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56222b156a00 <col:61, col:70> 'char const[48]' lvalue ->c 0x56222b1485d0
|             |   `-CXXMemberCallExpr 0x56222b1569e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56222b1569b0 <col:61> '<bound member function type>' ->xanno 0x56222b13d718
|             |       `-CXXThisExpr 0x56222b1569a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56222b156a68 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56222b156a30 <col:74> 'int' lvalue ParmVar 0x56222b140a60 'i' 'int'
|-CXXMethodDecl 0x56222b140d28 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x56222b140c18 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x56222b140c90 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56222b140dd8 <col:20>
| `-OptimizeNoneAttr 0x56222b140e30 <col:30>
|-CXXMethodDecl 0x56222b140f68 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x56222b140e70 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56222b157218 <col:35, line:562:5>
|   |-ParenExpr 0x56222b156fb8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x56222b156f88 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56222b156ce0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56222b156cb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56222b156bc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56222b156ba8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56222b156b68 <col:23> 'int' lvalue ParmVar 0x56222b140e70 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56222b156b88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56222b156c90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56222b156c78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56222b156be0 <col:33> 'int' lvalue ParmVar 0x56222b140e70 'i' 'int'
|   |   |     `-BinaryOperator 0x56222b156c58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56222b156c40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56222b156c00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56222b13db00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56222b156c20 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56222b156d40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56222b156d20 <col:60> 'int' 0
|   |   `-CallExpr 0x56222b156ee8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56222b156ed0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b156eb0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56222b156f28 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b156db0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56222b156f40 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b156de8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56222b156f58 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56222b156e20 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x56222b156f70 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56222b156e98 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56222b156e80 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56222b156e40 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x56222b157208 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x56222b1571f0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x56222b1571d8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56222b1571a8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x56222b157150 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56222b157120 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56222b1570d0 <col:60, col:69> 'char const[48]' lvalue ->c 0x56222b1485d0
|             |   `-CXXMemberCallExpr 0x56222b1570b0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56222b157080 <col:60> '<bound member function type>' ->xanno 0x56222b13d718
|             |       `-CXXThisExpr 0x56222b157070 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56222b157138 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56222b157100 <col:73> 'int' lvalue ParmVar 0x56222b140e70 'i' 'int'
|-CXXMethodDecl 0x56222b141178 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x56222b141028 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56222b1410a0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x56222b1578f8 <col:41, line:577:5>
|   |-ParenExpr 0x56222b157688 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x56222b157658 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56222b1573b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56222b157380 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56222b157290 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56222b157278 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56222b157238 <col:23> 'int' lvalue ParmVar 0x56222b141028 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56222b157258 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56222b157360 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56222b157348 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56222b1572b0 <col:33> 'int' lvalue ParmVar 0x56222b141028 'i' 'int'
|   |   |     `-BinaryOperator 0x56222b157328 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56222b157310 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56222b1572d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56222b13db00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56222b1572f0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56222b157410 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56222b1573f0 <col:60> 'int' 0
|   |   `-CallExpr 0x56222b1575b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56222b1575a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b157580 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56222b1575f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b157480 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56222b157610 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b1574b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56222b157628 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56222b1574f0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x56222b157640 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56222b157568 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56222b157550 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56222b157510 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x56222b1578d8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x56222b157888 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56222b157858 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x56222b1577f8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56222b1577c8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56222b157778 <col:47, col:56> 'char [48]' lvalue ->c 0x56222b1485d0
|     |     |   `-CXXMemberCallExpr 0x56222b157758 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56222b157728 <col:47> '<bound member function type>' ->xanno 0x56222b13d8b8
|     |     |       `-CXXThisExpr 0x56222b157718 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56222b1577e0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56222b1577a8 <col:60> 'int' lvalue ParmVar 0x56222b141028 'i' 'int'
|     `-ImplicitCastExpr 0x56222b1578c0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x56222b1578a0 <col:65> 'int32_t':'int' lvalue ParmVar 0x56222b1410a0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x56222b141338 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x56222b141240 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56222b158028 <col:36, line:591:5>
|   |-ParenExpr 0x56222b157d68 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x56222b157d38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56222b157a90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56222b157a60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56222b157970 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56222b157958 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56222b157918 <col:23> 'int' lvalue ParmVar 0x56222b141240 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56222b157938 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56222b157a40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56222b157a28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56222b157990 <col:33> 'int' lvalue ParmVar 0x56222b141240 'i' 'int'
|   |   |     `-BinaryOperator 0x56222b157a08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56222b1579f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56222b1579b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56222b13db00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56222b1579d0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56222b157af0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56222b157ad0 <col:60> 'int' 0
|   |   `-CallExpr 0x56222b157c98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56222b157c80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b157c60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56222b157cd8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b157b60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56222b157cf0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b157b98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56222b157d08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56222b157bd0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x56222b157d20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56222b157c48 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56222b157c30 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56222b157bf0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x56222b158018 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x56222b158000 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x56222b157fe8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56222b157fb8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x56222b157f30 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56222b157f00 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56222b157eb0 <col:61, col:70> 'char const[48]' lvalue ->c 0x56222b1485d0
|             |   `-CXXMemberCallExpr 0x56222b157e90 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56222b157e60 <col:61> '<bound member function type>' ->xanno 0x56222b13d718
|             |       `-CXXThisExpr 0x56222b157e50 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56222b157f18 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56222b157ee0 <col:74> 'int' lvalue ParmVar 0x56222b141240 'i' 'int'
|-CXXMethodDecl 0x56222b141588 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x56222b1413f8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56222b141470 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x56222b158708 <col:42, line:606:5>
|   |-ParenExpr 0x56222b158498 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x56222b158468 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56222b1581c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56222b158190 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56222b1580a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56222b158088 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56222b158048 <col:23> 'int' lvalue ParmVar 0x56222b1413f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56222b158068 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56222b158170 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56222b158158 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56222b1580c0 <col:33> 'int' lvalue ParmVar 0x56222b1413f8 'i' 'int'
|   |   |     `-BinaryOperator 0x56222b158138 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56222b158120 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56222b1580e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56222b13db00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56222b158100 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56222b158220 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56222b158200 <col:60> 'int' 0
|   |   `-CallExpr 0x56222b1583c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56222b1583b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b158390 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56222b158408 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b158290 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56222b158420 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b1582c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56222b158438 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56222b158300 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x56222b158450 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56222b158378 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56222b158360 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56222b158320 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x56222b1586e8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x56222b158698 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56222b158668 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x56222b158608 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56222b1585d8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56222b158588 <col:48, col:57> 'char [48]' lvalue ->c 0x56222b1485d0
|     |     |   `-CXXMemberCallExpr 0x56222b158568 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56222b158538 <col:48> '<bound member function type>' ->xanno 0x56222b13d8b8
|     |     |       `-CXXThisExpr 0x56222b158528 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56222b1585f0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56222b1585b8 <col:61> 'int' lvalue ParmVar 0x56222b1413f8 'i' 'int'
|     `-ImplicitCastExpr 0x56222b1586d0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x56222b1586b0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x56222b141470 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x56222b141720 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x56222b141650 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x56222b158f78 <col:33, line:620:5>
|   |-ParenExpr 0x56222b158cf0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x56222b158cc0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56222b158910 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56222b1588e0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56222b158780 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56222b158768 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56222b158728 <col:23> 'int' lvalue ParmVar 0x56222b141650 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56222b158748 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56222b1588c0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56222b1588a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56222b1587a0 <col:33> 'int' lvalue ParmVar 0x56222b141650 'i' 'int'
|   |   |     `-BinaryOperator 0x56222b158888 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56222b158870 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56222b1587c0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56222b13db00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56222b158848 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56222b158830 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56222b1587f8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56222b158970 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56222b158950 <col:79> 'int' 0
|   |   `-CallExpr 0x56222b158c20 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56222b158c08 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b158be8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56222b158c60 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b158a58 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56222b158c78 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b158aa0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56222b158c90 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56222b158ad8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x56222b158ca8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56222b158bd0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56222b158bb8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56222b158b78 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x56222b158f68 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x56222b158f50 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x56222b158f38 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56222b158f08 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x56222b158e80 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x56222b158e50 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56222b158e00 <col:67, col:76> 'char const[48]' lvalue ->c 0x56222b1485d0
|             |   `-CXXMemberCallExpr 0x56222b158de0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56222b158db0 <col:67> '<bound member function type>' ->xanno 0x56222b13d718
|             |       `-CXXThisExpr 0x56222b158da0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56222b158e68 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56222b158e30 <col:80> 'int' lvalue ParmVar 0x56222b141650 'i' 'int'
|-CXXMethodDecl 0x56222b141938 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x56222b1417e0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56222b141860 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x56222b1597a0 <col:45, line:635:5>
|   |-ParenExpr 0x56222b1594e8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x56222b1594b8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56222b159180 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56222b159150 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56222b158ff0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56222b158fd8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56222b158f98 <col:23> 'int' lvalue ParmVar 0x56222b1417e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56222b158fb8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56222b159130 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56222b159118 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56222b159010 <col:33> 'int' lvalue ParmVar 0x56222b1417e0 'i' 'int'
|   |   |     `-BinaryOperator 0x56222b1590f8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56222b1590e0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56222b159030 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56222b13db00 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56222b1590b8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56222b1590a0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56222b159068 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56222b1591e0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56222b1591c0 <col:79> 'int' 0
|   |   `-CallExpr 0x56222b159418 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56222b159400 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b1593e0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56222b159458 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b159250 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56222b159470 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56222b159298 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56222b159488 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56222b1592d0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x56222b1594a0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56222b1593c8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56222b1593b0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56222b159368 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x56222b159780 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x56222b1596e8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56222b1596b8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x56222b159658 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56222b159628 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56222b1595d8 <col:54, col:63> 'char [48]' lvalue ->c 0x56222b1485d0
|     |     |   `-CXXMemberCallExpr 0x56222b1595b8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56222b159588 <col:54> '<bound member function type>' ->xanno 0x56222b13d8b8
|     |     |       `-CXXThisExpr 0x56222b159578 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56222b159640 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56222b159608 <col:67> 'int' lvalue ParmVar 0x56222b1417e0 'i' 'int'
|     `-CXXConstCastExpr 0x56222b159750 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x56222b159738 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x56222b159700 <col:91> 'const void *' lvalue ParmVar 0x56222b141860 'x' 'const void *'
|-CXXMethodDecl 0x56222b141a08 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x56222b159828 <col:34, line:640:5>
|   `-ReturnStmt 0x56222b159818 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x56222b159800 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x56222b1597d0 <col:16> 'Packet *' lvalue ->_data_packet 0x56222b149188
|         `-CXXThisExpr 0x56222b1597c0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56222b141b48 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x56222b141ab8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56222b1528e8 <col:46> 'bool' true
|-CXXMethodDecl 0x56222b141cc8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x56222b141c00 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x56222b141d70 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x56222b142520 <line:660:22> "" ""
| |-EnumConstantDecl 0x56222b141e70 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56222b142590 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b141e50 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x56222b141e30 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56222b136fd0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56222b141f00 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56222b1425a8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b141ee0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x56222b141ec0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56222b137060 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56222b141f90 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56222b1425c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b141f70 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56222b141f50 <col:21> 'int' 0
| |-EnumConstantDecl 0x56222b142020 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56222b1425d8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b142000 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x56222b141fe0 <col:19> 'int' 16
| |-EnumConstantDecl 0x56222b1420b0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56222b1425f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b142090 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x56222b142070 <col:21> 'int' 16
| |-EnumConstantDecl 0x56222b142140 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56222b142608 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b142120 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56222b142100 <col:19> 'int' 32
| |-EnumConstantDecl 0x56222b1421d0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56222b142620 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b1421b0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x56222b142190 <col:19> 'int' EnumConstant 0x56222b142020 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56222b142260 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56222b142638 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b142240 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x56222b142220 <col:19> 'int' EnumConstant 0x56222b142140 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56222b142330 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56222b142650 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b142310 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x56222b1422f0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56222b1422b0 <col:23> 'int' EnumConstant 0x56222b142260 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56222b1422d0 <col:40> 'int' 2
| |-EnumConstantDecl 0x56222b142400 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56222b142668 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b1423e0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x56222b1423c0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56222b142380 <col:23> 'int' EnumConstant 0x56222b142260 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56222b1423a0 <col:40> 'int' 4
| `-EnumConstantDecl 0x56222b1424d0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x56222b142680 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b1424b0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x56222b142490 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x56222b142450 <col:23> 'int' EnumConstant 0x56222b142260 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x56222b142470 <col:40> 'int' 8
|-CXXMethodDecl 0x56222b1426c0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x56222b142760 <col:68> "" ""
|-CXXMethodDecl 0x56222b1427f8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x56222b142898 <col:45> "" ""
|-CXXMethodDecl 0x56222b142930 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56222b1429d0 <col:57> "" ""
|-CXXMethodDecl 0x56222b142a68 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x56222b142b08 <col:45> "" ""
|-CXXMethodDecl 0x56222b142ba0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56222b142c40 <col:57> "" ""
|-CXXMethodDecl 0x56222b142cd0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x56222b142d70 <col:51> "" ""
|-CXXMethodDecl 0x56222b142e00 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56222b142ea0 <col:63> "" ""
|-CXXMethodDecl 0x56222b142f30 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x56222b142fd0 <col:53> "" ""
|-CXXMethodDecl 0x56222b143060 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56222b143100 <col:65> "" ""
|-CXXMethodDecl 0x56222b143218 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56222b143188 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x56222b1432c0 <col:61> "" ""
|-CXXMethodDecl 0x56222b143458 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56222b143348 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x56222b1433c0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56222b143508 <col:67> "" ""
|-CXXMethodDecl 0x56222b143620 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56222b143590 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56222b1436c8 <col:63> "" ""
|-CXXMethodDecl 0x56222b143860 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56222b143750 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56222b1437c8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56222b143910 <col:69> "" ""
|-CXXMethodDecl 0x56222b143a28 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56222b143998 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56222b143ad0 <col:63> "" ""
|-CXXMethodDecl 0x56222b1461a8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56222b146098 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56222b146110 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56222b146258 <col:69> "" ""
|-CXXMethodDecl 0x56222b146370 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x56222b1462e0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x56222b146418 <col:62> "" ""
|-CXXMethodDecl 0x56222b1465b0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56222b1464a0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56222b146518 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x56222b146660 <col:68> "" ""
|-CXXMethodDecl 0x56222b146778 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x56222b1466e8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56222b146820 <col:63> "" ""
|-CXXMethodDecl 0x56222b1469b8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x56222b1468a8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56222b146920 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x56222b146a68 <col:69> "" ""
|-CXXMethodDecl 0x56222b146af8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56222b146b98 <col:64> "" ""
|-CXXMethodDecl 0x56222b146c28 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x56222b146cc8 <col:52> "" ""
|-CXXMethodDecl 0x56222b146d58 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56222b146df8 <col:67> "" ""
|-CXXMethodDecl 0x56222b146e88 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x56222b146f28 <col:55> "" ""
|-CXXMethodDecl 0x56222b147040 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56222b146fb0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56222b1470e8 <col:58> "" ""
|-CXXMethodDecl 0x56222b147280 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56222b147170 <col:33> col:36 'int'
| |-ParmVarDecl 0x56222b1471e8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56222b147330 <col:62> "" ""
|-CXXMethodDecl 0x56222b147448 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x56222b1473b8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56222b1474f0 <col:58> "" ""
|-CXXMethodDecl 0x56222b147688 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x56222b147578 <col:33> col:36 'int'
| |-ParmVarDecl 0x56222b1475f0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x56222b147738 <col:62> "" ""
|-CXXMethodDecl 0x56222b147850 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56222b1477c0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x56222b1478f8 <col:60> "" ""
|-CXXMethodDecl 0x56222b147a90 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56222b147980 <col:34> col:37 'int'
| |-ParmVarDecl 0x56222b1479f8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56222b147b40 <col:64> "" ""
|-CXXMethodDecl 0x56222b147c58 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x56222b147bc8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56222b147d00 <col:58> "" ""
|-CXXMethodDecl 0x56222b147e98 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56222b147d88 <col:33> col:36 'int'
| |-ParmVarDecl 0x56222b147e00 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x56222b147f48 <col:62> "" ""
|-CXXMethodDecl 0x56222b148060 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56222b147fd0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x56222b148108 <col:59> "" ""
|-CXXMethodDecl 0x56222b1482a0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56222b148190 <col:33> col:36 'int'
| |-ParmVarDecl 0x56222b148208 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56222b148350 <col:63> "" ""
|-AccessSpecDecl 0x56222b1483c0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x56222b1483e8 prev 0x56222b13d5f0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56222b1484e0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x56222b1485d0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x56222b1486f8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x56222b148878 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x56222b1489f8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x56222b148b78 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x56222b1599a8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56222b15a218 <col:11>
| |-CXXDestructorDecl 0x56222b159a80 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x56222b159bb8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56222b159bb8
| | `-ParmVarDecl 0x56222b159cc8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x56222b159d68 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56222b159d68
| | `-ParmVarDecl 0x56222b159e78 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x56222b15cc38 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56222b15cd48 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x56222b15cfc8 <col:11>
| |   `-ReturnStmt 0x56222b15cfb8 <col:11>
| |     `-UnaryOperator 0x56222b15cfa0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56222b15cf90 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x56222b15cdb8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56222b15cdb8
|   `-ParmVarDecl 0x56222b15cec8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x56222b148be0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56222b148cf8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x56222b148d98 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x56222b148e00 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x56222b148e68 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x56222b148ed0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x56222b148f30 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x56222b148ff0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x56222b149050 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x56222b1490b0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x56222b1598b8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x56222b148d98 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x56222b15a228 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x56222b15a280 <col:12>
| |-CXXConstructorDecl 0x56222b159ee8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56222b159ee8
| | `-ParmVarDecl 0x56222b159ff8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x56222b15a098 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56222b15a098
| | `-ParmVarDecl 0x56222b15a1a8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x56222b15c320 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x56222b149128 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x56222b149188 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x56222b1491f0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x56222b149258 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x56222b1492c0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x56222b149328 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x56222b149388 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x56222b1493e8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x56222b149450 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x56222b1494d8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x56222b149128 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x56222b159850 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x56222b149388 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x56222b15a290 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x56222b15a2f0 <col:21, line:755:5>
|-CXXConstructorDecl 0x56222b149678 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x56222b1495b8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x56222b149770 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x56222b149958 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x56222b149860 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x56222b149c28 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x56222b149a10 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56222b149a88 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56222b149b00 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b149e48 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x56222b149cf8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x56222b149d70 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x56222b152428 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x56222b149f08 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x56222b149f80 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x56222b149ff8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x56222b152580 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56222b1524f0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b1526c8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56222b152638 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x56222b1527c0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b108680 prev 0x56222b0ff4c0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56222b108778 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x56222b108818 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x56222b10f5e0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56222b10f9c8 <col:11>
|-CXXConstructorDecl 0x56222b10f6c0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56222b10f7a8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56222b110110 <col:11>
|-CXXConstructorDecl 0x56222b10f848 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56222b10f958 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x56222b111968 <col:11>
|-CXXDestructorDecl 0x56222b110c78 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56222ae17828 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56222ae17938 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56222ae18200 <col:11>
|   `-ReturnStmt 0x56222ae181f0 <col:11>
|     `-UnaryOperator 0x56222ae181d8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56222ae181c8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x56222ae179a8 <col:11> col:11 implicit constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&)' inline default trivial noexcept-unevaluated 0x56222ae179a8
  `-ParmVarDecl 0x56222ae17ab8 <col:11> col:11 'Timestamp::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b0fe678 prev 0x56222b0fe388 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56222b0fe770 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x56222b0fe800 <col:19, col:25> col:19 public
|-TypedefDecl 0x56222b0fe838 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x56222ad63a00 'int32_t' sugar
|   |-Typedef 0x56222ac76328 'int32_t'
|   `-TypedefType 0x56222ac4f510 '__int32_t' sugar
|     |-Typedef 0x56222ac4f128 '__int32_t'
|     `-BuiltinType 0x56222ac0d580 'int'
|-TypedefDecl 0x56222b0fe8a0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x56222ad63bc0 'int64_t' sugar
|   |-Typedef 0x56222ac76390 'int64_t'
|   `-TypedefType 0x56222ac4f630 '__int64_t' sugar
|     |-Typedef 0x56222ac4f208 '__int64_t'
|     `-BuiltinType 0x56222ac0d5a0 'long'
|-EnumDecl 0x56222b0fe8f8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x56222b0fea70 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x56222b0fea50 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x56222b0fea28 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x56222b0fea10 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x56222b0fe9e0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x56222b0feb68 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x56222b0feb48 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x56222b0feb20 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x56222b0feb08 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x56222b0feae0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x56222b0feac0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x56222b0febb8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x56222b0fecc0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56222b0ff210 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b0feca0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x56222b0fec80 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x56222b0fed50 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56222b0ff228 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b0fed30 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x56222b0fed10 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x56222b0fede0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56222b0ff240 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b0fedc0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x56222b0feda0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x56222b0fee70 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56222b0ff258 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b0fee50 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x56222b0fee30 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x56222b0fef00 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56222b0ff270 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b0feee0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x56222b0feec0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x56222b0fef90 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56222b0ff288 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b0fef70 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x56222b0fef50 <col:24> 'int' 1000
| |-EnumConstantDecl 0x56222b0ff020 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56222b0ff2a0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b0ff000 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x56222b0fefe0 <col:26> 'int' EnumConstant 0x56222b0fecc0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x56222b0ff0f0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x56222b0ff2b8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b0ff0d0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x56222b0ff0b0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x56222b0ff070 <col:27> 'int' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x56222b0ff090 <col:44> 'int' EnumConstant 0x56222b0fef90 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x56222b0ff1c0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x56222b0ff2d0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b0ff1a0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x56222b0ff180 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x56222b0ff140 <col:27> 'int' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x56222b0ff160 <col:44> 'int' EnumConstant 0x56222b0fee70 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x56222b0ff2e8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x56222b0ff3f0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x56222b0ff440 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b0ff3d0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x56222b0ff3b0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x56222b0ff468 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x56222ad63630 'uninitialized_type'
|   `-CXXRecord 0x56222ad63598 'uninitialized_type'
|-CXXRecordDecl 0x56222b0ff4c0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x56222b0ff5d0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x56222b1097c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56222b10f9d8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56222b10faf8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x56222b10fab0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x56222b10fa40 <col:9> '<bound member function type>' ->assign 0x56222b104218
|     | `-CXXThisExpr 0x56222b10fa30 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x56222b10fa70 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x56222b10fae0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56222b10fa90 <col:19> 'int' 0
|-CXXConstructorDecl 0x56222b0ff818 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x56222b0ff690 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x56222b0ff708 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56222b10b310 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56222b10b2f0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x56222b1097c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56222b10fb10 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56222b10fc60 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x56222b10fbe8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x56222b10fb78 <col:9> '<bound member function type>' ->assign 0x56222b104218
|     | `-CXXThisExpr 0x56222b10fb68 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56222b10fc30 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56222b10fc18 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x56222b10fba8 <col:16> 'long' lvalue ParmVar 0x56222b0ff690 'sec' 'long'
|     `-ImplicitCastExpr 0x56222b10fc48 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56222b10fbc8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b0ff708 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56222b0ffa78 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56222b0ff8e8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x56222b0ff960 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56222b10b348 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56222b10b328 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x56222b1097c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56222b10fc78 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56222b10fdb0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x56222b10fd50 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x56222b10fce0 <col:9> '<bound member function type>' ->assign 0x56222b104218
|     | `-CXXThisExpr 0x56222b10fcd0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56222b10fd80 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56222b10fd10 <col:16> 'int' lvalue ParmVar 0x56222b0ff8e8 'sec' 'int'
|     `-ImplicitCastExpr 0x56222b10fd98 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56222b10fd30 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b0ff960 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56222b0ffcd8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x56222b0ffb48 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x56222b0ffbc0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56222b10b380 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56222b10b360 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x56222b1097c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56222b10fdc8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56222b10ff18 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x56222b10fea0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x56222b10fe30 <col:9> '<bound member function type>' ->assign 0x56222b104218
|     | `-CXXThisExpr 0x56222b10fe20 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56222b10fee8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56222b10fed0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x56222b10fe60 <col:16> 'unsigned long' lvalue ParmVar 0x56222b0ffb48 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x56222b10ff00 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56222b10fe80 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b0ffbc0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56222b100e70 <line:199:5, line:201:5> line:199:21 Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x56222b0ffda8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x56222b0ffe20 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56222b10b3b8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56222b10b398 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x56222b1097c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56222b10ff30 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56222b110080 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x56222b110008 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x56222b10ff98 <col:9> '<bound member function type>' ->assign 0x56222b104218
|     | `-CXXThisExpr 0x56222b10ff88 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56222b110050 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x56222b110038 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56222b10ffc8 <col:16> 'unsigned int' lvalue ParmVar 0x56222b0ffda8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x56222b110068 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x56222b10ffe8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b0ffe20 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56222b100fd0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x56222b100f40 <col:31> col:37 'double'
|-CXXConstructorDecl 0x56222b101168 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x56222b1010a8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x56222b101398 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x56222b1012a0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x56222b101548 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x56222b101488 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x56222b1097c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56222b110120 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x56222b110098 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x56222b101488 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x56222b110180 <col:19, line:214:5>
|-CXXConstructorDecl 0x56222b101718 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x56222b101658 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x56222b1097c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56222b110190 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56222b110240 <col:53, line:219:5>
|   `-CStyleCastExpr 0x56222b110218 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x56222b1101e8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x56222b101658 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x56222b101908 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x56222b101880 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x56222b0fe420 'Timestamp'
|   | `-CXXRecord 0x56222b0fe678 'Timestamp'
|   `-ParenType 0x56222b101820 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x56222b1017f0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x56222b0fe9c0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x56222b0fe838 'seconds_type'
|         `-TypedefType 0x56222ad63a00 'int32_t' sugar
|           |-Typedef 0x56222ac76328 'int32_t'
|           `-TypedefType 0x56222ac4f510 '__int32_t' sugar
|             |-Typedef 0x56222ac4f128 '__int32_t'
|             `-BuiltinType 0x56222ac0d580 'int'
|-CXXConversionDecl 0x56222b101a48 <line:222:5, col:45> col:12 operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56222b101b18 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x56222b110348 <col:37, line:231:5>
|   `-ReturnStmt 0x56222b110338 <line:227:9, col:23>
|     `-BinaryOperator 0x56222b110318 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x56222b1102e8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56222b110298 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56222b108818
|       |   `-MemberExpr 0x56222b110268 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56222b1097c8
|       |     `-CXXThisExpr 0x56222b110258 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56222b110300 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x56222b1102c8 <col:23> 'int' 0
|-CXXMethodDecl 0x56222b101bd8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x56222b101c98 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x56222b101d58 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x56222b101e18 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x56222b101ed8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x56222b102048 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x56222b101f88 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x56222b102190 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x56222b102100 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b102258 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56222b1022f8 <col:54> "" ""
|-CXXMethodDecl 0x56222b102388 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56222b102428 <col:54> "" ""
|-CXXMethodDecl 0x56222b1024b8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x56222b102558 <col:54> "" ""
|-CXXMethodDecl 0x56222b102658 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x56222b102728 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x56222b102858 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x56222b102950 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x56222b102a88 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56222b110560 <col:39, line:271:5>
|   `-ReturnStmt 0x56222b110550 <line:267:9, col:61>
|     `-CallExpr 0x56222b1104f0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x56222b1104d8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56222b110360 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56222b109af8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x56222b110520 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56222b1103c0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56222b108818
|       |   `-MemberExpr 0x56222b110390 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56222b1097c8
|       |     `-CXXThisExpr 0x56222b110380 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56222b110538 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x56222b110460 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x56222b110430 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56222b1103f0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x56222b110448 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x56222b110410 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0fef90 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56222b102b48 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56222b110720 <col:39, line:279:5>
|   `-ReturnStmt 0x56222b110710 <line:275:9, col:61>
|     `-CallExpr 0x56222b1106b0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x56222b110698 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56222b110578 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56222b109af8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x56222b1106e0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56222b1105d8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x56222b108818
|       |   `-MemberExpr 0x56222b1105a8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x56222b1097c8
|       |     `-CXXThisExpr 0x56222b110598 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56222b1106f8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x56222b110678 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x56222b110648 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56222b110608 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x56222b110660 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x56222b110628 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0fee70 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56222b102c08 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x56222b1108b8 <col:39, line:287:5>
|   `-ReturnStmt 0x56222b1108a8 <line:283:9, col:53>
|     `-BinaryOperator 0x56222b110888 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x56222b110858 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x56222b110778 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x56222b108818
|       |   `-MemberExpr 0x56222b110748 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x56222b1097c8
|       |     `-CXXThisExpr 0x56222b110738 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x56222b110870 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x56222b110838 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56222b110818 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x56222b1107e8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56222b1107a8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0fecc0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56222b110800 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56222b1107c8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56222b102cf8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56222b111b50 <col:40, line:293:5>
|   |-DeclStmt 0x56222b110a00 <line:291:9, col:48>
|   | `-VarDecl 0x56222b1108e0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x56222b1109e0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x56222b110988 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x56222b110958 <col:22> '<bound member function type>' ->subsec 0x56222b101c98
|   |     |   `-CXXThisExpr 0x56222b110948 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x56222b1109c8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x56222b1109a8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff0f0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56222b111b40 <line:292:9, col:70>
|     `-ExprWithCleanups 0x56222b111b28 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x56222b111af8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56222b111ae0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x56222b111ac0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x56222b111a90 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x56222b111828 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x56222b111810 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x56222b110a18 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x56222b1108e0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x56222b111a30 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x56222b111a18 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x56222b1119e8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x56222b111840 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x56222b1117b0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x56222b111798 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x56222b111748 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56222b0fe5c8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x56222b1116e8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x56222b110a48 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x56222b110a38 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x56222b111730 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x56222b111718 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x56222b110f08 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x56222b110a70 <col:39> 'int' 0
|               |               `-BinaryOperator 0x56222b110b00 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x56222b110ad0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x56222b110a90 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff0f0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x56222b110ae8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x56222b110ab0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x56222b1108e0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x56222b111a60 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x56222b1117f8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x56222b1117e8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x56222b102db8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56222b1120a8 <col:40, line:302:5>
|   |-DeclStmt 0x56222b111ca0 <line:297:9, col:48>
|   | `-VarDecl 0x56222b111b80 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x56222b111c80 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x56222b111c28 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x56222b111bf8 <col:22> '<bound member function type>' ->subsec 0x56222b101c98
|   |     |   `-CXXThisExpr 0x56222b111be8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x56222b111c68 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x56222b111c48 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff1c0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56222b112098 <line:298:9, col:70>
|     `-ExprWithCleanups 0x56222b112080 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x56222b112050 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56222b112038 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x56222b112018 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x56222b111fe8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x56222b111f10 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x56222b111ef8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x56222b111cb8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x56222b111b80 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x56222b111f88 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x56222b111f70 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x56222b111f40 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x56222b111f28 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x56222b111e98 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x56222b111e80 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x56222b111e60 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x56222b0fe5c8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x56222b111e00 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x56222b111ce8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x56222b111cd8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x56222b111e48 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x56222b111e30 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x56222b111dc0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x56222b111d10 <col:39> 'int' 0
|               |               `-BinaryOperator 0x56222b111da0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x56222b111d70 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x56222b111d30 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff1c0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x56222b111d88 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x56222b111d50 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x56222b111b80 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x56222b111fb8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x56222b111ee0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x56222b111ed0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x56222b102e78 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x56222b112130 <col:40, line:306:5>
|   `-ReturnStmt 0x56222b112120 <line:305:9, col:17>
|     `-CXXConstructExpr 0x56222b1120f0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x56222b1120d8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x56222b1120c8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x56222b103018 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x56222b102f28 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x56222b1031e8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x56222b1030f0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x56222b1032d8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x56222b103448 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x56222b103388 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x56222b112278 <col:56, line:320:5>
|   `-ReturnStmt 0x56222b112268 <line:319:9, col:32>
|     `-ExprWithCleanups 0x56222b112250 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x56222b112220 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56222b112208 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56222b1121c8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56222b112198 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56222b112158 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56222b103388 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x56222b1121b0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56222b112178 <col:31> 'int' 0
|-CXXMethodDecl 0x56222b103688 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56222b103500 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56222b103578 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56222b112448 <col:72, line:326:5>
|   `-ReturnStmt 0x56222b112438 <line:325:9, col:51>
|     `-ExprWithCleanups 0x56222b112420 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56222b1123f0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56222b1123d8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56222b112398 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56222b112380 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56222b1122a0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56222b103500 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56222b112340 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56222b112328 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56222b1122c0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56222b107f70 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56222b112368 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56222b1122e0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b103578 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b103838 <line:328:5, line:337:5> line:328:29 make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56222b103748 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56222b112b10 <col:56, line:337:5>
|   |-DeclStmt 0x56222b112748 <line:329:9, col:51>
|   | `-VarDecl 0x56222b112470 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56222b112730 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56222b112700 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56222b1126e8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56222b1126d0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56222b1126a0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56222b112688 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56222b112670 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56222b112560 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56222b112900 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56222b1127b0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56222b108818
|   | | `-MemberExpr 0x56222b112780 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56222b1097c8
|   | |   `-DeclRefExpr 0x56222b112760 <col:9> 'Timestamp' lvalue Var 0x56222b112470 't' 'Timestamp'
|   | `-BinaryOperator 0x56222b1128e0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x56222b1128b0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56222b1127e0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x56222b103748 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56222b1128c8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x56222b112890 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x56222b112870 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x56222b112840 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x56222b112800 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x56222b112858 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x56222b112820 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0fef90 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56222b112af8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x56222b112ac8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56222b112ab0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56222b112a90 <col:16> 'Timestamp' lvalue Var 0x56222b112470 't' 'Timestamp'
|-CXXMethodDecl 0x56222b103a00 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56222b1038f0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56222b103968 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56222b112cc8 <col:72, line:343:5>
|   `-ReturnStmt 0x56222b112cb8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x56222b112ca0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56222b112c70 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56222b112c58 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56222b112c18 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56222b112c00 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56222b112b48 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56222b1038f0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56222b112bc0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56222b112ba8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56222b112b68 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56222b1080b8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56222b112be8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56222b112b88 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b103968 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b103b50 <line:345:5, line:354:5> line:345:29 make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56222b103ac0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56222b113110 <col:56, line:354:5>
|   |-DeclStmt 0x56222b112eb8 <line:346:9, col:51>
|   | `-VarDecl 0x56222b112cf0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56222b112ea0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56222b112e70 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56222b112e58 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56222b112e40 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56222b112e10 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56222b112df8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56222b112de0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56222b112db0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56222b113070 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56222b112f20 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56222b108818
|   | | `-MemberExpr 0x56222b112ef0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56222b1097c8
|   | |   `-DeclRefExpr 0x56222b112ed0 <col:9> 'Timestamp' lvalue Var 0x56222b112cf0 't' 'Timestamp'
|   | `-BinaryOperator 0x56222b113050 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x56222b113020 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56222b112f50 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x56222b103ac0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56222b113038 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x56222b113000 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x56222b112fe0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x56222b112fb0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x56222b112f70 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x56222b112fc8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x56222b112f90 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0fee70 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56222b1130f8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x56222b1130c8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56222b1130b0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56222b113090 <col:16> 'Timestamp' lvalue Var 0x56222b112cf0 't' 'Timestamp'
|-CXXMethodDecl 0x56222b103d18 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x56222b103c08 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56222b103c80 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56222b1132c8 <col:72, line:360:5>
|   `-ReturnStmt 0x56222b1132b8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x56222b1132a0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x56222b113270 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56222b113258 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56222b113218 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x56222b113200 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x56222b113148 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56222b103c08 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x56222b1131c0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x56222b1131a8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56222b113168 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56222b108200 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x56222b1131e8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x56222b113188 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b103c80 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b103e68 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x56222b103dd8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x56222b11fc38 <col:56, line:371:5>
|   |-DeclStmt 0x56222b1134b8 <line:363:9, col:51>
|   | `-VarDecl 0x56222b1132f0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x56222b1134a0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x56222b113470 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x56222b113458 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x56222b113440 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x56222b113410 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x56222b1133f8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x56222b1133e0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x56222b1133b0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x56222b11fb98 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x56222b113520 <col:9, col:14> 'int64_t':'long' lvalue .x 0x56222b108818
|   | | `-MemberExpr 0x56222b1134f0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x56222b1097c8
|   | |   `-DeclRefExpr 0x56222b1134d0 <col:9> 'Timestamp' lvalue Var 0x56222b1132f0 't' 'Timestamp'
|   | `-CallExpr 0x56222b11fb38 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x56222b11fb20 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x56222b113550 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x56222b109af8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x56222b11fb68 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56222b113570 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x56222b103dd8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x56222b11fb80 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x56222b11fb00 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x56222b11fad0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x56222b113590 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0fecc0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x56222b11fae8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x56222b1135b0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x56222b11fc20 <line:370:9, col:16>
|     `-CXXConstructExpr 0x56222b11fbf0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x56222b11fbd8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x56222b11fbb8 <col:16> 'Timestamp' lvalue Var 0x56222b1132f0 't' 'Timestamp'
|-CXXMethodDecl 0x56222b103f58 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x56222b11fd78 <col:39, line:377:5>
|   `-ReturnStmt 0x56222b11fd68 <line:376:9, col:30>
|     `-ExprWithCleanups 0x56222b11fd50 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x56222b11fd20 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56222b11fd08 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x56222b11fcc8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x56222b11fc70 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x56222b11fcb0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x56222b11fc90 <col:29> 'int' 1
|-CXXMethodDecl 0x56222b104018 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x56222b11fe58 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x56222b11fe10 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x56222b11fda0 <col:9> '<bound member function type>' ->assign 0x56222b104218
|     | `-CXXThisExpr 0x56222b11fd90 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x56222b11fdd0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x56222b11fe40 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x56222b11fdf0 <col:19> 'int' 0
|-CXXMethodDecl 0x56222b104218 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56222b1040c8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56222b104140 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56222b10b3f0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56222b10b3d0 <col:60> 'int' 0
| `-CompoundStmt 0x56222b120050 <col:63, line:395:5>
|   `-BinaryOperator 0x56222b120030 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x56222b11feb0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x56222b108818
|     | `-MemberExpr 0x56222b11fe80 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x56222b1097c8
|     |   `-CXXThisExpr 0x56222b11fe70 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x56222b120010 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x56222b11ffa0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x56222b11ff40 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x56222b11ff28 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x56222b11ff10 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x56222b11fee0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56222b1040c8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x56222b11ff88 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x56222b11ff68 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x56222b11fff8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x56222b11ffe0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x56222b11ffc0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b104140 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b1043e8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56222b1042d8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56222b104350 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56222b1201a8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x56222b120160 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x56222b120078 <col:9> '<bound member function type>' ->assign 0x56222b104218
|     | `-CXXThisExpr 0x56222b120068 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56222b120190 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56222b1200a8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56222b1042d8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x56222b120120 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x56222b120108 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56222b1200c8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56222b1080b8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x56222b120148 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56222b1200e8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b104350 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b1045b8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56222b1044a8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56222b104520 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56222b120300 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x56222b1202b8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x56222b1201d0 <col:9> '<bound member function type>' ->assign 0x56222b104218
|     | `-CXXThisExpr 0x56222b1201c0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x56222b1202e8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56222b120200 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x56222b1044a8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x56222b120278 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x56222b120260 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56222b120220 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x56222b108200 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x56222b1202a0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56222b120240 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b104520 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b104788 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56222b104678 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56222b1046f0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x56222b10b428 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56222b10b408 <col:57> 'int' 0
| `-DeprecatedAttr 0x56222b104838 <col:75> "" ""
|-CXXMethodDecl 0x56222b1049c8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56222b1048b8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56222b104930 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56222b104a78 <col:74> "" ""
|-CXXMethodDecl 0x56222b104c08 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x56222b104af8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x56222b104b70 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56222b104cb8 <col:74> "" ""
|-CXXMethodDecl 0x56222b104d48 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x56222b104de8 <col:42> "" ""
|-CXXMethodDecl 0x56222b107620 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x56222b107500 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56222b107580 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x56222b1076f0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x56222b1077b0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x56222b107850 <col:20>
| `-OptimizeNoneAttr 0x56222b1078a8 <col:30>
|-CXXMethodDecl 0x56222b1078f0 <line:446:5, col:36> col:29 recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x56222b1079b0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x56222b107a70 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56222b107b30 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x56222b107bf0 <line:481:5, col:43> col:29 recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x56222b107cb0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x56222b107d70 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x56222b107e30 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x56222b107f70 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56222b107ee0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56222b120448 <col:58, line:512:5>
|   `-ReturnStmt 0x56222b120438 <line:511:9, col:53>
|     `-BinaryOperator 0x56222b120418 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56222b1203e8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56222b120318 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b107ee0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56222b120400 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56222b1203c8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56222b1203a8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56222b120378 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56222b120338 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56222b120390 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56222b120358 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0fef90 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56222b1080b8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56222b108028 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56222b120590 <col:58, line:516:5>
|   `-ReturnStmt 0x56222b120580 <line:515:9, col:53>
|     `-BinaryOperator 0x56222b120560 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56222b120530 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56222b120460 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b108028 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56222b120548 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56222b120510 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56222b1204f0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56222b1204c0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56222b120480 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56222b1204d8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56222b1204a0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0fee70 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56222b108200 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56222b108170 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56222b1206d8 <col:58, line:520:5>
|   `-ReturnStmt 0x56222b1206c8 <line:519:9, col:53>
|     `-BinaryOperator 0x56222b1206a8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56222b120678 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56222b1205a8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b108170 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56222b120690 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56222b120658 <col:23, col:53> 'int'
|           `-BinaryOperator 0x56222b120638 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x56222b120608 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56222b1205c8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0fecc0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56222b120620 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56222b1205e8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56222b108348 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56222b1082b8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56222b120820 <col:60, line:524:5>
|   `-ReturnStmt 0x56222b120810 <line:523:9, col:55>
|     `-BinaryOperator 0x56222b1207f0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56222b1207c0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56222b1206f0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b1082b8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56222b1207d8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56222b1207a0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56222b120780 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x56222b120750 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56222b120710 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56222b120768 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56222b120730 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0fef90 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56222b108490 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56222b108400 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56222b120968 <col:60, line:528:5>
|   `-ReturnStmt 0x56222b120958 <line:527:9, col:55>
|     `-BinaryOperator 0x56222b120938 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x56222b120908 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56222b120838 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b108400 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56222b120920 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56222b1208e8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56222b1208c8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x56222b120898 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56222b120858 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56222b1208b0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56222b120878 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0fee70 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x56222b1085d8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x56222b108548 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56222b120ab0 <col:60, line:532:5>
|   `-ReturnStmt 0x56222b120aa0 <line:531:9, col:55>
|     `-BinaryOperator 0x56222b120a80 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x56222b120a50 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x56222b120980 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b108548 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x56222b120a68 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x56222b120a30 <col:25, col:55> 'int'
|           `-BinaryOperator 0x56222b120a10 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x56222b1209e0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x56222b1209a0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0fecc0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x56222b1209f8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x56222b1209c0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x56222b0ff020 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x56222b108680 prev 0x56222b0ff4c0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56222b108778 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x56222b108818 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x56222b10f5e0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56222b10f9c8 <col:11>
| |-CXXConstructorDecl 0x56222b10f6c0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56222b10f7a8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x56222b110110 <col:11>
| |-CXXConstructorDecl 0x56222b10f848 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x56222b10f958 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x56222b111968 <col:11>
| |-CXXDestructorDecl 0x56222b110c78 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56222ae17828 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56222ae17938 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x56222ae18200 <col:11>
| |   `-ReturnStmt 0x56222ae181f0 <col:11>
| |     `-UnaryOperator 0x56222ae181d8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56222ae181c8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x56222ae179a8 <col:11> col:11 implicit constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&)' inline default trivial noexcept-unevaluated 0x56222ae179a8
|   `-ParmVarDecl 0x56222ae17ab8 <col:11> col:11 'Timestamp::rep_t &&'
|-EnumDecl 0x56222b108880 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x56222b108980 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56222b108b80 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b108960 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56222b108940 <col:21> 'int' 0
| |-EnumConstantDecl 0x56222b108a10 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56222b108b98 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b1089f0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x56222b1089d0 <col:23> 'int' 1
| |-EnumConstantDecl 0x56222b108aa0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x56222b108bb0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b108a80 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x56222b108a60 <col:23> 'int' 2
| `-EnumConstantDecl 0x56222b108b30 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x56222b108bc8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b108b10 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x56222b108af0 <col:27> 'int' 3
|-CXXMethodDecl 0x56222b108c08 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x56222b108cd0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x56222b108ed8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x56222b108d80 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x56222b108e00 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x56222b10b440 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x56222b1090e8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x56222b108f98 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x56222b109010 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x56222b1091b8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x56222b109278 <line:635:5, col:37> col:24 warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x56222b1093e8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x56222b109328 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x56222b1094b0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56222b109570 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x56222b109630 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x56222b1096f0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x56222b109790 <line:670:3, col:10> col:3 private
|-FieldDecl 0x56222b1097c8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x56222b109838 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x56222b120ac8 <col:27, line:684:5>
|-CXXMethodDecl 0x56222b1098f8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x56222b120ad8 <col:27, line:696:5>
|-CXXMethodDecl 0x56222b109af8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56222b1099a8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56222b109a20 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56222b120c60 <col:66, line:700:5>
|   `-ReturnStmt 0x56222b120c50 <line:699:9, col:31>
|     `-CallExpr 0x56222b120bf0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x56222b120bd8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56222b120b88 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x56222af8bea8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x56222b120c20 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x56222b120b48 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x56222b1099a8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x56222b120c38 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56222b120b68 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b109a20 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56222b109e68 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x56222b109bb8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x56222b109c30 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x56222b109ca8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x56222b109d20 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x56222b120fb0 <col:64, line:707:5>
|   |-DeclStmt 0x56222b120cf0 <line:704:9, col:24>
|   | `-VarDecl 0x56222b120c88 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x56222b120f00 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x56222b120d08 <col:9> 'int32_t':'int' lvalue ParmVar 0x56222b109c30 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x56222b120ee8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x56222b120e80 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x56222b120e68 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56222b120de8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x56222af91178 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x56222b120eb8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x56222b120d88 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x56222b109ca8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x56222b120ed0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x56222b120da8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x56222b109d20 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x56222b120dc8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x56222b120c88 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x56222b120f90 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x56222b120f20 <col:9> 'int32_t':'int' lvalue ParmVar 0x56222b109bb8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x56222b120f78 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x56222b120f60 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x56222b120f40 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x56222b120c88 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x56222b10a108 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x56222b109f38 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x56222b109fb0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x56222b10a028 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x56222b10a3a8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x56222b10a1d0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x56222b10a248 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x56222b10a2c0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x56222b10a538 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x56222b10a470 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x56222b10a738 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x56222b10a5f0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x56222b10a668 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x56222b10aa08 <line:717:5, col:73> col:24
| `-FunctionDecl 0x56222b10a948 parent 0x56222ac0d488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56222b10a7f8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x56222b10a870 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56222b10ac28 <line:718:5, col:72> col:24
| `-FunctionDecl 0x56222b10ab68 parent 0x56222ac0d488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56222b10aa58 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x56222b10aad0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x56222b10adf0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x56222b10ad38 parent 0x56222ac0d488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x56222b10ac78 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x56222b10b078 <line:720:5, col:73> col:30
| `-FunctionDecl 0x56222b10afb8 parent 0x56222ac0d488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56222b10ae68 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56222b10aee0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x56222b10b298 <line:721:5, col:73> col:30
| `-FunctionDecl 0x56222b10b1d8 parent 0x56222ac0d488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x56222b10b0c8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x56222b10b140 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x56222b110b20 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x56222b110c08 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x56222b1097c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56222b111678 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x56222b111630 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56222b1097c8
| |     `-DeclRefExpr 0x56222b111610 <col:7> 'const Timestamp' lvalue ParmVar 0x56222b110c08 '' 'const Timestamp &'
| `-CompoundStmt 0x56222b1116d8 <col:7>
|-CXXConstructorDecl 0x56222b110d88 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56222b110e98 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x56222b1097c8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x56222b111978 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x56222b111920 <col:7> 'Timestamp::rep_t' xvalue ._t 0x56222b1097c8
| |     `-CXXStaticCastExpr 0x56222b1118f0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x56222b1118c0 <col:7> 'Timestamp' lvalue ParmVar 0x56222b110e98 '' 'Timestamp &&'
| `-CompoundStmt 0x56222b1119d8 <col:7>
|-CXXDestructorDecl 0x56222b110f48 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56222ae17678 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x56222ae17788 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x56222ae18278 <col:7>
|   |-CXXMemberCallExpr 0x56222ae18218 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x56222ae18158 <col:7> '<bound member function type>' .operator= 0x56222ae17828
|   | | `-MemberExpr 0x56222ae18068 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x56222b1097c8
|   | |   `-CXXThisExpr 0x56222ae18058 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x56222ae18128 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x56222b1097c8
|   |   `-DeclRefExpr 0x56222ae18108 <col:7> 'const Timestamp' lvalue ParmVar 0x56222ae17788 '' 'const Timestamp &'
|   `-ReturnStmt 0x56222ae18268 <col:7>
|     `-UnaryOperator 0x56222ae18250 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56222ae18240 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x56222ae17b28 <col:7> col:7 implicit operator= 'Timestamp &(Timestamp &&)' inline default trivial noexcept-unevaluated 0x56222ae17b28
  `-ParmVarDecl 0x56222ae17c38 <col:7> col:7 'Timestamp &&'

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b1fe648 <../elements/tcpudp/snooptcp.hh:46:3, line:55:3> line:46:10 referenced struct SCacheEntry definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56222b1fe768 <col:3, col:10> col:10 implicit struct SCacheEntry
|-FieldDecl 0x56222b1fe808 <line:47:5, col:13> col:13 referenced packet 'Packet *'
|-FieldDecl 0x56222b1fe870 <line:48:5, col:14> col:14 seq 'unsigned int'
|-FieldDecl 0x56222b1fe8d8 <line:49:5, col:14> col:14 size 'unsigned int'
|-FieldDecl 0x56222b1fe938 <line:50:5, col:15> col:15 snd_time 'Timestamp'
|-FieldDecl 0x56222b1fe9a0 <line:51:5, col:9> col:9 num_rxmit 'int'
|-FieldDecl 0x56222b1fea08 <line:52:5, col:9> col:9 sender_rxmit 'int'
|-CXXMethodDecl 0x56222b1feaa8 <line:54:5, col:16> col:10 clear 'void ()'
|-CXXConstructorDecl 0x56222b27a5c8 <line:46:10> col:10 implicit constexpr SCacheEntry 'void (const SnoopTCP::SCacheEntry &)' inline default trivial noexcept-unevaluated 0x56222b27a5c8
| `-ParmVarDecl 0x56222b27a6d8 <col:10> col:10 'const SnoopTCP::SCacheEntry &'
|-CXXConstructorDecl 0x56222b27a778 <col:10> col:10 implicit constexpr SCacheEntry 'void (SnoopTCP::SCacheEntry &&)' inline default trivial noexcept-unevaluated 0x56222b27a778
| `-ParmVarDecl 0x56222b27a888 <col:10> col:10 'SnoopTCP::SCacheEntry &&'
|-CXXDestructorDecl 0x56222b27aa78 <col:10> col:10 implicit referenced ~SCacheEntry 'void () noexcept' inline default trivial
`-CXXConstructorDecl 0x56222b27af18 <col:10> col:10 implicit used SCacheEntry 'void () noexcept(false)' inline default
  |-CXXCtorInitializer Field 0x56222b1fe938 'snd_time' 'Timestamp'
  | `-CXXConstructExpr 0x56222b27b030 <col:10> 'Timestamp' 'void ()'
  `-CompoundStmt 0x56222b27b088 <col:10>

Layout: <CGRecordLayout
  LLVMType:%"struct.SnoopTCP::SCacheEntry" = type { %class.Packet*, i32, i32, %class.Timestamp, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.SnoopTCP::SCacheEntry" = type { %class.Packet*, i32, i32, %class.Timestamp, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b209958 parent 0x56222b1fd808 prev 0x56222b1feb60 <../elements/tcpudp/snooptcp.hh:67:1, line:112:1> line:67:18 struct PCB definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56222b209a90 <col:1, col:18> col:18 implicit referenced struct PCB
|-EnumDecl 0x56222b209b20 <line:69:3, line:70:45> line:69:3
| |-EnumConstantDecl 0x56222b209c20 <col:10, col:25> col:10 referenced S_CACHE_SIZE 'SnoopTCP::PCB::(anonymous enum at ../elements/tcpudp/snooptcp.hh:69:3)'
| | `-ImplicitCastExpr 0x56222b209da0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56222b209c00 <col:25> 'int' Int: 1024
| |     `-IntegerLiteral 0x56222b209be0 <col:25> 'int' 1024
| `-EnumConstantDecl 0x56222b209d50 <line:70:3, col:43> col:3 S_CACHE_HIGHWATER 'SnoopTCP::PCB::(anonymous enum at ../elements/tcpudp/snooptcp.hh:69:3)'
|   `-ImplicitCastExpr 0x56222b209db8 <col:23, col:43> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222b209d30 <col:23, col:43> 'int' Int: 921
|       `-ParenExpr 0x56222b209d10 <col:23, col:43> 'int'
|         `-BinaryOperator 0x56222b209cf0 <col:24, col:41> 'int' '/'
|           |-BinaryOperator 0x56222b209cb0 <col:24, col:26> 'int' '*'
|           | |-IntegerLiteral 0x56222b209c70 <col:24> 'int' 9
|           | `-DeclRefExpr 0x56222b209c90 <col:26> 'int' EnumConstant 0x56222b209c20 'S_CACHE_SIZE' 'SnoopTCP::PCB::(anonymous enum at ../elements/tcpudp/snooptcp.hh:69:3)'
|           `-IntegerLiteral 0x56222b209cd0 <col:41> 'int' 10
|-FieldDecl 0x56222b209f48 <line:72:3, col:36> col:15 _s_cache 'SnoopTCP::SCacheEntry [1024]'
|-FieldDecl 0x56222b209fb0 <line:73:3, col:7> col:7 referenced _head 'int'
|-FieldDecl 0x56222b20a018 <line:74:3, col:7> col:7 referenced _tail 'int'
|-FieldDecl 0x56222b20a080 <line:76:3, col:12> col:12 _s_una 'unsigned int'
|-FieldDecl 0x56222b20a0e8 <line:77:3, col:12> col:12 _s_max 'unsigned int'
|-FieldDecl 0x56222b20a150 <line:78:3, col:12> col:12 _mh_last_ack 'unsigned int'
|-FieldDecl 0x56222b20a1b8 <line:79:3, col:18> col:18 _mh_last_win 'unsigned short'
|-FieldDecl 0x56222b20a220 <line:81:3, col:7> col:7 _mh_expected_dup_acks 'int'
|-FieldDecl 0x56222b20a288 <line:82:3, col:7> col:7 _mh_dup_acks 'int'
|-FieldDecl 0x56222b20a2f0 <line:83:3, col:7> col:7 _dup_acks 'int'
|-FieldDecl 0x56222b20a390 <line:85:3, col:20> col:8 _s_exists 'bool'
| `-ConstantExpr 0x56222b20a370 <col:20> 'int' Int: 1
|   `-IntegerLiteral 0x56222b20a340 <col:20> 'int' 1
|-FieldDecl 0x56222b20a430 <line:86:3, col:19> col:8 _s_alive 'bool'
| `-ConstantExpr 0x56222b20a410 <col:19> 'int' Int: 1
|   `-IntegerLiteral 0x56222b20a3e0 <col:19> 'int' 1
|-FieldDecl 0x56222b20a4d0 <line:87:3, col:21> col:8 _mh_exists 'bool'
| `-ConstantExpr 0x56222b20a4b0 <col:21> 'int' Int: 1
|   `-IntegerLiteral 0x56222b20a480 <col:21> 'int' 1
|-FieldDecl 0x56222b20a570 <line:88:3, col:20> col:8 _mh_alive 'bool'
| `-ConstantExpr 0x56222b20a550 <col:20> 'int' Int: 1
|   `-IntegerLiteral 0x56222b20a520 <col:20> 'int' 1
|-CXXMethodDecl 0x56222b210100 <line:90:3, col:58> col:7 next_i 'int (int) const'
| |-ParmVarDecl 0x56222b20a5d8 <col:14, col:18> col:18 used i 'int'
| `-CompoundStmt 0x56222b211a10 <col:27, col:58>
|   `-ReturnStmt 0x56222b211a00 <col:29, col:44>
|     `-BinaryOperator 0x56222b2119e0 <col:36, col:44> 'int' '%'
|       |-ParenExpr 0x56222b211988 <col:36, col:40> 'int'
|       | `-BinaryOperator 0x56222b211968 <col:37, col:39> 'int' '+'
|       |   |-ImplicitCastExpr 0x56222b211950 <col:37> 'int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x56222b211910 <col:37> 'int' lvalue ParmVar 0x56222b20a5d8 'i' 'int'
|       |   `-IntegerLiteral 0x56222b211930 <col:39> 'int' 1
|       `-ImplicitCastExpr 0x56222b2119c8 <col:44> 'int' <IntegralCast>
|         `-DeclRefExpr 0x56222b2119a8 <col:44> 'SnoopTCP::PCB::(anonymous enum at ../elements/tcpudp/snooptcp.hh:69:3)' EnumConstant 0x56222b209c20 'S_CACHE_SIZE' 'SnoopTCP::PCB::(anonymous enum at ../elements/tcpudp/snooptcp.hh:69:3)'
|-CXXMethodDecl 0x56222b210258 <line:91:3, col:64> col:7 prev_i 'int (int) const'
| |-ParmVarDecl 0x56222b2101c0 <col:14, col:18> col:18 used i 'int'
| `-CompoundStmt 0x56222b211bc8 <col:27, col:64>
|   `-ReturnStmt 0x56222b211bb8 <col:29, col:61>
|     `-ParenExpr 0x56222b211b98 <col:36, col:61> 'int'
|       `-ConditionalOperator 0x56222b211b68 <col:37, col:60> 'int'
|         |-ImplicitCastExpr 0x56222b211b50 <col:37> 'bool' <IntegralToBoolean>
|         | `-ImplicitCastExpr 0x56222b211b38 <col:37> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x56222b211a28 <col:37> 'int' lvalue ParmVar 0x56222b2101c0 'i' 'int'
|         |-BinaryOperator 0x56222b211aa0 <col:41, col:43> 'int' '-'
|         | |-ImplicitCastExpr 0x56222b211a88 <col:41> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x56222b211a48 <col:41> 'int' lvalue ParmVar 0x56222b2101c0 'i' 'int'
|         | `-IntegerLiteral 0x56222b211a68 <col:43> 'int' 1
|         `-BinaryOperator 0x56222b211b18 <col:47, col:60> 'int' '-'
|           |-ImplicitCastExpr 0x56222b211b00 <col:47> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56222b211ac0 <col:47> 'SnoopTCP::PCB::(anonymous enum at ../elements/tcpudp/snooptcp.hh:69:3)' EnumConstant 0x56222b209c20 'S_CACHE_SIZE' 'SnoopTCP::PCB::(anonymous enum at ../elements/tcpudp/snooptcp.hh:69:3)'
|           `-IntegerLiteral 0x56222b211ae0 <col:60> 'int' 1
|-CXXConstructorDecl 0x56222b210338 <line:93:3, col:7> col:3 PCB 'void ()'
|-CXXDestructorDecl 0x56222b210428 <line:94:3, col:8> col:3 ~PCB 'void ()' noexcept-unevaluated 0x56222b210428
|-CXXMethodDecl 0x56222b2105b0 <line:96:3, col:23> col:8 clear 'void (bool)'
| `-ParmVarDecl 0x56222b210520 <col:14, col:19> col:19 is_s 'bool'
|-CXXMethodDecl 0x56222b210848 <line:97:3, col:60> col:8 initialize 'void (bool, const click_tcp *, int)'
| |-ParmVarDecl 0x56222b210668 <col:19, col:24> col:24 is_s 'bool'
| |-ParmVarDecl 0x56222b2106e0 <col:30, col:46> col:47 'const click_tcp *'
| `-ParmVarDecl 0x56222b210760 <col:49, col:53> col:53 datalen 'int'
|-CXXMethodDecl 0x56222b210928 <line:99:3, col:104> col:7 s_cache_size 'int () const'
| `-CompoundStmt 0x56222b211f28 <col:28, col:104>
|   `-ReturnStmt 0x56222b211f18 <col:30, col:101>
|     `-ParenExpr 0x56222b211ef8 <col:37, col:101> 'int'
|       `-ConditionalOperator 0x56222b211ec8 <col:38, col:100> 'int'
|         |-BinaryOperator 0x56222b211c90 <col:38, col:47> 'bool' '>='
|         | |-ImplicitCastExpr 0x56222b211c60 <col:38> 'int' <LValueToRValue>
|         | | `-MemberExpr 0x56222b211bf0 <col:38> 'const int' lvalue ->_head 0x56222b209fb0
|         | |   `-CXXThisExpr 0x56222b211be0 <col:38> 'const SnoopTCP::PCB *' implicit this
|         | `-ImplicitCastExpr 0x56222b211c78 <col:47> 'int' <LValueToRValue>
|         |   `-MemberExpr 0x56222b211c30 <col:47> 'const int' lvalue ->_tail 0x56222b20a018
|         |     `-CXXThisExpr 0x56222b211c20 <col:47> 'const SnoopTCP::PCB *' implicit this
|         |-BinaryOperator 0x56222b211d60 <col:55, col:63> 'int' '-'
|         | |-ImplicitCastExpr 0x56222b211d30 <col:55> 'int' <LValueToRValue>
|         | | `-MemberExpr 0x56222b211cc0 <col:55> 'const int' lvalue ->_head 0x56222b209fb0
|         | |   `-CXXThisExpr 0x56222b211cb0 <col:55> 'const SnoopTCP::PCB *' implicit this
|         | `-ImplicitCastExpr 0x56222b211d48 <col:63> 'int' <LValueToRValue>
|         |   `-MemberExpr 0x56222b211d00 <col:63> 'const int' lvalue ->_tail 0x56222b20a018
|         |     `-CXXThisExpr 0x56222b211cf0 <col:63> 'const SnoopTCP::PCB *' implicit this
|         `-BinaryOperator 0x56222b211ea8 <col:71, col:100> 'int' '-'
|           |-ImplicitCastExpr 0x56222b211e90 <col:71> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x56222b211d80 <col:71> 'SnoopTCP::PCB::(anonymous enum at ../elements/tcpudp/snooptcp.hh:69:3)' EnumConstant 0x56222b209c20 'S_CACHE_SIZE' 'SnoopTCP::PCB::(anonymous enum at ../elements/tcpudp/snooptcp.hh:69:3)'
|           `-ParenExpr 0x56222b211e70 <col:86, col:100> 'int'
|             `-BinaryOperator 0x56222b211e50 <col:87, col:95> 'int' '-'
|               |-ImplicitCastExpr 0x56222b211e20 <col:87> 'int' <LValueToRValue>
|               | `-MemberExpr 0x56222b211db0 <col:87> 'const int' lvalue ->_tail 0x56222b20a018
|               |   `-CXXThisExpr 0x56222b211da0 <col:87> 'const SnoopTCP::PCB *' implicit this
|               `-ImplicitCastExpr 0x56222b211e38 <col:95> 'int' <LValueToRValue>
|                 `-MemberExpr 0x56222b211df0 <col:95> 'const int' lvalue ->_head 0x56222b209fb0
|                   `-CXXThisExpr 0x56222b211de0 <col:95> 'const SnoopTCP::PCB *' implicit this
|-CXXMethodDecl 0x56222b210a70 <line:101:3, col:22> col:8 clean 'void (unsigned int)'
| `-ParmVarDecl 0x56222b2109e0 <col:14> col:22 'unsigned int'
|-CXXMethodDecl 0x56222b210d08 <line:103:3, col:58> col:11 s_data 'Packet *(Packet *, const click_tcp *, int)'
| |-ParmVarDecl 0x56222b210b28 <col:18, col:25> col:26 'Packet *'
| |-ParmVarDecl 0x56222b210ba0 <col:28, col:44> col:45 'const click_tcp *'
| `-ParmVarDecl 0x56222b210c20 <col:47, col:51> col:51 datalen 'int'
|-CXXMethodDecl 0x56222b210fa8 <line:104:3, col:54> col:8 s_ack 'void (Packet *, const click_tcp *, int)'
| |-ParmVarDecl 0x56222b210dd0 <col:14, col:21> col:22 'Packet *'
| |-ParmVarDecl 0x56222b210e48 <col:24, col:40> col:41 'const click_tcp *'
| `-ParmVarDecl 0x56222b210ec8 <col:43, col:47> col:47 datalen 'int'
|-CXXMethodDecl 0x56222b211208 <line:106:3, col:56> col:8 mh_data 'void (Packet *, const click_tcp *, int)'
| |-ParmVarDecl 0x56222b211070 <col:16, col:23> col:24 'Packet *'
| |-ParmVarDecl 0x56222b2110e8 <col:26, col:42> col:43 'const click_tcp *'
| `-ParmVarDecl 0x56222b211168 <col:45, col:49> col:49 datalen 'int'
|-CXXMethodDecl 0x56222b211368 <line:108:3, col:31> col:8 mh_new_ack 'void (unsigned int)'
| `-ParmVarDecl 0x56222b2112d8 <col:19, col:28> col:28 ack 'unsigned int'
|-CXXMethodDecl 0x56222b2115f8 <line:109:3, col:63> col:11 mh_dup_ack 'Packet *(Packet *, const click_tcp *, unsigned int)'
| |-ParmVarDecl 0x56222b211420 <col:22, col:29> col:30 'Packet *'
| |-ParmVarDecl 0x56222b211498 <col:32, col:48> col:49 'const click_tcp *'
| `-ParmVarDecl 0x56222b211518 <col:51, col:60> col:60 ack 'unsigned int'
|-CXXMethodDecl 0x56222b211858 <line:110:3, col:58> col:11 mh_ack 'Packet *(Packet *, const click_tcp *, int)'
| |-ParmVarDecl 0x56222b2116c0 <col:18, col:25> col:26 'Packet *'
| |-ParmVarDecl 0x56222b211738 <col:28, col:44> col:45 'const click_tcp *'
| `-ParmVarDecl 0x56222b2117b8 <col:47, col:51> col:51 datalen 'int'
`-CXXConstructorDecl 0x56222b27a8f8 <line:67:18> col:18 implicit constexpr PCB 'void (const SnoopTCP::PCB &)' inline default trivial noexcept-unevaluated 0x56222b27a8f8
  `-ParmVarDecl 0x56222b27aa08 <col:18> col:18 'const SnoopTCP::PCB &'

Layout: <CGRecordLayout
  LLVMType:%"struct.SnoopTCP::PCB" = type <{ [1024 x %"struct.SnoopTCP::SCacheEntry"], i32, i32, i32, i32, i32, i16, [2 x i8], i32, i32, i32, i8, [3 x i8] }>
  NonVirtualBaseLLVMType:%"struct.SnoopTCP::PCB.base" = type <{ [1024 x %"struct.SnoopTCP::SCacheEntry"], i32, i32, i32, i32, i32, i16, [2 x i8], i32, i32, i32, i8 }>
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:32804>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:32804>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:32804>
    <CGBitFieldInfo Offset:3 Size:1 IsSigned:0 StorageSize:8 StorageOffset:32804>
]>

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b1fd1f0 prev 0x56222b136a40 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 referenced struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56222b1fd2e8 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x56222b1fd388 <line:25:5, col:14> col:14 th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x56222b1fd3e8 <line:26:5, col:14> col:14 th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x56222b1fd470 <line:27:5, col:15> col:15 referenced th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x56222b1fd4d0 <line:28:5, col:15> col:15 th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x56222b1fd578 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x56222b1fd558 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x56222b1fd520 <col:26> 'int' 4
|-FieldDecl 0x56222b1fd620 <line:31:5, col:23> col:14 th_off 'unsigned int'
| `-ConstantExpr 0x56222b1fd600 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x56222b1fd5c8 <col:23> 'int' 4
|-FieldDecl 0x56222b1fd680 <line:39:5, col:13> col:13 th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x56222b1fd6e0 <line:48:5, col:14> col:14 th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x56222b1fd740 <line:49:5, col:14> col:14 th_sum 'uint16_t':'unsigned short'
`-FieldDecl 0x56222b1fd7a0 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | class IPFlowID
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   class IPAddress _daddr
         4 |     uint32_t _addr
         8 |   uint16_t _sport
        10 |   uint16_t _dport
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222af6fd10 prev 0x56222aed5d58 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56222af6fe08 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x56222af6fe98 <col:19, col:25> col:19 public
|-TypedefDecl 0x56222af6fed0 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x56222ad63630 'uninitialized_type'
|   `-CXXRecord 0x56222ad63598 'uninitialized_type'
|-CXXConstructorDecl 0x56222af6ff90 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x56222af746f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56222af74798 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56222af74758 <col:10> 'int' 0
| `-CompoundStmt 0x56222af747e0 <col:13, line:22:5>
|-CXXConstructorDecl 0x56222af700e0 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x56222af70050 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x56222af746f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56222af74830 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x56222af747f0 <col:10> 'unsigned int' lvalue ParmVar 0x56222af70050 'x' 'unsigned int'
| `-CompoundStmt 0x56222af74878 <col:13, line:27:5>
|-CXXConstructorDecl 0x56222af70238 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x56222af701a8 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x56222af746f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56222af748e0 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x56222af748c8 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x56222af74888 <col:10> 'int' lvalue ParmVar 0x56222af701a8 'x' 'int'
| `-CompoundStmt 0x56222af74928 <col:13, line:31:5>
|-CXXConstructorDecl 0x56222af70390 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x56222af70300 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x56222af746f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56222af74990 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x56222af74978 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x56222af74938 <col:10> 'unsigned long' lvalue ParmVar 0x56222af70300 'x' 'unsigned long'
| `-CompoundStmt 0x56222af749d8 <col:13, line:35:5>
|-CXXConstructorDecl 0x56222af704e8 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x56222af70458 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x56222af746f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56222af74a40 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x56222af74a28 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x56222af749e8 <col:10> 'long' lvalue ParmVar 0x56222af70458 'x' 'long'
| `-CompoundStmt 0x56222af74a88 <col:13, line:39:5>
|-CXXConstructorDecl 0x56222af706a8 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x56222af705b8 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x56222af746f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56222af74b08 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56222af74ab8 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x56222aea4b10
| |     `-DeclRefExpr 0x56222af74a98 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x56222af705b8 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x56222af74b50 <col:20, line:44:5>
|-CXXConstructorDecl 0x56222af70838 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x56222af70770 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x56222af74cb8 <col:51, line:56:5>
|   `-BinaryOperator 0x56222af74c98 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x56222af74b70 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x56222af746f0
|     | `-CXXThisExpr 0x56222af74b60 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x56222af74c80 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x56222af74c68 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x56222af74c48 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x56222af74c18 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x56222af74c00 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x56222af74ba0 <col:47> 'const unsigned char *' lvalue ParmVar 0x56222af70770 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x56222af70988 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x56222af708f8 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x56222af70b38 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x56222af70a78 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x56222af74d28 <col:56, line:68:5>
|   `-CStyleCastExpr 0x56222af74d00 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x56222af74cd0 <col:9> 'const uninitialized_type' lvalue ParmVar 0x56222af70a78 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x56222af70cc8 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x56222af70c00 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x56222af70db8 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x56222af75ce8 <col:46, line:83:5>
|   `-ReturnStmt 0x56222af75cd8 <line:82:2, col:29>
|     `-ExprWithCleanups 0x56222af75cc0 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x56222af75c90 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56222af75b48 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x56222af75a30 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x56222af75918 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x56222af74d50 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x56222af70ea8 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x56222af75d98 <col:31, line:88:5>
|   `-ReturnStmt 0x56222af75d88 <line:87:2, col:10>
|     `-UnaryOperator 0x56222af75d70 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x56222af75d58 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x56222af75d40 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x56222af75d10 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56222af746f0
|             `-CXXThisExpr 0x56222af75d00 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x56222af70f68 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x56222af75e18 <col:34, line:93:5>
|   `-ReturnStmt 0x56222af75e08 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x56222af75df0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56222af75dc0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56222af746f0
|         `-CXXThisExpr 0x56222af75db0 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x56222af71038 <line:99:5, line:101:5> line:99:12 used operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x56222af75e98 <col:38, line:101:5>
|   `-ReturnStmt 0x56222af75e88 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x56222af75e70 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56222af75e40 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56222af746f0
|         `-CXXThisExpr 0x56222af75e30 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x56222af71108 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x56222af76168 <col:38, line:108:5>
|   `-ReturnStmt 0x56222af76158 <line:107:2, col:58>
|     `-BinaryOperator 0x56222af76138 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x56222af76050 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x56222af76030 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x56222af76018 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x56222af75ec0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56222af746f0
|       |   |   `-CXXThisExpr 0x56222af75eb0 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x56222af75ff0 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x56222af75fd8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56222af75f58 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x56222aeb3048 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x56222af75f38 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x56222af76110 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x56222af760f8 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56222af760d8 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x56222aeb3048 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x56222af760b8 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x56222af711c8 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x56222af763d8 <col:39, line:112:5>
|   `-ReturnStmt 0x56222af763c8 <line:111:2, col:56>
|     `-BinaryOperator 0x56222af763a8 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x56222af762c0 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x56222af762a0 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x56222af76288 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x56222af76190 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56222af746f0
|       |   |   `-CXXThisExpr 0x56222af76180 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x56222af76260 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x56222af76248 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56222af76228 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x56222aeb3048 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x56222af76208 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x56222af76380 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x56222af76368 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56222af76348 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x56222aeb3048 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x56222af76328 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x56222af712f8 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x56222af71400 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x56222af71510 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x56222af735e8 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56222af736a8 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x56222af73770 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x56222af73968 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x56222af73820 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x56222af73898 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x56222af73ae8 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x56222af73a28 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x56222af73c30 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x56222af73ba0 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x56222af73dd8 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x56222af73ce8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x56222af73f20 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x56222af73e90 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x56222af74068 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x56222af73fd8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x56222af74130 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x56222af741f0 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x56222af74368 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x56222af742a0 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x56222af74430 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x56222af74518 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x56222af745c0 <col:51> "" ""
|-TypedefDecl 0x56222af74660 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x56222aed5df0 'IPAddress'
|   `-CXXRecord 0x56222af6fd10 'IPAddress'
|-AccessSpecDecl 0x56222af746b8 <line:150:3, col:10> col:3 private
|-FieldDecl 0x56222af746f0 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56222af74d98 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x56222af74ea8 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x56222af746f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56222b0ef5b8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56222b0ef570 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x56222af746f0
| |     `-DeclRefExpr 0x56222b0ef550 <col:7> 'const IPAddress' lvalue ParmVar 0x56222af74ea8 '' 'const IPAddress &'
| `-CompoundStmt 0x56222b0ef600 <col:7>
|-CXXConstructorDecl 0x56222af74f48 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56222af75058 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x56222af746f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56222af75c38 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56222af75bf0 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x56222af746f0
| |     `-CXXStaticCastExpr 0x56222af75bc0 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x56222af75b90 <col:7> 'IPAddress' lvalue ParmVar 0x56222af75058 '' 'IPAddress &&'
| `-CompoundStmt 0x56222af75c80 <col:7>
|-CXXDestructorDecl 0x56222af75948 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56222b0efea8 <col:7> col:7 implicit used operator= 'IPAddress &(const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x56222b0effb8 <col:7> col:7 used 'const IPAddress &'
| `-CompoundStmt 0x56222b0f0310 <col:7>
|   |-BinaryOperator 0x56222b0f02b8 <col:7> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x56222b0f0270 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x56222af746f0
|   | | `-CXXThisExpr 0x56222b0f0260 <col:7> 'IPAddress *' this
|   | `-ImplicitCastExpr 0x56222b0f02a0 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x56222b0f0230 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x56222af746f0
|   |     `-DeclRefExpr 0x56222b0f0210 <col:7> 'const IPAddress' lvalue ParmVar 0x56222b0effb8 '' 'const IPAddress &'
|   `-ReturnStmt 0x56222b0f0300 <col:7>
|     `-UnaryOperator 0x56222b0f02e8 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56222b0f02d8 <col:7> 'IPAddress *' this
`-CXXMethodDecl 0x56222b0f0028 <col:7> col:7 implicit operator= 'IPAddress &(IPAddress &&)' inline default trivial noexcept-unevaluated 0x56222b0f0028
  `-ParmVarDecl 0x56222b0f0138 <col:7> col:7 'IPAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b18d0a8 <../dummy_inc/click/ipflowid.hh:9:1, line:143:1> line:9:7 referenced class IPFlowID definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56222b18d1c8 <col:1, col:7> col:7 implicit referenced class IPFlowID
|-AccessSpecDecl 0x56222b18d258 <col:18, col:24> col:18 public
|-TypedefDecl 0x56222b18d290 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x56222ad63630 'uninitialized_type'
|   `-CXXRecord 0x56222ad63598 'uninitialized_type'
|-CXXConstructorDecl 0x56222b18d350 <line:17:5, line:19:5> line:17:5 IPFlowID 'void ()'
| |-CXXCtorInitializer Field 0x56222b18f238 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x56222b0ef2d8 <line:18:4, col:11> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x56222b18f298 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x56222b0ef340 <col:14, col:21> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x56222b18f2f8 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x56222b0ef3d0 <col:31> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x56222b0ef390 <col:31> 'int' 0
| |-CXXCtorInitializer Field 0x56222b18f358 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x56222b0ef450 <col:42> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x56222b0ef410 <col:42> 'int' 0
| `-CompoundStmt 0x56222b0ef4b0 <col:45, line:19:5>
|-CXXConstructorDecl 0x56222b18d6b8 <line:26:5, line:28:5> line:26:5 used IPFlowID 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x56222b18d408 <col:14, col:24> col:24 used saddr 'IPAddress'
| |-ParmVarDecl 0x56222b18d480 <col:31, col:40> col:40 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x56222b18d4f8 <col:47, col:57> col:57 used daddr 'IPAddress'
| |-ParmVarDecl 0x56222b18d570 <col:64, col:73> col:73 used dport 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x56222b18f238 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x56222b0ef610 <line:27:4, col:16> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x56222b0ef500 <col:11> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x56222b0ef4c0 <col:11> 'IPAddress' lvalue ParmVar 0x56222b18d408 'saddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x56222b18f298 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x56222b0ef6c0 <col:19, col:31> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x56222b0ef6a8 <col:26> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x56222b0ef668 <col:26> 'IPAddress' lvalue ParmVar 0x56222b18d4f8 'daddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x56222b18f2f8 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x56222b0ef758 <col:41> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x56222b0ef718 <col:41> 'uint16_t':'unsigned short' lvalue ParmVar 0x56222b18d480 'sport' 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x56222b18f358 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x56222b0ef7d8 <col:56> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x56222b0ef798 <col:56> 'uint16_t':'unsigned short' lvalue ParmVar 0x56222b18d570 'dport' 'uint16_t':'unsigned short'
| `-CompoundStmt 0x56222b0ef838 <col:63, line:28:5>
|-CXXConstructorDecl 0x56222b18d8d8 <line:37:5, col:60> col:14 IPFlowID 'void (const Packet *, bool)'
| |-ParmVarDecl 0x56222b18d790 <col:23, col:37> col:37 p 'const Packet *'
| `-ParmVarDecl 0x56222b18d808 <col:40, col:55> col:45 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56222b0ef2a0 <col:55> 'bool' false
|-CXXConstructorDecl 0x56222b18dae8 <line:47:5, col:64> col:14 IPFlowID 'void (const click_ip *, bool)'
| |-ParmVarDecl 0x56222b18d9a0 <col:23, col:39> col:39 iph 'const click_ip *'
| `-ParmVarDecl 0x56222b18da18 <col:44, col:59> col:49 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56222b0ef2b0 <col:59> 'bool' false
|-CXXConstructorDecl 0x56222b18dc40 <line:50:5, line:52:5> line:50:12 IPFlowID 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x56222b18dbb0 <col:21, col:47> col:47 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x56222b18f238 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x56222b0ef848 <col:12> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x56222b18f298 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x56222b0ef898 <col:12> 'IPAddress' 'void ()'
| `-CompoundStmt 0x56222b0ef950 <col:55, line:52:5>
|   `-CStyleCastExpr 0x56222b0ef928 <line:51:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x56222b0ef8f8 <col:9> 'const uninitialized_type' lvalue ParmVar 0x56222b18dbb0 'unused' 'const uninitialized_type &'
|-TypedefDecl 0x56222b18ddf8 <line:55:5, col:60> col:35 referenced unspecified_bool_type 'IPAddress (IPFlowID::*)() const'
| `-MemberPointerType 0x56222b18dd70 'IPAddress (IPFlowID::*)() const'
|   |-RecordType 0x56222b18d140 'IPFlowID'
|   | `-CXXRecord 0x56222b18d0a8 'IPFlowID'
|   `-ParenType 0x56222b18dd10 'IPAddress () const' sugar
|     `-FunctionProtoType 0x56222b13f550 'IPAddress () const' const cdecl
|       `-RecordType 0x56222aed5df0 'IPAddress'
|         `-CXXRecord 0x56222af6fd10 'IPAddress'
|-CXXConversionDecl 0x56222b18df38 <line:57:5, line:59:5> line:57:5 operator IPAddress (IPFlowID::*)() const 'IPFlowID::unspecified_bool_type () const'
| `-CompoundStmt 0x56222b0efc00 <col:44, line:59:5>
|   `-ReturnStmt 0x56222b0efbf0 <line:58:2, col:47>
|     `-ConditionalOperator 0x56222b0efbc0 <col:9, col:47> 'IPAddress (IPFlowID::*)() const'
|       |-BinaryOperator 0x56222b0efae8 <col:9, col:19> 'bool' '||'
|       | |-ImplicitCastExpr 0x56222b0efab8 <col:9> 'bool' <IntegralToBoolean>
|       | | `-ImplicitCastExpr 0x56222b0efa38 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | |   `-CXXMemberCallExpr 0x56222b0efa18 <col:9> 'uint32_t':'unsigned int'
|       | |     `-MemberExpr 0x56222b0ef9e8 <col:9> '<bound member function type>' .operator unsigned int 0x56222af71038
|       | |       `-MemberExpr 0x56222b0ef978 <col:9> 'const IPAddress' lvalue ->_saddr 0x56222b18f238
|       | |         `-CXXThisExpr 0x56222b0ef968 <col:9> 'const IPFlowID *' implicit this
|       | `-ImplicitCastExpr 0x56222b0efad0 <col:19> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x56222b0efaa0 <col:19> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x56222b0efa80 <col:19> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x56222b0efa50 <col:19> '<bound member function type>' .operator unsigned int 0x56222af71038
|       |         `-MemberExpr 0x56222b0ef9b8 <col:19> 'const IPAddress' lvalue ->_daddr 0x56222b18f298
|       |           `-CXXThisExpr 0x56222b0ef9a8 <col:19> 'const IPFlowID *' implicit this
|       |-UnaryOperator 0x56222b0efb70 <col:28, col:39> 'IPAddress (IPFlowID::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x56222b0efb40 <col:29, col:39> 'IPAddress () const' CXXMethod 0x56222b18e008 'saddr' 'IPAddress () const'
|       `-ImplicitCastExpr 0x56222b0efba8 <col:47> 'IPAddress (IPFlowID::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x56222b0efb88 <col:47> 'int' 0
|-CXXMethodDecl 0x56222b18e008 <line:63:5, line:65:5> line:63:15 used saddr 'IPAddress () const'
| `-CompoundStmt 0x56222b0efc98 <col:29, line:65:5>
|   `-ReturnStmt 0x56222b0efc88 <line:64:2, col:9>
|     `-CXXConstructExpr 0x56222b0efc58 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x56222b0efc28 <col:9> 'const IPAddress' lvalue ->_saddr 0x56222b18f238
|         `-CXXThisExpr 0x56222b0efc18 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x56222b18e128 <line:67:5, line:69:5> line:67:14 used sport 'uint16_t () const'
| `-CompoundStmt 0x56222b0efd18 <col:28, line:69:5>
|   `-ReturnStmt 0x56222b0efd08 <line:68:2, col:9>
|     `-ImplicitCastExpr 0x56222b0efcf0 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x56222b0efcc0 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x56222b18f2f8
|         `-CXXThisExpr 0x56222b0efcb0 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x56222b18e1e8 <line:71:5, line:73:5> line:71:15 used daddr 'IPAddress () const'
| `-CompoundStmt 0x56222b0efdb0 <col:29, line:73:5>
|   `-ReturnStmt 0x56222b0efda0 <line:72:2, col:9>
|     `-CXXConstructExpr 0x56222b0efd70 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x56222b0efd40 <col:9> 'const IPAddress' lvalue ->_daddr 0x56222b18f298
|         `-CXXThisExpr 0x56222b0efd30 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x56222b18e2a8 <line:75:5, line:77:5> line:75:14 used dport 'uint16_t () const'
| `-CompoundStmt 0x56222b0efe30 <col:28, line:77:5>
|   `-ReturnStmt 0x56222b0efe20 <line:76:2, col:9>
|     `-ImplicitCastExpr 0x56222b0efe08 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x56222b0efdd8 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x56222b18f358
|         `-CXXThisExpr 0x56222b0efdc8 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x56222b18e3e8 <line:80:5, line:82:5> line:80:10 set_saddr 'void (IPAddress)'
| |-ParmVarDecl 0x56222b18e358 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x56222b0f03d8 <col:33, line:82:5>
|   `-CXXOperatorCallExpr 0x56222b0f03a0 <line:81:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x56222b0f0388 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56222b0f01c0 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x56222b0efea8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x56222b0efe58 <col:2> 'IPAddress' lvalue ->_saddr 0x56222b18f238
|     | `-CXXThisExpr 0x56222b0efe48 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x56222b0f01a8 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x56222b0efe88 <col:11> 'IPAddress' lvalue ParmVar 0x56222b18e358 'a' 'IPAddress'
|-CXXMethodDecl 0x56222b18e598 <line:85:5, line:87:5> line:85:10 set_sport 'void (uint16_t)'
| |-ParmVarDecl 0x56222b18e4a0 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x56222b0f0488 <col:32, line:87:5>
|   `-BinaryOperator 0x56222b0f0468 <line:86:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x56222b0f0400 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x56222b18f2f8
|     | `-CXXThisExpr 0x56222b0f03f0 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x56222b0f0450 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x56222b0f0430 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x56222b18e4a0 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x56222b18e6e0 <line:89:5, line:91:5> line:89:10 set_daddr 'void (IPAddress)'
| |-ParmVarDecl 0x56222b18e650 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x56222b0f0588 <col:33, line:91:5>
|   `-CXXOperatorCallExpr 0x56222b0f0550 <line:90:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x56222b0f0538 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x56222b0f0518 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x56222b0efea8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x56222b0f04b0 <col:2> 'IPAddress' lvalue ->_daddr 0x56222b18f298
|     | `-CXXThisExpr 0x56222b0f04a0 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x56222b0f0500 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x56222b0f04e0 <col:11> 'IPAddress' lvalue ParmVar 0x56222b18e650 'a' 'IPAddress'
|-CXXMethodDecl 0x56222b18e828 <line:94:5, line:96:5> line:94:10 set_dport 'void (uint16_t)'
| |-ParmVarDecl 0x56222b18e798 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x56222b0f0638 <col:32, line:96:5>
|   `-BinaryOperator 0x56222b0f0618 <line:95:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x56222b0f05b0 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x56222b18f358
|     | `-CXXThisExpr 0x56222b0f05a0 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x56222b0f0600 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x56222b0f05e0 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x56222b18e798 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x56222b18eaf0 <line:103:5, line:108:5> line:103:10 assign 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x56222b18e8e0 <col:17, col:27> col:27 used saddr 'IPAddress'
| |-ParmVarDecl 0x56222b18e958 <col:34, col:43> col:43 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x56222b18e9d0 <col:50, col:60> col:60 used daddr 'IPAddress'
| |-ParmVarDecl 0x56222b18ea48 <col:67, col:76> col:76 used dport 'uint16_t':'unsigned short'
| `-CompoundStmt 0x56222b0f0950 <col:83, line:108:5>
|   |-CXXOperatorCallExpr 0x56222b0f0700 <line:104:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x56222b0f06e8 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56222b0f06c8 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x56222b0efea8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x56222b0f0660 <col:2> 'IPAddress' lvalue ->_saddr 0x56222b18f238
|   | | `-CXXThisExpr 0x56222b0f0650 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x56222b0f06b0 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x56222b0f0690 <col:11> 'IPAddress' lvalue ParmVar 0x56222b18e8e0 'saddr' 'IPAddress'
|   |-CXXOperatorCallExpr 0x56222b0f07e8 <line:105:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x56222b0f07d0 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56222b0f07b0 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x56222b0efea8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x56222b0f0748 <col:2> 'IPAddress' lvalue ->_daddr 0x56222b18f298
|   | | `-CXXThisExpr 0x56222b0f0738 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x56222b0f0798 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x56222b0f0778 <col:11> 'IPAddress' lvalue ParmVar 0x56222b18e9d0 'daddr' 'IPAddress'
|   |-BinaryOperator 0x56222b0f0898 <line:106:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x56222b0f0830 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x56222b18f2f8
|   | | `-CXXThisExpr 0x56222b0f0820 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x56222b0f0880 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-DeclRefExpr 0x56222b0f0860 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x56222b18e958 'sport' 'uint16_t':'unsigned short'
|   `-BinaryOperator 0x56222b0f0930 <line:107:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x56222b0f08c8 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x56222b18f358
|     | `-CXXThisExpr 0x56222b0f08b8 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x56222b0f0918 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x56222b0f08f8 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x56222b18ea48 'dport' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x56222b18ebf8 <line:113:5, line:115:5> line:113:14 used reverse 'IPFlowID () const'
| `-CompoundStmt 0x56222b0f1488 <col:30, line:115:5>
|   `-ReturnStmt 0x56222b0f1478 <line:114:2, col:48>
|     `-ExprWithCleanups 0x56222b0f1460 <col:9, col:48> 'IPFlowID'
|       `-CXXConstructExpr 0x56222b0f1430 <col:9, col:48> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56222b0f0fe8 <col:9, col:48> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x56222b0f0e58 <col:9, col:48> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x56222b0f0dc8 <col:18> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x56222b0f09a0 <col:18> 'const IPAddress' lvalue ->_daddr 0x56222b18f298
|             |   `-CXXThisExpr 0x56222b0f0990 <col:18> 'const IPFlowID *' implicit this
|             |-ImplicitCastExpr 0x56222b0f0df8 <col:26> 'uint16_t':'unsigned short' <LValueToRValue>
|             | `-MemberExpr 0x56222b0f09e0 <col:26> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x56222b18f358
|             |   `-CXXThisExpr 0x56222b0f09d0 <col:26> 'const IPFlowID *' implicit this
|             |-CXXConstructExpr 0x56222b0f0e10 <col:34> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x56222b0f0a20 <col:34> 'const IPAddress' lvalue ->_saddr 0x56222b18f238
|             |   `-CXXThisExpr 0x56222b0f0a10 <col:34> 'const IPFlowID *' implicit this
|             `-ImplicitCastExpr 0x56222b0f0e40 <col:42> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-MemberExpr 0x56222b0f0a60 <col:42> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x56222b18f2f8
|                 `-CXXThisExpr 0x56222b0f0a50 <col:42> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x56222b18ecb8 <line:116:5, col:59> col:21 rev 'IPFlowID () const' inline
| `-DeprecatedAttr 0x56222b18ed58 <col:48> "" ""
|-CXXMethodDecl 0x56222b18ee18 <line:122:5, col:34> col:23 hashcode 'hashcode_t () const' inline
|-CXXMethodDecl 0x56222b18eed8 <line:127:5, col:22> col:12 used unparse 'String () const'
|-CXXConversionDecl 0x56222b18efa8 <line:129:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x56222b18f050 <col:51> "" ""
|-CXXMethodDecl 0x56222b18f0f0 <line:130:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x56222b18f190 <col:44> "" ""
|-AccessSpecDecl 0x56222b18f200 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x56222b18f238 <line:135:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x56222b18f298 <line:136:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x56222b18f2f8 <line:137:5, col:14> col:14 referenced _sport 'uint16_t':'unsigned short'
|-FieldDecl 0x56222b18f358 <line:138:5, col:14> col:14 referenced _dport 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x56222b0eef60 <line:140:5, col:26> col:9 unparse 'int (char *) const'
| `-ParmVarDecl 0x56222b18f3c0 <col:17, col:23> col:23 s 'char *'
|-FriendDecl 0x56222b0ef248 <line:141:5, col:76> col:25
| `-FunctionDecl 0x56222b0ef188 parent 0x56222ac0d488 <col:5, col:76> col:25 operator<< 'StringAccum &(StringAccum &, const IPFlowID &)'
|   |-ParmVarDecl 0x56222b0ef018 <col:36, col:49> col:49 sa 'StringAccum &'
|   `-ParmVarDecl 0x56222b0ef0b8 <col:53, col:69> col:69 flow_id 'const IPFlowID &'
|-CXXConstructorDecl 0x56222b0f0a90 <line:9:7> col:7 implicit constexpr IPFlowID 'void (const IPFlowID &)' inline default trivial noexcept-unevaluated 0x56222b0f0a90
| `-ParmVarDecl 0x56222b0f0ba8 <col:7> col:7 'const IPFlowID &'
|-CXXConstructorDecl 0x56222b0f0c48 <col:7> col:7 implicit used constexpr IPFlowID 'void (IPFlowID &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56222b0f0d58 <col:7> col:7 used 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x56222b18f238 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x56222b0f10d8 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x56222b0f1090 <col:7> 'IPAddress' xvalue ._saddr 0x56222b18f238
| |     `-CXXStaticCastExpr 0x56222b0f1060 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x56222b0f1030 <col:7> 'IPFlowID' lvalue ParmVar 0x56222b0f0d58 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x56222b18f298 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x56222b0f11d8 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x56222b0f1190 <col:7> 'IPAddress' xvalue ._daddr 0x56222b18f298
| |     `-CXXStaticCastExpr 0x56222b0f1160 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x56222b0f1130 <col:7> 'IPFlowID' lvalue ParmVar 0x56222b0f0d58 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x56222b18f2f8 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x56222b0f12d8 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x56222b0f1290 <col:7> 'uint16_t':'unsigned short' xvalue ._sport 0x56222b18f2f8
| |     `-CXXStaticCastExpr 0x56222b0f1260 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x56222b0f1230 <col:7> 'IPFlowID' lvalue ParmVar 0x56222b0f0d58 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x56222b18f358 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x56222b0f13c0 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x56222b0f1378 <col:7> 'uint16_t':'unsigned short' xvalue ._dport 0x56222b18f358
| |     `-CXXStaticCastExpr 0x56222b0f1348 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x56222b0f1318 <col:7> 'IPFlowID' lvalue ParmVar 0x56222b0f0d58 '' 'IPFlowID &&'
| `-CompoundStmt 0x56222b0f1420 <col:7>
`-CXXDestructorDecl 0x56222b0f0ea8 <col:7> col:7 implicit referenced ~IPFlowID 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  NonVirtualBaseLLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222aea4928 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56222aea4a48 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x56222aea4b10 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x56222af750e0 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56222af7a3f8 <col:8>
|-CXXConstructorDecl 0x56222af751e8 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x56222af751e8
| `-ParmVarDecl 0x56222af752f8 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x56222af75398 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56222af754a8 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x56222aea4b10 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x56222af7a610 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56222af7a5e0 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x56222aea4b10
| |     `-CXXStaticCastExpr 0x56222af7a5b0 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x56222af7a580 <col:8> 'in_addr' lvalue ParmVar 0x56222af754a8 '' 'in_addr &&'
| `-CompoundStmt 0x56222af7a658 <col:8>
`-CXXDestructorDecl 0x56222af7a890 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222af6cdc8 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56222af6cee8 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x56222af6cfd0 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x56222af6cfb0 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x56222af6cf78 <col:22> 'int' 4
|-FieldDecl 0x56222af6d078 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x56222af6d058 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x56222af6d020 <col:21> 'int' 4
|-FieldDecl 0x56222af6d0d8 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x56222af6d138 <line:40:5, col:14> col:14 ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x56222af6d198 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x56222af6d1f8 <line:42:5, col:14> col:14 ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x56222af6d258 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x56222af6d2b8 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x56222af6d318 <line:49:5, col:14> col:14 ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x56222af6d388 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x56222af6d3f8 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222af42be0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56222af42cf8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x56222af42d98 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x56222af42df8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x56222af42e58 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x56222af42f08 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222af43210 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56222af43328 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x56222af433d0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x56222af43438 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x56222af434c8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x56222af49560 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56222af49998 <col:12>
|-CXXConstructorDecl 0x56222af49668 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56222af49778 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56222af433d0 'data' 'const char *'
| | `-ImplicitCastExpr 0x56222af4bf20 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x56222af4bef0 <col:12> 'const char *const' lvalue .data 0x56222af433d0
| |     `-DeclRefExpr 0x56222af4bed0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56222af49778 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56222af43438 'length' 'int'
| | `-ImplicitCastExpr 0x56222af4bfb0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x56222af4bf80 <col:12> 'const int' lvalue .length 0x56222af43438
| |     `-DeclRefExpr 0x56222af4bf60 <col:12> 'const String::rep_t' lvalue ParmVar 0x56222af49778 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56222af434c8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x56222af4c040 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x56222af4c010 <col:12> 'String::memo_t *const' lvalue .memo 0x56222af434c8
| |     `-DeclRefExpr 0x56222af4bff0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56222af49778 '' 'const String::rep_t &'
| `-CompoundStmt 0x56222af4c098 <col:12>
|-CXXConstructorDecl 0x56222af49818 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56222af49818
| `-ParmVarDecl 0x56222af49928 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x56222af4ee80 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56222af5a898 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56222af5a9a8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x56222af5aec0 <col:12>
|   |-BinaryOperator 0x56222af5acd8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56222af5ac90 <col:12> 'const char *' lvalue ->data 0x56222af433d0
|   | | `-CXXThisExpr 0x56222af5ac80 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56222af5acc0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x56222af5ac50 <col:12> 'const char *const' lvalue .data 0x56222af433d0
|   |     `-DeclRefExpr 0x56222af5ac30 <col:12> 'const String::rep_t' lvalue ParmVar 0x56222af5a9a8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56222af5ada0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x56222af5ad58 <col:12> 'int' lvalue ->length 0x56222af43438
|   | | `-CXXThisExpr 0x56222af5ad48 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56222af5ad88 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x56222af5ad18 <col:12> 'const int' lvalue .length 0x56222af43438
|   |     `-DeclRefExpr 0x56222af5acf8 <col:12> 'const String::rep_t' lvalue ParmVar 0x56222af5a9a8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56222af5ae68 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x56222af5ae20 <col:12> 'String::memo_t *' lvalue ->memo 0x56222af434c8
|   | | `-CXXThisExpr 0x56222af5ae10 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56222af5ae50 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x56222af5ade0 <col:12> 'String::memo_t *const' lvalue .memo 0x56222af434c8
|   |     `-DeclRefExpr 0x56222af5adc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56222af5a9a8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x56222af5aeb0 <col:12>
|     `-UnaryOperator 0x56222af5ae98 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56222af5ae88 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x56222af5aa18 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56222af5aa18
  `-ParmVarDecl 0x56222af5ab28 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222af3a150 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56222af3a268 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x56222af3a2f8 <col:16, col:22> col:16 public
|-TypedefDecl 0x56222af3a338 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x56222ac0dfd0 'const char *'
|   `-QualType 0x56222ac0d521 'const char' const
|     `-BuiltinType 0x56222ac0d520 'char'
|-TypedefDecl 0x56222af3a3c0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x56222af3a390 'String::const_iterator' sugar
|   |-Typedef 0x56222af3a338 'const_iterator'
|   `-PointerType 0x56222ac0dfd0 'const char *'
|     `-QualType 0x56222ac0d521 'const char' const
|       `-BuiltinType 0x56222ac0d520 'char'
|-TypedefDecl 0x56222af3a530 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x56222af3a4a0 'int (String::*)() const'
|   |-RecordType 0x56222af3a1e0 'String'
|   | `-CXXRecord 0x56222af3a150 'String'
|   `-ParenType 0x56222af3a440 'int () const' sugar
|     `-FunctionProtoType 0x56222af0efe0 'int () const' const cdecl
|       `-BuiltinType 0x56222ac0d580 'int'
|-TypedefDecl 0x56222af3a598 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x56222ad63bc0 'int64_t' sugar
|   |-Typedef 0x56222ac76390 'int64_t'
|   `-TypedefType 0x56222ac4f630 '__int64_t' sugar
|     |-Typedef 0x56222ac4f208 '__int64_t'
|     `-BuiltinType 0x56222ac0d5a0 'long'
|-TypedefDecl 0x56222af3a600 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x56222ad63ae0 'uint64_t' sugar
|   |-Typedef 0x56222ac76530 'uint64_t'
|   `-TypedefType 0x56222ac4f6c0 '__uint64_t' sugar
|     |-Typedef 0x56222ac4f278 '__uint64_t'
|     `-BuiltinType 0x56222ac0d640 'unsigned long'
|-TypedefDecl 0x56222af3a690 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x56222af3a660 'String::intmax_t' sugar
|   |-Typedef 0x56222af3a598 'intmax_t'
|   `-TypedefType 0x56222ad63bc0 'int64_t' sugar
|     |-Typedef 0x56222ac76390 'int64_t'
|     `-TypedefType 0x56222ac4f630 '__int64_t' sugar
|       |-Typedef 0x56222ac4f208 '__int64_t'
|       `-BuiltinType 0x56222ac0d5a0 'long'
|-TypedefDecl 0x56222af3a720 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x56222af3a6f0 'String::uintmax_t' sugar
|   |-Typedef 0x56222af3a600 'uintmax_t'
|   `-TypedefType 0x56222ad63ae0 'uint64_t' sugar
|     |-Typedef 0x56222ac76530 'uint64_t'
|     `-TypedefType 0x56222ac4f6c0 '__uint64_t' sugar
|       |-Typedef 0x56222ac4f278 '__uint64_t'
|       `-BuiltinType 0x56222ac0d640 'unsigned long'
|-CXXConstructorDecl 0x56222af3a7e0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x56222af3a988 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x56222af3a8c8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x56222af3ab38 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x56222af3aa78 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x56222af3ac90 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x56222af3ac00 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x56222af3aea8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x56222af3ad58 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x56222af3add8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x56222af3b0c8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x56222af3af78 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x56222af3aff8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x56222af3b2e8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56222af3b198 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x56222af3b218 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x56222af3b508 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x56222af3b3b8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x56222af3b438 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x56222af3b698 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x56222af3b5d0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x56222af3b818 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x56222af3b758 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x56222af3b9a8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x56222af3b8e0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x56222af3bb00 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x56222af3ba70 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x56222af3bc58 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x56222af3bbc8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x56222af3bdb0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x56222af3bd20 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x56222af3bf38 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x56222af3be78 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x56222af3c0c8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x56222af3c000 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x56222af3c258 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x56222af3c190 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x56222af3c3e8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x56222af3c320 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x56222af3c4e0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x56222af3c608 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x56222af3c788 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x56222af3c6c0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x56222af3c8d8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x56222af3c848 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x56222af3c990 <col:63> "" ""
|-CXXMethodDecl 0x56222af3cad8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x56222af3ca18 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x56222af3cce8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x56222af3cb98 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x56222af3cc18 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x56222af3cf08 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x56222af3cdb0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x56222af3ce30 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x56222af3d1e8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x56222af3cfc8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x56222af3d048 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x56222af49030 <col:55> 'int' 10
| `-ParmVarDecl 0x56222af3d0c0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56222af49050 <col:76> 'bool' true
|-CXXMethodDecl 0x56222af3d4c8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x56222af3d2b0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x56222af3d330 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x56222af49060 <col:56> 'int' 10
| `-ParmVarDecl 0x56222af3d3a8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56222af49080 <col:77> 'bool' true
|-CXXMethodDecl 0x56222af3d5d0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x56222af3d698 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x56222af3d760 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x56222af3d800 <col:20>
| `-OptimizeNoneAttr 0x56222af3d858 <col:30>
|-CXXConversionDecl 0x56222af3d948 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56222af3da18 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56222af3dad8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x56222af3dbc8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56222af3dc88 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56222af3de08 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x56222af3dd40 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x56222af3df58 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x56222af3dec8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x56222af3e048 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x56222af3e108 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x56222af3e358 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x56222af3e1c0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x56222af3e240 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x56222af3e5b8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x56222af3e420 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x56222af3e4a0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x56222af3e688 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x56222af3e898 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x56222af3e740 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x56222af3e7c0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x56222af3eab8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x56222af3e960 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x56222af3e9e0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x56222af3ec48 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x56222af3eb80 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x56222af3ed38 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x56222af3eea8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x56222af3ede8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56222af3f0b8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x56222af3ef68 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56222af3efe8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56222af3f2d0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x56222af3f178 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x56222af3f1f0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x56222af3f460 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x56222af3f390 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56222af3f680 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x56222af3f520 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x56222af3f5a0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56222af3f7d0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x56222af3f740 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x56222af3f9a8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x56222af3f890 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56222af3f910 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x56222af3faf8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x56222af3fa68 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x56222af3fd10 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x56222af3fbb0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x56222af3fc30 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x56222af49090 <col:39> 'int' 0
|-CXXMethodDecl 0x56222af3ff30 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x56222af3fdd0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x56222af3fe50 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x56222af490b0 <col:48> 'int' 0
|-CXXMethodDecl 0x56222af40110 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x56222af3fff0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x56222af40070 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x56222af490d0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x56222af401e0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x56222af402a0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x56222af40360 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x56222af40420 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x56222af404e0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x56222af40688 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x56222af40590 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x56222af40808 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x56222af40740 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x56222af409e0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x56222af408c8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x56222af40b58 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x56222af40a98 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x56222af40ca0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x56222af40c10 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56222af40df0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x56222af40d60 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x56222af40fc8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x56222af40eb0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56222af40f30 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56222af411a8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56222af41090 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x56222af41110 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x56222af412f8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x56222af41268 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x56222af41508 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x56222af413b8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x56222af41438 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x56222af41668 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x56222af415d0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56222af417c0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x56222af41728 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x56222af41868 <col:57> "" ""
|-CXXMethodDecl 0x56222af41978 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x56222af418e8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x56222af41ac8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x56222af41a38 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x56222af41c48 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x56222af41b80 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x56222af41d10 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x56222af41dd0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x56222af41e90 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x56222af41f30 <col:49> "" ""
|-CXXMethodDecl 0x56222af41fc0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x56222af42080 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x56222af42170 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x56222af42238 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x56222af422f8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x56222af423b8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x56222af424b0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x56222af42578 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x56222af42640 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x56222af42818 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x56222af426f8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x56222af42778 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x56222af42a40 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x56222af428e0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x56222af42960 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x56222af42b50 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x56222af42bb8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x56222af42be0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56222af42cf8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x56222af42d98 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x56222af42df8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x56222af42e58 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x56222af42f08 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x56222af42f70 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x56222af431a8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x56222af431f8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222af43188 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x56222af43098 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x56222af43040 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x56222af43080 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x56222af43060 <col:32> 'int' 8
|-CXXRecordDecl 0x56222af43210 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56222af43328 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x56222af433d0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x56222af43438 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x56222af434c8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x56222af49560 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56222af49998 <col:12>
| |-CXXConstructorDecl 0x56222af49668 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56222af49778 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56222af433d0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x56222af4bf20 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x56222af4bef0 <col:12> 'const char *const' lvalue .data 0x56222af433d0
| | |     `-DeclRefExpr 0x56222af4bed0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56222af49778 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56222af43438 'length' 'int'
| | | `-ImplicitCastExpr 0x56222af4bfb0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x56222af4bf80 <col:12> 'const int' lvalue .length 0x56222af43438
| | |     `-DeclRefExpr 0x56222af4bf60 <col:12> 'const String::rep_t' lvalue ParmVar 0x56222af49778 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56222af434c8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x56222af4c040 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x56222af4c010 <col:12> 'String::memo_t *const' lvalue .memo 0x56222af434c8
| | |     `-DeclRefExpr 0x56222af4bff0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56222af49778 '' 'const String::rep_t &'
| | `-CompoundStmt 0x56222af4c098 <col:12>
| |-CXXConstructorDecl 0x56222af49818 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56222af49818
| | `-ParmVarDecl 0x56222af49928 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x56222af4ee80 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56222af5a898 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56222af5a9a8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x56222af5aec0 <col:12>
| |   |-BinaryOperator 0x56222af5acd8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x56222af5ac90 <col:12> 'const char *' lvalue ->data 0x56222af433d0
| |   | | `-CXXThisExpr 0x56222af5ac80 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56222af5acc0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x56222af5ac50 <col:12> 'const char *const' lvalue .data 0x56222af433d0
| |   |     `-DeclRefExpr 0x56222af5ac30 <col:12> 'const String::rep_t' lvalue ParmVar 0x56222af5a9a8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56222af5ada0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x56222af5ad58 <col:12> 'int' lvalue ->length 0x56222af43438
| |   | | `-CXXThisExpr 0x56222af5ad48 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56222af5ad88 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x56222af5ad18 <col:12> 'const int' lvalue .length 0x56222af43438
| |   |     `-DeclRefExpr 0x56222af5acf8 <col:12> 'const String::rep_t' lvalue ParmVar 0x56222af5a9a8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56222af5ae68 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x56222af5ae20 <col:12> 'String::memo_t *' lvalue ->memo 0x56222af434c8
| |   | | `-CXXThisExpr 0x56222af5ae10 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56222af5ae50 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x56222af5ade0 <col:12> 'String::memo_t *const' lvalue .memo 0x56222af434c8
| |   |     `-DeclRefExpr 0x56222af5adc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56222af5a9a8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x56222af5aeb0 <col:12>
| |     `-UnaryOperator 0x56222af5ae98 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56222af5ae88 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x56222af5aa18 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56222af5aa18
|   `-ParmVarDecl 0x56222af5ab28 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x56222af43540 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x56222af43788 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x56222af435a8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x56222af43628 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x56222af436a0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x56222af49520 <col:79, line:261:5>
|   |-BinaryOperator 0x56222af49198 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56222af49130 <col:2, col:5> 'const char *' lvalue .data 0x56222af433d0
|   | | `-MemberExpr 0x56222af49100 <col:2> 'String::rep_t' lvalue ->_r 0x56222af43540
|   | |   `-CXXThisExpr 0x56222af490f0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56222af49180 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56222af49160 <col:12> 'const char *' lvalue ParmVar 0x56222af435a8 'data' 'const char *'
|   |-BinaryOperator 0x56222af49260 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x56222af491f8 <col:2, col:5> 'int' lvalue .length 0x56222af43438
|   | | `-MemberExpr 0x56222af491c8 <col:2> 'String::rep_t' lvalue ->_r 0x56222af43540
|   | |   `-CXXThisExpr 0x56222af491b8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56222af49248 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56222af49228 <col:14> 'int' lvalue ParmVar 0x56222af43628 'length' 'int'
|   `-IfStmt 0x56222af49508 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x56222af49380 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56222af49368 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x56222af49348 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x56222af49328 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x56222af492c0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x56222af434c8
|     |       | `-MemberExpr 0x56222af49290 <col:7> 'String::rep_t' lvalue ->_r 0x56222af43540
|     |       |   `-CXXThisExpr 0x56222af49280 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x56222af49310 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x56222af492f0 <col:17> 'String::memo_t *' lvalue ParmVar 0x56222af436a0 'memo' 'String::memo_t *'
|     `-CallExpr 0x56222af494e0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x56222af494c8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56222af493d0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x56222af321b8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x56222af49438 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56222af42d98
|         `-ImplicitCastExpr 0x56222af49420 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x56222af49400 <col:27> 'String::memo_t *' lvalue ParmVar 0x56222af436a0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x56222af43a38 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x56222af43858 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x56222af438d8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x56222af43950 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x56222af43540 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x56222af499a8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56222af49b38 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x56222af49aa0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x56222af49a10 <col:2> '<bound member function type>' ->assign_memo 0x56222af43788
|     | `-ImplicitCastExpr 0x56222af49ad8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x56222af49a00 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x56222af49af0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x56222af49a40 <col:14> 'const char *' lvalue ParmVar 0x56222af43858 'data' 'const char *'
|     |-ImplicitCastExpr 0x56222af49b08 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56222af49a60 <col:20> 'int' lvalue ParmVar 0x56222af438d8 'length' 'int'
|     `-ImplicitCastExpr 0x56222af49b20 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x56222af49a80 <col:28> 'String::memo_t *' lvalue ParmVar 0x56222af43950 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x56222af43bc8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x56222af43b08 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x56222af49d90 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x56222af49d10 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x56222af49b60 <col:2> '<bound member function type>' ->assign_memo 0x56222af43788
|     | `-CXXThisExpr 0x56222af49b50 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x56222af49d48 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x56222af49be0 <col:14, col:19> 'const char *' lvalue .data 0x56222af433d0
|     |   `-MemberExpr 0x56222af49bb0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x56222af43540
|     |     `-DeclRefExpr 0x56222af49b90 <col:14> 'const String' lvalue ParmVar 0x56222af43b08 'x' 'const String &'
|     |-ImplicitCastExpr 0x56222af49d60 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x56222af49c60 <col:25, col:30> 'int' lvalue .length 0x56222af43438
|     |   `-MemberExpr 0x56222af49c30 <col:25, col:27> 'String::rep_t' lvalue ._r 0x56222af43540
|     |     `-DeclRefExpr 0x56222af49c10 <col:25> 'const String' lvalue ParmVar 0x56222af43b08 'x' 'const String &'
|     `-ImplicitCastExpr 0x56222af49d78 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x56222af49ce0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x56222af434c8
|         `-MemberExpr 0x56222af49cb0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x56222af43540
|           `-DeclRefExpr 0x56222af49c90 <col:38> 'const String' lvalue ParmVar 0x56222af43b08 'x' 'const String &'
|-CXXMethodDecl 0x56222af43c90 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x56222af4a750 <col:31, line:278:5>
|   `-IfStmt 0x56222af4a738 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x56222af49e30 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56222af49e18 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x56222af49de8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56222af434c8
|     |     `-MemberExpr 0x56222af49db8 <col:6> 'String::rep_t' lvalue ->_r 0x56222af43540
|     |       `-CXXThisExpr 0x56222af49da8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x56222af4a710 <col:15, line:277:2>
|       |-ParenExpr 0x56222af4a2e0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x56222af4a2b0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x56222af49f40 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x56222af49f28 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x56222af49f10 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x56222af49ed0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56222af42d98
|       |   |       `-ImplicitCastExpr 0x56222af49eb8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x56222af49e88 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x56222af434c8
|       |   |           `-MemberExpr 0x56222af49e58 <col:27> 'String::rep_t' lvalue ->_r 0x56222af43540
|       |   |             `-CXXThisExpr 0x56222af49e48 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x56222af49fa0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x56222af49f80 <col:54> 'int' 0
|       |   `-CallExpr 0x56222af4a210 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x56222af4a1f8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56222af4a178 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56222acaa3d0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x56222af4a250 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56222af4a088 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x56222af4a268 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56222af4a0b8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x56222af4a280 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x56222af4a0f0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x56222af4a298 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x56222af4a160 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x56222af4a148 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x56222af4a110 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x56222af4a630 <line:274:6, line:275:22>
|       | |-CallExpr 0x56222af4a4f0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x56222af4a4d8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x56222af4a450 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x56222af33600 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x56222af4a420 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56222af42d98
|       | |   `-ImplicitCastExpr 0x56222af4a408 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x56222af4a3d8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x56222af434c8
|       | |       `-MemberExpr 0x56222af4a3a8 <col:40> 'String::rep_t' lvalue ->_r 0x56222af43540
|       | |         `-CXXThisExpr 0x56222af4a398 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x56222af4a5f0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x56222af4a5d8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x56222af4a518 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x56222af48470 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x56222af4a618 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x56222af4a578 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x56222af434c8
|       |       `-MemberExpr 0x56222af4a548 <col:15> 'String::rep_t' lvalue ->_r 0x56222af43540
|       |         `-CXXThisExpr 0x56222af4a538 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x56222af4a6f0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x56222af4a688 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56222af434c8
|         | `-MemberExpr 0x56222af4a658 <col:6> 'String::rep_t' lvalue ->_r 0x56222af43540
|         |   `-CXXThisExpr 0x56222af4a648 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x56222af4a6d8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x56222af4a6b8 <col:16> 'int' 0
|-CXXMethodDecl 0x56222af43f28 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x56222af43d48 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56222af43dc8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56222af43e40 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x56222af44000 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x56222af44250 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x56222af440b8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56222af44138 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56222af441b0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x56222af44438 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x56222af44320 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x56222af443a0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x56222af44538 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x56222af4a828 <col:41, line:286:5>
|   `-ReturnStmt 0x56222af4a818 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x56222af4a7e8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x56222af4a7b0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x56222af4a798 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x56222af4a778 <col:46> 'int' 1
|-CXXMethodDecl 0x56222af447d8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x56222af445f0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x56222af44670 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x56222af446f0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x56222af48470 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x56222af448a0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x56222af48540 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x56222af48710 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x56222af485f8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56222af48678 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x56222af487d0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x56222af48898 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x56222af48998 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x56222af48a10 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x56222af48a88 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x56222af48af0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x56222af48bf0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x56222af48c40 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56222af48bd0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x56222af48bb0 <col:22> 'int' 14
|-CXXMethodDecl 0x56222af48e58 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x56222af48c70 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x56222af48cf0 <col:38> col:41 'int'
| `-ParmVarDecl 0x56222af48d70 <col:43> col:46 'int'
|-FriendDecl 0x56222af48f60 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x56222af48ff0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56222b23d090 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x56222b23d268 prev 0x56222b23d090 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56222b23d2f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x56222b23d320 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56222ac0d580 'int'
|-TypedefDecl 0x56222b23ec80 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x56222b23ec30 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x56222b23ec10 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x56222b23d538 'type'
|     `-SubstTemplateTypeParmType 0x56222b23d500 'String' sugar
|       |-TemplateTypeParmType 0x56222aefea00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56222aefe9b0 'T'
|       `-RecordType 0x56222af3a1e0 'String'
|         `-CXXRecord 0x56222af3a150 'String'
|-TypedefDecl 0x56222b23ed38 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x56222b23ed00 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x56222b23ece0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x56222b23ec80 'type'
|     `-ElaboratedType 0x56222b23ec30 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x56222b23ec10 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x56222b23d538 'type'
|         `-SubstTemplateTypeParmType 0x56222b23d500 'String' sugar
|           |-TemplateTypeParmType 0x56222aefea00 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56222aefe9b0 'T'
|           `-RecordType 0x56222af3a1e0 'String'
|             `-CXXRecord 0x56222af3a150 'String'
|-CXXMethodDecl 0x56222b23eeb8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x56222b23edc8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x56222b23efa8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56222b23f088 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56222b23f088
|-CXXMethodDecl 0x56222b23f358 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x56222b23f260 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x56222b23f598 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56222b23f410 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56222b23f488 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56222b23f768 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56222b23f658 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56222b23f6d0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56222b23f8c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x56222b23f998 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x56222b23fbe8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56222b23fa58 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x56222b23fad0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56222b23fe48 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x56222b23fcb8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x56222b23fd30 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56222b240008 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x56222b23ff18 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56222b2401d8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x56222b2400d0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56222b240290 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56222b240340 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56222b240578 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56222b2403f0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56222b240468 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56222b240818 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x56222b240720 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x56222b2408e0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x56222b240930 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56222b240980 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56222b172990 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x56222b23baf8 prev 0x56222b172990 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56222b23d000 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x56222b23cfb0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x56222b23cf90 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x56222b23ce40 'type'
|     `-SubstTemplateTypeParmType 0x56222b23ccd0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x56222aed47b0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x56222aed4758 'F'
|       `-RecordType 0x56222b23c930 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x56222b23c850 'typed_array_memory'
|-FieldDecl 0x56222b2409d0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x56222b240a20 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56222b240a58 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x56222b23bb90 'String' sugar
|   |-TemplateTypeParmType 0x56222af0bd20 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56222af0bcc8 'T'
|   `-RecordType 0x56222af3a1e0 'String'
|     `-CXXRecord 0x56222af3a150 'String'
|-TypedefDecl 0x56222b240ae8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x56222b240ab0 'String &'
|   `-SubstTemplateTypeParmType 0x56222b23bb90 'String' sugar
|     |-TemplateTypeParmType 0x56222af0bd20 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56222af0bcc8 'T'
|     `-RecordType 0x56222af3a1e0 'String'
|       `-CXXRecord 0x56222af3a150 'String'
|-TypedefDecl 0x56222b240b78 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x56222b240b40 'const String &'
|   `-QualType 0x56222b23bb91 'const String' const
|     `-SubstTemplateTypeParmType 0x56222b23bb90 'String' sugar
|       |-TemplateTypeParmType 0x56222af0bd20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56222af0bcc8 'T'
|       `-RecordType 0x56222af3a1e0 'String'
|         `-CXXRecord 0x56222af3a150 'String'
|-TypedefDecl 0x56222b240c08 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x56222b240bd0 'String *'
|   `-SubstTemplateTypeParmType 0x56222b23bb90 'String' sugar
|     |-TemplateTypeParmType 0x56222af0bd20 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56222af0bcc8 'T'
|     `-RecordType 0x56222af3a1e0 'String'
|       `-CXXRecord 0x56222af3a150 'String'
|-TypedefDecl 0x56222b240c98 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x56222b240c60 'const String *'
|   `-QualType 0x56222b23bb91 'const String' const
|     `-SubstTemplateTypeParmType 0x56222b23bb90 'String' sugar
|       |-TemplateTypeParmType 0x56222af0bd20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56222af0bcc8 'T'
|       `-RecordType 0x56222af3a1e0 'String'
|         `-CXXRecord 0x56222af3a150 'String'
|-TypedefDecl 0x56222b2418f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x56222b2418a0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x56222b241880 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x56222b2417b8 'type'
|     `-LValueReferenceType 0x56222b241780 'const String &'
|       `-QualType 0x56222b241521 'const String' const
|         `-SubstTemplateTypeParmType 0x56222b241520 'String' sugar
|           |-TemplateTypeParmType 0x56222aede700 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56222aede6a8 'T'
|           `-RecordType 0x56222af3a1e0 'String'
|             `-CXXRecord 0x56222af3a150 'String'
|-TypedefDecl 0x56222b241958 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x56222b240b40 'const String &'
|   `-QualType 0x56222b23bb91 'const String' const
|     `-SubstTemplateTypeParmType 0x56222b23bb90 'String' sugar
|       |-TemplateTypeParmType 0x56222af0bd20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56222af0bcc8 'T'
|       `-RecordType 0x56222af3a1e0 'String'
|         `-CXXRecord 0x56222af3a150 'String'
|-TypedefDecl 0x56222b2419b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56222ac0d580 'int'
|-TypedefDecl 0x56222b241a18 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x56222b240bd0 'String *'
|   `-SubstTemplateTypeParmType 0x56222b23bb90 'String' sugar
|     |-TemplateTypeParmType 0x56222af0bd20 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56222af0bcc8 'T'
|     `-RecordType 0x56222af3a1e0 'String'
|       `-CXXRecord 0x56222af3a150 'String'
|-TypedefDecl 0x56222b241a80 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x56222b240c60 'const String *'
|   `-QualType 0x56222b23bb91 'const String' const
|     `-SubstTemplateTypeParmType 0x56222b23bb90 'String' sugar
|       |-TemplateTypeParmType 0x56222af0bd20 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56222af0bcc8 'T'
|       `-RecordType 0x56222af3a1e0 'String'
|         `-CXXRecord 0x56222af3a150 'String'
|-EnumDecl 0x56222b241ad8 <line:134:5> col:5
| `-EnumConstantDecl 0x56222b241bd0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56222b241bb0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56222af0d3a8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56222af0d380 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56222af0d360 <col:40> 'int' 1
|-CXXConstructorDecl 0x56222b241c58 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56222b241ee8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56222b241d10 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56222b241db0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x56222b242178 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x56222b242060 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x56222b242438 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x56222b242320 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x56222b242750 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x56222b242630 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x56222b242a60 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x56222b242940 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x56222b242d50 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56222b242b98 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56222b242c10 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56222b242e78 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x56222b242f28 <col:20> Inherited
| `-OptimizeNoneAttr 0x56222b242f80 <col:30> Inherited
|-CXXMethodDecl 0x56222b242fc8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x56222b243078 <col:20> Inherited
| `-OptimizeNoneAttr 0x56222b2430d0 <col:30> Inherited
|-CXXMethodDecl 0x56222b243198 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56222b243248 <col:20> Inherited
| `-OptimizeNoneAttr 0x56222b2432a0 <col:30> Inherited
|-CXXMethodDecl 0x56222b2432e8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56222b243398 <col:20> Inherited
| `-OptimizeNoneAttr 0x56222b2433f0 <col:30> Inherited
|-CXXMethodDecl 0x56222b243438 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56222b2434e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56222b243540 <col:30> Inherited
|-CXXMethodDecl 0x56222b243588 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56222b243638 <col:20> Inherited
| `-OptimizeNoneAttr 0x56222b243690 <col:30> Inherited
|-CXXMethodDecl 0x56222b2436b8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56222b243768 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56222b243818 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56222b2439d8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56222b2438c8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56222b243940 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56222b243b28 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56222b243a98 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56222b243cd8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x56222b243be0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56222b243d90 <col:20>
| `-OptimizeNoneAttr 0x56222b243de8 <col:30>
|-CXXMethodDecl 0x56222b243f08 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x56222b243e10 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56222b243fc0 <col:20>
| `-OptimizeNoneAttr 0x56222b244018 <col:30>
|-CXXMethodDecl 0x56222b2440d0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x56222b244040 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56222b244218 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56222b244188 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56222b244348 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x56222b244448 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x56222b244518 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x56222b2445e8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x56222b244728 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x56222b244698 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56222b244870 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56222b2447e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56222b2449b8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x56222b244928 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56222b244a70 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56222b244b70 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56222b244ae0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56222b244c28 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56222b244ce8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x56222b244de8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x56222b244f68 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x56222b244ea8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x56222b245728 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56222b245020 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x56222b245688 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x56222b245588 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x56222b245808 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56222b245958 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x56222b2458c8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56222b245a10 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56222b245c58 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56222b245ad0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x56222b245b48 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56222b245de8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x56222b245d28 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x56222b245ff8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x56222b245eb0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x56222b245f28 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x56222b2460b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x56222b246318 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x56222b246220 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x56222b2463e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56222b2463e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashMap<class IPFlowID, void *>::Pair
         0 |   class IPFlowID key
         0 |     class IPAddress _saddr
         0 |       uint32_t _addr
         4 |     class IPAddress _daddr
         4 |       uint32_t _addr
         8 |     uint16_t _sport
        10 |     uint16_t _dport
        16 |   void * value
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b1ff658 <../dummy_inc/click/hashmap.hh:283:3, line:286:3> line:283:10 struct Pair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56222b2df5d8 prev 0x56222b204ba0 <col:3, col:10> col:10 implicit struct Pair
|-FieldDecl 0x56222b2df678 <line:284:5, col:7> col:7 key 'IPFlowID':'IPFlowID'
`-FieldDecl 0x56222b2df6c8 <line:285:5, col:11> col:11 value 'void *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap<IPFlowID, void *>::Pair" = type { %class.IPFlowID, i8* }
  NonVirtualBaseLLVMType:%"struct.HashMap<IPFlowID, void *>::Pair" = type { %class.IPFlowID, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashMap<class IPFlowID, void *>::Elt
         0 |   struct HashMap<class IPFlowID, void *>::Pair (base)
         0 |     class IPFlowID key
         0 |       class IPAddress _saddr
         0 |         uint32_t _addr
         4 |       class IPAddress _daddr
         4 |         uint32_t _addr
         8 |       uint16_t _sport
        10 |       uint16_t _dport
        16 |     void * value
        24 |   struct HashMap<class IPFlowID, void *>::Elt * next
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b204ed0 <../dummy_inc/click/hashmap.hh:294:5, line:300:5> line:294:12 struct Elt definition
|-DefinitionData pass_in_registers trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'HashMap<IPFlowID, void *>::Pair'
|-CXXRecordDecl 0x56222b2df760 prev 0x56222b204ed0 <col:5, col:12> col:12 implicit struct Elt
`-FieldDecl 0x56222b2df800 <line:295:2, col:7> col:7 next 'HashMap<IPFlowID, void *>::Elt *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap<IPFlowID, void *>::Elt" = type { %"struct.HashMap<IPFlowID, void *>::Pair", %"struct.HashMap<IPFlowID, void *>::Elt"* }
  NonVirtualBaseLLVMType:%"struct.HashMap<IPFlowID, void *>::Elt" = type { %"struct.HashMap<IPFlowID, void *>::Pair", %"struct.HashMap<IPFlowID, void *>::Elt"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashMap_ArenaFactory
         0 |   (HashMap_ArenaFactory vtable pointer)
         8 |   class HashMap_Arena **[2] _arenas
        24 |   int [2] _narenas
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56222b1d50d8 prev 0x56222b0f4820 <../dummy_inc/click/bighashmap_arena.hh:50:1, line:68:1> line:50:7 referenced class HashMap_ArenaFactory definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56222b1d51d0 <col:1, col:7> col:7 implicit referenced class HashMap_ArenaFactory
|-AccessSpecDecl 0x56222b1d5260 <col:30, col:36> col:30 public
|-CXXConstructorDecl 0x56222b1d52c0 <line:52:5, col:26> col:5 HashMap_ArenaFactory 'void ()'
|-CXXDestructorDecl 0x56222b1d53b0 <line:53:5, col:35> col:13 ~HashMap_ArenaFactory 'void ()' virtual noexcept-unevaluated 0x56222b1d53b0
|-CXXMethodDecl 0x56222b1d54b0 <line:55:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x56222b1d5570 <line:56:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56222b1d57a8 <line:58:5, col:72> col:27 used get_arena 'HashMap_Arena *(uint32_t, HashMap_ArenaFactory *)' static
| |-ParmVarDecl 0x56222b1d5620 <col:37> col:45 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56222b1d5698 <col:47, col:71> col:70 'HashMap_ArenaFactory *' cinit
|   `-ImplicitCastExpr 0x56222b1d5e78 <col:71> 'HashMap_ArenaFactory *' <NullToPointer>
|     `-IntegerLiteral 0x56222b1d5e58 <col:71> 'int' 0
|-CXXMethodDecl 0x56222b1d5958 <line:59:5, col:51> col:28 get_arena_func 'HashMap_Arena *(uint32_t)' virtual
| `-ParmVarDecl 0x56222b1d5868 <col:43> col:51 'uint32_t':'unsigned int'
|-AccessSpecDecl 0x56222b1d5a00 <line:61:3, col:10> col:3 private
|-FieldDecl 0x56222b1d5b00 <line:63:5, col:30> col:21 _arenas 'HashMap_Arena **[2]'
|-FieldDecl 0x56222b1d5bb8 <line:64:5, col:19> col:9 _narenas 'int [2]'
|-VarDecl 0x56222b1d5c18 <line:66:5, col:34> col:34 the_factory 'HashMap_ArenaFactory *' static
`-CXXMethodDecl 0x56222b1d5cd8 <line:50:7> col:7 implicit operator= 'HashMap_ArenaFactory &(const HashMap_ArenaFactory &)' inline default noexcept-unevaluated 0x56222b1d5cd8
  `-ParmVarDecl 0x56222b1d5de8 <col:7> col:7 'const HashMap_ArenaFactory &'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap_ArenaFactory = type { i32 (...)**, [2 x %class.HashMap_Arena**], [2 x i32] }
  NonVirtualBaseLLVMType:%class.HashMap_ArenaFactory = type { i32 (...)**, [2 x %class.HashMap_Arena**], [2 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>
