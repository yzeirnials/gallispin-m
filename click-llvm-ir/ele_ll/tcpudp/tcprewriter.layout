
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct libdivide_u32_t
         0 |   uint32_t magic
         4 |   uint8_t more
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPFlowID
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   class IPAddress _daddr
         4 |     uint32_t _addr
         8 |   uint16_t _sport
        10 |   uint16_t _dport
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPRewriterEntry
         0 |   class IPFlowID _flowid
         0 |     class IPAddress _saddr
         0 |       uint32_t _addr
         4 |     class IPAddress _daddr
         4 |       uint32_t _addr
         8 |     uint16_t _sport
        10 |     uint16_t _dport
   12:0-23 |   uint32_t _output
        15 |   uint8_t _direction
        16 |   class IPRewriterEntry * _hashnext
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterFlow *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5)
         0 |   class IPRewriterPattern * pattern
         0 |   class IPMapper * mapper
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterInput
         0 |   class IPRewriterBase * owner
         8 |   int owner_input
        12 |   int kind
        16 |   int foutput
        24 |   class IPRewriterBase * reply_element
        32 |   int routput
        36 |   uint32_t count
        40 |   uint32_t failures
        48 |   union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5) u
        48 |     class IPRewriterPattern * pattern
        48 |     class IPMapper * mapper
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class IPRewriterEntry * _element
         8 |   class IPRewriterEntry ** _pprev
        16 |   HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |   const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > (base)
         0 |     class IPRewriterEntry * _element
         8 |     class IPRewriterEntry ** _pprev
        16 |     HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |     const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterFlow
         0 |   class IPRewriterEntry [2] _e
        48 |   uint16_t _ip_csum_delta
        50 |   uint16_t _udp_csum_delta
        52 |   click_jiffies_t _expiry_j
   56:0-31 |   size_t _place
        60 |   uint8_t _ip_p
        61 |   uint8_t _tflags
        62 |   _Bool _guaranteed
        63 |   uint8_t _reply_anno
        64 |   class IPRewriterInput * _owner
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | class TCPRewriter::TCPFlow
         0 |   class IPRewriterFlow (base)
         0 |     class IPRewriterEntry [2] _e
        48 |     uint16_t _ip_csum_delta
        50 |     uint16_t _udp_csum_delta
        52 |     click_jiffies_t _expiry_j
   56:0-31 |     size_t _place
        60 |     uint8_t _ip_p
        61 |     uint8_t _tflags
        62 |     _Bool _guaranteed
        63 |     uint8_t _reply_anno
        64 |     class IPRewriterInput * _owner
        72 |   struct TCPRewriter::TCPFlow::delta_transition * _dt
           | [sizeof=80, dsize=80, align=8,
           |  nvsize=80, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TCPRewriter::TCPFlow::delta_transition
         0 |   int32_t [2] delta
         8 |   tcp_seq_t [2] trigger
        16 |   uintptr_t nextptr
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825883a70 prev 0x55f8257f93f8 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825883b68 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x55f825883bf8 <col:19, col:25> col:19 public
|-TypedefDecl 0x55f825883c30 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55f82566fb60 'uninitialized_type'
|   `-CXXRecord 0x55f82566fac8 'uninitialized_type'
|-CXXConstructorDecl 0x55f825883cf0 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x55f82588b5b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f82588b658 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f82588b618 <col:10> 'int' 0
| `-CompoundStmt 0x55f82588b6a0 <col:13, line:22:5>
|-CXXConstructorDecl 0x55f825883e40 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x55f825883db0 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x55f82588b5b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f82588b6f0 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x55f82588b6b0 <col:10> 'unsigned int' lvalue ParmVar 0x55f825883db0 'x' 'unsigned int'
| `-CompoundStmt 0x55f82588b738 <col:13, line:27:5>
|-CXXConstructorDecl 0x55f825883f98 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x55f825883f08 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x55f82588b5b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f82588b7a0 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55f82588b788 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x55f82588b748 <col:10> 'int' lvalue ParmVar 0x55f825883f08 'x' 'int'
| `-CompoundStmt 0x55f82588b7e8 <col:13, line:31:5>
|-CXXConstructorDecl 0x55f8258840f0 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x55f825884060 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x55f82588b5b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f82588b850 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55f82588b838 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x55f82588b7f8 <col:10> 'unsigned long' lvalue ParmVar 0x55f825884060 'x' 'unsigned long'
| `-CompoundStmt 0x55f82588b898 <col:13, line:35:5>
|-CXXConstructorDecl 0x55f825884248 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x55f8258841b8 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x55f82588b5b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f82588b900 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55f82588b8e8 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x55f82588b8a8 <col:10> 'long' lvalue ParmVar 0x55f8258841b8 'x' 'long'
| `-CompoundStmt 0x55f82588b948 <col:13, line:39:5>
|-CXXConstructorDecl 0x55f825884408 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x55f825884318 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x55f82588b5b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f82588b9c8 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55f82588b978 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x55f8257b21a0
| |     `-DeclRefExpr 0x55f82588b958 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x55f825884318 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x55f82588ba10 <col:20, line:44:5>
|-CXXConstructorDecl 0x55f8258896e0 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x55f8258844d0 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x55f82588bb78 <col:51, line:56:5>
|   `-BinaryOperator 0x55f82588bb58 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55f82588ba30 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x55f82588b5b0
|     | `-CXXThisExpr 0x55f82588ba20 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x55f82588bb40 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55f82588bb28 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x55f82588bb08 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x55f82588bad8 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x55f82588bac0 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x55f82588ba60 <col:47> 'const unsigned char *' lvalue ParmVar 0x55f8258844d0 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x55f825889830 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x55f8258897a0 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x55f8258899d8 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55f825889918 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x55f82588bbe8 <col:56, line:68:5>
|   `-CStyleCastExpr 0x55f82588bbc0 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55f82588bb90 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55f825889918 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x55f825889b68 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x55f825889aa0 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x55f825889c58 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x55f82588cba8 <col:46, line:83:5>
|   `-ReturnStmt 0x55f82588cb98 <line:82:2, col:29>
|     `-ExprWithCleanups 0x55f82588cb80 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x55f82588cb50 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f82588ca08 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x55f82588c8f0 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x55f82588c7d8 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x55f82588bc10 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x55f825889d48 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x55f82588cc58 <col:31, line:88:5>
|   `-ReturnStmt 0x55f82588cc48 <line:87:2, col:10>
|     `-UnaryOperator 0x55f82588cc30 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x55f82588cc18 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55f82588cc00 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x55f82588cbd0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55f82588b5b0
|             `-CXXThisExpr 0x55f82588cbc0 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55f825889e08 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x55f82588ccd8 <col:34, line:93:5>
|   `-ReturnStmt 0x55f82588ccc8 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x55f82588ccb0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f82588cc80 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55f82588b5b0
|         `-CXXThisExpr 0x55f82588cc70 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x55f825889ed8 <line:99:5, line:101:5> line:99:12 used operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x55f82588cd58 <col:38, line:101:5>
|   `-ReturnStmt 0x55f82588cd48 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x55f82588cd30 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f82588cd00 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55f82588b5b0
|         `-CXXThisExpr 0x55f82588ccf0 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55f825889fa8 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x55f82588d028 <col:38, line:108:5>
|   `-ReturnStmt 0x55f82588d018 <line:107:2, col:58>
|     `-BinaryOperator 0x55f82588cff8 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x55f82588cf10 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x55f82588cef0 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55f82588ced8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55f82588cd80 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55f82588b5b0
|       |   |   `-CXXThisExpr 0x55f82588cd70 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55f82588ceb0 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55f82588ce98 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55f82588ce18 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55f8257bf688 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55f82588cdf8 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x55f82588cfd0 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55f82588cfb8 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f82588cf98 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x55f8257bf688 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55f82588cf78 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x55f82588a068 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x55f82588d298 <col:39, line:112:5>
|   `-ReturnStmt 0x55f82588d288 <line:111:2, col:56>
|     `-BinaryOperator 0x55f82588d268 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x55f82588d180 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x55f82588d160 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55f82588d148 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55f82588d050 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55f82588b5b0
|       |   |   `-CXXThisExpr 0x55f82588d040 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55f82588d120 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55f82588d108 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55f82588d0e8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55f8257bf688 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55f82588d0c8 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x55f82588d240 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55f82588d228 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f82588d208 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x55f8257bf688 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55f82588d1e8 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x55f82588a198 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x55f82588a2a0 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x55f82588a3b0 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x55f82588a4a0 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f82588a560 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55f82588a628 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x55f82588a828 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x55f82588a6d8 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x55f82588a750 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x55f82588a9a8 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55f82588a8e8 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x55f82588aaf0 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55f82588aa60 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x55f82588ac98 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55f82588aba8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55f82588ade0 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55f82588ad50 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55f82588af28 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55f82588ae98 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55f82588aff0 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x55f82588b0b0 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x55f82588b228 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x55f82588b160 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x55f82588b2f0 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x55f82588b3d8 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55f82588b480 <col:51> "" ""
|-TypedefDecl 0x55f82588b520 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x55f8257f9490 'IPAddress'
|   `-CXXRecord 0x55f825883a70 'IPAddress'
|-AccessSpecDecl 0x55f82588b578 <line:150:3, col:10> col:3 private
|-FieldDecl 0x55f82588b5b0 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f82588bc58 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f82588bd68 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x55f82588b5b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f825b29e88 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55f825b29e40 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x55f82588b5b0
| |     `-DeclRefExpr 0x55f825b29e20 <col:7> 'const IPAddress' lvalue ParmVar 0x55f82588bd68 '' 'const IPAddress &'
| `-CompoundStmt 0x55f825b29ed0 <col:7>
|-CXXConstructorDecl 0x55f82588be08 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f82588bf18 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x55f82588b5b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f82588caf8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55f82588cab0 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x55f82588b5b0
| |     `-CXXStaticCastExpr 0x55f82588ca80 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x55f82588ca50 <col:7> 'IPAddress' lvalue ParmVar 0x55f82588bf18 '' 'IPAddress &&'
| `-CompoundStmt 0x55f82588cb40 <col:7>
|-CXXDestructorDecl 0x55f82588c808 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f825b2a778 <col:7> col:7 implicit used operator= 'IPAddress &(const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825b2a888 <col:7> col:7 used 'const IPAddress &'
| `-CompoundStmt 0x55f825b2abe0 <col:7>
|   |-BinaryOperator 0x55f825b2ab88 <col:7> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x55f825b2ab40 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x55f82588b5b0
|   | | `-CXXThisExpr 0x55f825b2ab30 <col:7> 'IPAddress *' this
|   | `-ImplicitCastExpr 0x55f825b2ab70 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x55f825b2ab00 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x55f82588b5b0
|   |     `-DeclRefExpr 0x55f825b2aae0 <col:7> 'const IPAddress' lvalue ParmVar 0x55f825b2a888 '' 'const IPAddress &'
|   `-ReturnStmt 0x55f825b2abd0 <col:7>
|     `-UnaryOperator 0x55f825b2abb8 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f825b2aba8 <col:7> 'IPAddress *' this
`-CXXMethodDecl 0x55f825b2a8f8 <col:7> col:7 implicit operator= 'IPAddress &(IPAddress &&)' inline default trivial noexcept-unevaluated 0x55f825b2a8f8
  `-ParmVarDecl 0x55f825b2aa08 <col:7> col:7 'IPAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825b27430 <../dummy_inc/click/ipflowid.hh:9:1, line:143:1> line:9:7 referenced class IPFlowID definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825b27548 <col:1, col:7> col:7 implicit referenced class IPFlowID
|-AccessSpecDecl 0x55f825b275d8 <col:18, col:24> col:18 public
|-TypedefDecl 0x55f825b27610 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55f82566fb60 'uninitialized_type'
|   `-CXXRecord 0x55f82566fac8 'uninitialized_type'
|-CXXConstructorDecl 0x55f825b276d0 <line:17:5, line:19:5> line:17:5 used IPFlowID 'void ()'
| |-CXXCtorInitializer Field 0x55f825b295d8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f825b29ba8 <line:18:4, col:11> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55f825b29638 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f825b29c10 <col:14, col:21> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55f825b29698 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55f825b29ca0 <col:31> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x55f825b29c60 <col:31> 'int' 0
| |-CXXCtorInitializer Field 0x55f825b296f8 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55f825b29d20 <col:42> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x55f825b29ce0 <col:42> 'int' 0
| `-CompoundStmt 0x55f825b29d80 <col:45, line:19:5>
|-CXXConstructorDecl 0x55f825b27a38 <line:26:5, line:28:5> line:26:5 used IPFlowID 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x55f825b27788 <col:14, col:24> col:24 used saddr 'IPAddress'
| |-ParmVarDecl 0x55f825b27800 <col:31, col:40> col:40 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x55f825b27878 <col:47, col:57> col:57 used daddr 'IPAddress'
| |-ParmVarDecl 0x55f825b278f0 <col:64, col:73> col:73 used dport 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x55f825b295d8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f825b29ee0 <line:27:4, col:16> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x55f825b29dd0 <col:11> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x55f825b29d90 <col:11> 'IPAddress' lvalue ParmVar 0x55f825b27788 'saddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x55f825b29638 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f825b29f90 <col:19, col:31> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x55f825b29f78 <col:26> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x55f825b29f38 <col:26> 'IPAddress' lvalue ParmVar 0x55f825b27878 'daddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x55f825b29698 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55f825b2a028 <col:41> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x55f825b29fe8 <col:41> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f825b27800 'sport' 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x55f825b296f8 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55f825b2a0a8 <col:56> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x55f825b2a068 <col:56> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f825b278f0 'dport' 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55f825b2a108 <col:63, line:28:5>
|-CXXConstructorDecl 0x55f825b27c58 <line:37:5, col:60> col:14 IPFlowID 'void (const Packet *, bool)'
| |-ParmVarDecl 0x55f825b27b10 <col:23, col:37> col:37 p 'const Packet *'
| `-ParmVarDecl 0x55f825b27b88 <col:40, col:55> col:45 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f825b29b70 <col:55> 'bool' false
|-CXXConstructorDecl 0x55f825b27e68 <line:47:5, col:64> col:14 IPFlowID 'void (const click_ip *, bool)'
| |-ParmVarDecl 0x55f825b27d20 <col:23, col:39> col:39 iph 'const click_ip *'
| `-ParmVarDecl 0x55f825b27d98 <col:44, col:59> col:49 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f825b29b80 <col:59> 'bool' false
|-CXXConstructorDecl 0x55f825b27fc0 <line:50:5, line:52:5> line:50:12 IPFlowID 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55f825b27f30 <col:21, col:47> col:47 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x55f825b295d8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f825b2a118 <col:12> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55f825b29638 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f825b2a168 <col:12> 'IPAddress' 'void ()'
| `-CompoundStmt 0x55f825b2a220 <col:55, line:52:5>
|   `-CStyleCastExpr 0x55f825b2a1f8 <line:51:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55f825b2a1c8 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55f825b27f30 'unused' 'const uninitialized_type &'
|-TypedefDecl 0x55f825b28178 <line:55:5, col:60> col:35 referenced unspecified_bool_type 'IPAddress (IPFlowID::*)() const'
| `-MemberPointerType 0x55f825b280f0 'IPAddress (IPFlowID::*)() const'
|   |-RecordType 0x55f825b274c0 'IPFlowID'
|   | `-CXXRecord 0x55f825b27430 'IPFlowID'
|   `-ParenType 0x55f825b28090 'IPAddress () const' sugar
|     `-FunctionProtoType 0x55f825a501b0 'IPAddress () const' const cdecl
|       `-RecordType 0x55f8257f9490 'IPAddress'
|         `-CXXRecord 0x55f825883a70 'IPAddress'
|-CXXConversionDecl 0x55f825b282b8 <line:57:5, line:59:5> line:57:5 operator IPAddress (IPFlowID::*)() const 'IPFlowID::unspecified_bool_type () const'
| `-CompoundStmt 0x55f825b2a4d0 <col:44, line:59:5>
|   `-ReturnStmt 0x55f825b2a4c0 <line:58:2, col:47>
|     `-ConditionalOperator 0x55f825b2a490 <col:9, col:47> 'IPAddress (IPFlowID::*)() const'
|       |-BinaryOperator 0x55f825b2a3b8 <col:9, col:19> 'bool' '||'
|       | |-ImplicitCastExpr 0x55f825b2a388 <col:9> 'bool' <IntegralToBoolean>
|       | | `-ImplicitCastExpr 0x55f825b2a308 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | |   `-CXXMemberCallExpr 0x55f825b2a2e8 <col:9> 'uint32_t':'unsigned int'
|       | |     `-MemberExpr 0x55f825b2a2b8 <col:9> '<bound member function type>' .operator unsigned int 0x55f825889ed8
|       | |       `-MemberExpr 0x55f825b2a248 <col:9> 'const IPAddress' lvalue ->_saddr 0x55f825b295d8
|       | |         `-CXXThisExpr 0x55f825b2a238 <col:9> 'const IPFlowID *' implicit this
|       | `-ImplicitCastExpr 0x55f825b2a3a0 <col:19> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55f825b2a370 <col:19> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x55f825b2a350 <col:19> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x55f825b2a320 <col:19> '<bound member function type>' .operator unsigned int 0x55f825889ed8
|       |         `-MemberExpr 0x55f825b2a288 <col:19> 'const IPAddress' lvalue ->_daddr 0x55f825b29638
|       |           `-CXXThisExpr 0x55f825b2a278 <col:19> 'const IPFlowID *' implicit this
|       |-UnaryOperator 0x55f825b2a440 <col:28, col:39> 'IPAddress (IPFlowID::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55f825b2a410 <col:29, col:39> 'IPAddress () const' CXXMethod 0x55f825b283e0 'saddr' 'IPAddress () const'
|       `-ImplicitCastExpr 0x55f825b2a478 <col:47> 'IPAddress (IPFlowID::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x55f825b2a458 <col:47> 'int' 0
|-CXXMethodDecl 0x55f825b283e0 <line:63:5, line:65:5> line:63:15 used saddr 'IPAddress () const'
| `-CompoundStmt 0x55f825b2a568 <col:29, line:65:5>
|   `-ReturnStmt 0x55f825b2a558 <line:64:2, col:9>
|     `-CXXConstructExpr 0x55f825b2a528 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55f825b2a4f8 <col:9> 'const IPAddress' lvalue ->_saddr 0x55f825b295d8
|         `-CXXThisExpr 0x55f825b2a4e8 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55f825b284f8 <line:67:5, line:69:5> line:67:14 used sport 'uint16_t () const'
| `-CompoundStmt 0x55f825b2a5e8 <col:28, line:69:5>
|   `-ReturnStmt 0x55f825b2a5d8 <line:68:2, col:9>
|     `-ImplicitCastExpr 0x55f825b2a5c0 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x55f825b2a590 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x55f825b29698
|         `-CXXThisExpr 0x55f825b2a580 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55f825b285b8 <line:71:5, line:73:5> line:71:15 used daddr 'IPAddress () const'
| `-CompoundStmt 0x55f825b2a680 <col:29, line:73:5>
|   `-ReturnStmt 0x55f825b2a670 <line:72:2, col:9>
|     `-CXXConstructExpr 0x55f825b2a640 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55f825b2a610 <col:9> 'const IPAddress' lvalue ->_daddr 0x55f825b29638
|         `-CXXThisExpr 0x55f825b2a600 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55f825b28678 <line:75:5, line:77:5> line:75:14 used dport 'uint16_t () const'
| `-CompoundStmt 0x55f825b2a700 <col:28, line:77:5>
|   `-ReturnStmt 0x55f825b2a6f0 <line:76:2, col:9>
|     `-ImplicitCastExpr 0x55f825b2a6d8 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x55f825b2a6a8 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x55f825b296f8
|         `-CXXThisExpr 0x55f825b2a698 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55f825b287b8 <line:80:5, line:82:5> line:80:10 set_saddr 'void (IPAddress)'
| |-ParmVarDecl 0x55f825b28728 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x55f825b2aca8 <col:33, line:82:5>
|   `-CXXOperatorCallExpr 0x55f825b2ac70 <line:81:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x55f825b2ac58 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55f825b2aa90 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55f825b2a778 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x55f825b2a728 <col:2> 'IPAddress' lvalue ->_saddr 0x55f825b295d8
|     | `-CXXThisExpr 0x55f825b2a718 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55f825b2aa78 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x55f825b2a758 <col:11> 'IPAddress' lvalue ParmVar 0x55f825b28728 'a' 'IPAddress'
|-CXXMethodDecl 0x55f825b28968 <line:85:5, line:87:5> line:85:10 set_sport 'void (uint16_t)'
| |-ParmVarDecl 0x55f825b28870 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55f825b2ad58 <col:32, line:87:5>
|   `-BinaryOperator 0x55f825b2ad38 <line:86:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55f825b2acd0 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x55f825b29698
|     | `-CXXThisExpr 0x55f825b2acc0 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55f825b2ad20 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55f825b2ad00 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f825b28870 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55f825b28ab0 <line:89:5, line:91:5> line:89:10 set_daddr 'void (IPAddress)'
| |-ParmVarDecl 0x55f825b28a20 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x55f825b2ae58 <col:33, line:91:5>
|   `-CXXOperatorCallExpr 0x55f825b2ae20 <line:90:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x55f825b2ae08 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55f825b2ade8 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55f825b2a778 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x55f825b2ad80 <col:2> 'IPAddress' lvalue ->_daddr 0x55f825b29638
|     | `-CXXThisExpr 0x55f825b2ad70 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55f825b2add0 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x55f825b2adb0 <col:11> 'IPAddress' lvalue ParmVar 0x55f825b28a20 'a' 'IPAddress'
|-CXXMethodDecl 0x55f825b28bf8 <line:94:5, line:96:5> line:94:10 set_dport 'void (uint16_t)'
| |-ParmVarDecl 0x55f825b28b68 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55f825b2af08 <col:32, line:96:5>
|   `-BinaryOperator 0x55f825b2aee8 <line:95:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55f825b2ae80 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x55f825b296f8
|     | `-CXXThisExpr 0x55f825b2ae70 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55f825b2aed0 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55f825b2aeb0 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f825b28b68 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55f825b28ec0 <line:103:5, line:108:5> line:103:10 assign 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x55f825b28cb0 <col:17, col:27> col:27 used saddr 'IPAddress'
| |-ParmVarDecl 0x55f825b28d28 <col:34, col:43> col:43 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x55f825b28da0 <col:50, col:60> col:60 used daddr 'IPAddress'
| |-ParmVarDecl 0x55f825b28e18 <col:67, col:76> col:76 used dport 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55f825b2b220 <col:83, line:108:5>
|   |-CXXOperatorCallExpr 0x55f825b2afd0 <line:104:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x55f825b2afb8 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55f825b2af98 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55f825b2a778 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x55f825b2af30 <col:2> 'IPAddress' lvalue ->_saddr 0x55f825b295d8
|   | | `-CXXThisExpr 0x55f825b2af20 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55f825b2af80 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x55f825b2af60 <col:11> 'IPAddress' lvalue ParmVar 0x55f825b28cb0 'saddr' 'IPAddress'
|   |-CXXOperatorCallExpr 0x55f825b2b0b8 <line:105:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x55f825b2b0a0 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55f825b2b080 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55f825b2a778 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x55f825b2b018 <col:2> 'IPAddress' lvalue ->_daddr 0x55f825b29638
|   | | `-CXXThisExpr 0x55f825b2b008 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55f825b2b068 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x55f825b2b048 <col:11> 'IPAddress' lvalue ParmVar 0x55f825b28da0 'daddr' 'IPAddress'
|   |-BinaryOperator 0x55f825b2b168 <line:106:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55f825b2b100 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x55f825b29698
|   | | `-CXXThisExpr 0x55f825b2b0f0 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55f825b2b150 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f825b2b130 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f825b28d28 'sport' 'uint16_t':'unsigned short'
|   `-BinaryOperator 0x55f825b2b200 <line:107:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55f825b2b198 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x55f825b296f8
|     | `-CXXThisExpr 0x55f825b2b188 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55f825b2b1e8 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55f825b2b1c8 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f825b28e18 'dport' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55f825b28fc8 <line:113:5, line:115:5> line:113:14 used reverse 'IPFlowID () const'
| `-CompoundStmt 0x55f825b2bd58 <col:30, line:115:5>
|   `-ReturnStmt 0x55f825b2bd48 <line:114:2, col:48>
|     `-ExprWithCleanups 0x55f825b2bd30 <col:9, col:48> 'IPFlowID'
|       `-CXXConstructExpr 0x55f825b2bd00 <col:9, col:48> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f825b2b8b8 <col:9, col:48> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x55f825b2b728 <col:9, col:48> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x55f825b2b698 <col:18> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55f825b2b270 <col:18> 'const IPAddress' lvalue ->_daddr 0x55f825b29638
|             |   `-CXXThisExpr 0x55f825b2b260 <col:18> 'const IPFlowID *' implicit this
|             |-ImplicitCastExpr 0x55f825b2b6c8 <col:26> 'uint16_t':'unsigned short' <LValueToRValue>
|             | `-MemberExpr 0x55f825b2b2b0 <col:26> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x55f825b296f8
|             |   `-CXXThisExpr 0x55f825b2b2a0 <col:26> 'const IPFlowID *' implicit this
|             |-CXXConstructExpr 0x55f825b2b6e0 <col:34> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55f825b2b2f0 <col:34> 'const IPAddress' lvalue ->_saddr 0x55f825b295d8
|             |   `-CXXThisExpr 0x55f825b2b2e0 <col:34> 'const IPFlowID *' implicit this
|             `-ImplicitCastExpr 0x55f825b2b710 <col:42> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-MemberExpr 0x55f825b2b330 <col:42> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x55f825b29698
|                 `-CXXThisExpr 0x55f825b2b320 <col:42> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55f825b29088 <line:116:5, col:59> col:21 rev 'IPFlowID () const' inline
| `-DeprecatedAttr 0x55f825b29128 <col:48> "" ""
|-CXXMethodDecl 0x55f825b291b8 <line:122:5, col:34> col:23 hashcode 'hashcode_t () const' inline
|-CXXMethodDecl 0x55f825b29278 <line:127:5, col:22> col:12 used unparse 'String () const'
|-CXXConversionDecl 0x55f825b29348 <line:129:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55f825b293f0 <col:51> "" ""
|-CXXMethodDecl 0x55f825b29490 <line:130:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x55f825b29530 <col:44> "" ""
|-AccessSpecDecl 0x55f825b295a0 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x55f825b295d8 <line:135:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x55f825b29638 <line:136:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x55f825b29698 <line:137:5, col:14> col:14 referenced _sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55f825b296f8 <line:138:5, col:14> col:14 referenced _dport 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55f825b29830 <line:140:5, col:26> col:9 unparse 'int (char *) const'
| `-ParmVarDecl 0x55f825b29760 <col:17, col:23> col:23 s 'char *'
|-FriendDecl 0x55f825b29b18 <line:141:5, col:76> col:25
| `-FunctionDecl 0x55f825b29a58 parent 0x55f825516278 <col:5, col:76> col:25 operator<< 'StringAccum &(StringAccum &, const IPFlowID &)'
|   |-ParmVarDecl 0x55f825b298e8 <col:36, col:49> col:49 sa 'StringAccum &'
|   `-ParmVarDecl 0x55f825b29988 <col:53, col:69> col:69 flow_id 'const IPFlowID &'
|-CXXConstructorDecl 0x55f825b2b360 <line:9:7> col:7 implicit constexpr IPFlowID 'void (const IPFlowID &)' inline default trivial noexcept-unevaluated 0x55f825b2b360
| `-ParmVarDecl 0x55f825b2b478 <col:7> col:7 'const IPFlowID &'
|-CXXConstructorDecl 0x55f825b2b518 <col:7> col:7 implicit used constexpr IPFlowID 'void (IPFlowID &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825b2b628 <col:7> col:7 used 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55f825b295d8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f825b2b9a8 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x55f825b2b960 <col:7> 'IPAddress' xvalue ._saddr 0x55f825b295d8
| |     `-CXXStaticCastExpr 0x55f825b2b930 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55f825b2b900 <col:7> 'IPFlowID' lvalue ParmVar 0x55f825b2b628 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55f825b29638 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55f825b2baa8 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x55f825b2ba60 <col:7> 'IPAddress' xvalue ._daddr 0x55f825b29638
| |     `-CXXStaticCastExpr 0x55f825b2ba30 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55f825b2ba00 <col:7> 'IPFlowID' lvalue ParmVar 0x55f825b2b628 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55f825b29698 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55f825b2bba8 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x55f825b2bb60 <col:7> 'uint16_t':'unsigned short' xvalue ._sport 0x55f825b29698
| |     `-CXXStaticCastExpr 0x55f825b2bb30 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55f825b2bb00 <col:7> 'IPFlowID' lvalue ParmVar 0x55f825b2b628 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55f825b296f8 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55f825b2bc90 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x55f825b2bc48 <col:7> 'uint16_t':'unsigned short' xvalue ._dport 0x55f825b296f8
| |     `-CXXStaticCastExpr 0x55f825b2bc18 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55f825b2bbe8 <col:7> 'IPFlowID' lvalue ParmVar 0x55f825b2b628 '' 'IPFlowID &&'
| `-CompoundStmt 0x55f825b2bcf0 <col:7>
|-CXXDestructorDecl 0x55f825b2b778 <col:7> col:7 implicit referenced ~IPFlowID 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f825b33ca0 <col:7> col:7 implicit used operator= 'IPFlowID &(const IPFlowID &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825b33da8 <col:7> col:7 used 'const IPFlowID &'
| `-CompoundStmt 0x55f825b34908 <col:7>
|   |-CXXMemberCallExpr 0x55f825b34598 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55f825b34550 <col:7> '<bound member function type>' .operator= 0x55f825b2a778
|   | | `-MemberExpr 0x55f825b34460 <col:7> 'IPAddress' lvalue ->_saddr 0x55f825b295d8
|   | |   `-CXXThisExpr 0x55f825b34450 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x55f825b34520 <col:7> 'const IPAddress' lvalue ._saddr 0x55f825b295d8
|   |   `-DeclRefExpr 0x55f825b34500 <col:7> 'const IPFlowID' lvalue ParmVar 0x55f825b33da8 '' 'const IPFlowID &'
|   |-CXXMemberCallExpr 0x55f825b34718 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55f825b346d0 <col:7> '<bound member function type>' .operator= 0x55f825b2a778
|   | | `-MemberExpr 0x55f825b345e0 <col:7> 'IPAddress' lvalue ->_daddr 0x55f825b29638
|   | |   `-CXXThisExpr 0x55f825b345d0 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x55f825b346a0 <col:7> 'const IPAddress' lvalue ._daddr 0x55f825b29638
|   |   `-DeclRefExpr 0x55f825b34680 <col:7> 'const IPFlowID' lvalue ParmVar 0x55f825b33da8 '' 'const IPFlowID &'
|   |-BinaryOperator 0x55f825b347e8 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55f825b347a0 <col:7> 'uint16_t':'unsigned short' lvalue ->_sport 0x55f825b29698
|   | | `-CXXThisExpr 0x55f825b34790 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x55f825b347d0 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x55f825b34760 <col:7> 'const uint16_t':'const unsigned short' lvalue ._sport 0x55f825b29698
|   |     `-DeclRefExpr 0x55f825b34740 <col:7> 'const IPFlowID' lvalue ParmVar 0x55f825b33da8 '' 'const IPFlowID &'
|   |-BinaryOperator 0x55f825b348b0 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55f825b34868 <col:7> 'uint16_t':'unsigned short' lvalue ->_dport 0x55f825b296f8
|   | | `-CXXThisExpr 0x55f825b34858 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x55f825b34898 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x55f825b34828 <col:7> 'const uint16_t':'const unsigned short' lvalue ._dport 0x55f825b296f8
|   |     `-DeclRefExpr 0x55f825b34808 <col:7> 'const IPFlowID' lvalue ParmVar 0x55f825b33da8 '' 'const IPFlowID &'
|   `-ReturnStmt 0x55f825b348f8 <col:7>
|     `-UnaryOperator 0x55f825b348e0 <col:7> 'IPFlowID' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f825b348d0 <col:7> 'IPFlowID *' this
`-CXXMethodDecl 0x55f825b33e18 <col:7> col:7 implicit operator= 'IPFlowID &(IPFlowID &&)' inline default trivial noexcept-unevaluated 0x55f825b33e18
  `-ParmVarDecl 0x55f825b33f28 <col:7> col:7 'IPFlowID &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  NonVirtualBaseLLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825b32760 prev 0x55f825b2f330 <../elements/ip/iprwmapping.hh:16:1, line:65:1> line:16:7 referenced class IPRewriterEntry definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825b32858 <col:1, col:7> col:7 implicit referenced class IPRewriterEntry
|-AccessSpecDecl 0x55f825b328e8 <col:25, col:31> col:25 public
|-TypedefDecl 0x55f825b32920 <line:18:5, col:22> col:22 referenced key_type 'IPFlowID'
| `-RecordType 0x55f825b274c0 'IPFlowID'
|   `-CXXRecord 0x55f825b27430 'IPFlowID'
|-TypedefDecl 0x55f825b32988 <line:19:5, col:29> col:29 referenced key_const_reference 'const IPFlowID &'
| `-LValueReferenceType 0x55f825b29950 'const IPFlowID &'
|   `-QualType 0x55f825b274c1 'const IPFlowID' const
|     `-RecordType 0x55f825b274c0 'IPFlowID'
|       `-CXXRecord 0x55f825b27430 'IPFlowID'
|-CXXConstructorDecl 0x55f825b32a40 <line:21:5, line:22:5> line:21:5 IPRewriterEntry 'void ()'
| |-CXXCtorInitializer Field 0x55f825b334a0 '_flowid' 'IPFlowID'
| | `-CXXConstructExpr 0x55f825b337a8 <col:5> 'IPFlowID' 'void ()'
| `-CompoundStmt 0x55f825b33800 <col:23, line:22:5>
|-CXXMethodDecl 0x55f825b32d08 <line:24:5, line:30:5> line:24:10 initialize 'void (const IPFlowID &, uint32_t, bool)'
| |-ParmVarDecl 0x55f825b32af8 <col:21, col:37> col:37 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55f825b32b70 <col:45, col:54> col:54 used output 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f825b32be8 <col:62, col:67> col:67 used direction 'bool'
| `-CompoundStmt 0x55f825b34bc8 <col:78, line:30:5>
|   |-ParenExpr 0x55f825b33c20 <line:25:2, col:164> 'void'
|   | `-ConditionalOperator 0x55f825b33bf0 <col:3, col:163> 'void'
|   |   |-CXXStaticCastExpr 0x55f825b338b0 <col:3, col:41> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825b33880 <col:23, col:33> 'bool' '<='
|   |   |   |-ImplicitCastExpr 0x55f825b33850 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x55f825b33810 <col:23> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825b32b70 'output' 'uint32_t':'unsigned int'
|   |   |   `-ImplicitCastExpr 0x55f825b33868 <col:33> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x55f825b33830 <col:33> 'int' 16777215
|   |   |-CXXFunctionalCastExpr 0x55f825b33910 <col:45, col:52> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825b338f0 <col:51> 'int' 0
|   |   `-CallExpr 0x55f825b33b50 <col:56, col:163> 'void'
|   |     |-ImplicitCastExpr 0x55f825b33b38 <col:56> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825b33b18 <col:56> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825b33b90 <col:71> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825b33980 <col:71> 'const char [19]' lvalue "output <= 0xFFFFFF"
|   |     |-ImplicitCastExpr 0x55f825b33ba8 <col:93> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825b339b0 <col:93> 'const char [30]' lvalue "../elements/ip/iprwmapping.hh"
|   |     |-ImplicitCastExpr 0x55f825b33bc0 <col:126> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825b339e8 <col:126> 'int' 25
|   |     `-ImplicitCastExpr 0x55f825b33bd8 <col:130, col:144> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825b33b00 <col:130, col:144> 'const char [67]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825b33ae8 <col:144> 'const char [67]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825b33a88 <col:144> 'const char [67]' lvalue "void IPRewriterEntry::initialize(const IPFlowID &, uint32_t, bool)"
|   |-CXXOperatorCallExpr 0x55f825b349b0 <line:26:2, col:12> 'IPFlowID' lvalue
|   | |-ImplicitCastExpr 0x55f825b34998 <col:10> 'IPFlowID &(*)(const IPFlowID &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55f825b343e8 <col:10> 'IPFlowID &(const IPFlowID &) noexcept' lvalue CXXMethod 0x55f825b33ca0 'operator=' 'IPFlowID &(const IPFlowID &) noexcept'
|   | |-MemberExpr 0x55f825b33c50 <col:2> 'IPFlowID' lvalue ->_flowid 0x55f825b334a0
|   | | `-CXXThisExpr 0x55f825b33c40 <col:2> 'IPRewriterEntry *' implicit this
|   | `-DeclRefExpr 0x55f825b33c80 <col:12> 'const IPFlowID' lvalue ParmVar 0x55f825b32af8 'flowid' 'const IPFlowID &'
|   |-BinaryOperator 0x55f825b34a60 <line:27:2, col:12> 'uint32_t':'unsigned int' lvalue bitfield '='
|   | |-MemberExpr 0x55f825b349f8 <col:2> 'uint32_t':'unsigned int' lvalue bitfield ->_output 0x55f825b33540
|   | | `-CXXThisExpr 0x55f825b349e8 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x55f825b34a48 <col:12> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f825b34a28 <col:12> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825b32b70 'output' 'uint32_t':'unsigned int'
|   |-BinaryOperator 0x55f825b34b10 <line:28:2, col:15> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55f825b34a90 <col:2> 'uint8_t':'unsigned char' lvalue ->_direction 0x55f825b335a0
|   | | `-CXXThisExpr 0x55f825b34a80 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x55f825b34af8 <col:15> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x55f825b34ae0 <col:15> 'bool' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f825b34ac0 <col:15> 'bool' lvalue ParmVar 0x55f825b32be8 'direction' 'bool'
|   `-BinaryOperator 0x55f825b34ba8 <line:29:2, col:14> 'IPRewriterEntry *' lvalue '='
|     |-MemberExpr 0x55f825b34b40 <col:2> 'IPRewriterEntry *' lvalue ->_hashnext 0x55f825b33600
|     | `-CXXThisExpr 0x55f825b34b30 <col:2> 'IPRewriterEntry *' implicit this
|     `-ImplicitCastExpr 0x55f825b34b90 <col:14> 'IPRewriterEntry *' <NullToPointer>
|       `-IntegerLiteral 0x55f825b34b70 <col:14> 'int' 0
|-CXXMethodDecl 0x55f825b32e38 <line:32:5, line:34:5> line:32:21 flowid 'const IPFlowID &() const'
| `-CompoundStmt 0x55f825b34c50 <col:36, line:34:5>
|   `-ReturnStmt 0x55f825b34c40 <line:33:2, col:9>
|     `-MemberExpr 0x55f825b34c10 <col:9> 'const IPFlowID' lvalue ->_flowid 0x55f825b334a0
|       `-CXXThisExpr 0x55f825b34c00 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55f825b32ef8 <line:35:5, col:40> col:21 rewritten_flowid 'IPFlowID () const' inline
|-CXXMethodDecl 0x55f825b32fb8 <line:37:5, line:39:5> line:37:10 direction 'bool () const'
| `-CompoundStmt 0x55f825b34ce8 <col:28, line:39:5>
|   `-ReturnStmt 0x55f825b34cd8 <line:38:2, col:9>
|     `-ImplicitCastExpr 0x55f825b34cc0 <col:9> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55f825b34ca8 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55f825b34c78 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x55f825b335a0
|           `-CXXThisExpr 0x55f825b34c68 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55f825b33080 <line:41:5, line:43:5> line:41:9 output 'int () const'
| `-CompoundStmt 0x55f825b34d80 <col:24, line:43:5>
|   `-ReturnStmt 0x55f825b34d70 <line:42:2, col:9>
|     `-ImplicitCastExpr 0x55f825b34d58 <col:9> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55f825b34d40 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x55f825b34d10 <col:9> 'const uint32_t':'const unsigned int' lvalue bitfield ->_output 0x55f825b33540
|           `-CXXThisExpr 0x55f825b34d00 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55f825b33198 <line:45:5, line:47:5> line:45:21 flow 'IPRewriterFlow *()'
| `-CompoundStmt 0x55f825b34e88 <col:28, line:47:5>
|   `-ReturnStmt 0x55f825b34e78 <line:46:2, col:61>
|     `-CXXReinterpretCastExpr 0x55f825b34e48 <col:9, col:61> 'IPRewriterFlow *' reinterpret_cast<class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x55f825b34e18 <col:44, col:51> 'IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x55f825b34d98 <col:44> 'IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x55f825b34e00 <col:51> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55f825b34de8 <col:51> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x55f825b34db8 <col:51> 'uint8_t':'unsigned char' lvalue ->_direction 0x55f825b335a0
|               `-CXXThisExpr 0x55f825b34da8 <col:51> 'IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55f825b332b8 <line:48:5, line:50:5> line:48:27 flow 'const IPRewriterFlow *() const'
| `-CompoundStmt 0x55f825b34f90 <col:40, line:50:5>
|   `-ReturnStmt 0x55f825b34f80 <line:49:2, col:67>
|     `-CXXReinterpretCastExpr 0x55f825b34f50 <col:9, col:67> 'const IPRewriterFlow *' reinterpret_cast<const class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x55f825b34f20 <col:50, col:57> 'const IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x55f825b34ea0 <col:50> 'const IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x55f825b34f08 <col:57> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55f825b34ef0 <col:57> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x55f825b34ec0 <col:57> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x55f825b335a0
|               `-CXXThisExpr 0x55f825b34eb0 <col:57> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55f825b333c8 <line:52:5, line:54:5> line:52:25 used hashkey 'IPRewriterEntry::key_const_reference () const'
| `-CompoundStmt 0x55f825b34ff8 <col:41, line:54:5>
|   `-ReturnStmt 0x55f825b34fe8 <line:53:2, col:9>
|     `-MemberExpr 0x55f825b34fb8 <col:9> 'const IPFlowID' lvalue ->_flowid 0x55f825b334a0
|       `-CXXThisExpr 0x55f825b34fa8 <col:9> 'const IPRewriterEntry *' implicit this
|-AccessSpecDecl 0x55f825b33468 <line:56:3, col:10> col:3 private
|-FieldDecl 0x55f825b334a0 <line:58:5, col:14> col:14 referenced _flowid 'IPFlowID'
|-FieldDecl 0x55f825b33540 <line:59:5, col:24> col:14 referenced _output 'uint32_t':'unsigned int'
| `-ConstantExpr 0x55f825b33520 <col:24> 'int' Int: 24
|   `-IntegerLiteral 0x55f825b334f0 <col:24> 'int' 24
|-FieldDecl 0x55f825b335a0 <line:60:5, col:13> col:13 referenced _direction 'uint8_t':'unsigned char'
|-FieldDecl 0x55f825b33600 <line:61:5, col:22> col:22 referenced _hashnext 'IPRewriterEntry *'
|-FriendDecl 0x55f825b33750 <line:63:5, col:55> col:12 'class HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|-CXXConstructorDecl 0x55f825b8d678 <line:16:7> col:7 implicit constexpr IPRewriterEntry 'void (const IPRewriterEntry &)' inline default trivial noexcept-unevaluated 0x55f825b8d678
| `-ParmVarDecl 0x55f825b8d788 <col:7> col:7 'const IPRewriterEntry &'
|-CXXConstructorDecl 0x55f825b8d828 <col:7> col:7 implicit constexpr IPRewriterEntry 'void (IPRewriterEntry &&)' inline default trivial noexcept-unevaluated 0x55f825b8d828
| `-ParmVarDecl 0x55f825b8d938 <col:7> col:7 'IPRewriterEntry &&'
`-CXXDestructorDecl 0x55f825b8db28 <col:7> col:7 implicit ~IPRewriterEntry 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  NonVirtualBaseLLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:24 IsSigned:0 StorageSize:24 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825a94178 prev 0x55f825a8b8e8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55f825a94270 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55f825a94300 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55f825a94378 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55f825a94438 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55f825a94500 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55f825a94678 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55f825a945b0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55f825a94720 <col:24>
| `-OptimizeNoneAttr 0x55f825a94778 <col:34>
|-CXXMethodDecl 0x55f825a947c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55f825a94a78 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55f825a94870 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55f825a948e8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55f825a94968 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55f825a94b40 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55f825a94b78 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55f825a94be0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55f825a94c68 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55f825a94f88 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55f825a94d20 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55f825a94d98 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55f825a94e10 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55f825a94e90 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55f825a950a0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55f825a03648 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55f825a03648
| `-ParmVarDecl 0x55f825a03758 <col:11> col:11 'const Element::Port &'
`-CXXConstructorDecl 0x55f825a037f8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55f825a037f8
  `-ParmVarDecl 0x55f825a03908 <col:11> col:11 'Element::Port &&'

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825a87130 prev 0x55f825a86eb0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f825a87228 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55f825a872b8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55f825a87318 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x55f825a87408 <line:32:5, col:22> col:13 ~Element 'void ()' virtual noexcept-unevaluated 0x55f825a87408
|-VarDecl 0x55f825a87508 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55f825a876d8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55f825a87588 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55f825a87600 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55f825a87868 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55f825a877a0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55f825a87910 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55f825a87a48 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55f825a87980 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55f825a87be8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55f825a87b28 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55f825a87d88 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55f825a87cc8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55f825a87e30 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55f825a87f30 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55f825a88010 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a87f10 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55f825a87ef0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55f825a87fc0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55f825a88028 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a87fa0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55f825a87f80 <col:44> 'int' 2
|-CXXMethodDecl 0x55f825a88170 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55f825a88058 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55f825a880d8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55f825a882c8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55f825a88238 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55f825a88508 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55f825a88388 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55f825a88400 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55f825a885b8 <col:20>
| `-OptimizeNoneAttr 0x55f825a88610 <col:30>
|-CXXMethodDecl 0x55f825a88718 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55f825a88650 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55f825a887c0 <col:20>
| `-OptimizeNoneAttr 0x55f825a88818 <col:30>
|-CXXMethodDecl 0x55f825a88868 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55f825a88930 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55f825a88a48 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55f825a88b10 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55f825a88b98 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55f825a88c20 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55f825a88ca8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55f825a88d38 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55f825a88df8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55f825a88e80 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x55f825a88f08 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55f825a88f90 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55f825a89018 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55f825a890a0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55f825a89130 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55f825a891f0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55f825a89280 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55f825a893d0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55f825a89338 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55f825a89560 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55f825a89490 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55f825a89800 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55f825a89618 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55f825a89698 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55f825a89718 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55f825a898b8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55f825a899c0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f825a89c50 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a899a0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55f825a89980 <col:33> 'int' 0
| |-EnumConstantDecl 0x55f825a89a50 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f825a89c68 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a89a30 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55f825a89a10 <col:32> 'int' 20
| |-EnumConstantDecl 0x55f825a89ae0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f825a89c80 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a89ac0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55f825a89aa0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55f825a89b70 <line:83:9, col:35> col:9 referenced CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f825a89c98 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a89b50 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55f825a89b30 <col:35> 'int' 100
| `-EnumConstantDecl 0x55f825a89c00 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55f825a89cb0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a89be0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55f825a89bc0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55f825a89cf0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55f825a8a130 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f825a89fa0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55f825a8a018 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f825a8a200 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55f825a8a380 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55f825a8a2b0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f825a8a588 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f825a8a438 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55f825a8a4b0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f825a8a688 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55f825a8a728 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55f825a8a7f0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f825a8a880 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55f825a8aab0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a8a860 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55f825a8a840 <col:36> 'int' EnumConstant 0x55f825a8a7f0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f825a8a8d0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f825a8a920 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f825a8a970 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f825a8a9c0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55f825a8aa10 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55f825a8aa60 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55f825a8ab98 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55f825a8aad8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55f825a8ac60 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55f825a8ad20 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55f825a8ade0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55f825a8aea0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55f825a8afb8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55f825a8b080 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55f825a8b200 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55f825a8b130 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55f825a8b328 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55f825a8b528 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55f825a8b3d8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55f825a8b458 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55f825a97e88 <col:54, line:127:5>
|   |-ParenExpr 0x55f825a97d38 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55f825a97d08 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a979f8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55f825a979d0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55f825a979b8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55f825a979a0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55f825a97970 <col:31> 'Router *' lvalue ->_router 0x55f825a95850
|   |   |         `-CXXThisExpr 0x55f825a97960 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55f825a97a58 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a97a38 <col:48> 'int' 0
|   |   `-CallExpr 0x55f825a97c68 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55f825a97c50 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a97c30 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a97ca8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a97ac8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55f825a97cc0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a97ae8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55f825a97cd8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a97b20 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55f825a97cf0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a97c18 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a97c00 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a97bb8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55f825a97dd0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55f825a97d68 <col:9> 'Router *' lvalue ->_router 0x55f825a95850
|   | | `-CXXThisExpr 0x55f825a97d58 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55f825a97db8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f825a97d98 <col:19> 'Router *' lvalue ParmVar 0x55f825a8b3d8 'r' 'Router *'
|   `-BinaryOperator 0x55f825a97e68 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55f825a97e00 <col:9> 'int' lvalue ->_eindex 0x55f825a958b8
|     | `-CXXThisExpr 0x55f825a97df0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55f825a97e50 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55f825a97e30 <col:19> 'int' lvalue ParmVar 0x55f825a8b458 'eindex' 'int'
|-CXXMethodDecl 0x55f825a8b6b0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55f825a8b5e8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55f825a8b780 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55f825a8b848 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55f825a8b8e8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55f825a8bb38 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55f825a8b9b0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55f825a8ba30 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55f825a8bbe8 <col:20>
| `-OptimizeNoneAttr 0x55f825a8bc40 <col:30>
|-CXXMethodDecl 0x55f825a8bd48 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55f825a8bc80 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55f825a8bdf0 <col:20>
| `-OptimizeNoneAttr 0x55f825a8be48 <col:30>
|-CXXMethodDecl 0x55f825a8bf18 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55f825a8be88 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55f825a8bfc0 <col:20>
| `-OptimizeNoneAttr 0x55f825a8c018 <col:30>
|-CXXMethodDecl 0x55f825a8c1a8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55f825a8c050 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55f825a8c0d0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55f825a8c338 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55f825a8c270 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55f825a8c488 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55f825a8c3f8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55f825a8c5d8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55f825a8c548 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55f825a8c728 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55f825a8c698 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55f825a8c9e8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55f825a8c7e0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55f825a8c860 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55f825a8c908 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55f825a8cb20 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55f825a8cbe0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55f825a8ceb0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f825a8cd60 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55f825a8cdd8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55f825a8cfd8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55f825a8d1b0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55f825a8d090 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55f825a8d110 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55f825a8d398 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55f825a8d278 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55f825a8d2f8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55f825a8d708 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55f825a8d458 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55f825a8d4d0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f825a8d550 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55f825a97470 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f825a97450 <col:106> 'int' 0
| `-ParmVarDecl 0x55f825a8d5c8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f825a974a8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f825a97488 <col:126> 'int' 0
|-CXXMethodDecl 0x55f825a8da88 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f825a8d7d8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55f825a8d850 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f825a8d8d0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55f825a8d948 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f825a974e0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f825a974c0 <col:114> 'int' 0
|-CXXMethodDecl 0x55f825a8de18 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f825a8db60 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55f825a8dbd8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55f825a8dc58 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55f825a974f8 <col:96> 'int' 0
| `-ParmVarDecl 0x55f825a8dcd0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f825a97538 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f825a97518 <col:116> 'int' 0
|-CXXMethodDecl 0x55f825a8e198 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55f825a8dee8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55f825a8df60 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f825a8dfe0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55f825a97570 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f825a97550 <col:109> 'int' 0
| `-ParmVarDecl 0x55f825a8e058 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f825a975a8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f825a97588 <col:129> 'int' 0
|-CXXMethodDecl 0x55f825a8e518 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f825a8e268 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55f825a8e2e0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f825a8e360 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55f825a8e3d8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f825a975e0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f825a975c0 <col:117> 'int' 0
|-CXXMethodDecl 0x55f825a8e8a8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55f825a8e5f0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a8e668 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55f825a8e6e8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55f825a975f8 <col:99> 'int' 0
| `-ParmVarDecl 0x55f825a8e760 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55f825a97638 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55f825a97618 <col:119> 'int' 0
|-CXXMethodDecl 0x55f825a8ecc8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55f825a8e978 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55f825a8e9f8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55f825a8ea70 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f825a8eaf0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55f825a97670 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55f825a97650 <col:108> 'int' 0
| `-ParmVarDecl 0x55f825a8eb70 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55f825a976a8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55f825a97688 <col:141> 'int' 0
|-CXXMethodDecl 0x55f825a8f0e8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55f825a8eda0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55f825a8ee20 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55f825a8ee98 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f825a8ef18 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55f825a8ef98 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55f825a976c0 <col:121> 'int' 0
|-CXXMethodDecl 0x55f825a8f518 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55f825a8f1c8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55f825a8f248 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55f825a8f2c0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55f825a8f340 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55f825a976e0 <col:98> 'int' 0
| `-ParmVarDecl 0x55f825a8f3c0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55f825a97700 <col:123> 'int' 0
|-CXXMethodDecl 0x55f825a8f7e0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55f825a8f5f0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55f825a8f670 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55f825a8f6f0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55f825a97720 <col:80> 'int' 0
|-EnumDecl 0x55f825a8f898 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55f825a8f9a0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f825a8fc30 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a8f980 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55f825a8f960 <col:42> 'int' 1
| |-EnumConstantDecl 0x55f825a8fa30 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f825a8fc48 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a8fa10 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55f825a8f9f0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55f825a8fac0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f825a8fc60 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a8faa0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55f825a8fa80 <col:44> 'int' 4
| |-EnumConstantDecl 0x55f825a8fb50 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55f825a8fc78 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a8fb30 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55f825a8fb10 <col:36> 'int' 7
| `-EnumConstantDecl 0x55f825a8fbe0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55f825a8fc90 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a8fbc0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55f825a8fba0 <col:34> 'int' 6
|-CXXMethodDecl 0x55f825a8ff48 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55f825a8fcb8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55f825a8fd58 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55f825a8fdd8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55f825a8fe50 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55f825a977d8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f825a977c0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f825a977a8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f825a97788 <col:98, col:105> 'String' (CXXTemporary 0x55f825a97788)
|           `-CXXTemporaryObjectExpr 0x55f825a97750 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55f825a901e8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55f825a90018 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55f825a90090 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55f825a90108 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55f825a97888 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55f825a97870 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55f825a97858 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55f825a97838 <col:94, col:101> 'String' (CXXTemporary 0x55f825a97838)
| |         `-CXXTemporaryObjectExpr 0x55f825a97800 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55f825a98070 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55f825a97fe8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55f825a97fb8 <col:9> '<bound member function type>' ->add_task_handlers 0x55f825a8ff48
|     | `-CXXThisExpr 0x55f825a97fa8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55f825a98028 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f825a97f28 <col:27> 'Task *' lvalue ParmVar 0x55f825a90018 'task' 'Task *'
|     |-ImplicitCastExpr 0x55f825a98040 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f825a97f48 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55f825a90090 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55f825a98058 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55f825a97f68 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55f825a8fbe0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55f825a97f88 <col:62> 'const String' lvalue ParmVar 0x55f825a90108 'prefix' 'const String &'
|-CXXMethodDecl 0x55f825a903f8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55f825a902b0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55f825a90328 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55f825a97938 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55f825a97920 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55f825a97908 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55f825a978e8 <col:70, col:77> 'String' (CXXTemporary 0x55f825a978e8)
| |         `-CXXTemporaryObjectExpr 0x55f825a978b0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55f825a98248 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55f825a981c0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55f825a98190 <col:9> '<bound member function type>' ->add_task_handlers 0x55f825a8ff48
|     | `-CXXThisExpr 0x55f825a98180 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55f825a98200 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f825a98100 <col:27> 'Task *' lvalue ParmVar 0x55f825a902b0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55f825a98218 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55f825a98120 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55f825a98230 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55f825a98140 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55f825a8fbe0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55f825a98160 <col:57> 'const String' lvalue ParmVar 0x55f825a90328 'prefix' 'const String &'
|-CXXMethodDecl 0x55f825a906d8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55f825a904c0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a90540 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f825a905b8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55f825a90988 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55f825a907a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a90828 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f825a908a8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55f825a90cc8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55f825a90a58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a90b30 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f825a90ba8 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55f825a90f78 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55f825a90d98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a90e18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f825a90e98 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55f825a91228 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55f825a91048 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a910c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f825a91148 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55f825a914d8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55f825a912f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a91378 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f825a913f0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55f825a91788 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55f825a915a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a91628 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f825a916a8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55f825a91a38 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55f825a91858 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a918d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f825a91958 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55f825a91d18 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55f825a91b08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a91b88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f825a91c30 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55f825a91ff8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55f825a91de8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a91e68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f825a91f10 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55f825a92260 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55f825a920c8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55f825a92148 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55f825a921c0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55f825a92508 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55f825a92330 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55f825a923b0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55f825a92428 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55f825a927b8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55f825a925d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a92658 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f825a926d8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55f825a92a68 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55f825a92888 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a92908 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f825a92980 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55f825a92d18 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55f825a92b38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a92bb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f825a92c30 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55f825a92fe8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55f825a92de8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a92e68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55f825a92f08 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55f825a93318 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55f825a930b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55f825a93138 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55f825a931b0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55f825a93228 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f825a97950 <col:93> 'bool' false
|-CXXMethodDecl 0x55f825a93500 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f825a933e8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55f825a93468 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55f825a936d8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f825a935c0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55f825a93640 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55f825a939b8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f825a93798 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55f825a93810 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55f825a93890 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55f825a93908 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55f825a93ca8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f825a93a88 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55f825a93b00 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55f825a93b80 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55f825a93bf8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55f825a93ee0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55f825a93d80 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55f825a93e00 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55f825a940c8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55f825a93fa8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55f825a94028 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55f825a94178 prev 0x55f825a8b8e8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f825a94270 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55f825a94300 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55f825a94378 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55f825a94438 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55f825a94500 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55f825a94678 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55f825a945b0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55f825a94720 <col:24>
| | `-OptimizeNoneAttr 0x55f825a94778 <col:34>
| |-CXXMethodDecl 0x55f825a947c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55f825a94a78 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55f825a94870 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55f825a948e8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55f825a94968 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55f825a94b40 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55f825a94b78 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55f825a94be0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55f825a94c68 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55f825a94f88 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55f825a94d20 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55f825a94d98 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55f825a94e10 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55f825a94e90 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55f825a950a0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55f825a03648 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55f825a03648
| | `-ParmVarDecl 0x55f825a03758 <col:11> col:11 'const Element::Port &'
| `-CXXConstructorDecl 0x55f825a037f8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55f825a037f8
|   `-ParmVarDecl 0x55f825a03908 <col:11> col:11 'Element::Port &&'
|-CXXMethodDecl 0x55f825a95118 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55f825a951b8 <col:38> "" ""
|-CXXMethodDecl 0x55f825a95248 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55f825a952e8 <col:44> "" ""
|-AccessSpecDecl 0x55f825a95358 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55f825a95380 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55f825a95480 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55f825a954d0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a95460 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55f825a95440 <col:27> 'int' 4
|-FieldDecl 0x55f825a95588 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55f825a95738 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55f825a957f0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55f825a95850 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55f825a958b8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55f825a95a08 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55f825a95948 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55f825a95bb8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55f825a95ac8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55f825a95d98 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55f825a95c78 <col:20> col:23 'int'
| `-ParmVarDecl 0x55f825a95cf8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55f825a96040 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55f825a95e60 <col:23> col:26 'int'
| |-ParmVarDecl 0x55f825a95ee0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55f825a95f58 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55f825a960f8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55f825a961c0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55f825a96210 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55f825a96260 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55f825a96440 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55f825a962f0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55f825a96368 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f825a966e8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55f825a96508 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55f825a96588 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55f825a96600 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55f825a96908 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55f825a967b8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55f825a96838 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55f825a96c40 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55f825a969c8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55f825a96a48 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55f825a96ac0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55f825a96b40 <col:57> col:60 'int'
|-CXXMethodDecl 0x55f825a96e28 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f825a96d10 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55f825a96d90 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55f825a96f78 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55f825a96ee8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55f825a972f8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55f825a97038 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55f825a970b8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55f825a97130 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55f825a971b0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55f825a97410 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashContainer_adapter<class IPRewriterEntry> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |   class IPRewriterEntry ** buckets
         8 |   uint32_t nbuckets
        12 |   uint32_t first_bucket
        16 |   size_t size
        24 |   struct libdivide_u32_t bucket_divider
        24 |     uint32_t magic
        28 |     uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
         0 |     class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |     class IPRewriterEntry ** buckets
         8 |     uint32_t nbuckets
        12 |     uint32_t first_bucket
        16 |     size_t size
        24 |     struct libdivide_u32_t bucket_divider
        24 |       uint32_t magic
        28 |       uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<56> >
         0 |   vector_memory<class sized_array_memory<56> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterInput>
         0 |   class vector_memory<class sized_array_memory<56> > vm_
         0 |     vector_memory<class sized_array_memory<56> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterBase
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |     class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |       class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |       class IPRewriterEntry ** buckets
       120 |       uint32_t nbuckets
       124 |       uint32_t first_bucket
       128 |       size_t size
       136 |       struct libdivide_u32_t bucket_divider
       136 |         uint32_t magic
       140 |         uint8_t more
       144 |   class Vector<class IPRewriterInput> _input_specs
       144 |     class vector_memory<class sized_array_memory<56> > vm_
       144 |       vector_memory<class sized_array_memory<56> >::type * l_
       152 |       vector_memory::size_type n_
       156 |       vector_memory::size_type capacity_
       160 |   class IPRewriterHeap * _heap
       168 |   uint32_t [2] _timeouts
       176 |   uint32_t _gc_interval_sec
       184 |   class Timer _gc_timer
       184 |     int _schedpos1
       192 |     class Timestamp _expiry_s
       192 |       union Timestamp::rep_t _t
       192 |         int64_t x
       200 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |       TimerCallback callback
       208 |     void * _thunk
       216 |     class Element * _owner
       224 |     class RouterThread * _thread
           | [sizeof=232, dsize=232, align=8,
           |  nvsize=232, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825b30dd8 <../dummy_inc/click/hashcontainer.hh:13:1, col:29> line:33:7 class HashContainer_adapter definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IPRewriterEntry'
|-CXXRecordDecl 0x55f825b643b8 prev 0x55f825b30dd8 <col:1, col:7> col:7 implicit class HashContainer_adapter
|-AccessSpecDecl 0x55f825b64448 <col:31, col:37> col:31 public
|-TypedefDecl 0x55f825b64540 <line:34:5, col:34> col:34 referenced key_type 'typename IPRewriterEntry::key_type':'IPFlowID'
| `-ElaboratedType 0x55f825b644f0 'typename IPRewriterEntry::key_type' sugar
|   `-TypedefType 0x55f825b644d0 'IPRewriterEntry::key_type' sugar
|     |-Typedef 0x55f825b32920 'key_type'
|     `-RecordType 0x55f825b274c0 'IPFlowID'
|       `-CXXRecord 0x55f825b27430 'IPFlowID'
|-TypedefDecl 0x55f825b64610 <line:35:5, col:45> col:45 key_const_reference 'typename IPRewriterEntry::key_const_reference':'const IPFlowID &'
| `-ElaboratedType 0x55f825b645c0 'typename IPRewriterEntry::key_const_reference' sugar
|   `-TypedefType 0x55f825b33360 'IPRewriterEntry::key_const_reference' sugar
|     |-Typedef 0x55f825b32988 'key_const_reference'
|     `-LValueReferenceType 0x55f825b29950 'const IPFlowID &'
|       `-QualType 0x55f825b274c1 'const IPFlowID' const
|         `-RecordType 0x55f825b274c0 'IPFlowID'
|           `-CXXRecord 0x55f825b27430 'IPFlowID'
|-CXXMethodDecl 0x55f825b64800 <line:36:5, line:38:5> line:36:16 hashnext 'IPRewriterEntry *&(IPRewriterEntry *)' static
| `-ParmVarDecl 0x55f825b64708 <col:25, col:28> col:28 e 'IPRewriterEntry *'
|-CXXMethodDecl 0x55f825b64a08 <line:39:5, line:41:5> line:39:32 hashkey 'HashContainer_adapter<IPRewriterEntry>::key_const_reference (const IPRewriterEntry *)' static
| `-ParmVarDecl 0x55f825b64918 <col:40, col:49> col:49 e 'const IPRewriterEntry *'
|-CXXMethodDecl 0x55f825b64c68 <line:42:5, line:44:5> line:42:17 hashkeyeq 'bool (const HashContainer_adapter<IPRewriterEntry>::key_type &, const HashContainer_adapter<IPRewriterEntry>::key_type &)' static
| |-ParmVarDecl 0x55f825b64b18 <col:27, col:43> col:43 a 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
| `-ParmVarDecl 0x55f825b64b90 <col:46, col:62> col:62 b 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
|-CXXConstructorDecl 0x55f825b68ce8 <line:33:7> col:7 implicit constexpr HashContainer_adapter 'void (const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x55f825b68ce8
| `-ParmVarDecl 0x55f825b68df8 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
|-CXXConstructorDecl 0x55f825b68e98 <col:7> col:7 implicit constexpr HashContainer_adapter 'void (HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x55f825b68e98
| `-ParmVarDecl 0x55f825b68fa8 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'
|-CXXDestructorDecl 0x55f825b691b8 <col:7> col:7 implicit ~HashContainer_adapter 'void ()' inline default trivial noexcept-unevaluated 0x55f825b691b8
|-CXXMethodDecl 0x55f825b692f8 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x55f825b692f8
| `-ParmVarDecl 0x55f825b69408 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
`-CXXMethodDecl 0x55f825b69478 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x55f825b69478
  `-ParmVarDecl 0x55f825b69588 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_adapter = type { i8 }
  NonVirtualBaseLLVMType:%class.HashContainer_adapter = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825abd3e8 <../dummy_inc/click/libdivide.h:95:1, line:98:1> line:95:8 referenced struct libdivide_u32_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825abd508 <col:1, col:8> col:8 implicit struct libdivide_u32_t
|-FieldDecl 0x55f825abd5a8 <line:96:5, col:14> col:14 referenced magic 'uint32_t':'unsigned int'
|-FieldDecl 0x55f825abd608 <line:97:5, col:13> col:13 referenced more 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55f825ac06f0 <line:95:8> col:8 implicit used libdivide_u32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f825ac0b28 <col:8>
|-CXXConstructorDecl 0x55f825ac07f8 <col:8> col:8 implicit constexpr libdivide_u32_t 'void (const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55f825ac07f8
| `-ParmVarDecl 0x55f825ac0908 <col:8> col:8 'const libdivide_u32_t &'
|-CXXConstructorDecl 0x55f825ac09a8 <col:8> col:8 implicit used constexpr libdivide_u32_t 'void (libdivide_u32_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825ac0ab8 <col:8> col:8 used 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55f825abd5a8 'magic' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f825ac29d0 <col:8> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55f825ac29a0 <col:8> 'uint32_t':'unsigned int' xvalue .magic 0x55f825abd5a8
| |     `-CXXStaticCastExpr 0x55f825ac2970 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55f825ac2940 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55f825ac0ab8 '' 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55f825abd608 'more' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x55f825ac2aa0 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x55f825ac2a70 <col:8> 'uint8_t':'unsigned char' xvalue .more 0x55f825abd608
| |     `-CXXStaticCastExpr 0x55f825ac2a40 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55f825ac2a10 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55f825ac0ab8 '' 'libdivide_u32_t &&'
| `-CompoundStmt 0x55f825ac2af0 <col:8>
|-CXXDestructorDecl 0x55f825ac2e68 <col:8> col:8 implicit referenced ~libdivide_u32_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f825b69628 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55f825b69628
| `-ParmVarDecl 0x55f825b69738 <col:8> col:8 'const libdivide_u32_t &'
`-CXXMethodDecl 0x55f825b697a8 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(libdivide_u32_t &&)' inline default trivial noexcept-unevaluated 0x55f825b697a8
  `-ParmVarDecl 0x55f825b698b8 <col:8> col:8 'libdivide_u32_t &&'

Layout: <CGRecordLayout
  LLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  NonVirtualBaseLLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825b68300 <../dummy_inc/click/hashcontainer.hh:19:1, line:29:1> line:20:7 class HashContainer_rep definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_mutable_fields
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55f825b68598 prev 0x55f825b68300 <col:1, col:7> col:7 implicit class HashContainer_rep
|-FieldDecl 0x55f825b68700 <line:21:5, col:9> col:9 buckets 'IPRewriterEntry **'
|-FieldDecl 0x55f825b68750 <line:22:5, col:14> col:14 nbuckets 'uint32_t':'unsigned int'
|-FieldDecl 0x55f825b687a0 <line:23:5, col:22> col:22 first_bucket 'uint32_t':'unsigned int' mutable
|-FieldDecl 0x55f825b687f0 <line:24:5, col:12> col:12 size 'size_t':'unsigned long'
|-FieldDecl 0x55f825b68840 <line:25:5, col:21> col:21 bucket_divider 'libdivide_u32_t'
|-FriendDecl 0x55f825b68998 <line:26:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55f825b68ae8 <line:27:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55f825b68c38 <line:28:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x55f825b69030 <line:20:7> col:7 implicit constexpr HashContainer_rep 'void (const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55f825b69030
| `-ParmVarDecl 0x55f825b69148 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x55f825b6aec0 <col:7> col:7 implicit constexpr operator= 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55f825b6aec0
  `-ParmVarDecl 0x55f825b6afc8 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  NonVirtualBaseLLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825b30f50 <../dummy_inc/click/hashcontainer.hh:81:1, line:297:1> line:82:7 class HashContainer definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55f825b64238 prev 0x55f825b30f50 <col:1, col:7> col:7 implicit class HashContainer
|-AccessSpecDecl 0x55f825b642c8 <col:23, col:29> col:23 public
|-TypedefDecl 0x55f825b64d90 <line:85:5, col:34> col:34 key_type 'typename HashContainer_adapter<IPRewriterEntry>::key_type':'IPFlowID'
| `-ElaboratedType 0x55f825b64d40 'typename HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|   `-TypedefType 0x55f825b64ac0 'HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|     |-Typedef 0x55f825b64540 'key_type'
|     `-ElaboratedType 0x55f825b644f0 'typename IPRewriterEntry::key_type' sugar
|       `-TypedefType 0x55f825b644d0 'IPRewriterEntry::key_type' sugar
|         |-Typedef 0x55f825b32920 'key_type'
|         `-RecordType 0x55f825b274c0 'IPFlowID'
|           `-CXXRecord 0x55f825b27430 'IPFlowID'
|-TypedefDecl 0x55f825b64e28 <line:90:5, col:15> col:15 value_type 'IPRewriterEntry':'IPRewriterEntry'
| `-SubstTemplateTypeParmType 0x55f825b64df0 'IPRewriterEntry' sugar
|   |-TemplateTypeParmType 0x55f825acaf50 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f825acaef8 'T'
|   `-RecordType 0x55f825b2f3c0 'IPRewriterEntry'
|     `-CXXRecord 0x55f825b32760 'IPRewriterEntry'
|-TypedefDecl 0x55f825b64e80 <line:93:5, col:20> col:20 referenced size_type 'size_t':'unsigned long'
| `-TypedefType 0x55f8255bfb40 'size_t' sugar
|   |-Typedef 0x55f825586b20 'size_t'
|   `-BuiltinType 0x55f825516430 'unsigned long'
|-TypedefDecl 0x55f825b64ed8 <line:96:5, col:22> col:22 referenced bucket_count_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55f82566fe50 'uint32_t' sugar
|   |-Typedef 0x55f82557f408 'uint32_t'
|   `-TypedefType 0x55f825558440 '__uint32_t' sugar
|     |-Typedef 0x55f825558038 '__uint32_t'
|     `-BuiltinType 0x55f825516410 'unsigned int'
|-EnumDecl 0x55f825b64f30 <line:98:5> col:5
| |-EnumConstantDecl 0x55f825b65060 <line:102:2, col:42> col:2 max_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
| | `-ConstantExpr 0x55f825b65040 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' Int: 4294967295
| |   `-CStyleCastExpr 0x55f825b65018 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' <NoOp>
| |     `-ImplicitCastExpr 0x55f825b65000 <col:41, col:42> 'HashContainer::bucket_count_type':'unsigned int' <IntegralCast> part_of_explicit_cast
| |       `-UnaryOperator 0x55f825acb5a0 <col:41, col:42> 'int' prefix '-'
| |         `-IntegerLiteral 0x55f825acb580 <col:42> 'int' 1
| `-EnumConstantDecl 0x55f825b650d0 <line:104:2, col:25> col:2 initial_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
|   `-ImplicitCastExpr 0x55f825b65120 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825b650b0 <col:25> 'int' Int: 63
|       `-IntegerLiteral 0x55f825acb658 <col:25> 'int' 63
|-CXXConstructorDecl 0x55f825b65170 <line:108:5, col:19> col:5 HashContainer 'void ()'
|-CXXConstructorDecl 0x55f825b652d8 <line:111:5, col:47> col:14 HashContainer 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55f825b65228 <col:28, col:46> col:46 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXDestructorDecl 0x55f825b653c0 <line:114:5, col:20> col:5 ~HashContainer 'void ()' noexcept-unevaluated 0x55f825b653c0
|-CXXMethodDecl 0x55f825b654b0 <line:118:5, line:120:5> line:118:22 size 'HashContainer::size_type () const' inline
|-CXXMethodDecl 0x55f825b65560 <line:123:5, line:125:5> line:123:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f825b65610 <line:128:5, line:130:5> line:128:30 bucket_count 'HashContainer::bucket_count_type () const' inline
|-CXXMethodDecl 0x55f825b657a8 <line:133:5, line:139:5> line:133:22 bucket_size 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55f825b656e0 <col:34, col:52> col:52 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55f825b659c8 <line:142:5, col:51> col:23 bucket 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| `-ParmVarDecl 0x55f825b658d8 <col:30, col:46> col:46 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55f825b65a80 <line:145:5, line:147:5> line:145:17 unbalanced 'bool () const' inline
|-TypedefDecl 0x55f825b65d10 <line:149:5, col:48> col:48 const_iterator 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55f825b65c70 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55f825b65c50 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55f825b65b50 'HashContainer_const_iterator'
|-TypedefDecl 0x55f825b65f40 <line:150:5, col:42> col:42 referenced iterator 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55f825b65ea0 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55f825b65e80 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55f825b65d88 'HashContainer_iterator'
|-CXXMethodDecl 0x55f825b66038 <line:155:5, col:27> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55f825b66188 <line:157:5, col:35> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55f825b66258 <line:161:5, col:25> col:21 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55f825b66328 <line:163:5, col:33> col:27 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55f825b664c8 <line:166:5, col:46> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (HashContainer::bucket_count_type)' inline
| `-ParmVarDecl 0x55f825b663d8 <col:27, col:45> col:45 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55f825b66678 <line:168:5, col:54> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55f825b66580 <col:33, col:51> col:51 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55f825b66838 <line:171:5, col:47> col:17 contains 'bool (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55f825b66740 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55f825b669f8 <line:173:5, col:49> col:22 count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55f825b66900 <col:28, col:44> col:44 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55f825b66bb8 <line:183:5, col:45> col:21 used find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55f825b66ac0 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55f825b66d78 <line:185:5, col:53> col:27 find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55f825b66c80 <col:32, col:48> col:48 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55f825b66ed0 <line:191:5, col:52> col:21 find_prefer 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55f825b66e40 <col:33, col:49> col:49 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55f825b670b8 <line:197:5, col:68> col:43 get 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| |-ParmVarDecl 0x55f825b66fc8 <col:47, col:63> col:63 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
| |-NoInlineAttr 0x55f825b67170 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825b671c8 <col:30> Inherited
|-CXXMethodDecl 0x55f825b673e8 <line:219:5, col:51> col:17 insert_at 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55f825b67258 <col:27, col:37> col:37 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| `-ParmVarDecl 0x55f825b672d0 <col:41, col:44> col:44 element 'IPRewriterEntry *'
|-CXXMethodDecl 0x55f825b676b8 <line:239:5, col:58> col:8 set 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *, bool)'
| |-ParmVarDecl 0x55f825b674b8 <col:12, col:22> col:22 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| |-ParmVarDecl 0x55f825b67530 <col:26, col:29> col:29 element 'IPRewriterEntry *'
| `-ParmVarDecl 0x55f825b67598 <col:38, col:53> col:43 balance 'bool'
|-CXXMethodDecl 0x55f825b67888 <line:249:5, col:57> col:43 set 'IPRewriterEntry *(IPRewriterEntry *)'
| |-ParmVarDecl 0x55f825b67790 <col:47, col:50> col:50 element 'IPRewriterEntry *'
| |-NoInlineAttr 0x55f825b67940 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825b67998 <col:30> Inherited
|-CXXMethodDecl 0x55f825b67ac8 <line:256:5, col:33> col:15 used erase 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &)' inline
| `-ParmVarDecl 0x55f825b679d0 <col:21, col:31> col:31 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
|-CXXMethodDecl 0x55f825b67c88 <line:262:5, col:40> col:15 erase 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55f825b67b90 <col:21, col:37> col:37 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55f825b67d40 <line:266:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x55f825b68008 <line:269:5, col:44> col:17 swap 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline
| `-ParmVarDecl 0x55f825b67f18 <col:22, col:43> col:43 x 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55f825b68150 <line:277:5, col:36> col:10 rehash 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55f825b680c0 <col:17, col:35> col:35 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55f825b68208 <line:282:5, line:285:5> line:282:17 balance 'void ()' inline
|-AccessSpecDecl 0x55f825b682b8 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55f825b6b050 <line:289:5, col:29> col:29 _rep 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x55f825b6b2a8 <line:291:5, col:46> col:5 HashContainer 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x55f825b6b198 <col:19, col:45> col:46 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55f825b6b648 <line:292:5, col:63> col:26 operator= 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x55f825b6b518 <col:36, col:62> col:63 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-FriendDecl 0x55f825b6b808 <line:294:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
`-FriendDecl 0x55f825b6b958 <line:295:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  NonVirtualBaseLLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825b6cf90 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<56>'
|-CXXRecordDecl 0x55f825b6d168 prev 0x55f825b6cf90 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f825b6d1f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f825b6d220 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825b6edf0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<56>::type':'char_array<56>'
| `-ElaboratedType 0x55f825b6eda0 'typename sized_array_memory<56>::type' sugar
|   `-TypedefType 0x55f825b6d6d0 'sized_array_memory<56>::type' sugar
|     |-Typedef 0x55f825b6d5d0 'type'
|     `-TemplateSpecializationType 0x55f825b6d560 'char_array<56UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f825b6d440 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|       |   `-SubstNonTypeTemplateParmExpr 0x55f825b6d420 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f825b6d400 <col:24> 'unsigned long' 56
|       `-RecordType 0x55f825b6d540 'char_array<56>'
|         `-ClassTemplateSpecialization 0x55f825b6d460 'char_array'
|-TypedefDecl 0x55f825b6eea8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<56> >::type *'
| `-PointerType 0x55f825b6ee70 'vector_memory<sized_array_memory<56> >::type *'
|   `-TypedefType 0x55f825b6ee50 'vector_memory<sized_array_memory<56> >::type' sugar
|     |-Typedef 0x55f825b6edf0 'type'
|     `-ElaboratedType 0x55f825b6eda0 'typename sized_array_memory<56>::type' sugar
|       `-TypedefType 0x55f825b6d6d0 'sized_array_memory<56>::type' sugar
|         |-Typedef 0x55f825b6d5d0 'type'
|         `-TemplateSpecializationType 0x55f825b6d560 'char_array<56UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f825b6d440 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|           |   `-SubstNonTypeTemplateParmExpr 0x55f825b6d420 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f825b6d400 <col:24> 'unsigned long' 56
|           `-RecordType 0x55f825b6d540 'char_array<56>'
|             `-ClassTemplateSpecialization 0x55f825b6d460 'char_array'
|-CXXMethodDecl 0x55f825b6f028 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<56> >::type *) const' inline
| `-ParmVarDecl 0x55f825b6ef38 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXConstructorDecl 0x55f825b6f118 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f825b6f1f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f825b6f1f8
|-CXXMethodDecl 0x55f825b6f4c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x55f825b6f3d0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<56> > &'
|-CXXMethodDecl 0x55f825b6f708 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55f825b6f580 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f825b6f5f8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55f825b6f8d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55f825b6f7c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f825b6f840 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55f825b6fa38 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x55f825b6fb08 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x55f825b6fd58 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55f825b6fbc8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x55f825b6fc40 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55f825b6ffb8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, vector_memory<sized_array_memory<56> >::iterator)'
| |-ParmVarDecl 0x55f825b6fe28 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x55f825b6fea0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55f825b70178 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x55f825b70088 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55f825b70338 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x55f825b70240 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55f825b703f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f825b704a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f825b706d8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55f825b70550 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f825b705c8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55f825b70978 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x55f825b70880 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<56> > &'
|-FieldDecl 0x55f825b70a40 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<56> >::type *'
|-FieldDecl 0x55f825b70a90 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f825b70ae0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825b6b9f8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterInput'
|-CXXRecordDecl 0x55f825b6bc08 prev 0x55f825b6b9f8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f825b6cf00 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterInput>::type':'sized_array_memory<56>'
| `-ElaboratedType 0x55f825b6ceb0 'typename array_memory<IPRewriterInput>::type' sugar
|   `-TypedefType 0x55f825b6ce90 'conditional<true, sized_array_memory<56>, typed_array_memory<IPRewriterInput> >::type' sugar
|     |-Typedef 0x55f825b6cd40 'type'
|     `-SubstTemplateTypeParmType 0x55f825b6cb60 'sized_array_memory<56>' sugar
|       |-TemplateTypeParmType 0x55f8257f7e10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8257f7db8 'T'
|       `-RecordType 0x55f825b6c6b0 'sized_array_memory<56>'
|         `-ClassTemplateSpecialization 0x55f825b6c5d0 'sized_array_memory'
|-FieldDecl 0x55f825b70b30 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterInput>::array_memory_type>':'vector_memory<sized_array_memory<56> >' mutable
|-AccessSpecDecl 0x55f825b70b80 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f825b70bb8 <line:118:5, col:15> col:15 value_type 'IPRewriterInput':'IPRewriterInput'
| `-SubstTemplateTypeParmType 0x55f825b6bca0 'IPRewriterInput' sugar
|   |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f82582efb8 'T'
|   `-RecordType 0x55f825b2f470 'IPRewriterInput'
|     `-CXXRecord 0x55f825b4de70 'IPRewriterInput'
|-TypedefDecl 0x55f825b70c78 <line:119:5, col:16> col:16 reference 'IPRewriterInput &'
| `-LValueReferenceType 0x55f825b70c40 'IPRewriterInput &'
|   `-SubstTemplateTypeParmType 0x55f825b6bca0 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f82582efb8 'T'
|     `-RecordType 0x55f825b2f470 'IPRewriterInput'
|       `-CXXRecord 0x55f825b4de70 'IPRewriterInput'
|-TypedefDecl 0x55f825b70d38 <line:120:5, col:22> col:22 const_reference 'const IPRewriterInput &'
| `-LValueReferenceType 0x55f825b70d00 'const IPRewriterInput &'
|   `-QualType 0x55f825b6bca1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55f825b6bca0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-RecordType 0x55f825b2f470 'IPRewriterInput'
|         `-CXXRecord 0x55f825b4de70 'IPRewriterInput'
|-TypedefDecl 0x55f825b70dc8 <line:121:5, col:16> col:16 pointer 'IPRewriterInput *'
| `-PointerType 0x55f825b70d90 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x55f825b6bca0 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f82582efb8 'T'
|     `-RecordType 0x55f825b2f470 'IPRewriterInput'
|       `-CXXRecord 0x55f825b4de70 'IPRewriterInput'
|-TypedefDecl 0x55f825b70e88 <line:122:5, col:22> col:22 const_pointer 'const IPRewriterInput *'
| `-PointerType 0x55f825b70e50 'const IPRewriterInput *'
|   `-QualType 0x55f825b6bca1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55f825b6bca0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-RecordType 0x55f825b2f470 'IPRewriterInput'
|         `-CXXRecord 0x55f825b4de70 'IPRewriterInput'
|-TypedefDecl 0x55f825b71ae0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterInput>::type':'const IPRewriterInput &'
| `-ElaboratedType 0x55f825b71a90 'typename fast_argument<IPRewriterInput>::type' sugar
|   `-TypedefType 0x55f825b71a70 'fast_argument<IPRewriterInput, true>::type' sugar
|     |-Typedef 0x55f825b719a8 'type'
|     `-LValueReferenceType 0x55f825b71970 'const IPRewriterInput &'
|       `-QualType 0x55f825b71711 'const IPRewriterInput' const
|         `-SubstTemplateTypeParmType 0x55f825b71710 'IPRewriterInput' sugar
|           |-TemplateTypeParmType 0x55f825800920 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f8258008c8 'T'
|           `-RecordType 0x55f825b2f470 'IPRewriterInput'
|             `-CXXRecord 0x55f825b4de70 'IPRewriterInput'
|-TypedefDecl 0x55f825b71b48 <line:126:5, col:22> col:22 const_access_type 'const IPRewriterInput &'
| `-LValueReferenceType 0x55f825b70d00 'const IPRewriterInput &'
|   `-QualType 0x55f825b6bca1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55f825b6bca0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-RecordType 0x55f825b2f470 'IPRewriterInput'
|         `-CXXRecord 0x55f825b4de70 'IPRewriterInput'
|-TypedefDecl 0x55f825b71ba0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825b71c08 <line:130:5, col:16> col:16 iterator 'IPRewriterInput *'
| `-PointerType 0x55f825b70d90 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x55f825b6bca0 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f82582efb8 'T'
|     `-RecordType 0x55f825b2f470 'IPRewriterInput'
|       `-CXXRecord 0x55f825b4de70 'IPRewriterInput'
|-TypedefDecl 0x55f825b71c70 <line:131:5, col:22> col:22 const_iterator 'const IPRewriterInput *'
| `-PointerType 0x55f825b70e50 'const IPRewriterInput *'
|   `-QualType 0x55f825b6bca1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55f825b6bca0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-RecordType 0x55f825b2f470 'IPRewriterInput'
|         `-CXXRecord 0x55f825b4de70 'IPRewriterInput'
|-EnumDecl 0x55f825b71cc8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f825b71dc0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterInput>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f825b71da0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f8258301d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f8258301b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f825830190 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f825b71e48 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f825b720d8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825b71f00 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f825b71fa0 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXConstructorDecl 0x55f825b72398 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55f825b72280 <col:19, col:36> col:36 x 'const Vector<IPRewriterInput> &'
|-CXXConstructorDecl 0x55f825b72658 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x55f825b72540 <col:19, col:31> col:31 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x55f825b729a0 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterInput> &(const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55f825b72880 <col:33, col:50> col:50 x 'const Vector<IPRewriterInput> &'
|-CXXMethodDecl 0x55f825b72cb0 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterInput> &(Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x55f825b72b90 <col:33, col:45> col:45 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x55f825b748d0 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterInput> &(Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825b72de8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f825b74790 <col:43, col:69> col:63 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55f825b74a28 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x55f825b74b08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825b74b60 <col:30> Inherited
|-CXXMethodDecl 0x55f825b74ba8 <line:151:5, col:53> col:49 end 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x55f825b74c58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825b74cb0 <col:30> Inherited
|-CXXMethodDecl 0x55f825b74d78 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55f825b74e28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825b74e80 <col:30> Inherited
|-CXXMethodDecl 0x55f825b74ec8 <line:153:5, col:61> col:55 end 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55f825b74f78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825b74fd0 <col:30> Inherited
|-CXXMethodDecl 0x55f825b75018 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55f825b750c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825b75120 <col:30> Inherited
|-CXXMethodDecl 0x55f825b75168 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55f825b75218 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825b75270 <col:30> Inherited
|-CXXMethodDecl 0x55f825b75298 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f825b75348 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f825b753f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f825b755b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825b754a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f825b75520 <col:37, col:63> col:57 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55f825b75708 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f825b75678 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825b758b8 <line:163:5, col:65> col:43 operator[] 'IPRewriterInput &(Vector::size_type)'
| |-ParmVarDecl 0x55f825b757c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f825b75970 <col:20>
| `-OptimizeNoneAttr 0x55f825b759c8 <col:30>
|-CXXMethodDecl 0x55f825b75ae8 <line:164:5, col:73> col:49 used operator[] 'const IPRewriterInput &(Vector::size_type) const'
| |-ParmVarDecl 0x55f825b759f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f825b75ba0 <col:20>
| `-OptimizeNoneAttr 0x55f825b75bf8 <col:30>
|-CXXMethodDecl 0x55f825b75cb0 <line:165:5, col:29> col:15 at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f825b75c20 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825b75df8 <line:166:5, col:37> col:21 at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f825b75d68 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825b75f28 <line:167:5, col:21> col:15 front 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x55f825b76058 <line:168:5, col:29> col:21 front 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x55f825b76128 <line:169:5, col:20> col:15 back 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x55f825b761f8 <line:170:5, col:28> col:21 back 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x55f825b76338 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f825b762a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825b76480 <line:173:5, col:47> col:21 unchecked_at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f825b763f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825b765c8 <line:174:5, col:59> col:15 at_u 'IPRewriterInput &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f825b76538 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f825b76680 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f825b76780 <line:175:5, col:71> col:21 at_u 'const IPRewriterInput &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f825b766f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f825b76838 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f825b768f8 <line:177:5, col:20> col:15 data 'IPRewriterInput *()' inline
|-CXXMethodDecl 0x55f825b769f8 <line:178:5, col:28> col:21 data 'const IPRewriterInput *() const' inline
|-CXXMethodDecl 0x55f825b76ba8 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x55f825b76ab8 <col:27, col:47> col:47 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-FunctionTemplateDecl 0x55f825b77368 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f825b76c60 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterInput>':'fast_argument<IPRewriterInput, true>'
| `-CXXMethodDecl 0x55f825b772c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterInput &&)' inline
|   `-ParmVarDecl 0x55f825b771c8 <col:58, col:62> col:62 v 'IPRewriterInput &&'
|-CXXMethodDecl 0x55f825b77448 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f825b77598 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x55f825b77508 <col:28, col:48> col:48 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55f825b77650 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f825b77898 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825b77710 <col:28, col:37> col:37 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x55f825b77788 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55f825b77a58 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator)' inline
| `-ParmVarDecl 0x55f825b77968 <col:27, col:36> col:36 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x55f825b77ca8 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::iterator)' inline
| |-ParmVarDecl 0x55f825b77b20 <col:27, col:36> col:36 a 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x55f825b77b98 <col:39, col:48> col:48 b 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x55f825b77d68 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f825b77fc8 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55f825b77ed0 <col:22, col:33> col:33 x 'Vector<IPRewriterInput> &'
`-CXXDestructorDecl 0x55f825b78098 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f825b78098

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterHeap
         0 |   Vector<class IPRewriterFlow *> [2] _heaps
        32 |   int32_t _capacity
        36 |   uint32_t _use_count
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825b51330 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55f825b51508 prev 0x55f825b51330 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f825b51598 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f825b515c0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825b53190 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55f825b53140 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55f825b51a70 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55f825b51970 'type'
|     `-TemplateSpecializationType 0x55f825b51900 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f825b517e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55f825b517c0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f825b517a0 <col:24> 'unsigned long' 8
|       `-RecordType 0x55f825b518e0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55f825b51800 'char_array'
|-TypedefDecl 0x55f825b53248 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55f825b53210 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55f825b531f0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55f825b53190 'type'
|     `-ElaboratedType 0x55f825b53140 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55f825b51a70 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55f825b51970 'type'
|         `-TemplateSpecializationType 0x55f825b51900 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f825b517e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55f825b517c0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f825b517a0 <col:24> 'unsigned long' 8
|           `-RecordType 0x55f825b518e0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55f825b51800 'char_array'
|-CXXMethodDecl 0x55f825b533c8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55f825b532d8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55f825b534b8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f825b53598 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55f825b53868 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55f825b53770 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55f825b53aa8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f825b53920 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f825b53998 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f825b53c78 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f825b53b68 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f825b53be0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f825b53dd8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55f825b53ea8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55f825b540f8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f825b53f68 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55f825b53fe0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f825b54358 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55f825b541c8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55f825b54240 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f825b54518 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55f825b54428 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f825b546d8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55f825b545e0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f825b54790 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f825b570f0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f825b57328 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55f825b571a0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f825b57218 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55f825b575c8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55f825b574d0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55f825b57690 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55f825b576e0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f825b57730 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825b4fd20 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterFlow *'
|-CXXRecordDecl 0x55f825b4ff20 prev 0x55f825b4fd20 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f825b512a0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterFlow *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55f825b51250 'typename array_memory<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x55f825b51230 'conditional<true, sized_array_memory<8>, typed_array_memory<IPRewriterFlow *> >::type' sugar
|     |-Typedef 0x55f825b510e0 'type'
|     `-SubstTemplateTypeParmType 0x55f825b50f00 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55f8257f7e10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8257f7db8 'T'
|       `-RecordType 0x55f825b50a50 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55f825b50968 'sized_array_memory'
|-FieldDecl 0x55f825b57780 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterFlow *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55f825b577d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f825b57808 <line:118:5, col:15> col:15 value_type 'IPRewriterFlow *':'IPRewriterFlow *'
| `-SubstTemplateTypeParmType 0x55f825b4ffb0 'IPRewriterFlow *' sugar
|   |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f82582efb8 'T'
|   `-PointerType 0x55f825b33120 'IPRewriterFlow *'
|     `-RecordType 0x55f825b2f310 'IPRewriterFlow'
|       `-CXXRecord 0x55f825b35010 'IPRewriterFlow'
|-TypedefDecl 0x55f825b578c8 <line:119:5, col:16> col:16 reference 'IPRewriterFlow *&'
| `-LValueReferenceType 0x55f825b57890 'IPRewriterFlow *&'
|   `-SubstTemplateTypeParmType 0x55f825b4ffb0 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f82582efb8 'T'
|     `-PointerType 0x55f825b33120 'IPRewriterFlow *'
|       `-RecordType 0x55f825b2f310 'IPRewriterFlow'
|         `-CXXRecord 0x55f825b35010 'IPRewriterFlow'
|-TypedefDecl 0x55f825b57988 <line:120:5, col:22> col:22 const_reference 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x55f825b57950 'IPRewriterFlow *const &'
|   `-QualType 0x55f825b4ffb1 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55f825b4ffb0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-PointerType 0x55f825b33120 'IPRewriterFlow *'
|         `-RecordType 0x55f825b2f310 'IPRewriterFlow'
|           `-CXXRecord 0x55f825b35010 'IPRewriterFlow'
|-TypedefDecl 0x55f825b57a18 <line:121:5, col:16> col:16 pointer 'IPRewriterFlow **'
| `-PointerType 0x55f825b579e0 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x55f825b4ffb0 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f82582efb8 'T'
|     `-PointerType 0x55f825b33120 'IPRewriterFlow *'
|       `-RecordType 0x55f825b2f310 'IPRewriterFlow'
|         `-CXXRecord 0x55f825b35010 'IPRewriterFlow'
|-TypedefDecl 0x55f825b57ad8 <line:122:5, col:22> col:22 const_pointer 'IPRewriterFlow *const *'
| `-PointerType 0x55f825b57aa0 'IPRewriterFlow *const *'
|   `-QualType 0x55f825b4ffb1 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55f825b4ffb0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-PointerType 0x55f825b33120 'IPRewriterFlow *'
|         `-RecordType 0x55f825b2f310 'IPRewriterFlow'
|           `-CXXRecord 0x55f825b35010 'IPRewriterFlow'
|-TypedefDecl 0x55f825b588c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterFlow *>::type':'IPRewriterFlow *'
| `-ElaboratedType 0x55f825b58870 'typename fast_argument<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x55f825b58850 'fast_argument<IPRewriterFlow *, false>::type' sugar
|     |-Typedef 0x55f825b587e0 'type'
|     `-SubstTemplateTypeParmType 0x55f825b585a0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55f825801050 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f825801000 'T'
|       `-PointerType 0x55f825b33120 'IPRewriterFlow *'
|         `-RecordType 0x55f825b2f310 'IPRewriterFlow'
|           `-CXXRecord 0x55f825b35010 'IPRewriterFlow'
|-TypedefDecl 0x55f825b58928 <line:126:5, col:22> col:22 const_access_type 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x55f825b57950 'IPRewriterFlow *const &'
|   `-QualType 0x55f825b4ffb1 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55f825b4ffb0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-PointerType 0x55f825b33120 'IPRewriterFlow *'
|         `-RecordType 0x55f825b2f310 'IPRewriterFlow'
|           `-CXXRecord 0x55f825b35010 'IPRewriterFlow'
|-TypedefDecl 0x55f825b58980 <line:128:5, col:17> col:17 referenced size_type 'int'
| `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825b589e8 <line:130:5, col:16> col:16 iterator 'IPRewriterFlow **'
| `-PointerType 0x55f825b579e0 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x55f825b4ffb0 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f82582efb8 'T'
|     `-PointerType 0x55f825b33120 'IPRewriterFlow *'
|       `-RecordType 0x55f825b2f310 'IPRewriterFlow'
|         `-CXXRecord 0x55f825b35010 'IPRewriterFlow'
|-TypedefDecl 0x55f825b58a50 <line:131:5, col:22> col:22 const_iterator 'IPRewriterFlow *const *'
| `-PointerType 0x55f825b57aa0 'IPRewriterFlow *const *'
|   `-QualType 0x55f825b4ffb1 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55f825b4ffb0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-PointerType 0x55f825b33120 'IPRewriterFlow *'
|         `-RecordType 0x55f825b2f310 'IPRewriterFlow'
|           `-CXXRecord 0x55f825b35010 'IPRewriterFlow'
|-EnumDecl 0x55f825b58aa8 <line:134:5> col:5
| `-EnumConstantDecl 0x55f825b58ba0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterFlow *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f825b58b80 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f8258301d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f8258301b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f825830190 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f825b58c28 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55f825b58eb8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825b58ce0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f825b58d80 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXConstructorDecl 0x55f825b59178 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55f825b59060 <col:19, col:36> col:36 x 'const Vector<IPRewriterFlow *> &'
|-CXXConstructorDecl 0x55f825b59438 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x55f825b59320 <col:19, col:31> col:31 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x55f825b59780 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterFlow *> &(const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55f825b59660 <col:33, col:50> col:50 x 'const Vector<IPRewriterFlow *> &'
|-CXXMethodDecl 0x55f825b59a90 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterFlow *> &(Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x55f825b59970 <col:33, col:45> col:45 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x55f825b59d80 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterFlow *> &(Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825b59bc8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f825b59c40 <col:43, col:69> col:63 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55f825b59ed8 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x55f825b59fb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825b5a010 <col:30> Inherited
|-CXXMethodDecl 0x55f825b5a058 <line:151:5, col:53> col:49 end 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x55f825b5a108 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825b5a160 <col:30> Inherited
|-CXXMethodDecl 0x55f825b5a228 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55f825b5a2d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825b5a330 <col:30> Inherited
|-CXXMethodDecl 0x55f825b5a378 <line:153:5, col:61> col:55 end 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55f825b5a428 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825b5a480 <col:30> Inherited
|-CXXMethodDecl 0x55f825b5a4c8 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55f825b5a578 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825b5a5d0 <col:30> Inherited
|-CXXMethodDecl 0x55f825b5a618 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55f825b5a6c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825b5a720 <col:30> Inherited
|-CXXMethodDecl 0x55f825b5a748 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f825b5a7f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f825b5a8a8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f825b5aa68 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825b5a958 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f825b5a9d0 <col:37, col:63> col:57 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55f825b5abb8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f825b5ab28 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825b5ad68 <line:163:5, col:65> col:43 operator[] 'IPRewriterFlow *&(Vector::size_type)'
| |-ParmVarDecl 0x55f825b5ac70 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f825b5ae20 <col:20>
| `-OptimizeNoneAttr 0x55f825b5ae78 <col:30>
|-CXXMethodDecl 0x55f825b5af98 <line:164:5, col:73> col:49 operator[] 'IPRewriterFlow *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55f825b5aea0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f825b5b050 <col:20>
| `-OptimizeNoneAttr 0x55f825b5b0a8 <col:30>
|-CXXMethodDecl 0x55f825b5b160 <line:165:5, col:29> col:15 at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f825b5b0d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825b5b2a8 <line:166:5, col:37> col:21 at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f825b5b218 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825b5b3d8 <line:167:5, col:21> col:15 front 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x55f825b5b508 <line:168:5, col:29> col:21 front 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x55f825b5b5d8 <line:169:5, col:20> col:15 back 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x55f825b5b6a8 <line:170:5, col:28> col:21 back 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x55f825b5b7e8 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55f825b5b758 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825b5b930 <line:173:5, col:47> col:21 unchecked_at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f825b5b8a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825b5ba78 <line:174:5, col:59> col:15 at_u 'IPRewriterFlow *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55f825b5b9e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f825b5bb30 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f825b5bc30 <line:175:5, col:71> col:21 at_u 'IPRewriterFlow *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f825b5bba0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f825b5bce8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f825b5bda8 <line:177:5, col:20> col:15 data 'IPRewriterFlow **()' inline
|-CXXMethodDecl 0x55f825b5bea8 <line:178:5, col:28> col:21 data 'IPRewriterFlow *const *() const' inline
|-CXXMethodDecl 0x55f825b5c058 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f825b5bf68 <col:27, col:47> col:47 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-FunctionTemplateDecl 0x55f825b5c848 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f825b5c110 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterFlow *>':'fast_argument<IPRewriterFlow *, false>'
| `-CXXMethodDecl 0x55f825b5c7a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterFlow *&&)' inline
|   `-ParmVarDecl 0x55f825b5c6a8 <col:58, col:62> col:62 v 'IPRewriterFlow *&&'
|-CXXMethodDecl 0x55f825b5c928 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f825b5ca78 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x55f825b5c9e8 <col:28, col:48> col:48 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55f825b5cb30 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f825b5cd78 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825b5cbf0 <col:28, col:37> col:37 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x55f825b5cc68 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55f825b5cf38 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator)' inline
| `-ParmVarDecl 0x55f825b5ce48 <col:27, col:36> col:36 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x55f825b5d188 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::iterator)' inline
| |-ParmVarDecl 0x55f825b5d000 <col:27, col:36> col:36 a 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x55f825b5d078 <col:39, col:48> col:48 b 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x55f825b5d248 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f825b5d4a8 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55f825b5d3b0 <col:22, col:33> col:33 x 'Vector<IPRewriterFlow *> &'
`-CXXDestructorDecl 0x55f825b5d578 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55f825b5e488 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825b4f7d8 prev 0x55f825b32620 <../elements/ip/iprewriterbase.hh:42:1, line:79:1> line:42:7 referenced class IPRewriterHeap definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f825b4f8d0 <col:1, col:7> col:7 implicit referenced class IPRewriterHeap
|-AccessSpecDecl 0x55f825b4f960 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55f825b4f9c0 <line:44:5, line:46:5> line:44:5 IPRewriterHeap 'void ()'
| |-CXXCtorInitializer Field 0x55f825b5de18 '_heaps' 'Vector<IPRewriterFlow *> [2]'
| | `-CXXConstructExpr 0x55f825b5e460 <col:5> 'Vector<IPRewriterFlow *> [2]' 'void ()'
| |-CXXCtorInitializer Field 0x55f825b5de78 '_capacity' 'int32_t':'int'
| | `-IntegerLiteral 0x55f825b5e378 <line:45:14> 'int' 2147483647
| |-CXXCtorInitializer Field 0x55f825b5ded8 '_use_count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f825b5e420 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f825b5e3e0 <col:38> 'int' 1
| `-CompoundStmt 0x55f825b5e4d8 <col:41, line:46:5>
|-CXXDestructorDecl 0x55f825b4fab0 <line:47:5, line:49:5> line:47:5 used ~IPRewriterHeap 'void () noexcept'
| `-CompoundStmt 0x55f825b5e918 <col:23, line:49:5>
|   `-ParenExpr 0x55f825b5e8f8 <line:48:2, col:153> 'void'
|     `-ConditionalOperator 0x55f825b5e8c8 <col:3, col:152> 'void'
|       |-CXXStaticCastExpr 0x55f825b5e5b0 <col:3, col:34> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55f825b5e580 <col:23, col:33> 'bool' '=='
|       |   |-CXXMemberCallExpr 0x55f825b5e528 <col:23, col:28> 'Vector<IPRewriterFlow *>::size_type':'int'
|       |   | `-MemberExpr 0x55f825b5e4f8 <col:23> '<bound member function type>' ->size 0x55f825b5d758
|       |   |   `-ImplicitCastExpr 0x55f825b5e548 <col:23> 'const IPRewriterHeap *' <NoOp>
|       |   |     `-CXXThisExpr 0x55f825b5e4e8 <col:23> 'IPRewriterHeap *' implicit this
|       |   `-IntegerLiteral 0x55f825b5e560 <col:33> 'int' 0
|       |-CXXFunctionalCastExpr 0x55f825b5e610 <col:38, col:45> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55f825b5e5f0 <col:44> 'int' 0
|       `-CallExpr 0x55f825b5e828 <col:49, col:152> 'void'
|         |-ImplicitCastExpr 0x55f825b5e810 <col:49> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f825b5e7f0 <col:49> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55f825b5e868 <col:64> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55f825b5e680 <col:64> 'const char [12]' lvalue "size() == 0"
|         |-ImplicitCastExpr 0x55f825b5e880 <col:79> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55f825b5e728 <col:79> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|         |-ImplicitCastExpr 0x55f825b5e898 <col:115> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55f825b5e760 <col:115> 'int' 48
|         `-ImplicitCastExpr 0x55f825b5e8b0 <col:119, col:133> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55f825b5e7d8 <col:119, col:133> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55f825b5e7c0 <col:133> 'const char [34]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55f825b5e780 <col:133> 'const char [34]' lvalue "IPRewriterHeap::~IPRewriterHeap()"
|-CXXMethodDecl 0x55f825b4fbb0 <line:51:5, line:53:5> line:51:10 use 'void ()'
| `-CompoundStmt 0x55f825b5e988 <col:16, line:53:5>
|   `-UnaryOperator 0x55f825b5e970 <line:52:2, col:4> 'uint32_t':'unsigned int' lvalue prefix '++'
|     `-MemberExpr 0x55f825b5e940 <col:4> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55f825b5ded8
|       `-CXXThisExpr 0x55f825b5e930 <col:4> 'IPRewriterHeap *' implicit this
|-CXXMethodDecl 0x55f825b4fc70 <line:54:5, line:58:5> line:54:10 unuse 'void ()'
| `-CompoundStmt 0x55f825b5ee50 <col:18, line:58:5>
|   |-ParenExpr 0x55f825b5ed20 <line:55:2, col:159> 'void'
|   | `-ConditionalOperator 0x55f825b5ecf0 <col:3, col:158> 'void'
|   |   |-CXXStaticCastExpr 0x55f825b5ea60 <col:3, col:37> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825b5ea30 <col:23, col:36> 'bool' '>'
|   |   |   |-ImplicitCastExpr 0x55f825b5ea00 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x55f825b5e9b0 <col:23> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55f825b5ded8
|   |   |   |   `-CXXThisExpr 0x55f825b5e9a0 <col:23> 'IPRewriterHeap *' implicit this
|   |   |   `-ImplicitCastExpr 0x55f825b5ea18 <col:36> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x55f825b5e9e0 <col:36> 'int' 0
|   |   |-CXXFunctionalCastExpr 0x55f825b5eac0 <col:41, col:48> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825b5eaa0 <col:47> 'int' 0
|   |   `-CallExpr 0x55f825b5ec50 <col:52, col:158> 'void'
|   |     |-ImplicitCastExpr 0x55f825b5ec38 <col:52> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825b5ec18 <col:52> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825b5ec90 <col:67> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825b5eb30 <col:67> 'const char [15]' lvalue "_use_count > 0"
|   |     |-ImplicitCastExpr 0x55f825b5eca8 <col:85> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825b5eb58 <col:85> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|   |     |-ImplicitCastExpr 0x55f825b5ecc0 <col:121> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825b5eb90 <col:121> 'int' 55
|   |     `-ImplicitCastExpr 0x55f825b5ecd8 <col:125, col:139> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825b5ec00 <col:125, col:139> 'const char [29]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825b5ebe8 <col:139> 'const char [29]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825b5ebb0 <col:139> 'const char [29]' lvalue "void IPRewriterHeap::unuse()"
|   `-IfStmt 0x55f825b5ee38 <line:56:2, line:57:13>
|     |-BinaryOperator 0x55f825b5ede8 <line:56:6, col:22> 'bool' '=='
|     | |-ImplicitCastExpr 0x55f825b5edb8 <col:6, col:8> 'uint32_t':'unsigned int' <LValueToRValue>
|     | | `-UnaryOperator 0x55f825b5ed80 <col:6, col:8> 'uint32_t':'unsigned int' lvalue prefix '--'
|     | |   `-MemberExpr 0x55f825b5ed50 <col:8> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55f825b5ded8
|     | |     `-CXXThisExpr 0x55f825b5ed40 <col:8> 'IPRewriterHeap *' implicit this
|     | `-ImplicitCastExpr 0x55f825b5edd0 <col:22> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x55f825b5ed98 <col:22> 'int' 0
|     `-CXXDeleteExpr 0x55f825b5ee18 <line:57:6, col:13> 'void' Function 0x55f82566dca8 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x55f825b5ee08 <col:13> 'IPRewriterHeap *' this
|-CXXMethodDecl 0x55f825b5d758 <line:60:5, line:62:5> line:60:41 used size 'Vector<IPRewriterFlow *>::size_type () const'
| `-CompoundStmt 0x55f825b61960 <col:54, line:62:5>
|   `-ReturnStmt 0x55f825b61950 <line:61:2, col:43>
|     `-BinaryOperator 0x55f825b61930 <col:9, col:43> 'int' '+'
|       |-CXXMemberCallExpr 0x55f825b5efd0 <col:9, col:24> 'Vector::size_type':'int'
|       | `-MemberExpr 0x55f825b5efa0 <col:9, col:19> '<bound member function type>' .size 0x55f825b5a748
|       |   `-ArraySubscriptExpr 0x55f825b5ef80 <col:9, col:17> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|       |     |-ImplicitCastExpr 0x55f825b5ef68 <col:9> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x55f825b5ee80 <col:9> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x55f825b5de18
|       |     |   `-CXXThisExpr 0x55f825b5ee70 <col:9> 'const IPRewriterHeap *' implicit this
|       |     `-IntegerLiteral 0x55f825b5eeb0 <col:16> 'int' 0
|       `-CXXMemberCallExpr 0x55f825b5f0b8 <col:28, col:43> 'Vector::size_type':'int'
|         `-MemberExpr 0x55f825b5f088 <col:28, col:38> '<bound member function type>' .size 0x55f825b5a748
|           `-ArraySubscriptExpr 0x55f825b5f068 <col:28, col:36> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|             |-ImplicitCastExpr 0x55f825b5f050 <col:28> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f825b5f000 <col:28> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x55f825b5de18
|             |   `-CXXThisExpr 0x55f825b5eff0 <col:28> 'const IPRewriterHeap *' implicit this
|             `-IntegerLiteral 0x55f825b5f030 <col:35> 'int' 1
|-CXXMethodDecl 0x55f825b5d848 <line:63:5, line:65:5> line:63:13 capacity 'int32_t () const'
| `-CompoundStmt 0x55f825b619e0 <col:30, line:65:5>
|   `-ReturnStmt 0x55f825b619d0 <line:64:2, col:9>
|     `-ImplicitCastExpr 0x55f825b619b8 <col:9> 'int32_t':'int' <LValueToRValue>
|       `-MemberExpr 0x55f825b61988 <col:9> 'const int32_t':'const int' lvalue ->_capacity 0x55f825b5de78
|         `-CXXThisExpr 0x55f825b61978 <col:9> 'const IPRewriterHeap *' implicit this
|-AccessSpecDecl 0x55f825b5d8e8 <line:67:3, col:10> col:3 private
|-EnumDecl 0x55f825b5d910 <line:69:5, line:71:5> line:69:5
| |-EnumConstantDecl 0x55f825b5da10 <line:70:2, col:18> col:2 h_best_effort 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
| | `-ImplicitCastExpr 0x55f825b5daf0 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825b5d9f0 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x55f825b5d9d0 <col:18> 'int' 0
| `-EnumConstantDecl 0x55f825b5daa0 <col:21, col:35> col:21 h_guarantee 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
|   `-ImplicitCastExpr 0x55f825b5db08 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825b5da80 <col:35> 'int' Int: 1
|       `-IntegerLiteral 0x55f825b5da60 <col:35> 'int' 1
|-FieldDecl 0x55f825b5de18 <line:72:5, col:38> col:30 referenced _heaps 'Vector<IPRewriterFlow *> [2]'
|-FieldDecl 0x55f825b5de78 <line:73:5, col:13> col:13 referenced _capacity 'int32_t':'int'
|-FieldDecl 0x55f825b5ded8 <line:74:5, col:14> col:14 referenced _use_count 'uint32_t':'unsigned int'
|-FriendDecl 0x55f825b5df48 <line:76:5, col:18> col:12 'class IPRewriterBase':'IPRewriterBase'
|-FriendDecl 0x55f825b5dfe0 <line:77:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x55f825b5e048 <line:42:7> col:7 implicit IPRewriterHeap 'void (const IPRewriterHeap &)' inline default noexcept-unevaluated 0x55f825b5e048
| `-ParmVarDecl 0x55f825b5e158 <col:7> col:7 'const IPRewriterHeap &'
`-CXXMethodDecl 0x55f825b5e1f8 <col:7> col:7 implicit operator= 'IPRewriterHeap &(const IPRewriterHeap &)' inline default noexcept-unevaluated 0x55f825b5e1f8
  `-ParmVarDecl 0x55f825b5e308 <col:7> col:7 'const IPRewriterHeap &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.0], i32, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.0], i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825a1cbe0 prev 0x55f825a14070 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825a1ccd8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55f825a1cd78 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55f825a23218 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f825a235f8 <col:11>
|-CXXConstructorDecl 0x55f825a232f0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825a233d8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55f825a23d40 <col:11>
|-CXXConstructorDecl 0x55f825a23478 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825a23588 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55f825a25598 <col:11>
|-CXXDestructorDecl 0x55f825a248a8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f825724a48 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825724b58 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55f825725420 <col:11>
|   `-ReturnStmt 0x55f825725410 <col:11>
|     `-UnaryOperator 0x55f8257253f8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f8257253e8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55f825724bc8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f825724cd8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55f825aaf660 <col:11>
    `-ReturnStmt 0x55f825aaf650 <col:11>
      `-UnaryOperator 0x55f825aaf638 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55f825aaf628 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825a11c58 prev 0x55f825a11970 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825a11d50 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55f825a11de0 <col:19, col:25> col:19 public
|-TypedefDecl 0x55f825a11e18 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55f82566ff30 'int32_t' sugar
|   |-Typedef 0x55f82557f268 'int32_t'
|   `-TypedefType 0x55f8255583b0 '__int32_t' sugar
|     |-Typedef 0x55f825557fc8 '__int32_t'
|     `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825a11e80 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55f8256700f0 'int64_t' sugar
|   |-Typedef 0x55f82557f2d0 'int64_t'
|   `-TypedefType 0x55f8255584d0 '__int64_t' sugar
|     |-Typedef 0x55f8255580a8 '__int64_t'
|     `-BuiltinType 0x55f825516390 'long'
|-EnumDecl 0x55f825a11ed8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55f825a12050 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55f825a12030 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55f825a12008 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55f825a11ff0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55f825a11fc0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55f825a12148 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55f825a12128 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55f825a12100 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55f825a120e8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55f825a120c0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55f825a120a0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55f825a12198 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55f825a122a0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f825a13dc0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a12280 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55f825a12260 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55f825a12330 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f825a13dd8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a12310 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55f825a122f0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55f825a123c0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f825a13df0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a123a0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55f825a12380 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55f825a12450 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f825a13e08 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a12430 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55f825a12410 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55f825a124e0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f825a13e20 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a124c0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55f825a124a0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55f825a12570 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f825a13e38 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a12550 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55f825a12530 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55f825a12600 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f825a13e50 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a125e0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55f825a125c0 <col:26> 'int' EnumConstant 0x55f825a122a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55f825a126d0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55f825a13e68 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a126b0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55f825a12690 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55f825a12650 <col:27> 'int' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55f825a12670 <col:44> 'int' EnumConstant 0x55f825a12570 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55f825a13d70 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55f825a13e80 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a12780 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55f825a12760 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55f825a12720 <col:27> 'int' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55f825a12740 <col:44> 'int' EnumConstant 0x55f825a12450 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55f825a13e98 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55f825a13fa0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55f825a13ff0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a13f80 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55f825a13f60 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55f825a14018 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55f82566fb60 'uninitialized_type'
|   `-CXXRecord 0x55f82566fac8 'uninitialized_type'
|-CXXRecordDecl 0x55f825a14070 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55f825a14180 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55f825a1dd28 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f825a23608 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f825a23728 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55f825a236e0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55f825a23670 <col:9> '<bound member function type>' ->assign 0x55f825a1ae08
|     | `-CXXThisExpr 0x55f825a23660 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55f825a236a0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55f825a23710 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55f825a236c0 <col:19> 'int' 0
|-CXXConstructorDecl 0x55f825a143c8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55f825a14240 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55f825a142b8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f825a230b0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f825a23090 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55f825a1dd28 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f825a23740 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f825a23890 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55f825a23818 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55f825a237a8 <col:9> '<bound member function type>' ->assign 0x55f825a1ae08
|     | `-CXXThisExpr 0x55f825a23798 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f825a23860 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55f825a23848 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f825a237d8 <col:16> 'long' lvalue ParmVar 0x55f825a14240 'sec' 'long'
|     `-ImplicitCastExpr 0x55f825a23878 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f825a237f8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a142b8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f825a14628 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55f825a14498 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55f825a14510 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f825a230e8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f825a230c8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55f825a1dd28 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f825a238a8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f825a239e0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55f825a23980 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55f825a23910 <col:9> '<bound member function type>' ->assign 0x55f825a1ae08
|     | `-CXXThisExpr 0x55f825a23900 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f825a239b0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f825a23940 <col:16> 'int' lvalue ParmVar 0x55f825a14498 'sec' 'int'
|     `-ImplicitCastExpr 0x55f825a239c8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f825a23960 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a14510 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f825a14888 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55f825a146f8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55f825a14770 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f825a23120 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f825a23100 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55f825a1dd28 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f825a239f8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f825a23b48 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55f825a23ad0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55f825a23a60 <col:9> '<bound member function type>' ->assign 0x55f825a1ae08
|     | `-CXXThisExpr 0x55f825a23a50 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f825a23b18 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55f825a23b00 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f825a23a90 <col:16> 'unsigned long' lvalue ParmVar 0x55f825a146f8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55f825a23b30 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f825a23ab0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a14770 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f825a14ae8 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55f825a14958 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55f825a149d0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f825a23158 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f825a23138 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55f825a1dd28 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f825a23b60 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f825a23cb0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55f825a23c38 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55f825a23bc8 <col:9> '<bound member function type>' ->assign 0x55f825a1ae08
|     | `-CXXThisExpr 0x55f825a23bb8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f825a23c80 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55f825a23c68 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f825a23bf8 <col:16> 'unsigned int' lvalue ParmVar 0x55f825a14958 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55f825a23c98 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55f825a23c18 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a149d0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55f825a14c48 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55f825a14bb8 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55f825a14de8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55f825a14d20 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55f825a15018 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55f825a14f20 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55f825a151c8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55f825a15108 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55f825a1dd28 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f825a23d50 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55f825a23cc8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55f825a15108 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55f825a23db0 <col:19, line:214:5>
|-CXXConstructorDecl 0x55f825a15398 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55f825a152d8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55f825a1dd28 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f825a23dc0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f825a23e70 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55f825a23e48 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55f825a23e18 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55f825a152d8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55f825a15588 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55f825a15500 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55f825a11a00 'Timestamp'
|   | `-CXXRecord 0x55f825a11c58 'Timestamp'
|   `-ParenType 0x55f825a154a0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55f825a15470 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55f825a11fa0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55f825a11e18 'seconds_type'
|         `-TypedefType 0x55f82566ff30 'int32_t' sugar
|           |-Typedef 0x55f82557f268 'int32_t'
|           `-TypedefType 0x55f8255583b0 '__int32_t' sugar
|             |-Typedef 0x55f825557fc8 '__int32_t'
|             `-BuiltinType 0x55f825516370 'int'
|-CXXConversionDecl 0x55f825a156c8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55f825a15798 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55f825a23f78 <col:37, line:231:5>
|   `-ReturnStmt 0x55f825a23f68 <line:227:9, col:23>
|     `-BinaryOperator 0x55f825a23f48 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55f825a23f18 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f825a23ec8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55f825a1cd78
|       |   `-MemberExpr 0x55f825a23e98 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55f825a1dd28
|       |     `-CXXThisExpr 0x55f825a23e88 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f825a23f30 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55f825a23ef8 <col:23> 'int' 0
|-CXXMethodDecl 0x55f825a15858 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55f825a15918 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f825a159d8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f825a15a98 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f825a15b58 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55f825a15cc8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55f825a15c08 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55f825a15e10 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55f825a15d80 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a15ed8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55f825a15f78 <col:54> "" ""
|-CXXMethodDecl 0x55f825a16008 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55f825a160a8 <col:54> "" ""
|-CXXMethodDecl 0x55f825a16138 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55f825a161d8 <col:54> "" ""
|-CXXMethodDecl 0x55f825a162d8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55f825a163a8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55f825a164d8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55f825a165d0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55f825a16708 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55f825a24190 <col:39, line:271:5>
|   `-ReturnStmt 0x55f825a24180 <line:267:9, col:61>
|     `-CallExpr 0x55f825a24120 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55f825a24108 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f825a23f90 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55f825a1e058 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55f825a24150 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f825a23ff0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55f825a1cd78
|       |   `-MemberExpr 0x55f825a23fc0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55f825a1dd28
|       |     `-CXXThisExpr 0x55f825a23fb0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f825a24168 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55f825a24090 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55f825a24060 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55f825a24020 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55f825a24078 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55f825a24040 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12570 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f825a167c8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55f825a24350 <col:39, line:279:5>
|   `-ReturnStmt 0x55f825a24340 <line:275:9, col:61>
|     `-CallExpr 0x55f825a242e0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55f825a242c8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f825a241a8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55f825a1e058 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55f825a24310 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f825a24208 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55f825a1cd78
|       |   `-MemberExpr 0x55f825a241d8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55f825a1dd28
|       |     `-CXXThisExpr 0x55f825a241c8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f825a24328 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55f825a242a8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55f825a24278 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55f825a24238 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55f825a24290 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55f825a24258 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12450 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f825a16888 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55f825a244e8 <col:39, line:287:5>
|   `-ReturnStmt 0x55f825a244d8 <line:283:9, col:53>
|     `-BinaryOperator 0x55f825a244b8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55f825a24488 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55f825a243a8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55f825a1cd78
|       |   `-MemberExpr 0x55f825a24378 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55f825a1dd28
|       |     `-CXXThisExpr 0x55f825a24368 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55f825a244a0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55f825a24468 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f825a24448 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55f825a24418 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f825a243d8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a122a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f825a24430 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f825a243f8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f825a16978 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55f825a25780 <col:40, line:293:5>
|   |-DeclStmt 0x55f825a24630 <line:291:9, col:48>
|   | `-VarDecl 0x55f825a24510 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55f825a24610 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55f825a245b8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55f825a24588 <col:22> '<bound member function type>' ->subsec 0x55f825a15918
|   |     |   `-CXXThisExpr 0x55f825a24578 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55f825a245f8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55f825a245d8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a126d0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f825a25770 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55f825a25758 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55f825a25728 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f825a25710 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55f825a256f0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55f825a256c0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55f825a25458 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55f825a25440 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55f825a24648 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55f825a24510 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55f825a25660 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55f825a25648 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55f825a25618 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55f825a25470 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55f825a253e0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55f825a253c8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55f825a25378 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f825a11ba8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55f825a25318 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55f825a24678 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55f825a24668 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55f825a25360 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55f825a25348 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55f825a24b38 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55f825a246a0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55f825a24730 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55f825a24700 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55f825a246c0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a126d0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55f825a24718 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55f825a246e0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55f825a24510 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55f825a25690 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55f825a25428 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55f825a25418 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55f825a16a38 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55f825a25cd8 <col:40, line:302:5>
|   |-DeclStmt 0x55f825a258d0 <line:297:9, col:48>
|   | `-VarDecl 0x55f825a257b0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55f825a258b0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55f825a25858 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55f825a25828 <col:22> '<bound member function type>' ->subsec 0x55f825a15918
|   |     |   `-CXXThisExpr 0x55f825a25818 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55f825a25898 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55f825a25878 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a13d70 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f825a25cc8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55f825a25cb0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55f825a25c80 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f825a25c68 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55f825a25c48 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55f825a25c18 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55f825a25b40 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55f825a25b28 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55f825a258e8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55f825a257b0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55f825a25bb8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55f825a25ba0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55f825a25b70 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55f825a25b58 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55f825a25ac8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55f825a25ab0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55f825a25a90 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f825a11ba8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55f825a25a30 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55f825a25918 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55f825a25908 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55f825a25a78 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55f825a25a60 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55f825a259f0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55f825a25940 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55f825a259d0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55f825a259a0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55f825a25960 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a13d70 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55f825a259b8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55f825a25980 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55f825a257b0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55f825a25be8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55f825a25b10 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55f825a25b00 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55f825a16af8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55f825a25d60 <col:40, line:306:5>
|   `-ReturnStmt 0x55f825a25d50 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55f825a25d20 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55f825a25d08 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f825a25cf8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55f825a16c98 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55f825a16ba8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55f825a16e68 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55f825a16d70 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55f825a16f58 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55f825a170c8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55f825a17008 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55f825a25ea8 <col:56, line:320:5>
|   `-ReturnStmt 0x55f825a25e98 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55f825a25e80 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55f825a25e50 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f825a25e38 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f825a25df8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f825a25dc8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f825a25d88 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f825a17008 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55f825a25de0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55f825a25da8 <col:31> 'int' 0
|-CXXMethodDecl 0x55f825a17308 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f825a17180 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f825a171f8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825a26078 <col:72, line:326:5>
|   `-ReturnStmt 0x55f825a26068 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55f825a26050 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55f825a26020 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f825a26008 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f825a25fc8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f825a25fb0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f825a25ed0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f825a17180 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55f825a25f70 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55f825a25f58 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f825a25ef0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f825a1c4d0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55f825a25f98 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f825a25f10 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a171f8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a174b8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55f825a173c8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55f825a2fc00 <col:56, line:337:5>
|   |-DeclStmt 0x55f825a26378 <line:329:9, col:51>
|   | `-VarDecl 0x55f825a260a0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55f825a26360 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f825a26330 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f825a26318 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55f825a26300 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55f825a262d0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55f825a262b8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55f825a262a0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55f825a26190 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55f825a2f9f0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55f825a263e0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55f825a1cd78
|   | | `-MemberExpr 0x55f825a263b0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55f825a1dd28
|   | |   `-DeclRefExpr 0x55f825a26390 <col:9> 'Timestamp' lvalue Var 0x55f825a260a0 't' 'Timestamp'
|   | `-BinaryOperator 0x55f825a2f9d0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55f825a2f9a0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f825a26410 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f825a173c8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55f825a2f9b8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55f825a264c0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55f825a264a0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55f825a26470 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55f825a26430 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55f825a26488 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55f825a26450 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12570 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f825a2fbe8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55f825a2fbb8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55f825a2fba0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55f825a2fb80 <col:16> 'Timestamp' lvalue Var 0x55f825a260a0 't' 'Timestamp'
|-CXXMethodDecl 0x55f825a17680 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f825a17570 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f825a175e8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825a2fdb8 <col:72, line:343:5>
|   `-ReturnStmt 0x55f825a2fda8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55f825a2fd90 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55f825a2fd60 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f825a2fd48 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f825a2fd08 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f825a2fcf0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f825a2fc38 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f825a17570 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55f825a2fcb0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55f825a2fc98 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f825a2fc58 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f825a1c618 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55f825a2fcd8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f825a2fc78 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a175e8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a177d0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55f825a17740 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55f825a30200 <col:56, line:354:5>
|   |-DeclStmt 0x55f825a2ffa8 <line:346:9, col:51>
|   | `-VarDecl 0x55f825a2fde0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55f825a2ff90 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f825a2ff60 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f825a2ff48 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55f825a2ff30 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55f825a2ff00 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55f825a2fee8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55f825a2fed0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55f825a2fea0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55f825a30160 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55f825a30010 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55f825a1cd78
|   | | `-MemberExpr 0x55f825a2ffe0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55f825a1dd28
|   | |   `-DeclRefExpr 0x55f825a2ffc0 <col:9> 'Timestamp' lvalue Var 0x55f825a2fde0 't' 'Timestamp'
|   | `-BinaryOperator 0x55f825a30140 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55f825a30110 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f825a30040 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f825a17740 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55f825a30128 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55f825a300f0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55f825a300d0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55f825a300a0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55f825a30060 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55f825a300b8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55f825a30080 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12450 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f825a301e8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55f825a301b8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55f825a301a0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55f825a30180 <col:16> 'Timestamp' lvalue Var 0x55f825a2fde0 't' 'Timestamp'
|-CXXMethodDecl 0x55f825a17998 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f825a17888 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f825a17900 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825a303b8 <col:72, line:360:5>
|   `-ReturnStmt 0x55f825a303a8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55f825a30390 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55f825a30360 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f825a30348 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f825a30308 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55f825a302f0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f825a30238 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f825a17888 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55f825a302b0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55f825a30298 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f825a30258 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f825a1c760 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55f825a302d8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f825a30278 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a17900 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a17ae8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55f825a17a58 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55f825a30828 <col:56, line:371:5>
|   |-DeclStmt 0x55f825a305a8 <line:363:9, col:51>
|   | `-VarDecl 0x55f825a303e0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55f825a30590 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f825a30560 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f825a30548 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55f825a30530 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55f825a30500 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55f825a304e8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55f825a304d0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55f825a304a0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55f825a30788 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55f825a30610 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55f825a1cd78
|   | | `-MemberExpr 0x55f825a305e0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55f825a1dd28
|   | |   `-DeclRefExpr 0x55f825a305c0 <col:9> 'Timestamp' lvalue Var 0x55f825a303e0 't' 'Timestamp'
|   | `-CallExpr 0x55f825a30728 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55f825a30710 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55f825a30640 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55f825a1e058 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55f825a30758 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55f825a30660 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f825a17a58 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55f825a30770 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55f825a306f0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55f825a306c0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55f825a30680 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a122a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55f825a306d8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55f825a306a0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55f825a30810 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55f825a307e0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55f825a307c8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55f825a307a8 <col:16> 'Timestamp' lvalue Var 0x55f825a303e0 't' 'Timestamp'
|-CXXMethodDecl 0x55f825a17bd8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55f825a30968 <col:39, line:377:5>
|   `-ReturnStmt 0x55f825a30958 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55f825a30940 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55f825a30910 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f825a308f8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55f825a308b8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55f825a30860 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55f825a308a0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55f825a30880 <col:29> 'int' 1
|-CXXMethodDecl 0x55f825a17c98 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55f825a30a48 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55f825a30a00 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55f825a30990 <col:9> '<bound member function type>' ->assign 0x55f825a1ae08
|     | `-CXXThisExpr 0x55f825a30980 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55f825a309c0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55f825a30a30 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55f825a309e0 <col:19> 'int' 0
|-CXXMethodDecl 0x55f825a1ae08 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f825a1acc0 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f825a1ad38 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f825a23190 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f825a23170 <col:60> 'int' 0
| `-CompoundStmt 0x55f825a30c40 <col:63, line:395:5>
|   `-BinaryOperator 0x55f825a30c20 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55f825a30aa0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55f825a1cd78
|     | `-MemberExpr 0x55f825a30a70 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55f825a1dd28
|     |   `-CXXThisExpr 0x55f825a30a60 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55f825a30c00 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55f825a30b90 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55f825a30b30 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55f825a30b18 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55f825a30b00 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55f825a30ad0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f825a1acc0 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55f825a30b78 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55f825a30b58 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55f825a30be8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55f825a30bd0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55f825a30bb0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a1ad38 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a1afd8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f825a1aec8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f825a1af40 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825a30d98 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55f825a30d50 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55f825a30c68 <col:9> '<bound member function type>' ->assign 0x55f825a1ae08
|     | `-CXXThisExpr 0x55f825a30c58 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f825a30d80 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f825a30c98 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f825a1aec8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55f825a30d10 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55f825a30cf8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f825a30cb8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f825a1c618 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55f825a30d38 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f825a30cd8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a1af40 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a1b1a8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f825a1b098 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f825a1b110 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825a30ef0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55f825a30ea8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55f825a30dc0 <col:9> '<bound member function type>' ->assign 0x55f825a1ae08
|     | `-CXXThisExpr 0x55f825a30db0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55f825a30ed8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f825a30df0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55f825a1b098 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55f825a30e68 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55f825a30e50 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f825a30e10 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55f825a1c760 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55f825a30e90 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f825a30e30 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a1b110 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a1b378 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f825a1b268 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f825a1b2e0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55f825a231c8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f825a231a8 <col:57> 'int' 0
| `-DeprecatedAttr 0x55f825a1b428 <col:75> "" ""
|-CXXMethodDecl 0x55f825a1b5b8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f825a1b4a8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f825a1b520 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f825a1b668 <col:74> "" ""
|-CXXMethodDecl 0x55f825a1b7f8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55f825a1b6e8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55f825a1b760 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f825a1b8a8 <col:74> "" ""
|-CXXMethodDecl 0x55f825a1b938 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55f825a1b9d8 <col:42> "" ""
|-CXXMethodDecl 0x55f825a1bb80 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55f825a1ba60 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55f825a1bae0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55f825a1bc50 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f825a1bd10 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55f825a1bdb0 <col:20>
| `-OptimizeNoneAttr 0x55f825a1be08 <col:30>
|-CXXMethodDecl 0x55f825a1be50 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f825a1bf10 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55f825a1bfd0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f825a1c090 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55f825a1c150 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f825a1c210 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55f825a1c2d0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55f825a1c390 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55f825a1c4d0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f825a1c440 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825a31038 <col:58, line:512:5>
|   `-ReturnStmt 0x55f825a31028 <line:511:9, col:53>
|     `-BinaryOperator 0x55f825a31008 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55f825a30fd8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f825a30f08 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a1c440 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f825a30ff0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f825a30fb8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f825a30f98 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55f825a30f68 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f825a30f28 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f825a30f80 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f825a30f48 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12570 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f825a1c618 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f825a1c588 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825a31180 <col:58, line:516:5>
|   `-ReturnStmt 0x55f825a31170 <line:515:9, col:53>
|     `-BinaryOperator 0x55f825a31150 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55f825a31120 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f825a31050 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a1c588 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f825a31138 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f825a31100 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f825a310e0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55f825a310b0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f825a31070 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f825a310c8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f825a31090 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12450 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f825a1c760 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f825a1c6d0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825a312c8 <col:58, line:520:5>
|   `-ReturnStmt 0x55f825a312b8 <line:519:9, col:53>
|     `-BinaryOperator 0x55f825a31298 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55f825a31268 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f825a31198 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a1c6d0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f825a31280 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f825a31248 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55f825a31228 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55f825a311f8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f825a311b8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a122a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f825a31210 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f825a311d8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f825a1c8a8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f825a1c818 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825a31410 <col:60, line:524:5>
|   `-ReturnStmt 0x55f825a31400 <line:523:9, col:55>
|     `-BinaryOperator 0x55f825a313e0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55f825a313b0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f825a312e0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a1c818 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f825a313c8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f825a31390 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55f825a31370 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55f825a31340 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f825a31300 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f825a31358 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f825a31320 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12570 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f825a1c9f0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f825a1c960 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825a31558 <col:60, line:528:5>
|   `-ReturnStmt 0x55f825a31548 <line:527:9, col:55>
|     `-BinaryOperator 0x55f825a31528 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55f825a314f8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f825a31428 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a1c960 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f825a31510 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f825a314d8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55f825a314b8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55f825a31488 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f825a31448 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f825a314a0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f825a31468 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12450 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55f825a1cb38 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55f825a1caa8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825a316a0 <col:60, line:532:5>
|   `-ReturnStmt 0x55f825a31690 <line:531:9, col:55>
|     `-BinaryOperator 0x55f825a31670 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55f825a31640 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f825a31570 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a1caa8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f825a31658 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55f825a31620 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55f825a31600 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55f825a315d0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55f825a31590 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a122a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55f825a315e8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55f825a315b0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55f825a12600 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55f825a1cbe0 prev 0x55f825a14070 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f825a1ccd8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55f825a1cd78 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55f825a23218 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f825a235f8 <col:11>
| |-CXXConstructorDecl 0x55f825a232f0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f825a233d8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55f825a23d40 <col:11>
| |-CXXConstructorDecl 0x55f825a23478 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f825a23588 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55f825a25598 <col:11>
| |-CXXDestructorDecl 0x55f825a248a8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55f825724a48 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f825724b58 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55f825725420 <col:11>
| |   `-ReturnStmt 0x55f825725410 <col:11>
| |     `-UnaryOperator 0x55f8257253f8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55f8257253e8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55f825724bc8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55f825724cd8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55f825aaf660 <col:11>
|     `-ReturnStmt 0x55f825aaf650 <col:11>
|       `-UnaryOperator 0x55f825aaf638 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f825aaf628 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55f825a1cde0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55f825a1cee0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55f825a1d0e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a1cec0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55f825a1cea0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55f825a1cf70 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55f825a1d0f8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a1cf50 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55f825a1cf30 <col:23> 'int' 1
| |-EnumConstantDecl 0x55f825a1d000 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55f825a1d110 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a1cfe0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55f825a1cfc0 <col:23> 'int' 2
| `-EnumConstantDecl 0x55f825a1d090 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55f825a1d128 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a1d070 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55f825a1d050 <col:27> 'int' 3
|-CXXMethodDecl 0x55f825a1d168 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55f825a1d230 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55f825a1d438 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55f825a1d2e0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55f825a1d360 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55f825a231e0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55f825a1d648 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55f825a1d4f8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55f825a1d570 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55f825a1d718 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55f825a1d7d8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55f825a1d948 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55f825a1d888 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55f825a1da10 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f825a1dad0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55f825a1db90 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55f825a1dc50 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55f825a1dcf0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55f825a1dd28 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55f825a1dd98 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55f825a316b8 <col:27, line:684:5>
|-CXXMethodDecl 0x55f825a1de58 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55f825a316c8 <col:27, line:696:5>
|-CXXMethodDecl 0x55f825a1e058 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f825a1df08 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55f825a1df80 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825a31850 <col:66, line:700:5>
|   `-ReturnStmt 0x55f825a31840 <line:699:9, col:31>
|     `-CallExpr 0x55f825a317e0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55f825a317c8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f825a31778 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55f82589ef98 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55f825a31810 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55f825a31738 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f825a1df08 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55f825a31828 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f825a31758 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a1df80 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a1e3c8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55f825a1e118 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55f825a1e190 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55f825a1e208 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55f825a1e280 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825a31ba0 <col:64, line:707:5>
|   |-DeclStmt 0x55f825a318e0 <line:704:9, col:24>
|   | `-VarDecl 0x55f825a31878 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55f825a31af0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55f825a318f8 <col:9> 'int32_t':'int' lvalue ParmVar 0x55f825a1e190 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55f825a31ad8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55f825a31a70 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55f825a31a58 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a319d8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55f8258a45e8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55f825a31aa8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55f825a31978 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55f825a1e208 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55f825a31ac0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55f825a31998 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825a1e280 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55f825a319b8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55f825a31878 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55f825a31b80 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55f825a31b10 <col:9> 'int32_t':'int' lvalue ParmVar 0x55f825a1e118 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55f825a31b68 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55f825a31b50 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55f825a31b30 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55f825a31878 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55f825a1e668 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55f825a1e498 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55f825a1e510 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55f825a1e588 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55f825a1e908 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55f825a1e730 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55f825a1e7a8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55f825a1e820 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55f825a1ea98 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55f825a1e9d0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55f825a224e0 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55f825a1eb50 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55f825a1ebc8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55f825a227a8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55f825a226e8 parent 0x55f825516278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f825a225a0 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55f825a22618 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55f825a229c8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55f825a22908 parent 0x55f825516278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f825a227f8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55f825a22870 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55f825a22b90 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55f825a22ad8 parent 0x55f825516278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55f825a22a18 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55f825a22e18 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55f825a22d58 parent 0x55f825516278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f825a22c08 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55f825a22c80 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55f825a23038 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55f825a22f78 parent 0x55f825516278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55f825a22e68 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55f825a22ee0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55f825a24750 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825a24838 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55f825a1dd28 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f825a252a8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55f825a25260 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55f825a1dd28
| |     `-DeclRefExpr 0x55f825a25240 <col:7> 'const Timestamp' lvalue ParmVar 0x55f825a24838 '' 'const Timestamp &'
| `-CompoundStmt 0x55f825a25308 <col:7>
|-CXXConstructorDecl 0x55f825a249b8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825a24ac8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55f825a1dd28 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55f825a255a8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55f825a25550 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55f825a1dd28
| |     `-CXXStaticCastExpr 0x55f825a25520 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55f825a254f0 <col:7> 'Timestamp' lvalue ParmVar 0x55f825a24ac8 '' 'Timestamp &&'
| `-CompoundStmt 0x55f825a25608 <col:7>
|-CXXDestructorDecl 0x55f825a24b78 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f8257248a0 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f8257249a8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55f825725498 <col:7>
|   |-CXXMemberCallExpr 0x55f825725438 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55f825725378 <col:7> '<bound member function type>' .operator= 0x55f825724a48
|   | | `-MemberExpr 0x55f825725288 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55f825a1dd28
|   | |   `-CXXThisExpr 0x55f825725278 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55f825725348 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55f825a1dd28
|   |   `-DeclRefExpr 0x55f825725328 <col:7> 'const Timestamp' lvalue ParmVar 0x55f8257249a8 '' 'const Timestamp &'
|   `-ReturnStmt 0x55f825725488 <col:7>
|     `-UnaryOperator 0x55f825725470 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f825725460 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55f825724d48 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f825724e58 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55f825aaf6d8 <col:7>
    |-CXXMemberCallExpr 0x55f825aaf678 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55f825aaf5e0 <col:7> '<bound member function type>' .operator= 0x55f825724bc8
    | | `-MemberExpr 0x55f825aaf4b0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55f825a1dd28
    | |   `-CXXThisExpr 0x55f825aaf4a0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55f825aaf5b0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55f825a1dd28
    |   `-CXXStaticCastExpr 0x55f825aaf580 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55f825aaf550 <col:7> 'Timestamp' lvalue ParmVar 0x55f825724e58 '' 'Timestamp &&'
    `-ReturnStmt 0x55f825aaf6c8 <col:7>
      `-UnaryOperator 0x55f825aaf6b0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55f825aaf6a0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825aac6b8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55f825aac7e8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55f825aad2d8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825a06b88 prev 0x55f825a86d50 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 referenced class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f825a06c80 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55f825a06d10 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55f825a06d70 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55f825a06e18 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55f825a06f38 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55f825a070d8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55f825a07018 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55f825a07328 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55f825a07198 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55f825a07218 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55f825a074b8 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55f825a073f0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55f825a07638 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55f825a07578 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55f825a077e8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55f825a07728 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55f825a078e0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55f825aad4b0 <col:21, line:58:5>
|   `-IfStmt 0x55f825aad498 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55f825aad400 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55f825aad3d0 <col:6> '<bound member function type>' ->scheduled 0x55f825a08138
|     |   `-ImplicitCastExpr 0x55f825aad420 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55f825aad3c0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55f825aad478 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55f825aad448 <col:6> '<bound member function type>' ->unschedule 0x55f825aabb60
|         `-CXXThisExpr 0x55f825aad438 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55f825a079e0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55f825aad650 <col:26, line:65:5>
|   |-BinaryOperator 0x55f825aad570 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f825aad508 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f825aac7e8
|   | | `-MemberExpr 0x55f825aad4d8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f825aac8a8
|   | |   `-CXXThisExpr 0x55f825aad4c8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f825aad558 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f825aad538 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55f825aacd08 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55f825aad630 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55f825aad5a0 <col:2> 'void *' lvalue ->_thunk 0x55f825aac928
|     | `-CXXThisExpr 0x55f825aad590 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55f825aad608 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55f825aad5d0 <col:20> 'int' 1
|-CXXMethodDecl 0x55f825a07b20 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55f825a07a90 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55f825aad7b0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55f825aad6a0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55f825aad670 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55f825a07a90 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55f825aad790 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55f825aad760 <col:2> '<bound member function type>' ->assign 0x55f825a079e0
|       `-CXXThisExpr 0x55f825aad750 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55f825a07cf0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55f825a07bd8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55f825a07c58 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55f825aad930 <col:58, line:79:5>
|   |-BinaryOperator 0x55f825aad878 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f825aad810 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f825aac7e8
|   | | `-MemberExpr 0x55f825aad7e0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f825aac8a8
|   | |   `-CXXThisExpr 0x55f825aad7d0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f825aad860 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f825aad840 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55f825a07bd8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55f825aad910 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55f825aad8a8 <col:2> 'void *' lvalue ->_thunk 0x55f825aac928
|     | `-CXXThisExpr 0x55f825aad898 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55f825aad8f8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55f825aad8d8 <col:11> 'void *' lvalue ParmVar 0x55f825a07c58 'user_data' 'void *'
|-CXXMethodDecl 0x55f825a07e40 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55f825a07db0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55f825aadac8 <col:35, line:87:5>
|   |-BinaryOperator 0x55f825aad9f8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f825aad990 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f825aac7e8
|   | | `-MemberExpr 0x55f825aad960 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f825aac8a8
|   | |   `-CXXThisExpr 0x55f825aad950 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f825aad9e0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f825aad9c0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55f825aacee0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55f825aadaa8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55f825aada28 <col:2> 'void *' lvalue ->_thunk 0x55f825aac928
|     | `-CXXThisExpr 0x55f825aada18 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55f825aada90 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55f825aada78 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55f825aada58 <col:11> 'Element *' lvalue ParmVar 0x55f825a07db0 'element' 'Element *'
|-CXXMethodDecl 0x55f825a07f88 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55f825a07ef8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55f825aadc60 <col:29, line:94:5>
|   |-BinaryOperator 0x55f825aadb90 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55f825aadb28 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55f825aac7e8
|   | | `-MemberExpr 0x55f825aadaf8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55f825aac8a8
|   | |   `-CXXThisExpr 0x55f825aadae8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55f825aadb78 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55f825aadb58 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55f825aad0b8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55f825aadc40 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55f825aadbc0 <col:2> 'void *' lvalue ->_thunk 0x55f825aac928
|     | `-CXXThisExpr 0x55f825aadbb0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55f825aadc28 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55f825aadc10 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55f825aadbf0 <col:11> 'Task *' lvalue ParmVar 0x55f825a07ef8 'task' 'Task *'
|-CXXMethodDecl 0x55f825a08078 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55f825aadd40 <col:37, line:100:5>
|   `-ReturnStmt 0x55f825aadd30 <line:99:2, col:19>
|     `-BinaryOperator 0x55f825aadd10 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55f825aadce0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55f825aadc90 <col:9> 'Element *const' lvalue ->_owner 0x55f825aac988
|       |   `-CXXThisExpr 0x55f825aadc80 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55f825aadcf8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55f825aadcc0 <col:19> 'int' 0
|-CXXMethodDecl 0x55f825a08138 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55f825aade00 <col:35, line:105:5>
|   `-ReturnStmt 0x55f825aaddf0 <line:104:2, col:23>
|     `-BinaryOperator 0x55f825aaddd0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55f825aaddb8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55f825aadd68 <col:9> 'const int' lvalue ->_schedpos1 0x55f825aac608
|       |   `-CXXThisExpr 0x55f825aadd58 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55f825aadd98 <col:23> 'int' 0
|-CXXMethodDecl 0x55f825a081f8 <line:116:5, line:118:5> line:116:29 expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55f825aade68 <col:51, line:118:5>
|   `-ReturnStmt 0x55f825aade58 <line:117:2, col:9>
|     `-MemberExpr 0x55f825aade28 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55f825aac668
|       `-CXXThisExpr 0x55f825aade18 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f825a082b8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55f825aae3c0 <col:37, line:136:5>
|   `-IfStmt 0x55f825aae398 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55f825aadf28 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55f825aadf10 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55f825aadef0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55f825aadec0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55f825a156c8
|     |       `-MemberExpr 0x55f825aade90 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55f825aac668
|     |         `-CXXThisExpr 0x55f825aade80 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55f825aae308 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55f825aae2f0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55f825aae2c0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55f825aae2a8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55f825aae270 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55f825aae258 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55f825aae238 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f825a40dd0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55f825aae1d8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55f825aae1c0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55f825aae0e8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55f825aae0d0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55f825aae0b0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f825a40a90 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55f825aae050 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55f825aadf50 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55f825aac668
|     |         |     |   `-CXXThisExpr 0x55f825aadf40 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55f825aae098 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55f825aae080 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55f825aae030 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55f825aae018 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55f825aadfb8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55f825885e60 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55f825aae220 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55f825aae208 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55f825aae1a0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55f825aae188 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55f825aae158 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55f825886b30 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55f825aae388 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55f825aae358 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55f825aae328 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55f825aac668
|           `-CXXThisExpr 0x55f825aae318 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f825a08378 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55f825aae4a8 <col:35, line:141:5>
|   `-ReturnStmt 0x55f825aae498 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55f825aae460 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55f825aae430 <col:9, col:17> '<bound member function type>' ->router 0x55f825a984f0
|         `-ImplicitCastExpr 0x55f825aae480 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55f825aae418 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55f825aae3e8 <col:9> 'Element *const' lvalue ->_owner 0x55f825aac988
|               `-CXXThisExpr 0x55f825aae3d8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f825a08438 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55f825aae528 <col:37, line:146:5>
|   `-ReturnStmt 0x55f825aae518 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55f825aae500 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55f825aae4d0 <col:9> 'Element *const' lvalue ->_owner 0x55f825aac988
|         `-CXXThisExpr 0x55f825aae4c0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f825a084f8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55f825aae5a8 <col:41, line:151:5>
|   `-ReturnStmt 0x55f825aae598 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55f825aae580 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55f825aae550 <col:9> 'RouterThread *const' lvalue ->_thread 0x55f825aac9e8
|         `-CXXThisExpr 0x55f825aae540 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55f825a085c0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55f825aaab80 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55f825a08670 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55f825a086e8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f825aad2c8 <col:50> 'bool' false
|-CXXMethodDecl 0x55f825aaad08 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55f825aaac40 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55f825aaae50 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55f825aaadc0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55f825aaaf98 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55f825aaaf08 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55f825aab0e0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55f825aab050 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55f825aab228 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55f825aab198 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55f825aab2f0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55f825aae710 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55f825aae6f8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55f825aae6a0 <col:2, col:47> 'void'
|       |-MemberExpr 0x55f825aae5d0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f825aaae50
|       | `-CXXThisExpr 0x55f825aae5c0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f825aae6e0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f825aae6c8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55f825aae680 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55f825aae668 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55f825aae638 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55f825886b30 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55f825aab430 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55f825aab3a0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55f825aab578 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f825aab4e8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825aae898 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55f825aae880 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55f825aae828 <col:2, col:40> 'void'
|       |-MemberExpr 0x55f825aae738 <col:2> '<bound member function type>' ->schedule_after 0x55f825aab430
|       | `-CXXThisExpr 0x55f825aae728 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f825aae868 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f825aae850 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55f825aae7e8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55f825aae7b8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55f825aae778 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825aab4e8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55f825aae7d0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55f825aae798 <col:38> 'int' 0
|-CXXMethodDecl 0x55f825aab6c0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f825aab630 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825aaeb08 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55f825aaeaf0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55f825aaea98 <col:2, col:49> 'void'
|       |-MemberExpr 0x55f825aae8c0 <col:2> '<bound member function type>' ->schedule_after 0x55f825aab430
|       | `-CXXThisExpr 0x55f825aae8b0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f825aaead8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f825aaeac0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55f825aaea40 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55f825aaea28 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f825aae998 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55f825a174b8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55f825aaea80 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55f825aaea68 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55f825aae978 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825aab630 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825aab808 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55f825aab778 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55f825aaece8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55f825aaecd0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55f825aaec78 <col:2, col:38> 'void'
|       |-MemberExpr 0x55f825aaeb30 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f825aaae50
|       | `-CXXThisExpr 0x55f825aaeb20 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f825aaecb8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f825aaeca0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55f825aaec40 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55f825aaec28 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f825aaec08 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f825a40a90 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55f825aaebd8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55f825aaebc0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55f825aaeb70 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55f825aac668
|             |     `-CXXThisExpr 0x55f825aaeb60 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55f825aaeba0 <col:33> 'const Timestamp' lvalue ParmVar 0x55f825aab778 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55f825aab950 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f825aab8c0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825aaefc0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55f825aaefa8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55f825aaef50 <col:2, col:79> 'void'
|       |-MemberExpr 0x55f825aaed10 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f825aaae50
|       | `-CXXThisExpr 0x55f825aaed00 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f825aaef90 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f825aaef78 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55f825aaef10 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55f825aaee48 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55f825aaee30 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55f825aaedc0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55f825aaed90 <col:31, col:41> '<bound member function type>' .sec 0x55f825888628
|             | |     `-ImplicitCastExpr 0x55f825aaede0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55f825aaed60 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55f825aac668
|             | |         `-CXXThisExpr 0x55f825aaed50 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55f825aaee18 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55f825aaedf8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825aab8c0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55f825aaeed8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55f825aaeea8 <col:60, col:70> '<bound member function type>' .subsec 0x55f825888d20
|                 `-ImplicitCastExpr 0x55f825aaeef8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55f825aaee78 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55f825aac668
|                     `-CXXThisExpr 0x55f825aaee68 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55f825aaba98 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f825aaba08 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55f825aaf2f8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55f825aaf2e0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55f825aaf288 <col:2, col:65> 'void'
|       |-MemberExpr 0x55f825aaefe8 <col:2> '<bound member function type>' ->schedule_at_steady 0x55f825aaae50
|       | `-CXXThisExpr 0x55f825aaefd8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f825aaf2c8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55f825aaf2b0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55f825aaf250 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55f825aaf238 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f825aaf218 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55f825a40a90 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55f825aaf1b8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55f825aaf1a0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55f825aaf028 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55f825aac668
|             |     `-CXXThisExpr 0x55f825aaf018 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55f825aaf200 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55f825aaf1e8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55f825aaf148 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55f825aaf130 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55f825aaf100 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55f825a174b8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55f825aaf188 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55f825aaf170 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55f825aaf0e0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55f825aaba08 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825aabb60 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55f825aabc20 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55f825aaf7c0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55f825aaf350 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55f825aaf320 <col:2> '<bound member function type>' ->unschedule 0x55f825aabb60
|   |   `-CXXThisExpr 0x55f825aaf310 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55f825aaf7a8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55f825aaf770 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55f825aaf758 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f825aaf408 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55f825724d48 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55f825aaf380 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55f825aac668
|       | `-CXXThisExpr 0x55f825aaf370 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55f825aaf3f0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55f825aaf3c0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55f825aabce0 <line:304:5, line:310:5> line:304:29 adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55f825aafb18 <col:42, line:310:5>
|   |-IfStmt 0x55f825aaf960 <line:306:2, line:307:23>
|   | |-CallExpr 0x55f825aaf890 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55f825aaf878 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55f825aaf818 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55f825a325a0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55f825aaf950 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55f825aaf938 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55f825aaf908 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55f825aaf8f0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55f825aaf8c0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55f825aafb08 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55f825aafaf0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55f825aafac0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f825aafaa8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55f825aafa68 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55f825aafa50 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55f825aafa20 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55f825a177d0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55f825aafa90 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55f825aafa00 <col:30> 'int' 500
|-CXXMethodDecl 0x55f825aabe20 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f825aabd90 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f825aabec8 <col:69> "" ""
|-CXXMethodDecl 0x55f825aabfd8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f825aabf48 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f825aac080 <col:70> "" ""
|-CXXMethodDecl 0x55f825aac190 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f825aac100 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f825aac238 <col:71> "" ""
|-CXXMethodDecl 0x55f825aac348 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55f825aac2b8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f825aac3f0 <col:72> "" ""
|-EnumDecl 0x55f825aac460 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55f825aac560 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55f825aac5b0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825aac540 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55f825aac520 <col:25> 'int' 1
|-AccessSpecDecl 0x55f825aac5c8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55f825aac608 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55f825aac668 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55f825aac6b8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55f825aac7e8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55f825aad2d8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55f825aac8a8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55f825aac928 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55f825aac988 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55f825aac9e8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55f825aacb38 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55f825aaca48 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55f825aacd08 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f825aacbf0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55f825aacc70 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55f825aacee0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f825aacdc8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55f825aace48 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55f825aad0b8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f825aacfa0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55f825aad020 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55f825aad288 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825b619f8 prev 0x55f825b324d8 <../elements/ip/iprewriterbase.hh:81:1, line:182:1> line:81:7 referenced class IPRewriterBase definition
|-DefinitionData polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55f825b61b30 <col:1, col:7> col:7 implicit referenced class IPRewriterBase
|-AccessSpecDecl 0x55f825b61bc0 <col:41, col:47> col:41 public
|-TypedefDecl 0x55f825b61d20 <line:83:5, col:44> col:44 referenced Map 'HashContainer<IPRewriterEntry>':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55f825b61c80 'HashContainer<IPRewriterEntry>' sugar HashContainer
|   |-TemplateArgument type 'IPRewriterEntry'
|   `-RecordType 0x55f825b31050 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55f825b30f50 'HashContainer'
|-EnumDecl 0x55f825b61d78 <line:84:5, line:86:5> line:84:5
| |-EnumConstantDecl 0x55f825b61e98 <line:85:2, col:13> col:2 rw_drop 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
| | `-ConstantExpr 0x55f825b61e78 <col:12, col:13> 'int' Int: -1
| |   `-UnaryOperator 0x55f825b61e60 <col:12, col:13> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f825b61e40 <col:13> 'int' 1
| `-EnumConstantDecl 0x55f825b61f40 <col:16, col:29> col:16 rw_addmap 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
|   `-ConstantExpr 0x55f825b61f20 <col:28, col:29> 'int' Int: -2
|     `-UnaryOperator 0x55f825b61f08 <col:28, col:29> 'int' prefix '-'
|       `-IntegerLiteral 0x55f825b61ee8 <col:29> 'int' 2
|-CXXConstructorDecl 0x55f825b61fc8 <line:88:5, col:20> col:5 IPRewriterBase 'void ()'
|-CXXDestructorDecl 0x55f825b620b8 <line:89:5, col:21> col:5 ~IPRewriterBase 'void ()' noexcept-unevaluated 0x55f825b620b8
| `-Overrides: [ 0x55f825a87408 Element::~Element 'void ()' ]
|-EnumDecl 0x55f825b621a0 <line:91:5, line:96:5> line:91:10 ConfigurePhase
| |-EnumConstantDecl 0x55f825b622a0 <line:92:2, col:29> col:2 CONFIGURE_PHASE_PATTERNS 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f825b62550 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825b62280 <col:29> 'Element::ConfigurePhase' Int: 20
| |     `-DeclRefExpr 0x55f825b62260 <col:29> 'Element::ConfigurePhase' EnumConstant 0x55f825a89a50 'CONFIGURE_PHASE_INFO' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x55f825b62330 <line:93:2, col:29> col:2 referenced CONFIGURE_PHASE_REWRITER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f825b62568 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825b62310 <col:29> 'Element::ConfigurePhase' Int: 100
| |     `-DeclRefExpr 0x55f825b622f0 <col:29> 'Element::ConfigurePhase' EnumConstant 0x55f825a89b70 'CONFIGURE_PHASE_DEFAULT' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x55f825b62418 <line:94:2, col:54> col:2 CONFIGURE_PHASE_MAPPER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55f825b62580 <col:27, col:54> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825b623f8 <col:27, col:54> 'int' Int: 99
| |     `-BinaryOperator 0x55f825b623d8 <col:27, col:54> 'int' '-'
| |       |-ImplicitCastExpr 0x55f825b623c0 <col:27> 'int' <IntegralCast>
| |       | `-DeclRefExpr 0x55f825b62380 <col:27> 'Element::ConfigurePhase' EnumConstant 0x55f825b62330 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
| |       `-IntegerLiteral 0x55f825b623a0 <col:54> 'int' 1
| `-EnumConstantDecl 0x55f825b62500 <line:95:2, col:52> col:2 CONFIGURE_PHASE_USER 'IPRewriterBase::ConfigurePhase'
|   `-ImplicitCastExpr 0x55f825b62598 <col:25, col:52> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825b624e0 <col:25, col:52> 'int' Int: 101
|       `-BinaryOperator 0x55f825b624c0 <col:25, col:52> 'int' '+'
|         |-ImplicitCastExpr 0x55f825b624a8 <col:25> 'int' <IntegralCast>
|         | `-DeclRefExpr 0x55f825b62468 <col:25> 'Element::ConfigurePhase' EnumConstant 0x55f825b62330 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|         `-IntegerLiteral 0x55f825b62488 <col:52> 'int' 1
|-CXXMethodDecl 0x55f825b62600 <line:98:5, col:54> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55f825a88930 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55f825b7aec0 <col:36, col:54>
|   `-ReturnStmt 0x55f825b7aeb0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55f825b7ae98 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55f825b7ae78 <col:45> 'const char [6]' lvalue "1-/1-"
|-CXXMethodDecl 0x55f825b626c8 <line:99:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55f825a88d38 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55f825b7af20 <col:36, col:51>
|   `-ReturnStmt 0x55f825b7af10 <col:38, col:45>
|     `-ImplicitCastExpr 0x55f825b7aef8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55f825b7aed8 <col:45> 'const char []' lvalue Var 0x55f825a88e80 'PUSH' 'const char []'
|-CXXMethodDecl 0x55f825b62790 <line:101:5, col:68> col:9 configure_phase 'int () const'
| |-Overrides: [ 0x55f825a89cf0 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x55f825b7af80 <col:33, col:68>
|   `-ReturnStmt 0x55f825b7af70 <col:35, col:42>
|     `-ImplicitCastExpr 0x55f825b7af58 <col:42> 'int' <IntegralCast>
|       `-DeclRefExpr 0x55f825b7af38 <col:42> 'IPRewriterBase::ConfigurePhase' EnumConstant 0x55f825b62330 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|-CXXMethodDecl 0x55f825b62a60 <line:102:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55f825a8a130 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55f825b62910 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x55f825b62988 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f825b62bb8 <line:103:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55f825a8a380 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55f825b62b20 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f825b62d00 <line:104:5, col:54> col:10 add_rewriter_handlers 'void (bool)'
| `-ParmVarDecl 0x55f825b62c70 <col:32, col:37> col:37 writable_patterns 'bool'
|-CXXMethodDecl 0x55f825b62e48 <line:105:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55f825a8ab98 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55f825b62db8 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x55f825b62f38 <line:107:5, line:109:5> line:107:27 flow_heap 'const IPRewriterHeap *() const'
| `-CompoundStmt 0x55f825b7b018 <col:45, line:109:5>
|   `-ReturnStmt 0x55f825b7b008 <line:108:2, col:9>
|     `-ImplicitCastExpr 0x55f825b7aff0 <col:9> 'const IPRewriterHeap *' <NoOp>
|       `-ImplicitCastExpr 0x55f825b7afd8 <col:9> 'IPRewriterHeap *' <LValueToRValue>
|         `-MemberExpr 0x55f825b7afa8 <col:9> 'IPRewriterHeap *const' lvalue ->_heap 0x55f825b781e0
|           `-CXXThisExpr 0x55f825b7af98 <col:9> 'const IPRewriterBase *' implicit this
|-CXXMethodDecl 0x55f825b630b8 <line:110:5, line:112:5> line:110:21 reply_element 'IPRewriterBase *(int) const'
| |-ParmVarDecl 0x55f825b62ff0 <col:35, col:39> col:39 used input 'int'
| `-CompoundStmt 0x55f825b7b1f0 <col:52, line:112:5>
|   `-ReturnStmt 0x55f825b7b1e0 <line:111:2, col:29>
|     `-ImplicitCastExpr 0x55f825b7b1c8 <col:9, col:29> 'IPRewriterBase *' <LValueToRValue>
|       `-MemberExpr 0x55f825b7b198 <col:9, col:29> 'IPRewriterBase *const' lvalue .reply_element 0x55f825b4e440
|         `-CXXOperatorCallExpr 0x55f825b7b160 <col:9, col:27> 'const IPRewriterInput':'const IPRewriterInput' lvalue
|           |-ImplicitCastExpr 0x55f825b7b148 <col:21, col:27> 'const IPRewriterInput &(*)(Vector::size_type) const' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x55f825b7b0d0 <col:21, col:27> 'const IPRewriterInput &(Vector::size_type) const' lvalue CXXMethod 0x55f825b75ae8 'operator[]' 'const IPRewriterInput &(Vector::size_type) const'
|           |-MemberExpr 0x55f825b7b040 <col:9> 'const Vector<IPRewriterInput>':'const Vector<IPRewriterInput>' lvalue ->_input_specs 0x55f825b78180
|           | `-CXXThisExpr 0x55f825b7b030 <col:9> 'const IPRewriterBase *' implicit this
|           `-ImplicitCastExpr 0x55f825b7b0b8 <col:22> 'int' <LValueToRValue>
|             `-DeclRefExpr 0x55f825b7b070 <col:22> 'int' lvalue ParmVar 0x55f825b62ff0 'input' 'int'
|-CXXMethodDecl 0x55f825b633f0 <line:113:5, line:115:5> line:113:45 get_map 'HashContainer<IPRewriterEntry> *(int)' virtual
| |-ParmVarDecl 0x55f825b63278 <col:53, col:57> col:57 used mapid 'int'
| `-CompoundStmt 0x55f825b7b560 <col:64, line:115:5>
|   `-ReturnStmt 0x55f825b7b550 <line:114:2, col:84>
|     `-ConditionalOperator 0x55f825b7b520 <col:9, col:84> 'IPRewriterBase::Map *'
|       |-ImplicitCastExpr 0x55f825b7b4f0 <col:9, col:72> 'bool' <IntegralToBoolean>
|       | `-CallExpr 0x55f825b7b418 <col:9, col:72> 'long'
|       |   |-ImplicitCastExpr 0x55f825b7b400 <col:9> 'long (*)(long, long) noexcept' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x55f825b7b208 <col:9> '<builtin fn type>' Function 0x55f8258480a8 '__builtin_expect' 'long (long, long) noexcept'
|       |   |-ImplicitCastExpr 0x55f825b7b448 <col:26, col:68> 'long' <IntegralCast>
|       |   | `-UnaryOperator 0x55f825b7b3c8 <col:26, col:68> 'bool' prefix '!' cannot overflow
|       |   |   `-UnaryOperator 0x55f825b7b3b0 <col:27, col:68> 'bool' prefix '!' cannot overflow
|       |   |     `-ParenExpr 0x55f825b7b390 <col:28, col:68> 'bool'
|       |   |       `-BinaryOperator 0x55f825b7b370 <col:29, col:55> 'bool' '=='
|       |   |         |-ImplicitCastExpr 0x55f825b7b340 <col:29> 'int' <LValueToRValue>
|       |   |         | `-DeclRefExpr 0x55f825b7b228 <col:29> 'int' lvalue ParmVar 0x55f825b63278 'mapid' 'int'
|       |   |         `-ImplicitCastExpr 0x55f825b7b358 <col:38, col:55> 'int' <IntegralCast>
|       |   |           `-DeclRefExpr 0x55f825b7b280 <col:38, col:55> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55f825b4ea80 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|       |   `-ImplicitCastExpr 0x55f825b7b460 <col:71> 'long' <IntegralCast>
|       |     `-IntegerLiteral 0x55f825b7b3e0 <col:71> 'int' 1
|       |-UnaryOperator 0x55f825b7b4b8 <col:76, col:77> 'IPRewriterBase::Map *' prefix '&' cannot overflow
|       | `-MemberExpr 0x55f825b7b488 <col:77> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_map 0x55f825b6b998
|       |   `-CXXThisExpr 0x55f825b7b478 <col:77> 'IPRewriterBase *' implicit this
|       `-ImplicitCastExpr 0x55f825b7b508 <col:84> 'IPRewriterBase::Map *' <NullToPointer>
|         `-IntegerLiteral 0x55f825b7b4d0 <col:84> 'int' 0
|-EnumDecl 0x55f825b63498 <line:117:5, line:119:5> line:117:5
| |-EnumConstantDecl 0x55f825b635b8 <line:118:2, col:21> col:2 get_entry_check 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
| | `-ConstantExpr 0x55f825b63598 <col:20, col:21> 'int' Int: -1
| |   `-UnaryOperator 0x55f825b63580 <col:20, col:21> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f825b63560 <col:21> 'int' 1
| `-EnumConstantDecl 0x55f825b63660 <col:24, col:43> col:24 get_entry_reply 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
|   `-ConstantExpr 0x55f825b63640 <col:42, col:43> 'int' Int: -2
|     `-UnaryOperator 0x55f825b63628 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x55f825b63608 <col:43> 'int' 2
|-CXXMethodDecl 0x55f825b638a8 <line:120:5, line:121:21> line:120:30 get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)' virtual
| |-ParmVarDecl 0x55f825b636c8 <col:40, col:44> col:44 ip_p 'int'
| |-ParmVarDecl 0x55f825b63740 <col:50, col:66> col:66 flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55f825b637c0 <line:121:12, col:16> col:16 input 'int'
|-CXXMethodDecl 0x55f825b63bd8 <line:122:5, line:124:24> line:122:30 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' virtual pure
| |-ParmVarDecl 0x55f825b63978 <col:39, col:43> col:43 ip_p 'int'
| |-ParmVarDecl 0x55f825b639f0 <col:49, col:65> col:65 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55f825b63a68 <line:123:11, col:27> col:27 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55f825b63ae8 <line:124:11, col:15> col:15 input 'int'
|-CXXMethodDecl 0x55f825b63d38 <line:125:5, col:55> col:18 destroy_flow 'void (IPRewriterFlow *)' virtual pure
| `-ParmVarDecl 0x55f825b63ca8 <col:31, col:47> col:47 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x55f825b63ee8 <line:126:5, line:128:5> line:126:29 best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' virtual
| |-ParmVarDecl 0x55f825b63df0 <col:48, col:70> col:70 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x55f825b7b7b0 <col:76, line:128:5>
|   `-ReturnStmt 0x55f825b7b7a0 <line:127:2, col:52>
|     `-BinaryOperator 0x55f825b7b780 <col:9, col:52> 'unsigned int' '-'
|       |-BinaryOperator 0x55f825b7b6b0 <col:9, col:37> 'unsigned int' '+'
|       | |-CXXMemberCallExpr 0x55f825b7b5e0 <col:9, col:22> 'click_jiffies_t':'unsigned int'
|       | | `-MemberExpr 0x55f825b7b5b0 <col:9, col:15> '<bound member function type>' ->expiry 0x55f825b35a10
|       | |   `-ImplicitCastExpr 0x55f825b7b598 <col:9> 'const IPRewriterFlow *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x55f825b7b578 <col:9> 'const IPRewriterFlow *' lvalue ParmVar 0x55f825b63df0 'flow' 'const IPRewriterFlow *'
|       | `-ImplicitCastExpr 0x55f825b7b698 <col:26, col:37> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x55f825b7b678 <col:26, col:37> 'uint32_t':'unsigned int' lvalue
|       |     |-ImplicitCastExpr 0x55f825b7b660 <col:26> 'uint32_t *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x55f825b7b610 <col:26> 'uint32_t [2]' lvalue ->_timeouts 0x55f825b782c8
|       |     |   `-CXXThisExpr 0x55f825b7b600 <col:26> 'IPRewriterBase *' implicit this
|       |     `-IntegerLiteral 0x55f825b7b640 <col:36> 'int' 0
|       `-ImplicitCastExpr 0x55f825b7b768 <col:41, col:52> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-ArraySubscriptExpr 0x55f825b7b748 <col:41, col:52> 'uint32_t':'unsigned int' lvalue
|           |-ImplicitCastExpr 0x55f825b7b730 <col:41> 'uint32_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x55f825b7b6e0 <col:41> 'uint32_t [2]' lvalue ->_timeouts 0x55f825b782c8
|           |   `-CXXThisExpr 0x55f825b7b6d0 <col:41> 'IPRewriterBase *' implicit this
|           `-IntegerLiteral 0x55f825b7b710 <col:51> 'int' 1
|-CXXMethodDecl 0x55f825b640c8 <line:130:5, col:43> col:9 llrpc 'int (unsigned int, void *)'
| |-Overrides: [ 0x55f825a93ee0 Element::llrpc 'int (unsigned int, void *)' ]
| |-ParmVarDecl 0x55f825b63fa8 <col:15, col:24> col:24 command 'unsigned int'
| `-ParmVarDecl 0x55f825b64028 <col:33, col:39> col:39 data 'void *'
|-AccessSpecDecl 0x55f825b64178 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x55f825b6b998 <line:134:5, col:9> col:9 referenced _map 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FieldDecl 0x55f825b78180 <line:136:5, col:29> col:29 referenced _input_specs 'Vector<IPRewriterInput>':'Vector<IPRewriterInput>'
|-FieldDecl 0x55f825b781e0 <line:138:5, col:21> col:21 referenced _heap 'IPRewriterHeap *'
|-FieldDecl 0x55f825b782c8 <line:139:5, col:25> col:14 referenced _timeouts 'uint32_t [2]'
|-FieldDecl 0x55f825b78328 <line:140:5, col:14> col:14 _gc_interval_sec 'uint32_t':'unsigned int'
|-FieldDecl 0x55f825b78388 <line:141:5, col:11> col:11 _gc_timer 'Timer'
|-EnumDecl 0x55f825b783d8 <line:143:5, line:147:5> line:143:5
| |-EnumConstantDecl 0x55f825b784e0 <line:144:2, col:20> col:2 default_timeout 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x55f825b78690 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825b784c0 <col:20> 'int' Int: 300
| |     `-IntegerLiteral 0x55f825b784a0 <col:20> 'int' 300
| |-EnumConstantDecl 0x55f825b78570 <line:145:2, col:22> col:2 default_guarantee 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x55f825b786a8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825b78550 <col:22> 'int' Int: 5
| |     `-IntegerLiteral 0x55f825b78530 <col:22> 'int' 5
| `-EnumConstantDecl 0x55f825b78640 <line:146:2, col:29> col:2 default_gc_interval 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
|   `-ImplicitCastExpr 0x55f825b786c0 <col:24, col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825b78620 <col:24, col:29> 'int' Int: 900
|       `-BinaryOperator 0x55f825b78600 <col:24, col:29> 'int' '*'
|         |-IntegerLiteral 0x55f825b785c0 <col:24> 'int' 60
|         `-IntegerLiteral 0x55f825b785e0 <col:29> 'int' 15
|-CXXMethodDecl 0x55f825b78828 <line:149:5, line:151:5> line:149:21 relevant_timeout 'uint32_t (const uint32_t *)' static
| |-ParmVarDecl 0x55f825b78738 <col:38, col:63> col:53 used timeouts 'const uint32_t *':'const uint32_t *'
| `-CompoundStmt 0x55f825b7b9b8 <col:66, line:151:5>
|   `-ReturnStmt 0x55f825b7b9a8 <line:150:2, col:47>
|     `-ImplicitCastExpr 0x55f825b7b990 <col:9, col:47> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-ConditionalOperator 0x55f825b7b960 <col:9, col:47> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55f825b7b948 <col:9, col:19> 'bool' <IntegralToBoolean>
|         | `-ImplicitCastExpr 0x55f825b7b930 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55f825b7b820 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |     |-ImplicitCastExpr 0x55f825b7b808 <col:9> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         |     | `-DeclRefExpr 0x55f825b7b7c8 <col:9> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55f825b78738 'timeouts' 'const uint32_t *':'const uint32_t *'
|         |     `-IntegerLiteral 0x55f825b7b7e8 <col:18> 'int' 1
|         |-ArraySubscriptExpr 0x55f825b7b898 <col:23, col:33> 'const uint32_t':'const unsigned int' lvalue
|         | |-ImplicitCastExpr 0x55f825b7b880 <col:23> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f825b7b840 <col:23> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55f825b78738 'timeouts' 'const uint32_t *':'const uint32_t *'
|         | `-IntegerLiteral 0x55f825b7b860 <col:32> 'int' 1
|         `-ArraySubscriptExpr 0x55f825b7b910 <col:37, col:47> 'const uint32_t':'const unsigned int' lvalue
|           |-ImplicitCastExpr 0x55f825b7b8f8 <col:37> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|           | `-DeclRefExpr 0x55f825b7b8b8 <col:37> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55f825b78738 'timeouts' 'const uint32_t *':'const uint32_t *'
|           `-IntegerLiteral 0x55f825b7b8d8 <col:46> 'int' 0
|-CXXMethodDecl 0x55f825b78be8 <line:153:5, line:154:37> line:153:22 store_flow 'IPRewriterEntry *(IPRewriterFlow *, int, IPRewriterBase::Map &, IPRewriterBase::Map *)'
| |-ParmVarDecl 0x55f825b788e0 <col:33, col:49> col:49 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x55f825b78960 <col:55, col:59> col:59 input 'int'
| |-ParmVarDecl 0x55f825b78a08 <line:154:5, col:10> col:10 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x55f825b78aa8 <col:15, col:36> col:20 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x55f825b7ae28 <col:36> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x55f825b7ae08 <col:36> 'int' 0
|-CXXMethodDecl 0x55f825b78ec8 <line:155:5, line:156:39> line:155:17 used unmap_flow 'void (IPRewriterFlow *, IPRewriterBase::Map &, IPRewriterBase::Map *)' inline
| |-ParmVarDecl 0x55f825b78cb8 <col:28, col:44> col:44 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x55f825b78d30 <line:156:7, col:12> col:12 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x55f825b78da8 <col:17, col:38> col:22 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x55f825b7ae60 <col:38> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x55f825b7ae40 <col:38> 'int' 0
|-CXXMethodDecl 0x55f825b790a8 <line:158:5, col:56> col:17 gc_timer_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55f825b78f90 <col:31, col:38> col:38 t 'Timer *'
| `-ParmVarDecl 0x55f825b79010 <col:41, col:47> col:47 user_data 'void *'
|-CXXMethodDecl 0x55f825b793d0 <line:160:5, line:161:41> line:160:9 parse_input_spec 'int (const String &, IPRewriterInput &, int, ErrorHandler *)'
| |-ParmVarDecl 0x55f825b79168 <col:26, col:40> col:40 str 'const String &'
| |-ParmVarDecl 0x55f825b791e0 <col:45, col:62> col:62 is 'IPRewriterInput &'
| |-ParmVarDecl 0x55f825b79260 <line:161:5, col:9> col:9 input_number 'int'
| `-ParmVarDecl 0x55f825b792d8 <col:23, col:37> col:37 errh 'ErrorHandler *'
|-EnumDecl 0x55f825b79490 <line:163:5, line:166:5> line:163:5
| |-EnumConstantDecl 0x55f825b795a8 <line:164:2, col:17> col:2 h_nmappings 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55f825b79588 <col:16, col:17> 'int' Int: -1
| |   `-UnaryOperator 0x55f825b79570 <col:16, col:17> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f825b79550 <col:17> 'int' 1
| |-EnumConstantDecl 0x55f825b79650 <col:20, col:42> col:20 h_mapping_failures 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55f825b79630 <col:41, col:42> 'int' Int: -2
| |   `-UnaryOperator 0x55f825b79618 <col:41, col:42> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f825b795f8 <col:42> 'int' 2
| |-EnumConstantDecl 0x55f825b796f8 <col:45, col:59> col:45 h_patterns 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55f825b796d8 <col:58, col:59> 'int' Int: -3
| |   `-UnaryOperator 0x55f825b796c0 <col:58, col:59> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f825b796a0 <col:59> 'int' 3
| |-EnumConstantDecl 0x55f825b797a0 <line:165:2, col:12> col:2 h_size 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55f825b79780 <col:11, col:12> 'int' Int: -4
| |   `-UnaryOperator 0x55f825b79768 <col:11, col:12> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f825b79748 <col:12> 'int' 4
| |-EnumConstantDecl 0x55f825b79848 <col:15, col:29> col:15 h_capacity 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55f825b79828 <col:28, col:29> 'int' Int: -5
| |   `-UnaryOperator 0x55f825b79810 <col:28, col:29> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f825b797f0 <col:29> 'int' 5
| `-EnumConstantDecl 0x55f825b798f0 <col:32, col:43> col:32 h_clear 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
|   `-ConstantExpr 0x55f825b798d0 <col:42, col:43> 'int' Int: -6
|     `-UnaryOperator 0x55f825b798b8 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x55f825b79898 <col:43> 'int' 6
|-CXXMethodDecl 0x55f825b79a68 <line:167:5, col:59> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f825b79950 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55f825b799d0 <col:44, col:50> col:50 user_data 'void *'
|-CXXMethodDecl 0x55f825b79d48 <line:168:5, col:96> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f825b79b28 <col:30, col:44> col:44 str 'const String &'
| |-ParmVarDecl 0x55f825b79ba0 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x55f825b79c20 <col:61, col:67> col:67 user_data 'void *'
| `-ParmVarDecl 0x55f825b79c98 <col:78, col:92> col:92 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f825b7a038 <line:169:5, col:104> col:16 pattern_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f825b79e18 <col:38, col:52> col:52 str 'const String &'
| |-ParmVarDecl 0x55f825b79e90 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55f825b79f10 <col:69, col:75> col:75 user_data 'void *'
| `-ParmVarDecl 0x55f825b79f88 <col:86, col:100> col:100 errh 'ErrorHandler *'
|-FriendDecl 0x55f825b7a4d8 <line:171:5, line:172:52> line:171:33
| `-CXXMethodDecl 0x55f825b7a348 parent 0x55f825b4de70 prev 0x55f825b4ee10 <col:5, line:172:52> line:171:33 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
|   |-ParmVarDecl 0x55f825b7a128 <col:48, col:64> col:64 flowid 'const IPFlowID &'
|   |-ParmVarDecl 0x55f825b7a1a0 <line:172:4, col:14> col:14 rewritten_flowid 'IPFlowID &'
|   |-ParmVarDecl 0x55f825b7a218 <col:32, col:40> col:40 p 'Packet *'
|   |-ParmVarDecl 0x55f825b7a298 <col:43, col:47> col:47 mapid 'int' cinit
|   | `-ImplicitCastExpr 0x55f825b4ef88 <line:39:33> 'int' <IntegralCast>
|   |   `-DeclRefExpr 0x55f825b4ef68 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55f825b4ea80 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   |-NoInlineAttr 0x55f825b7a488 <line:37:20> Inherited
|   `-OptimizeNoneAttr 0x55f825b7a4b0 <col:30> Inherited
|-AccessSpecDecl 0x55f825b7a518 <line:174:3, col:10> col:3 private
|-CXXMethodDecl 0x55f825b7a618 <line:176:5, col:54> col:10 shift_heap_best_effort 'void (click_jiffies_t)'
| `-ParmVarDecl 0x55f825b7a550 <col:33, col:49> col:49 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55f825b7a858 <line:177:5, col:78> col:10 shrink_heap_for_new_flow 'bool (IPRewriterFlow *, click_jiffies_t)'
| |-ParmVarDecl 0x55f825b7a6d0 <col:35, col:51> col:51 flow 'IPRewriterFlow *'
| `-ParmVarDecl 0x55f825b7a748 <col:57, col:73> col:73 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55f825b7a9a8 <line:178:5, col:36> col:10 shrink_heap 'void (bool)'
| `-ParmVarDecl 0x55f825b7a918 <col:22, col:27> col:27 clear_all 'bool'
|-FriendDecl 0x55f825b7aa70 <line:180:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x55f825b7aad8 <line:81:7> col:7 implicit IPRewriterBase 'void (const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x55f825b7aad8
| `-ParmVarDecl 0x55f825b7abe8 <col:7> col:7 'const IPRewriterBase &'
`-CXXMethodDecl 0x55f825b7ac88 <col:7> col:7 implicit operator= 'IPRewriterBase &(const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x55f825b7ac88
  `-ParmVarDecl 0x55f825b7ad98 <col:7> col:7 'const IPRewriterBase &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  NonVirtualBaseLLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterPattern
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   int _sport
         8 |   class IPAddress _daddr
         8 |     uint32_t _addr
        12 |   int _dport
        16 |   uint32_t _variation_top
        20 |   uint32_t _next_variation
        24 |   _Bool _is_napt
        25 |   _Bool _sequential
        26 |   _Bool _same_first
        28 |   int _refcount
           | [sizeof=32, dsize=32, align=4,
           |  nvsize=32, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825b2f490 <../elements/ip/iprwpattern.hh:12:1, line:68:1> line:12:7 class IPRewriterPattern definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825b2f5a8 <col:1, col:7> col:7 implicit referenced class IPRewriterPattern
|-AccessSpecDecl 0x55f825b2f638 <col:27, col:33> col:27 public
|-CXXConstructorDecl 0x55f825b2fba8 <line:14:5, line:17:27> line:14:5 IPRewriterPattern 'void (const IPAddress &, int, const IPAddress &, int, bool, bool, bool, uint32_t)'
| |-ParmVarDecl 0x55f825b2f670 <col:23, col:40> col:40 saddr 'const IPAddress &'
| |-ParmVarDecl 0x55f825b2f6f0 <col:47, col:51> col:51 sport 'int'
| |-ParmVarDecl 0x55f825b2f768 <line:15:9, col:26> col:26 daddr 'const IPAddress &'
| |-ParmVarDecl 0x55f825b2f7e8 <col:33, col:37> col:37 dport 'int'
| |-ParmVarDecl 0x55f825b2f860 <line:16:9, col:14> col:14 is_napt 'bool'
| |-ParmVarDecl 0x55f825b2f8d8 <col:23, col:28> col:28 sequential 'bool'
| |-ParmVarDecl 0x55f825b2f950 <col:40, col:45> col:45 same_first 'bool'
| `-ParmVarDecl 0x55f825b2f9c8 <line:17:9, col:18> col:18 variation 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825b30088 <line:18:5, line:19:45> line:18:17 parse 'bool (const Vector<String> &, IPRewriterPattern **, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f825b2fda0 <col:23, col:45> col:45 words 'const Vector<String> &'
| |-ParmVarDecl 0x55f825b2fe50 <col:52, col:72> col:72 result 'IPRewriterPattern **'
| |-ParmVarDecl 0x55f825b2fec8 <line:19:9, col:18> col:18 context 'Element *'
| `-ParmVarDecl 0x55f825b2ff40 <col:27, col:41> col:41 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f825b30538 <line:20:5, line:21:42> line:20:17 parse_ports 'bool (const Vector<String> &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f825b30230 <col:29, col:51> col:51 words 'const Vector<String> &'
| |-ParmVarDecl 0x55f825b302d8 <col:58, col:75> col:75 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55f825b30350 <line:21:8, col:17> col:17 model 'Element *'
| `-ParmVarDecl 0x55f825b303f0 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f825b30868 <line:22:5, line:23:42> line:22:17 parse_with_ports 'bool (const String &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f825b30608 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55f825b30680 <col:53, col:70> col:70 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55f825b306f8 <line:23:6, col:15> col:15 context 'Element *'
| `-ParmVarDecl 0x55f825b30770 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f825b30948 <line:25:5, line:27:5> line:25:10 use 'void ()'
| `-CompoundStmt 0x55f825b31ca0 <col:16, line:27:5>
|   `-UnaryOperator 0x55f825b31c88 <line:26:2, col:11> 'int' postfix '++'
|     `-MemberExpr 0x55f825b31c58 <col:2> 'int' lvalue ->_refcount 0x55f825b31888
|       `-CXXThisExpr 0x55f825b31c48 <col:2> 'IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55f825b30a08 <line:28:5, line:31:5> line:28:10 unuse 'void ()'
| `-CompoundStmt 0x55f825b31e98 <col:18, line:31:5>
|   `-IfStmt 0x55f825b31e80 <line:29:2, line:30:13>
|     |-BinaryOperator 0x55f825b31d48 <line:29:6, col:21> 'bool' '<='
|     | |-ImplicitCastExpr 0x55f825b31d30 <col:6, col:8> 'int' <LValueToRValue>
|     | | `-UnaryOperator 0x55f825b31cf8 <col:6, col:8> 'int' lvalue prefix '--'
|     | |   `-MemberExpr 0x55f825b31cc8 <col:8> 'int' lvalue ->_refcount 0x55f825b31888
|     | |     `-CXXThisExpr 0x55f825b31cb8 <col:8> 'IPRewriterPattern *' implicit this
|     | `-IntegerLiteral 0x55f825b31d10 <col:21> 'int' 0
|     `-CXXDeleteExpr 0x55f825b31e60 <line:30:6, col:13> 'void' Function 0x55f82566dca8 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x55f825b31d68 <col:13> 'IPRewriterPattern *' this
|-CXXConversionDecl 0x55f825b30b08 <line:33:5, line:35:5> line:33:5 operator bool 'bool () const'
| `-CompoundStmt 0x55f825b32180 <col:27, line:35:5>
|   `-ReturnStmt 0x55f825b32170 <line:34:2, col:39>
|     `-BinaryOperator 0x55f825b32150 <col:9, col:39> 'bool' '||'
|       |-BinaryOperator 0x55f825b320c0 <col:9, col:29> 'bool' '||'
|       | |-BinaryOperator 0x55f825b31fe0 <col:9, col:19> 'bool' '||'
|       | | |-ImplicitCastExpr 0x55f825b31f98 <col:9> 'bool' <IntegralToBoolean>
|       | | | `-ImplicitCastExpr 0x55f825b31f80 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | | |   `-CXXMemberCallExpr 0x55f825b31f60 <col:9> 'uint32_t':'unsigned int'
|       | | |     `-MemberExpr 0x55f825b31f30 <col:9> '<bound member function type>' .operator unsigned int 0x55f825889ed8
|       | | |       `-MemberExpr 0x55f825b31ec0 <col:9> 'const IPAddress' lvalue ->_saddr 0x55f825b31510
|       | | |         `-CXXThisExpr 0x55f825b31eb0 <col:9> 'const IPRewriterPattern *' implicit this
|       | | `-ImplicitCastExpr 0x55f825b31fc8 <col:19> 'bool' <IntegralToBoolean>
|       | |   `-ImplicitCastExpr 0x55f825b31fb0 <col:19> 'int' <LValueToRValue>
|       | |     `-MemberExpr 0x55f825b31f00 <col:19> 'const int' lvalue ->_sport 0x55f825b31578
|       | |       `-CXXThisExpr 0x55f825b31ef0 <col:19> 'const IPRewriterPattern *' implicit this
|       | `-ImplicitCastExpr 0x55f825b320a8 <col:29> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55f825b32090 <col:29> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x55f825b32070 <col:29> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x55f825b32040 <col:29> '<bound member function type>' .operator unsigned int 0x55f825889ed8
|       |         `-MemberExpr 0x55f825b32010 <col:29> 'const IPAddress' lvalue ->_daddr 0x55f825b315d8
|       |           `-CXXThisExpr 0x55f825b32000 <col:29> 'const IPRewriterPattern *' implicit this
|       `-ImplicitCastExpr 0x55f825b32138 <col:39> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55f825b32120 <col:39> 'int' <LValueToRValue>
|           `-MemberExpr 0x55f825b320f0 <col:39> 'const int' lvalue ->_dport 0x55f825b31640
|             `-CXXThisExpr 0x55f825b320e0 <col:39> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55f825b30bd8 <line:36:5, line:38:5> line:36:15 daddr 'IPAddress () const'
| `-CompoundStmt 0x55f825b32218 <col:29, line:38:5>
|   `-ReturnStmt 0x55f825b32208 <line:37:2, col:9>
|     `-CXXConstructExpr 0x55f825b321d8 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55f825b321a8 <col:9> 'const IPAddress' lvalue ->_daddr 0x55f825b315d8
|         `-CXXThisExpr 0x55f825b32198 <col:9> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55f825b312a0 <line:40:5, line:41:57> line:40:9 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, const HashContainer<IPRewriterEntry> &)'
| |-ParmVarDecl 0x55f825b30c88 <col:24, col:40> col:40 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55f825b30d28 <col:48, col:58> col:58 rewritten_flowid 'IPFlowID &'
| `-ParmVarDecl 0x55f825b31170 <line:41:10, col:48> col:48 reply_map 'const HashContainer<IPRewriterEntry> &'
|-CXXMethodDecl 0x55f825b31378 <line:43:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55f825b31438 <line:45:5, line:47:5> line:45:21 get_flow_id 'IPFlowID () const' inline
| `-CompoundStmt 0x55f825b324c0 <col:41, line:47:5>
|   `-ReturnStmt 0x55f825b324b0 <line:46:9, col:55>
|     `-ExprWithCleanups 0x55f825b32498 <col:16, col:55> 'IPFlowID'
|       `-CXXConstructExpr 0x55f825b32468 <col:16, col:55> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55f825b32450 <col:16, col:55> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x55f825b32400 <col:16, col:55> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x55f825b32340 <col:25> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55f825b32250 <col:25> 'const IPAddress' lvalue ->_saddr 0x55f825b31510
|             |   `-CXXThisExpr 0x55f825b32240 <col:25> 'const IPRewriterPattern *' implicit this
|             |-ImplicitCastExpr 0x55f825b32388 <col:33> 'uint16_t':'unsigned short' <IntegralCast>
|             | `-ImplicitCastExpr 0x55f825b32370 <col:33> 'int' <LValueToRValue>
|             |   `-MemberExpr 0x55f825b32290 <col:33> 'const int' lvalue ->_sport 0x55f825b31578
|             |     `-CXXThisExpr 0x55f825b32280 <col:33> 'const IPRewriterPattern *' implicit this
|             |-CXXConstructExpr 0x55f825b323a0 <col:41> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55f825b322d0 <col:41> 'const IPAddress' lvalue ->_daddr 0x55f825b315d8
|             |   `-CXXThisExpr 0x55f825b322c0 <col:41> 'const IPRewriterPattern *' implicit this
|             `-ImplicitCastExpr 0x55f825b323e8 <col:49> 'uint16_t':'unsigned short' <IntegralCast>
|               `-ImplicitCastExpr 0x55f825b323d0 <col:49> 'int' <LValueToRValue>
|                 `-MemberExpr 0x55f825b32310 <col:49> 'const int' lvalue ->_dport 0x55f825b31640
|                   `-CXXThisExpr 0x55f825b32300 <col:49> 'const IPRewriterPattern *' implicit this
|-AccessSpecDecl 0x55f825b314d8 <line:49:1, col:8> col:1 private
|-FieldDecl 0x55f825b31510 <line:51:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x55f825b31578 <line:52:5, col:9> col:9 referenced _sport 'int'
|-FieldDecl 0x55f825b315d8 <line:53:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x55f825b31640 <line:54:5, col:9> col:9 referenced _dport 'int'
|-FieldDecl 0x55f825b316a0 <line:56:5, col:14> col:14 _variation_top 'uint32_t':'unsigned int'
|-FieldDecl 0x55f825b31700 <line:57:5, col:14> col:14 _next_variation 'uint32_t':'unsigned int'
|-FieldDecl 0x55f825b31760 <line:59:5, col:10> col:10 _is_napt 'bool'
|-FieldDecl 0x55f825b317c0 <line:60:5, col:10> col:10 _sequential 'bool'
|-FieldDecl 0x55f825b31820 <line:61:5, col:10> col:10 _same_first 'bool'
|-FieldDecl 0x55f825b31888 <line:63:5, col:9> col:9 referenced _refcount 'int'
|-CXXConstructorDecl 0x55f825b319d8 <line:65:5, col:47> col:5 IPRewriterPattern 'void (const IPRewriterPattern &)'
| `-ParmVarDecl 0x55f825b31918 <col:23, col:46> col:47 'const IPRewriterPattern &'
|-CXXMethodDecl 0x55f825b31b88 <line:66:5, col:58> col:24 operator= 'IPRewriterPattern &(const IPRewriterPattern &)'
| `-ParmVarDecl 0x55f825b31a98 <col:34, col:57> col:58 'const IPRewriterPattern &'
`-CXXDestructorDecl 0x55f825b31d78 <line:12:7> col:7 implicit ~IPRewriterPattern 'void ()' inline default trivial noexcept-unevaluated 0x55f825b31d78

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPMapper
         0 |   (IPMapper vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825b7b9d0 prev 0x55f825b4dd30 <../elements/ip/iprewriterbase.hh:185:1, line:197:1> line:185:7 class IPMapper definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f825b7bac8 <col:1, col:7> col:7 implicit referenced class IPMapper
|-AccessSpecDecl 0x55f825b7bb58 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55f825b7bbb8 <line:187:5, col:18> col:5 IPMapper 'void ()'
| `-CompoundStmt 0x55f825b7c5d8 <col:16, col:18>
|-CXXDestructorDecl 0x55f825b7bca8 <line:188:5, col:27> col:13 ~IPMapper 'void () noexcept' virtual
| `-CompoundStmt 0x55f825b7c5e8 <col:25, col:27>
|-CXXMethodDecl 0x55f825b7bf78 <line:190:5, line:191:24> line:190:18 notify_rewriter 'void (IPRewriterBase *, IPRewriterInput *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55f825b7bda0 <col:34, col:50> col:50 user 'IPRewriterBase *'
| |-ParmVarDecl 0x55f825b7be18 <col:56, col:73> col:73 input 'IPRewriterInput *'
| `-ParmVarDecl 0x55f825b7be90 <line:191:6, col:20> col:20 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f825b7c330 <line:192:5, line:195:31> line:192:17 rewrite_flowid 'int (IPRewriterInput *, const IPFlowID &, IPFlowID &, Packet *, int)' virtual
| |-ParmVarDecl 0x55f825b7c040 <col:32, col:49> col:49 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55f825b7c0b8 <line:193:11, col:27> col:27 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55f825b7c130 <line:194:11, col:21> col:21 rewritten_flowid 'IPFlowID &'
| |-ParmVarDecl 0x55f825b7c1a8 <line:195:11, col:19> col:19 p 'Packet *'
| `-ParmVarDecl 0x55f825b7c228 <col:22, col:26> col:26 mapid 'int'
`-CXXMethodDecl 0x55f825b7c458 <line:185:7> col:7 implicit operator= 'IPMapper &(const IPMapper &)' inline default noexcept-unevaluated 0x55f825b7c458
  `-ParmVarDecl 0x55f825b7c568 <col:7> col:7 'const IPMapper &'

Layout: <CGRecordLayout
  LLVMType:%class.IPMapper = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.IPMapper = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825b4e5b8 <../elements/ip/iprewriterbase.hh:23:5, line:26:5> line:23:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x55f825b4e6e8 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
|-FieldDecl 0x55f825b4e778 <line:25:2, col:12> col:12 mapper 'IPMapper *'
|-CXXConstructorDecl 0x55f825b4f238 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f825b4f668 <col:5>
|-CXXConstructorDecl 0x55f825b4f338 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x55f825b4f338
| `-ParmVarDecl 0x55f825b4f448 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
`-CXXConstructorDecl 0x55f825b4f4e8 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x55f825b4f4e8
  `-ParmVarDecl 0x55f825b4f5f8 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon.3 = type { %class.IPRewriterPattern* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825b4de70 prev 0x55f825b326d0 <../elements/ip/iprewriterbase.hh:11:1, line:40:1> line:11:7 referenced class IPRewriterInput definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55f825b4df68 <col:1, col:7> col:7 implicit referenced class IPRewriterInput
|-AccessSpecDecl 0x55f825b4dff8 <col:25, col:31> col:25 public
|-EnumDecl 0x55f825b4e020 <line:12:5, line:14:5> line:12:5
| |-EnumConstantDecl 0x55f825b4e0e0 <line:13:2> col:2 referenced i_drop 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55f825b4e130 <col:10> col:10 i_nochange 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55f825b4e180 <col:22> col:22 i_keep 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55f825b4e1d0 <col:30> col:30 i_pattern 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| `-EnumConstantDecl 0x55f825b4e220 <col:41> col:41 i_mapper 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
|-FieldDecl 0x55f825b4e2a8 <line:15:5, col:21> col:21 owner 'IPRewriterBase *'
|-FieldDecl 0x55f825b4e310 <line:16:5, col:9> col:9 owner_input 'int'
|-FieldDecl 0x55f825b4e378 <line:17:5, col:9> col:9 kind 'int'
|-FieldDecl 0x55f825b4e3e0 <line:18:5, col:9> col:9 foutput 'int'
|-FieldDecl 0x55f825b4e440 <line:19:5, col:21> col:21 referenced reply_element 'IPRewriterBase *'
|-FieldDecl 0x55f825b4e4a8 <line:20:5, col:9> col:9 routput 'int'
|-FieldDecl 0x55f825b4e508 <line:21:5, col:14> col:14 count 'uint32_t':'unsigned int'
|-FieldDecl 0x55f825b4e568 <line:22:5, col:14> col:14 failures 'uint32_t':'unsigned int'
|-CXXRecordDecl 0x55f825b4e5b8 <line:23:5, line:26:5> line:23:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x55f825b4e6e8 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
| |-FieldDecl 0x55f825b4e778 <line:25:2, col:12> col:12 mapper 'IPMapper *'
| |-CXXConstructorDecl 0x55f825b4f238 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f825b4f668 <col:5>
| |-CXXConstructorDecl 0x55f825b4f338 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x55f825b4f338
| | `-ParmVarDecl 0x55f825b4f448 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
| `-CXXConstructorDecl 0x55f825b4f4e8 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x55f825b4f4e8
|   `-ParmVarDecl 0x55f825b4f5f8 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'
|-FieldDecl 0x55f825b4e838 <col:5, line:26:7> col:7 referenced u 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
|-CXXConstructorDecl 0x55f825b4e8d8 <line:28:5, line:31:5> line:28:5 IPRewriterInput 'void ()'
| |-CXXCtorInitializer Field 0x55f825b4e378 'kind' 'int'
| | `-ImplicitCastExpr 0x55f825b4efe0 <line:29:9> 'int' <IntegralCast>
| |   `-DeclRefExpr 0x55f825b4efa0 <col:9> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)' EnumConstant 0x55f825b4e0e0 'i_drop' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-CXXCtorInitializer Field 0x55f825b4e3e0 'foutput' 'int'
| | `-UnaryOperator 0x55f825b4f040 <col:26, col:27> 'int' prefix '-'
| |   `-IntegerLiteral 0x55f825b4f020 <col:27> 'int' 1
| |-CXXCtorInitializer Field 0x55f825b4e4a8 'routput' 'int'
| | `-UnaryOperator 0x55f825b4f0c0 <col:39, col:40> 'int' prefix '-'
| |   `-IntegerLiteral 0x55f825b4f0a0 <col:40> 'int' 1
| |-CXXCtorInitializer Field 0x55f825b4e508 'count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f825b4f160 <col:50> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f825b4f120 <col:50> 'int' 0
| |-CXXCtorInitializer Field 0x55f825b4e568 'failures' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f825b4f1e0 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55f825b4f1a0 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55f825b4e838 'u' 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
| | `-CXXConstructExpr 0x55f825b4f678 <line:28:5> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' 'void () noexcept'
| `-CompoundStmt 0x55f825b4f7c0 <line:29:66, line:31:5>
|   `-BinaryOperator 0x55f825b4f7a0 <line:30:2, col:14> 'IPRewriterPattern *' lvalue '='
|     |-MemberExpr 0x55f825b4f738 <col:2, col:4> 'IPRewriterPattern *' lvalue .pattern 0x55f825b4e6e8
|     | `-MemberExpr 0x55f825b4f708 <col:2> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' lvalue ->u 0x55f825b4e838
|     |   `-CXXThisExpr 0x55f825b4f6f8 <col:2> 'IPRewriterInput *' implicit this
|     `-ImplicitCastExpr 0x55f825b4f788 <col:14> 'IPRewriterPattern *' <NullToPointer>
|       `-IntegerLiteral 0x55f825b4f768 <col:14> 'int' 0
|-EnumDecl 0x55f825b4e980 <line:33:5, line:35:5> line:33:5
| |-EnumConstantDecl 0x55f825b4ea80 <line:34:2, col:18> col:2 referenced mapid_default 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
| | `-ImplicitCastExpr 0x55f825b4eb60 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825b4ea60 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x55f825b4ea40 <col:18> 'int' 0
| `-EnumConstantDecl 0x55f825b4eb10 <col:21, col:44> col:21 mapid_iprewriter_udp 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   `-ImplicitCastExpr 0x55f825b4eb78 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825b4eaf0 <col:44> 'int' Int: 1
|       `-IntegerLiteral 0x55f825b4ead0 <col:44> 'int' 1
`-CXXMethodDecl 0x55f825b4ee10 <line:37:5, line:39:46> line:37:44 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
  |-ParmVarDecl 0x55f825b4eba0 <col:59, col:75> col:75 flowid 'const IPFlowID &'
  |-ParmVarDecl 0x55f825b4ec18 <line:38:10, col:20> col:20 rewritten_flowid 'IPFlowID &'
  |-ParmVarDecl 0x55f825b4ec90 <line:39:10, col:18> col:18 p 'Packet *'
  |-ParmVarDecl 0x55f825b4ed10 <col:21, col:33> col:25 mapid 'int' cinit
  | `-ImplicitCastExpr 0x55f825b4ef88 <col:33> 'int' <IntegralCast>
  |   `-DeclRefExpr 0x55f825b4ef68 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55f825b4ea80 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
  |-NoInlineAttr 0x55f825b4eed0 <line:37:20>
  `-OptimizeNoneAttr 0x55f825b4ef28 <col:30>

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.3 }
  NonVirtualBaseLLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825b35010 prev 0x55f825b32590 <../elements/ip/iprwmapping.hh:68:1, line:174:1> line:68:7 referenced class IPRewriterFlow definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825b35108 <col:1, col:7> col:7 implicit referenced class IPRewriterFlow
|-AccessSpecDecl 0x55f825b35198 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55f825b355b8 <line:70:5, line:72:61> line:70:5 used IPRewriterFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55f825b351d0 <col:20, col:37> col:37 owner 'IPRewriterInput *'
| |-ParmVarDecl 0x55f825b35248 <col:44, col:60> col:60 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55f825b352c0 <line:71:6, col:22> col:22 rewritten_flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55f825b35338 <line:72:6, col:14> col:14 ip_p 'uint8_t':'unsigned char'
| |-ParmVarDecl 0x55f825b353b0 <col:20, col:25> col:25 guaranteed 'bool'
| `-ParmVarDecl 0x55f825b35428 <col:37, col:53> col:53 expiry_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55f825b35798 <line:74:5, line:76:5> line:74:22 used entry 'IPRewriterEntry &(bool)'
| |-ParmVarDecl 0x55f825b356a0 <col:28, col:33> col:33 used direction 'bool'
| `-CompoundStmt 0x55f825b39590 <col:44, line:76:5>
|   `-ReturnStmt 0x55f825b39580 <line:75:2, col:21>
|     `-ArraySubscriptExpr 0x55f825b39560 <col:9, col:21> 'IPRewriterEntry' lvalue
|       |-ImplicitCastExpr 0x55f825b39530 <col:9> 'IPRewriterEntry *' <ArrayToPointerDecay>
|       | `-MemberExpr 0x55f825b394e0 <col:9> 'IPRewriterEntry [2]' lvalue ->_e 0x55f825b37d68
|       |   `-CXXThisExpr 0x55f825b394d0 <col:9> 'IPRewriterFlow *' implicit this
|       `-ImplicitCastExpr 0x55f825b39548 <col:12> 'bool' <LValueToRValue>
|         `-DeclRefExpr 0x55f825b39510 <col:12> 'bool' lvalue ParmVar 0x55f825b356a0 'direction' 'bool'
|-CXXMethodDecl 0x55f825b35948 <line:77:5, line:79:5> line:77:28 entry 'const IPRewriterEntry &(bool) const'
| |-ParmVarDecl 0x55f825b35850 <col:34, col:39> col:39 used direction 'bool'
| `-CompoundStmt 0x55f825b396a8 <col:56, line:79:5>
|   `-ReturnStmt 0x55f825b39698 <line:78:2, col:21>
|     `-ArraySubscriptExpr 0x55f825b39678 <col:9, col:21> 'const IPRewriterEntry' lvalue
|       |-ImplicitCastExpr 0x55f825b39648 <col:9> 'const IPRewriterEntry *' <ArrayToPointerDecay>
|       | `-MemberExpr 0x55f825b395b8 <col:9> 'IPRewriterEntry const[2]' lvalue ->_e 0x55f825b37d68
|       |   `-CXXThisExpr 0x55f825b395a8 <col:9> 'const IPRewriterFlow *' implicit this
|       `-ImplicitCastExpr 0x55f825b39660 <col:12> 'bool' <LValueToRValue>
|         `-DeclRefExpr 0x55f825b395e8 <col:12> 'bool' lvalue ParmVar 0x55f825b35850 'direction' 'bool'
|-CXXMethodDecl 0x55f825b35a10 <line:83:5, line:85:5> line:83:21 used expiry 'click_jiffies_t () const'
| `-CompoundStmt 0x55f825b39728 <col:36, line:85:5>
|   `-ReturnStmt 0x55f825b39718 <line:84:2, col:9>
|     `-ImplicitCastExpr 0x55f825b39700 <col:9> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f825b396d0 <col:9> 'const click_jiffies_t':'const unsigned int' lvalue ->_expiry_j 0x55f825b37e88
|         `-CXXThisExpr 0x55f825b396c0 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55f825b35bb8 <line:89:5, line:91:5> line:89:10 expired 'bool (click_jiffies_t) const'
| |-ParmVarDecl 0x55f825b35ac0 <col:18, col:34> col:34 used now_j 'click_jiffies_t':'unsigned int'
| `-CompoundStmt 0x55f825b39948 <col:47, line:91:5>
|   `-ReturnStmt 0x55f825b39938 <line:90:2, col:67>
|     `-UnaryOperator 0x55f825b39920 <col:9, col:67> 'bool' prefix '!' cannot overflow
|       `-ParenExpr 0x55f825b39900 <col:10, col:67> 'bool'
|         `-BinaryOperator 0x55f825b398e0 <col:11, col:66> 'bool' '<'
|           |-CStyleCastExpr 0x55f825b39898 <col:11, col:62> 'click_jiffies_difference_t':'int' <NoOp>
|           | `-ImplicitCastExpr 0x55f825b39880 <col:40, col:62> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|           |   `-ParenExpr 0x55f825b39860 <col:40, col:62> 'unsigned int'
|           |     `-BinaryOperator 0x55f825b39810 <col:41, col:61> 'unsigned int' '-'
|           |       |-ImplicitCastExpr 0x55f825b397e0 <col:41, col:47> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |       | `-ParenExpr 0x55f825b39760 <col:41, col:47> 'click_jiffies_t':'unsigned int' lvalue
|           |       |   `-DeclRefExpr 0x55f825b39740 <col:42> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55f825b35ac0 'now_j' 'click_jiffies_t':'unsigned int'
|           |       `-ImplicitCastExpr 0x55f825b397f8 <col:51, col:61> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |         `-ParenExpr 0x55f825b397c0 <col:51, col:61> 'const click_jiffies_t':'const unsigned int' lvalue
|           |           `-MemberExpr 0x55f825b39790 <col:52> 'const click_jiffies_t':'const unsigned int' lvalue ->_expiry_j 0x55f825b37e88
|           |             `-CXXThisExpr 0x55f825b39780 <col:52> 'const IPRewriterFlow *' implicit this
|           `-IntegerLiteral 0x55f825b398c0 <col:66> 'int' 0
|-CXXMethodDecl 0x55f825b35c80 <line:94:5, line:96:5> line:94:10 guaranteed 'bool () const'
| `-CompoundStmt 0x55f825b399c8 <col:29, line:96:5>
|   `-ReturnStmt 0x55f825b399b8 <line:95:2, col:9>
|     `-ImplicitCastExpr 0x55f825b399a0 <col:9> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55f825b39970 <col:9> 'const bool' lvalue ->_guaranteed 0x55f825b38048
|         `-CXXThisExpr 0x55f825b39960 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55f825b35f68 <line:102:5, line:103:34> line:102:10 used change_expiry 'void (IPRewriterHeap *, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55f825b35d58 <col:24, col:40> col:40 h 'IPRewriterHeap *'
| |-ParmVarDecl 0x55f825b35dd0 <col:43, col:48> col:48 guaranteed 'bool'
| `-ParmVarDecl 0x55f825b35e48 <line:103:10, col:26> col:26 expiry_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55f825b36308 <line:114:5, line:118:5> line:114:10 change_expiry_by_timeout 'void (IPRewriterHeap *, click_jiffies_t, const uint32_t *)'
| |-ParmVarDecl 0x55f825b36030 <col:35, col:51> col:51 used h 'IPRewriterHeap *'
| |-ParmVarDecl 0x55f825b360a8 <col:54, col:70> col:70 used now_j 'click_jiffies_t':'unsigned int'
| |-ParmVarDecl 0x55f825b361e0 <line:115:7, col:32> col:22 used timeouts 'const uint32_t *':'const uint32_t *'
| `-CompoundStmt 0x55f825b39e68 <col:35, line:118:5>
|   |-DeclStmt 0x55f825b39c38 <line:116:2, col:60>
|   | `-VarDecl 0x55f825b399f0 <col:2, col:59> col:11 used timeout 'uint32_t':'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x55f825b39c20 <col:21, col:59> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     `-ConditionalOperator 0x55f825b39bf0 <col:21, col:59> 'const uint32_t':'const unsigned int' lvalue
|   |       |-ImplicitCastExpr 0x55f825b39bd8 <col:21, col:31> 'bool' <IntegralToBoolean>
|   |       | `-ImplicitCastExpr 0x55f825b39bc0 <col:21, col:31> 'uint32_t':'unsigned int' <LValueToRValue>
|   |       |   `-ArraySubscriptExpr 0x55f825b39ab0 <col:21, col:31> 'const uint32_t':'const unsigned int' lvalue
|   |       |     |-ImplicitCastExpr 0x55f825b39a98 <col:21> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x55f825b39a58 <col:21> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55f825b361e0 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |       |     `-IntegerLiteral 0x55f825b39a78 <col:30> 'int' 1
|   |       |-ArraySubscriptExpr 0x55f825b39b28 <col:35, col:45> 'const uint32_t':'const unsigned int' lvalue
|   |       | |-ImplicitCastExpr 0x55f825b39b10 <col:35> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x55f825b39ad0 <col:35> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55f825b361e0 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |       | `-IntegerLiteral 0x55f825b39af0 <col:44> 'int' 1
|   |       `-ArraySubscriptExpr 0x55f825b39ba0 <col:49, col:59> 'const uint32_t':'const unsigned int' lvalue
|   |         |-ImplicitCastExpr 0x55f825b39b88 <col:49> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x55f825b39b48 <col:49> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55f825b361e0 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |         `-IntegerLiteral 0x55f825b39b68 <col:58> 'int' 0
|   `-CXXMemberCallExpr 0x55f825b39e18 <line:117:2, col:49> 'void'
|     |-MemberExpr 0x55f825b39c60 <col:2> '<bound member function type>' ->change_expiry 0x55f825b35f68
|     | `-CXXThisExpr 0x55f825b39c50 <col:2> 'IPRewriterFlow *' implicit this
|     |-ImplicitCastExpr 0x55f825b39e50 <col:16> 'IPRewriterHeap *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f825b39c90 <col:16> 'IPRewriterHeap *' lvalue ParmVar 0x55f825b36030 'h' 'IPRewriterHeap *'
|     |-UnaryOperator 0x55f825b39d70 <col:19, col:31> 'bool' prefix '!' cannot overflow
|     | `-UnaryOperator 0x55f825b39d58 <col:20, col:31> 'bool' prefix '!' cannot overflow
|     |   `-ImplicitCastExpr 0x55f825b39d40 <col:21, col:31> 'bool' <IntegralToBoolean>
|     |     `-ImplicitCastExpr 0x55f825b39d28 <col:21, col:31> 'uint32_t':'unsigned int' <LValueToRValue>
|     |       `-ArraySubscriptExpr 0x55f825b39d08 <col:21, col:31> 'const uint32_t':'const unsigned int' lvalue
|     |         |-ImplicitCastExpr 0x55f825b39cf0 <col:21> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|     |         | `-DeclRefExpr 0x55f825b39cb0 <col:21> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55f825b361e0 'timeouts' 'const uint32_t *':'const uint32_t *'
|     |         `-IntegerLiteral 0x55f825b39cd0 <col:30> 'int' 1
|     `-BinaryOperator 0x55f825b39df8 <col:34, col:42> 'unsigned int' '+'
|       |-ImplicitCastExpr 0x55f825b39dc8 <col:34> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55f825b39d88 <col:34> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55f825b360a8 'now_j' 'click_jiffies_t':'unsigned int'
|       `-ImplicitCastExpr 0x55f825b39de0 <col:42> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55f825b39da8 <col:42> 'uint32_t':'unsigned int' lvalue Var 0x55f825b399f0 'timeout' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825b36438 <line:120:5, line:122:5> line:120:13 ip_p 'uint8_t () const'
| `-CompoundStmt 0x55f825b39ef0 <col:26, line:122:5>
|   `-ReturnStmt 0x55f825b39ee0 <line:121:2, col:9>
|     `-ImplicitCastExpr 0x55f825b39ec8 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-MemberExpr 0x55f825b39e98 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_ip_p 0x55f825b37f88
|         `-CXXThisExpr 0x55f825b39e88 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55f825b36528 <line:124:5, line:126:5> line:124:22 used owner 'IPRewriterInput *() const'
| `-CompoundStmt 0x55f825b39f70 <col:36, line:126:5>
|   `-ReturnStmt 0x55f825b39f60 <line:125:2, col:9>
|     `-ImplicitCastExpr 0x55f825b39f48 <col:9> 'IPRewriterInput *' <LValueToRValue>
|       `-MemberExpr 0x55f825b39f18 <col:9> 'IPRewriterInput *const' lvalue ->_owner 0x55f825b38108
|         `-CXXThisExpr 0x55f825b39f08 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55f825b365e8 <line:128:5, line:130:5> line:128:13 reply_anno 'uint8_t () const'
| `-CompoundStmt 0x55f825b39ff0 <col:32, line:130:5>
|   `-ReturnStmt 0x55f825b39fe0 <line:129:2, col:9>
|     `-ImplicitCastExpr 0x55f825b39fc8 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-MemberExpr 0x55f825b39f98 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_reply_anno 0x55f825b380a8
|         `-CXXThisExpr 0x55f825b39f88 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55f825b36758 <line:131:5, line:133:5> line:131:10 set_reply_anno 'void (uint8_t)'
| |-ParmVarDecl 0x55f825b36698 <col:25, col:33> col:33 used reply_anno 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55f825b3a0a0 <col:45, line:133:5>
|   `-BinaryOperator 0x55f825b3a080 <line:132:2, col:16> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55f825b3a018 <col:2> 'uint8_t':'unsigned char' lvalue ->_reply_anno 0x55f825b380a8
|     | `-CXXThisExpr 0x55f825b3a008 <col:2> 'IPRewriterFlow *' implicit this
|     `-ImplicitCastExpr 0x55f825b3a068 <col:16> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55f825b3a048 <col:16> 'uint8_t':'unsigned char' lvalue ParmVar 0x55f825b36698 'reply_anno' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55f825b36a28 <line:135:5, line:136:27> line:135:24 update_csum 'void (uint16_t *, bool, uint16_t)' static inline
| |-ParmVarDecl 0x55f825b36810 <col:36, col:46> col:46 csum 'uint16_t *'
| |-ParmVarDecl 0x55f825b36888 <col:52, col:57> col:57 direction 'bool'
| `-ParmVarDecl 0x55f825b36900 <line:136:8, col:17> col:17 csum_delta 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55f825b36cc8 <line:138:5, col:65> col:10 apply 'void (WritablePacket *, bool, unsigned int)'
| |-ParmVarDecl 0x55f825b36af0 <col:16, col:32> col:32 p 'WritablePacket *'
| |-ParmVarDecl 0x55f825b36b68 <col:35, col:40> col:40 direction 'bool'
| `-ParmVarDecl 0x55f825b36be8 <col:51, col:60> col:60 annos 'unsigned int'
|-CXXMethodDecl 0x55f825b36fa8 <line:140:5, col:72> col:10 unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x55f825b36d90 <col:18, col:31> col:31 sa 'StringAccum &'
| |-ParmVarDecl 0x55f825b36e08 <col:35, col:40> col:40 direction 'bool'
| `-ParmVarDecl 0x55f825b36e80 <col:51, col:67> col:67 now 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55f825b37200 <line:141:5, col:78> col:10 unparse_ports 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x55f825b37070 <col:24, col:37> col:37 sa 'StringAccum &'
| |-ParmVarDecl 0x55f825b370e8 <col:41, col:46> col:46 direction 'bool'
| `-ParmVarDecl 0x55f825b37160 <col:57, col:73> col:73 now 'click_jiffies_t':'unsigned int'
|-CXXRecordDecl 0x55f825b372b8 <line:143:5, line:147:5> line:143:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f825b373d8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55f825b375f8 <line:144:2, line:146:2> line:144:14 operator() 'bool (IPRewriterFlow *, IPRewriterFlow *)' inline
|   |-ParmVarDecl 0x55f825b37478 <col:25, col:41> col:41 used a 'IPRewriterFlow *'
|   |-ParmVarDecl 0x55f825b374f0 <col:44, col:60> col:60 used b 'IPRewriterFlow *'
|   `-CompoundStmt 0x55f825b3a358 <col:63, line:146:2>
|     `-ReturnStmt 0x55f825b3a348 <line:145:6, col:78>
|       `-ParenExpr 0x55f825b3a328 <col:13, col:78> 'bool'
|         `-BinaryOperator 0x55f825b3a308 <col:14, col:77> 'bool' '<'
|           |-CStyleCastExpr 0x55f825b3a2c0 <col:14, col:73> 'click_jiffies_difference_t':'int' <NoOp>
|           | `-ImplicitCastExpr 0x55f825b3a2a8 <col:43, col:73> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|           |   `-ParenExpr 0x55f825b3a288 <col:43, col:73> 'unsigned int'
|           |     `-BinaryOperator 0x55f825b3a238 <col:44, col:72> 'unsigned int' '-'
|           |       |-ParenExpr 0x55f825b3a158 <col:44, col:56> 'click_jiffies_t':'unsigned int'
|           |       | `-CXXMemberCallExpr 0x55f825b3a120 <col:45, col:55> 'click_jiffies_t':'unsigned int'
|           |       |   `-MemberExpr 0x55f825b3a0f0 <col:45, col:48> '<bound member function type>' ->expiry 0x55f825b35a10
|           |       |     `-ImplicitCastExpr 0x55f825b3a140 <col:45> 'const IPRewriterFlow *' <NoOp>
|           |       |       `-ImplicitCastExpr 0x55f825b3a0d8 <col:45> 'IPRewriterFlow *' <LValueToRValue>
|           |       |         `-DeclRefExpr 0x55f825b3a0b8 <col:45> 'IPRewriterFlow *' lvalue ParmVar 0x55f825b37478 'a' 'IPRewriterFlow *'
|           |       `-ParenExpr 0x55f825b3a218 <col:60, col:72> 'click_jiffies_t':'unsigned int'
|           |         `-CXXMemberCallExpr 0x55f825b3a1e0 <col:61, col:71> 'click_jiffies_t':'unsigned int'
|           |           `-MemberExpr 0x55f825b3a1b0 <col:61, col:64> '<bound member function type>' ->expiry 0x55f825b35a10
|           |             `-ImplicitCastExpr 0x55f825b3a200 <col:61> 'const IPRewriterFlow *' <NoOp>
|           |               `-ImplicitCastExpr 0x55f825b3a198 <col:61> 'IPRewriterFlow *' <LValueToRValue>
|           |                 `-DeclRefExpr 0x55f825b3a178 <col:61> 'IPRewriterFlow *' lvalue ParmVar 0x55f825b374f0 'b' 'IPRewriterFlow *'
|           `-IntegerLiteral 0x55f825b3a2e8 <col:77> 'int' 0
|-CXXRecordDecl 0x55f825b376c0 <line:148:5, line:152:5> line:148:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f825b377d8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55f825b37a38 <line:149:2, line:151:2> line:149:14 operator() 'void (IPRewriterFlow **, IPRewriterFlow **)' inline
|   |-ParmVarDecl 0x55f825b378b0 <col:25, col:42> col:42 used begin 'IPRewriterFlow **'
|   |-ParmVarDecl 0x55f825b37930 <col:49, col:66> col:66 used it 'IPRewriterFlow **'
|   `-CompoundStmt 0x55f825b3a4f0 <col:70, line:151:2>
|     `-BinaryOperator 0x55f825b3a4d0 <line:150:6, col:27> 'size_t':'unsigned long' lvalue bitfield '='
|       |-MemberExpr 0x55f825b3a3f8 <col:6, col:13> 'size_t':'unsigned long' lvalue bitfield ->_place 0x55f825b37f28
|       | `-ImplicitCastExpr 0x55f825b3a3e0 <col:6, col:10> 'IPRewriterFlow *' <LValueToRValue>
|       |   `-ParenExpr 0x55f825b3a3c0 <col:6, col:10> 'IPRewriterFlow *' lvalue
|       |     `-UnaryOperator 0x55f825b3a3a8 <col:7, col:8> 'IPRewriterFlow *' lvalue prefix '*' cannot overflow
|       |       `-ImplicitCastExpr 0x55f825b3a390 <col:8> 'IPRewriterFlow **' <LValueToRValue>
|       |         `-DeclRefExpr 0x55f825b3a370 <col:8> 'IPRewriterFlow **' lvalue ParmVar 0x55f825b37930 'it' 'IPRewriterFlow **'
|       `-ImplicitCastExpr 0x55f825b3a4b8 <col:22, col:27> 'size_t':'unsigned long' <IntegralCast>
|         `-BinaryOperator 0x55f825b3a498 <col:22, col:27> 'long' '-'
|           |-ImplicitCastExpr 0x55f825b3a468 <col:22> 'IPRewriterFlow **' <LValueToRValue>
|           | `-DeclRefExpr 0x55f825b3a428 <col:22> 'IPRewriterFlow **' lvalue ParmVar 0x55f825b37930 'it' 'IPRewriterFlow **'
|           `-ImplicitCastExpr 0x55f825b3a480 <col:27> 'IPRewriterFlow **' <LValueToRValue>
|             `-DeclRefExpr 0x55f825b3a448 <col:27> 'IPRewriterFlow **' lvalue ParmVar 0x55f825b378b0 'begin' 'IPRewriterFlow **'
|-AccessSpecDecl 0x55f825b37b00 <line:154:3, col:12> col:3 protected
|-FieldDecl 0x55f825b37d68 <line:156:5, col:25> col:21 referenced _e 'IPRewriterEntry [2]'
|-FieldDecl 0x55f825b37dc8 <line:157:5, col:14> col:14 _ip_csum_delta 'uint16_t':'unsigned short'
|-FieldDecl 0x55f825b37e28 <line:158:5, col:14> col:14 _udp_csum_delta 'uint16_t':'unsigned short'
|-FieldDecl 0x55f825b37e88 <line:159:5, col:21> col:21 referenced _expiry_j 'click_jiffies_t':'unsigned int'
|-FieldDecl 0x55f825b37f28 <line:160:5, col:21> col:12 referenced _place 'size_t':'unsigned long'
| `-ConstantExpr 0x55f825b37f08 <col:21> 'int' Int: 32
|   `-IntegerLiteral 0x55f825b37ed8 <col:21> 'int' 32
|-FieldDecl 0x55f825b37f88 <line:161:5, col:13> col:13 referenced _ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55f825b37fe8 <line:162:5, col:13> col:13 referenced _tflags 'uint8_t':'unsigned char'
|-FieldDecl 0x55f825b38048 <line:163:5, col:10> col:10 referenced _guaranteed 'bool'
|-FieldDecl 0x55f825b380a8 <line:164:5, col:13> col:13 referenced _reply_anno 'uint8_t':'unsigned char'
|-FieldDecl 0x55f825b38108 <line:165:5, col:22> col:22 referenced _owner 'IPRewriterInput *'
|-FriendDecl 0x55f825b381b0 <line:167:5, col:18> col:12 'class IPRewriterBase':'IPRewriterBase'
|-FriendDecl 0x55f825b38240 <line:168:5, col:18> col:12 'class IPRewriterEntry':'IPRewriterEntry'
|-AccessSpecDecl 0x55f825b38280 <line:170:3, col:10> col:3 private
|-CXXMethodDecl 0x55f825b39410 <line:172:5, col:38> col:10 destroy 'void (IPRewriterHeap *)'
| `-ParmVarDecl 0x55f825b382b8 <col:18, col:34> col:34 heap 'IPRewriterHeap *'
|-CXXConstructorDecl 0x55f825b8d9a8 <line:68:7> col:7 implicit constexpr IPRewriterFlow 'void (const IPRewriterFlow &)' inline default trivial noexcept-unevaluated 0x55f825b8d9a8
| `-ParmVarDecl 0x55f825b8dab8 <col:7> col:7 'const IPRewriterFlow &'
|-CXXConstructorDecl 0x55f825b8dc38 <col:7> col:7 implicit constexpr IPRewriterFlow 'void (IPRewriterFlow &&)' inline default trivial noexcept-unevaluated 0x55f825b8dc38
| `-ParmVarDecl 0x55f825b8dd48 <col:7> col:7 'IPRewriterFlow &&'
`-CXXDestructorDecl 0x55f825b8df38 <col:7> col:7 implicit ~IPRewriterFlow 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterFlow = type { [2 x %class.IPRewriterEntry], i16, i16, i32, i32, i8, i8, i8, i8, %class.IPRewriterInput* }
  NonVirtualBaseLLVMType:%class.IPRewriterFlow = type { [2 x %class.IPRewriterEntry], i16, i16, i32, i32, i8, i8, i8, i8, %class.IPRewriterInput* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:32 IsSigned:0 StorageSize:32 StorageOffset:56>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825b8a348 <../elements/tcpudp/tcprewriter.hh:136:2, line:149:2> line:136:9 referenced struct delta_transition definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825b8a468 <col:2, col:9> col:9 implicit referenced struct delta_transition
|-FieldDecl 0x55f825b8a598 <line:137:6, col:21> col:14 referenced delta 'int32_t [2]'
|-FieldDecl 0x55f825b8a688 <line:138:6, col:25> col:16 referenced trigger 'tcp_seq_t [2]'
|-FieldDecl 0x55f825b8a6e8 <line:139:6, col:16> col:16 referenced nextptr 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55f825b8a7a0 <line:140:6, line:142:6> line:140:6 used delta_transition 'void ()'
| `-CompoundStmt 0x55f825b8e950 <col:25, line:142:6>
|   `-CallExpr 0x55f825b8e900 <line:141:3, col:43> 'void *'
|     |-ImplicitCastExpr 0x55f825b8e8e8 <col:3> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55f825b8e8c8 <col:3> 'void *(void *, int, size_t) throw()' lvalue Function 0x55f82577ba18 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55f825b8e938 <col:10> 'void *' <BitCast>
|     | `-CXXThisExpr 0x55f825b8e868 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' this
|     |-IntegerLiteral 0x55f825b8e878 <col:16> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55f825b8e8a8 <col:19, col:42> 'unsigned long' sizeof 'TCPRewriter::TCPFlow::delta_transition'
|-CXXMethodDecl 0x55f825b8a8c8 <line:143:6, line:145:6> line:143:24 used next 'TCPRewriter::TCPFlow::delta_transition *() const'
| `-CompoundStmt 0x55f825b8eb00 <col:37, line:145:6>
|   `-ReturnStmt 0x55f825b8eaf0 <line:144:3, col:70>
|     `-CXXReinterpretCastExpr 0x55f825b8eac0 <col:10, col:70> 'TCPRewriter::TCPFlow::delta_transition *' reinterpret_cast<struct TCPRewriter::TCPFlow::delta_transition *> <IntegralToPointer>
|       `-BinaryOperator 0x55f825b8ea90 <col:47, col:69> 'unsigned long' '-'
|         |-ImplicitCastExpr 0x55f825b8ea78 <col:47> 'uintptr_t':'unsigned long' <LValueToRValue>
|         | `-MemberExpr 0x55f825b8e978 <col:47> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55f825b8a6e8
|         |   `-CXXThisExpr 0x55f825b8e968 <col:47> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
|         `-ParenExpr 0x55f825b8ea58 <col:57, col:69> 'unsigned long'
|           `-BinaryOperator 0x55f825b8ea38 <col:58, col:68> 'unsigned long' '&'
|             |-ImplicitCastExpr 0x55f825b8ea08 <col:58> 'uintptr_t':'unsigned long' <LValueToRValue>
|             | `-MemberExpr 0x55f825b8e9b8 <col:58> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55f825b8a6e8
|             |   `-CXXThisExpr 0x55f825b8e9a8 <col:58> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
|             `-ImplicitCastExpr 0x55f825b8ea20 <col:68> 'unsigned long' <IntegralCast>
|               `-IntegerLiteral 0x55f825b8e9e8 <col:68> 'int' 3
|-CXXMethodDecl 0x55f825b8aa38 <line:146:6, line:148:6> line:146:11 used has_trigger 'bool (bool) const'
| |-ParmVarDecl 0x55f825b8a978 <col:23, col:28> col:28 used direction 'bool'
| `-CompoundStmt 0x55f825b8ec80 <col:45, line:148:6>
|   `-ReturnStmt 0x55f825b8ec70 <line:147:3, col:35>
|     `-ImplicitCastExpr 0x55f825b8ec58 <col:10, col:35> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55f825b8ec38 <col:10, col:35> 'unsigned long' '&'
|         |-ImplicitCastExpr 0x55f825b8ec08 <col:10> 'uintptr_t':'unsigned long' <LValueToRValue>
|         | `-MemberExpr 0x55f825b8eb28 <col:10> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55f825b8a6e8
|         |   `-CXXThisExpr 0x55f825b8eb18 <col:10> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
|         `-ImplicitCastExpr 0x55f825b8ec20 <col:20, col:35> 'unsigned long' <IntegralCast>
|           `-ParenExpr 0x55f825b8ebe8 <col:20, col:35> 'int'
|             `-BinaryOperator 0x55f825b8ebc8 <col:21, col:26> 'int' '<<'
|               |-IntegerLiteral 0x55f825b8eb58 <col:21> 'int' 1
|               `-ImplicitCastExpr 0x55f825b8ebb0 <col:26> 'int' <IntegralCast>
|                 `-ImplicitCastExpr 0x55f825b8eb98 <col:26> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x55f825b8eb78 <col:26> 'bool' lvalue ParmVar 0x55f825b8a978 'direction' 'bool'
|-CXXDestructorDecl 0x55f825b8e278 <line:136:9> col:9 implicit ~delta_transition 'void ()' inline default trivial noexcept-unevaluated 0x55f825b8e278
|-CXXConstructorDecl 0x55f825c7ac48 <col:9> col:9 implicit constexpr delta_transition 'void (const TCPRewriter::TCPFlow::delta_transition &)' inline default trivial noexcept-unevaluated 0x55f825c7ac48
| `-ParmVarDecl 0x55f825c7ad58 <col:9> col:9 'const TCPRewriter::TCPFlow::delta_transition &'
`-CXXConstructorDecl 0x55f825c7adf8 <col:9> col:9 implicit constexpr delta_transition 'void (TCPRewriter::TCPFlow::delta_transition &&)' inline default trivial noexcept-unevaluated 0x55f825c7adf8
  `-ParmVarDecl 0x55f825c7af08 <col:9> col:9 'TCPRewriter::TCPFlow::delta_transition &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.TCPRewriter::TCPFlow::delta_transition" = type { [2 x i32], [2 x i32], i64 }
  NonVirtualBaseLLVMType:%"struct.TCPRewriter::TCPFlow::delta_transition" = type { [2 x i32], [2 x i32], i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825b878a0 <../elements/tcpudp/tcprewriter.hh:97:5, line:155:5> line:97:11 referenced class TCPFlow definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-public 'IPRewriterFlow'
|-CXXRecordDecl 0x55f825b879f8 <col:5, col:11> col:11 implicit referenced class TCPFlow
|-AccessSpecDecl 0x55f825b87a88 <col:45, col:51> col:45 public
|-CXXConstructorDecl 0x55f825b87e38 <line:99:2, line:104:2> line:99:2 TCPFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55f825b87ac0 <col:10, col:27> col:27 used owner 'IPRewriterInput *'
| |-ParmVarDecl 0x55f825b87b38 <col:34, col:50> col:50 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55f825b87bb0 <line:100:3, col:19> col:19 used rewritten_flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55f825b87c28 <line:101:3, col:8> col:8 used guaranteed 'bool'
| |-ParmVarDecl 0x55f825b87ca0 <col:20, col:36> col:36 used expiry_j 'click_jiffies_t':'unsigned int'
| |-CXXCtorInitializer 'IPRewriterFlow'
| | `-CXXConstructExpr 0x55f825b8de18 <line:102:8, line:103:32> 'IPRewriterFlow' 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| |   |-ImplicitCastExpr 0x55f825b8ddb8 <line:102:23> 'IPRewriterInput *' <LValueToRValue>
| |   | `-DeclRefExpr 0x55f825b8d538 <col:23> 'IPRewriterInput *' lvalue ParmVar 0x55f825b87ac0 'owner' 'IPRewriterInput *'
| |   |-DeclRefExpr 0x55f825b8d558 <col:30> 'const IPFlowID' lvalue ParmVar 0x55f825b87b38 'flowid' 'const IPFlowID &'
| |   |-DeclRefExpr 0x55f825b8d578 <col:38> 'const IPFlowID' lvalue ParmVar 0x55f825b87bb0 'rewritten_flowid' 'const IPFlowID &'
| |   |-ImplicitCastExpr 0x55f825b8ddd0 <line:103:9> 'uint8_t':'unsigned char' <IntegralCast>
| |   | `-IntegerLiteral 0x55f825b8d598 <col:9> 'int' 6
| |   |-ImplicitCastExpr 0x55f825b8dde8 <col:12> 'bool' <LValueToRValue>
| |   | `-DeclRefExpr 0x55f825b8d5b8 <col:12> 'bool' lvalue ParmVar 0x55f825b87c28 'guaranteed' 'bool'
| |   `-ImplicitCastExpr 0x55f825b8de00 <col:24> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |     `-DeclRefExpr 0x55f825b8d5d8 <col:24> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55f825b87ca0 'expiry_j' 'click_jiffies_t':'unsigned int'
| |-CXXCtorInitializer Field 0x55f825b8ab08 '_dt' 'TCPRewriter::TCPFlow::delta_transition *'
| | `-ImplicitCastExpr 0x55f825b8ded8 <col:39> 'TCPRewriter::TCPFlow::delta_transition *' <NullToPointer>
| |   `-IntegerLiteral 0x55f825b8de98 <col:39> 'int' 0
| `-CompoundStmt 0x55f825b8df28 <col:42, line:104:2>
|-CXXDestructorDecl 0x55f825b87f50 <line:106:2, line:111:2> line:106:2 used ~TCPFlow 'void () noexcept'
| `-CompoundStmt 0x55f825b8e3d8 <col:13, line:111:2>
|   `-WhileStmt 0x55f825b8e3a0 <line:107:6, line:110:6> has_var
|     |-DeclStmt 0x55f825b8e3c0 <line:107:13, col:35>
|     | `-VarDecl 0x55f825b8e030 <col:13, col:35> col:31 used x 'TCPRewriter::TCPFlow::delta_transition *' cinit
|     |   `-ImplicitCastExpr 0x55f825b8e0d8 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|     |     `-MemberExpr 0x55f825b8e0a8 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55f825b8ab08
|     |       `-CXXThisExpr 0x55f825b8e098 <col:35> 'TCPRewriter::TCPFlow *' implicit this
|     |-ImplicitCastExpr 0x55f825b8e128 <col:31> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55f825b8e110 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f825b8e0f0 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55f825b8e030 'x' 'TCPRewriter::TCPFlow::delta_transition *'
|     `-CompoundStmt 0x55f825b8e380 <col:40, line:110:6>
|       |-BinaryOperator 0x55f825b8e220 <line:108:3, col:17> 'TCPRewriter::TCPFlow::delta_transition *' lvalue '='
|       | |-MemberExpr 0x55f825b8e150 <col:3> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55f825b8ab08
|       | | `-CXXThisExpr 0x55f825b8e140 <col:3> 'TCPRewriter::TCPFlow *' implicit this
|       | `-CXXMemberCallExpr 0x55f825b8e1e8 <col:9, col:17> 'TCPRewriter::TCPFlow::delta_transition *'
|       |   `-MemberExpr 0x55f825b8e1b8 <col:9, col:12> '<bound member function type>' ->next 0x55f825b8a8c8
|       |     `-ImplicitCastExpr 0x55f825b8e208 <col:9> 'const TCPRewriter::TCPFlow::delta_transition *' <NoOp>
|       |       `-ImplicitCastExpr 0x55f825b8e1a0 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|       |         `-DeclRefExpr 0x55f825b8e180 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55f825b8e030 'x' 'TCPRewriter::TCPFlow::delta_transition *'
|       `-CXXDeleteExpr 0x55f825b8e360 <line:109:3, col:10> 'void' Function 0x55f82566dca8 'operator delete' 'void (void *) noexcept'
|         `-ImplicitCastExpr 0x55f825b8e260 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|           `-DeclRefExpr 0x55f825b8e240 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55f825b8e030 'x' 'TCPRewriter::TCPFlow::delta_transition *'
|-EnumDecl 0x55f825b88030 <line:113:2, line:118:2> line:113:2
| |-EnumConstantDecl 0x55f825b88130 <line:114:6, col:23> col:6 referenced s_forward_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55f825b88510 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825b88110 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55f825b880f0 <col:23> 'int' 1
| |-EnumConstantDecl 0x55f825b881c0 <col:26, col:41> col:26 referenced s_reply_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55f825b88528 <col:41> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825b881a0 <col:41> 'int' Int: 2
| |     `-IntegerLiteral 0x55f825b88180 <col:41> 'int' 2
| |-EnumConstantDecl 0x55f825b882b0 <line:115:6, col:50> col:6 referenced s_both_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55f825b88540 <col:20, col:50> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825b88290 <col:20, col:50> 'int' Int: 3
| |     `-ParenExpr 0x55f825b88270 <col:20, col:50> 'int'
| |       `-BinaryOperator 0x55f825b88250 <col:21, col:38> 'int' '|'
| |         |-DeclRefExpr 0x55f825b88210 <col:21> 'int' EnumConstant 0x55f825b88130 's_forward_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |         `-DeclRefExpr 0x55f825b88230 <col:38> 'int' EnumConstant 0x55f825b881c0 's_reply_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-EnumConstantDecl 0x55f825b88340 <line:116:6, col:23> col:6 referenced s_forward_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55f825b88558 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825b88320 <col:23> 'int' Int: 4
| |     `-IntegerLiteral 0x55f825b88300 <col:23> 'int' 4
| |-EnumConstantDecl 0x55f825b883d0 <col:26, col:41> col:26 referenced s_reply_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55f825b88570 <col:41> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825b883b0 <col:41> 'int' Int: 8
| |     `-IntegerLiteral 0x55f825b88390 <col:41> 'int' 8
| `-EnumConstantDecl 0x55f825b884c0 <line:117:6, col:50> col:6 referenced s_both_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|   `-ImplicitCastExpr 0x55f825b88588 <col:20, col:50> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825b884a0 <col:20, col:50> 'int' Int: 12
|       `-ParenExpr 0x55f825b88480 <col:20, col:50> 'int'
|         `-BinaryOperator 0x55f825b88460 <col:21, col:38> 'int' '|'
|           |-DeclRefExpr 0x55f825b88420 <col:21> 'int' EnumConstant 0x55f825b88340 's_forward_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|           `-DeclRefExpr 0x55f825b88440 <col:38> 'int' EnumConstant 0x55f825b883d0 's_reply_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|-CXXMethodDecl 0x55f825b885e8 <line:119:2, line:121:2> line:119:7 used both_done 'bool () const'
| `-CompoundStmt 0x55f825b8e5f0 <col:25, line:121:2>
|   `-ReturnStmt 0x55f825b8e5e0 <line:120:6, col:40>
|     `-BinaryOperator 0x55f825b8e5c0 <col:13, col:40> 'bool' '=='
|       |-ParenExpr 0x55f825b8e4d8 <col:13, col:35> 'int'
|       | `-BinaryOperator 0x55f825b8e4b8 <col:14, col:24> 'int' '&'
|       |   |-ImplicitCastExpr 0x55f825b8e488 <col:14> 'int' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x55f825b8e470 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   |   `-MemberExpr 0x55f825b8e420 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55f825b37fe8
|       |   |     `-ImplicitCastExpr 0x55f825b8e400 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
|       |   |       `-CXXThisExpr 0x55f825b8e3f0 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
|       |   `-ImplicitCastExpr 0x55f825b8e4a0 <col:24> 'int' <IntegralCast>
|       |     `-DeclRefExpr 0x55f825b8e450 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55f825b882b0 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|       `-ImplicitCastExpr 0x55f825b8e5a8 <col:40> 'int' <IntegralCast>
|         `-DeclRefExpr 0x55f825b8e4f8 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55f825b882b0 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|-CXXMethodDecl 0x55f825b886a8 <line:122:2, line:124:2> line:122:7 used both_data 'bool () const'
| `-CompoundStmt 0x55f825b8e808 <col:25, line:124:2>
|   `-ReturnStmt 0x55f825b8e7f8 <line:123:6, col:40>
|     `-BinaryOperator 0x55f825b8e7d8 <col:13, col:40> 'bool' '=='
|       |-ParenExpr 0x55f825b8e6f0 <col:13, col:35> 'int'
|       | `-BinaryOperator 0x55f825b8e6d0 <col:14, col:24> 'int' '&'
|       |   |-ImplicitCastExpr 0x55f825b8e6a0 <col:14> 'int' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x55f825b8e688 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   |   `-MemberExpr 0x55f825b8e638 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55f825b37fe8
|       |   |     `-ImplicitCastExpr 0x55f825b8e618 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
|       |   |       `-CXXThisExpr 0x55f825b8e608 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
|       |   `-ImplicitCastExpr 0x55f825b8e6b8 <col:24> 'int' <IntegralCast>
|       |     `-DeclRefExpr 0x55f825b8e668 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55f825b884c0 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|       `-ImplicitCastExpr 0x55f825b8e7c0 <col:40> 'int' <IntegralCast>
|         `-DeclRefExpr 0x55f825b8e710 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55f825b884c0 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|-CXXMethodDecl 0x55f825b88970 <line:126:2, col:75> col:6 update_seqno_delta 'int (bool, tcp_seq_t, int32_t)'
| |-ParmVarDecl 0x55f825b88758 <col:25, col:30> col:30 direction 'bool'
| |-ParmVarDecl 0x55f825b887d0 <col:41, col:51> col:51 old_seqno 'tcp_seq_t':'unsigned int'
| `-ParmVarDecl 0x55f825b88848 <col:62, col:70> col:70 delta 'int32_t':'int'
|-CXXMethodDecl 0x55f825b88bc8 <line:127:2, col:53> col:12 new_seq 'tcp_seq_t (bool, tcp_seq_t) const'
| |-ParmVarDecl 0x55f825b88a38 <col:20, col:25> col:25 direction 'bool'
| `-ParmVarDecl 0x55f825b88ab0 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
|-CXXMethodDecl 0x55f825b89db8 <line:128:2, col:53> col:12 new_ack 'tcp_seq_t (bool, tcp_seq_t) const'
| |-ParmVarDecl 0x55f825b88c88 <col:20, col:25> col:25 direction 'bool'
| `-ParmVarDecl 0x55f825b89d20 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
|-CXXMethodDecl 0x55f825b8a010 <line:130:2, col:62> col:7 apply 'void (WritablePacket *, bool, unsigned int)'
| |-ParmVarDecl 0x55f825b89e78 <col:13, col:29> col:29 p 'WritablePacket *'
| |-ParmVarDecl 0x55f825b89ef0 <col:32, col:37> col:37 direction 'bool'
| `-ParmVarDecl 0x55f825b89f70 <col:48, col:57> col:57 annos 'unsigned int'
|-CXXMethodDecl 0x55f825b8a268 <line:132:2, col:69> col:7 unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x55f825b8a0d8 <col:15, col:28> col:28 sa 'StringAccum &'
| |-ParmVarDecl 0x55f825b8a150 <col:32, col:37> col:37 direction 'bool'
| `-ParmVarDecl 0x55f825b8a1c8 <col:48, col:64> col:64 now 'click_jiffies_t':'unsigned int'
|-AccessSpecDecl 0x55f825b8a320 <line:134:7, col:14> col:7 private
|-CXXRecordDecl 0x55f825b8a348 <line:136:2, line:149:2> line:136:9 referenced struct delta_transition definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f825b8a468 <col:2, col:9> col:9 implicit referenced struct delta_transition
| |-FieldDecl 0x55f825b8a598 <line:137:6, col:21> col:14 referenced delta 'int32_t [2]'
| |-FieldDecl 0x55f825b8a688 <line:138:6, col:25> col:16 referenced trigger 'tcp_seq_t [2]'
| |-FieldDecl 0x55f825b8a6e8 <line:139:6, col:16> col:16 referenced nextptr 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55f825b8a7a0 <line:140:6, line:142:6> line:140:6 used delta_transition 'void ()'
| | `-CompoundStmt 0x55f825b8e950 <col:25, line:142:6>
| |   `-CallExpr 0x55f825b8e900 <line:141:3, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55f825b8e8e8 <col:3> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55f825b8e8c8 <col:3> 'void *(void *, int, size_t) throw()' lvalue Function 0x55f82577ba18 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55f825b8e938 <col:10> 'void *' <BitCast>
| |     | `-CXXThisExpr 0x55f825b8e868 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' this
| |     |-IntegerLiteral 0x55f825b8e878 <col:16> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55f825b8e8a8 <col:19, col:42> 'unsigned long' sizeof 'TCPRewriter::TCPFlow::delta_transition'
| |-CXXMethodDecl 0x55f825b8a8c8 <line:143:6, line:145:6> line:143:24 used next 'TCPRewriter::TCPFlow::delta_transition *() const'
| | `-CompoundStmt 0x55f825b8eb00 <col:37, line:145:6>
| |   `-ReturnStmt 0x55f825b8eaf0 <line:144:3, col:70>
| |     `-CXXReinterpretCastExpr 0x55f825b8eac0 <col:10, col:70> 'TCPRewriter::TCPFlow::delta_transition *' reinterpret_cast<struct TCPRewriter::TCPFlow::delta_transition *> <IntegralToPointer>
| |       `-BinaryOperator 0x55f825b8ea90 <col:47, col:69> 'unsigned long' '-'
| |         |-ImplicitCastExpr 0x55f825b8ea78 <col:47> 'uintptr_t':'unsigned long' <LValueToRValue>
| |         | `-MemberExpr 0x55f825b8e978 <col:47> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55f825b8a6e8
| |         |   `-CXXThisExpr 0x55f825b8e968 <col:47> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| |         `-ParenExpr 0x55f825b8ea58 <col:57, col:69> 'unsigned long'
| |           `-BinaryOperator 0x55f825b8ea38 <col:58, col:68> 'unsigned long' '&'
| |             |-ImplicitCastExpr 0x55f825b8ea08 <col:58> 'uintptr_t':'unsigned long' <LValueToRValue>
| |             | `-MemberExpr 0x55f825b8e9b8 <col:58> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55f825b8a6e8
| |             |   `-CXXThisExpr 0x55f825b8e9a8 <col:58> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| |             `-ImplicitCastExpr 0x55f825b8ea20 <col:68> 'unsigned long' <IntegralCast>
| |               `-IntegerLiteral 0x55f825b8e9e8 <col:68> 'int' 3
| |-CXXMethodDecl 0x55f825b8aa38 <line:146:6, line:148:6> line:146:11 used has_trigger 'bool (bool) const'
| | |-ParmVarDecl 0x55f825b8a978 <col:23, col:28> col:28 used direction 'bool'
| | `-CompoundStmt 0x55f825b8ec80 <col:45, line:148:6>
| |   `-ReturnStmt 0x55f825b8ec70 <line:147:3, col:35>
| |     `-ImplicitCastExpr 0x55f825b8ec58 <col:10, col:35> 'bool' <IntegralToBoolean>
| |       `-BinaryOperator 0x55f825b8ec38 <col:10, col:35> 'unsigned long' '&'
| |         |-ImplicitCastExpr 0x55f825b8ec08 <col:10> 'uintptr_t':'unsigned long' <LValueToRValue>
| |         | `-MemberExpr 0x55f825b8eb28 <col:10> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55f825b8a6e8
| |         |   `-CXXThisExpr 0x55f825b8eb18 <col:10> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| |         `-ImplicitCastExpr 0x55f825b8ec20 <col:20, col:35> 'unsigned long' <IntegralCast>
| |           `-ParenExpr 0x55f825b8ebe8 <col:20, col:35> 'int'
| |             `-BinaryOperator 0x55f825b8ebc8 <col:21, col:26> 'int' '<<'
| |               |-IntegerLiteral 0x55f825b8eb58 <col:21> 'int' 1
| |               `-ImplicitCastExpr 0x55f825b8ebb0 <col:26> 'int' <IntegralCast>
| |                 `-ImplicitCastExpr 0x55f825b8eb98 <col:26> 'bool' <LValueToRValue>
| |                   `-DeclRefExpr 0x55f825b8eb78 <col:26> 'bool' lvalue ParmVar 0x55f825b8a978 'direction' 'bool'
| |-CXXDestructorDecl 0x55f825b8e278 <line:136:9> col:9 implicit ~delta_transition 'void ()' inline default trivial noexcept-unevaluated 0x55f825b8e278
| |-CXXConstructorDecl 0x55f825c7ac48 <col:9> col:9 implicit constexpr delta_transition 'void (const TCPRewriter::TCPFlow::delta_transition &)' inline default trivial noexcept-unevaluated 0x55f825c7ac48
| | `-ParmVarDecl 0x55f825c7ad58 <col:9> col:9 'const TCPRewriter::TCPFlow::delta_transition &'
| `-CXXConstructorDecl 0x55f825c7adf8 <col:9> col:9 implicit constexpr delta_transition 'void (TCPRewriter::TCPFlow::delta_transition &&)' inline default trivial noexcept-unevaluated 0x55f825c7adf8
|   `-ParmVarDecl 0x55f825c7af08 <col:9> col:9 'TCPRewriter::TCPFlow::delta_transition &&'
|-FieldDecl 0x55f825b8ab08 <line:151:2, col:20> col:20 referenced _dt 'TCPRewriter::TCPFlow::delta_transition *'
`-CXXMethodDecl 0x55f825b8ad48 <line:153:2, col:67> col:7 apply_sack 'void (bool, click_tcp *, int)'
  |-ParmVarDecl 0x55f825b8ab68 <col:18, col:23> col:23 direction 'bool'
  |-ParmVarDecl 0x55f825b8abe0 <col:34, col:45> col:45 tcp 'click_tcp *'
  `-ParmVarDecl 0x55f825b8ac60 <col:50, col:54> col:54 transport_len 'int'

Layout: <CGRecordLayout
  LLVMType:%"class.TCPRewriter::TCPFlow" = type { %class.IPRewriterFlow, %"struct.TCPRewriter::TCPFlow::delta_transition"* }
  NonVirtualBaseLLVMType:%"class.TCPRewriter::TCPFlow" = type { %class.IPRewriterFlow, %"struct.TCPRewriter::TCPFlow::delta_transition"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825b87078 prev 0x55f825a47610 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 referenced struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55f825b87170 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x55f825b87210 <line:25:5, col:14> col:14 th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55f825b87270 <line:26:5, col:14> col:14 th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x55f825b872f0 <line:27:5, col:15> col:15 th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55f825b87350 <line:28:5, col:15> col:15 th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55f825b873f8 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x55f825b873d8 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x55f825b873a0 <col:26> 'int' 4
|-FieldDecl 0x55f825b874a0 <line:31:5, col:23> col:14 referenced th_off 'unsigned int'
| `-ConstantExpr 0x55f825b87480 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x55f825b87448 <col:23> 'int' 4
|-FieldDecl 0x55f825b87500 <line:39:5, col:13> col:13 th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x55f825b87560 <line:48:5, col:14> col:14 th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x55f825b875c0 <line:49:5, col:14> col:14 referenced th_sum 'uint16_t':'unsigned short'
`-FieldDecl 0x55f825b87620 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8257d9180 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8257d9298 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55f8257d9328 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55f8257d93f8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55f8257d94e0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55f8257d96f8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55f8257d95a0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8257d98a8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55f8257d97b0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55f8257d99f0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55f8257d9960 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55f8257da510 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55f8257da480 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8257da658 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55f8257da5c8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8257da720 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55f8257da868 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55f8257da7d8 <col:28> col:31 'int'
|-CXXMethodDecl 0x55f8257da930 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55f8257daa78 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55f8257da9e8 <col:28> col:31 'int'
|-CXXMethodDecl 0x55f8257dabf8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55f8257dab30 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8257dad40 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55f8257dacb0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8257dae08 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55f8257dafc8 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55f8257daeb8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f8257daf30 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8257db218 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55f8257db088 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f8257db100 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f8257db2c8 <col:86> "" ""
|-CXXMethodDecl 0x55f8257db538 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55f8257db3a8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55f8257db420 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8257db6e8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55f8257db5f8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55f8257db898 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55f8257db7a0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55f8257dbb68 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55f8257db950 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55f8257db9c8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f8257dba40 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8257dbe48 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55f8257dbc30 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55f8257dbca8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f8257dbd20 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f8257dbf00 <col:115> "" ""
|-AccessSpecDecl 0x55f8257dbf70 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55f8257dbfa8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f8257dc6b0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55f8257dc6b0
| `-ParmVarDecl 0x55f8257dc7b8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55f8257dc858 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55f8257dc858
| `-ParmVarDecl 0x55f8257dc968 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55f82587b358 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f825a70d30 <col:7>
|-CXXConstructorDecl 0x55f82587b430 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55f82587b430
| `-ParmVarDecl 0x55f82587b548 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55f82587b5b8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55f82587b5b8
| `-ParmVarDecl 0x55f82587b6c8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55f825a736a0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825a5bdb8 prev 0x55f825a4e200 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825a5beb0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55f825a5bfa0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55f825a5c0c8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55f825a5c248 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55f825a5c3c8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55f825a5c548 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55f825a70e98 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f825a71708 <col:11>
|-CXXDestructorDecl 0x55f825a70f70 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f825a710a8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55f825a710a8
| `-ParmVarDecl 0x55f825a711b8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55f825a71258 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f825a71258
| `-ParmVarDecl 0x55f825a71368 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55f825a74098 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825a741a8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55f825a74428 <col:11>
|   `-ReturnStmt 0x55f825a74418 <col:11>
|     `-UnaryOperator 0x55f825a74400 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f825a743f0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55f825a74218 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f825a74218
  `-ParmVarDecl 0x55f825a74328 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825a5c5b0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825a5c6c8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55f825a5c768 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55f825a5c7d0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55f825a5c838 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55f825a5c8a0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55f825a5c900 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55f825a5c9c0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55f825a5ca20 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55f825a5ca80 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55f825a70da8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55f825a5c768 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55f825a71718 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55f825a71770 <col:12>
|-CXXConstructorDecl 0x55f825a713d8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55f825a713d8
| `-ParmVarDecl 0x55f825a714e8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55f825a71588 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55f825a71588
| `-ParmVarDecl 0x55f825a71698 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55f825a73780 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825a478d0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f825a47a58 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55f825a47ae8 <col:16, col:22> col:16 public
|-EnumDecl 0x55f825a47b10 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55f825a47c10 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55f825a47cf0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a47bf0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55f825a47bd0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55f825a47ca0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55f825a47d08 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a47c80 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55f825a47c60 <col:22> 'int' 64
|-CXXMethodDecl 0x55f825a48048 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55f825a47d30 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f825a47db0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55f825a47e28 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f825a47ea0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f825a48108 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55f825a48308 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55f825a48180 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55f825a481f8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f825a483b8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55f825a48518 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55f825a48428 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f825a485c0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55f825a488f0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55f825a48880 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55f825a48820 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55f825a487e0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55f8255162d0 'void'
|       |-PointerType 0x55f8257c3b10 'unsigned char *'
|       | `-BuiltinType 0x55f8255163d0 'unsigned char'
|       |-TypedefType 0x55f8255bfb40 'size_t' sugar
|       | |-Typedef 0x55f825586b20 'size_t'
|       | `-BuiltinType 0x55f825516430 'unsigned long'
|       `-PointerType 0x55f825516ad0 'void *'
|         `-BuiltinType 0x55f8255162d0 'void'
|-CXXMethodDecl 0x55f825a48d68 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55f825a48960 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55f825a489d8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f825a48a70 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55f825a48af0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55f825a67300 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55f825a672e8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55f825a672b0 <col:58> 'int' 0
| |-ParmVarDecl 0x55f825a48b70 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55f825a67328 <col:76> 'int' 0
| |-ParmVarDecl 0x55f825a48bf0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55f825a67348 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55f825a48e38 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55f825a48eb8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55f825a48f78 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55f825a49018 <col:20>
| `-OptimizeNoneAttr 0x55f825a49070 <col:30>
|-CXXMethodDecl 0x55f825a490e8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55f825a49188 <col:20>
| `-OptimizeNoneAttr 0x55f825a491e0 <col:30>
|-CXXMethodDecl 0x55f825a49258 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55f825a492f8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55f825a493a8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55f825a49448 <col:20>
| |-OptimizeNoneAttr 0x55f825a494a0 <col:30>
| `-WarnUnusedResultAttr 0x55f825a494c8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55f825a49520 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55f825a495c0 <col:20>
| `-OptimizeNoneAttr 0x55f825a49618 <col:30>
|-CXXMethodDecl 0x55f825a49668 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55f825a49708 <col:20>
| `-OptimizeNoneAttr 0x55f825a49760 <col:30>
|-CXXMethodDecl 0x55f825a497a8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55f825a49848 <col:20>
| `-OptimizeNoneAttr 0x55f825a498a0 <col:30>
|-CXXMethodDecl 0x55f825a498e8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55f825a499a8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55f825a49a70 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f825a49b38 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f825a49bf8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f825a49d18 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55f825a67410 <col:54, line:99:5>
|   `-ReturnStmt 0x55f825a67400 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55f825a673e8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55f825a673b8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55f825a661a8
|         `-CXXThisExpr 0x55f825a673a8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55f825a49eb8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55f825a49dc8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55f825a674c0 <col:67, line:103:5>
|   `-BinaryOperator 0x55f825a674a0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55f825a67438 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55f825a661a8
|     | `-CXXThisExpr 0x55f825a67428 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55f825a67488 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55f825a67468 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55f825a49dc8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55f825a49fb0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55f825a67540 <col:33, line:107:5>
|   `-ReturnStmt 0x55f825a67530 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55f825a67518 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55f825a674e8 <col:16> 'void *' lvalue ->_destructor_argument 0x55f825a66210
|         `-CXXThisExpr 0x55f825a674d8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55f825a4a070 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55f825a67b70 <col:25, line:113:5>
|   |-ParenExpr 0x55f825a678b8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55f825a67888 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a675f8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55f825a675d0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55f825a67598 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55f825a67568 <col:24> '<bound member function type>' ->shared 0x55f825a490e8
|   |   |       `-ImplicitCastExpr 0x55f825a675b8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55f825a67558 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55f825a67658 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a67638 <col:42> 'int' 0
|   |   `-CallExpr 0x55f825a677e8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55f825a677d0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a677b0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a67828 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a676c8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55f825a67840 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a676f0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f825a67858 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a67728 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55f825a67870 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a67798 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a67780 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a67748 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55f825a67ab8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55f825a678e8 <col:2> 'unsigned char *' lvalue ->_head 0x55f825a5cbc0
|   | | `-CXXThisExpr 0x55f825a678d8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55f825a67aa0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55f825a67a80 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55f825a67928 <col:10> 'unsigned char *' lvalue ->_data 0x55f825a5cc28
|   |     | `-CXXThisExpr 0x55f825a67918 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55f825a67a68 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55f825a67a48 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55f825a67968 <col:18> 'unsigned char *' lvalue ->_tail 0x55f825a66080
|   |         | `-CXXThisExpr 0x55f825a67958 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55f825a67a30 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55f825a67a10 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55f825a679a8 <col:26> 'unsigned char *' lvalue ->_end 0x55f825a660e8
|   |             | `-CXXThisExpr 0x55f825a67998 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55f825a679f8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55f825a679d8 <col:33> 'int' 0
|   `-BinaryOperator 0x55f825a67b50 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55f825a67ae8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55f825a661a8
|     | `-CXXThisExpr 0x55f825a67ad8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55f825a67b38 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55f825a67b18 <col:16> 'int' 0
|-CXXMethodDecl 0x55f825a4a1b0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55f825a4a120 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f825a4a258 <col:20>
| |-OptimizeNoneAttr 0x55f825a4a2b0 <col:30>
| `-WarnUnusedResultAttr 0x55f825a4a2d8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55f825a4a3a8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55f825a4a318 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f825a4a450 <col:20>
| |-OptimizeNoneAttr 0x55f825a4a4a8 <col:30>
| `-WarnUnusedResultAttr 0x55f825a4a4d0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55f825a4a608 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55f825a4a510 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f825a4a6b0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55f825a4a7b0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55f825a4a720 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f825a4a858 <col:20>
| `-OptimizeNoneAttr 0x55f825a4a8b0 <col:30>
|-CXXMethodDecl 0x55f825a4a978 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55f825a4a8e8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f825a4aa20 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55f825a4ab20 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55f825a4aa90 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55f825a4abc8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55f825a4acc8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55f825a4ac38 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f825a4ad70 <col:20>
| `-OptimizeNoneAttr 0x55f825a4adc8 <col:30>
|-CXXMethodDecl 0x55f825a4af58 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55f825a4ae08 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55f825a4ae80 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55f825a67368 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55f825a4b008 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55f825a4b208 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55f825a4b080 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55f825a4b0f8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a4b418 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55f825a4b2c8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f825a4b340 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a4b628 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55f825a4b4d8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55f825a4b558 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55f825a67378 <col:39> 'int' 0
|-CXXMethodDecl 0x55f825a4b6f8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55f825a4b7c0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55f825a4b888 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f825a4b948 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f825a4ba28 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55f825a4bb70 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55f825a4bae0 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55f825a4bd40 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55f825a4bc30 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55f825a4bca8 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a4be10 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55f825a4bed0 <line:288:5, col:66> col:45 used has_network_header 'bool () const'
| |-NoInlineAttr 0x55f825a4bf70 <col:20>
| `-OptimizeNoneAttr 0x55f825a4bfc8 <col:30>
|-CXXMethodDecl 0x55f825a4c018 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55f825a4c0b8 <col:20>
| `-OptimizeNoneAttr 0x55f825a4c110 <col:30>
|-CXXMethodDecl 0x55f825a4c160 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f825a4c220 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f825a4c2e8 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55f825a4c388 <col:20>
| `-OptimizeNoneAttr 0x55f825a4c3e0 <col:30>
|-CXXMethodDecl 0x55f825a4c530 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55f825a4c420 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55f825a4c498 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a4c680 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55f825a4c5f0 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a4c748 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55f825a4c808 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55f825a4c8a8 <col:20>
| `-OptimizeNoneAttr 0x55f825a4c900 <col:30>
|-CXXMethodDecl 0x55f825a4c950 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55f825a4c9f0 <col:20>
| `-OptimizeNoneAttr 0x55f825a4ca48 <col:30>
|-CXXMethodDecl 0x55f825a4ca98 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f825a4cb60 <line:300:5, col:63> col:44 used transport_length 'int () const'
| |-NoInlineAttr 0x55f825a4cc00 <col:20>
| `-OptimizeNoneAttr 0x55f825a4cc58 <col:30>
|-CXXMethodDecl 0x55f825a4cca0 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55f825a4cdb8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55f825a4cf28 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55f825a4ce68 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55f825a4d018 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55f825a4d0b8 <col:20>
| `-OptimizeNoneAttr 0x55f825a4d110 <col:30>
|-CXXMethodDecl 0x55f825a4d160 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55f825a4d220 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55f825a4d458 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55f825a4d2d0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55f825a4d348 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f825a4d508 <col:20>
| `-OptimizeNoneAttr 0x55f825a4d560 <col:30>
|-CXXMethodDecl 0x55f825a4d608 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55f825a4d6a8 <col:20>
| `-OptimizeNoneAttr 0x55f825a4d700 <col:30>
|-CXXMethodDecl 0x55f825a4d750 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55f825a4d7f0 <col:20>
| `-OptimizeNoneAttr 0x55f825a4d848 <col:30>
|-CXXMethodDecl 0x55f825a4d890 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55f825a4d930 <col:20>
| `-OptimizeNoneAttr 0x55f825a4d988 <col:30>
|-CXXMethodDecl 0x55f825a4da88 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55f825a4d9c0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55f825a4db30 <col:20>
| `-OptimizeNoneAttr 0x55f825a4db88 <col:30>
|-CXXMethodDecl 0x55f825a4dd48 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55f825a4dbc0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55f825a4dc38 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f825a4ddf8 <col:20>
| `-OptimizeNoneAttr 0x55f825a4de50 <col:30>
|-CXXMethodDecl 0x55f825a4def8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55f825a4e018 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55f825a4e138 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55f825a4e1d8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55f825a4e200 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55f825a4e328 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55f825a4e3c8 <col:20>
| `-OptimizeNoneAttr 0x55f825a4e420 <col:30>
|-CXXMethodDecl 0x55f825a4e4c8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55f825a4e568 <col:20>
| `-OptimizeNoneAttr 0x55f825a4e5c0 <col:30>
|-AccessSpecDecl 0x55f825a4e5e8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55f825a4e610 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55f825a4e710 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55f825a4e760 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a4e6f0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55f825a4e6d0 <col:14> 'int' 48
|-CXXMethodDecl 0x55f825a4e7c8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55f825a4e868 <col:20>
| `-OptimizeNoneAttr 0x55f825a4e8c0 <col:30>
|-CXXMethodDecl 0x55f825a4e938 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55f825a4e9d8 <col:20>
| `-OptimizeNoneAttr 0x55f825a4ea30 <col:30>
|-CXXMethodDecl 0x55f825a4eaf8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55f825a4ea68 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55f825a4ec98 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55f825a4ee38 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55f825a4ed48 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55f825a4eee0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55f825a4efe0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f825a4f390 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a4efc0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55f825a4efa0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55f825a4f070 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f825a4f3a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a4f050 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55f825a4f030 <col:14> 'int' 1
| |-EnumConstantDecl 0x55f825a4f100 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f825a4f3c0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a4f0e0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55f825a4f0c0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55f825a4f190 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f825a4f3d8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a4f170 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55f825a4f150 <col:14> 'int' 3
| |-EnumConstantDecl 0x55f825a4f220 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f825a4f3f0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a4f200 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55f825a4f1e0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55f825a4f2b0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55f825a4f408 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a4f290 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55f825a4f270 <col:13> 'int' 5
| `-EnumConstantDecl 0x55f825a4f340 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55f825a4f420 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a4f320 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55f825a4f300 <col:14> 'int' 6
|-CXXMethodDecl 0x55f825a4f488 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55f825a4f528 <col:20>
| `-OptimizeNoneAttr 0x55f825a4f580 <col:30>
|-CXXMethodDecl 0x55f825a4f678 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55f825a4f5b8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55f825a4f720 <col:20>
| `-OptimizeNoneAttr 0x55f825a4f778 <col:30>
|-CXXMethodDecl 0x55f825a4f7e8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55f825a4f910 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55f825a4fad8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55f825a4fa10 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55f825a4fba0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55f825a4fc68 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55f825a4fda8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55f825a4fd18 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55f825a4fe50 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55f825a4ff50 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55f825a50150 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a4ff30 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55f825a4ff10 <col:23> 'int' 0
| |-EnumConstantDecl 0x55f825a4ffe0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55f825a50168 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a4ffc0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55f825a4ffa0 <col:45> 'int' 4
| |-EnumConstantDecl 0x55f825a50070 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55f825a50180 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a50050 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55f825a50030 <col:24> 'int' 0
| `-EnumConstantDecl 0x55f825a50100 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55f825a50198 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a500e0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55f825a500c0 <col:47> 'int' 16
|-CXXMethodDecl 0x55f825a501f8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55f825a50368 <line:436:5, col:75> col:45 used set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55f825a502a8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55f825a50410 <col:20>
| `-OptimizeNoneAttr 0x55f825a50468 <col:30>
|-CXXMethodDecl 0x55f825a504b8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55f825a67c90 <col:18, col:36>
|   `-ReturnStmt 0x55f825a67c80 <col:20, col:33>
|     `-ImplicitCastExpr 0x55f825a67c68 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55f825a67c48 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55f825a67c18 <col:27> '<bound member function type>' ->xanno 0x55f825a4e4c8
|           `-CXXThisExpr 0x55f825a67c08 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55f825a505b0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55f825a67da0 <col:30, col:48>
|   `-ReturnStmt 0x55f825a67d90 <col:32, col:45>
|     `-ImplicitCastExpr 0x55f825a67d78 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55f825a67d58 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55f825a67d28 <col:39> '<bound member function type>' ->xanno 0x55f825a4e328
|           `-CXXThisExpr 0x55f825a67d18 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55f825a50698 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55f825a67f38 <col:24, col:50>
|   `-ReturnStmt 0x55f825a67f28 <col:26, col:47>
|     `-UnaryOperator 0x55f825a67f10 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f825a67ef0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55f825a67ed8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f825a67e88 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55f825a5c0c8
|         |   `-CXXMemberCallExpr 0x55f825a67e68 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55f825a67e38 <col:34> '<bound member function type>' ->xanno 0x55f825a4e4c8
|         |       `-CXXThisExpr 0x55f825a67e28 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55f825a67eb8 <col:46> 'int' 0
|-CXXMethodDecl 0x55f825a50788 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55f825a68108 <col:36, col:62>
|   `-ReturnStmt 0x55f825a680f8 <col:38, col:59>
|     `-UnaryOperator 0x55f825a680e0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f825a680c0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55f825a680a8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f825a68020 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55f825a5c0c8
|         |   `-CXXMemberCallExpr 0x55f825a68000 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55f825a67fd0 <col:46> '<bound member function type>' ->xanno 0x55f825a4e328
|         |       `-CXXThisExpr 0x55f825a67fc0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55f825a68050 <col:58> 'int' 0
|-CXXMethodDecl 0x55f825a508a8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55f825a682a0 <col:26, col:53>
|   `-ReturnStmt 0x55f825a68290 <col:28, col:50>
|     `-UnaryOperator 0x55f825a68278 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f825a68258 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55f825a68240 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f825a681f0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55f825a5c3c8
|         |   `-CXXMemberCallExpr 0x55f825a681d0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55f825a681a0 <col:36> '<bound member function type>' ->xanno 0x55f825a4e4c8
|         |       `-CXXThisExpr 0x55f825a68190 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55f825a68220 <col:49> 'int' 0
|-CXXMethodDecl 0x55f825a509c8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55f825a68478 <col:38, col:65>
|   `-ReturnStmt 0x55f825a68468 <col:40, col:62>
|     `-UnaryOperator 0x55f825a68450 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55f825a68430 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55f825a68418 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f825a68388 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55f825a5c3c8
|         |   `-CXXMemberCallExpr 0x55f825a68368 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55f825a68338 <col:48> '<bound member function type>' ->xanno 0x55f825a4e328
|         |       `-CXXThisExpr 0x55f825a68328 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55f825a683b8 <col:61> 'int' 0
|-CXXMethodDecl 0x55f825a50b78 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55f825a50a80 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55f825a68b48 <col:34, line:463:5>
|   |-ParenExpr 0x55f825a68990 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55f825a68960 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a685c8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825a68598 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f825a684e8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f825a684d0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f825a68490 <col:23> 'int' lvalue ParmVar 0x55f825a50a80 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f825a684b0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f825a68578 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f825a68548 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f825a68508 <col:33> 'int' lvalue ParmVar 0x55f825a50a80 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55f825a68560 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55f825a68528 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f825a4e710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55f825a68628 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a68608 <col:56> 'int' 0
|   |   `-CallExpr 0x55f825a688c0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55f825a688a8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a68888 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a68900 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a68718 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55f825a68918 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a68748 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f825a68930 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a68780 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55f825a68948 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a68870 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a68858 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a68818 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55f825a68b38 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55f825a68b20 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55f825a68b00 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55f825a68ad0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55f825a68a80 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55f825a5c0c8
|         |   `-CXXMemberCallExpr 0x55f825a68a60 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55f825a68a30 <col:9> '<bound member function type>' ->xanno 0x55f825a4e328
|         |       `-CXXThisExpr 0x55f825a68a20 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55f825a68ae8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55f825a68ab0 <col:21> 'int' lvalue ParmVar 0x55f825a50a80 'i' 'int'
|-CXXMethodDecl 0x55f825a50dc8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55f825a50c38 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55f825a50cb0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55f825a691d8 <col:40, line:472:5>
|   |-ParenExpr 0x55f825a68ff0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55f825a68fc0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a68ca0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825a68c70 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f825a68bc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f825a68ba8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f825a68b68 <col:23> 'int' lvalue ParmVar 0x55f825a50c38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f825a68b88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f825a68c50 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f825a68c20 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f825a68be0 <col:33> 'int' lvalue ParmVar 0x55f825a50c38 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55f825a68c38 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55f825a68c00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f825a4e710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55f825a68d00 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a68ce0 <col:56> 'int' 0
|   |   `-CallExpr 0x55f825a68f20 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55f825a68f08 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a68ee8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a68f60 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a68d70 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55f825a68f78 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a68da0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f825a68f90 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a68dd8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55f825a68fa8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a68ed0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a68eb8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a68e78 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55f825a691b8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55f825a69160 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55f825a69130 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55f825a690e0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55f825a5c0c8
|     | |   `-CXXMemberCallExpr 0x55f825a690c0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55f825a69090 <col:2> '<bound member function type>' ->xanno 0x55f825a4e4c8
|     | |       `-CXXThisExpr 0x55f825a69080 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55f825a69148 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55f825a69110 <col:14> 'int' lvalue ParmVar 0x55f825a50c38 'i' 'int'
|     `-ImplicitCastExpr 0x55f825a691a0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55f825a69180 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55f825a50cb0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55f825a50f88 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55f825a50e90 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55f825a69958 <col:36, line:485:5>
|   |-ParenExpr 0x55f825a696c0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f825a69690 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a69370 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825a69340 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f825a69250 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f825a69238 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f825a691f8 <col:23> 'int' lvalue ParmVar 0x55f825a50e90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f825a69218 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f825a69320 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f825a69308 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f825a69270 <col:33> 'int' lvalue ParmVar 0x55f825a50e90 'i' 'int'
|   |   |     `-BinaryOperator 0x55f825a692e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f825a692d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f825a69290 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f825a4e710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f825a692b0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f825a693d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a693b0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f825a695f0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f825a695d8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a695b8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a69630 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a69440 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f825a69648 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a69478 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f825a69660 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a694b0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55f825a69678 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a695a0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a69588 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a69548 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55f825a69948 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55f825a69930 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55f825a69918 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f825a698e8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55f825a69888 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f825a69858 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f825a697d0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55f825a5bfa0
|             |   `-CXXMemberCallExpr 0x55f825a697b0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f825a69780 <col:61> '<bound member function type>' ->xanno 0x55f825a4e328
|             |       `-CXXThisExpr 0x55f825a69770 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f825a69870 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f825a69800 <col:74> 'int' lvalue ParmVar 0x55f825a50e90 'i' 'int'
|-CXXMethodDecl 0x55f825a511d8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55f825a51048 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f825a510c0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55f825a6a0c8 <col:42, line:500:5>
|   |-ParenExpr 0x55f825a69e40 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f825a69e10 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a69af0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825a69ac0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f825a699d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f825a699b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f825a69978 <col:23> 'int' lvalue ParmVar 0x55f825a51048 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f825a69998 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f825a69aa0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f825a69a88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f825a699f0 <col:33> 'int' lvalue ParmVar 0x55f825a51048 'i' 'int'
|   |   |     `-BinaryOperator 0x55f825a69a68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f825a69a50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f825a69a10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f825a4e710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f825a69a30 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f825a69b50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a69b30 <col:60> 'int' 0
|   |   `-CallExpr 0x55f825a69d70 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f825a69d58 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a69d38 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a69db0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a69bc0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f825a69dc8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a69bf8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f825a69de0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a69c30 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55f825a69df8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a69d20 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a69d08 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a69cc8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55f825a6a0a8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55f825a6a038 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f825a6a008 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55f825a69fb0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f825a69f80 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f825a69f30 <col:48, col:57> 'char [48]' lvalue ->c 0x55f825a5bfa0
|     |     |   `-CXXMemberCallExpr 0x55f825a69f10 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f825a69ee0 <col:48> '<bound member function type>' ->xanno 0x55f825a4e4c8
|     |     |       `-CXXThisExpr 0x55f825a69ed0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f825a69f98 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f825a69f60 <col:61> 'int' lvalue ParmVar 0x55f825a51048 'i' 'int'
|     `-ImplicitCastExpr 0x55f825a6a090 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55f825a6a050 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55f825a510c0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55f825a51398 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55f825a512a0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55f825a6a828 <col:35, line:513:5>
|   |-ParenExpr 0x55f825a6a538 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f825a6a508 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a6a260 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825a6a230 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f825a6a140 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f825a6a128 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f825a6a0e8 <col:23> 'int' lvalue ParmVar 0x55f825a512a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f825a6a108 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f825a6a210 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f825a6a1f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f825a6a160 <col:33> 'int' lvalue ParmVar 0x55f825a512a0 'i' 'int'
|   |   |     `-BinaryOperator 0x55f825a6a1d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f825a6a1c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f825a6a180 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f825a4e710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f825a6a1a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f825a6a2c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a6a2a0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f825a6a468 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f825a6a450 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a6a430 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a6a4a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6a330 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f825a6a4c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6a368 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f825a6a4d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a6a3a0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55f825a6a4f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a6a418 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a6a400 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a6a3c0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55f825a6a818 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55f825a6a800 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55f825a6a7e8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f825a6a7b8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55f825a6a730 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f825a6a700 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f825a6a6b0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55f825a5bfa0
|             |   `-CXXMemberCallExpr 0x55f825a6a690 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f825a6a660 <col:60> '<bound member function type>' ->xanno 0x55f825a4e328
|             |       `-CXXThisExpr 0x55f825a6a650 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f825a6a718 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f825a6a6e0 <col:73> 'int' lvalue ParmVar 0x55f825a512a0 'i' 'int'
|-CXXMethodDecl 0x55f825a515e8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55f825a51458 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f825a514d0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55f825a6af38 <col:41, line:528:5>
|   |-ParenExpr 0x55f825a6acd0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f825a6aca0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a6a9c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825a6a990 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f825a6a8a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f825a6a888 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f825a6a848 <col:23> 'int' lvalue ParmVar 0x55f825a51458 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f825a6a868 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f825a6a970 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f825a6a958 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f825a6a8c0 <col:33> 'int' lvalue ParmVar 0x55f825a51458 'i' 'int'
|   |   |     `-BinaryOperator 0x55f825a6a938 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f825a6a920 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f825a6a8e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f825a4e710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f825a6a900 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55f825a6aa20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a6aa00 <col:60> 'int' 0
|   |   `-CallExpr 0x55f825a6ac00 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f825a6abe8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a6abc8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a6ac40 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6aa90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55f825a6ac58 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6aac8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f825a6ac70 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a6ab00 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55f825a6ac88 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a6abb0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a6ab98 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a6ab58 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55f825a6af18 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55f825a6aec8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f825a6ae98 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55f825a6ae40 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f825a6ae10 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f825a6adc0 <col:47, col:56> 'char [48]' lvalue ->c 0x55f825a5bfa0
|     |     |   `-CXXMemberCallExpr 0x55f825a6ada0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f825a6ad70 <col:47> '<bound member function type>' ->xanno 0x55f825a4e4c8
|     |     |       `-CXXThisExpr 0x55f825a6ad60 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f825a6ae28 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f825a6adf0 <col:60> 'int' lvalue ParmVar 0x55f825a51458 'i' 'int'
|     `-ImplicitCastExpr 0x55f825a6af00 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55f825a6aee0 <col:65> 'int16_t':'short' lvalue ParmVar 0x55f825a514d0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55f825a517a8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55f825a516b0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55f825a6b608 <col:36, line:541:5>
|   |-ParenExpr 0x55f825a6b3a8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f825a6b378 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a6b0d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825a6b0a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f825a6afb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f825a6af98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f825a6af58 <col:23> 'int' lvalue ParmVar 0x55f825a516b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f825a6af78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f825a6b080 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f825a6b068 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f825a6afd0 <col:33> 'int' lvalue ParmVar 0x55f825a516b0 'i' 'int'
|   |   |     `-BinaryOperator 0x55f825a6b048 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f825a6b030 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f825a6aff0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f825a4e710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f825a6b010 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55f825a6b130 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a6b110 <col:60> 'int' 0
|   |   `-CallExpr 0x55f825a6b2d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f825a6b2c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a6b2a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a6b318 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6b1a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55f825a6b330 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6b1d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f825a6b348 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a6b210 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55f825a6b360 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a6b288 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a6b270 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a6b230 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55f825a6b5f8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55f825a6b5e0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55f825a6b5c8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f825a6b598 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55f825a6b540 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f825a6b510 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f825a6b4c0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55f825a5bfa0
|             |   `-CXXMemberCallExpr 0x55f825a6b4a0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f825a6b470 <col:61> '<bound member function type>' ->xanno 0x55f825a4e328
|             |       `-CXXThisExpr 0x55f825a6b460 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f825a6b528 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f825a6b4f0 <col:74> 'int' lvalue ParmVar 0x55f825a516b0 'i' 'int'
|-CXXMethodDecl 0x55f825a51978 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55f825a51868 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55f825a518e0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55f825a51a28 <col:20>
| `-OptimizeNoneAttr 0x55f825a51a80 <col:30>
|-CXXMethodDecl 0x55f825a51bb8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55f825a51ac0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55f825a6bcd8 <col:35, line:562:5>
|   |-ParenExpr 0x55f825a6ba78 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f825a6ba48 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a6b7a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825a6b770 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f825a6b680 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f825a6b668 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f825a6b628 <col:23> 'int' lvalue ParmVar 0x55f825a51ac0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f825a6b648 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f825a6b750 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f825a6b738 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f825a6b6a0 <col:33> 'int' lvalue ParmVar 0x55f825a51ac0 'i' 'int'
|   |   |     `-BinaryOperator 0x55f825a6b718 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f825a6b700 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f825a6b6c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f825a4e710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f825a6b6e0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55f825a6b800 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a6b7e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f825a6b9a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f825a6b990 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a6b970 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a6b9e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6b870 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55f825a6ba00 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6b8a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f825a6ba18 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a6b8e0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55f825a6ba30 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a6b958 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a6b940 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a6b900 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55f825a6bcc8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55f825a6bcb0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55f825a6bc98 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f825a6bc68 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55f825a6bc10 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f825a6bbe0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f825a6bb90 <col:60, col:69> 'char const[48]' lvalue ->c 0x55f825a5bfa0
|             |   `-CXXMemberCallExpr 0x55f825a6bb70 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f825a6bb40 <col:60> '<bound member function type>' ->xanno 0x55f825a4e328
|             |       `-CXXThisExpr 0x55f825a6bb30 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f825a6bbf8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f825a6bbc0 <col:73> 'int' lvalue ParmVar 0x55f825a51ac0 'i' 'int'
|-CXXMethodDecl 0x55f825a51dc8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55f825a51c78 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f825a51cf0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55f825a6c3b8 <col:41, line:577:5>
|   |-ParenExpr 0x55f825a6c148 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f825a6c118 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a6be70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825a6be40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f825a6bd50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f825a6bd38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f825a6bcf8 <col:23> 'int' lvalue ParmVar 0x55f825a51c78 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f825a6bd18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f825a6be20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f825a6be08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f825a6bd70 <col:33> 'int' lvalue ParmVar 0x55f825a51c78 'i' 'int'
|   |   |     `-BinaryOperator 0x55f825a6bde8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f825a6bdd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f825a6bd90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f825a4e710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f825a6bdb0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55f825a6bed0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a6beb0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f825a6c078 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f825a6c060 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a6c040 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a6c0b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6bf40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55f825a6c0d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6bf78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f825a6c0e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a6bfb0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55f825a6c100 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a6c028 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a6c010 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a6bfd0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55f825a6c398 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55f825a6c348 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f825a6c318 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55f825a6c2b8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f825a6c288 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f825a6c238 <col:47, col:56> 'char [48]' lvalue ->c 0x55f825a5bfa0
|     |     |   `-CXXMemberCallExpr 0x55f825a6c218 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f825a6c1e8 <col:47> '<bound member function type>' ->xanno 0x55f825a4e4c8
|     |     |       `-CXXThisExpr 0x55f825a6c1d8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f825a6c2a0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f825a6c268 <col:60> 'int' lvalue ParmVar 0x55f825a51c78 'i' 'int'
|     `-ImplicitCastExpr 0x55f825a6c380 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55f825a6c360 <col:65> 'int32_t':'int' lvalue ParmVar 0x55f825a51cf0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55f825a51f88 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55f825a51e90 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55f825a6cae8 <col:36, line:591:5>
|   |-ParenExpr 0x55f825a6c828 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f825a6c7f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a6c550 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825a6c520 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f825a6c430 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f825a6c418 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f825a6c3d8 <col:23> 'int' lvalue ParmVar 0x55f825a51e90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f825a6c3f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f825a6c500 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f825a6c4e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f825a6c450 <col:33> 'int' lvalue ParmVar 0x55f825a51e90 'i' 'int'
|   |   |     `-BinaryOperator 0x55f825a6c4c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f825a6c4b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f825a6c470 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f825a4e710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f825a6c490 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55f825a6c5b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a6c590 <col:60> 'int' 0
|   |   `-CallExpr 0x55f825a6c758 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f825a6c740 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a6c720 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a6c798 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6c620 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55f825a6c7b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6c658 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f825a6c7c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a6c690 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55f825a6c7e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a6c708 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a6c6f0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a6c6b0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55f825a6cad8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55f825a6cac0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55f825a6caa8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f825a6ca78 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55f825a6c9f0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f825a6c9c0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f825a6c970 <col:61, col:70> 'char const[48]' lvalue ->c 0x55f825a5bfa0
|             |   `-CXXMemberCallExpr 0x55f825a6c950 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f825a6c920 <col:61> '<bound member function type>' ->xanno 0x55f825a4e328
|             |       `-CXXThisExpr 0x55f825a6c910 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f825a6c9d8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f825a6c9a0 <col:74> 'int' lvalue ParmVar 0x55f825a51e90 'i' 'int'
|-CXXMethodDecl 0x55f825a521d8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55f825a52048 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f825a520c0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55f825a6d1c8 <col:42, line:606:5>
|   |-ParenExpr 0x55f825a6cf58 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55f825a6cf28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a6cc80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825a6cc50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f825a6cb60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f825a6cb48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f825a6cb08 <col:23> 'int' lvalue ParmVar 0x55f825a52048 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f825a6cb28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f825a6cc30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55f825a6cc18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f825a6cb80 <col:33> 'int' lvalue ParmVar 0x55f825a52048 'i' 'int'
|   |   |     `-BinaryOperator 0x55f825a6cbf8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f825a6cbe0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f825a6cba0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f825a4e710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55f825a6cbc0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55f825a6cce0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a6ccc0 <col:60> 'int' 0
|   |   `-CallExpr 0x55f825a6ce88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55f825a6ce70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a6ce50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a6cec8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6cd50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55f825a6cee0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6cd88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f825a6cef8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a6cdc0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55f825a6cf10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a6ce38 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a6ce20 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a6cde0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55f825a6d1a8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55f825a6d158 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f825a6d128 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55f825a6d0c8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f825a6d098 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f825a6d048 <col:48, col:57> 'char [48]' lvalue ->c 0x55f825a5bfa0
|     |     |   `-CXXMemberCallExpr 0x55f825a6d028 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f825a6cff8 <col:48> '<bound member function type>' ->xanno 0x55f825a4e4c8
|     |     |       `-CXXThisExpr 0x55f825a6cfe8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f825a6d0b0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f825a6d078 <col:61> 'int' lvalue ParmVar 0x55f825a52048 'i' 'int'
|     `-ImplicitCastExpr 0x55f825a6d190 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55f825a6d170 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55f825a520c0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55f825a52370 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55f825a522a0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55f825a6da38 <col:33, line:620:5>
|   |-ParenExpr 0x55f825a6d7b0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55f825a6d780 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a6d3d0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825a6d3a0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f825a6d240 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f825a6d228 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f825a6d1e8 <col:23> 'int' lvalue ParmVar 0x55f825a522a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f825a6d208 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f825a6d380 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55f825a6d368 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f825a6d260 <col:33> 'int' lvalue ParmVar 0x55f825a522a0 'i' 'int'
|   |   |     `-BinaryOperator 0x55f825a6d348 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f825a6d330 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f825a6d280 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f825a4e710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55f825a6d308 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55f825a6d2f0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55f825a6d2b8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55f825a6d430 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a6d410 <col:79> 'int' 0
|   |   `-CallExpr 0x55f825a6d6e0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55f825a6d6c8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a6d6a8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a6d720 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6d518 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55f825a6d738 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6d560 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f825a6d750 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a6d598 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55f825a6d768 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a6d690 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a6d678 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a6d638 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55f825a6da28 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55f825a6da10 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55f825a6d9f8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55f825a6d9c8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55f825a6d940 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55f825a6d910 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55f825a6d8c0 <col:67, col:76> 'char const[48]' lvalue ->c 0x55f825a5bfa0
|             |   `-CXXMemberCallExpr 0x55f825a6d8a0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55f825a6d870 <col:67> '<bound member function type>' ->xanno 0x55f825a4e328
|             |       `-CXXThisExpr 0x55f825a6d860 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55f825a6d928 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55f825a6d8f0 <col:80> 'int' lvalue ParmVar 0x55f825a522a0 'i' 'int'
|-CXXMethodDecl 0x55f825a52588 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55f825a52430 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55f825a524b0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55f825a70c90 <col:45, line:635:5>
|   |-ParenExpr 0x55f825a6dfa8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55f825a6df78 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a6dc40 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825a6dc10 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f825a6dab0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55f825a6da98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55f825a6da58 <col:23> 'int' lvalue ParmVar 0x55f825a52430 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55f825a6da78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55f825a6dbf0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55f825a6dbd8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f825a6dad0 <col:33> 'int' lvalue ParmVar 0x55f825a52430 'i' 'int'
|   |   |     `-BinaryOperator 0x55f825a6dbb8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55f825a6dba0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55f825a6daf0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55f825a4e710 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55f825a6db78 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55f825a6db60 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55f825a6db28 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55f825a6dca0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a6dc80 <col:79> 'int' 0
|   |   `-CallExpr 0x55f825a6ded8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55f825a6dec0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a6dea0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a6df18 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6dd10 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55f825a6df30 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a6dd58 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55f825a6df48 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a6dd90 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55f825a6df60 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a6de88 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a6de70 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a6de28 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55f825a70c70 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55f825a70bd8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55f825a70ba8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55f825a70b50 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55f825a70b20 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55f825a70ad0 <col:54, col:63> 'char [48]' lvalue ->c 0x55f825a5bfa0
|     |     |   `-CXXMemberCallExpr 0x55f825a70ab0 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55f825a6e048 <col:54> '<bound member function type>' ->xanno 0x55f825a4e4c8
|     |     |       `-CXXThisExpr 0x55f825a6e038 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55f825a70b38 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55f825a70b00 <col:67> 'int' lvalue ParmVar 0x55f825a52430 'i' 'int'
|     `-CXXConstCastExpr 0x55f825a70c40 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55f825a70c28 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55f825a70bf0 <col:91> 'const void *' lvalue ParmVar 0x55f825a524b0 'x' 'const void *'
|-CXXMethodDecl 0x55f825a52658 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55f825a70d18 <col:34, line:640:5>
|   `-ReturnStmt 0x55f825a70d08 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55f825a70cf0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55f825a70cc0 <col:16> 'Packet *' lvalue ->_data_packet 0x55f825a5cb58
|         `-CXXThisExpr 0x55f825a70cb0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55f825a52798 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55f825a52708 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f825a67398 <col:46> 'bool' true
|-CXXMethodDecl 0x55f825a52918 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55f825a52850 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55f825a529c0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55f825a53170 <line:660:22> "" ""
| |-EnumConstantDecl 0x55f825a52ac0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f825a531e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a52aa0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55f825a52a80 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55f825a47c10 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55f825a52b50 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f825a531f8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a52b30 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55f825a52b10 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55f825a47ca0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55f825a52be0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f825a53210 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a52bc0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55f825a52ba0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55f825a52c70 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f825a53228 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a52c50 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55f825a52c30 <col:19> 'int' 16
| |-EnumConstantDecl 0x55f825a52d00 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f825a53240 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a52ce0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55f825a52cc0 <col:21> 'int' 16
| |-EnumConstantDecl 0x55f825a52d90 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f825a53258 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a52d70 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55f825a52d50 <col:19> 'int' 32
| |-EnumConstantDecl 0x55f825a52e20 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f825a53270 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a52e00 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55f825a52de0 <col:19> 'int' EnumConstant 0x55f825a52c70 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55f825a52eb0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f825a53288 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a52e90 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55f825a52e70 <col:19> 'int' EnumConstant 0x55f825a52d90 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55f825a52f80 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f825a532a0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a52f60 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55f825a52f40 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55f825a52f00 <col:23> 'int' EnumConstant 0x55f825a52eb0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55f825a52f20 <col:40> 'int' 2
| |-EnumConstantDecl 0x55f825a53050 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55f825a532b8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a53030 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55f825a53010 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55f825a52fd0 <col:23> 'int' EnumConstant 0x55f825a52eb0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55f825a52ff0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55f825a53120 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55f825a532d0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a53100 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55f825a530e0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55f825a530a0 <col:23> 'int' EnumConstant 0x55f825a52eb0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55f825a530c0 <col:40> 'int' 8
|-CXXMethodDecl 0x55f825a53310 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55f825a533b0 <col:68> "" ""
|-CXXMethodDecl 0x55f825a53448 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55f825a534e8 <col:45> "" ""
|-CXXMethodDecl 0x55f825a53580 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55f825a53620 <col:57> "" ""
|-CXXMethodDecl 0x55f825a536b8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55f825a53758 <col:45> "" ""
|-CXXMethodDecl 0x55f825a537f0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55f825a53890 <col:57> "" ""
|-CXXMethodDecl 0x55f825a53920 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55f825a539c0 <col:51> "" ""
|-CXXMethodDecl 0x55f825a58d10 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55f825a58db0 <col:63> "" ""
|-CXXMethodDecl 0x55f825a58e40 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55f825a58ee0 <col:53> "" ""
|-CXXMethodDecl 0x55f825a58f70 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55f825a59010 <col:65> "" ""
|-CXXMethodDecl 0x55f825a59128 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55f825a59098 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55f825a591d0 <col:61> "" ""
|-CXXMethodDecl 0x55f825a59368 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55f825a59258 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55f825a592d0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55f825a59418 <col:67> "" ""
|-CXXMethodDecl 0x55f825a59530 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55f825a594a0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55f825a595d8 <col:63> "" ""
|-CXXMethodDecl 0x55f825a59770 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55f825a59660 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f825a596d8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55f825a59820 <col:69> "" ""
|-CXXMethodDecl 0x55f825a59938 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55f825a598a8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55f825a599e0 <col:63> "" ""
|-CXXMethodDecl 0x55f825a59b78 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55f825a59a68 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f825a59ae0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f825a59c28 <col:69> "" ""
|-CXXMethodDecl 0x55f825a59d40 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55f825a59cb0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55f825a59de8 <col:62> "" ""
|-CXXMethodDecl 0x55f825a59f80 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55f825a59e70 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f825a59ee8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55f825a5a030 <col:68> "" ""
|-CXXMethodDecl 0x55f825a5a148 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55f825a5a0b8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55f825a5a1f0 <col:63> "" ""
|-CXXMethodDecl 0x55f825a5a388 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55f825a5a278 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55f825a5a2f0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55f825a5a438 <col:69> "" ""
|-CXXMethodDecl 0x55f825a5a4c8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55f825a5a568 <col:64> "" ""
|-CXXMethodDecl 0x55f825a5a5f8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55f825a5a698 <col:52> "" ""
|-CXXMethodDecl 0x55f825a5a728 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55f825a5a7c8 <col:67> "" ""
|-CXXMethodDecl 0x55f825a5a858 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55f825a5a8f8 <col:55> "" ""
|-CXXMethodDecl 0x55f825a5aa10 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55f825a5a980 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55f825a5aab8 <col:58> "" ""
|-CXXMethodDecl 0x55f825a5ac50 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55f825a5ab40 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f825a5abb8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55f825a5ad00 <col:62> "" ""
|-CXXMethodDecl 0x55f825a5ae18 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55f825a5ad88 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55f825a5aec0 <col:58> "" ""
|-CXXMethodDecl 0x55f825a5b058 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55f825a5af48 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f825a5afc0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55f825a5b108 <col:62> "" ""
|-CXXMethodDecl 0x55f825a5b220 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55f825a5b190 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55f825a5b2c8 <col:60> "" ""
|-CXXMethodDecl 0x55f825a5b460 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55f825a5b350 <col:34> col:37 'int'
| |-ParmVarDecl 0x55f825a5b3c8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55f825a5b510 <col:64> "" ""
|-CXXMethodDecl 0x55f825a5b628 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55f825a5b598 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55f825a5b6d0 <col:58> "" ""
|-CXXMethodDecl 0x55f825a5b868 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55f825a5b758 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f825a5b7d0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55f825a5b918 <col:62> "" ""
|-CXXMethodDecl 0x55f825a5ba30 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55f825a5b9a0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55f825a5bad8 <col:59> "" ""
|-CXXMethodDecl 0x55f825a5bc70 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55f825a5bb60 <col:33> col:36 'int'
| |-ParmVarDecl 0x55f825a5bbd8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55f825a5bd20 <col:63> "" ""
|-AccessSpecDecl 0x55f825a5bd90 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55f825a5bdb8 prev 0x55f825a4e200 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f825a5beb0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55f825a5bfa0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55f825a5c0c8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55f825a5c248 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55f825a5c3c8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55f825a5c548 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55f825a70e98 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f825a71708 <col:11>
| |-CXXDestructorDecl 0x55f825a70f70 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55f825a710a8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55f825a710a8
| | `-ParmVarDecl 0x55f825a711b8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55f825a71258 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f825a71258
| | `-ParmVarDecl 0x55f825a71368 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55f825a74098 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f825a741a8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55f825a74428 <col:11>
| |   `-ReturnStmt 0x55f825a74418 <col:11>
| |     `-UnaryOperator 0x55f825a74400 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55f825a743f0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55f825a74218 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55f825a74218
|   `-ParmVarDecl 0x55f825a74328 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55f825a5c5b0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f825a5c6c8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55f825a5c768 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55f825a5c7d0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55f825a5c838 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55f825a5c8a0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55f825a5c900 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55f825a5c9c0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55f825a5ca20 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55f825a5ca80 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55f825a70da8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55f825a5c768 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55f825a71718 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55f825a71770 <col:12>
| |-CXXConstructorDecl 0x55f825a713d8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55f825a713d8
| | `-ParmVarDecl 0x55f825a714e8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55f825a71588 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55f825a71588
| | `-ParmVarDecl 0x55f825a71698 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55f825a73780 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55f825a5caf8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55f825a5cb58 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55f825a5cbc0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55f825a5cc28 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55f825a66080 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55f825a660e8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55f825a66148 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55f825a661a8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55f825a66210 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55f825a66298 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55f825a5caf8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55f825a70d40 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55f825a66148 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55f825a71780 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55f825a717e0 <col:21, line:755:5>
|-CXXConstructorDecl 0x55f825a66438 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55f825a66378 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55f825a66530 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55f825a66718 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55f825a66620 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55f825a669e8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55f825a667d0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f825a66848 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f825a668c0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a66c08 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55f825a66ab8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55f825a66b30 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55f825a66ed8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55f825a66cc8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55f825a66d40 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55f825a66db8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55f825a67030 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55f825a66fa0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a67178 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55f825a670e8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55f825a67270 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825a717f0 prev 0x55f825a47820 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x55f825a71928 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x55f825a719b8 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x55f825a71a60 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x55f825a71b00 <col:20>
| `-OptimizeNoneAttr 0x55f825a71b58 <col:30>
|-CXXMethodDecl 0x55f825a71ba8 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x55f825a71c48 <col:20>
| `-OptimizeNoneAttr 0x55f825a71ca0 <col:30>
|-CXXMethodDecl 0x55f825a71cf0 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55f825a71db8 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55f825a71e80 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55f825a71f98 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x55f825a72060 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x55f825a72100 <col:20>
| `-OptimizeNoneAttr 0x55f825a72158 <col:30>
|-CXXMethodDecl 0x55f825a721c8 <line:787:5, col:62> col:50 used ip_header 'click_ip *() const'
| |-NoInlineAttr 0x55f825a72268 <col:20>
| `-OptimizeNoneAttr 0x55f825a722c0 <col:30>
|-CXXMethodDecl 0x55f825a72368 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x55f825a72408 <col:20>
| `-OptimizeNoneAttr 0x55f825a72460 <col:30>
|-CXXMethodDecl 0x55f825a724b0 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55f825a725c8 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x55f825a726e8 <line:791:5, col:36> col:23 used tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x55f825a72808 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x55f825a728d0 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x55f825a72970 <col:62> "" ""
|-AccessSpecDecl 0x55f825a729e0 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x55f825a72a40 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x55f825a73638 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x55f825a73860 <col:29, col:31>
|-CXXMethodDecl 0x55f825a72b08 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x55f825a72c48 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x55f825a72bb8 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x55f825a72d40 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x55f825a73870 <col:23, col:25>
|-CXXMethodDecl 0x55f825a72ef8 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x55f825a72e30 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x55f825a731c8 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55f825a72fb0 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55f825a73028 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55f825a730a0 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825a73358 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x55f825a73290 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x55f825a73450 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x55f825a734b8 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x55f825a734b8
  `-ParmVarDecl 0x55f825a735c8 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8257b1fb8 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8257b20d8 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x55f8257b21a0 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x55f82588bfa0 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f82588edf8 <col:8>
|-CXXConstructorDecl 0x55f82588c0a8 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x55f82588c0a8
| `-ParmVarDecl 0x55f82588c1b8 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x55f82588c258 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f82588c368 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x55f8257b21a0 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x55f82588f010 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55f82588efe0 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55f8257b21a0
| |     `-CXXStaticCastExpr 0x55f82588efb0 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x55f82588ef80 <col:8> 'in_addr' lvalue ParmVar 0x55f82588c368 '' 'in_addr &&'
| `-CompoundStmt 0x55f82588f058 <col:8>
|-CXXDestructorDecl 0x55f82588f290 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f825cbb630 <col:8> col:8 implicit constexpr operator= 'in_addr &(const in_addr &)' inline default trivial noexcept-unevaluated 0x55f825cbb630
| `-ParmVarDecl 0x55f825cbb738 <col:8> col:8 'const in_addr &'
`-CXXMethodDecl 0x55f825cbb7a8 <col:8> col:8 implicit used constexpr operator= 'in_addr &(in_addr &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f825cbb8b8 <col:8> col:8 used 'in_addr &&'
  `-CompoundStmt 0x55f825cbbb70 <col:8>
    |-BinaryOperator 0x55f825cbbb18 <col:8> 'in_addr_t':'unsigned int' lvalue '='
    | |-MemberExpr 0x55f825cbbad0 <col:8> 'in_addr_t':'unsigned int' lvalue ->s_addr 0x55f8257b21a0
    | | `-CXXThisExpr 0x55f825cbbac0 <col:8> 'in_addr *' this
    | `-ImplicitCastExpr 0x55f825cbbb00 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x55f825cbba90 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55f8257b21a0
    |     `-CXXStaticCastExpr 0x55f825cbba60 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
    |       `-DeclRefExpr 0x55f825cbba30 <col:8> 'in_addr' lvalue ParmVar 0x55f825cbb8b8 '' 'in_addr &&'
    `-ReturnStmt 0x55f825cbbb60 <col:8>
      `-UnaryOperator 0x55f825cbbb48 <col:8> 'in_addr' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55f825cbbb38 <col:8> 'in_addr *' this

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825880b48 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55f825880c68 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x55f825880d50 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x55f825880d30 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x55f825880cf8 <col:22> 'int' 4
|-FieldDecl 0x55f825880df8 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x55f825880dd8 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x55f825880da0 <col:21> 'int' 4
|-FieldDecl 0x55f825880e58 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x55f825880eb8 <line:40:5, col:14> col:14 referenced ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x55f825880f18 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x55f825880f78 <line:42:5, col:14> col:14 referenced ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x55f825880fd8 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x55f825881038 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55f825881098 <line:49:5, col:14> col:14 referenced ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x55f825881108 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x55f825881178 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825c54f50 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825c55068 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x55f825c55110 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x55f825c55178 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x55f825c551e0 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x55f825c55290 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x55f825c55110 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x55f825c56110 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x55f825c560c8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x55f825c56090 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x55f825c56078 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x55f825c56020 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55f825878090 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x55f825c55178 'len' 'int'
| | `-IntegerLiteral 0x55f825c56188 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x55f825c551e0 'cap' 'int'
| | `-IntegerLiteral 0x55f825c561f0 <col:20> 'int' 0
| `-CompoundStmt 0x55f825c56270 <col:23, line:119:2>
|-CXXConstructorDecl 0x55f825c55408 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x55f825c55348 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x55f825c56280 <col:37, line:121:2>
|-CXXConstructorDecl 0x55f825c58498 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825c585a8 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55f825c55110 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x55f825c59f70 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x55f825c59f40 <col:12> 'unsigned char *const' lvalue .s 0x55f825c55110
| |     `-DeclRefExpr 0x55f825c59f20 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55f825c585a8 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55f825c55178 'len' 'int'
| | `-ImplicitCastExpr 0x55f825c5a000 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55f825c59fd0 <col:12> 'const int' lvalue .len 0x55f825c55178
| |     `-DeclRefExpr 0x55f825c59fb0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55f825c585a8 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55f825c551e0 'cap' 'int'
| | `-ImplicitCastExpr 0x55f825c5a090 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55f825c5a060 <col:12> 'const int' lvalue .cap 0x55f825c551e0
| |     `-DeclRefExpr 0x55f825c5a040 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55f825c585a8 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x55f825c5a0e8 <col:12>
|-CXXConstructorDecl 0x55f825c58648 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f825c58648
| `-ParmVarDecl 0x55f825c58758 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x55f825c5a3a0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825c506d8 prev 0x55f825b910b8 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f825c507d0 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x55f825c50860 <col:21, col:27> col:21 public
|-TypedefDecl 0x55f825c508a0 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55f825516dc0 'const char *'
|   `-QualType 0x55f825516311 'const char' const
|     `-BuiltinType 0x55f825516310 'char'
|-TypedefDecl 0x55f825c50910 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x55f825516f90 'char *'
|   `-BuiltinType 0x55f825516310 'char'
|-TypedefDecl 0x55f825c50a50 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x55f825c509c0 'int (StringAccum::*)() const'
|   |-RecordType 0x55f8257d88c0 'StringAccum'
|   | `-CXXRecord 0x55f825c506d8 'StringAccum'
|   `-ParenType 0x55f82584f6e0 'int () const' sugar
|     `-FunctionProtoType 0x55f825831e10 'int () const' const cdecl
|       `-BuiltinType 0x55f825516370 'int'
|-CXXConstructorDecl 0x55f825c50b10 <line:35:5, col:24> col:12 StringAccum 'void ()' inline
|-CXXConstructorDecl 0x55f825c50c60 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x55f825c50bd0 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x55f825c50db0 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x55f825c50d20 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x55f825c50f58 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x55f825c50e98 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x55f825c51108 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x55f825c51048 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x55f825c51200 <line:42:5, col:25> col:12 ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x55f825c513b8 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x55f825c512f0 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x55f825c51538 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x55f825c51470 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x55f825c51650 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55f825c51718 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x55f825c517e0 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55f825c518a8 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x55f825c51970 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x55f825c51ad8 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55f825c51ba8 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f825c51c68 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55f825c51d78 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55f825c51e88 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55f825c51f48 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55f825c52008 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55f825c52150 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55f825c520c0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55f825c522e0 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x55f825c52210 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55f825c523a8 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55f825c524a0 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x55f825c52560 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55f825c52628 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x55f825c526e8 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55f825c527a8 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55f825c52868 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f825c529b8 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x55f825c52920 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x55f825c52b08 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x55f825c52a78 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x55f825c52c60 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x55f825c52bc8 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x55f825c52db0 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x55f825c52d20 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x55f825c52fd0 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x55f825c52e70 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x55f825c52ef0 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x55f825c55f48 <col:53> 'int' 0
|-CXXMethodDecl 0x55f825c53128 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x55f825c53098 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x55f825c55f68 <col:34> 'int' 1
|-CXXMethodDecl 0x55f825c53270 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x55f825c531e0 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55f825c533c0 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x55f825c53330 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x55f825c53510 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x55f825c53480 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x55f825c53660 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55f825c535d0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55f825c53838 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55f825c53720 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55f825c537a0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55f825c53a18 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55f825c53900 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x55f825c53980 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x55f825c53bf8 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55f825c53ae0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55f825c53b60 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55f825c53dd8 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55f825c53cc0 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x55f825c53d40 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x55f825c53fb8 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55f825c53ea0 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55f825c53f20 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55f825c54318 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x55f825c54100 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55f825c54180 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55f825c55f88 <col:56> 'int' 10
| `-ParmVarDecl 0x55f825c541f8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f825c55fa8 <col:77> 'bool' true
|-CXXMethodDecl 0x55f825c54678 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x55f825c54460 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55f825c544e0 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x55f825c55fb8 <col:57> 'int' 10
| `-ParmVarDecl 0x55f825c54558 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f825c55fd8 <col:78> 'bool' true
|-CXXMethodDecl 0x55f825c548a0 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x55f825c54748 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x55f825c547c8 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x55f825c54998 <line:98:5, col:24> col:12 take_string 'String ()'
|-CXXMethodDecl 0x55f825c54b08 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x55f825c54a48 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x55f825c54c58 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x55f825c54bc8 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x55f825c54d00 <col:51> "" ""
|-AccessSpecDecl 0x55f825c54d70 <line:106:3, col:10> col:3 private
|-EnumDecl 0x55f825c54d98 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x55f825c54ee8 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x55f825c54f38 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825c54ec8 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x55f825c54e98 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x55f825859448 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x55f825c54f50 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f825c55068 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x55f825c55110 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x55f825c55178 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x55f825c551e0 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x55f825c55290 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x55f825c55110 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x55f825c56110 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x55f825c560c8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x55f825c56090 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x55f825c56078 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x55f825c56020 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55f825878090 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x55f825c55178 'len' 'int'
| | | `-IntegerLiteral 0x55f825c56188 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x55f825c551e0 'cap' 'int'
| | | `-IntegerLiteral 0x55f825c561f0 <col:20> 'int' 0
| | `-CompoundStmt 0x55f825c56270 <col:23, line:119:2>
| |-CXXConstructorDecl 0x55f825c55408 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x55f825c55348 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x55f825c56280 <col:37, line:121:2>
| |-CXXConstructorDecl 0x55f825c58498 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f825c585a8 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55f825c55110 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x55f825c59f70 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x55f825c59f40 <col:12> 'unsigned char *const' lvalue .s 0x55f825c55110
| | |     `-DeclRefExpr 0x55f825c59f20 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55f825c585a8 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55f825c55178 'len' 'int'
| | | `-ImplicitCastExpr 0x55f825c5a000 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55f825c59fd0 <col:12> 'const int' lvalue .len 0x55f825c55178
| | |     `-DeclRefExpr 0x55f825c59fb0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55f825c585a8 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55f825c551e0 'cap' 'int'
| | | `-ImplicitCastExpr 0x55f825c5a090 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55f825c5a060 <col:12> 'const int' lvalue .cap 0x55f825c551e0
| | |     `-DeclRefExpr 0x55f825c5a040 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55f825c585a8 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x55f825c5a0e8 <col:12>
| |-CXXConstructorDecl 0x55f825c58648 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f825c58648
| | `-ParmVarDecl 0x55f825c58758 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x55f825c5a3a0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x55f825c554e0 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x55f825c555e0 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x55f825c55548 <col:16> col:19 'int'
|-CXXMethodDecl 0x55f825c557c0 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x55f825c556a0 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x55f825c55720 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x55f825c559a0 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x55f825c55888 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55f825c55908 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55f825c55af8 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x55f825c55a68 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x55f825c55c48 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x55f825c55bb8 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x55f825c55f08 <line:132:5, col:70> col:25
  `-FunctionDecl 0x55f825c55e48 parent 0x55f825516278 <col:5, col:70> col:25 operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x55f825c55d00 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x55f825c55d78 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashAllocator
         0 |   struct HashAllocator::link * _free
         8 |   struct HashAllocator::buffer * _buffer
        16 |   size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class SizedHashAllocator<80>
         0 |   class HashAllocator (base)
         0 |     struct HashAllocator::link * _free
         8 |     struct HashAllocator::buffer * _buffer
        16 |     size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class TCPRewriter
         0 |   class IPRewriterBase (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |     class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |       class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |         class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |         class IPRewriterEntry ** buckets
       120 |         uint32_t nbuckets
       124 |         uint32_t first_bucket
       128 |         size_t size
       136 |         struct libdivide_u32_t bucket_divider
       136 |           uint32_t magic
       140 |           uint8_t more
       144 |     class Vector<class IPRewriterInput> _input_specs
       144 |       class vector_memory<class sized_array_memory<56> > vm_
       144 |         vector_memory<class sized_array_memory<56> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       160 |     class IPRewriterHeap * _heap
       168 |     uint32_t [2] _timeouts
       176 |     uint32_t _gc_interval_sec
       184 |     class Timer _gc_timer
       184 |       int _schedpos1
       192 |       class Timestamp _expiry_s
       192 |         union Timestamp::rep_t _t
       192 |           int64_t x
       200 |       union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |         TimerCallback callback
       208 |       void * _thunk
       216 |       class Element * _owner
       224 |       class RouterThread * _thread
       232 |   class SizedHashAllocator<80> _allocator
       232 |     class HashAllocator (base)
       232 |       struct HashAllocator::link * _free
       240 |       struct HashAllocator::buffer * _buffer
       248 |       size_t _size
       256 |   unsigned int _annos
       260 |   uint32_t _tcp_data_timeout
       264 |   uint32_t _tcp_done_timeout
           | [sizeof=272, dsize=268, align=8,
           |  nvsize=268, nvalign=8]

*** Dumping AST Record Layout
         0 | struct HashAllocator::link
         0 |   struct HashAllocator::link * next
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825af3518 <../dummy_inc/click/hashallocator.hh:26:5, line:28:5> line:26:12 referenced struct link definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55f825af3638 <col:5, col:12> col:12 implicit referenced struct link
`-FieldDecl 0x55f825af3708 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashAllocator::buffer
         0 |   struct HashAllocator::buffer * next
         8 |   size_t pos
        16 |   size_t maxpos
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825af3770 <../dummy_inc/click/hashallocator.hh:30:5, line:34:5> line:30:12 referenced struct buffer definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55f825af3888 <col:5, col:12> col:12 implicit referenced struct buffer
|-FieldDecl 0x55f825af3958 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
|-FieldDecl 0x55f825af39b8 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
`-FieldDecl 0x55f825af3a18 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825af2b30 <../dummy_inc/click/hashallocator.hh:9:1, line:55:1> line:9:7 referenced class HashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f825af2c48 <col:1, col:7> col:7 implicit referenced class HashAllocator
|-AccessSpecDecl 0x55f825af2cd8 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x55f825af2e18 <line:11:5, col:30> col:5 referenced HashAllocator 'void (size_t)'
| `-ParmVarDecl 0x55f825af2d10 <col:19, col:26> col:26 size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x55f825af2f10 <line:12:5, col:20> col:5 used ~HashAllocator 'void () noexcept'
|-CXXMethodDecl 0x55f825af3090 <line:14:5, line:17:5> line:14:17 increase_size 'void (size_t)' inline
| |-ParmVarDecl 0x55f825af3000 <col:31, col:38> col:38 used new_size 'size_t':'unsigned long'
| `-CompoundStmt 0x55f825af5890 <col:48, line:17:5>
|   |-ParenExpr 0x55f825af57d8 <line:15:2, col:212> 'void'
|   | `-ConditionalOperator 0x55f825af57a8 <col:3, col:211> 'void'
|   |   |-CXXStaticCastExpr 0x55f825af4450 <col:3, col:62> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825af4420 <col:23, col:57> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55f825af4350 <col:23, col:34> 'bool' '&&'
|   |   |   | |-UnaryOperator 0x55f825af42b0 <col:23, col:24> 'bool' prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x55f825af4298 <col:24> 'bool' <PointerToBoolean>
|   |   |   | |   `-ImplicitCastExpr 0x55f825af4280 <col:24> 'HashAllocator::link *' <LValueToRValue>
|   |   |   | |     `-MemberExpr 0x55f825af4250 <col:24> 'HashAllocator::link *' lvalue ->_free 0x55f825af3d48
|   |   |   | |       `-CXXThisExpr 0x55f825af4240 <col:24> 'HashAllocator *' implicit this
|   |   |   | `-UnaryOperator 0x55f825af4338 <col:33, col:34> 'bool' prefix '!' cannot overflow
|   |   |   |   `-ImplicitCastExpr 0x55f825af4320 <col:34> 'bool' <PointerToBoolean>
|   |   |   |     `-ImplicitCastExpr 0x55f825af4308 <col:34> 'HashAllocator::buffer *' <LValueToRValue>
|   |   |   |       `-MemberExpr 0x55f825af42d8 <col:34> 'HashAllocator::buffer *' lvalue ->_buffer 0x55f825af3da8
|   |   |   |         `-CXXThisExpr 0x55f825af42c8 <col:34> 'HashAllocator *' implicit this
|   |   |   `-BinaryOperator 0x55f825af4400 <col:45, col:57> 'bool' '>='
|   |   |     |-ImplicitCastExpr 0x55f825af43d0 <col:45> 'size_t':'unsigned long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55f825af4370 <col:45> 'size_t':'unsigned long' lvalue ParmVar 0x55f825af3000 'new_size' 'size_t':'unsigned long'
|   |   |     `-ImplicitCastExpr 0x55f825af43e8 <col:57> 'size_t':'unsigned long' <LValueToRValue>
|   |   |       `-MemberExpr 0x55f825af43a0 <col:57> 'size_t':'unsigned long' lvalue ->_size 0x55f825af3e08
|   |   |         `-CXXThisExpr 0x55f825af4390 <col:57> 'HashAllocator *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55f825af54d0 <col:66, col:73> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825af54b0 <col:72> 'int' 0
|   |   `-CallExpr 0x55f825af5708 <col:77, col:211> 'void'
|   |     |-ImplicitCastExpr 0x55f825af56f0 <col:77> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825af56d0 <col:77> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825af5748 <col:92> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825af5540 <col:92> 'const char [40]' lvalue "!_free && !_buffer && new_size >= _size"
|   |     |-ImplicitCastExpr 0x55f825af5760 <col:135> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825af5580 <col:135> 'const char [36]' lvalue "../dummy_inc/click/hashallocator.hh"
|   |     |-ImplicitCastExpr 0x55f825af5778 <col:174> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825af55c0 <col:174> 'int' 15
|   |     `-ImplicitCastExpr 0x55f825af5790 <col:178, col:192> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825af56b8 <col:178, col:192> 'const char [42]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825af56a0 <col:192> 'const char [42]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825af5658 <col:192> 'const char [42]' lvalue "void HashAllocator::increase_size(size_t)"
|   `-BinaryOperator 0x55f825af5870 <line:16:2, col:10> 'size_t':'unsigned long' lvalue '='
|     |-MemberExpr 0x55f825af5808 <col:2> 'size_t':'unsigned long' lvalue ->_size 0x55f825af3e08
|     | `-CXXThisExpr 0x55f825af57f8 <col:2> 'HashAllocator *' implicit this
|     `-ImplicitCastExpr 0x55f825af5858 <col:10> 'size_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55f825af5838 <col:10> 'size_t':'unsigned long' lvalue ParmVar 0x55f825af3000 'new_size' 'size_t':'unsigned long'
|-CXXMethodDecl 0x55f825af3160 <line:19:5, col:27> col:18 allocate 'void *()' inline
|-CXXMethodDecl 0x55f825af32a8 <line:20:5, col:35> col:17 used deallocate 'void (void *)' inline
| `-ParmVarDecl 0x55f825af3218 <col:28, col:34> col:34 p 'void *'
|-CXXMethodDecl 0x55f825af3448 <line:22:5, col:31> col:10 swap 'void (HashAllocator &)'
| `-ParmVarDecl 0x55f825af3388 <col:15, col:30> col:30 x 'HashAllocator &'
|-AccessSpecDecl 0x55f825af34f0 <line:24:3, col:10> col:3 private
|-CXXRecordDecl 0x55f825af3518 <line:26:5, line:28:5> line:26:12 referenced struct link definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f825af3638 <col:5, col:12> col:12 implicit referenced struct link
| `-FieldDecl 0x55f825af3708 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'
|-CXXRecordDecl 0x55f825af3770 <line:30:5, line:34:5> line:30:12 referenced struct buffer definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f825af3888 <col:5, col:12> col:12 implicit referenced struct buffer
| |-FieldDecl 0x55f825af3958 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
| |-FieldDecl 0x55f825af39b8 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
| `-FieldDecl 0x55f825af3a18 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'
|-EnumDecl 0x55f825af3a80 <line:36:5, line:44:5> line:36:5
| |-EnumConstantDecl 0x55f825af3b80 <line:37:2, col:20> col:2 min_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x55f825af3cf0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825af3b60 <col:20> 'int' Int: 1024
| |     `-IntegerLiteral 0x55f825af3b40 <col:20> 'int' 1024
| |-EnumConstantDecl 0x55f825af3c10 <line:41:2, col:20> col:2 max_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x55f825af3d08 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825af3bf0 <col:20> 'int' Int: 1048576
| |     `-IntegerLiteral 0x55f825af3bd0 <col:20> 'int' 1048576
| `-EnumConstantDecl 0x55f825af3ca0 <line:43:2, col:18> col:2 min_nelements 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
|   `-ImplicitCastExpr 0x55f825af3d20 <col:18> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825af3c80 <col:18> 'int' Int: 8
|       `-IntegerLiteral 0x55f825af3c60 <col:18> 'int' 8
|-FieldDecl 0x55f825af3d48 <line:46:5, col:11> col:11 referenced _free 'HashAllocator::link *'
|-FieldDecl 0x55f825af3da8 <line:47:5, col:13> col:13 referenced _buffer 'HashAllocator::buffer *'
|-FieldDecl 0x55f825af3e08 <line:48:5, col:12> col:12 referenced _size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55f825af3e80 <line:50:5, col:25> col:11 used hard_allocate 'void *()'
|-CXXConstructorDecl 0x55f825af4018 <line:52:5, col:41> col:5 HashAllocator 'void (const HashAllocator &)'
| `-ParmVarDecl 0x55f825af3f58 <col:19, col:40> col:40 x 'const HashAllocator &'
`-CXXMethodDecl 0x55f825af4198 <line:53:5, col:52> col:20 operator= 'HashAllocator &(const HashAllocator &)'
  `-ParmVarDecl 0x55f825af40d8 <col:30, col:51> col:51 x 'const HashAllocator &'

Layout: <CGRecordLayout
  LLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  NonVirtualBaseLLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825b8bfa8 <../dummy_inc/click/hashallocator.hh:58:1, line:65:1> line:59:7 class SizedHashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'HashAllocator'
|-TemplateArgument integral 80
|-CXXRecordDecl 0x55f825b8c1e8 prev 0x55f825b8bfa8 <col:1, col:7> col:7 implicit class SizedHashAllocator
|-AccessSpecDecl 0x55f825b8c278 <col:51, col:57> col:51 public
|-CXXConstructorDecl 0x55f825b8c2d8 <line:61:5, line:63:5> line:61:5 used SizedHashAllocator 'void ()'
|-CXXConstructorDecl 0x55f825b8c3b8 <line:59:7> col:7 implicit SizedHashAllocator 'void (const SizedHashAllocator<80> &)' inline default_delete noexcept-unevaluated 0x55f825b8c3b8
| `-ParmVarDecl 0x55f825b8c4c8 <col:7> col:7 'const SizedHashAllocator<80> &'
|-CXXConstructorDecl 0x55f825b8c568 <col:7> col:7 implicit SizedHashAllocator 'void (SizedHashAllocator<80> &&)' inline default_delete noexcept-unevaluated 0x55f825b8c568
| `-ParmVarDecl 0x55f825b8c678 <col:7> col:7 'SizedHashAllocator<80> &&'
|-CXXMethodDecl 0x55f825b8c718 <col:7> col:7 implicit operator= 'SizedHashAllocator<80> &(SizedHashAllocator<80> &&)' inline default_delete noexcept-unevaluated 0x55f825b8c718
| `-ParmVarDecl 0x55f825b8c828 <col:7> col:7 'SizedHashAllocator<80> &&'
`-CXXDestructorDecl 0x55f825b8c8b0 <col:7> col:7 implicit used ~SizedHashAllocator 'void () noexcept' inline default
  `-CompoundStmt 0x55f825cc1f60 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  NonVirtualBaseLLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825b87688 <../elements/tcpudp/tcprewriter.hh:95:1, line:195:1> line:95:7 class TCPRewriter definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'IPRewriterBase'
|-CXXRecordDecl 0x55f825b877e8 <col:1, col:7> col:7 implicit referenced class TCPRewriter
|-AccessSpecDecl 0x55f825b87878 <col:45, col:51> col:45 public
|-CXXRecordDecl 0x55f825b878a0 <line:97:5, line:155:5> line:97:11 referenced class TCPFlow definition
| |-DefinitionData has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-public 'IPRewriterFlow'
| |-CXXRecordDecl 0x55f825b879f8 <col:5, col:11> col:11 implicit referenced class TCPFlow
| |-AccessSpecDecl 0x55f825b87a88 <col:45, col:51> col:45 public
| |-CXXConstructorDecl 0x55f825b87e38 <line:99:2, line:104:2> line:99:2 TCPFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, bool, click_jiffies_t)'
| | |-ParmVarDecl 0x55f825b87ac0 <col:10, col:27> col:27 used owner 'IPRewriterInput *'
| | |-ParmVarDecl 0x55f825b87b38 <col:34, col:50> col:50 used flowid 'const IPFlowID &'
| | |-ParmVarDecl 0x55f825b87bb0 <line:100:3, col:19> col:19 used rewritten_flowid 'const IPFlowID &'
| | |-ParmVarDecl 0x55f825b87c28 <line:101:3, col:8> col:8 used guaranteed 'bool'
| | |-ParmVarDecl 0x55f825b87ca0 <col:20, col:36> col:36 used expiry_j 'click_jiffies_t':'unsigned int'
| | |-CXXCtorInitializer 'IPRewriterFlow'
| | | `-CXXConstructExpr 0x55f825b8de18 <line:102:8, line:103:32> 'IPRewriterFlow' 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| | |   |-ImplicitCastExpr 0x55f825b8ddb8 <line:102:23> 'IPRewriterInput *' <LValueToRValue>
| | |   | `-DeclRefExpr 0x55f825b8d538 <col:23> 'IPRewriterInput *' lvalue ParmVar 0x55f825b87ac0 'owner' 'IPRewriterInput *'
| | |   |-DeclRefExpr 0x55f825b8d558 <col:30> 'const IPFlowID' lvalue ParmVar 0x55f825b87b38 'flowid' 'const IPFlowID &'
| | |   |-DeclRefExpr 0x55f825b8d578 <col:38> 'const IPFlowID' lvalue ParmVar 0x55f825b87bb0 'rewritten_flowid' 'const IPFlowID &'
| | |   |-ImplicitCastExpr 0x55f825b8ddd0 <line:103:9> 'uint8_t':'unsigned char' <IntegralCast>
| | |   | `-IntegerLiteral 0x55f825b8d598 <col:9> 'int' 6
| | |   |-ImplicitCastExpr 0x55f825b8dde8 <col:12> 'bool' <LValueToRValue>
| | |   | `-DeclRefExpr 0x55f825b8d5b8 <col:12> 'bool' lvalue ParmVar 0x55f825b87c28 'guaranteed' 'bool'
| | |   `-ImplicitCastExpr 0x55f825b8de00 <col:24> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| | |     `-DeclRefExpr 0x55f825b8d5d8 <col:24> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55f825b87ca0 'expiry_j' 'click_jiffies_t':'unsigned int'
| | |-CXXCtorInitializer Field 0x55f825b8ab08 '_dt' 'TCPRewriter::TCPFlow::delta_transition *'
| | | `-ImplicitCastExpr 0x55f825b8ded8 <col:39> 'TCPRewriter::TCPFlow::delta_transition *' <NullToPointer>
| | |   `-IntegerLiteral 0x55f825b8de98 <col:39> 'int' 0
| | `-CompoundStmt 0x55f825b8df28 <col:42, line:104:2>
| |-CXXDestructorDecl 0x55f825b87f50 <line:106:2, line:111:2> line:106:2 used ~TCPFlow 'void () noexcept'
| | `-CompoundStmt 0x55f825b8e3d8 <col:13, line:111:2>
| |   `-WhileStmt 0x55f825b8e3a0 <line:107:6, line:110:6> has_var
| |     |-DeclStmt 0x55f825b8e3c0 <line:107:13, col:35>
| |     | `-VarDecl 0x55f825b8e030 <col:13, col:35> col:31 used x 'TCPRewriter::TCPFlow::delta_transition *' cinit
| |     |   `-ImplicitCastExpr 0x55f825b8e0d8 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |     |     `-MemberExpr 0x55f825b8e0a8 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55f825b8ab08
| |     |       `-CXXThisExpr 0x55f825b8e098 <col:35> 'TCPRewriter::TCPFlow *' implicit this
| |     |-ImplicitCastExpr 0x55f825b8e128 <col:31> 'bool' <PointerToBoolean>
| |     | `-ImplicitCastExpr 0x55f825b8e110 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |     |   `-DeclRefExpr 0x55f825b8e0f0 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55f825b8e030 'x' 'TCPRewriter::TCPFlow::delta_transition *'
| |     `-CompoundStmt 0x55f825b8e380 <col:40, line:110:6>
| |       |-BinaryOperator 0x55f825b8e220 <line:108:3, col:17> 'TCPRewriter::TCPFlow::delta_transition *' lvalue '='
| |       | |-MemberExpr 0x55f825b8e150 <col:3> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55f825b8ab08
| |       | | `-CXXThisExpr 0x55f825b8e140 <col:3> 'TCPRewriter::TCPFlow *' implicit this
| |       | `-CXXMemberCallExpr 0x55f825b8e1e8 <col:9, col:17> 'TCPRewriter::TCPFlow::delta_transition *'
| |       |   `-MemberExpr 0x55f825b8e1b8 <col:9, col:12> '<bound member function type>' ->next 0x55f825b8a8c8
| |       |     `-ImplicitCastExpr 0x55f825b8e208 <col:9> 'const TCPRewriter::TCPFlow::delta_transition *' <NoOp>
| |       |       `-ImplicitCastExpr 0x55f825b8e1a0 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |       |         `-DeclRefExpr 0x55f825b8e180 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55f825b8e030 'x' 'TCPRewriter::TCPFlow::delta_transition *'
| |       `-CXXDeleteExpr 0x55f825b8e360 <line:109:3, col:10> 'void' Function 0x55f82566dca8 'operator delete' 'void (void *) noexcept'
| |         `-ImplicitCastExpr 0x55f825b8e260 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |           `-DeclRefExpr 0x55f825b8e240 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55f825b8e030 'x' 'TCPRewriter::TCPFlow::delta_transition *'
| |-EnumDecl 0x55f825b88030 <line:113:2, line:118:2> line:113:2
| | |-EnumConstantDecl 0x55f825b88130 <line:114:6, col:23> col:6 referenced s_forward_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55f825b88510 <col:23> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55f825b88110 <col:23> 'int' Int: 1
| | |     `-IntegerLiteral 0x55f825b880f0 <col:23> 'int' 1
| | |-EnumConstantDecl 0x55f825b881c0 <col:26, col:41> col:26 referenced s_reply_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55f825b88528 <col:41> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55f825b881a0 <col:41> 'int' Int: 2
| | |     `-IntegerLiteral 0x55f825b88180 <col:41> 'int' 2
| | |-EnumConstantDecl 0x55f825b882b0 <line:115:6, col:50> col:6 referenced s_both_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55f825b88540 <col:20, col:50> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55f825b88290 <col:20, col:50> 'int' Int: 3
| | |     `-ParenExpr 0x55f825b88270 <col:20, col:50> 'int'
| | |       `-BinaryOperator 0x55f825b88250 <col:21, col:38> 'int' '|'
| | |         |-DeclRefExpr 0x55f825b88210 <col:21> 'int' EnumConstant 0x55f825b88130 's_forward_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | |         `-DeclRefExpr 0x55f825b88230 <col:38> 'int' EnumConstant 0x55f825b881c0 's_reply_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | |-EnumConstantDecl 0x55f825b88340 <line:116:6, col:23> col:6 referenced s_forward_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55f825b88558 <col:23> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55f825b88320 <col:23> 'int' Int: 4
| | |     `-IntegerLiteral 0x55f825b88300 <col:23> 'int' 4
| | |-EnumConstantDecl 0x55f825b883d0 <col:26, col:41> col:26 referenced s_reply_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55f825b88570 <col:41> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55f825b883b0 <col:41> 'int' Int: 8
| | |     `-IntegerLiteral 0x55f825b88390 <col:41> 'int' 8
| | `-EnumConstantDecl 0x55f825b884c0 <line:117:6, col:50> col:6 referenced s_both_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |   `-ImplicitCastExpr 0x55f825b88588 <col:20, col:50> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55f825b884a0 <col:20, col:50> 'int' Int: 12
| |       `-ParenExpr 0x55f825b88480 <col:20, col:50> 'int'
| |         `-BinaryOperator 0x55f825b88460 <col:21, col:38> 'int' '|'
| |           |-DeclRefExpr 0x55f825b88420 <col:21> 'int' EnumConstant 0x55f825b88340 's_forward_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |           `-DeclRefExpr 0x55f825b88440 <col:38> 'int' EnumConstant 0x55f825b883d0 's_reply_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-CXXMethodDecl 0x55f825b885e8 <line:119:2, line:121:2> line:119:7 used both_done 'bool () const'
| | `-CompoundStmt 0x55f825b8e5f0 <col:25, line:121:2>
| |   `-ReturnStmt 0x55f825b8e5e0 <line:120:6, col:40>
| |     `-BinaryOperator 0x55f825b8e5c0 <col:13, col:40> 'bool' '=='
| |       |-ParenExpr 0x55f825b8e4d8 <col:13, col:35> 'int'
| |       | `-BinaryOperator 0x55f825b8e4b8 <col:14, col:24> 'int' '&'
| |       |   |-ImplicitCastExpr 0x55f825b8e488 <col:14> 'int' <IntegralCast>
| |       |   | `-ImplicitCastExpr 0x55f825b8e470 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
| |       |   |   `-MemberExpr 0x55f825b8e420 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55f825b37fe8
| |       |   |     `-ImplicitCastExpr 0x55f825b8e400 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
| |       |   |       `-CXXThisExpr 0x55f825b8e3f0 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
| |       |   `-ImplicitCastExpr 0x55f825b8e4a0 <col:24> 'int' <IntegralCast>
| |       |     `-DeclRefExpr 0x55f825b8e450 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55f825b882b0 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |       `-ImplicitCastExpr 0x55f825b8e5a8 <col:40> 'int' <IntegralCast>
| |         `-DeclRefExpr 0x55f825b8e4f8 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55f825b882b0 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-CXXMethodDecl 0x55f825b886a8 <line:122:2, line:124:2> line:122:7 used both_data 'bool () const'
| | `-CompoundStmt 0x55f825b8e808 <col:25, line:124:2>
| |   `-ReturnStmt 0x55f825b8e7f8 <line:123:6, col:40>
| |     `-BinaryOperator 0x55f825b8e7d8 <col:13, col:40> 'bool' '=='
| |       |-ParenExpr 0x55f825b8e6f0 <col:13, col:35> 'int'
| |       | `-BinaryOperator 0x55f825b8e6d0 <col:14, col:24> 'int' '&'
| |       |   |-ImplicitCastExpr 0x55f825b8e6a0 <col:14> 'int' <IntegralCast>
| |       |   | `-ImplicitCastExpr 0x55f825b8e688 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
| |       |   |   `-MemberExpr 0x55f825b8e638 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55f825b37fe8
| |       |   |     `-ImplicitCastExpr 0x55f825b8e618 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
| |       |   |       `-CXXThisExpr 0x55f825b8e608 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
| |       |   `-ImplicitCastExpr 0x55f825b8e6b8 <col:24> 'int' <IntegralCast>
| |       |     `-DeclRefExpr 0x55f825b8e668 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55f825b884c0 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |       `-ImplicitCastExpr 0x55f825b8e7c0 <col:40> 'int' <IntegralCast>
| |         `-DeclRefExpr 0x55f825b8e710 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55f825b884c0 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-CXXMethodDecl 0x55f825b88970 <line:126:2, col:75> col:6 update_seqno_delta 'int (bool, tcp_seq_t, int32_t)'
| | |-ParmVarDecl 0x55f825b88758 <col:25, col:30> col:30 direction 'bool'
| | |-ParmVarDecl 0x55f825b887d0 <col:41, col:51> col:51 old_seqno 'tcp_seq_t':'unsigned int'
| | `-ParmVarDecl 0x55f825b88848 <col:62, col:70> col:70 delta 'int32_t':'int'
| |-CXXMethodDecl 0x55f825b88bc8 <line:127:2, col:53> col:12 used new_seq 'tcp_seq_t (bool, tcp_seq_t) const'
| | |-ParmVarDecl 0x55f825b88a38 <col:20, col:25> col:25 direction 'bool'
| | `-ParmVarDecl 0x55f825b88ab0 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
| |-CXXMethodDecl 0x55f825b89db8 <line:128:2, col:53> col:12 used new_ack 'tcp_seq_t (bool, tcp_seq_t) const'
| | |-ParmVarDecl 0x55f825b88c88 <col:20, col:25> col:25 direction 'bool'
| | `-ParmVarDecl 0x55f825b89d20 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
| |-CXXMethodDecl 0x55f825b8a010 <line:130:2, col:62> col:7 apply 'void (WritablePacket *, bool, unsigned int)'
| | |-ParmVarDecl 0x55f825b89e78 <col:13, col:29> col:29 p 'WritablePacket *'
| | |-ParmVarDecl 0x55f825b89ef0 <col:32, col:37> col:37 direction 'bool'
| | `-ParmVarDecl 0x55f825b89f70 <col:48, col:57> col:57 annos 'unsigned int'
| |-CXXMethodDecl 0x55f825b8a268 <line:132:2, col:69> col:7 unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| | |-ParmVarDecl 0x55f825b8a0d8 <col:15, col:28> col:28 sa 'StringAccum &'
| | |-ParmVarDecl 0x55f825b8a150 <col:32, col:37> col:37 direction 'bool'
| | `-ParmVarDecl 0x55f825b8a1c8 <col:48, col:64> col:64 now 'click_jiffies_t':'unsigned int'
| |-AccessSpecDecl 0x55f825b8a320 <line:134:7, col:14> col:7 private
| |-CXXRecordDecl 0x55f825b8a348 <line:136:2, line:149:2> line:136:9 referenced struct delta_transition definition
| | |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | | |-DefaultConstructor exists non_trivial user_provided
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-CXXRecordDecl 0x55f825b8a468 <col:2, col:9> col:9 implicit referenced struct delta_transition
| | |-FieldDecl 0x55f825b8a598 <line:137:6, col:21> col:14 referenced delta 'int32_t [2]'
| | |-FieldDecl 0x55f825b8a688 <line:138:6, col:25> col:16 referenced trigger 'tcp_seq_t [2]'
| | |-FieldDecl 0x55f825b8a6e8 <line:139:6, col:16> col:16 referenced nextptr 'uintptr_t':'unsigned long'
| | |-CXXConstructorDecl 0x55f825b8a7a0 <line:140:6, line:142:6> line:140:6 used delta_transition 'void ()'
| | | `-CompoundStmt 0x55f825b8e950 <col:25, line:142:6>
| | |   `-CallExpr 0x55f825b8e900 <line:141:3, col:43> 'void *'
| | |     |-ImplicitCastExpr 0x55f825b8e8e8 <col:3> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x55f825b8e8c8 <col:3> 'void *(void *, int, size_t) throw()' lvalue Function 0x55f82577ba18 'memset' 'void *(void *, int, size_t) throw()'
| | |     |-ImplicitCastExpr 0x55f825b8e938 <col:10> 'void *' <BitCast>
| | |     | `-CXXThisExpr 0x55f825b8e868 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' this
| | |     |-IntegerLiteral 0x55f825b8e878 <col:16> 'int' 0
| | |     `-UnaryExprOrTypeTraitExpr 0x55f825b8e8a8 <col:19, col:42> 'unsigned long' sizeof 'TCPRewriter::TCPFlow::delta_transition'
| | |-CXXMethodDecl 0x55f825b8a8c8 <line:143:6, line:145:6> line:143:24 used next 'TCPRewriter::TCPFlow::delta_transition *() const'
| | | `-CompoundStmt 0x55f825b8eb00 <col:37, line:145:6>
| | |   `-ReturnStmt 0x55f825b8eaf0 <line:144:3, col:70>
| | |     `-CXXReinterpretCastExpr 0x55f825b8eac0 <col:10, col:70> 'TCPRewriter::TCPFlow::delta_transition *' reinterpret_cast<struct TCPRewriter::TCPFlow::delta_transition *> <IntegralToPointer>
| | |       `-BinaryOperator 0x55f825b8ea90 <col:47, col:69> 'unsigned long' '-'
| | |         |-ImplicitCastExpr 0x55f825b8ea78 <col:47> 'uintptr_t':'unsigned long' <LValueToRValue>
| | |         | `-MemberExpr 0x55f825b8e978 <col:47> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55f825b8a6e8
| | |         |   `-CXXThisExpr 0x55f825b8e968 <col:47> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| | |         `-ParenExpr 0x55f825b8ea58 <col:57, col:69> 'unsigned long'
| | |           `-BinaryOperator 0x55f825b8ea38 <col:58, col:68> 'unsigned long' '&'
| | |             |-ImplicitCastExpr 0x55f825b8ea08 <col:58> 'uintptr_t':'unsigned long' <LValueToRValue>
| | |             | `-MemberExpr 0x55f825b8e9b8 <col:58> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55f825b8a6e8
| | |             |   `-CXXThisExpr 0x55f825b8e9a8 <col:58> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| | |             `-ImplicitCastExpr 0x55f825b8ea20 <col:68> 'unsigned long' <IntegralCast>
| | |               `-IntegerLiteral 0x55f825b8e9e8 <col:68> 'int' 3
| | |-CXXMethodDecl 0x55f825b8aa38 <line:146:6, line:148:6> line:146:11 used has_trigger 'bool (bool) const'
| | | |-ParmVarDecl 0x55f825b8a978 <col:23, col:28> col:28 used direction 'bool'
| | | `-CompoundStmt 0x55f825b8ec80 <col:45, line:148:6>
| | |   `-ReturnStmt 0x55f825b8ec70 <line:147:3, col:35>
| | |     `-ImplicitCastExpr 0x55f825b8ec58 <col:10, col:35> 'bool' <IntegralToBoolean>
| | |       `-BinaryOperator 0x55f825b8ec38 <col:10, col:35> 'unsigned long' '&'
| | |         |-ImplicitCastExpr 0x55f825b8ec08 <col:10> 'uintptr_t':'unsigned long' <LValueToRValue>
| | |         | `-MemberExpr 0x55f825b8eb28 <col:10> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55f825b8a6e8
| | |         |   `-CXXThisExpr 0x55f825b8eb18 <col:10> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| | |         `-ImplicitCastExpr 0x55f825b8ec20 <col:20, col:35> 'unsigned long' <IntegralCast>
| | |           `-ParenExpr 0x55f825b8ebe8 <col:20, col:35> 'int'
| | |             `-BinaryOperator 0x55f825b8ebc8 <col:21, col:26> 'int' '<<'
| | |               |-IntegerLiteral 0x55f825b8eb58 <col:21> 'int' 1
| | |               `-ImplicitCastExpr 0x55f825b8ebb0 <col:26> 'int' <IntegralCast>
| | |                 `-ImplicitCastExpr 0x55f825b8eb98 <col:26> 'bool' <LValueToRValue>
| | |                   `-DeclRefExpr 0x55f825b8eb78 <col:26> 'bool' lvalue ParmVar 0x55f825b8a978 'direction' 'bool'
| | |-CXXDestructorDecl 0x55f825b8e278 <line:136:9> col:9 implicit ~delta_transition 'void ()' inline default trivial noexcept-unevaluated 0x55f825b8e278
| | |-CXXConstructorDecl 0x55f825c7ac48 <col:9> col:9 implicit constexpr delta_transition 'void (const TCPRewriter::TCPFlow::delta_transition &)' inline default trivial noexcept-unevaluated 0x55f825c7ac48
| | | `-ParmVarDecl 0x55f825c7ad58 <col:9> col:9 'const TCPRewriter::TCPFlow::delta_transition &'
| | `-CXXConstructorDecl 0x55f825c7adf8 <col:9> col:9 implicit constexpr delta_transition 'void (TCPRewriter::TCPFlow::delta_transition &&)' inline default trivial noexcept-unevaluated 0x55f825c7adf8
| |   `-ParmVarDecl 0x55f825c7af08 <col:9> col:9 'TCPRewriter::TCPFlow::delta_transition &&'
| |-FieldDecl 0x55f825b8ab08 <line:151:2, col:20> col:20 referenced _dt 'TCPRewriter::TCPFlow::delta_transition *'
| `-CXXMethodDecl 0x55f825b8ad48 <line:153:2, col:67> col:7 used apply_sack 'void (bool, click_tcp *, int)'
|   |-ParmVarDecl 0x55f825b8ab68 <col:18, col:23> col:23 direction 'bool'
|   |-ParmVarDecl 0x55f825b8abe0 <col:34, col:45> col:45 tcp 'click_tcp *'
|   `-ParmVarDecl 0x55f825b8ac60 <col:50, col:54> col:54 transport_len 'int'
|-CXXConstructorDecl 0x55f825b8ae60 <line:157:5, col:17> col:5 TCPRewriter 'void ()'
|-CXXDestructorDecl 0x55f825b8af50 <line:158:5, col:18> col:5 ~TCPRewriter 'void ()' noexcept-unevaluated 0x55f825b8af50
| `-Overrides: [ 0x55f825b620b8 IPRewriterBase::~IPRewriterBase 'void () noexcept' ]
|-CXXMethodDecl 0x55f825b8b080 <line:160:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55f825a88868 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55f825b8ece8 <col:36, col:60>
|   `-ReturnStmt 0x55f825b8ecd8 <col:38, col:45>
|     `-ImplicitCastExpr 0x55f825b8ecc0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55f825b8ec98 <col:45> 'const char [12]' lvalue "TCPRewriter"
|-CXXMethodDecl 0x55f825b8b1d0 <line:161:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x55f825a89560 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55f825b8b138 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x55f825b8b4b0 <line:163:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55f825b62a60 IPRewriterBase::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55f825b8b360 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55f825b8b3d8 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55f825b8b790 <line:165:5, line:166:53> line:165:22 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)'
| |-Overrides: [ 0x55f825b63bd8 IPRewriterBase::add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' ]
| |-ParmVarDecl 0x55f825b8b578 <col:31, col:35> col:35 ip_p 'int'
| |-ParmVarDecl 0x55f825b8b5f0 <col:41, col:57> col:57 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55f825b8b668 <line:166:10, col:26> col:26 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55f825b8b6e8 <col:44, col:48> col:48 input 'int'
|-CXXMethodDecl 0x55f825b8b8f0 <line:167:5, col:43> col:10 destroy_flow 'void (IPRewriterFlow *)'
| |-Overrides: [ 0x55f825b63d38 IPRewriterBase::destroy_flow 'void (IPRewriterFlow *)' ]
| `-ParmVarDecl 0x55f825b8b860 <col:23, col:39> col:39 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x55f825b8ba38 <line:168:5, line:170:5> line:168:21 best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)'
| |-Overrides: [ 0x55f825b63ee8 IPRewriterBase::best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' ]
| |-ParmVarDecl 0x55f825b8b9a8 <col:40, col:62> col:62 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x55f825b8efc0 <col:68, line:170:5>
|   `-ReturnStmt 0x55f825b8efb0 <line:169:2, col:92>
|     `-BinaryOperator 0x55f825b8ef90 <col:9, col:92> 'unsigned int' '-'
|       |-BinaryOperator 0x55f825b8eea0 <col:9, col:77> 'unsigned int' '+'
|       | |-CXXMemberCallExpr 0x55f825b8ed68 <col:9, col:22> 'click_jiffies_t':'unsigned int'
|       | | `-MemberExpr 0x55f825b8ed38 <col:9, col:15> '<bound member function type>' ->expiry 0x55f825b35a10
|       | |   `-ImplicitCastExpr 0x55f825b8ed20 <col:9> 'const IPRewriterFlow *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x55f825b8ed00 <col:9> 'const IPRewriterFlow *' lvalue ParmVar 0x55f825b8b9a8 'flow' 'const IPRewriterFlow *'
|       | `-ImplicitCastExpr 0x55f825b8ee88 <col:26, col:77> 'unsigned int' <IntegralCast>
|       |   `-CXXMemberCallExpr 0x55f825b8ee48 <col:26, col:77> 'int'
|       |     |-MemberExpr 0x55f825b8ed98 <col:26> '<bound member function type>' ->tcp_flow_timeout 0x55f825b8cbe0
|       |     | `-ImplicitCastExpr 0x55f825b8ee70 <col:26> 'const TCPRewriter *' <NoOp>
|       |     |   `-CXXThisExpr 0x55f825b8ed88 <col:26> 'TCPRewriter *' implicit this
|       |     `-CXXStaticCastExpr 0x55f825b8ee10 <col:43, col:76> 'const TCPRewriter::TCPFlow *' static_cast<const class TCPRewriter::TCPFlow *> <BaseToDerived (IPRewriterFlow)>
|       |       `-ImplicitCastExpr 0x55f825b8edf8 <col:72> 'const IPRewriterFlow *' <LValueToRValue> part_of_explicit_cast
|       |         `-DeclRefExpr 0x55f825b8edc8 <col:72> 'const IPRewriterFlow *' lvalue ParmVar 0x55f825b8b9a8 'flow' 'const IPRewriterFlow *'
|       `-ImplicitCastExpr 0x55f825b8ef78 <col:81, col:92> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-ArraySubscriptExpr 0x55f825b8ef58 <col:81, col:92> 'uint32_t':'unsigned int' lvalue
|           |-ImplicitCastExpr 0x55f825b8ef40 <col:81> 'uint32_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x55f825b8eef0 <col:81> 'uint32_t [2]' lvalue ->_timeouts 0x55f825b782c8
|           |   `-ImplicitCastExpr 0x55f825b8eed0 <col:81> 'IPRewriterBase *' <UncheckedDerivedToBase (IPRewriterBase)>
|           |     `-CXXThisExpr 0x55f825b8eec0 <col:81> 'TCPRewriter *' implicit this
|           `-IntegerLiteral 0x55f825b8ef20 <col:91> 'int' 1
|-CXXMethodDecl 0x55f825b8bc08 <line:172:5, col:28> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55f825a876d8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55f825b8baf8 <col:15> col:18 'int'
| `-ParmVarDecl 0x55f825b8bb70 <col:20, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x55f825b8bcd8 <line:174:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55f825a8a200 Element::add_handlers 'void ()' ]
|-AccessSpecDecl 0x55f825b8bd78 <line:176:2, col:11> col:2 protected
|-FieldDecl 0x55f825b8c990 <line:178:5, col:41> col:41 referenced _allocator 'SizedHashAllocator<sizeof(TCPRewriter::TCPFlow)>':'SizedHashAllocator<80>'
|-FieldDecl 0x55f825b8c9f8 <line:179:5, col:14> col:14 _annos 'unsigned int'
|-FieldDecl 0x55f825b8ca58 <line:180:5, col:14> col:14 referenced _tcp_data_timeout 'uint32_t':'unsigned int'
|-FieldDecl 0x55f825b8cab8 <line:181:5, col:14> col:14 referenced _tcp_done_timeout 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55f825b8cbe0 <line:183:5, line:190:5> line:183:9 used tcp_flow_timeout 'int (const TCPRewriter::TCPFlow *) const'
| |-ParmVarDecl 0x55f825b8cb18 <col:26, col:41> col:41 used mf 'const TCPRewriter::TCPFlow *'
| `-CompoundStmt 0x55f825b8f330 <col:51, line:190:5>
|   `-IfStmt 0x55f825b8f308 <line:184:2, line:189:24> has_else
|     |-CXXMemberCallExpr 0x55f825b8f040 <line:184:6, col:20> 'bool'
|     | `-MemberExpr 0x55f825b8f010 <col:6, col:10> '<bound member function type>' ->both_done 0x55f825b885e8
|     |   `-ImplicitCastExpr 0x55f825b8eff8 <col:6> 'const TCPRewriter::TCPFlow *' <LValueToRValue>
|     |     `-DeclRefExpr 0x55f825b8efd8 <col:6> 'const TCPRewriter::TCPFlow *' lvalue ParmVar 0x55f825b8cb18 'mf' 'const TCPRewriter::TCPFlow *'
|     |-ReturnStmt 0x55f825b8f0d0 <line:185:6, col:13>
|     | `-ImplicitCastExpr 0x55f825b8f0b8 <col:13> 'int' <IntegralCast>
|     |   `-ImplicitCastExpr 0x55f825b8f0a0 <col:13> 'uint32_t':'unsigned int' <LValueToRValue>
|     |     `-MemberExpr 0x55f825b8f070 <col:13> 'const uint32_t':'const unsigned int' lvalue ->_tcp_done_timeout 0x55f825b8cab8
|     |       `-CXXThisExpr 0x55f825b8f060 <col:13> 'const TCPRewriter *' implicit this
|     `-IfStmt 0x55f825b8f2e0 <line:186:7, line:189:24> has_else
|       |-CXXMemberCallExpr 0x55f825b8f148 <line:186:11, col:25> 'bool'
|       | `-MemberExpr 0x55f825b8f118 <col:11, col:15> '<bound member function type>' ->both_data 0x55f825b886a8
|       |   `-ImplicitCastExpr 0x55f825b8f100 <col:11> 'const TCPRewriter::TCPFlow *' <LValueToRValue>
|       |     `-DeclRefExpr 0x55f825b8f0e0 <col:11> 'const TCPRewriter::TCPFlow *' lvalue ParmVar 0x55f825b8cb18 'mf' 'const TCPRewriter::TCPFlow *'
|       |-ReturnStmt 0x55f825b8f1d8 <line:187:6, col:13>
|       | `-ImplicitCastExpr 0x55f825b8f1c0 <col:13> 'int' <IntegralCast>
|       |   `-ImplicitCastExpr 0x55f825b8f1a8 <col:13> 'uint32_t':'unsigned int' <LValueToRValue>
|       |     `-MemberExpr 0x55f825b8f178 <col:13> 'const uint32_t':'const unsigned int' lvalue ->_tcp_data_timeout 0x55f825b8ca58
|       |       `-CXXThisExpr 0x55f825b8f168 <col:13> 'const TCPRewriter *' implicit this
|       `-ReturnStmt 0x55f825b8f2d0 <line:189:6, col:24>
|         `-ImplicitCastExpr 0x55f825b8f2b8 <col:13, col:24> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55f825b8f2a0 <col:13, col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|             `-ArraySubscriptExpr 0x55f825b8f280 <col:13, col:24> 'const uint32_t':'const unsigned int' lvalue
|               |-ImplicitCastExpr 0x55f825b8f268 <col:13> 'const uint32_t *' <ArrayToPointerDecay>
|               | `-MemberExpr 0x55f825b8f218 <col:13> 'uint32_t const[2]' lvalue ->_timeouts 0x55f825b782c8
|               |   `-ImplicitCastExpr 0x55f825b8f1f8 <col:13> 'IPRewriterBase *' <UncheckedDerivedToBase (IPRewriterBase)>
|               |     `-CXXThisExpr 0x55f825b8f1e8 <col:13> 'const TCPRewriter *' implicit this
|               `-IntegerLiteral 0x55f825b8f248 <col:23> 'int' 0
|-CXXMethodDecl 0x55f825b8cdb0 <line:192:5, col:57> col:19 tcp_mappings_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55f825b8cc98 <col:40, col:48> col:49 'Element *'
| `-ParmVarDecl 0x55f825b8cd18 <col:51, col:56> col:57 'void *'
|-CXXMethodDecl 0x55f825b8d110 <line:193:5, col:101> col:16 tcp_lookup_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x55f825b8ce78 <col:35> col:38 'int'
| |-ParmVarDecl 0x55f825b8cef0 <col:40, col:48> col:48 str 'String &'
| |-ParmVarDecl 0x55f825b8cf68 <col:53, col:62> col:62 e 'Element *'
| |-ParmVarDecl 0x55f825b8cfe0 <col:65, col:80> col:80 h 'const Handler *'
| `-ParmVarDecl 0x55f825b8d058 <col:83, col:97> col:97 errh 'ErrorHandler *'
|-CXXConstructorDecl 0x55f825b8d208 <line:95:7> col:7 implicit TCPRewriter 'void (const TCPRewriter &)' inline default_delete noexcept-unevaluated 0x55f825b8d208
| `-ParmVarDecl 0x55f825b8d318 <col:7> col:7 'const TCPRewriter &'
`-CXXMethodDecl 0x55f825b8d3b8 <col:7> col:7 implicit operator= 'TCPRewriter &(const TCPRewriter &)' inline default_delete noexcept-unevaluated 0x55f825b8d3b8
  `-ParmVarDecl 0x55f825b8d4c8 <col:7> col:7 'const TCPRewriter &'

Layout: <CGRecordLayout
  LLVMType:%class.TCPRewriter = type <{ %class.IPRewriterBase, %class.SizedHashAllocator, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TCPRewriter.base = type <{ %class.IPRewriterBase, %class.SizedHashAllocator, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825858e80 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55f825858f98 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55f825859038 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55f825859098 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55f8258590f8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55f8258591a8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f8258594b0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f8258595c8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55f825859670 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55f8258596d8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55f825859768 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55f82585df00 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f82585e338 <col:12>
|-CXXConstructorDecl 0x55f82585e008 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f82585e118 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55f825859670 'data' 'const char *'
| | `-ImplicitCastExpr 0x55f825861780 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55f825861750 <col:12> 'const char *const' lvalue .data 0x55f825859670
| |     `-DeclRefExpr 0x55f825861730 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f82585e118 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55f8258596d8 'length' 'int'
| | `-ImplicitCastExpr 0x55f825861810 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55f8258617e0 <col:12> 'const int' lvalue .length 0x55f8258596d8
| |     `-DeclRefExpr 0x55f8258617c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f82585e118 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55f825859768 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55f8258618a0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55f825861870 <col:12> 'String::memo_t *const' lvalue .memo 0x55f825859768
| |     `-DeclRefExpr 0x55f825861850 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f82585e118 '' 'const String::rep_t &'
| `-CompoundStmt 0x55f8258618f8 <col:12>
|-CXXConstructorDecl 0x55f82585e1b8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f82585e1b8
| `-ParmVarDecl 0x55f82585e2c8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55f825864620 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55f82586dca8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55f82586ddb8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55f82586e2d0 <col:12>
|   |-BinaryOperator 0x55f82586e0e8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55f82586e0a0 <col:12> 'const char *' lvalue ->data 0x55f825859670
|   | | `-CXXThisExpr 0x55f82586e090 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55f82586e0d0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55f82586e060 <col:12> 'const char *const' lvalue .data 0x55f825859670
|   |     `-DeclRefExpr 0x55f82586e040 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f82586ddb8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55f82586e1b0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55f82586e168 <col:12> 'int' lvalue ->length 0x55f8258596d8
|   | | `-CXXThisExpr 0x55f82586e158 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55f82586e198 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55f82586e128 <col:12> 'const int' lvalue .length 0x55f8258596d8
|   |     `-DeclRefExpr 0x55f82586e108 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f82586ddb8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55f82586e278 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55f82586e230 <col:12> 'String::memo_t *' lvalue ->memo 0x55f825859768
|   | | `-CXXThisExpr 0x55f82586e220 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55f82586e260 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55f82586e1f0 <col:12> 'String::memo_t *const' lvalue .memo 0x55f825859768
|   |     `-DeclRefExpr 0x55f82586e1d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f82586ddb8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55f82586e2c0 <col:12>
|     `-UnaryOperator 0x55f82586e2a8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f82586e298 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55f82586de28 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f82586de28
  `-ParmVarDecl 0x55f82586df38 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f82584f3f0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f82584f508 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55f82584f598 <col:16, col:22> col:16 public
|-TypedefDecl 0x55f82584f5d8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55f825516dc0 'const char *'
|   `-QualType 0x55f825516311 'const char' const
|     `-BuiltinType 0x55f825516310 'char'
|-TypedefDecl 0x55f82584f660 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55f82584f630 'String::const_iterator' sugar
|   |-Typedef 0x55f82584f5d8 'const_iterator'
|   `-PointerType 0x55f825516dc0 'const char *'
|     `-QualType 0x55f825516311 'const char' const
|       `-BuiltinType 0x55f825516310 'char'
|-TypedefDecl 0x55f82584f7d0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55f82584f740 'int (String::*)() const'
|   |-RecordType 0x55f82584f480 'String'
|   | `-CXXRecord 0x55f82584f3f0 'String'
|   `-ParenType 0x55f82584f6e0 'int () const' sugar
|     `-FunctionProtoType 0x55f825831e10 'int () const' const cdecl
|       `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f82584f838 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55f8256700f0 'int64_t' sugar
|   |-Typedef 0x55f82557f2d0 'int64_t'
|   `-TypedefType 0x55f8255584d0 '__int64_t' sugar
|     |-Typedef 0x55f8255580a8 '__int64_t'
|     `-BuiltinType 0x55f825516390 'long'
|-TypedefDecl 0x55f82584f8a0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55f825670010 'uint64_t' sugar
|   |-Typedef 0x55f82557f470 'uint64_t'
|   `-TypedefType 0x55f825558560 '__uint64_t' sugar
|     |-Typedef 0x55f825558118 '__uint64_t'
|     `-BuiltinType 0x55f825516430 'unsigned long'
|-TypedefDecl 0x55f82584f930 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55f82584f900 'String::intmax_t' sugar
|   |-Typedef 0x55f82584f838 'intmax_t'
|   `-TypedefType 0x55f8256700f0 'int64_t' sugar
|     |-Typedef 0x55f82557f2d0 'int64_t'
|     `-TypedefType 0x55f8255584d0 '__int64_t' sugar
|       |-Typedef 0x55f8255580a8 '__int64_t'
|       `-BuiltinType 0x55f825516390 'long'
|-TypedefDecl 0x55f82584f9c0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55f82584f990 'String::uintmax_t' sugar
|   |-Typedef 0x55f82584f8a0 'uintmax_t'
|   `-TypedefType 0x55f825670010 'uint64_t' sugar
|     |-Typedef 0x55f82557f470 'uint64_t'
|     `-TypedefType 0x55f825558560 '__uint64_t' sugar
|       |-Typedef 0x55f825558118 '__uint64_t'
|       `-BuiltinType 0x55f825516430 'unsigned long'
|-CXXConstructorDecl 0x55f82584fa80 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55f82584fc28 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55f82584fb68 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55f82584fdd8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55f82584fd18 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55f82584ff30 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55f82584fea0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55f825850148 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55f82584fff8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55f825850078 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55f825850368 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55f825850218 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55f825850298 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55f825850588 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55f825850438 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55f8258504b8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55f8258507a8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55f825850658 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55f8258506d8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55f825850938 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55f825850870 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55f825850ab8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55f8258509f8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55f825850c48 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55f825850b80 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55f825850da0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55f825850d10 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55f825850f28 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55f825850e68 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55f825851080 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55f825850ff0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55f825851208 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55f825851148 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55f825851398 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55f8258512d0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55f825851528 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55f825851460 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55f8258516b8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55f8258515f0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55f8258517b0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55f8258518d8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55f825851a58 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55f825851990 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55f825851ba8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55f825851b18 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55f825851c50 <col:63> "" ""
|-CXXMethodDecl 0x55f825851d98 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55f825851cd8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55f825851fa8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55f825851e58 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55f825851ed8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55f8258521c8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55f825852070 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55f8258520f0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55f8258524a8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55f825852288 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55f825852308 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55f82585d9d0 <col:55> 'int' 10
| `-ParmVarDecl 0x55f825852380 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f82585d9f0 <col:76> 'bool' true
|-CXXMethodDecl 0x55f825852788 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55f825852570 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55f8258525f0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55f82585da00 <col:56> 'int' 10
| `-ParmVarDecl 0x55f825852668 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f82585da20 <col:77> 'bool' true
|-CXXMethodDecl 0x55f825852890 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55f825852958 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55f825852a20 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55f825852ac0 <col:20>
| `-OptimizeNoneAttr 0x55f825852b18 <col:30>
|-CXXConversionDecl 0x55f825852c08 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55f825852cd8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55f825852d98 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55f825852e88 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55f825852f48 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55f8258530c8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55f825853000 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55f825853218 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55f825853188 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55f825853308 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55f8258533c8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55f825853618 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55f825853480 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55f825853500 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55f825853878 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55f8258536e0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55f825853760 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55f825853948 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55f825853b58 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55f825853a00 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55f825853a80 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55f825853d78 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55f825853c20 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55f825853ca0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55f825853f08 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55f825853e40 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55f825853ff8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55f825854168 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55f8258540a8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55f825854378 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55f825854228 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55f8258542a8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55f825854590 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55f825854438 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55f8258544b0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55f825854720 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55f825854650 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55f825854940 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55f8258547e0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55f825854860 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55f825854a90 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55f825854a00 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55f825854c68 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55f825854b50 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55f825854bd0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55f825854db8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55f825854d28 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55f825856000 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55f825854e70 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55f825855f20 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55f82585da30 <col:39> 'int' 0
|-CXXMethodDecl 0x55f825856220 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55f8258560c0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55f825856140 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55f82585da50 <col:48> 'int' 0
|-CXXMethodDecl 0x55f825856400 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55f8258562e0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55f825856360 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55f82585da70 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55f8258564d0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55f825856590 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55f825856650 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55f825856710 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55f8258567d0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55f825856978 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55f825856880 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55f825856af8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55f825856a30 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55f825856c78 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55f825856bb8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55f825856df8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55f825856d30 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55f825856f40 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55f825856eb0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55f825857090 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55f825857000 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55f825857268 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55f825857150 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55f8258571d0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55f825857448 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55f825857330 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55f8258573b0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55f825857598 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55f825857508 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55f8258577a8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55f825857658 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55f8258576d8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55f825857908 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55f825857870 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55f825857a60 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55f8258579c8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55f825857b08 <col:57> "" ""
|-CXXMethodDecl 0x55f825857c18 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55f825857b88 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55f825857d68 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55f825857cd8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55f825857ee8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55f825857e20 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55f825857fb0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55f825858070 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55f825858130 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55f8258581d0 <col:49> "" ""
|-CXXMethodDecl 0x55f825858260 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55f825858320 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55f825858410 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55f8258584d8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55f825858598 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55f825858658 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55f825858750 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55f825858818 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55f8258588e0 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55f825858ab8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55f825858998 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55f825858a18 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55f825858ce0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55f825858b80 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55f825858c00 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55f825858df0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55f825858e58 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55f825858e80 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55f825858f98 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55f825859038 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55f825859098 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55f8258590f8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55f8258591a8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55f825859210 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55f825859448 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55f825859498 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825859428 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55f825859338 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55f8258592e0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55f825859320 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55f825859300 <col:32> 'int' 8
|-CXXRecordDecl 0x55f8258594b0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55f8258595c8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55f825859670 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55f8258596d8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55f825859768 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55f82585df00 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55f82585e338 <col:12>
| |-CXXConstructorDecl 0x55f82585e008 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f82585e118 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55f825859670 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55f825861780 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55f825861750 <col:12> 'const char *const' lvalue .data 0x55f825859670
| | |     `-DeclRefExpr 0x55f825861730 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f82585e118 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55f8258596d8 'length' 'int'
| | | `-ImplicitCastExpr 0x55f825861810 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55f8258617e0 <col:12> 'const int' lvalue .length 0x55f8258596d8
| | |     `-DeclRefExpr 0x55f8258617c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f82585e118 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55f825859768 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55f8258618a0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55f825861870 <col:12> 'String::memo_t *const' lvalue .memo 0x55f825859768
| | |     `-DeclRefExpr 0x55f825861850 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f82585e118 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55f8258618f8 <col:12>
| |-CXXConstructorDecl 0x55f82585e1b8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f82585e1b8
| | `-ParmVarDecl 0x55f82585e2c8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55f825864620 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55f82586dca8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55f82586ddb8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55f82586e2d0 <col:12>
| |   |-BinaryOperator 0x55f82586e0e8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55f82586e0a0 <col:12> 'const char *' lvalue ->data 0x55f825859670
| |   | | `-CXXThisExpr 0x55f82586e090 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55f82586e0d0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55f82586e060 <col:12> 'const char *const' lvalue .data 0x55f825859670
| |   |     `-DeclRefExpr 0x55f82586e040 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f82586ddb8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55f82586e1b0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55f82586e168 <col:12> 'int' lvalue ->length 0x55f8258596d8
| |   | | `-CXXThisExpr 0x55f82586e158 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55f82586e198 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55f82586e128 <col:12> 'const int' lvalue .length 0x55f8258596d8
| |   |     `-DeclRefExpr 0x55f82586e108 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f82586ddb8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55f82586e278 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55f82586e230 <col:12> 'String::memo_t *' lvalue ->memo 0x55f825859768
| |   | | `-CXXThisExpr 0x55f82586e220 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55f82586e260 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55f82586e1f0 <col:12> 'String::memo_t *const' lvalue .memo 0x55f825859768
| |   |     `-DeclRefExpr 0x55f82586e1d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55f82586ddb8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55f82586e2c0 <col:12>
| |     `-UnaryOperator 0x55f82586e2a8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55f82586e298 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55f82586de28 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55f82586de28
|   `-ParmVarDecl 0x55f82586df38 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55f8258597e0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55f825859a28 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55f825859848 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55f8258598c8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55f825859940 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55f82585dec0 <col:79, line:261:5>
|   |-BinaryOperator 0x55f82585db38 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55f82585dad0 <col:2, col:5> 'const char *' lvalue .data 0x55f825859670
|   | | `-MemberExpr 0x55f82585daa0 <col:2> 'String::rep_t' lvalue ->_r 0x55f8258597e0
|   | |   `-CXXThisExpr 0x55f82585da90 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55f82585db20 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f82585db00 <col:12> 'const char *' lvalue ParmVar 0x55f825859848 'data' 'const char *'
|   |-BinaryOperator 0x55f82585dc00 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55f82585db98 <col:2, col:5> 'int' lvalue .length 0x55f8258596d8
|   | | `-MemberExpr 0x55f82585db68 <col:2> 'String::rep_t' lvalue ->_r 0x55f8258597e0
|   | |   `-CXXThisExpr 0x55f82585db58 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55f82585dbe8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55f82585dbc8 <col:14> 'int' lvalue ParmVar 0x55f8258598c8 'length' 'int'
|   `-IfStmt 0x55f82585dea8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55f82585dd20 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55f82585dd08 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55f82585dce8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55f82585dcc8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55f82585dc60 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55f825859768
|     |       | `-MemberExpr 0x55f82585dc30 <col:7> 'String::rep_t' lvalue ->_r 0x55f8258597e0
|     |       |   `-CXXThisExpr 0x55f82585dc20 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55f82585dcb0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55f82585dc90 <col:17> 'String::memo_t *' lvalue ParmVar 0x55f825859940 'memo' 'String::memo_t *'
|     `-CallExpr 0x55f82585de80 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55f82585de68 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f82585dd70 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55f8257dd718 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55f82585ddd8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55f825859038
|         `-ImplicitCastExpr 0x55f82585ddc0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55f82585dda0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55f825859940 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55f825859cd8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55f825859af8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55f825859b78 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55f825859bf0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55f8258597e0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55f82585e348 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55f82585e4d8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55f82585e440 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55f82585e3b0 <col:2> '<bound member function type>' ->assign_memo 0x55f825859a28
|     | `-ImplicitCastExpr 0x55f82585e478 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55f82585e3a0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55f82585e490 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55f82585e3e0 <col:14> 'const char *' lvalue ParmVar 0x55f825859af8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55f82585e4a8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55f82585e400 <col:20> 'int' lvalue ParmVar 0x55f825859b78 'length' 'int'
|     `-ImplicitCastExpr 0x55f82585e4c0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55f82585e420 <col:28> 'String::memo_t *' lvalue ParmVar 0x55f825859bf0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55f825859e68 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55f825859da8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55f82585e730 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55f82585e6b0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55f82585e500 <col:2> '<bound member function type>' ->assign_memo 0x55f825859a28
|     | `-CXXThisExpr 0x55f82585e4f0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55f82585e6e8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55f82585e580 <col:14, col:19> 'const char *' lvalue .data 0x55f825859670
|     |   `-MemberExpr 0x55f82585e550 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55f8258597e0
|     |     `-DeclRefExpr 0x55f82585e530 <col:14> 'const String' lvalue ParmVar 0x55f825859da8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55f82585e700 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55f82585e600 <col:25, col:30> 'int' lvalue .length 0x55f8258596d8
|     |   `-MemberExpr 0x55f82585e5d0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55f8258597e0
|     |     `-DeclRefExpr 0x55f82585e5b0 <col:25> 'const String' lvalue ParmVar 0x55f825859da8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55f82585e718 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55f82585e680 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55f825859768
|         `-MemberExpr 0x55f82585e650 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55f8258597e0
|           `-DeclRefExpr 0x55f82585e630 <col:38> 'const String' lvalue ParmVar 0x55f825859da8 'x' 'const String &'
|-CXXMethodDecl 0x55f82585c130 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55f82585f0f0 <col:31, line:278:5>
|   `-IfStmt 0x55f82585f0d8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55f82585e7d0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55f82585e7b8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55f82585e788 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55f825859768
|     |     `-MemberExpr 0x55f82585e758 <col:6> 'String::rep_t' lvalue ->_r 0x55f8258597e0
|     |       `-CXXThisExpr 0x55f82585e748 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55f82585f0b0 <col:15, line:277:2>
|       |-ParenExpr 0x55f82585ec80 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55f82585ec50 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55f82585e8e0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55f82585e8c8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55f82585e8b0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55f82585e870 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55f825859038
|       |   |       `-ImplicitCastExpr 0x55f82585e858 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55f82585e828 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55f825859768
|       |   |           `-MemberExpr 0x55f82585e7f8 <col:27> 'String::rep_t' lvalue ->_r 0x55f8258597e0
|       |   |             `-CXXThisExpr 0x55f82585e7e8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55f82585e940 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55f82585e920 <col:54> 'int' 0
|       |   `-CallExpr 0x55f82585ebb0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55f82585eb98 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55f82585eb18 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55f82585ebf0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55f82585ea28 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55f82585ec08 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55f82585ea58 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55f82585ec20 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55f82585ea90 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55f82585ec38 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55f82585eb00 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55f82585eae8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55f82585eab0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55f82585efd0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55f82585ee90 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55f82585ee78 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55f82585edf0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55f8257dff00 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55f82585edc0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55f825859038
|       | |   `-ImplicitCastExpr 0x55f82585eda8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55f82585ed78 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55f825859768
|       | |       `-MemberExpr 0x55f82585ed48 <col:40> 'String::rep_t' lvalue ->_r 0x55f8258597e0
|       | |         `-CXXThisExpr 0x55f82585ed38 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55f82585ef90 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55f82585ef78 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55f82585eeb8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55f82585ce08 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55f82585efb8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55f82585ef18 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55f825859768
|       |       `-MemberExpr 0x55f82585eee8 <col:15> 'String::rep_t' lvalue ->_r 0x55f8258597e0
|       |         `-CXXThisExpr 0x55f82585eed8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55f82585f090 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55f82585f028 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55f825859768
|         | `-MemberExpr 0x55f82585eff8 <col:6> 'String::rep_t' lvalue ->_r 0x55f8258597e0
|         |   `-CXXThisExpr 0x55f82585efe8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55f82585f078 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55f82585f058 <col:16> 'int' 0
|-CXXMethodDecl 0x55f82585c3c8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55f82585c1e8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55f82585c268 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55f82585c2e0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55f82585c4a0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55f82585c6f0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55f82585c558 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55f82585c5d8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55f82585c650 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55f82585c8d8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55f82585c7c0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55f82585c840 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55f82585c9d8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55f82585f1c8 <col:41, line:286:5>
|   `-ReturnStmt 0x55f82585f1b8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55f82585f188 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55f82585f150 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55f82585f138 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55f82585f118 <col:46> 'int' 1
|-CXXMethodDecl 0x55f82585cc78 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55f82585ca90 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55f82585cb10 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55f82585cb90 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55f82585ce08 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55f82585cd40 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55f82585ced8 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55f82585d0a8 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55f82585cf90 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55f82585d010 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55f82585d168 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55f82585d230 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55f82585d338 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55f82585d3b0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55f82585d428 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55f82585d490 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55f82585d590 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55f82585d5e0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f82585d570 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55f82585d550 <col:22> 'int' 14
|-CXXMethodDecl 0x55f82585d7f8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55f82585d610 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55f82585d690 <col:38> col:41 'int'
| `-ParmVarDecl 0x55f82585d710 <col:43> col:46 'int'
|-FriendDecl 0x55f82585d900 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55f82585d990 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825bc7200 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55f825bc73d8 prev 0x55f825bc7200 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f825bc7468 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f825bc7490 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825bc8df0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55f825bc8da0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55f825bc8d80 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55f825bc76a8 'type'
|     `-SubstTemplateTypeParmType 0x55f825bc7670 'String' sugar
|       |-TemplateTypeParmType 0x55f82581f840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82581f7f0 'T'
|       `-RecordType 0x55f82584f480 'String'
|         `-CXXRecord 0x55f82584f3f0 'String'
|-TypedefDecl 0x55f825bc8ea8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55f825bc8e70 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55f825bc8e50 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55f825bc8df0 'type'
|     `-ElaboratedType 0x55f825bc8da0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55f825bc8d80 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55f825bc76a8 'type'
|         `-SubstTemplateTypeParmType 0x55f825bc7670 'String' sugar
|           |-TemplateTypeParmType 0x55f82581f840 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f82581f7f0 'T'
|           `-RecordType 0x55f82584f480 'String'
|             `-CXXRecord 0x55f82584f3f0 'String'
|-CXXMethodDecl 0x55f825bc9028 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55f825bc8f38 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55f825bc9118 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f825bc91f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55f825bc91f8
|-CXXMethodDecl 0x55f825bc94c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55f825bc93d0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55f825bc9708 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f825bc9580 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f825bc95f8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f825bc98d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f825bc97c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f825bc9840 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f825bc9a38 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55f825bc9b08 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55f825bc9d58 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f825bc9bc8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55f825bc9c40 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f825bc9fb8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55f825bc9e28 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55f825bc9ea0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f825bca178 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55f825bca088 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f825bca338 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55f825bca240 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f825bca3f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f825bca4a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f825bca6d8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55f825bca550 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f825bca5c8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55f825bca978 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55f825bca880 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55f825bcaa40 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55f825bcaa90 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f825bcaae0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825a89da0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55f825bc5ea8 prev 0x55f825a89da0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f825bc7170 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55f825bc7120 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55f825bc7100 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55f825bc6fb0 'type'
|     `-SubstTemplateTypeParmType 0x55f825bc6e40 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55f8257f8810 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55f8257f87b8 'F'
|       `-RecordType 0x55f825bc6aa0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55f825bc69c0 'typed_array_memory'
|-FieldDecl 0x55f825bcab30 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55f825bcab80 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f825bcabb8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55f825bc5f40 'String' sugar
|   |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f82582efb8 'T'
|   `-RecordType 0x55f82584f480 'String'
|     `-CXXRecord 0x55f82584f3f0 'String'
|-TypedefDecl 0x55f825bcac48 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55f825bcac10 'String &'
|   `-SubstTemplateTypeParmType 0x55f825bc5f40 'String' sugar
|     |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f82582efb8 'T'
|     `-RecordType 0x55f82584f480 'String'
|       `-CXXRecord 0x55f82584f3f0 'String'
|-TypedefDecl 0x55f825bcacd8 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55f825bcaca0 'const String &'
|   `-QualType 0x55f825bc5f41 'const String' const
|     `-SubstTemplateTypeParmType 0x55f825bc5f40 'String' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-RecordType 0x55f82584f480 'String'
|         `-CXXRecord 0x55f82584f3f0 'String'
|-TypedefDecl 0x55f825bcad68 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55f825bcad30 'String *'
|   `-SubstTemplateTypeParmType 0x55f825bc5f40 'String' sugar
|     |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f82582efb8 'T'
|     `-RecordType 0x55f82584f480 'String'
|       `-CXXRecord 0x55f82584f3f0 'String'
|-TypedefDecl 0x55f825bcadf8 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55f825bcadc0 'const String *'
|   `-QualType 0x55f825bc5f41 'const String' const
|     `-SubstTemplateTypeParmType 0x55f825bc5f40 'String' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-RecordType 0x55f82584f480 'String'
|         `-CXXRecord 0x55f82584f3f0 'String'
|-TypedefDecl 0x55f825bcba50 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55f825bcba00 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55f825bcb9e0 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55f825bcb918 'type'
|     `-LValueReferenceType 0x55f825bcb8e0 'const String &'
|       `-QualType 0x55f825bcb681 'const String' const
|         `-SubstTemplateTypeParmType 0x55f825bcb680 'String' sugar
|           |-TemplateTypeParmType 0x55f825800920 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f8258008c8 'T'
|           `-RecordType 0x55f82584f480 'String'
|             `-CXXRecord 0x55f82584f3f0 'String'
|-TypedefDecl 0x55f825bcbab8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55f825bcaca0 'const String &'
|   `-QualType 0x55f825bc5f41 'const String' const
|     `-SubstTemplateTypeParmType 0x55f825bc5f40 'String' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-RecordType 0x55f82584f480 'String'
|         `-CXXRecord 0x55f82584f3f0 'String'
|-TypedefDecl 0x55f825bcbb10 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825bcbb78 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55f825bcad30 'String *'
|   `-SubstTemplateTypeParmType 0x55f825bc5f40 'String' sugar
|     |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f82582efb8 'T'
|     `-RecordType 0x55f82584f480 'String'
|       `-CXXRecord 0x55f82584f3f0 'String'
|-TypedefDecl 0x55f825bcbbe0 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55f825bcadc0 'const String *'
|   `-QualType 0x55f825bc5f41 'const String' const
|     `-SubstTemplateTypeParmType 0x55f825bc5f40 'String' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-RecordType 0x55f82584f480 'String'
|         `-CXXRecord 0x55f82584f3f0 'String'
|-EnumDecl 0x55f825bcbc38 <line:134:5> col:5
| `-EnumConstantDecl 0x55f825bcbd30 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f825bcbd10 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f8258301d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f8258301b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f825830190 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f825bcbdb8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f825bcc048 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825bcbe70 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f825bcbf10 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55f825bcc2d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55f825bcc1c0 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55f825bcc598 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55f825bcc480 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55f825bcc8b0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55f825bcc790 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55f825bccbc0 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55f825bccaa0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55f825bcceb0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825bcccf8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f825bccd70 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f825bccfd8 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55f825bcd0a0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825bcd0f8 <col:30> Inherited
|-CXXMethodDecl 0x55f825bcd140 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55f825bcd1f0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825bcd248 <col:30> Inherited
|-CXXMethodDecl 0x55f825bcd308 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f825bcd3b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825bcd410 <col:30> Inherited
|-CXXMethodDecl 0x55f825bcd458 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f825bcd508 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825bcd560 <col:30> Inherited
|-CXXMethodDecl 0x55f825bcd5a8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f825bcd658 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825bcd6b0 <col:30> Inherited
|-CXXMethodDecl 0x55f825bcd6f8 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55f825bcd7a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825bcd800 <col:30> Inherited
|-CXXMethodDecl 0x55f825bcd828 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f825bcd8d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f825bcd988 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f825bcdb48 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825bcda38 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f825bcdab0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f825bcdc98 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f825bcdc08 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825bcde48 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55f825bcdd50 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f825bcdf00 <col:20>
| `-OptimizeNoneAttr 0x55f825bcdf58 <col:30>
|-CXXMethodDecl 0x55f825bce078 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55f825bcdf80 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f825bce130 <col:20>
| `-OptimizeNoneAttr 0x55f825bce188 <col:30>
|-CXXMethodDecl 0x55f825bce240 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f825bce1b0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825bce388 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f825bce2f8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825bce4b8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55f825bce5b8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55f825bce688 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55f825bce758 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55f825bce898 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f825bce808 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825bce9e0 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f825bce950 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825bceb28 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f825bcea98 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f825bcebe0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f825bcece0 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f825bcec50 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f825bced98 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f825bcee58 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55f825bcef58 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55f825bcf0d8 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55f825bcf018 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55f825bcf868 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f825bcf190 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55f825bcf7c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55f825bcf6c8 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55f825bcf948 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f825bcfa98 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55f825bcfa08 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f825bcfb50 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f825bcfd98 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825bcfc10 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55f825bcfc88 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55f825bcff28 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55f825bcfe68 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55f825bd0138 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55f825bcfff0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55f825bd0068 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55f825bd01f8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55f825bd0458 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55f825bd0360 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55f825bd0528 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55f825bd0528

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825c69458 prev 0x55f825bf1708 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f825c69550 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55f825c695e0 <col:22, col:28> col:22 public
|-EnumDecl 0x55f825c69680 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55f825c69798 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f825c69778 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55f825c69760 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f825c69740 <col:14> 'int' 999
| |-EnumConstantDecl 0x55f825c69840 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f825c69820 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55f825c69808 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55f825c697e8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55f825c698d0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f825c698b0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55f825c69890 <col:17> 'int' 0
| |-EnumConstantDecl 0x55f825c69960 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f825c69940 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55f825c69920 <col:13> 'int' 1
| |-EnumConstantDecl 0x55f825c699f0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f825c699d0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55f825c699b0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55f825c69a80 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f825c69a60 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55f825c69a40 <col:13> 'int' 3
| |-EnumConstantDecl 0x55f825c69b10 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f825c69af0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55f825c69ad0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55f825c69ba0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f825c69b80 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55f825c69b60 <col:14> 'int' 5
| |-EnumConstantDecl 0x55f825c69c30 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55f825c69c10 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55f825c69bf0 <col:12> 'int' 6
| `-EnumConstantDecl 0x55f825c69cc0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55f825c69ca0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55f825c69c80 <col:13> 'int' 7
|-VarDecl 0x55f825c69d30 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55f825c69db8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55f825c69e40 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55f825c69ec8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55f825c69f50 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55f825c69fd8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55f825c6a060 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55f825c6a0e8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55f825c6a170 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55f825c6a1f8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55f825c6a280 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55f825c6a380 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55f825c6f668 '_nerrors' 'int'
| | `-IntegerLiteral 0x55f825c6fdf8 <line:128:13> 'int' 0
| `-CompoundStmt 0x55f825c6fe68 <col:16, line:129:5>
|-CXXDestructorDecl 0x55f825c6a470 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55f825c6fe78 <col:29, line:132:5>
|-CXXMethodDecl 0x55f825c6a628 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55f825c6a560 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f825c6a6f0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55f825c6a7d8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55f825c6fed0 <col:44, line:161:5>
|   `-ReturnStmt 0x55f825c6fec0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55f825c6fea8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55f825c6fe88 <col:9> 'ErrorHandler *' lvalue Var 0x55f825c6f6c8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55f825c6a918 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55f825c6a888 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f825c6a9e0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55f825c6ff30 <col:43, line:173:5>
|   `-ReturnStmt 0x55f825c6ff20 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55f825c6ff08 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55f825c6fee8 <col:9> 'ErrorHandler *' lvalue Var 0x55f825c6f740 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55f825c6aa98 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55f825c6ab18 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55f825c6ac28 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55f825c6ab98 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55f825c6ad78 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55f825c6ace8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55f825c6aed0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55f825c6ae38 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55f825c6b028 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55f825c6af90 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55f825c6b180 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55f825c6b0e8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55f825c6b390 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f825c6b238 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55f825c6b2b8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55f825c6b568 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f825c6b450 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55f825c6b4d0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55f825c6b788 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f825c6b628 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55f825c6b6a8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55f825c6b968 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f825c6b848 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55f825c6b8c8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55f825c6bb48 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55f825c6ba28 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55f825c6baa8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55f825c6bcd0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55f825c6bc08 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55f825c6bea0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55f825c6bd88 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55f825c6be00 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55f825c70188 <col:57, line:234:5>
|   `-ReturnStmt 0x55f825c70178 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55f825c70160 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55f825c70108 <col:9, col:41> 'int'
|         |-MemberExpr 0x55f825c700d8 <col:9> '<bound member function type>' ->xmessage 0x55f825c6bcd0
|         | `-CXXThisExpr 0x55f825c700c8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55f825c70148 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55f825c70130 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55f825c700a8 <col:18, col:40> 'String' (CXXTemporary 0x55f825c700a8)
|               `-CallExpr 0x55f825c70070 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55f825c70058 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55f825c6ffd0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55f825c6de98 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55f825c6fff0 <col:31> 'const String' lvalue ParmVar 0x55f825c6be00 'str' 'const String &'
|                 `-DeclRefExpr 0x55f825c70010 <col:36> 'const String' lvalue ParmVar 0x55f825c6bd88 'anno' 'const String &'
|-CXXMethodDecl 0x55f825c6c180 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55f825c6bf60 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55f825c6bfe0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55f825c6c058 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55f825c70418 <col:68, line:243:5>
|   `-ReturnStmt 0x55f825c70408 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55f825c703f0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55f825c70390 <col:9, col:41> 'int'
|         |-MemberExpr 0x55f825c70360 <col:9> '<bound member function type>' ->xmessage 0x55f825c6bea0
|         | `-CXXThisExpr 0x55f825c70350 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55f825c70228 <col:18> 'const String' lvalue ParmVar 0x55f825c6bf60 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55f825c703d8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55f825c703c0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55f825c70330 <col:24, col:40> 'String' (CXXTemporary 0x55f825c70330)
|               `-CXXMemberCallExpr 0x55f825c702c8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55f825c70258 <col:24> '<bound member function type>' ->vformat 0x55f825c6d360
|                 | `-CXXThisExpr 0x55f825c70248 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55f825c702f8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55f825c70288 <col:32> 'const char *' lvalue ParmVar 0x55f825c6bfe0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55f825c70310 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55f825c702a8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55f825c6c058 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f825c6c420 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55f825c6c248 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55f825c6c2c0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55f825c6c338 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55f825c70758 <col:23, line:254:5>
|   `-ReturnStmt 0x55f825c70748 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55f825c70730 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55f825c706d0 <col:9, col:71> 'int'
|         |-MemberExpr 0x55f825c706a0 <col:9> '<bound member function type>' ->xmessage 0x55f825c6bea0
|         | `-CXXThisExpr 0x55f825c70690 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55f825c70718 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55f825c70700 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55f825c70650 <col:18, col:65> 'String' (CXXTemporary 0x55f825c70650)
|         |     `-CallExpr 0x55f825c705e8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55f825c705d0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55f825c704b8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55f825c6de98 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55f825c704d8 <col:31> 'const String' lvalue ParmVar 0x55f825c6c2c0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55f825c70630 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55f825c70618 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55f825c705b0 <col:37, col:64> 'String' (CXXTemporary 0x55f825c705b0)
|         |             `-CallExpr 0x55f825c70580 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55f825c70568 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55f825c704f8 <col:37> 'String (const String &)' lvalue CXXMethod 0x55f825c6e4e8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55f825c70518 <col:56> 'const String' lvalue ParmVar 0x55f825c6c248 'landmark' 'const String &'
|         `-DeclRefExpr 0x55f825c70670 <col:68> 'const String' lvalue ParmVar 0x55f825c6c338 'str' 'const String &'
|-CXXMethodDecl 0x55f825c6c7a0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55f825c6c4e8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55f825c6c560 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55f825c6c5e0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55f825c6c658 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55f825c70a10 <col:34, line:267:5>
|   `-ReturnStmt 0x55f825c70a00 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55f825c709e8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55f825c70980 <col:9, col:51> 'int'
|         |-MemberExpr 0x55f825c70950 <col:9> '<bound member function type>' ->xmessage 0x55f825c6c420
|         | `-CXXThisExpr 0x55f825c70940 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55f825c707f8 <col:18> 'const String' lvalue ParmVar 0x55f825c6c4e8 'landmark' 'const String &'
|         |-DeclRefExpr 0x55f825c70818 <col:28> 'const String' lvalue ParmVar 0x55f825c6c560 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55f825c709d0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55f825c709b8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55f825c70920 <col:34, col:50> 'String' (CXXTemporary 0x55f825c70920)
|               `-CXXMemberCallExpr 0x55f825c708b8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55f825c70848 <col:34> '<bound member function type>' ->vformat 0x55f825c6d360
|                 | `-CXXThisExpr 0x55f825c70838 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55f825c708e8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55f825c70878 <col:42> 'const char *' lvalue ParmVar 0x55f825c6c5e0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55f825c70900 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55f825c70898 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55f825c6c658 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f825c6c8b0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55f825c70a90 <col:25, line:288:5>
|   `-ReturnStmt 0x55f825c70a80 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55f825c70a68 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55f825c70a38 <col:9> 'const int' lvalue ->_nerrors 0x55f825c6f668
|         `-CXXThisExpr 0x55f825c70a28 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55f825c6cac0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55f825c6c968 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55f825c6c9e8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55f825c6cda8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55f825c6cb88 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55f825c6cc08 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55f825c6cc80 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f825c6cf40 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55f825c6ce78 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55f825c6d188 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55f825c6d000 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55f825c6d078 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55f825c70cf0 <col:58, line:357:5>
|   `-ReturnStmt 0x55f825c70ce0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55f825c70cc8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55f825c70c98 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55f825c70c80 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55f825c70c60 <col:9, col:29> 'String' (CXXTemporary 0x55f825c70c60)
|             `-CallExpr 0x55f825c70bf0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55f825c70bd8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55f825c70b58 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55f825c6cda8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55f825c70af8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55f825c70c28 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55f825c70b18 <col:21> 'const char *' lvalue ParmVar 0x55f825c6d000 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55f825c70c40 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55f825c70b38 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55f825c6d078 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f825c6d360 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55f825c6d250 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55f825c6d2c8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55f825c6d4b8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55f825c6d428 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55f825c6d600 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55f825c6d570 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55f825c6d8a0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55f825c6d6b8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55f825c6d738 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55f825c6d7b0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55f825c6da00 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55f825c6d970 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55f825c70e08 <col:37, line:441:5>
|   `-IfStmt 0x55f825c70df0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55f825c70d78 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55f825c70d48 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55f825c70d08 <col:6> 'int' lvalue ParmVar 0x55f825c6d970 'level' 'int'
|     | `-ImplicitCastExpr 0x55f825c70d60 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55f825c70d28 <col:15> 'ErrorHandler::Level' EnumConstant 0x55f825c69a80 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55f825c70dd8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55f825c70da8 <col:8> 'int' lvalue ->_nerrors 0x55f825c6f668
|         `-CXXThisExpr 0x55f825c70d98 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55f825c6dac8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55f825c70ea0 <col:26, line:448:5>
|   `-BinaryOperator 0x55f825c70e80 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55f825c70e30 <col:2> 'int' lvalue ->_nerrors 0x55f825c6f668
|     | `-CXXThisExpr 0x55f825c70e20 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55f825c70e60 <col:13> 'int' 0
|-CXXMethodDecl 0x55f825c6dc90 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55f825c6db80 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55f825c6dbf8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55f825c6de98 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55f825c6dd50 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55f825c6ddc8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55f825c6e148 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55f825c6df58 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55f825c6dfd8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55f825c6e058 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55f825c6e200 <col:59> 0 0
|-CXXMethodDecl 0x55f825c6e398 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55f825c6e278 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55f825c6e2f8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55f825c71510 <col:70, line:534:5>
|   |-DeclStmt 0x55f825c71010 <line:528:2, col:20>
|   | |-VarDecl 0x55f825c70ec8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55f825c70f30 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55f825c70f68 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55f825c70fd0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55f825c710e0 <line:529:2, col:23>
|   | `-VarDecl 0x55f825c71040 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55f825c710c8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55f825c710a8 <col:18> 'const char *' lvalue ParmVar 0x55f825c6e278 'begin' 'const char *'
|   |-DoStmt 0x55f825c714a8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55f825c713d8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55f825c713c0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55f825c713a0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55f825c710f8 <col:6> 'const char *' lvalue Var 0x55f825c71040 'x' 'const char *'
|   | |     `-CallExpr 0x55f825c712f0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55f825c712d8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55f825c71290 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55f825c6fb40 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55f825c71358 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55f825c71340 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55f825c711b0 <col:20, col:27> 'String' (CXXTemporary 0x55f825c711b0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55f825c71178 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55f825c71370 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55f825c711d0 <col:30> 'const char *' lvalue Var 0x55f825c71040 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55f825c71388 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55f825c711f0 <col:33> 'const char *' lvalue ParmVar 0x55f825c6e2f8 'end' 'const char *'
|   | |       |-UnaryOperator 0x55f825c71230 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55f825c71210 <col:39> 'String' lvalue Var 0x55f825c70ec8 'name' 'String'
|   | |       |-UnaryOperator 0x55f825c71268 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55f825c71248 <col:46> 'String' lvalue Var 0x55f825c70f68 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55f825c71280 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55f825c71490 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55f825c71478 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55f825c71458 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55f825c71428 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55f825852c08
|   |         `-ImplicitCastExpr 0x55f825c71410 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55f825c713f0 <col:11> 'String' lvalue Var 0x55f825c70ec8 'name' 'String'
|   `-ReturnStmt 0x55f825c71500 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55f825c714e8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55f825c714c8 <col:9> 'const char *' lvalue Var 0x55f825c71040 'x' 'const char *'
|-CXXMethodDecl 0x55f825c6e4e8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55f825c6e458 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55f825c71b28 <col:55, line:550:5>
|   `-IfStmt 0x55f825c71b00 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55f825c71760 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55f825c71748 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55f825c71730 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55f825c71710 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55f825c716e0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55f825852c08
|     | |       `-DeclRefExpr 0x55f825c71570 <col:6> 'const String' lvalue ParmVar 0x55f825c6e458 'x' 'const String &'
|     | `-BinaryOperator 0x55f825c716c0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55f825c71690 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55f825c71630 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55f825c71618 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55f825c715d0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55f82586a410 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55f825c71590 <col:11> 'const String' lvalue ParmVar 0x55f825c6e458 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55f825c715b0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55f825c716a8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55f825c71668 <col:19> 'char' 123
|     |-ReturnStmt 0x55f825c717d0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55f825c717a0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55f825c71780 <col:13> 'const String' lvalue ParmVar 0x55f825c6e458 'x' 'const String &'
|     `-IfStmt 0x55f825c71ad8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55f825c71868 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55f825c71850 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55f825c71830 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55f825c71800 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55f825852c08
|       |       `-DeclRefExpr 0x55f825c717e0 <col:11> 'const String' lvalue ParmVar 0x55f825c6e458 'x' 'const String &'
|       |-ReturnStmt 0x55f825c719f0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55f825c719d8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55f825c719a8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55f825c71990 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55f825c71970 <col:13, col:29> 'String' (CXXTemporary 0x55f825c71970)
|       |         `-CallExpr 0x55f825c71920 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55f825c71908 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55f825c71880 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55f825c6dc90 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55f825c71950 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55f825c718a0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55f825c718c0 <col:28> 'const String' lvalue ParmVar 0x55f825c6e458 'x' 'const String &'
|       `-ReturnStmt 0x55f825c71ac8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55f825c71ab0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55f825c71a80 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55f825c71a68 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55f825c71a48 <col:13, col:20> 'String' (CXXTemporary 0x55f825c71a48)
|                 `-CXXTemporaryObjectExpr 0x55f825c71a10 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55f825c6e6b0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55f825c6e5a0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55f825c6e618 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55f825c6fde8 <col:71> 'bool' false
|-CXXRecordDecl 0x55f825c6e760 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55f825c6ea58 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55f825c6e9f0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55f825c6e990 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55f825c6e950 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55f82584f480 'String'
|       | `-CXXRecord 0x55f82584f3f0 'String'
|       |-BuiltinType 0x55f825516370 'int'
|       `-DecayedType 0x55f825bf2750 '__va_list_tag *' sugar
|         |-TypedefType 0x55f825bf2720 'va_list' sugar
|         | |-Typedef 0x55f825739030 'va_list'
|         | `-TypedefType 0x55f825738fe0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55f825670be8 '__gnuc_va_list'
|         |   `-TypedefType 0x55f825670b50 '__builtin_va_list' sugar
|         |     |-Typedef 0x55f825557bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55f825557b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55f8255170c0 '__va_list_tag'
|         |         `-CXXRecord 0x55f825517028 '__va_list_tag'
|         `-PointerType 0x55f82573f130 '__va_list_tag *'
|           `-RecordType 0x55f8255170c0 '__va_list_tag'
|             `-CXXRecord 0x55f825517028 '__va_list_tag'
|-EnumDecl 0x55f825c6eab0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55f825c6ebb0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f825c6f110 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825c6eb90 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55f825c6eb70 <col:16> 'int' 1
| |-EnumConstantDecl 0x55f825c6ec40 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f825c6f128 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825c6ec20 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55f825c6ec00 <col:21> 'int' 2
| |-EnumConstantDecl 0x55f825c6ecd0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f825c6f140 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825c6ecb0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55f825c6ec90 <col:22> 'int' 4
| |-EnumConstantDecl 0x55f825c6ed60 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f825c6f158 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825c6ed40 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55f825c6ed20 <col:17> 'int' 8
| |-EnumConstantDecl 0x55f825c6edf0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f825c6f170 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825c6edd0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55f825c6edb0 <col:22> 'int' 16
| |-EnumConstantDecl 0x55f825c6ee80 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f825c6f188 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825c6ee60 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55f825c6ee40 <col:19> 'int' 32
| |-EnumConstantDecl 0x55f825c6ef10 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f825c6f1a0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825c6eef0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55f825c6eed0 <col:17> 'int' 64
| |-EnumConstantDecl 0x55f825c6efa0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f825c6f1b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825c6ef80 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55f825c6ef60 <col:14> 'int' 128
| |-EnumConstantDecl 0x55f825c6f030 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55f825c6f1d0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825c6f010 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55f825c6eff0 <col:16> 'int' 256
| `-EnumConstantDecl 0x55f825c6f0c0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55f825c6f1e8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825c6f0a0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55f825c6f080 <col:12> 'int' 1024
|-CXXMethodDecl 0x55f825c6f3f8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55f825c6f210 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55f825c6f2b0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55f825c6f580 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55f825c6f4b8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55f825c6f628 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55f825c6f668 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55f825c6f6c8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55f825c6f740 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55f825c6fb40 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55f825c6f7b8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55f825c6f838 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55f825c6f8b8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55f825c6f930 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55f825c6f9a8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55f825c6fa20 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55f825c6fc68 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55f825c6fc68
| `-ParmVarDecl 0x55f825c6fd78 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55f825c71e88 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55f825c71e88
  `-ParmVarDecl 0x55f825c71f98 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825bf1798 prev 0x55f825a46008 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825bf1890 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55f825bf1920 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55f825bf1a58 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55f825bf1958 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55f825bf2e80 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55f825bf2e60 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55f825bf29f8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55f825bf2f10 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55f825bf2ed0 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55f825bf1958 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55f825bf2a60 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55f825bf2f90 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55f825bf2f50 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55f825bf2ac0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55f825bf2fd0 <col:54> 'bool' false
| `-CompoundStmt 0x55f825bf30d8 <col:61, line:38:5>
|   `-BinaryOperator 0x55f825bf30b8 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55f825bf3050 <col:9> 'const Element *' lvalue ->_context 0x55f825bf2998
|     | `-CXXThisExpr 0x55f825bf3040 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55f825bf30a0 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55f825bf3080 <col:20> 'int' 0
|-CXXConstructorDecl 0x55f825bf1c68 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55f825bf1b18 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55f825bf1b90 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55f825bf2eb8 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55f825bf2e98 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55f825bf2998 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55f825bf3130 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55f825bf30f0 <col:20> 'const Element *' lvalue ParmVar 0x55f825bf1b18 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55f825bf29f8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55f825bf31b0 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55f825bf3170 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55f825bf1b90 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55f825bf2a60 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55f825bf3230 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55f825bf31f0 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55f825bf2ac0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55f825bf3270 <col:73> 'bool' false
| `-CompoundStmt 0x55f825bf32e8 <col:80, line:46:5>
|-CXXMethodDecl 0x55f825bf1d98 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55f825bf3360 <col:36, line:51:5>
|   `-ReturnStmt 0x55f825bf3350 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55f825bf3338 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55f825bf3308 <col:16> 'const Element *const' lvalue ->_context 0x55f825bf2998
|         `-CXXThisExpr 0x55f825bf32f8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55f825bf1e88 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55f825bf33e0 <col:32, line:57:5>
|   `-ReturnStmt 0x55f825bf33d0 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55f825bf33b8 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55f825bf3388 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55f825bf29f8
|         `-CXXThisExpr 0x55f825bf3378 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55f825bf1f48 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55f825bf20d0 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55f825bf2000 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55f825bf2220 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55f825bf2190 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55f825bf2370 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55f825bf22e0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55f825bf2578 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55f825bf2428 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55f825bf24a0 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55f825bf28a8 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55f825bf2638 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55f825bf26b8 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55f825bf2780 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55f825bf2960 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55f825bf2998 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55f825bf29f8 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55f825bf2a60 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55f825bf2ac0 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55f825bf2b10 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55f825bf2b10
| `-ParmVarDecl 0x55f825bf2c28 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x55f825bf2cc8 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55f825bf2cc8
| `-ParmVarDecl 0x55f825bf2dd8 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x55f825cfb450 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825c0b5e0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55f825c0b7b8 prev 0x55f825c0b5e0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55f825c0b848 <col:46, col:52> col:46 public
|-TypedefDecl 0x55f825c0b870 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825c0d440 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55f825c0d3f0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55f825c0bd20 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55f825c0bc20 'type'
|     `-TemplateSpecializationType 0x55f825c0bbb0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55f825c0ba90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55f825c0ba70 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55f825c0ba50 <col:24> 'unsigned long' 4
|       `-RecordType 0x55f825c0bb90 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55f825c0bab0 'char_array'
|-TypedefDecl 0x55f825c0d4f8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55f825c0d4c0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55f825c0d4a0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55f825c0d440 'type'
|     `-ElaboratedType 0x55f825c0d3f0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55f825c0bd20 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55f825c0bc20 'type'
|         `-TemplateSpecializationType 0x55f825c0bbb0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55f825c0ba90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55f825c0ba70 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55f825c0ba50 <col:24> 'unsigned long' 4
|           `-RecordType 0x55f825c0bb90 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55f825c0bab0 'char_array'
|-CXXMethodDecl 0x55f825c0d678 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55f825c0d588 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55f825c0d768 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55f825c0d848 <line:23:5, col:20> col:5 ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55f825c0db18 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55f825c0da20 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55f825c0dd58 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55f825c0dbd0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f825c0dc48 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f825c0df28 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55f825c0de18 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f825c0de90 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f825c0e088 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55f825c0e158 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55f825c0e3a8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55f825c0e218 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55f825c0e290 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f825c0e608 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55f825c0e478 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55f825c0e4f0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f825c0e7c8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55f825c0e6d8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f825c0e988 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55f825c0e890 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f825c0ea40 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f825c0eaf0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55f825c0ed28 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55f825c0eba0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55f825c0ec18 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55f825c0efc8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55f825c0eed0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55f825c0f090 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55f825c0f0e0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55f825c0f130 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %struct.char_array.8*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %struct.char_array.8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825bfd2e8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55f825bfd4f8 prev 0x55f825bfd2e8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55f825c0b550 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55f825c0b500 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55f825c0b4e0 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55f825c0b390 'type'
|     `-SubstTemplateTypeParmType 0x55f825c0b1b0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55f8257f7e10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f8257f7db8 'T'
|       `-RecordType 0x55f825c0ad00 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55f825c0ac18 'sized_array_memory'
|-FieldDecl 0x55f825c0f180 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55f825c0f1d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55f825c0f208 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55f825c0a4a0 'int' sugar
|   |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55f82582efb8 'T'
|   `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825c0f298 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55f825c0f260 'int &'
|   `-SubstTemplateTypeParmType 0x55f825c0a4a0 'int' sugar
|     |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f82582efb8 'T'
|     `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825c0f328 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55f825c0f2f0 'const int &'
|   `-QualType 0x55f825c0a4a1 'const int' const
|     `-SubstTemplateTypeParmType 0x55f825c0a4a0 'int' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825c0f3b8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55f825c0f380 'int *'
|   `-SubstTemplateTypeParmType 0x55f825c0a4a0 'int' sugar
|     |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f82582efb8 'T'
|     `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825c0f448 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55f825c0f410 'const int *'
|   `-QualType 0x55f825c0a4a1 'const int' const
|     `-SubstTemplateTypeParmType 0x55f825c0a4a0 'int' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825c10030 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55f825c0ffe0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55f825c0ffc0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55f825c0ff50 'type'
|     `-SubstTemplateTypeParmType 0x55f825c0fd10 'int' sugar
|       |-TemplateTypeParmType 0x55f825801050 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f825801000 'T'
|       `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825c10098 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55f825c0f2f0 'const int &'
|   `-QualType 0x55f825c0a4a1 'const int' const
|     `-SubstTemplateTypeParmType 0x55f825c0a4a0 'int' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825c100f0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825c10158 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55f825c0f380 'int *'
|   `-SubstTemplateTypeParmType 0x55f825c0a4a0 'int' sugar
|     |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55f82582efb8 'T'
|     `-BuiltinType 0x55f825516370 'int'
|-TypedefDecl 0x55f825c101c0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55f825c0f410 'const int *'
|   `-QualType 0x55f825c0a4a1 'const int' const
|     `-SubstTemplateTypeParmType 0x55f825c0a4a0 'int' sugar
|       |-TemplateTypeParmType 0x55f82582f010 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55f82582efb8 'T'
|       `-BuiltinType 0x55f825516370 'int'
|-EnumDecl 0x55f825c10218 <line:134:5> col:5
| `-EnumConstantDecl 0x55f825c10310 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55f825c102f0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55f8258301d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55f8258301b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55f825830190 <col:40> 'int' 1
|-CXXConstructorDecl 0x55f825c10398 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55f825c105e8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825c10450 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f825c104f0 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55f825c108a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55f825c10790 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55f825c10b68 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55f825c10a50 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55f825c10eb0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55f825c10d90 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55f825c111c0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55f825c110a0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55f825c114b0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825c112f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f825c11370 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55f825c115d8 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55f825c116b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825c11710 <col:30> Inherited
|-CXXMethodDecl 0x55f825c11758 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55f825c11808 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825c11860 <col:30> Inherited
|-CXXMethodDecl 0x55f825c11928 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55f825c119d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825c11a30 <col:30> Inherited
|-CXXMethodDecl 0x55f825c11a78 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55f825c11b28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825c11b80 <col:30> Inherited
|-CXXMethodDecl 0x55f825c11bc8 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55f825c11c78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825c11cd0 <col:30> Inherited
|-CXXMethodDecl 0x55f825c11d18 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55f825c11dc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55f825c11e20 <col:30> Inherited
|-CXXMethodDecl 0x55f825c11e48 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f825c11ef8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55f825c11fa8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55f825c12168 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825c12058 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55f825c120d0 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55f825c122b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55f825c12228 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825c13a40 <line:163:5, col:65> col:43 operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55f825c12370 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f825c13af8 <col:20>
| `-OptimizeNoneAttr 0x55f825c13b50 <col:30>
|-CXXMethodDecl 0x55f825c13c68 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55f825c13b78 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55f825c13d20 <col:20>
| `-OptimizeNoneAttr 0x55f825c13d78 <col:30>
|-CXXMethodDecl 0x55f825c13e30 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f825c13da0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825c13f78 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f825c13ee8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825c140a8 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55f825c141d8 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55f825c142a8 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55f825c14378 <line:170:5, col:28> col:21 back 'const int &() const' inline
|-CXXMethodDecl 0x55f825c144b8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55f825c14428 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825c14600 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55f825c14570 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55f825c14748 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55f825c146b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f825c14800 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55f825c14900 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55f825c14870 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55f825c149b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55f825c14a78 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55f825c14b78 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55f825c14cf8 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55f825c14c38 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55f825c154b8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55f825c14db0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55f825c15418 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55f825c15318 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55f825c15598 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55f825c156e8 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55f825c15658 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55f825c157a0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55f825c159e8 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55f825c15860 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55f825c158d8 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55f825c15ba8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55f825c15ab8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55f825c15df8 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55f825c15c70 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55f825c15ce8 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55f825c15eb8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55f825c16118 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55f825c16020 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55f825c161e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825bfb458 prev 0x55f825bd9c98 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55f825bfb550 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x55f825bfb640 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x55f825c29f20 <col:16, line:828:9>
|-CXXDestructorDecl 0x55f825bfb730 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x55f825c29f30 <col:25, line:830:9>
|-CXXMethodDecl 0x55f825bfb830 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x55f825bfb8e0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x55f825bfb988 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55f825bfb988
| `-ParmVarDecl 0x55f825bfba98 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x55f825bfc258 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55f825bfc258
  `-ParmVarDecl 0x55f825bfc368 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825bd9aa8 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x55f825bd9c08 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x55f825bd9c98 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x55f825bd9d50 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x55f825bd9e58 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x55f825bd9d88 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f825c177a8 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f825c17788 <col:31> 'int' 0
|-CXXConstructorDecl 0x55f825bda178 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x55f825bd9ff0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x55f825bda068 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f825c177e0 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f825c177c0 <col:59> 'int' 0
|-CXXConstructorDecl 0x55f825bda350 <line:265:5, col:56> col:5 used Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55f825bda240 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x55f825bda2b8 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f825c17818 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f825c177f8 <col:55> 'int' 0
|-CXXConstructorDecl 0x55f825bda708 <line:271:5, line:272:32> line:271:5 Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55f825bda4f0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x55f825bda568 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x55f825bda5e0 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55f825c17850 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55f825c17830 <col:31> 'int' 0
|-CXXConstructorDecl 0x55f825bda8c8 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x55f825bda808 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x55f825bda9c0 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x55f825bdaba8 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x55f825bdaab0 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x55f825bdac98 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x55f825c17c00 <col:24, line:291:5>
|   `-ReturnStmt 0x55f825c17bf0 <line:290:9, col:79>
|     `-BinaryOperator 0x55f825c17bd0 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x55f825c17aa8 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x55f825c17a00 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x55f825c179e0 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x55f825c178d8 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x55f825c178c0 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x55f825c178a8 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x55f825c17878 <col:18> 'Vector<String> *const' lvalue ->_conf 0x55f825bfd280
|       | |   |       `-CXXThisExpr 0x55f825c17868 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x55f825c179c8 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x55f825c179b0 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x55f825c17978 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x55f825c17948 <col:28, col:35> '<bound member function type>' ->size 0x55f825bcd828
|       | |           `-ImplicitCastExpr 0x55f825c17998 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x55f825c17930 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x55f825c17900 <col:28> 'Vector<String> *const' lvalue ->_conf 0x55f825bfd280
|       | |                 `-CXXThisExpr 0x55f825c178f0 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x55f825c17a90 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x55f825c17a78 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x55f825c17a60 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x55f825c17a30 <col:47> 'Args::Slot *const' lvalue ->_slots 0x55f825c16330
|       |         `-CXXThisExpr 0x55f825c17a20 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x55f825c17bb0 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x55f825c17b98 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55f825c17b80 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55f825c17b40 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55f825c17b28 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55f825c17ad8 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55f825c163e0
|         |     |   `-CXXThisExpr 0x55f825c17ac8 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55f825c17b08 <col:73> 'int' 0
|         `-IntegerLiteral 0x55f825c17b60 <col:79> 'int' 0
|-CXXMethodDecl 0x55f825bdad58 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x55f825c17dd8 <col:32, line:296:5>
|   `-ReturnStmt 0x55f825c17dc8 <line:295:9, col:49>
|     `-BinaryOperator 0x55f825c17da8 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x55f825c17c88 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x55f825c17c70 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55f825c17c58 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x55f825c17c28 <col:17> 'Args::Slot *const' lvalue ->_slots 0x55f825c16330
|       |       `-CXXThisExpr 0x55f825c17c18 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x55f825c17d88 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x55f825c17d70 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55f825c17d58 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55f825c17d18 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55f825c17d00 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55f825c17cb0 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55f825c163e0
|         |     |   `-CXXThisExpr 0x55f825c17ca0 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55f825c17ce0 <col:43> 'int' 0
|         `-IntegerLiteral 0x55f825c17d38 <col:49> 'int' 0
|-CXXMethodDecl 0x55f825bdae48 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x55f825c17fe8 <col:19, line:306:5>
|   |-IfStmt 0x55f825c17f08 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x55f825c17e48 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x55f825c17e30 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x55f825c17e00 <col:13> 'Vector<String> *' lvalue ->_conf 0x55f825bfd280
|   | |     `-CXXThisExpr 0x55f825c17df0 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x55f825c17ee8 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x55f825c17eb8 <col:13, col:20> '<bound member function type>' ->clear 0x55f825bd01f8
|   |     `-ImplicitCastExpr 0x55f825c17ea0 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x55f825c17e70 <col:13> 'Vector<String> *' lvalue ->_conf 0x55f825bfd280
|   |         `-CXXThisExpr 0x55f825c17e60 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x55f825c17f90 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x55f825c17f60 <col:9, col:16> '<bound member function type>' .clear 0x55f825c15eb8
|   |   `-MemberExpr 0x55f825c17f30 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x55f825c162d0
|   |     `-CXXThisExpr 0x55f825c17f20 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x55f825c17fd8 <line:305:9, col:17>
|     `-UnaryOperator 0x55f825c17fc0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f825c17fb0 <col:17> 'Args *' this
|-CXXMethodDecl 0x55f825bdb0c8 <line:313:5, col:36> col:11 used bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x55f825bdafd0 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x55f825bdb248 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x55f825bdb180 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x55f825bdb5c8 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x55f825bdb2f0 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x55f825bdb528 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x55f825bdb398 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x55f825bdb410 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x55f825c18330 <col:67, line:327:5>
|     |-WhileStmt 0x55f825c182e0 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x55f825c180f8 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55f825c18050 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55f825b48bf0 0x55f825b2e1e8 0x55f825b25c08 0x55f825af28b8 0x55f825abb208 0x55f825a3e538 0x55f82588e678 0x55f82588e350 0x55f82587beb0 0x55f82587bb60 0x55f82587b250 0x55f8257e49b0 0x55f8257d43d0
|     | | |-DeclRefExpr 0x55f825c18010 <col:16> 'Iter' lvalue ParmVar 0x55f825bdb398 'begin' 'Iter'
|     | | `-DeclRefExpr 0x55f825c18030 <col:25> 'Iter' lvalue ParmVar 0x55f825bdb410 'end' 'Iter'
|     | `-CompoundStmt 0x55f825c182c0 <col:30, line:325:9>
|     |   |-CallExpr 0x55f825c18260 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x55f825c18140 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x55f825c18230 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x55f825c181c0 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f825a43638 0x55f825a43258 0x55f825a42e88 0x55f825a42aa8 0x55f825a426c8 0x55f825a422f8
|     |   |   `-DeclRefExpr 0x55f825c181a0 <col:24> 'Iter' lvalue ParmVar 0x55f825bdb398 'begin' 'Iter'
|     |   `-UnaryOperator 0x55f825c182a8 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x55f825c18288 <col:15> 'Iter' lvalue ParmVar 0x55f825bdb398 'begin' 'Iter'
|     `-ReturnStmt 0x55f825c18320 <line:326:9, col:17>
|       `-UnaryOperator 0x55f825c18308 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f825c182f8 <col:17> 'Args *' this
|-CXXMethodDecl 0x55f825bdb6d0 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x55f825bdb640 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x55f825bdb818 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x55f825bdb788 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x55f825bdb8e0 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x55f825c18410 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x55f825c183b0 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x55f825c18360 <col:9> '<bound member function type>' ->reset_from 0x55f825c16758
|   | | `-CXXThisExpr 0x55f825c18350 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x55f825c18390 <col:20> 'int' 0
|   `-ReturnStmt 0x55f825c18400 <line:352:9, col:17>
|     `-UnaryOperator 0x55f825c183e8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f825c183d8 <col:17> 'Args *' this
|-VarDecl 0x55f825bdb998 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x55f825bdba00 <col:38> 'int' 1
|-VarDecl 0x55f825bdba90 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x55f825bdbaf8 <col:39> 'int' 2
|-VarDecl 0x55f825bdbb88 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x55f825bdbbf0 <col:39> 'int' 4
|-VarDecl 0x55f825bdbc80 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x55f825bdbce8 <col:39> 'int' 8
|-FunctionTemplateDecl 0x55f825bdc068 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x55f825bdbd60 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55f825bdbfc8 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55f825bdbe10 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55f825bdbeb8 <col:37, col:40> col:40 referenced x 'T &'
| | `-CompoundStmt 0x55f825c18568 <col:43, line:371:5>
| |   `-ReturnStmt 0x55f825c18558 <line:370:9, col:34>
| |     `-CallExpr 0x55f825c18520 <col:16, col:34> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55f825c18440 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55f825c184c0 <col:21> 'const char *' lvalue ParmVar 0x55f825bdbe10 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55f825c184e0 <col:30> 'int' 0
| |       `-DeclRefExpr 0x55f825c18500 <col:33> 'T' lvalue ParmVar 0x55f825bdbeb8 'x' 'T &'
| `-CXXMethodDecl 0x55f825cfd338 <line:369:5, line:371:5> line:369:11 used read 'Args &(const char *, bool &)'
|   |-TemplateArgument type 'bool'
|   |-ParmVarDecl 0x55f825cfd158 <col:16, col:28> col:28 keyword 'const char *'
|   `-ParmVarDecl 0x55f825cfd228 <col:37, col:40> col:40 x 'bool &'
|-FunctionTemplateDecl 0x55f825bdc398 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x55f825bdc0d0 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55f825bdc2f8 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55f825bdc180 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bdc228 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55f825c186b8 <col:45, line:375:5>
|     `-ReturnStmt 0x55f825c186a8 <line:374:9, col:42>
|       `-CallExpr 0x55f825c18670 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c18590 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c18610 <col:21> 'const char *' lvalue ParmVar 0x55f825bdc180 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c18630 <col:30> 'const int' lvalue Var 0x55f825bdb998 'mandatory' 'const int'
|         `-DeclRefExpr 0x55f825c18650 <col:41> 'T' lvalue ParmVar 0x55f825bdc228 'x' 'T &'
|-FunctionTemplateDecl 0x55f825bdc6c8 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x55f825bdc400 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55f825bdc628 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55f825bdc4b0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bdc558 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55f825c18808 <col:45, line:379:5>
|     `-ReturnStmt 0x55f825c187f8 <line:378:9, col:43>
|       `-CallExpr 0x55f825c187c0 <col:16, col:43> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c186e0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c18760 <col:21> 'const char *' lvalue ParmVar 0x55f825bdc4b0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c18780 <col:30> 'const int' lvalue Var 0x55f825bdba90 'positional' 'const int'
|         `-DeclRefExpr 0x55f825c187a0 <col:42> 'T' lvalue ParmVar 0x55f825bdc558 'x' 'T &'
|-FunctionTemplateDecl 0x55f825bdc9f8 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x55f825bdc730 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55f825bdc958 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55f825bdc7e0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bdc888 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x55f825c18a08 <col:46, line:383:5>
|     `-ReturnStmt 0x55f825c189f8 <line:382:9, col:55>
|       `-CallExpr 0x55f825c189c0 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c18830 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c188b0 <col:21> 'const char *' lvalue ParmVar 0x55f825bdc7e0 'keyword' 'const char *'
|         |-BinaryOperator 0x55f825c18980 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55f825c18930 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f825c18910 <col:30> 'const int' lvalue Var 0x55f825bdb998 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55f825c18968 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55f825c18948 <col:42> 'const int' lvalue Var 0x55f825bdba90 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55f825c189a0 <col:54> 'T' lvalue ParmVar 0x55f825bdc888 'x' 'T &'
|-FunctionTemplateDecl 0x55f825bdcdf8 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x55f825bdca60 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55f825bdcd58 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x55f825bdcb10 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bdcb90 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55f825bdcc38 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x55f825c18b48 <col:54, line:388:5>
|     |-CallExpr 0x55f825c18ad0 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f825c18a20 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55f825c18a60 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55f825c18a70 <col:30> 'const char *' lvalue ParmVar 0x55f825bdcb10 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55f825c18a90 <col:39> 'int' lvalue ParmVar 0x55f825bdcb90 'flags' 'int'
|     | `-DeclRefExpr 0x55f825c18ab0 <col:46> 'T' lvalue ParmVar 0x55f825bdcc38 'x' 'T &'
|     `-ReturnStmt 0x55f825c18b38 <line:387:9, col:17>
|       `-UnaryOperator 0x55f825c18b20 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f825c18b10 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f825be0a18 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x55f825bdce68 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55f825bdcee8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55f825be0978 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55f825bdcfa8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bdd048 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x55f825be0858 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x55f825c18cb8 <col:74, line:403:5>
|     `-ReturnStmt 0x55f825c18ca8 <line:402:9, col:56>
|       `-CallExpr 0x55f825c18c68 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c18b78 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c18be8 <col:28> 'const char *' lvalue ParmVar 0x55f825bdcfa8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f825c18c08 <col:37> 'int' 0
|         |-DeclRefExpr 0x55f825c18c28 <col:40> 'T' lvalue ParmVar 0x55f825bdd048 'x' 'T &'
|         `-DeclRefExpr 0x55f825c18c48 <col:43> 'const V' lvalue ParmVar 0x55f825be0858 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55f825be0e88 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55f825be0a88 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55f825be0b08 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55f825be0de8 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55f825be0bc8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be0c68 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x55f825be0d08 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x55f825c18e20 <col:76, line:407:5>
|     `-ReturnStmt 0x55f825c18e10 <line:406:9, col:65>
|       `-CallExpr 0x55f825c18dd0 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c18ce0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c18d50 <col:28> 'const char *' lvalue ParmVar 0x55f825be0bc8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c18d70 <col:37> 'const int' lvalue Var 0x55f825bdba90 'positional' 'const int'
|         |-DeclRefExpr 0x55f825c18d90 <col:49> 'T' lvalue ParmVar 0x55f825be0c68 'x' 'T &'
|         `-DeclRefExpr 0x55f825c18db0 <col:52> 'const V' lvalue ParmVar 0x55f825be0d08 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55f825be13d8 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x55f825be0ef8 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55f825be0f78 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55f825be1338 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55f825be1038 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be10b8 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55f825be1158 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x55f825be11f8 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x55f825c18f88 <col:85, line:412:5>
|     |-CallExpr 0x55f825c18f08 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f825c18e38 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55f825c18e78 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55f825c18e88 <col:37> 'const char *' lvalue ParmVar 0x55f825be1038 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55f825c18ea8 <col:46> 'int' lvalue ParmVar 0x55f825be10b8 'flags' 'int'
|     | |-DeclRefExpr 0x55f825c18ec8 <col:53> 'T' lvalue ParmVar 0x55f825be1158 'x' 'T &'
|     | `-DeclRefExpr 0x55f825c18ee8 <col:56> 'const V' lvalue ParmVar 0x55f825be11f8 'default_value' 'const V &'
|     `-ReturnStmt 0x55f825c18f78 <line:411:9, col:17>
|       `-UnaryOperator 0x55f825c18f60 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f825c18f50 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f825be1868 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x55f825be1450 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be14c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x55f825be17c8 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x55f825be1588 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55f825be1600 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x55f825be16a8 <col:47, col:50> col:50 referenced x 'T &'
| | `-CompoundStmt 0x55f825c19108 <col:53, line:425:5>
| |   `-ReturnStmt 0x55f825c190f8 <line:424:9, col:42>
| |     `-CallExpr 0x55f825c190b8 <col:16, col:42> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55f825c18fb8 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55f825c19038 <col:21> 'const char *' lvalue ParmVar 0x55f825be1588 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55f825c19058 <col:30> 'int' 0
| |       |-DeclRefExpr 0x55f825c19078 <col:33> 'P' lvalue ParmVar 0x55f825be1600 'parser' 'P'
| |       `-DeclRefExpr 0x55f825c19098 <col:41> 'T' lvalue ParmVar 0x55f825be16a8 'x' 'T &'
| |-CXXMethodDecl 0x55f825cfbf88 <line:423:5, line:425:5> line:423:11 used read 'Args &(const char *, SecondsArg, unsigned int &)'
| | |-TemplateArgument type 'SecondsArg'
| | |-TemplateArgument type 'unsigned int'
| | |-ParmVarDecl 0x55f825cfbcf8 <col:16, col:28> col:28 keyword 'const char *'
| | |-ParmVarDecl 0x55f825cfbd98 <col:37, col:39> col:39 parser 'SecondsArg':'SecondsArg'
| | `-ParmVarDecl 0x55f825cfbe68 <col:47, col:50> col:50 x 'unsigned int &'
| `-CXXMethodDecl 0x55f825cfdd78 <col:5, line:425:5> line:423:11 used read 'Args &(const char *, AnnoArg, int &)'
|   |-TemplateArgument type 'AnnoArg'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x55f825cfdae8 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x55f825cfdb88 <col:37, col:39> col:39 parser 'AnnoArg':'AnnoArg'
|   `-ParmVarDecl 0x55f825cfdc58 <col:47, col:50> col:50 x 'int &'
|-FunctionTemplateDecl 0x55f825be1cb8 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x55f825be18d8 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be1958 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825be1c18 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f825be1a18 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be1a90 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be1b38 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55f825c19280 <col:55, line:429:5>
|     `-ReturnStmt 0x55f825c19270 <line:428:9, col:50>
|       `-CallExpr 0x55f825c19230 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c19130 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c191b0 <col:21> 'const char *' lvalue ParmVar 0x55f825be1a18 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c191d0 <col:30> 'const int' lvalue Var 0x55f825bdb998 'mandatory' 'const int'
|         |-DeclRefExpr 0x55f825c191f0 <col:41> 'P' lvalue ParmVar 0x55f825be1a90 'parser' 'P'
|         `-DeclRefExpr 0x55f825c19210 <col:49> 'T' lvalue ParmVar 0x55f825be1b38 'x' 'T &'
|-FunctionTemplateDecl 0x55f825be2108 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x55f825be1d28 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be1da8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825be2068 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f825be1e68 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be1ee0 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be1f88 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55f825c193f8 <col:55, line:433:5>
|     `-ReturnStmt 0x55f825c193e8 <line:432:9, col:51>
|       `-CallExpr 0x55f825c193a8 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c192a8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c19328 <col:21> 'const char *' lvalue ParmVar 0x55f825be1e68 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c19348 <col:30> 'const int' lvalue Var 0x55f825bdba90 'positional' 'const int'
|         |-DeclRefExpr 0x55f825c19368 <col:42> 'P' lvalue ParmVar 0x55f825be1ee0 'parser' 'P'
|         `-DeclRefExpr 0x55f825c19388 <col:50> 'T' lvalue ParmVar 0x55f825be1f88 'x' 'T &'
|-FunctionTemplateDecl 0x55f825be2558 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x55f825be2178 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be21f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825be24b8 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f825be22b8 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be2330 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be23d8 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x55f825c19620 <col:56, line:437:5>
|     `-ReturnStmt 0x55f825c19610 <line:436:9, col:63>
|       `-CallExpr 0x55f825c195d0 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c19420 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c194a0 <col:21> 'const char *' lvalue ParmVar 0x55f825be22b8 'keyword' 'const char *'
|         |-BinaryOperator 0x55f825c19570 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55f825c19520 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f825c19500 <col:30> 'const int' lvalue Var 0x55f825bdb998 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55f825c19558 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55f825c19538 <col:42> 'const int' lvalue Var 0x55f825bdba90 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55f825c19590 <col:54> 'P' lvalue ParmVar 0x55f825be2330 'parser' 'P'
|         `-DeclRefExpr 0x55f825c195b0 <col:62> 'T' lvalue ParmVar 0x55f825be23d8 'x' 'T &'
|-FunctionTemplateDecl 0x55f825be2a88 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x55f825be25c8 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be2648 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825be29e8 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55f825be2708 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be2788 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55f825be2800 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be28a8 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x55f825c19788 <col:64, line:442:5>
|     |-CallExpr 0x55f825c19708 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f825c19638 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55f825c19678 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55f825c19688 <col:30> 'const char *' lvalue ParmVar 0x55f825be2708 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55f825c196a8 <col:39> 'int' lvalue ParmVar 0x55f825be2788 'flags' 'int'
|     | |-DeclRefExpr 0x55f825c196c8 <col:46> 'P' lvalue ParmVar 0x55f825be2800 'parser' 'P'
|     | `-DeclRefExpr 0x55f825c196e8 <col:54> 'T' lvalue ParmVar 0x55f825be28a8 'x' 'T &'
|     `-ReturnStmt 0x55f825c19778 <line:441:9, col:17>
|       `-UnaryOperator 0x55f825c19760 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f825c19750 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f825be3088 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x55f825be2b00 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be2b78 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55f825be2bf8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55f825be2fe8 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55f825be2cc0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be2d38 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be2dd8 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x55f825be2ea8 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x55f825c19920 <col:84, line:458:5>
|     `-ReturnStmt 0x55f825c19910 <line:457:9, col:64>
|       `-CallExpr 0x55f825c198c8 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c197b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c19828 <col:28> 'const char *' lvalue ParmVar 0x55f825be2cc0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f825c19848 <col:37> 'int' 0
|         |-DeclRefExpr 0x55f825c19868 <col:40> 'P' lvalue ParmVar 0x55f825be2d38 'parser' 'P'
|         |-DeclRefExpr 0x55f825c19888 <col:48> 'T' lvalue ParmVar 0x55f825be2dd8 'x' 'T &'
|         `-DeclRefExpr 0x55f825c198a8 <col:51> 'const V' lvalue ParmVar 0x55f825be2ea8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55f825be3608 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55f825be3100 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be3178 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55f825be31f8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55f825be3568 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55f825be32c0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be3338 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be33d8 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x55f825be3478 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x55f825c19ab0 <col:86, line:462:5>
|     `-ReturnStmt 0x55f825c19aa0 <line:461:9, col:73>
|       `-CallExpr 0x55f825c19a58 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c19948 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c199b8 <col:28> 'const char *' lvalue ParmVar 0x55f825be32c0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c199d8 <col:37> 'const int' lvalue Var 0x55f825bdba90 'positional' 'const int'
|         |-DeclRefExpr 0x55f825c199f8 <col:49> 'P' lvalue ParmVar 0x55f825be3338 'parser' 'P'
|         |-DeclRefExpr 0x55f825c19a18 <col:57> 'T' lvalue ParmVar 0x55f825be33d8 'x' 'T &'
|         `-DeclRefExpr 0x55f825c19a38 <col:60> 'const V' lvalue ParmVar 0x55f825be3478 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55f825be3c68 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x55f825be3680 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be36f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55f825be3778 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55f825be3bc8 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55f825be3840 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be38c0 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55f825be3938 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be39d8 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x55f825be3a78 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x55f825c19c40 <col:95, line:467:5>
|     |-CallExpr 0x55f825c19bb8 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f825c19ac8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55f825c19b08 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55f825c19b18 <col:37> 'const char *' lvalue ParmVar 0x55f825be3840 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55f825c19b38 <col:46> 'int' lvalue ParmVar 0x55f825be38c0 'flags' 'int'
|     | |-DeclRefExpr 0x55f825c19b58 <col:53> 'P' lvalue ParmVar 0x55f825be3938 'parser' 'P'
|     | |-DeclRefExpr 0x55f825c19b78 <col:61> 'T' lvalue ParmVar 0x55f825be39d8 'x' 'T &'
|     | `-DeclRefExpr 0x55f825c19b98 <col:64> 'const V' lvalue ParmVar 0x55f825be3a78 'default_value' 'const V &'
|     `-ReturnStmt 0x55f825c19c30 <line:466:9, col:17>
|       `-UnaryOperator 0x55f825c19c18 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f825c19c08 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f825be4248 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x55f825be3ce8 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be3d68 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55f825be3de8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55f825be41a8 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55f825be3eb0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be3f28 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be3fc8 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55f825be4068 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x55f825c19de8 <col:63, line:481:5>
|     `-ReturnStmt 0x55f825c19dd8 <line:480:9, col:47>
|       `-CallExpr 0x55f825c19d90 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c19c70 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c19cf0 <col:21> 'const char *' lvalue ParmVar 0x55f825be3eb0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f825c19d10 <col:30> 'int' 0
|         |-DeclRefExpr 0x55f825c19d30 <col:33> 'P' lvalue ParmVar 0x55f825be3f28 'parser' 'P'
|         |-DeclRefExpr 0x55f825c19d50 <col:41> 'T1' lvalue ParmVar 0x55f825be3fc8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55f825c19d70 <col:45> 'T2' lvalue ParmVar 0x55f825be4068 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55f825be47c8 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x55f825be42c0 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be4338 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55f825be43b8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55f825be4728 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55f825be4480 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be44f8 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be4598 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55f825be4638 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55f825c19f88 <col:65, line:485:5>
|     `-ReturnStmt 0x55f825c19f78 <line:484:9, col:55>
|       `-CallExpr 0x55f825c19f30 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c19e10 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c19e90 <col:21> 'const char *' lvalue ParmVar 0x55f825be4480 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c19eb0 <col:30> 'const int' lvalue Var 0x55f825bdb998 'mandatory' 'const int'
|         |-DeclRefExpr 0x55f825c19ed0 <col:41> 'P' lvalue ParmVar 0x55f825be44f8 'parser' 'P'
|         |-DeclRefExpr 0x55f825c19ef0 <col:49> 'T1' lvalue ParmVar 0x55f825be4598 'x1' 'T1 &'
|         `-DeclRefExpr 0x55f825c19f10 <col:53> 'T2' lvalue ParmVar 0x55f825be4638 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55f825be4d48 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x55f825be4840 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be48b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55f825be4938 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55f825be4ca8 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55f825be4a00 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be4a78 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be4b18 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55f825be4bb8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55f825c1a128 <col:65, line:489:5>
|     `-ReturnStmt 0x55f825c1a118 <line:488:9, col:56>
|       `-CallExpr 0x55f825c1a0d0 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c19fb0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1a030 <col:21> 'const char *' lvalue ParmVar 0x55f825be4a00 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c1a050 <col:30> 'const int' lvalue Var 0x55f825bdba90 'positional' 'const int'
|         |-DeclRefExpr 0x55f825c1a070 <col:42> 'P' lvalue ParmVar 0x55f825be4a78 'parser' 'P'
|         |-DeclRefExpr 0x55f825c1a090 <col:50> 'T1' lvalue ParmVar 0x55f825be4b18 'x1' 'T1 &'
|         `-DeclRefExpr 0x55f825c1a0b0 <col:54> 'T2' lvalue ParmVar 0x55f825be4bb8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55f825be52c8 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x55f825be4dc0 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be4e38 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55f825be4eb8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55f825be5228 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55f825be4f80 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be4ff8 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be5098 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55f825be5138 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x55f825c1a378 <col:66, line:493:5>
|     `-ReturnStmt 0x55f825c1a368 <line:492:9, col:68>
|       `-CallExpr 0x55f825c1a320 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c1a150 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1a1d0 <col:21> 'const char *' lvalue ParmVar 0x55f825be4f80 'keyword' 'const char *'
|         |-BinaryOperator 0x55f825c1a2a0 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55f825c1a250 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f825c1a230 <col:30> 'const int' lvalue Var 0x55f825bdb998 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55f825c1a288 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55f825c1a268 <col:42> 'const int' lvalue Var 0x55f825bdba90 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55f825c1a2c0 <col:54> 'P' lvalue ParmVar 0x55f825be4ff8 'parser' 'P'
|         |-DeclRefExpr 0x55f825c1a2e0 <col:62> 'T1' lvalue ParmVar 0x55f825be5098 'x1' 'T1 &'
|         `-DeclRefExpr 0x55f825c1a300 <col:66> 'T2' lvalue ParmVar 0x55f825be5138 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55f825be5928 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x55f825be5340 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be53b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55f825be5438 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55f825be5888 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55f825be5500 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be5580 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55f825be55f8 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be5698 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55f825be5738 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x55f825c1a508 <col:74, line:498:5>
|     |-CallExpr 0x55f825c1a480 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f825c1a390 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55f825c1a3d0 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55f825c1a3e0 <col:30> 'const char *' lvalue ParmVar 0x55f825be5500 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55f825c1a400 <col:39> 'int' lvalue ParmVar 0x55f825be5580 'flags' 'int'
|     | |-DeclRefExpr 0x55f825c1a420 <col:46> 'P' lvalue ParmVar 0x55f825be55f8 'parser' 'P'
|     | |-DeclRefExpr 0x55f825c1a440 <col:54> 'T1' lvalue ParmVar 0x55f825be5698 'x1' 'T1 &'
|     | `-DeclRefExpr 0x55f825c1a460 <col:58> 'T2' lvalue ParmVar 0x55f825be5738 'x2' 'T2 &'
|     `-ReturnStmt 0x55f825c1a4f8 <line:497:9, col:17>
|       `-UnaryOperator 0x55f825c1a4e0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f825c1a4d0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f825be5c88 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x55f825be59a8 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f825be5be8 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55f825be5a60 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be5ad8 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x55f825c1a650 <col:52, line:509:5>
|     `-ReturnStmt 0x55f825c1a640 <line:508:9, col:44>
|       `-CallExpr 0x55f825c1a608 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c1a538 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1a5a8 <col:26> 'const char *' lvalue ParmVar 0x55f825be5a60 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f825c1a5c8 <col:35> 'int' 0
|         `-DeclRefExpr 0x55f825c1a5e8 <col:38> 'P' lvalue ParmVar 0x55f825be5ad8 'parser' 'P'
|-FunctionTemplateDecl 0x55f825be5f88 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x55f825be5cf0 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f825be5ee8 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55f825be5da0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be5e18 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55f825c1a790 <col:54, line:513:5>
|     `-ReturnStmt 0x55f825c1a780 <line:512:9, col:52>
|       `-CallExpr 0x55f825c1a748 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c1a678 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1a6e8 <col:26> 'const char *' lvalue ParmVar 0x55f825be5da0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c1a708 <col:35> 'const int' lvalue Var 0x55f825bdb998 'mandatory' 'const int'
|         `-DeclRefExpr 0x55f825c1a728 <col:46> 'P' lvalue ParmVar 0x55f825be5e18 'parser' 'P'
|-FunctionTemplateDecl 0x55f825be6288 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x55f825be5ff0 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f825be61e8 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55f825be60a0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be6118 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55f825c1a8d0 <col:54, line:517:5>
|     `-ReturnStmt 0x55f825c1a8c0 <line:516:9, col:53>
|       `-CallExpr 0x55f825c1a888 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c1a7b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1a828 <col:26> 'const char *' lvalue ParmVar 0x55f825be60a0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c1a848 <col:35> 'const int' lvalue Var 0x55f825bdba90 'positional' 'const int'
|         `-DeclRefExpr 0x55f825c1a868 <col:47> 'P' lvalue ParmVar 0x55f825be6118 'parser' 'P'
|-FunctionTemplateDecl 0x55f825be6588 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x55f825be62f0 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f825be64e8 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55f825be63a0 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be6418 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x55f825c1aac0 <col:55, line:521:5>
|     `-ReturnStmt 0x55f825c1aab0 <line:520:9, col:65>
|       `-CallExpr 0x55f825c1aa78 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c1a8f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1a968 <col:26> 'const char *' lvalue ParmVar 0x55f825be63a0 'keyword' 'const char *'
|         |-BinaryOperator 0x55f825c1aa38 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x55f825c1a9e8 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f825c1a9c8 <col:35> 'const int' lvalue Var 0x55f825bdb998 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55f825c1aa20 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55f825c1aa00 <col:47> 'const int' lvalue Var 0x55f825bdba90 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55f825c1aa58 <col:59> 'P' lvalue ParmVar 0x55f825be6418 'parser' 'P'
|-FunctionTemplateDecl 0x55f825be6958 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x55f825be65f0 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f825be68b8 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55f825be66a0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be6720 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55f825be6798 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x55f825c1ac00 <col:63, line:526:5>
|     |-CallExpr 0x55f825c1ab88 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f825c1aad8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x55f825c1ab18 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x55f825c1ab28 <col:35> 'const char *' lvalue ParmVar 0x55f825be66a0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55f825c1ab48 <col:44> 'int' lvalue ParmVar 0x55f825be6720 'flags' 'int'
|     | `-DeclRefExpr 0x55f825c1ab68 <col:51> 'P' lvalue ParmVar 0x55f825be6798 'parser' 'P'
|     `-ReturnStmt 0x55f825c1abf0 <line:525:9, col:17>
|       `-UnaryOperator 0x55f825c1abd8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f825c1abc8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f825be6da8 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x55f825be69c8 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be6a48 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825be6d08 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f825be6b08 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be6b80 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be6c28 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x55f825c1ad58 <col:58, line:541:5>
|     `-ReturnStmt 0x55f825c1ad48 <line:540:9, col:39>
|       `-CallExpr 0x55f825c1ad10 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c1ac30 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1acb0 <col:21> 'const char *' lvalue ParmVar 0x55f825be6b08 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c1acd0 <col:30> 'P' lvalue ParmVar 0x55f825be6b80 'parser' 'P'
|         `-DeclRefExpr 0x55f825c1acf0 <col:38> 'T' lvalue ParmVar 0x55f825be6c28 'x' 'T &'
|-FunctionTemplateDecl 0x55f825be71f8 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x55f825be6e18 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be6e98 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825be7158 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f825be6f58 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be6fd0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be7078 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55f825c1ae90 <col:60, line:545:5>
|     `-ReturnStmt 0x55f825c1ae80 <line:544:9, col:41>
|       `-CallExpr 0x55f825c1ae48 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c1ad80 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1ade8 <col:23> 'const char *' lvalue ParmVar 0x55f825be6f58 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c1ae08 <col:32> 'P' lvalue ParmVar 0x55f825be6fd0 'parser' 'P'
|         `-DeclRefExpr 0x55f825c1ae28 <col:40> 'T' lvalue ParmVar 0x55f825be7078 'x' 'T &'
|-FunctionTemplateDecl 0x55f825be7648 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x55f825be7268 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be72e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825be75a8 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f825be73a8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be7420 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be74c8 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55f825c1afc8 <col:60, line:549:5>
|     `-ReturnStmt 0x55f825c1afb8 <line:548:9, col:41>
|       `-CallExpr 0x55f825c1af80 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c1aeb8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1af20 <col:23> 'const char *' lvalue ParmVar 0x55f825be73a8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c1af40 <col:32> 'P' lvalue ParmVar 0x55f825be7420 'parser' 'P'
|         `-DeclRefExpr 0x55f825c1af60 <col:40> 'T' lvalue ParmVar 0x55f825be74c8 'x' 'T &'
|-FunctionTemplateDecl 0x55f825be7a98 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x55f825be76b8 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be7738 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825be79f8 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f825be77f8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be7870 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be7918 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x55f825c1b100 <col:61, line:553:5>
|     `-ReturnStmt 0x55f825c1b0f0 <line:552:9, col:42>
|       `-CallExpr 0x55f825c1b0b8 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c1aff0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1b058 <col:24> 'const char *' lvalue ParmVar 0x55f825be77f8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c1b078 <col:33> 'P' lvalue ParmVar 0x55f825be7870 'parser' 'P'
|         `-DeclRefExpr 0x55f825c1b098 <col:41> 'T' lvalue ParmVar 0x55f825be7918 'x' 'T &'
|-FunctionTemplateDecl 0x55f825be7f78 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x55f825be7b08 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be7b88 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825be7ed8 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55f825be7c48 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be7cc8 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55f825be7d40 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x55f825be7de8 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x55f825c1b278 <col:69, line:557:5>
|     `-ReturnStmt 0x55f825c1b268 <line:556:9, col:46>
|       `-CallExpr 0x55f825c1b228 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c1b128 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1b1a8 <col:21> 'const char *' lvalue ParmVar 0x55f825be7c48 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c1b1c8 <col:30> 'int' lvalue ParmVar 0x55f825be7cc8 'flags' 'int'
|         |-DeclRefExpr 0x55f825c1b1e8 <col:37> 'P' lvalue ParmVar 0x55f825be7d40 'parser' 'P'
|         `-DeclRefExpr 0x55f825c1b208 <col:45> 'T' lvalue ParmVar 0x55f825be7de8 'x' 'T &'
|-FunctionTemplateDecl 0x55f825be8288 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x55f825be7ff0 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f825be81e8 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55f825be80a0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be8118 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x55f825c1b3b8 <col:56, line:571:5>
|     `-ReturnStmt 0x55f825c1b3a8 <line:570:9, col:48>
|       `-CallExpr 0x55f825c1b370 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c1b2a0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1b310 <col:30> 'const char *' lvalue ParmVar 0x55f825be80a0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f825c1b330 <col:39> 'int' 0
|         `-DeclRefExpr 0x55f825c1b350 <col:42> 'P' lvalue ParmVar 0x55f825be8118 'parser' 'P'
|-FunctionTemplateDecl 0x55f825be8618 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x55f825be82f0 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f825be8578 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55f825be83a0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825be8420 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55f825be8498 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55f825c1b588 <col:67, line:576:5>
|     |-CallExpr 0x55f825c1b510 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f825c1b3d0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55f825c1b410 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55f825c1b420 <col:39> 'const char *' lvalue ParmVar 0x55f825be83a0 'keyword' 'const char *'
|     | |-BinaryOperator 0x55f825c1b4d0 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55f825c1b480 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55f825c1b440 <col:48> 'int' lvalue ParmVar 0x55f825be8420 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55f825c1b4b8 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55f825c1b498 <col:56> 'const int' lvalue Var 0x55f825bdbc80 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x55f825c1b4f0 <col:68> 'P' lvalue ParmVar 0x55f825be8498 'parser' 'P'
|     `-ReturnStmt 0x55f825c1b578 <line:575:9, col:17>
|       `-UnaryOperator 0x55f825c1b560 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f825c1b550 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f825bf5848 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x55f825be8688 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825be8708 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825bf57a8 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55f825bf55b0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bf5628 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55f825bf56c8 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x55f825c1b6f8 <col:62, line:592:5>
|     `-ReturnStmt 0x55f825c1b6e8 <line:591:9, col:51>
|       `-CallExpr 0x55f825c1b6a8 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c1b5b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1b628 <col:30> 'const char *' lvalue ParmVar 0x55f825bf55b0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f825c1b648 <col:39> 'int' 0
|         |-DeclRefExpr 0x55f825c1b668 <col:42> 'P' lvalue ParmVar 0x55f825bf5628 'parser' 'P'
|         `-DeclRefExpr 0x55f825c1b688 <col:50> 'T' lvalue ParmVar 0x55f825bf56c8 'x' 'T &'
|-FunctionTemplateDecl 0x55f825bf5d28 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x55f825bf58b8 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825bf5938 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825bf5c88 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55f825bf59f8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bf5a78 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55f825bf5af0 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x55f825bf5b98 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x55f825c1b8f0 <col:73, line:597:5>
|     |-CallExpr 0x55f825c1b870 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f825c1b710 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55f825c1b750 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55f825c1b760 <col:39> 'const char *' lvalue ParmVar 0x55f825bf59f8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55f825c1b810 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55f825c1b7c0 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55f825c1b780 <col:48> 'int' lvalue ParmVar 0x55f825bf5a78 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55f825c1b7f8 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55f825c1b7d8 <col:56> 'const int' lvalue Var 0x55f825bdbc80 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55f825c1b830 <col:68> 'P' lvalue ParmVar 0x55f825bf5af0 'parser' 'P'
|     | `-DeclRefExpr 0x55f825c1b850 <col:76> 'T' lvalue ParmVar 0x55f825bf5b98 'x' 'T &'
|     `-ReturnStmt 0x55f825c1b8e0 <line:596:9, col:17>
|       `-UnaryOperator 0x55f825c1b8c8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f825c1b8b8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f825bf62d8 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x55f825bf5da0 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825bf5e18 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825bf6238 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x55f825bf5ed8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bf5f50 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x55f825bf6110 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55f825c1dbd0 <col:65, line:614:5>
|     `-ReturnStmt 0x55f825c1dbc0 <line:613:9, col:46>
|       `-CallExpr 0x55f825c1db80 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c1b920 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1b990 <col:25> 'const char *' lvalue ParmVar 0x55f825bf5ed8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f825c1b9b0 <col:34> 'int' 0
|         |-DeclRefExpr 0x55f825c1b9d0 <col:37> 'P' lvalue ParmVar 0x55f825bf5f50 'parser' 'P'
|         `-DeclRefExpr 0x55f825c1b9f0 <col:45> 'Vector<T>' lvalue ParmVar 0x55f825bf6110 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55f825bf6708 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x55f825bf6348 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55f825bf6668 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x55f825bf6400 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bf6550 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55f825c1ddf0 <col:55, line:618:5>
|     `-ReturnStmt 0x55f825c1dde0 <line:617:9, col:55>
|       `-CallExpr 0x55f825c1dda0 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c1dbf8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1dc68 <col:25> 'const char *' lvalue ParmVar 0x55f825bf6400 'keyword' 'const char *'
|         |-IntegerLiteral 0x55f825c1dc88 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x55f825c1dd60 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55f825c1dd80 <col:54> 'Vector<T>' lvalue ParmVar 0x55f825bf6550 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55f825bf6cd8 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x55f825bf6770 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825bf67e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825bf6c38 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55f825bf68a8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bf6928 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55f825bf69a0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55f825bf6af0 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55f825c1dfe8 <col:76, line:623:5>
|     |-CallExpr 0x55f825c1df68 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55f825c1de08 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x55f825c1de48 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x55f825c1de58 <col:34> 'const char *' lvalue ParmVar 0x55f825bf68a8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55f825c1df08 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x55f825c1deb8 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55f825c1de78 <col:43> 'int' lvalue ParmVar 0x55f825bf6928 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55f825c1def0 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55f825c1ded0 <col:51> 'const int' lvalue Var 0x55f825bdbc80 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55f825c1df28 <col:63> 'P' lvalue ParmVar 0x55f825bf69a0 'parser' 'P'
|     | `-DeclRefExpr 0x55f825c1df48 <col:71> 'Vector<T>' lvalue ParmVar 0x55f825bf6af0 'x' 'Vector<T> &'
|     `-ReturnStmt 0x55f825c1dfd8 <line:622:9, col:17>
|       `-UnaryOperator 0x55f825c1dfc0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f825c1dfb0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f825bf7218 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x55f825bf6d50 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825bf6dc8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825bf7178 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x55f825bf6e88 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bf6f08 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55f825bf7050 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55f825c1e250 <col:66, line:627:5>
|     `-ReturnStmt 0x55f825c1e240 <line:626:9, col:59>
|       `-CallExpr 0x55f825c1e200 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55f825c1e018 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55f825c1e088 <col:25> 'const char *' lvalue ParmVar 0x55f825bf6e88 'keyword' 'const char *'
|         |-DeclRefExpr 0x55f825c1e0a8 <col:34> 'int' lvalue ParmVar 0x55f825bf6f08 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x55f825c1e1c0 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55f825c1e1e0 <col:58> 'Vector<T>' lvalue ParmVar 0x55f825bf7050 'x' 'Vector<T> &'
|-CXXMethodDecl 0x55f825bf72a8 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x55f825c1e2d0 <col:25, line:633:5>
|   `-ReturnStmt 0x55f825c1e2c0 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x55f825c1e2a8 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55f825c1e278 <col:16> 'const bool' lvalue ->_status 0x55f825bfd0e8
|         `-CXXThisExpr 0x55f825c1e268 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55f825bf7428 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x55f825bf7360 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x55f825c1e3b8 <col:27, line:639:5>
|   |-BinaryOperator 0x55f825c1e360 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55f825c1e2e8 <col:9> 'bool' lvalue ParmVar 0x55f825bf7360 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55f825c1e348 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55f825c1e318 <col:13> 'bool' lvalue ->_status 0x55f825bfd0e8
|   |     `-CXXThisExpr 0x55f825c1e308 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55f825c1e3a8 <line:638:9, col:17>
|     `-UnaryOperator 0x55f825c1e390 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f825c1e380 <col:17> 'Args *' this
|-CXXMethodDecl 0x55f825bf75a8 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55f825bf74e8 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x55f825c1e4a8 <col:39, line:644:5>
|   |-BinaryOperator 0x55f825c1e450 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55f825c1e3d8 <col:9> 'bool' lvalue ParmVar 0x55f825bf74e8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55f825c1e438 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55f825c1e408 <col:13> 'const bool' lvalue ->_status 0x55f825bfd0e8
|   |     `-CXXThisExpr 0x55f825c1e3f8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55f825c1e498 <line:643:9, col:17>
|     `-UnaryOperator 0x55f825c1e480 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f825c1e470 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55f825bf7670 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x55f825c1e550 <col:30, line:651:5>
|   `-ReturnStmt 0x55f825c1e540 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x55f825c1e528 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55f825c1e4f8 <col:16> 'bool' lvalue ->_read_status 0x55f825bf2ac0
|         `-ImplicitCastExpr 0x55f825c1e4d8 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x55f825c1e4c8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55f825bf77b8 <line:655:5, line:658:5> line:655:11 used read_status 'Args &(bool &)'
| |-ParmVarDecl 0x55f825bf7728 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x55f825c1e658 <col:32, line:658:5>
|   |-BinaryOperator 0x55f825c1e600 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55f825c1e568 <col:9> 'bool' lvalue ParmVar 0x55f825bf7728 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55f825c1e5e8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55f825c1e5b8 <col:13> 'bool' lvalue ->_read_status 0x55f825bf2ac0
|   |     `-ImplicitCastExpr 0x55f825c1e598 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55f825c1e588 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55f825c1e648 <line:657:9, col:17>
|     `-UnaryOperator 0x55f825c1e630 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f825c1e620 <col:17> 'Args *' this
|-CXXMethodDecl 0x55f825bf7908 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55f825bf7878 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x55f825c1e768 <col:44, line:663:5>
|   |-BinaryOperator 0x55f825c1e710 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55f825c1e678 <col:9> 'bool' lvalue ParmVar 0x55f825bf7878 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55f825c1e6f8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55f825c1e6c8 <col:13> 'bool' lvalue ->_read_status 0x55f825bf2ac0
|   |     `-ImplicitCastExpr 0x55f825c1e6a8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55f825c1e698 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55f825c1e758 <line:662:9, col:17>
|     `-UnaryOperator 0x55f825c1e740 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55f825c1e730 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55f825bf79d0 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x55f825bf7a98 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x55f825bf7b60 <line:684:5, col:17> col:9 used consume 'int ()'
|-CXXMethodDecl 0x55f825bf7c28 <line:693:5, col:18> col:9 complete 'int ()'
|-FunctionTemplateDecl 0x55f825bf7f38 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x55f825bf7cc8 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55f825bf7e98 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x55f825bf7da8 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x55f825c1eb28 <col:19, line:706:5>
|     `-IfStmt 0x55f825c1eb00 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x55f825c1e868 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x55f825c1ea30 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x55f825c1ea00 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x55f825c1e9c0 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x55f825c1e8c0 <col:42> '<bound member function type>' ->simple_slot 0x55f825c17410
|       |     | `-CXXThisExpr 0x55f825c1e8b0 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x55f825c1e960 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x55f825c1e910 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x55f825b49990 0x55f825890388
|       |     | `-DeclRefExpr 0x55f825c1e8f0 <col:55> 'T' lvalue ParmVar 0x55f825bf7da8 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x55f825c1e9a0 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x55f825c1eaf0 <line:705:13, col:34>
|         `-CallExpr 0x55f825c1eac8 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x55f825c1ea50 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x55f825c1eaa8 <col:33> 'T' lvalue ParmVar 0x55f825bf7da8 'x' 'T &'
|-FunctionTemplateDecl 0x55f825bf8208 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x55f825bf7f98 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55f825bf8168 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x55f825bf8078 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x55f825c1ef00 <col:31, line:717:5>
|     |-DeclStmt 0x55f825c1ec68 <line:713:9, col:23>
|     | `-VarDecl 0x55f825c1eb50 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x55f825c1ec40 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55f825c1ebc8 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55f825c1ec20 <col:21> 'T' lvalue ParmVar 0x55f825bf8078 'x' 'T &'
|     |-IfStmt 0x55f825c1eeb0 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x55f825c1ed58 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x55f825c1ee90 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55f825c1ee30 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55f825c1edc0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f825a43638 0x55f825a43258 0x55f825a42e88 0x55f825a42aa8 0x55f825a426c8 0x55f825a422f8
|     |   | `-DeclRefExpr 0x55f825c1eda0 <col:14> 'T *' lvalue Var 0x55f825c1eb50 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x55f825c1ee70 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x55f825c1eee8 <line:716:9, col:16>
|       `-DeclRefExpr 0x55f825c1eec8 <col:16> 'T *' lvalue Var 0x55f825c1eb50 's' 'T *'
|-FunctionTemplateDecl 0x55f825bf8618 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x55f825bf8268 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55f825bf82e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55f825bf8578 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x55f825bf83c8 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x55f825bf8468 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x55f825c1f210 <col:37, line:726:5>
|     |-IfStmt 0x55f825c1f1a0 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x55f825c1f1c0 <line:723:13, col:26>
|     | | `-VarDecl 0x55f825c1ef68 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x55f825c1f058 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x55f825c1efe0 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x55f825c1f038 <col:25> 'T' lvalue ParmVar 0x55f825bf83c8 'x' 'T &'
|     | |-DeclRefExpr 0x55f825c1f080 <col:16> 'T *' lvalue Var 0x55f825c1ef68 's' 'T *'
|     | `-BinaryOperator 0x55f825c1f180 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55f825c1f130 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55f825c1f0c0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f825a43638 0x55f825a43258 0x55f825a42e88 0x55f825a42aa8 0x55f825a426c8 0x55f825a422f8
|     |   | `-DeclRefExpr 0x55f825c1f0a0 <col:14> 'T *' lvalue Var 0x55f825c1ef68 's' 'T *'
|     |   `-DeclRefExpr 0x55f825c1f160 <col:18> 'const V' lvalue ParmVar 0x55f825bf8468 'value' 'const V &'
|     `-ReturnStmt 0x55f825c1f200 <line:725:9, col:17>
|       `-UnaryOperator 0x55f825c1f1e8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55f825c1f1d8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55f825bf8a18 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x55f825bf8680 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55f825bf8978 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x55f825bf8730 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bf87b0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55f825bf8858 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x55f825c20030 <col:65, line:737:5>
|     |-DeclStmt 0x55f825c1f2a8 <line:732:9, col:26>
|     | `-VarDecl 0x55f825c1f240 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55f825c1fff8 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x55f825c20018 <line:733:13, col:58>
|       | `-VarDecl 0x55f825c1f2d0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55f825c1f4b0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55f825c1f480 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55f825c1f468 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55f825c1f448 <col:26, col:58> 'String' (CXXTemporary 0x55f825c1f448)
|       |           `-CXXMemberCallExpr 0x55f825c1f3d8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55f825c1f348 <col:26> '<bound member function type>' ->find 0x55f825c16a28
|       |             | `-CXXThisExpr 0x55f825c1f338 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55f825c1f410 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f825c1f378 <col:31> 'const char *' lvalue ParmVar 0x55f825bf8730 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55f825c1f428 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f825c1f398 <col:40> 'int' lvalue ParmVar 0x55f825bf87b0 'flags' 'int'
|       |             `-DeclRefExpr 0x55f825c1f3b8 <col:47> 'Args::Slot *' lvalue Var 0x55f825c1f240 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55f825c1f568 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55f825c1f550 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55f825c1f530 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55f825c1f500 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55f825852c08
|       |       `-ImplicitCastExpr 0x55f825c1f4e8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55f825c1f4c8 <col:20> 'String' lvalue Var 0x55f825c1f2d0 'str' 'String'
|       `-CompoundStmt 0x55f825c1ffd8 <col:61, line:736:9>
|         |-DeclStmt 0x55f825c1fa20 <line:734:13, col:76>
|         | `-VarDecl 0x55f825c1f5b8 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55f825c1f9f0 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55f825c1f960 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55f825c1f9a8 <col:60> 'T' lvalue ParmVar 0x55f825bf8858 'variable' 'T &'
|         |     `-UnaryOperator 0x55f825c1f9d8 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55f825c1f9c8 <col:71> 'Args *' this
|         `-CallExpr 0x55f825c1ffa8 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x55f825c1fa48 <col:13> '<bound member function type>' ->postparse 0x55f825c16c38
|           | `-CXXThisExpr 0x55f825c1fa38 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55f825c1ff68 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55f825c1fa78 <col:23> 'T *' lvalue Var 0x55f825c1f5b8 's' 'T *'
|           | `-CallExpr 0x55f825c1ff28 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55f825c1fd00 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x55f825c1fe00 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x55f825c1fe20 <col:86> 'String' lvalue Var 0x55f825c1f2d0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55f825c1fed0 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55f825c1fe60 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f825a43638 0x55f825a43258 0x55f825a42e88 0x55f825a42aa8 0x55f825a426c8 0x55f825a422f8
|           |   | `-DeclRefExpr 0x55f825c1fe40 <col:92> 'T *' lvalue Var 0x55f825c1f5b8 's' 'T *'
|           |   `-UnaryOperator 0x55f825c1ff10 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55f825c1ff00 <col:96> 'Args *' this
|           `-DeclRefExpr 0x55f825c1ff88 <col:103> 'Args::Slot *' lvalue Var 0x55f825c1f240 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55f825bf8f68 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55f825bf8a88 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55f825bf8b08 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55f825bf8ec8 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55f825bf8bc8 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bf8c48 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55f825bf8ce8 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x55f825bf8d88 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x55f825c20ed0 <col:88, line:745:5>
|     |-DeclStmt 0x55f825c200c8 <line:741:9, col:26>
|     | `-VarDecl 0x55f825c20060 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55f825c202e8 <line:742:9, col:55>
|     | `-VarDecl 0x55f825c200f0 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55f825c202d0 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55f825c202a0 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55f825c20288 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55f825c20268 <col:22, col:54> 'String' (CXXTemporary 0x55f825c20268)
|     |           `-CXXMemberCallExpr 0x55f825c201f8 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55f825c20168 <col:22> '<bound member function type>' ->find 0x55f825c16a28
|     |             | `-CXXThisExpr 0x55f825c20158 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55f825c20230 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55f825c20198 <col:27> 'const char *' lvalue ParmVar 0x55f825bf8bc8 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55f825c20248 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55f825c201b8 <col:36> 'int' lvalue ParmVar 0x55f825bf8c48 'flags' 'int'
|     |             `-DeclRefExpr 0x55f825c201d8 <col:43> 'Args::Slot *' lvalue Var 0x55f825c20060 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55f825c206c0 <line:743:9, col:72>
|     | `-VarDecl 0x55f825c20338 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55f825c20690 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55f825c20600 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55f825c20648 <col:56> 'T' lvalue ParmVar 0x55f825bf8ce8 'variable' 'T &'
|     |     `-UnaryOperator 0x55f825c20678 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55f825c20668 <col:67> 'Args *' this
|     `-CallExpr 0x55f825c20ea0 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x55f825c206e8 <col:9> '<bound member function type>' ->postparse 0x55f825c16c38
|       | `-CXXThisExpr 0x55f825c206d8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55f825c20e60 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55f825c20718 <col:19> 'T *' lvalue Var 0x55f825c20338 's' 'T *'
|       | `-ParenExpr 0x55f825c20e40 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x55f825c20e10 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55f825c20df8 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55f825c20de0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55f825c20dc0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55f825c20d90 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55f825852c08
|       |     |       `-ImplicitCastExpr 0x55f825c20d78 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55f825c20738 <col:25> 'String' lvalue Var 0x55f825c200f0 'str' 'String'
|       |     |-CallExpr 0x55f825c20be8 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55f825c209c0 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x55f825c20ac0 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x55f825c20ae0 <col:89> 'String' lvalue Var 0x55f825c200f0 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55f825c20b90 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55f825c20b20 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f825a43638 0x55f825a43258 0x55f825a42e88 0x55f825a42aa8 0x55f825a426c8 0x55f825a422f8
|       |     | | `-DeclRefExpr 0x55f825c20b00 <col:95> 'T *' lvalue Var 0x55f825c20338 's' 'T *'
|       |     | `-UnaryOperator 0x55f825c20bd0 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55f825c20bc0 <col:99> 'Args *' this
|       |     `-ParenExpr 0x55f825c20d58 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x55f825c20d38 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x55f825c20d08 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55f825c20cb8 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55f825c20c48 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f825a43638 0x55f825a43258 0x55f825a42e88 0x55f825a42aa8 0x55f825a426c8 0x55f825a422f8
|       |         | | `-DeclRefExpr 0x55f825c20c28 <col:109> 'T *' lvalue Var 0x55f825c20338 's' 'T *'
|       |         | `-DeclRefExpr 0x55f825c20ce8 <col:113> 'const V' lvalue ParmVar 0x55f825bf8d88 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55f825c20d28 <col:120> 'bool' true
|       `-DeclRefExpr 0x55f825c20e80 <col:128> 'Args::Slot *' lvalue Var 0x55f825c20060 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55f825bf9498 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x55f825bf8fe0 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825bf9058 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825bf93f8 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55f825bf9118 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bf9198 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55f825bf9210 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55f825bf92b8 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x55f825c21ac8 <col:75, line:754:5>
|     |-DeclStmt 0x55f825c20f78 <line:749:9, col:26>
|     | `-VarDecl 0x55f825c20f10 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55f825c21a90 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x55f825c21ab0 <line:750:13, col:58>
|       | `-VarDecl 0x55f825c20fa0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55f825c21180 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55f825c21150 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55f825c21138 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55f825c21118 <col:26, col:58> 'String' (CXXTemporary 0x55f825c21118)
|       |           `-CXXMemberCallExpr 0x55f825c210a8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55f825c21018 <col:26> '<bound member function type>' ->find 0x55f825c16a28
|       |             | `-CXXThisExpr 0x55f825c21008 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55f825c210e0 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f825c21048 <col:31> 'const char *' lvalue ParmVar 0x55f825bf9118 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55f825c210f8 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f825c21068 <col:40> 'int' lvalue ParmVar 0x55f825bf9198 'flags' 'int'
|       |             `-DeclRefExpr 0x55f825c21088 <col:47> 'Args::Slot *' lvalue Var 0x55f825c20f10 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55f825c21238 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55f825c21220 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55f825c21200 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55f825c211d0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55f825852c08
|       |       `-ImplicitCastExpr 0x55f825c211b8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55f825c21198 <col:20> 'String' lvalue Var 0x55f825c20fa0 'str' 'String'
|       `-CompoundStmt 0x55f825c21a70 <col:61, line:753:9>
|         |-DeclStmt 0x55f825c21610 <line:751:13, col:63>
|         | `-VarDecl 0x55f825c21288 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55f825c215e0 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55f825c21550 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55f825c21598 <col:47> 'T' lvalue ParmVar 0x55f825bf92b8 'variable' 'T &'
|         |     `-UnaryOperator 0x55f825c215c8 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55f825c215b8 <col:58> 'Args *' this
|         `-CallExpr 0x55f825c21a40 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x55f825c21638 <col:13> '<bound member function type>' ->postparse 0x55f825c16c38
|           | `-CXXThisExpr 0x55f825c21628 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55f825c21a00 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55f825c21668 <col:23> 'T *' lvalue Var 0x55f825c21288 's' 'T *'
|           | `-CallExpr 0x55f825c219c0 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55f825c21850 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55f825c21898 <col:56> 'P' lvalue ParmVar 0x55f825bf9210 'parser' 'P'
|           |   |-DeclRefExpr 0x55f825c218b8 <col:64> 'String' lvalue Var 0x55f825c20fa0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55f825c21968 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55f825c218f8 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f825a43638 0x55f825a43258 0x55f825a42e88 0x55f825a42aa8 0x55f825a426c8 0x55f825a422f8
|           |   | `-DeclRefExpr 0x55f825c218d8 <col:70> 'T *' lvalue Var 0x55f825c21288 's' 'T *'
|           |   `-UnaryOperator 0x55f825c219a8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55f825c21998 <col:74> 'Args *' this
|           `-DeclRefExpr 0x55f825c21a20 <col:81> 'Args::Slot *' lvalue Var 0x55f825c20f10 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55f825bf9af8 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55f825bf9510 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55f825bf9588 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x55f825bf9608 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55f825bf9a58 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55f825bf96d0 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bf9750 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55f825bf97c8 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x55f825bf9868 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x55f825bf9908 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x55f825c22858 <col:98, line:762:5>
|     |-DeclStmt 0x55f825c21b60 <line:758:9, col:26>
|     | `-VarDecl 0x55f825c21af8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55f825c21d80 <line:759:9, col:55>
|     | `-VarDecl 0x55f825c21b88 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55f825c21d68 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55f825c21d38 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55f825c21d20 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55f825c21d00 <col:22, col:54> 'String' (CXXTemporary 0x55f825c21d00)
|     |           `-CXXMemberCallExpr 0x55f825c21c90 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55f825c21c00 <col:22> '<bound member function type>' ->find 0x55f825c16a28
|     |             | `-CXXThisExpr 0x55f825c21bf0 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55f825c21cc8 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55f825c21c30 <col:27> 'const char *' lvalue ParmVar 0x55f825bf96d0 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55f825c21ce0 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55f825c21c50 <col:36> 'int' lvalue ParmVar 0x55f825bf9750 'flags' 'int'
|     |             `-DeclRefExpr 0x55f825c21c70 <col:43> 'Args::Slot *' lvalue Var 0x55f825c21af8 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55f825c221a0 <line:760:9, col:59>
|     | `-VarDecl 0x55f825c21dd8 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55f825c22170 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55f825c220e0 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55f825c22128 <col:43> 'T' lvalue ParmVar 0x55f825bf9868 'variable' 'T &'
|     |     `-UnaryOperator 0x55f825c22158 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55f825c22148 <col:54> 'Args *' this
|     `-CallExpr 0x55f825c22828 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x55f825c221c8 <col:9> '<bound member function type>' ->postparse 0x55f825c16c38
|       | `-CXXThisExpr 0x55f825c221b8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55f825c227e8 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55f825c221f8 <col:19> 'T *' lvalue Var 0x55f825c21dd8 's' 'T *'
|       | `-ParenExpr 0x55f825c227c8 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x55f825c22798 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55f825c22780 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55f825c22768 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55f825c22748 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55f825c22718 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55f825852c08
|       |     |       `-ImplicitCastExpr 0x55f825c22700 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55f825c22218 <col:25> 'String' lvalue Var 0x55f825c21b88 'str' 'String'
|       |     |-CallExpr 0x55f825c22570 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55f825c22400 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x55f825c22448 <col:59> 'P' lvalue ParmVar 0x55f825bf97c8 'parser' 'P'
|       |     | |-DeclRefExpr 0x55f825c22468 <col:67> 'String' lvalue Var 0x55f825c21b88 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55f825c22518 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55f825c224a8 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f825a43638 0x55f825a43258 0x55f825a42e88 0x55f825a42aa8 0x55f825a426c8 0x55f825a422f8
|       |     | | `-DeclRefExpr 0x55f825c22488 <col:73> 'T *' lvalue Var 0x55f825c21dd8 's' 'T *'
|       |     | `-UnaryOperator 0x55f825c22558 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55f825c22548 <col:77> 'Args *' this
|       |     `-ParenExpr 0x55f825c226e0 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x55f825c226c0 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x55f825c22690 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55f825c22640 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55f825c225d0 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f825a43638 0x55f825a43258 0x55f825a42e88 0x55f825a42aa8 0x55f825a426c8 0x55f825a422f8
|       |         | | `-DeclRefExpr 0x55f825c225b0 <col:87> 'T *' lvalue Var 0x55f825c21dd8 's' 'T *'
|       |         | `-DeclRefExpr 0x55f825c22670 <col:91> 'const V' lvalue ParmVar 0x55f825bf9908 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55f825c226b0 <col:98> 'bool' true
|       `-DeclRefExpr 0x55f825c22808 <col:106> 'Args::Slot *' lvalue Var 0x55f825c21af8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55f825bfa168 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x55f825bf9b78 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825bf9bf8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55f825bf9c78 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55f825bfa0c8 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55f825bf9d40 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bf9dc0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55f825bf9e38 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x55f825bf9ed8 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x55f825bf9f78 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x55f825c23838 <col:60, line:773:5>
|     |-DeclStmt 0x55f825c22900 <line:767:9, col:26>
|     | `-VarDecl 0x55f825c22898 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55f825c23800 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x55f825c23820 <line:768:13, col:58>
|       | `-VarDecl 0x55f825c22928 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55f825c22b08 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55f825c22ad8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55f825c22ac0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55f825c22aa0 <col:26, col:58> 'String' (CXXTemporary 0x55f825c22aa0)
|       |           `-CXXMemberCallExpr 0x55f825c22a30 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55f825c229a0 <col:26> '<bound member function type>' ->find 0x55f825c16a28
|       |             | `-CXXThisExpr 0x55f825c22990 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55f825c22a68 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f825c229d0 <col:31> 'const char *' lvalue ParmVar 0x55f825bf9d40 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55f825c22a80 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f825c229f0 <col:40> 'int' lvalue ParmVar 0x55f825bf9dc0 'flags' 'int'
|       |             `-DeclRefExpr 0x55f825c22a10 <col:47> 'Args::Slot *' lvalue Var 0x55f825c22898 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55f825c22bc0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55f825c22ba8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55f825c22b88 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55f825c22b58 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55f825852c08
|       |       `-ImplicitCastExpr 0x55f825c22b40 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55f825c22b20 <col:20> 'String' lvalue Var 0x55f825c22928 'str' 'String'
|       `-CompoundStmt 0x55f825c237d8 <col:61, line:772:9>
|         |-DeclStmt 0x55f825c22f00 <line:769:13, col:66>
|         | `-VarDecl 0x55f825c22c18 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x55f825c22ed0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55f825c22e40 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55f825c22e88 <col:49> 'T1' lvalue ParmVar 0x55f825bf9ed8 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x55f825c22eb8 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55f825c22ea8 <col:61> 'Args *' this
|         |-DeclStmt 0x55f825c23270 <line:770:13, col:66>
|         | `-VarDecl 0x55f825c22f88 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x55f825c23240 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55f825c231b0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55f825c231f8 <col:49> 'T2' lvalue ParmVar 0x55f825bf9f78 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x55f825c23228 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55f825c23218 <col:61> 'Args *' this
|         `-CallExpr 0x55f825c237a8 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x55f825c23298 <col:13> '<bound member function type>' ->postparse 0x55f825c16c38
|           | `-CXXThisExpr 0x55f825c23288 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55f825c23768 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x55f825c23308 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x55f825c232c8 <col:23> 'T1 *' lvalue Var 0x55f825c22c18 's1' 'T1 *'
|           | | `-DeclRefExpr 0x55f825c232e8 <col:29> 'T2 *' lvalue Var 0x55f825c22f88 's2' 'T2 *'
|           | `-CallExpr 0x55f825c23720 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55f825c234f0 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55f825c23538 <col:63> 'P' lvalue ParmVar 0x55f825bf9e38 'parser' 'P'
|           |   |-DeclRefExpr 0x55f825c23558 <col:71> 'String' lvalue Var 0x55f825c22928 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55f825c23608 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55f825c23598 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f825a43638 0x55f825a43258 0x55f825a42e88 0x55f825a42aa8 0x55f825a426c8 0x55f825a422f8
|           |   | `-DeclRefExpr 0x55f825c23578 <col:77> 'T1 *' lvalue Var 0x55f825c22c18 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x55f825c236c8 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55f825c23658 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f825a43638 0x55f825a43258 0x55f825a42e88 0x55f825a42aa8 0x55f825a426c8 0x55f825a422f8
|           |   | `-DeclRefExpr 0x55f825c23638 <col:82> 'T2 *' lvalue Var 0x55f825c22f88 's2' 'T2 *'
|           |   `-UnaryOperator 0x55f825c23708 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55f825c236f8 <col:87> 'Args *' this
|           `-DeclRefExpr 0x55f825c23788 <col:94> 'Args::Slot *' lvalue Var 0x55f825c22898 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55f825bfa558 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x55f825bfa1e8 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f825bfa4b8 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55f825bfa2a0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bfa320 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55f825bfa398 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55f825c23d50 <col:67, line:780:5>
|     |-DeclStmt 0x55f825c238d0 <line:777:9, col:26>
|     | `-VarDecl 0x55f825c23868 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55f825c23d18 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x55f825c23d38 <line:778:13, col:58>
|       | `-VarDecl 0x55f825c238f8 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55f825c23ad8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55f825c23aa8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55f825c23a90 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55f825c23a70 <col:26, col:58> 'String' (CXXTemporary 0x55f825c23a70)
|       |           `-CXXMemberCallExpr 0x55f825c23a00 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55f825c23970 <col:26> '<bound member function type>' ->find 0x55f825c16a28
|       |             | `-CXXThisExpr 0x55f825c23960 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55f825c23a38 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f825c239a0 <col:31> 'const char *' lvalue ParmVar 0x55f825bfa2a0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55f825c23a50 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55f825c239c0 <col:40> 'int' lvalue ParmVar 0x55f825bfa320 'flags' 'int'
|       |             `-DeclRefExpr 0x55f825c239e0 <col:47> 'Args::Slot *' lvalue Var 0x55f825c23868 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55f825c23b90 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55f825c23b78 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55f825c23b58 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55f825c23b28 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55f825852c08
|       |       `-ImplicitCastExpr 0x55f825c23b10 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55f825c23af0 <col:20> 'String' lvalue Var 0x55f825c238f8 'str' 'String'
|       `-CallExpr 0x55f825c23ce8 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x55f825c23bb8 <col:13> '<bound member function type>' ->postparse 0x55f825c16c38
|         | `-CXXThisExpr 0x55f825c23ba8 <col:13> 'Args *' implicit this
|         |-CallExpr 0x55f825c23c98 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x55f825c23c08 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x55f825c23be8 <col:23> 'P' lvalue ParmVar 0x55f825bfa398 'parser' 'P'
|         | |-DeclRefExpr 0x55f825c23c50 <col:36> 'String' lvalue Var 0x55f825c238f8 'str' 'String'
|         | `-UnaryOperator 0x55f825c23c80 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x55f825c23c70 <col:42> 'Args *' this
|         `-DeclRefExpr 0x55f825c23cc8 <col:49> 'Args::Slot *' lvalue Var 0x55f825c23868 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55f825bfa8f8 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55f825bfa5c8 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55f825bfa858 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55f825bfa680 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bfa700 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55f825bfa778 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x55f825c246c0 <col:71, line:792:5>
|     |-DeclStmt 0x55f825c23de8 <line:784:9, col:26>
|     | `-VarDecl 0x55f825c23d80 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55f825c23eb8 <line:785:9, col:29>
|     | `-VarDecl 0x55f825c23e18 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55f825c23ea0 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55f825c23e80 <col:28> 'int' 1
|     |-WhileStmt 0x55f825c24570 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x55f825c24590 <line:786:16, col:61>
|     | | `-VarDecl 0x55f825c23ee0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55f825c240c0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55f825c24090 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55f825c24078 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55f825c24058 <col:29, col:61> 'String' (CXXTemporary 0x55f825c24058)
|     | |           `-CXXMemberCallExpr 0x55f825c23fe8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55f825c23f58 <col:29> '<bound member function type>' ->find 0x55f825c16a28
|     | |             | `-CXXThisExpr 0x55f825c23f48 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55f825c24020 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55f825c23f88 <col:34> 'const char *' lvalue ParmVar 0x55f825bfa680 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55f825c24038 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55f825c23fa8 <col:43> 'int' lvalue ParmVar 0x55f825bfa700 'flags' 'int'
|     | |             `-DeclRefExpr 0x55f825c23fc8 <col:50> 'Args::Slot *' lvalue Var 0x55f825c23d80 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55f825c24178 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55f825c24160 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55f825c24140 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55f825c24110 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55f825852c08
|     | |       `-ImplicitCastExpr 0x55f825c240f8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55f825c240d8 <col:23> 'String' lvalue Var 0x55f825c23ee0 'str' 'String'
|     | `-CompoundStmt 0x55f825c24548 <col:64, line:790:9>
|     |   |-CallExpr 0x55f825c242d0 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x55f825c241a0 <col:13> '<bound member function type>' ->postparse 0x55f825c16c38
|     |   | | `-CXXThisExpr 0x55f825c24190 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55f825c24280 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55f825c241f0 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55f825c241d0 <col:23> 'P' lvalue ParmVar 0x55f825bfa778 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55f825c24238 <col:36> 'String' lvalue Var 0x55f825c23ee0 'str' 'String'
|     |   | | `-UnaryOperator 0x55f825c24268 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55f825c24258 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x55f825c242b0 <col:49> 'Args::Slot *' lvalue Var 0x55f825c23d80 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55f825c24468 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55f825c24300 <col:13> 'int' lvalue Var 0x55f825c23e18 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55f825c24450 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55f825c24430 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55f825c24398 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55f825c24378 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55f825c24360 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55f825c24320 <col:28> 'int' lvalue Var 0x55f825c23e18 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55f825c24340 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55f825c24418 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55f825c243e8 <col:49> 'bool' lvalue ->_read_status 0x55f825bf2ac0
|     |   |         `-ImplicitCastExpr 0x55f825c243c8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55f825c243b8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55f825c24518 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55f825c24488 <col:13> 'int' lvalue ParmVar 0x55f825bfa700 'flags' 'int'
|     |     `-UnaryOperator 0x55f825c24500 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55f825c244e8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55f825c244c8 <col:23> 'const int' lvalue Var 0x55f825bdb998 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55f825c246a0 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55f825c245d8 <col:9> 'bool' lvalue ->_read_status 0x55f825bf2ac0
|       | `-ImplicitCastExpr 0x55f825c245b8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55f825c245a8 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55f825c24680 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55f825c24660 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55f825c24648 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55f825c24608 <col:25> 'int' lvalue Var 0x55f825c23e18 'read_status' 'int'
|           `-IntegerLiteral 0x55f825c24628 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55f825bfadd8 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55f825bfa968 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825bfa9e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825bfad38 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55f825bfaaa8 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bfab28 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55f825bfaba0 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x55f825bfac48 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x55f825c25650 <col:84, line:805:5>
|     |-DeclStmt 0x55f825c24768 <line:796:9, col:26>
|     | `-VarDecl 0x55f825c24700 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55f825c24838 <line:797:9, col:29>
|     | `-VarDecl 0x55f825c24798 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55f825c24820 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55f825c24800 <col:28> 'int' 1
|     |-DeclStmt 0x55f825c24b70 <line:798:9, col:71>
|     | `-VarDecl 0x55f825c24888 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55f825c24b40 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55f825c24ab0 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x55f825c24af8 <col:55> 'T' lvalue ParmVar 0x55f825bfac48 'variable' 'T &'
|     |     `-UnaryOperator 0x55f825c24b28 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55f825c24b18 <col:66> 'Args *' this
|     |-WhileStmt 0x55f825c25500 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x55f825c25520 <line:799:16, col:61>
|     | | `-VarDecl 0x55f825c24b98 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55f825c24d78 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55f825c24d48 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55f825c24d30 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55f825c24d10 <col:29, col:61> 'String' (CXXTemporary 0x55f825c24d10)
|     | |           `-CXXMemberCallExpr 0x55f825c24ca0 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55f825c24c10 <col:29> '<bound member function type>' ->find 0x55f825c16a28
|     | |             | `-CXXThisExpr 0x55f825c24c00 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55f825c24cd8 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55f825c24c40 <col:34> 'const char *' lvalue ParmVar 0x55f825bfaaa8 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55f825c24cf0 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55f825c24c60 <col:43> 'int' lvalue ParmVar 0x55f825bfab28 'flags' 'int'
|     | |             `-DeclRefExpr 0x55f825c24c80 <col:50> 'Args::Slot *' lvalue Var 0x55f825c24700 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55f825c24e30 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55f825c24e18 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55f825c24df8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55f825c24dc8 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55f825852c08
|     | |       `-ImplicitCastExpr 0x55f825c24db0 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55f825c24d90 <col:23> 'String' lvalue Var 0x55f825c24b98 'str' 'String'
|     | `-CompoundStmt 0x55f825c254d8 <col:64, line:803:9>
|     |   |-CallExpr 0x55f825c25260 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x55f825c24e58 <col:13> '<bound member function type>' ->postparse 0x55f825c16c38
|     |   | | `-CXXThisExpr 0x55f825c24e48 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x55f825c25220 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x55f825c24e88 <col:23> 'T *' lvalue Var 0x55f825c24888 's' 'T *'
|     |   | | `-CallExpr 0x55f825c251e0 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x55f825c25070 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x55f825c250b8 <col:56> 'P' lvalue ParmVar 0x55f825bfaba0 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x55f825c250d8 <col:64> 'String' lvalue Var 0x55f825c24b98 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x55f825c25188 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x55f825c25118 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f825a43638 0x55f825a43258 0x55f825a42e88 0x55f825a42aa8 0x55f825a426c8 0x55f825a422f8
|     |   | |   | `-DeclRefExpr 0x55f825c250f8 <col:70> 'T *' lvalue Var 0x55f825c24888 's' 'T *'
|     |   | |   `-UnaryOperator 0x55f825c251c8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x55f825c251b8 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x55f825c25240 <col:81> 'Args::Slot *' lvalue Var 0x55f825c24700 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55f825c253f8 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55f825c25290 <col:13> 'int' lvalue Var 0x55f825c24798 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55f825c253e0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55f825c253c0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55f825c25328 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55f825c25308 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55f825c252f0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55f825c252b0 <col:28> 'int' lvalue Var 0x55f825c24798 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55f825c252d0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55f825c253a8 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55f825c25378 <col:49> 'bool' lvalue ->_read_status 0x55f825bf2ac0
|     |   |         `-ImplicitCastExpr 0x55f825c25358 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55f825c25348 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55f825c254a8 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55f825c25418 <col:13> 'int' lvalue ParmVar 0x55f825bfab28 'flags' 'int'
|     |     `-UnaryOperator 0x55f825c25490 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55f825c25478 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55f825c25458 <col:23> 'const int' lvalue Var 0x55f825bdb998 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55f825c25630 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55f825c25568 <col:9> 'bool' lvalue ->_read_status 0x55f825bf2ac0
|       | `-ImplicitCastExpr 0x55f825c25548 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55f825c25538 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55f825c25610 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55f825c255f0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55f825c255d8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55f825c25598 <col:25> 'int' lvalue Var 0x55f825c24798 'read_status' 'int'
|           `-IntegerLiteral 0x55f825c255b8 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55f825bfb3b8 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x55f825bfae50 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55f825bfaec8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55f825bfb318 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55f825bfaf88 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55f825bfb008 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x55f825bfb080 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x55f825bfb1d0 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x55f825c29ee8 <col:87, line:821:5>
|     |-DeclStmt 0x55f825c25700 <line:809:9, col:26>
|     | `-VarDecl 0x55f825c25698 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55f825c257d0 <line:810:9, col:29>
|     | `-VarDecl 0x55f825c25730 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55f825c257b8 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55f825c25798 <col:28> 'int' 1
|     |-DeclStmt 0x55f825c25a18 <line:811:9, col:38>
|     | `-VarDecl 0x55f825c25900 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x55f825c259f0 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55f825c25978 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55f825c259d0 <col:29> 'Vector<T>' lvalue ParmVar 0x55f825bfb1d0 'variable' 'Vector<T> &'
|     |-WhileStmt 0x55f825c29d98 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x55f825c29db8 <line:812:16, col:61>
|     | | `-VarDecl 0x55f825c25a40 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55f825c296b0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55f825c29680 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55f825c29668 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55f825c29648 <col:29, col:61> 'String' (CXXTemporary 0x55f825c29648)
|     | |           `-CXXMemberCallExpr 0x55f825c25b48 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55f825c25ab8 <col:29> '<bound member function type>' ->find 0x55f825c16a28
|     | |             | `-CXXThisExpr 0x55f825c25aa8 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55f825c29610 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55f825c25ae8 <col:34> 'const char *' lvalue ParmVar 0x55f825bfaf88 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55f825c29628 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55f825c25b08 <col:43> 'int' lvalue ParmVar 0x55f825bfb008 'flags' 'int'
|     | |             `-DeclRefExpr 0x55f825c25b28 <col:50> 'Args::Slot *' lvalue Var 0x55f825c25698 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55f825c29768 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55f825c29750 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55f825c29730 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55f825c29700 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55f825852c08
|     | |       `-ImplicitCastExpr 0x55f825c296e8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55f825c296c8 <col:23> 'String' lvalue Var 0x55f825c25a40 'str' 'String'
|     | `-CompoundStmt 0x55f825c29d60 <col:64, line:819:9>
|     |   |-DeclStmt 0x55f825c29828 <line:813:13, col:23>
|     |   | `-VarDecl 0x55f825c29790 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x55f825c29808 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x55f825c299a8 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x55f825c29850 <col:13> '<bound member function type>' ->postparse 0x55f825c16c38
|     |   | | `-CXXThisExpr 0x55f825c29840 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55f825c29950 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55f825c298a0 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55f825c29880 <col:23> 'P' lvalue ParmVar 0x55f825bfb080 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55f825c298e8 <col:36> 'String' lvalue Var 0x55f825c25a40 'str' 'String'
|     |   | | |-DeclRefExpr 0x55f825c29908 <col:41> 'T' lvalue Var 0x55f825c29790 'sx' 'T'
|     |   | | `-UnaryOperator 0x55f825c29938 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55f825c29928 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x55f825c29988 <col:53> 'Args::Slot *' lvalue Var 0x55f825c25698 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x55f825c29b00 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x55f825c29a38 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x55f825c29a08 <col:17> 'bool' lvalue ->_read_status 0x55f825bf2ac0
|     |   | |   `-ImplicitCastExpr 0x55f825c299e8 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x55f825c299d8 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x55f825c29ad8 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x55f825c29a70 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x55f825c29a50 <col:17> 'Vector<T> *' lvalue Var 0x55f825c25900 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x55f825c29ab8 <col:30> 'T' lvalue Var 0x55f825c29790 'sx' 'T'
|     |   |-BinaryOperator 0x55f825c29c80 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55f825c29b18 <col:13> 'int' lvalue Var 0x55f825c25730 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55f825c29c68 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55f825c29c48 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55f825c29bb0 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55f825c29b90 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55f825c29b78 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55f825c29b38 <col:28> 'int' lvalue Var 0x55f825c25730 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55f825c29b58 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55f825c29c30 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55f825c29c00 <col:49> 'bool' lvalue ->_read_status 0x55f825bf2ac0
|     |   |         `-ImplicitCastExpr 0x55f825c29be0 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55f825c29bd0 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55f825c29d30 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55f825c29ca0 <col:13> 'int' lvalue ParmVar 0x55f825bfb008 'flags' 'int'
|     |     `-UnaryOperator 0x55f825c29d18 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55f825c29d00 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55f825c29ce0 <col:23> 'const int' lvalue Var 0x55f825bdb998 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55f825c29ec8 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55f825c29e00 <col:9> 'bool' lvalue ->_read_status 0x55f825bf2ac0
|       | `-ImplicitCastExpr 0x55f825c29de0 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55f825c29dd0 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55f825c29ea8 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55f825c29e88 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55f825c29e70 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55f825c29e30 <col:25> 'int' lvalue Var 0x55f825c25730 'read_status' 'int'
|           `-IntegerLiteral 0x55f825c29e50 <col:40> 'int' 1
|-AccessSpecDecl 0x55f825bfb430 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x55f825bfb458 prev 0x55f825bd9c98 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x55f825bfb550 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x55f825bfb640 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x55f825c29f20 <col:16, line:828:9>
| |-CXXDestructorDecl 0x55f825bfb730 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x55f825c29f30 <col:25, line:830:9>
| |-CXXMethodDecl 0x55f825bfb830 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x55f825bfb8e0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x55f825bfb988 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55f825bfb988
| | `-ParmVarDecl 0x55f825bfba98 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x55f825bfc258 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55f825bfc258
|   `-ParmVarDecl 0x55f825bfc368 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x55f825bfbb08 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x55f825bfbc68 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x55f825bfbe60 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x55f825bfbd10 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x55f825bfbd88 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x55f825c2a110 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x55f825bfc118 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x55f825c29f80 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55f825c29f40 <col:20> 'void *' lvalue ParmVar 0x55f825bfbd10 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x55f825bfc180 '_slot' 'char *'
| | | `-CXXNewExpr 0x55f825c2a008 <col:32, col:45> 'char *' array Function 0x55f82566daf8 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x55f825c29ff0 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x55f825c29fc0 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x55f825bfbd88 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x55f825bfc1e0 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x55f825c2a0d0 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x55f825c2a090 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x55f825bfbd88 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x55f825c2a190 <col:61, line:838:9>
| |-CXXDestructorDecl 0x55f825bfbf60 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x55f825bfb730 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x55f825c2a218 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x55f825c2a1f8 <line:840:13, col:22> 'void' array Function 0x55f82566de58 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x55f825c2a1e0 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x55f825c2a1b0 <col:22> 'char *' lvalue ->_slot 0x55f825bfc180
| |         `-CXXThisExpr 0x55f825c2a1a0 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x55f825bfc060 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x55f825bfb830 Slot::store 'void ()' ]
| | `-CompoundStmt 0x55f825c2a408 <col:22, line:844:9>
| |   `-CallExpr 0x55f825c2a370 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x55f825c2a358 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55f825c2a338 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55f82577aee8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x55f825c2a3a8 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x55f825c2a288 <col:20> 'void *' lvalue ->_ptr 0x55f825bfc118
| |     |   `-CXXThisExpr 0x55f825c2a278 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x55f825c2a3d8 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x55f825c2a3c0 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x55f825c2a2c8 <col:26> 'char *' lvalue ->_slot 0x55f825bfc180
| |     |     `-CXXThisExpr 0x55f825c2a2b8 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x55f825c2a3f0 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x55f825c2a308 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x55f825bfc1e0
| |         `-CXXThisExpr 0x55f825c2a2f8 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x55f825bfc118 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x55f825bfc180 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x55f825bfc1e0 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x55f825bfc3d8 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55f825bfc3d8
| | `-ParmVarDecl 0x55f825bfc4e8 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x55f825bfc588 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55f825bfc588
|   `-ParmVarDecl 0x55f825bfc698 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x55f825bfc838 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x55f825bfc708 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x55f825bfc7a8 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x55f825bfcad0 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x55f825bfccc8 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x55f825bfcb98 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x55f825bfce48 '_ptr' 'T *'
|   | | `-ParenListExpr 0x55f825c2a440 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x55f825c2a420 <col:20> 'T *' lvalue ParmVar 0x55f825bfcb98 'ptr' 'T *'
|   | `-CompoundStmt 0x55f825c2a490 <col:25, line:854:9>
|   |-CXXMethodDecl 0x55f825bfcd98 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x55f825bfb830 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x55f825c2a650 <col:22, line:857:9>
|   |   `-CallExpr 0x55f825c2a620 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x55f825c2a4a0 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x55f825b4a9b8 0x55f825b26af8 0x55f8258465d8 0x55f8257f49d8
|   |     |-CXXOperatorCallExpr 0x55f825c2a5b0 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x55f825c2a540 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55f825a43638 0x55f825a43258 0x55f825a42e88 0x55f825a42aa8 0x55f825a426c8 0x55f825a422f8
|   |     | `-MemberExpr 0x55f825c2a510 <col:29> 'T *' lvalue ->_ptr 0x55f825bfce48
|   |     |   `-CXXThisExpr 0x55f825c2a500 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x55f825c2a5f0 <col:35> 'T' lvalue ->_slot 0x55f825bfcea8
|   |       `-CXXThisExpr 0x55f825c2a5e0 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x55f825bfce48 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x55f825bfcea8 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x55f825bfcf10 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x55f825bfd010 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x55f825bfd060 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825bfcff0 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x55f825bfcfd0 <col:31> 'int' 48
|-FieldDecl 0x55f825bfd088 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x55f825bfd0e8 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x55f825bfd148 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x55f825bfd280 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x55f825c162d0 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55f825c16330 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x55f825c163e0 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x55f825c16608 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x55f825c16510 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x55f825c16758 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x55f825c166c8 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x55f825c16a28 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x55f825c16818 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x55f825c16898 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x55f825c16940 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x55f825c16c38 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x55f825c16af0 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x55f825c16b68 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x55f825c16d08 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x55f825c16e58 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x55f825c16dc0 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x55f825c171e8 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x55f825c16f18 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x55f825c16f98 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x55f825c17040 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x55f825c170f8 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x55f825c17410 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x55f825c172c0 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x55f825c17338 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x55f825c17728 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x55f825c174c0 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x55f825c17688 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x55f825c17598 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.4*, %class.Vector.6, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.4*, %class.Vector.6, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class SecondsArg
         0 |   class NumArg (base) (empty)
         0 |   int fraction_digits
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825a351a0 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825a352b8 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55f825a35348 <col:16, col:22> col:16 public
|-EnumDecl 0x55f825a35370 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55f825a35470 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55f825a356c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a35450 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55f825a35430 <col:21> 'int' 0
| |-EnumConstantDecl 0x55f825a35500 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55f825a356d8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a354e0 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55f825a354c0 <col:24> 'int' 22
| |-EnumConstantDecl 0x55f825a35590 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55f825a356f0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a35570 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55f825a35550 <col:24> 'int' 34
| |-EnumConstantDecl 0x55f825a35620 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55f825a35708 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a35600 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55f825a355e0 <col:25> 'int' 95
| `-EnumConstantDecl 0x55f825a35670 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55f825a37080 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55f825a374b8 <col:7>
|-CXXConstructorDecl 0x55f825a37188 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55f825a37188
| `-ParmVarDecl 0x55f825a37298 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55f825a37338 <col:7> col:7 implicit used constexpr NumArg 'void (NumArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825a37448 <col:7> col:7 'NumArg &&'
| `-CompoundStmt 0x55f825cfc240 <col:7>
`-CXXDestructorDecl 0x55f825a39788 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825c4af98 <../dummy_inc/click/args.hh:1310:1, line:1321:1> line:1310:7 referenced class SecondsArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55f825c4b0f8 <col:1, col:7> col:7 implicit referenced class SecondsArg
|-AccessSpecDecl 0x55f825c4b188 <col:36, col:42> col:36 public
|-CXXConstructorDecl 0x55f825c4b298 <line:1311:5, line:1313:5> line:1311:5 used SecondsArg 'void (int)'
| |-ParmVarDecl 0x55f825c4b1c8 <col:16, col:24> col:20 used d 'int' cinit
| | `-IntegerLiteral 0x55f825c4bb40 <col:24> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55f825c4bc40 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55f825c4ba70 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x55f825c4bc00 <line:1312:27> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55f825c4bbc0 <col:27> 'int' lvalue ParmVar 0x55f825c4b1c8 'd' 'int'
| `-CompoundStmt 0x55f825c4bcb0 <col:30, line:1313:5>
|-CXXMethodDecl 0x55f825c4b4e8 <line:1314:5, col:99> col:10 parse_saturating 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x55f825c4b358 <col:27, col:41> col:41 str 'const String &'
| |-ParmVarDecl 0x55f825c4b3d0 <col:46, col:56> col:56 result 'uint32_t &'
| `-ParmVarDecl 0x55f825c4b448 <col:64, col:89> col:82 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55f825c4bb60 <col:89> 'const ArgContext' lvalue Var 0x55f825c2a678 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55f825c4b740 <line:1315:5, col:88> col:10 parse 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x55f825c4b5b0 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55f825c4b628 <col:35, col:45> col:45 result 'uint32_t &'
| `-ParmVarDecl 0x55f825c4b6a0 <col:53, col:78> col:71 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55f825c4bb80 <col:78> 'const ArgContext' lvalue Var 0x55f825c2a678 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55f825c4b9a0 <line:1317:5, col:86> col:10 parse 'bool (const String &, double &, const ArgContext &)'
| |-ParmVarDecl 0x55f825c4b808 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55f825c4b888 <col:35, col:43> col:43 result 'double &'
| `-ParmVarDecl 0x55f825c4b900 <col:51, col:76> col:69 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55f825c4bba0 <col:76> 'const ArgContext' lvalue Var 0x55f825c2a678 'blank_args' 'const ArgContext'
|-FieldDecl 0x55f825c4ba70 <line:1319:5, col:9> col:9 referenced fraction_digits 'int'
|-FieldDecl 0x55f825c4bad8 <line:1320:5, col:9> col:9 referenced status 'int'
|-CXXConstructorDecl 0x55f825cfb6d8 <line:1310:7> col:7 implicit constexpr SecondsArg 'void (const SecondsArg &)' inline default trivial noexcept-unevaluated 0x55f825cfb6d8
| `-ParmVarDecl 0x55f825cfb7e8 <col:7> col:7 'const SecondsArg &'
|-CXXConstructorDecl 0x55f825cfb888 <col:7> col:7 implicit used constexpr SecondsArg 'void (SecondsArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825cfb998 <col:7> col:7 used 'SecondsArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55f825cfc250 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55f825cfc220 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x55f825cfc1f0 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x55f825cfc1c0 <col:7> 'SecondsArg' lvalue ParmVar 0x55f825cfb998 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x55f825c4ba70 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x55f825cfc348 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55f825cfc318 <col:7> 'int' xvalue .fraction_digits 0x55f825c4ba70
| |     `-CXXStaticCastExpr 0x55f825cfc2e8 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x55f825cfc2b8 <col:7> 'SecondsArg' lvalue ParmVar 0x55f825cfb998 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x55f825c4bad8 'status' 'int'
| | `-ImplicitCastExpr 0x55f825cfc418 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55f825cfc3e8 <col:7> 'int' xvalue .status 0x55f825c4bad8
| |     `-CXXStaticCastExpr 0x55f825cfc3b8 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x55f825cfc388 <col:7> 'SecondsArg' lvalue ParmVar 0x55f825cfb998 '' 'SecondsArg &&'
| `-CompoundStmt 0x55f825cfc470 <col:7>
`-CXXDestructorDecl 0x55f825cfba60 <col:7> col:7 implicit referenced ~SecondsArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.SecondsArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.SecondsArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class AnnoArg
         0 |   int size
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825c4a870 <../dummy_inc/click/args.hh:1294:1, line:1301:1> line:1294:7 referenced class AnnoArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825c4a988 <col:1, col:7> col:7 implicit referenced class AnnoArg
|-AccessSpecDecl 0x55f825c4aa18 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55f825c4ab28 <line:1295:5, line:1297:5> line:1295:5 used AnnoArg 'void (int)'
| |-ParmVarDecl 0x55f825c4aa58 <col:13, col:17> col:17 used s 'int'
| |-CXXCtorInitializer Field 0x55f825c4ae78 'size' 'int'
| | `-ImplicitCastExpr 0x55f825c4af40 <line:1296:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55f825c4af00 <col:16> 'int' lvalue ParmVar 0x55f825c4aa58 's' 'int'
| `-CompoundStmt 0x55f825c4af88 <col:19, line:1297:5>
|-CXXMethodDecl 0x55f825c4ad80 <line:1298:5, col:83> col:10 parse 'bool (const String &, int &, const ArgContext &)'
| |-ParmVarDecl 0x55f825c4abe8 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55f825c4ac68 <col:35, col:40> col:40 result 'int &'
| `-ParmVarDecl 0x55f825c4ace0 <col:48, col:73> col:66 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55f825c4aee0 <col:73> 'const ArgContext' lvalue Var 0x55f825c2a678 'blank_args' 'const ArgContext'
|-AccessSpecDecl 0x55f825c4ae38 <line:1299:3, col:10> col:3 private
|-FieldDecl 0x55f825c4ae78 <line:1300:5, col:9> col:9 referenced size 'int'
|-CXXConstructorDecl 0x55f825cfd5d8 <line:1294:7> col:7 implicit constexpr AnnoArg 'void (const AnnoArg &)' inline default trivial noexcept-unevaluated 0x55f825cfd5d8
| `-ParmVarDecl 0x55f825cfd6e8 <col:7> col:7 'const AnnoArg &'
|-CXXConstructorDecl 0x55f825cfd788 <col:7> col:7 implicit used constexpr AnnoArg 'void (AnnoArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825cfd898 <col:7> col:7 used 'AnnoArg &&'
| |-CXXCtorInitializer Field 0x55f825c4ae78 'size' 'int'
| | `-ImplicitCastExpr 0x55f825cfe028 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55f825cfdfe0 <col:7> 'int' xvalue .size 0x55f825c4ae78
| |     `-CXXStaticCastExpr 0x55f825cfdfb0 <col:7> 'AnnoArg' xvalue static_cast<class AnnoArg &&> <NoOp>
| |       `-DeclRefExpr 0x55f825cfdf80 <col:7> 'AnnoArg' lvalue ParmVar 0x55f825cfd898 '' 'AnnoArg &&'
| `-CompoundStmt 0x55f825cfe070 <col:7>
`-CXXDestructorDecl 0x55f825cfd938 <col:7> col:7 implicit referenced ~AnnoArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.AnnoArg = type { i32 }
  NonVirtualBaseLLVMType:%class.AnnoArg = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f82566fac8 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f82566fbe8 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x55f82588c3f0 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f82588c4d0 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x55f82588c4d0
| `-ParmVarDecl 0x55f82588c5b8 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x55f82588c658 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x55f82588c658
| `-ParmVarDecl 0x55f82588c768 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x55f825a261c0 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825b65b50 <../dummy_inc/click/hashcontainer.hh:14:1, col:69> line:302:7 class HashContainer_const_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55f825b81598 prev 0x55f825b65b50 <col:1, col:7> col:7 implicit class HashContainer_const_iterator
|-AccessSpecDecl 0x55f825b81628 <col:38, col:44> col:38 public
|-TypedefDecl 0x55f825b817f0 <line:304:5, col:53> col:53 size_type 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type':'unsigned long'
| `-ElaboratedType 0x55f825b817a0 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type' sugar
|   `-TypedefType 0x55f825b656c0 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type' sugar
|     |-Typedef 0x55f825b64e80 'size_type'
|     `-TypedefType 0x55f8255bfb40 'size_t' sugar
|       |-Typedef 0x55f825586b20 'size_t'
|       `-BuiltinType 0x55f825516430 'unsigned long'
|-TypedefDecl 0x55f825b81990 <line:305:5, col:61> col:61 referenced bucket_count_type 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| `-ElaboratedType 0x55f825b81940 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type' sugar
|   `-TypedefType 0x55f825b65860 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type' sugar
|     |-Typedef 0x55f825b64ed8 'bucket_count_type'
|     `-TypedefType 0x55f82566fe50 'uint32_t' sugar
|       |-Typedef 0x55f82557f408 'uint32_t'
|       `-TypedefType 0x55f825558440 '__uint32_t' sugar
|         |-Typedef 0x55f825558038 '__uint32_t'
|         `-BuiltinType 0x55f825516410 'unsigned int'
|-CXXConstructorDecl 0x55f825b81a20 <line:308:5, line:309:5> line:308:5 HashContainer_const_iterator 'void ()'
|-CXXMethodDecl 0x55f825b81b88 <line:312:5, line:314:5> line:312:8 used get 'IPRewriterEntry *() const'
|-CXXMethodDecl 0x55f825b81c58 <line:317:5, line:319:5> line:317:8 used operator-> 'IPRewriterEntry *() const'
|-CXXMethodDecl 0x55f825b81db8 <line:323:5, line:325:5> line:323:8 operator* 'IPRewriterEntry &() const'
|-CXXMethodDecl 0x55f825b81e68 <line:328:5, line:330:5> line:328:17 used live 'bool () const' inline
|-TypedefDecl 0x55f825b81ff8 <line:332:5, col:73> col:48 unspecified_bool_type 'IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const'
| `-MemberPointerType 0x55f825b81f90 'IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const'
|   |-RecordType 0x55f825b65c50 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|   | `-ClassTemplateSpecialization 0x55f825b65b50 'HashContainer_const_iterator'
|   `-ParenType 0x55f825b81f20 'IPRewriterEntry *() const' sugar
|     `-FunctionProtoType 0x55f825b81b40 'IPRewriterEntry *() const' const cdecl
|       `-PointerType 0x55f825b81ae0 'IPRewriterEntry *'
|         `-SubstTemplateTypeParmType 0x55f825b81650 'IPRewriterEntry' sugar
|           |-TemplateTypeParmType 0x55f825ad5ec0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55f825ad5e68 'T'
|           `-RecordType 0x55f825b2f3c0 'IPRewriterEntry'
|             `-CXXRecord 0x55f825b32760 'IPRewriterEntry'
|-CXXConversionDecl 0x55f825b82110 <line:334:5, line:336:5> line:334:12 operator IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55f825b82368 <line:339:5, line:341:5> line:339:32 hashcontainer 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *() const'
|-CXXMethodDecl 0x55f825b82488 <line:344:5, line:346:5> line:344:23 bucket 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type () const'
|-CXXMethodDecl 0x55f825b82538 <line:349:5, line:361:5> line:349:10 used operator++ 'void ()'
|-CXXMethodDecl 0x55f825b82678 <line:364:5, line:366:5> line:364:10 operator++ 'void (int)'
| `-ParmVarDecl 0x55f825b825e8 <col:21> col:24 'int'
|-AccessSpecDecl 0x55f825b82730 <line:368:3, col:10> col:3 private
|-FieldDecl 0x55f825b82768 <line:370:5, col:8> col:8 referenced _element 'IPRewriterEntry *'
|-FieldDecl 0x55f825b82800 <line:371:5, col:9> col:9 referenced _pprev 'IPRewriterEntry **'
|-FieldDecl 0x55f825b82860 <line:372:5, col:23> col:23 referenced _bucket 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
|-FieldDecl 0x55f825b829a8 <line:373:5, col:32> col:32 referenced _hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x55f825b82c08 <line:375:5, line:385:5> line:375:12 HashContainer_const_iterator 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *)' inline
| `-ParmVarDecl 0x55f825b82af8 <col:41, col:68> col:68 hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x55f825b83098 <line:387:5, line:390:5> line:387:12 HashContainer_const_iterator 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *, HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type, IPRewriterEntry **, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55f825b82dc8 <col:41, col:68> col:68 hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| |-ParmVarDecl 0x55f825b82e40 <col:72, col:90> col:90 b 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x55f825b82ec0 <col:93, col:97> col:97 pprev 'IPRewriterEntry **'
| `-ParmVarDecl 0x55f825b82f38 <col:104, col:107> col:107 element 'IPRewriterEntry *'
|-FriendDecl 0x55f825b83278 <line:392:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55f825b833c8 <line:393:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXDestructorDecl 0x55f825b844c0 <line:302:7> col:7 implicit ~HashContainer_const_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f825b845f8 <col:7> col:7 implicit constexpr HashContainer_const_iterator 'void (const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55f825b845f8
| `-ParmVarDecl 0x55f825b84708 <col:7> col:7 'const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXConstructorDecl 0x55f825b847a8 <col:7> col:7 implicit used constexpr HashContainer_const_iterator 'void (HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825b848b8 <col:7> col:7 used 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55f825b82768 '_element' 'IPRewriterEntry *'
| | `-ImplicitCastExpr 0x55f825b84e58 <col:7> 'IPRewriterEntry *' <LValueToRValue>
| |   `-MemberExpr 0x55f825b84e10 <col:7> 'IPRewriterEntry *' xvalue ._element 0x55f825b82768
| |     `-CXXStaticCastExpr 0x55f825b84de0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55f825b84db0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55f825b848b8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55f825b82800 '_pprev' 'IPRewriterEntry **'
| | `-ImplicitCastExpr 0x55f825b84f40 <col:7> 'IPRewriterEntry **' <LValueToRValue>
| |   `-MemberExpr 0x55f825b84ef8 <col:7> 'IPRewriterEntry **' xvalue ._pprev 0x55f825b82800
| |     `-CXXStaticCastExpr 0x55f825b84ec8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55f825b84e98 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55f825b848b8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55f825b82860 '_bucket' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| | `-ImplicitCastExpr 0x55f825b85028 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55f825b84fe0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x55f825b82860
| |     `-CXXStaticCastExpr 0x55f825b84fb0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55f825b84f80 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55f825b848b8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55f825b829a8 '_hc' 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| | `-ImplicitCastExpr 0x55f825b85110 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' <LValueToRValue>
| |   `-MemberExpr 0x55f825b850c8 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' xvalue ._hc 0x55f825b829a8
| |     `-CXXStaticCastExpr 0x55f825b85098 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55f825b85068 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55f825b848b8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| `-CompoundStmt 0x55f825b85170 <col:7>
|-CXXMethodDecl 0x55f825b85bb8 <col:7> col:7 implicit operator= 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55f825b85bb8
| `-ParmVarDecl 0x55f825b85cc8 <col:7> col:7 'const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x55f825b85d38 <col:7> col:7 implicit used operator= 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f825b85e48 <col:7> col:7 used 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
  `-CompoundStmt 0x55f825b86b40 <col:7>
    |-BinaryOperator 0x55f825b867d0 <col:7> 'IPRewriterEntry *' lvalue '='
    | |-MemberExpr 0x55f825b86788 <col:7> 'IPRewriterEntry *' lvalue ->_element 0x55f825b82768
    | | `-CXXThisExpr 0x55f825b86778 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55f825b867b8 <col:7> 'IPRewriterEntry *' <LValueToRValue>
    |   `-MemberExpr 0x55f825b86748 <col:7> 'IPRewriterEntry *' xvalue ._element 0x55f825b82768
    |     `-CXXStaticCastExpr 0x55f825b86718 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55f825b866e8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55f825b85e48 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x55f825b868d8 <col:7> 'IPRewriterEntry **' lvalue '='
    | |-MemberExpr 0x55f825b86890 <col:7> 'IPRewriterEntry **' lvalue ->_pprev 0x55f825b82800
    | | `-CXXThisExpr 0x55f825b86880 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55f825b868c0 <col:7> 'IPRewriterEntry **' <LValueToRValue>
    |   `-MemberExpr 0x55f825b86850 <col:7> 'IPRewriterEntry **' xvalue ._pprev 0x55f825b82800
    |     `-CXXStaticCastExpr 0x55f825b86820 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55f825b867f0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55f825b85e48 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x55f825b869e0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' lvalue '='
    | |-MemberExpr 0x55f825b86998 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' lvalue ->_bucket 0x55f825b82860
    | | `-CXXThisExpr 0x55f825b86988 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55f825b869c8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x55f825b86958 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x55f825b82860
    |     `-CXXStaticCastExpr 0x55f825b86928 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55f825b868f8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55f825b85e48 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x55f825b86ae8 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' lvalue '='
    | |-MemberExpr 0x55f825b86aa0 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' lvalue ->_hc 0x55f825b829a8
    | | `-CXXThisExpr 0x55f825b86a90 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55f825b86ad0 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' <LValueToRValue>
    |   `-MemberExpr 0x55f825b86a60 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' xvalue ._hc 0x55f825b829a8
    |     `-CXXStaticCastExpr 0x55f825b86a30 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55f825b86a00 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55f825b85e48 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    `-ReturnStmt 0x55f825b86b30 <col:7>
      `-UnaryOperator 0x55f825b86b18 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55f825b86b08 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_const_iterator = type { %class.IPRewriterEntry*, %class.IPRewriterEntry**, i32, %class.HashContainer* }
  NonVirtualBaseLLVMType:%class.HashContainer_const_iterator = type { %class.IPRewriterEntry*, %class.IPRewriterEntry**, i32, %class.HashContainer* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825b65d88 <../dummy_inc/click/hashcontainer.hh:15:1, col:69> line:400:7 class HashContainer_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55f825b83450 prev 0x55f825b65d88 <col:1, col:7> col:7 implicit class HashContainer_iterator
|-AccessSpecDecl 0x55f825b834e0 <col:76, col:82> col:76 public
|-TypedefDecl 0x55f825b835d0 <line:402:5, col:48> col:48 inherited 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55f825b83530 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55f825b65c50 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55f825b65b50 'HashContainer_const_iterator'
|-CXXConstructorDecl 0x55f825b83660 <line:405:5, line:406:5> line:405:5 HashContainer_iterator 'void ()'
|-CXXMethodDecl 0x55f825b83718 <line:414:5, line:416:5> line:414:10 can_insert 'bool () const'
|-CXXMethodDecl 0x55f825b83938 <line:419:5, line:421:5> line:419:26 hashcontainer 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *() const'
|-AccessSpecDecl 0x55f825b839e8 <line:423:3, col:10> col:3 private
|-CXXConstructorDecl 0x55f825b83c18 <line:425:5, line:427:5> line:425:12 HashContainer_iterator 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *)' inline
| `-ParmVarDecl 0x55f825b83b08 <col:35, col:56> col:56 hc 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x55f825b841a8 <line:429:5, line:431:5> line:429:12 HashContainer_iterator 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *, typename inherited::bucket_count_type, IPRewriterEntry **, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55f825b83dd8 <col:35, col:56> col:56 hc 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| |-ParmVarDecl 0x55f825b83ef0 <col:60, col:98> col:98 b 'typename inherited::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x55f825b83fd0 <col:101, col:105> col:105 pprev 'IPRewriterEntry **'
| `-ParmVarDecl 0x55f825b84048 <col:112, col:115> col:115 element 'IPRewriterEntry *'
|-FriendDecl 0x55f825b84388 <line:433:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXDestructorDecl 0x55f825b843e0 <line:400:7> col:7 implicit referenced ~HashContainer_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f825b84928 <col:7> col:7 implicit constexpr HashContainer_iterator 'void (const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55f825b84928
| `-ParmVarDecl 0x55f825b84a38 <col:7> col:7 'const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXConstructorDecl 0x55f825b84ad8 <col:7> col:7 implicit used constexpr HashContainer_iterator 'void (HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825b84be8 <col:7> col:7 used 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| | `-CXXConstructExpr 0x55f825b85180 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' 'void (HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept'
| |   `-ImplicitCastExpr 0x55f825b84d90 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
| |     `-CXXStaticCastExpr 0x55f825b84d60 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55f825b84d30 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55f825b84be8 '' 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| `-CompoundStmt 0x55f825b85248 <col:7>
|-CXXMethodDecl 0x55f825b85a08 <col:7> col:7 implicit operator= 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55f825b85a08
| `-ParmVarDecl 0x55f825b85b18 <col:7> col:7 'const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x55f825b85eb8 <col:7> col:7 implicit used operator= 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f825b85fc8 <col:7> col:7 used 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
  `-CompoundStmt 0x55f825b86bd8 <col:7>
    |-CXXMemberCallExpr 0x55f825b86b78 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue
    | |-MemberExpr 0x55f825b86670 <col:7> '<bound member function type>' .operator= 0x55f825b85d38
    | | `-ImplicitCastExpr 0x55f825b865a0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
    | |   `-UnaryOperator 0x55f825b86588 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
    | |     `-CXXThisExpr 0x55f825b86578 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55f825b86650 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
    |   `-DeclRefExpr 0x55f825b86630 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55f825b85fc8 '' 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    `-ReturnStmt 0x55f825b86bc8 <col:7>
      `-UnaryOperator 0x55f825b86bb0 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55f825b86ba0 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  NonVirtualBaseLLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825a826b0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55f825a82800 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55f825a82880 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x55f825a83678 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55f825a83678
| `-ParmVarDecl 0x55f825a83788 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x55f825a83828 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55f825a83828
| `-ParmVarDecl 0x55f825a83938 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x55f825a839a8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f825a839a8
|-CXXMethodDecl 0x55f825a84278 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55f825a84278
| `-ParmVarDecl 0x55f825a84388 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
`-CXXMethodDecl 0x55f825a843f8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55f825a843f8
  `-ParmVarDecl 0x55f825a84508 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon.9 = type { {}* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825a829b0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55f825a82ad8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55f825a82b60 <line:296:2, col:23> col:23 w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x55f825a83ad8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55f825a83ad8
| `-ParmVarDecl 0x55f825a83be8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x55f825a83c88 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55f825a83c88
| `-ParmVarDecl 0x55f825a83d98 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x55f825a83e08 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f825a83e08
|-CXXMethodDecl 0x55f825a845a8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55f825a845a8
| `-ParmVarDecl 0x55f825a846b8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
`-CXXMethodDecl 0x55f825a84728 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55f825a84728
  `-ParmVarDecl 0x55f825a84838 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon.10 = type { {}* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825a7e038 prev 0x55f825a7d540 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 referenced class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55f825a7e130 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x55f825a7e1c0 <col:17, col:23> col:17 public
|-EnumDecl 0x55f825a7e1e8 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x55f825a7e2f0 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f040 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7e2d0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x55f825a7e2b0 <col:11> 'int' 1
| |-EnumConstantDecl 0x55f825a7e380 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f058 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7e360 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x55f825a7e340 <col:12> 'int' 2
| |-EnumConstantDecl 0x55f825a7e410 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f070 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7e3f0 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x55f825a7e3d0 <col:17> 'int' 4
| |-EnumConstantDecl 0x55f825a7e4a0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f088 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7e480 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x55f825a7e460 <col:16> 'int' 0
| |-EnumConstantDecl 0x55f825a7e530 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f0a0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7e510 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55f825a7e4f0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55f825a7e5c0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f0b8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7e5a0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x55f825a7e580 <col:10> 'int' 64
| |-EnumConstantDecl 0x55f825a7e650 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f0d0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7e630 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x55f825a7e610 <col:19> 'int' 128
| |-EnumConstantDecl 0x55f825a7e6e0 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f0e8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7e6c0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x55f825a7e6a0 <col:20> 'int' 256
| |-EnumConstantDecl 0x55f825a7e770 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f100 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7e750 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x55f825a7e730 <col:17> 'int' 512
| |-EnumConstantDecl 0x55f825a7e800 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f118 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7e7e0 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x55f825a7e7c0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x55f825a7e890 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f130 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7e870 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x55f825a7e850 <col:11> 'int' 2048
| |-EnumConstantDecl 0x55f825a7e920 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f148 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7e900 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x55f825a7e8e0 <col:16> 'int' 4096
| |-EnumConstantDecl 0x55f825a7e9b0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f160 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7e990 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x55f825a7e970 <col:13> 'int' 8192
| |-EnumConstantDecl 0x55f825a7ea40 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f178 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7ea20 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x55f825a7ea00 <col:15> 'int' 16384
| |-EnumConstantDecl 0x55f825a7eb10 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x55f825a7eaf0 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x55f825a7ead0 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55f825a7ea90 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x55f825a7eab0 <col:20> 'int' 26
| |-EnumConstantDecl 0x55f825a7ebe0 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x55f825a7ebc0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x55f825a7eba0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55f825a7eb60 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x55f825a7eb80 <col:27> 'int' 27
| |-EnumConstantDecl 0x55f825a7ec70 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f190 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7ec50 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x55f825a7ec30 <col:17> 'int' 28
| |-EnumConstantDecl 0x55f825a7ed40 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x55f825a7ed20 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x55f825a7ed00 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55f825a7ecc0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x55f825a7ece0 <col:18> 'int' EnumConstant 0x55f825a7ec70 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a7edd0 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f1a8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7edb0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x55f825a7ed90 <col:25> 'int' 8
| |-EnumConstantDecl 0x55f825a7ee60 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55f825a7f1c0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a7ee40 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x55f825a7ee20 <col:26> 'int' 16
| `-EnumConstantDecl 0x55f825a7eff0 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x55f825a7f1d8 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a7efd0 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x55f825a7efb0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x55f825a7ef70 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x55f825a7ef30 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x55f825a7eef0 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x55f825a7eeb0 <col:14> 'int' EnumConstant 0x55f825a7e2f0 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x55f825a7eed0 <col:23> 'int' EnumConstant 0x55f825a7e380 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x55f825a7ef10 <col:33> 'int' EnumConstant 0x55f825a7e410 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x55f825a7ef50 <col:48> 'int' EnumConstant 0x55f825a7edd0 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x55f825a7ef90 <col:71> 'int' EnumConstant 0x55f825a7ee60 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x55f825a7f238 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x55f825a84c68 <col:39, line:64:5>
|   `-ReturnStmt 0x55f825a84c58 <line:63:2, col:9>
|     `-MemberExpr 0x55f825a84c28 <col:9> 'const String' lvalue ->_name 0x55f825a82660
|       `-CXXThisExpr 0x55f825a84c18 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f825a7f2f8 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x55f825a84ce8 <col:35, line:71:5>
|   `-ReturnStmt 0x55f825a84cd8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x55f825a84cc0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55f825a84c90 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f825a82d70
|         `-CXXThisExpr 0x55f825a84c80 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f825a7f448 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x55f825a7f3b0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x55f825a84e68 <col:42, line:77:5>
|   `-ReturnStmt 0x55f825a84e58 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x55f825a84e40 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x55f825a84e10 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x55f825a84d70 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x55f825a84d40 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55f825a84d00 <col:9> 'int' lvalue ParmVar 0x55f825a7f3b0 'op' 'int'
|         | `-ImplicitCastExpr 0x55f825a84d58 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55f825a84d20 <col:15> 'Handler::Flags' EnumConstant 0x55f825a7e380 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x55f825a84da0 <col:25> 'void *const' lvalue ->_write_user_data 0x55f825a82d10
|         | `-CXXThisExpr 0x55f825a84d90 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x55f825a84de0 <col:44> 'void *const' lvalue ->_read_user_data 0x55f825a82ca8
|           `-CXXThisExpr 0x55f825a84dd0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f825a7f518 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x55f825a84ee8 <col:41, line:82:5>
|   `-ReturnStmt 0x55f825a84ed8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x55f825a84ec0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55f825a84e90 <col:9> 'void *const' lvalue ->_read_user_data 0x55f825a82ca8
|         `-CXXThisExpr 0x55f825a84e80 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f825a7f5e0 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x55f825a84f68 <col:42, line:87:5>
|   `-ReturnStmt 0x55f825a84f58 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x55f825a84f40 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55f825a84f10 <col:9> 'void *const' lvalue ->_write_user_data 0x55f825a82d10
|         `-CXXThisExpr 0x55f825a84f00 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f825a7f6a8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x55f825a7f748 <col:52> "" ""
|-CXXMethodDecl 0x55f825a7f7e0 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x55f825a7f880 <col:52> "" ""
|-CXXMethodDecl 0x55f825a7f910 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x55f825a85058 <col:34, line:98:5>
|   `-ReturnStmt 0x55f825a85048 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x55f825a85030 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55f825a85010 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55f825a84fe0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55f825a84f90 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f825a82d70
|         |   `-CXXThisExpr 0x55f825a84f80 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55f825a84ff8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55f825a84fc0 <col:18> 'Handler::Flags' EnumConstant 0x55f825a7e2f0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55f825a7f9d0 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x55f825a85148 <col:36, line:104:5>
|   `-ReturnStmt 0x55f825a85138 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x55f825a85120 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55f825a85100 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55f825a850d0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55f825a85080 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f825a82d70
|         |   `-CXXThisExpr 0x55f825a85070 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55f825a850e8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55f825a850b0 <col:18> 'Handler::Flags' EnumConstant 0x55f825a7e410 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x55f825a7fa90 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x55f825a85328 <col:38, line:113:5>
|   `-ReturnStmt 0x55f825a85318 <line:112:2, col:49>
|     `-BinaryOperator 0x55f825a852f8 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x55f825a852a0 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x55f825a85280 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55f825a85250 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55f825a85170 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f825a82d70
|       |   |   `-CXXThisExpr 0x55f825a85160 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55f825a85268 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55f825a85230 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x55f825a85210 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x55f825a851e0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55f825a851a0 <col:20> 'Handler::Flags' EnumConstant 0x55f825a7e2f0 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55f825a851f8 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55f825a851c0 <col:29> 'Handler::Flags' EnumConstant 0x55f825a7e650 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55f825a852e0 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55f825a852c0 <col:49> 'Handler::Flags' EnumConstant 0x55f825a7e2f0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55f825a7fb50 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x55f825a85418 <col:34, line:118:5>
|   `-ReturnStmt 0x55f825a85408 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x55f825a853f0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55f825a853d0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55f825a853a0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55f825a85350 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f825a82d70
|         |   `-CXXThisExpr 0x55f825a85340 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55f825a853b8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55f825a85380 <col:18> 'Handler::Flags' EnumConstant 0x55f825a7e380 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55f825a7fc10 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x55f825a855f8 <col:39, line:127:5>
|   `-ReturnStmt 0x55f825a855e8 <line:126:2, col:51>
|     `-BinaryOperator 0x55f825a855c8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x55f825a85570 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x55f825a85550 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55f825a85520 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55f825a85440 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f825a82d70
|       |   |   `-CXXThisExpr 0x55f825a85430 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55f825a85538 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55f825a85500 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x55f825a854e0 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x55f825a854b0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55f825a85470 <col:20> 'Handler::Flags' EnumConstant 0x55f825a7e380 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55f825a854c8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55f825a85490 <col:30> 'Handler::Flags' EnumConstant 0x55f825a7e6e0 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55f825a855b0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55f825a85590 <col:51> 'Handler::Flags' EnumConstant 0x55f825a7e380 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55f825a7fcd0 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x55f825a85700 <col:33, line:132:5>
|   `-ReturnStmt 0x55f825a856f0 <line:131:2, col:41>
|     `-BinaryOperator 0x55f825a856d0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x55f825a85650 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x55f825a85620 <col:9> '<bound member function type>' ->read_visible 0x55f825a7fa90
|       |   `-CXXThisExpr 0x55f825a85610 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x55f825a856b0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x55f825a85680 <col:27> '<bound member function type>' ->write_visible 0x55f825a7fc10
|           `-CXXThisExpr 0x55f825a85670 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x55f825a7fd90 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x55f825a85810 <col:51, line:138:5>
|   `-ReturnStmt 0x55f825a85800 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x55f825a857e8 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55f825a857c8 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55f825a857a8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55f825a85778 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55f825a85728 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f825a82d70
|           |   `-CXXThisExpr 0x55f825a85718 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55f825a85790 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55f825a85758 <col:26> 'Handler::Flags' EnumConstant 0x55f825a7e530 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55f825a7fe50 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x55f825a85920 <col:50, line:144:5>
|   `-ReturnStmt 0x55f825a85910 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x55f825a858f8 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55f825a858d8 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55f825a858b8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55f825a85888 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55f825a85838 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f825a82d70
|           |   `-CXXThisExpr 0x55f825a85828 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55f825a858a0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55f825a85868 <col:26> 'Handler::Flags' EnumConstant 0x55f825a7e530 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55f825a7ff10 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x55f825a85a10 <col:29, line:166:5>
|   `-ReturnStmt 0x55f825a85a00 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x55f825a859e8 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55f825a859c8 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55f825a85998 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55f825a85948 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f825a82d70
|         |   `-CXXThisExpr 0x55f825a85938 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55f825a859b0 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55f825a85978 <col:18> 'Handler::Flags' EnumConstant 0x55f825a7e5c0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x55f825a80198 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55f825a7ffc0 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x55f825a80038 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x55f825a800b0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f825a803a8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55f825a80260 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x55f825a802d8 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55f825a84b50 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55f825a84b30 <col:62> 'int' 0
| `-CompoundStmt 0x55f825a85cb0 <col:71, line:188:5>
|   `-ReturnStmt 0x55f825a85ca0 <line:187:2, col:36>
|     `-ExprWithCleanups 0x55f825a85c88 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x55f825a85c58 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55f825a85c40 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55f825a85c20 <col:9, col:36> 'String' (CXXTemporary 0x55f825a85c20)
|             `-CXXMemberCallExpr 0x55f825a85b80 <col:9, col:36> 'String'
|               |-MemberExpr 0x55f825a85b50 <col:9> '<bound member function type>' ->call_read 0x55f825a80198
|               | `-CXXThisExpr 0x55f825a85b40 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55f825a85bb8 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55f825a85a98 <col:19> 'Element *' lvalue ParmVar 0x55f825a80260 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x55f825a85be8 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x55f825a85bd0 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x55f825a85b00 <col:22, col:29> 'String' (CXXTemporary 0x55f825a85b00)
|               |     `-CXXTemporaryObjectExpr 0x55f825a85ac8 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x55f825a85c00 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x55f825a85b20 <col:32> 'ErrorHandler *' lvalue ParmVar 0x55f825a802d8 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x55f825a80640 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55f825a80468 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x55f825a804e0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55f825a80558 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55f825a807c8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x55f825a80708 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x55f825a809f8 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x55f825a80880 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55f825a808f8 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x55f825a80b10 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x55f825a85d10 <col:50, line:225:5>
|   `-ReturnStmt 0x55f825a85d00 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x55f825a85ce8 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x55f825a85cc8 <col:9> 'const Handler *' lvalue Var 0x55f825a82ea0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x55f825a80bb0 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x55f825a80cb0 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a81840 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a80c90 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55f825a80c70 <col:11> 'Handler::Flags' EnumConstant 0x55f825a7e2f0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a80d40 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a81858 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a80d20 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55f825a80d00 <col:12> 'Handler::Flags' EnumConstant 0x55f825a7e380 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a80dd0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a81870 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a80db0 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55f825a80d90 <col:17> 'Handler::Flags' EnumConstant 0x55f825a7e410 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a80e60 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a81888 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a80e40 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55f825a80e20 <col:16> 'Handler::Flags' EnumConstant 0x55f825a7e4a0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a80ef0 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a818a0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a80ed0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x55f825a80eb0 <col:19> 'Handler::Flags' EnumConstant 0x55f825a7e530 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a80f80 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a818b8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a80f60 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55f825a80f40 <col:10> 'Handler::Flags' EnumConstant 0x55f825a7e5c0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81010 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a818d0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a80ff0 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x55f825a80fd0 <col:19> 'Handler::Flags' EnumConstant 0x55f825a7e650 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a810a0 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a818e8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81080 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x55f825a81060 <col:20> 'Handler::Flags' EnumConstant 0x55f825a7e6e0 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81130 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a81900 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81110 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x55f825a810f0 <col:17> 'Handler::Flags' EnumConstant 0x55f825a7e770 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a811c0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a81918 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a811a0 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x55f825a81180 <col:15> 'Handler::Flags' EnumConstant 0x55f825a7e800 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81250 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a81930 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81230 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55f825a81210 <col:11> 'Handler::Flags' EnumConstant 0x55f825a7e890 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a812e0 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a81948 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a812c0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55f825a812a0 <col:16> 'Handler::Flags' EnumConstant 0x55f825a7e920 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81370 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a81960 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81350 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55f825a81330 <col:13> 'Handler::Flags' EnumConstant 0x55f825a7e9b0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81400 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a81978 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a813e0 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55f825a813c0 <col:15> 'Handler::Flags' EnumConstant 0x55f825a7ea40 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81490 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a81990 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81470 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x55f825a81450 <col:20> 'Handler::Flags' EnumConstant 0x55f825a7eb10 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81520 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a819a8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81500 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x55f825a814e0 <col:27> 'Handler::Flags' EnumConstant 0x55f825a7ebe0 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a815b0 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a819c0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81590 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55f825a81570 <col:22> 'Handler::Flags' EnumConstant 0x55f825a7ec70 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81640 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a819d8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81620 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x55f825a81600 <col:18> 'Handler::Flags' EnumConstant 0x55f825a7ed40 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a816d0 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a819f0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a816b0 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x55f825a81690 <col:25> 'Handler::Flags' EnumConstant 0x55f825a7edd0 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81760 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55f825a81a08 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81740 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x55f825a81720 <col:26> 'Handler::Flags' EnumConstant 0x55f825a7ee60 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x55f825a817f0 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x55f825a81a20 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a817d0 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x55f825a817b0 <col:20> 'Handler::Flags' EnumConstant 0x55f825a7eff0 'f_special' 'Handler::Flags'
|-EnumDecl 0x55f825a81a38 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x55f825a81b40 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f825a820a0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81b20 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55f825a81b00 <col:12> 'Handler::Flags' EnumConstant 0x55f825a7e2f0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81bd0 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f825a820b8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81bb0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55f825a81b90 <col:13> 'Handler::Flags' EnumConstant 0x55f825a7e380 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81c60 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f825a820d0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81c40 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55f825a81c20 <col:15> 'Handler::Flags' EnumConstant 0x55f825a7e410 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81cf0 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f825a820e8 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81cd0 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55f825a81cb0 <col:8> 'Handler::Flags' EnumConstant 0x55f825a7e5c0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81d80 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f825a82100 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81d60 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55f825a81d40 <col:9> 'Handler::Flags' EnumConstant 0x55f825a7e890 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81e10 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f825a82118 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81df0 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55f825a81dd0 <col:14> 'Handler::Flags' EnumConstant 0x55f825a7e920 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81ea0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f825a82130 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81e80 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55f825a81e60 <col:11> 'Handler::Flags' EnumConstant 0x55f825a7e9b0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81f30 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f825a82148 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81f10 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55f825a81ef0 <col:13> 'Handler::Flags' EnumConstant 0x55f825a7ea40 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55f825a81fc0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55f825a82160 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a81fa0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55f825a81f80 <col:20> 'Handler::Flags' EnumConstant 0x55f825a7ec70 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x55f825a82050 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x55f825a82178 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a82030 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x55f825a82010 <col:16> 'Handler::Flags' EnumConstant 0x55f825a7ed40 'f_user0' 'Handler::Flags'
|-EnumDecl 0x55f825a82190 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x55f825a82250 <col:25> "" ""
| |-EnumConstantDecl 0x55f825a82300 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x55f825a823e0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55f825a822e0 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55f825a822c0 <col:14> 'Handler::Flags' EnumConstant 0x55f825a7e4a0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x55f825a82390 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x55f825a823f8 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55f825a82370 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x55f825a82350 <col:17> 'Handler::Flags' EnumConstant 0x55f825a7e530 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55f825a82578 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x55f825a82420 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x55f825a824a0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x55f825a863d0 <col:70, line:284:5>
|   |-ParenExpr 0x55f825a861f0 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x55f825a861c0 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x55f825a85ef0 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55f825a85ec0 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x55f825a85e68 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x55f825a85e48 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x55f825a85e18 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x55f825a85d38 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55f825a82d70
|   |   |   |   |   `-CXXThisExpr 0x55f825a85d28 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x55f825a85e30 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x55f825a85df8 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x55f825a85dd8 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x55f825a85da8 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x55f825a85d68 <col:34> 'Handler::Flags' EnumConstant 0x55f825a7e2f0 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x55f825a85dc0 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x55f825a85d88 <col:43> 'Handler::Flags' EnumConstant 0x55f825a7edd0 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x55f825a85ea8 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x55f825a85e88 <col:69> 'Handler::Flags' EnumConstant 0x55f825a7e2f0 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x55f825a85f50 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55f825a85f30 <col:85> 'int' 0
|   |   `-CallExpr 0x55f825a86120 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x55f825a86108 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55f825a860e8 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55f825a86160 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a85fc0 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x55f825a86178 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55f825a86010 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x55f825a86190 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55f825a86048 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x55f825a861a8 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55f825a860d0 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55f825a860b8 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55f825a86068 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x55f825a863c0 <line:283:2, col:38>
|     `-ExprWithCleanups 0x55f825a863a8 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x55f825a86378 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55f825a86360 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55f825a86340 <col:9, col:38> 'String' (CXXTemporary 0x55f825a86340)
|             `-CallExpr 0x55f825a862d8 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x55f825a862c0 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x55f825a86250 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x55f825a82880
|               |   `-MemberExpr 0x55f825a86220 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x55f825a82948
|               |     `-CXXThisExpr 0x55f825a86210 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55f825a86308 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55f825a86280 <col:22> 'Element *' lvalue ParmVar 0x55f825a82420 'e' 'Element *'
|               `-ImplicitCastExpr 0x55f825a86320 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x55f825a862a0 <col:25> 'void *' lvalue ParmVar 0x55f825a824a0 'new_user_data' 'void *'
|-AccessSpecDecl 0x55f825a82628 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55f825a82660 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x55f825a826b0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55f825a82800 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55f825a82880 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x55f825a83678 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55f825a83678
| | `-ParmVarDecl 0x55f825a83788 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x55f825a83828 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55f825a83828
| | `-ParmVarDecl 0x55f825a83938 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x55f825a839a8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f825a839a8
| |-CXXMethodDecl 0x55f825a84278 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55f825a84278
| | `-ParmVarDecl 0x55f825a84388 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| `-CXXMethodDecl 0x55f825a843f8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55f825a843f8
|   `-ParmVarDecl 0x55f825a84508 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-FieldDecl 0x55f825a82948 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x55f825a829b0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55f825a82ad8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55f825a82b60 <line:296:2, col:23> col:23 w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x55f825a83ad8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55f825a83ad8
| | `-ParmVarDecl 0x55f825a83be8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x55f825a83c88 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55f825a83c88
| | `-ParmVarDecl 0x55f825a83d98 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x55f825a83e08 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55f825a83e08
| |-CXXMethodDecl 0x55f825a845a8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55f825a845a8
| | `-ParmVarDecl 0x55f825a846b8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| `-CXXMethodDecl 0x55f825a84728 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55f825a84728
|   `-ParmVarDecl 0x55f825a84838 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-FieldDecl 0x55f825a82c28 <col:5, line:297:7> col:7 _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x55f825a82ca8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x55f825a82d10 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x55f825a82d70 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x55f825a82dd8 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x55f825a82e40 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x55f825a82ea0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x55f825a82fc0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x55f825a82f18 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x55f825a84c00 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55f825a84be8 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x55f825a84bd0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55f825a84bb0 <col:30, col:37> 'String' (CXXTemporary 0x55f825a84bb0)
|           `-CXXTemporaryObjectExpr 0x55f825a84b78 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x55f825a83168 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x55f825a830a8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x55f825a832e8 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x55f825a83220 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x55f825a834a8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x55f825a834e8 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x55f825a834e8
| `-ParmVarDecl 0x55f825a835c8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x55f825a83f18 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x55f825a83f18
| `-ParmVarDecl 0x55f825a84028 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x55f825a840c8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x55f825a840c8
| `-ParmVarDecl 0x55f825a841d8 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x55f825a848a8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x55f825a848a8
| `-ParmVarDecl 0x55f825a849b8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x55f825a84a40 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x55f825a84a40

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon.9, %union.anon.10, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon.9, %union.anon.10, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPPortArg
         0 |   int ip_p
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825894d30 <../dummy_inc/click/ipaddress.hh:408:1, line:416:1> line:408:7 referenced class IPPortArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825894e48 <col:1, col:7> col:7 implicit referenced class IPPortArg
|-AccessSpecDecl 0x55f825894ed8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55f825894fe8 <line:409:5, line:412:5> line:409:5 used IPPortArg 'void (int)'
| |-ParmVarDecl 0x55f825894f18 <col:15, col:19> col:19 used p 'int'
| |-CXXCtorInitializer Field 0x55f825895418 'ip_p' 'int'
| | `-ImplicitCastExpr 0x55f8258954e0 <line:410:9> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55f8258954a0 <col:9> 'int' lvalue ParmVar 0x55f825894f18 'p' 'int'
| `-CompoundStmt 0x55f825895aa8 <col:12, line:412:5>
|   `-ParenExpr 0x55f825895a88 <line:411:2, col:175> 'void'
|     `-ConditionalOperator 0x55f825895a58 <col:3, col:174> 'void'
|       |-CXXStaticCastExpr 0x55f825895688 <col:3, col:45> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55f825895658 <col:23, col:42> 'bool' '&&'
|       |   |-BinaryOperator 0x55f8258955a0 <col:23, col:30> 'bool' '>'
|       |   | |-ImplicitCastExpr 0x55f825895588 <col:23> 'int' <LValueToRValue>
|       |   | | `-MemberExpr 0x55f825895538 <col:23> 'int' lvalue ->ip_p 0x55f825895418
|       |   | |   `-CXXThisExpr 0x55f825895528 <col:23> 'IPPortArg *' implicit this
|       |   | `-IntegerLiteral 0x55f825895568 <col:30> 'int' 0
|       |   `-BinaryOperator 0x55f825895638 <col:35, col:42> 'bool' '<'
|       |     |-ImplicitCastExpr 0x55f825895620 <col:35> 'int' <LValueToRValue>
|       |     | `-MemberExpr 0x55f8258955d0 <col:35> 'int' lvalue ->ip_p 0x55f825895418
|       |     |   `-CXXThisExpr 0x55f8258955c0 <col:35> 'IPPortArg *' implicit this
|       |     `-IntegerLiteral 0x55f825895600 <col:42> 'int' 256
|       |-CXXFunctionalCastExpr 0x55f8258956e8 <col:49, col:56> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55f8258956c8 <col:55> 'int' 0
|       `-CallExpr 0x55f8258959b8 <col:60, col:174> 'void'
|         |-ImplicitCastExpr 0x55f8258959a0 <col:60> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55f825895980 <col:60> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55f8255b6950 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55f8258959f8 <col:75> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55f8258957d8 <col:75> 'const char [23]' lvalue "ip_p > 0 && ip_p < 256"
|         |-ImplicitCastExpr 0x55f825895a10 <col:101> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55f825895848 <col:101> 'const char [32]' lvalue "../dummy_inc/click/ipaddress.hh"
|         |-ImplicitCastExpr 0x55f825895a28 <col:136> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55f825895880 <col:136> 'int' 411
|         `-ImplicitCastExpr 0x55f825895a40 <col:141, col:155> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55f825895968 <col:141, col:155> 'const char [26]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55f825895950 <col:155> 'const char [26]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55f825895918 <col:155> 'const char [26]' lvalue "IPPortArg::IPPortArg(int)"
|-CXXMethodDecl 0x55f825895348 <line:413:5, line:414:46> line:413:10 parse 'bool (const String &, uint16_t &, const ArgContext &) const'
| |-ParmVarDecl 0x55f8258950a8 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55f825895178 <col:35, col:45> col:45 result 'uint16_t &'
| `-ParmVarDecl 0x55f8258951f0 <line:414:9, col:34> col:27 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55f825895480 <col:34> 'const ArgContext' lvalue Var 0x55f8258837d0 'blank_args' 'const ArgContext'
|-FieldDecl 0x55f825895418 <line:415:5, col:9> col:9 referenced ip_p 'int'
|-CXXConstructorDecl 0x55f825d24f18 <line:408:7> col:7 implicit constexpr IPPortArg 'void (const IPPortArg &)' inline default trivial noexcept-unevaluated 0x55f825d24f18
| `-ParmVarDecl 0x55f825d25028 <col:7> col:7 'const IPPortArg &'
|-CXXConstructorDecl 0x55f825d250c8 <col:7> col:7 implicit used constexpr IPPortArg 'void (IPPortArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825d251d8 <col:7> col:7 used 'IPPortArg &&'
| |-CXXCtorInitializer Field 0x55f825895418 'ip_p' 'int'
| | `-ImplicitCastExpr 0x55f825d25940 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55f825d25910 <col:7> 'int' xvalue .ip_p 0x55f825895418
| |     `-CXXStaticCastExpr 0x55f825d258e0 <col:7> 'IPPortArg' xvalue static_cast<class IPPortArg &&> <NoOp>
| |       `-DeclRefExpr 0x55f825d258b0 <col:7> 'IPPortArg' lvalue ParmVar 0x55f825d251d8 '' 'IPPortArg &&'
| `-CompoundStmt 0x55f825d25988 <col:7>
`-CXXDestructorDecl 0x55f825d25278 <col:7> col:7 implicit referenced ~IPPortArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPPortArg = type { i32 }
  NonVirtualBaseLLVMType:%class.IPPortArg = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<8>
         0 |   char [8] x
           | [sizeof=8, dsize=8, align=1,
           |  nvsize=8, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825b51800 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 8
|-PackedAttr 0x55f825d526b0 <line:167:18>
|-CXXRecordDecl 0x55f825d52770 prev 0x55f825b51800 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55f825d52880 <line:166:5, col:13> col:10 x 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.2 = type { [8 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.2 = type { [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<unsigned int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   unsigned int * _ptr
        24 |   unsigned int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<_Bool>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   _Bool * _ptr
        24 |   _Bool _slot
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   int * _ptr
        24 |   int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct char_array<56>
         0 |   char [56] x
           | [sizeof=56, dsize=56, align=1,
           |  nvsize=56, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825b6d460 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 56
|-PackedAttr 0x55f825d877b8 <line:167:18>
|-CXXRecordDecl 0x55f825d87878 prev 0x55f825b6d460 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55f825d87988 <line:166:5, col:13> col:10 x 'char [56]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [56 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [56 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class IPAddress>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class IPAddress * _ptr
        24 |   class IPAddress _slot
        24 |     uint32_t _addr
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<unsigned short>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   unsigned short * _ptr
        24 |   unsigned short _slot
           | [sizeof=32, dsize=26, align=8,
           |  nvsize=26, nvalign=8]

*** Dumping AST Record Layout
         0 | class BoolArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<_Bool> (empty)
         0 |   class BoolArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825c48bf0 <../dummy_inc/click/args.hh:1257:1, line:1262:1> line:1257:7 referenced class BoolArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825c48d08 <col:1, col:7> col:7 implicit class BoolArg
|-AccessSpecDecl 0x55f825c48d98 <col:17, col:23> col:17 public
|-CXXMethodDecl 0x55f825c48fd8 <line:1258:5, col:91> col:17 used parse 'bool (const String &, bool &, const ArgContext &)' static
| |-ParmVarDecl 0x55f825c48dd0 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55f825c48e50 <col:42, col:48> col:48 result 'bool &'
| `-ParmVarDecl 0x55f825c48ec8 <col:56, col:81> col:74 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55f825c491f0 <col:81> 'const ArgContext' lvalue Var 0x55f825c2a678 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55f825c49130 <line:1259:5, line:1261:5> line:1259:19 unparse 'String (bool)' static
| |-ParmVarDecl 0x55f825c490a0 <col:27, col:32> col:32 used x 'bool'
| `-CompoundStmt 0x55f825c49348 <col:35, line:1261:5>
|   `-ReturnStmt 0x55f825c49338 <line:1260:9, col:24>
|     `-ExprWithCleanups 0x55f825c49320 <col:16, col:24> 'String'
|       `-CXXConstructExpr 0x55f825c492f0 <col:16, col:24> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55f825c492d8 <col:16, col:24> 'String' xvalue
|           `-CXXFunctionalCastExpr 0x55f825c492b0 <col:16, col:24> 'String' functional cast to class String <ConstructorConversion>
|             `-CXXBindTemporaryExpr 0x55f825c49290 <col:16, col:24> 'String' (CXXTemporary 0x55f825c49290)
|               `-CXXConstructExpr 0x55f825c49258 <col:16, col:24> 'String' 'void (bool)'
|                 `-ImplicitCastExpr 0x55f825c49240 <col:23> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x55f825c49220 <col:23> 'bool' lvalue ParmVar 0x55f825c490a0 'x' 'bool'
|-CXXConstructorDecl 0x55f825d74db8 <line:1257:7> col:7 implicit constexpr BoolArg 'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55f825d74e90 <col:7> col:7 implicit ~BoolArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f825d74fc8 <col:7> col:7 implicit constexpr BoolArg 'void (const BoolArg &)' inline default trivial noexcept-unevaluated 0x55f825d74fc8
| `-ParmVarDecl 0x55f825d750d8 <col:7> col:7 'const BoolArg &'
`-CXXConstructorDecl 0x55f825d75178 <col:7> col:7 implicit used constexpr BoolArg 'void (BoolArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f825d75288 <col:7> col:7 'BoolArg &&'
  `-CompoundStmt 0x55f825d75ee0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.BoolArg = type { i8 }
  NonVirtualBaseLLVMType:%class.BoolArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825c49388 <../dummy_inc/click/args.hh:1264:1, col:54> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'BoolArg'
|-TemplateArgument type 'bool'
|-CXXRecordDecl 0x55f825c49640 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55f825d74cc8 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f825d752f8 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<bool> &)' inline default trivial noexcept-unevaluated 0x55f825d752f8
| `-ParmVarDecl 0x55f825d75408 <col:19> col:19 'const DefaultArg<bool> &'
|-CXXConstructorDecl 0x55f825d754a8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<bool> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825d755b8 <col:19> col:19 used 'DefaultArg<bool> &&'
| |-CXXCtorInitializer 'BoolArg'
| | `-CXXConstructExpr 0x55f825d75ef0 <col:19> 'BoolArg' 'void (BoolArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55f825d75ec0 <col:19> 'BoolArg' xvalue <UncheckedDerivedToBase (BoolArg)>
| |     `-CXXStaticCastExpr 0x55f825d75e90 <col:19> 'DefaultArg<bool>' xvalue static_cast<struct DefaultArg<_Bool> &&> <NoOp>
| |       `-DeclRefExpr 0x55f825d75e60 <col:19> 'DefaultArg<bool>' lvalue ParmVar 0x55f825d755b8 '' 'DefaultArg<bool> &&'
| `-CompoundStmt 0x55f825d75f60 <col:19>
`-CXXDestructorDecl 0x55f825d75658 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPAddressArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<class IPAddress> (empty)
         0 |   class IPAddressArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55f825892170 prev 0x55f825883838 <../dummy_inc/click/ipaddress.hh:367:1, line:378:1> line:367:7 referenced class IPAddressArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55f825892268 <col:1, col:7> col:7 implicit class IPAddressArg
|-AccessSpecDecl 0x55f8258922f8 <col:22, col:28> col:22 public
|-CXXMethodDecl 0x55f825892720 <line:368:5, line:369:43> line:368:24 basic_parse 'const char *(const char *, const char *, unsigned char *, int &)' static
| |-ParmVarDecl 0x55f825892338 <col:36, col:48> col:48 begin 'const char *'
| |-ParmVarDecl 0x55f8258923b8 <col:55, col:67> col:67 end 'const char *'
| |-ParmVarDecl 0x55f8258924f0 <line:369:8, col:29> col:22 value 'unsigned char *':'unsigned char *'
| `-ParmVarDecl 0x55f8258925a0 <col:32, col:37> col:37 nbytes 'int &'
|-CXXMethodDecl 0x55f8258929e8 <line:370:5, line:371:44> line:370:17 used parse 'bool (const String &, IPAddress &, const ArgContext &)' static
| |-ParmVarDecl 0x55f8258927f0 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55f825892868 <col:42, col:53> col:53 result 'IPAddress &'
| `-ParmVarDecl 0x55f825892908 <line:371:9, col:34> col:27 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55f8258932e8 <col:34> 'const ArgContext' lvalue Var 0x55f8258837d0 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55f825892d38 <line:372:5, line:375:5> line:372:17 parse 'bool (const String &, struct in_addr &, const ArgContext &)' static
| |-ParmVarDecl 0x55f825892ab0 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x55f825892ba0 <col:42, col:58> col:58 used result 'struct in_addr &'
| |-ParmVarDecl 0x55f825892c18 <line:373:9, col:34> col:27 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x55f825893308 <col:34> 'const ArgContext' lvalue Var 0x55f8258837d0 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x55f8258934e8 <col:46, line:375:5>
|   `-ReturnStmt 0x55f8258934d8 <line:374:2, col:63>
|     `-CallExpr 0x55f8258934a0 <col:9, col:63> 'bool'
|       |-ImplicitCastExpr 0x55f825893488 <col:9> 'bool (*)(const String &, IPAddress &, const ArgContext &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55f825893440 <col:9> 'bool (const String &, IPAddress &, const ArgContext &)' lvalue CXXMethod 0x55f8258929e8 'parse' 'bool (const String &, IPAddress &, const ArgContext &)'
|       |-DeclRefExpr 0x55f8258933a0 <col:15> 'const String' lvalue ParmVar 0x55f825892ab0 'str' 'const String &'
|       |-CXXReinterpretCastExpr 0x55f8258933f0 <col:20, col:56> 'IPAddress' lvalue reinterpret_cast<class IPAddress &> <LValueBitCast>
|       | `-DeclRefExpr 0x55f8258933c0 <col:50> 'struct in_addr':'in_addr' lvalue ParmVar 0x55f825892ba0 'result' 'struct in_addr &'
|       `-DeclRefExpr 0x55f825893420 <col:59> 'const ArgContext' lvalue ParmVar 0x55f825892c18 'args' 'const ArgContext &'
|-CXXMethodDecl 0x55f825893218 <line:376:5, line:377:44> line:376:17 parse 'bool (const String &, Vector<IPAddress> &, const ArgContext &)' static
| |-ParmVarDecl 0x55f825892e00 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55f825893080 <col:42, col:61> col:61 result 'Vector<IPAddress> &'
| `-ParmVarDecl 0x55f8258930f8 <line:377:9, col:34> col:27 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55f825893328 <col:34> 'const ArgContext' lvalue Var 0x55f8258837d0 'blank_args' 'const ArgContext'
|-CXXConstructorDecl 0x55f825d8e698 <line:367:7> col:7 implicit constexpr IPAddressArg 'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55f825d8e770 <col:7> col:7 implicit ~IPAddressArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f825d8e8a8 <col:7> col:7 implicit constexpr IPAddressArg 'void (const IPAddressArg &)' inline default trivial noexcept-unevaluated 0x55f825d8e8a8
| `-ParmVarDecl 0x55f825d8e9b8 <col:7> col:7 'const IPAddressArg &'
`-CXXConstructorDecl 0x55f825d8ea58 <col:7> col:7 implicit used constexpr IPAddressArg 'void (IPAddressArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55f825d8eb68 <col:7> col:7 'IPAddressArg &&'
  `-CompoundStmt 0x55f825d8f820 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.IPAddressArg = type { i8 }
  NonVirtualBaseLLVMType:%class.IPAddressArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55f825894318 <../dummy_inc/click/ipaddress.hh:398:1, col:64> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IPAddressArg'
|-TemplateArgument type 'IPAddress'
|-CXXRecordDecl 0x55f825894578 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55f825d8e5a8 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55f825d8ebd8 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<IPAddress> &)' inline default trivial noexcept-unevaluated 0x55f825d8ebd8
| `-ParmVarDecl 0x55f825d8ece8 <col:19> col:19 'const DefaultArg<IPAddress> &'
|-CXXConstructorDecl 0x55f825d8ed88 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<IPAddress> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55f825d8ee98 <col:19> col:19 used 'DefaultArg<IPAddress> &&'
| |-CXXCtorInitializer 'IPAddressArg'
| | `-CXXConstructExpr 0x55f825d8f830 <col:19> 'IPAddressArg' 'void (IPAddressArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55f825d8f800 <col:19> 'IPAddressArg' xvalue <UncheckedDerivedToBase (IPAddressArg)>
| |     `-CXXStaticCastExpr 0x55f825d8f7d0 <col:19> 'DefaultArg<IPAddress>' xvalue static_cast<struct DefaultArg<class IPAddress> &&> <NoOp>
| |       `-DeclRefExpr 0x55f825d8f7a0 <col:19> 'DefaultArg<IPAddress>' lvalue ParmVar 0x55f825d8ee98 '' 'DefaultArg<IPAddress> &&'
| `-CompoundStmt 0x55f825d8f8a0 <col:19>
`-CXXDestructorDecl 0x55f825d8ef38 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.11 = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg.11 = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>
