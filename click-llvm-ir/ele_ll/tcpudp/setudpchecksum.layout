
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7653fd858 prev 0x55a7653f4ff8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a7653fd950 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55a7653fd9e0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55a7653fda58 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55a7653fdb18 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55a7653fdbe0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55a7653fdd58 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55a7653fdc90 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55a7653fde00 <col:24>
| `-OptimizeNoneAttr 0x55a7653fde58 <col:34>
|-CXXMethodDecl 0x55a7653fdea0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55a7653fe158 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55a7653fdf50 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55a7653fdfc8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55a7653fe048 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55a7653fe210 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55a7653fe248 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55a7653fe2b0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55a7653fe338 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55a7653fe658 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55a7653fe3f0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55a7653fe468 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55a7653fe4e0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55a7653fe560 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55a7653fe770 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55a7654060e8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55a7654060e8
| `-ParmVarDecl 0x55a7654061f8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55a765406298 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55a765406298
| `-ParmVarDecl 0x55a7654063a8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55a76552eae8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7651af320 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a7651af438 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55a7651af4c8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55a7651af598 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55a7651af680 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7651af898 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55a7651af740 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7651afa48 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55a7651af950 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55a7651afb90 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55a7651afb00 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55a7651afcd8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55a7651afc48 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7651afe20 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55a7651afd90 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7651afee8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55a7651b0030 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x55a7651affa0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55a7651b00f8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55a7651b0240 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55a7651b01b0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55a7651b03b8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55a7651b02f8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7651b0500 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55a7651b0470 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7651b05c8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55a7651b0788 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55a7651b0678 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a7651b06f0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7651b09d8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55a7651b0848 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a7651b08c0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a7651b0a88 <col:86> "" ""
|-CXXMethodDecl 0x55a7651b0cf8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55a7651b0b68 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55a7651b0be0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7651b0ea8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55a7651b0db8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55a7651b1058 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55a7651b0f60 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55a7651b1328 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55a7651b1110 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55a7651b1188 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a7651b1200 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7651b1608 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55a7651b13f0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55a7651b1468 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a7651b14e0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a7651b16c0 <col:115> "" ""
|-AccessSpecDecl 0x55a7651b1730 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55a7651b1768 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7651b2c80 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55a7651b2c80
| `-ParmVarDecl 0x55a7651b2d88 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55a7651b2e28 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55a7651b2e28
| `-ParmVarDecl 0x55a7651b2f38 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55a7651e8568 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a7653da360 <col:7>
|-CXXConstructorDecl 0x55a7651e8640 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55a7651e8640
| `-ParmVarDecl 0x55a7651e8758 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55a7651e87c8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55a7651e87c8
| `-ParmVarDecl 0x55a7651e88d8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55a7653dcd60 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a765455a10 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55a765455be8 prev 0x55a765455a10 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55a765455c78 <col:46, col:52> col:46 public
|-TypedefDecl 0x55a765455ca0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a765457870 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55a765457820 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55a765456150 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55a765456050 'type'
|     `-TemplateSpecializationType 0x55a765455fe0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55a765455ec0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55a765455ea0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55a765455e80 <col:24> 'unsigned long' 8
|       `-RecordType 0x55a765455fc0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55a765455ee0 'char_array'
|-TypedefDecl 0x55a765457928 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55a7654578f0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55a7654578d0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55a765457870 'type'
|     `-ElaboratedType 0x55a765457820 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55a765456150 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55a765456050 'type'
|         `-TemplateSpecializationType 0x55a765455fe0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55a765455ec0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55a765455ea0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55a765455e80 <col:24> 'unsigned long' 8
|           `-RecordType 0x55a765455fc0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55a765455ee0 'char_array'
|-CXXMethodDecl 0x55a765457aa8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55a7654579b8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55a765457b98 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55a765457c78 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55a765457c78
|-CXXMethodDecl 0x55a765457f48 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55a765457e50 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55a765458188 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55a765458000 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a765458078 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55a765458358 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55a765458248 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7654582c0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55a7654584b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55a765458588 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55a7654587d8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55a765458648 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55a7654586c0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55a765458a38 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55a7654588a8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55a765458920 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55a765458bf8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55a765458b08 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55a765458db8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55a765458cc0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55a765458e70 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a765458f20 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a765459158 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55a765458fd0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a765459048 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55a7654593f8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55a765459300 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55a7654594c0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55a765459510 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55a765459560 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7654c4908 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x55a7654cf8a8 prev 0x55a7654c4908 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a7654d08c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55a7654d0870 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x55a7654d0850 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x55a7654d0700 'type'
|     `-SubstTemplateTypeParmType 0x55a7654555e0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55a765154930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a7651548d8 'T'
|       `-RecordType 0x55a765455130 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55a765455048 'sized_array_memory'
|-FieldDecl 0x55a7654d09c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55a7654d0a10 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a7654d0a48 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x55a7654cf940 'Element *' sugar
|   |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a76518c7e8 'T'
|   `-PointerType 0x55a7653e6da0 'Element *'
|     `-RecordType 0x55a7653e6b20 'Element'
|       `-CXXRecord 0x55a7653f0870 'Element'
|-TypedefDecl 0x55a7654d0b08 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x55a7654d0ad0 'Element *&'
|   `-SubstTemplateTypeParmType 0x55a7654cf940 'Element *' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-PointerType 0x55a7653e6da0 'Element *'
|       `-RecordType 0x55a7653e6b20 'Element'
|         `-CXXRecord 0x55a7653f0870 'Element'
|-TypedefDecl 0x55a7654d0bc8 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x55a7654d0b90 'Element *const &'
|   `-QualType 0x55a7654cf941 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55a7654cf940 'Element *' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-PointerType 0x55a7653e6da0 'Element *'
|         `-RecordType 0x55a7653e6b20 'Element'
|           `-CXXRecord 0x55a7653f0870 'Element'
|-TypedefDecl 0x55a7654d0c88 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x55a7654d0c50 'Element **'
|   `-SubstTemplateTypeParmType 0x55a7654cf940 'Element *' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-PointerType 0x55a7653e6da0 'Element *'
|       `-RecordType 0x55a7653e6b20 'Element'
|         `-CXXRecord 0x55a7653f0870 'Element'
|-TypedefDecl 0x55a7654d0d48 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x55a7654d0d10 'Element *const *'
|   `-QualType 0x55a7654cf941 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55a7654cf940 'Element *' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-PointerType 0x55a7653e6da0 'Element *'
|         `-RecordType 0x55a7653e6b20 'Element'
|           `-CXXRecord 0x55a7653f0870 'Element'
|-TypedefDecl 0x55a7654d1920 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x55a7654d18d0 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x55a7654d18b0 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x55a7654d1840 'type'
|     `-SubstTemplateTypeParmType 0x55a7654d1600 'Element *' sugar
|       |-TemplateTypeParmType 0x55a76515f730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76515f6e0 'T'
|       `-PointerType 0x55a7653e6da0 'Element *'
|         `-RecordType 0x55a7653e6b20 'Element'
|           `-CXXRecord 0x55a7653f0870 'Element'
|-TypedefDecl 0x55a7654d1988 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x55a7654d0b90 'Element *const &'
|   `-QualType 0x55a7654cf941 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55a7654cf940 'Element *' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-PointerType 0x55a7653e6da0 'Element *'
|         `-RecordType 0x55a7653e6b20 'Element'
|           `-CXXRecord 0x55a7653f0870 'Element'
|-TypedefDecl 0x55a7654d19e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654d1a48 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x55a7654d0c50 'Element **'
|   `-SubstTemplateTypeParmType 0x55a7654cf940 'Element *' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-PointerType 0x55a7653e6da0 'Element *'
|       `-RecordType 0x55a7653e6b20 'Element'
|         `-CXXRecord 0x55a7653f0870 'Element'
|-TypedefDecl 0x55a7654d1ab0 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x55a7654d0d10 'Element *const *'
|   `-QualType 0x55a7654cf941 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55a7654cf940 'Element *' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-PointerType 0x55a7653e6da0 'Element *'
|         `-RecordType 0x55a7653e6b20 'Element'
|           `-CXXRecord 0x55a7653f0870 'Element'
|-EnumDecl 0x55a7654d1b08 <line:134:5> col:5
| `-EnumConstantDecl 0x55a7654d1c00 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a7654d1be0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a76518dec8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a76518dea0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a76518de80 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a7654d1c88 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a7654d1f18 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654d1d40 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654d1de0 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x55a7654d21a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55a7654d2090 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x55a7654d2468 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55a7654d2350 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55a7654d2780 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55a7654d2660 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x55a7654d2a90 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55a7654d2970 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55a7654d2d80 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654d2bc8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654d2c40 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55a7654d2ed8 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55a7654d2fb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654d3010 <col:30> Inherited
|-CXXMethodDecl 0x55a7654d3058 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55a7654d3108 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654d3160 <col:30> Inherited
|-CXXMethodDecl 0x55a7654d3228 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55a7654d32d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654d3330 <col:30> Inherited
|-CXXMethodDecl 0x55a7654d3378 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55a7654d3428 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654d3480 <col:30> Inherited
|-CXXMethodDecl 0x55a7654d34c8 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55a7654d3578 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654d35d0 <col:30> Inherited
|-CXXMethodDecl 0x55a7654d3618 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55a7654d36c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654d3720 <col:30> Inherited
|-CXXMethodDecl 0x55a7654d3748 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7654d37f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7654d38a8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a7654d3a68 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654d3958 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654d39d0 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55a7654d3bb8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654d3b28 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654d3d68 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x55a7654d3c70 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7654d3e20 <col:20>
| `-OptimizeNoneAttr 0x55a7654d3e78 <col:30>
|-CXXMethodDecl 0x55a7654d3f98 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55a7654d3ea0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7654d4050 <col:20>
| `-OptimizeNoneAttr 0x55a7654d40a8 <col:30>
|-CXXMethodDecl 0x55a7654d4160 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654d40d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654d42a8 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7654d4218 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654d43d8 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x55a7654d4508 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x55a7654d45d8 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x55a7654d46a8 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x55a7654d47e8 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654d4758 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654d4930 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7654d48a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654d4a78 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55a7654d49e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7654d4b30 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a7654d4c30 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a7654d4ba0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7654d4ce8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a7654d4da8 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x55a7654d4ea8 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x55a7654d5028 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7654d4f68 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x55a7654d57e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a7654d50e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x55a7654d5748 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x55a7654d5648 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x55a7654d58c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a7654d5a18 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7654d5988 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55a7654d5ad0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a7654d5d18 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654d5b90 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55a7654d5c08 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55a7654d5ed8 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x55a7654d5de8 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55a7654d6128 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x55a7654d5fa0 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55a7654d6018 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55a7654d61e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7654da728 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x55a7654da630 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x55a7654da7f8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a7654da7f8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7651c4710 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55a7651c4828 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55a7651c48c8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55a7651c4928 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55a7651c4988 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55a7651c4a38 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7651c4d40 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a7651c4e58 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55a7651c4f00 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55a7651c4f68 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55a7651c4ff8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55a7651cb090 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a7651cb4c8 <col:12>
|-CXXConstructorDecl 0x55a7651cb198 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a7651cb2a8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55a7651c4f00 'data' 'const char *'
| | `-ImplicitCastExpr 0x55a7651cda50 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55a7651cda20 <col:12> 'const char *const' lvalue .data 0x55a7651c4f00
| |     `-DeclRefExpr 0x55a7651cda00 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7651cb2a8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55a7651c4f68 'length' 'int'
| | `-ImplicitCastExpr 0x55a7651cdae0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55a7651cdab0 <col:12> 'const int' lvalue .length 0x55a7651c4f68
| |     `-DeclRefExpr 0x55a7651cda90 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7651cb2a8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55a7651c4ff8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55a7651cdb70 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55a7651cdb40 <col:12> 'String::memo_t *const' lvalue .memo 0x55a7651c4ff8
| |     `-DeclRefExpr 0x55a7651cdb20 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7651cb2a8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55a7651cdbc8 <col:12>
|-CXXConstructorDecl 0x55a7651cb348 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a7651cb348
| `-ParmVarDecl 0x55a7651cb458 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55a7651d09b0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a7651dc3c8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a7651dc4d8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55a7651dc9f0 <col:12>
|   |-BinaryOperator 0x55a7651dc808 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55a7651dc7c0 <col:12> 'const char *' lvalue ->data 0x55a7651c4f00
|   | | `-CXXThisExpr 0x55a7651dc7b0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55a7651dc7f0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55a7651dc780 <col:12> 'const char *const' lvalue .data 0x55a7651c4f00
|   |     `-DeclRefExpr 0x55a7651dc760 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7651dc4d8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55a7651dc8d0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55a7651dc888 <col:12> 'int' lvalue ->length 0x55a7651c4f68
|   | | `-CXXThisExpr 0x55a7651dc878 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55a7651dc8b8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55a7651dc848 <col:12> 'const int' lvalue .length 0x55a7651c4f68
|   |     `-DeclRefExpr 0x55a7651dc828 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7651dc4d8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55a7651dc998 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55a7651dc950 <col:12> 'String::memo_t *' lvalue ->memo 0x55a7651c4ff8
|   | | `-CXXThisExpr 0x55a7651dc940 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55a7651dc980 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55a7651dc910 <col:12> 'String::memo_t *const' lvalue .memo 0x55a7651c4ff8
|   |     `-DeclRefExpr 0x55a7651dc8f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7651dc4d8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55a7651dc9e0 <col:12>
|     `-UnaryOperator 0x55a7651dc9c8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a7651dc9b8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55a7651dc548 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a7651dc548
  `-ParmVarDecl 0x55a7651dc658 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7651bbc80 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a7651bbd98 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55a7651bbe28 <col:16, col:22> col:16 public
|-TypedefDecl 0x55a7651bbe68 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55a764e8ddc0 'const char *'
|   `-QualType 0x55a764e8d311 'const char' const
|     `-BuiltinType 0x55a764e8d310 'char'
|-TypedefDecl 0x55a7651bbef0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55a7651bbec0 'String::const_iterator' sugar
|   |-Typedef 0x55a7651bbe68 'const_iterator'
|   `-PointerType 0x55a764e8ddc0 'const char *'
|     `-QualType 0x55a764e8d311 'const char' const
|       `-BuiltinType 0x55a764e8d310 'char'
|-TypedefDecl 0x55a7651bc060 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55a7651bbfd0 'int (String::*)() const'
|   |-RecordType 0x55a7651bbd10 'String'
|   | `-CXXRecord 0x55a7651bbc80 'String'
|   `-ParenType 0x55a7651bbf70 'int () const' sugar
|     `-FunctionProtoType 0x55a76518fb00 'int () const' const cdecl
|       `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7651bc0c8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55a764fe44c0 'int64_t' sugar
|   |-Typedef 0x55a764ef62d0 'int64_t'
|   `-TypedefType 0x55a764ecf4d0 '__int64_t' sugar
|     |-Typedef 0x55a764ecf0a8 '__int64_t'
|     `-BuiltinType 0x55a764e8d390 'long'
|-TypedefDecl 0x55a7651bc130 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55a764fe43e0 'uint64_t' sugar
|   |-Typedef 0x55a764ef6470 'uint64_t'
|   `-TypedefType 0x55a764ecf560 '__uint64_t' sugar
|     |-Typedef 0x55a764ecf118 '__uint64_t'
|     `-BuiltinType 0x55a764e8d430 'unsigned long'
|-TypedefDecl 0x55a7651bc1c0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55a7651bc190 'String::intmax_t' sugar
|   |-Typedef 0x55a7651bc0c8 'intmax_t'
|   `-TypedefType 0x55a764fe44c0 'int64_t' sugar
|     |-Typedef 0x55a764ef62d0 'int64_t'
|     `-TypedefType 0x55a764ecf4d0 '__int64_t' sugar
|       |-Typedef 0x55a764ecf0a8 '__int64_t'
|       `-BuiltinType 0x55a764e8d390 'long'
|-TypedefDecl 0x55a7651bc250 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55a7651bc220 'String::uintmax_t' sugar
|   |-Typedef 0x55a7651bc130 'uintmax_t'
|   `-TypedefType 0x55a764fe43e0 'uint64_t' sugar
|     |-Typedef 0x55a764ef6470 'uint64_t'
|     `-TypedefType 0x55a764ecf560 '__uint64_t' sugar
|       |-Typedef 0x55a764ecf118 '__uint64_t'
|       `-BuiltinType 0x55a764e8d430 'unsigned long'
|-CXXConstructorDecl 0x55a7651bc310 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55a7651bc4b8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55a7651bc3f8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55a7651bc668 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55a7651bc5a8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55a7651bc7c0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55a7651bc730 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55a7651bc9d8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55a7651bc888 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55a7651bc908 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55a7651bcbf8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55a7651bcaa8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55a7651bcb28 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55a7651bce18 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55a7651bccc8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55a7651bcd48 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55a7651bd038 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55a7651bcee8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55a7651bcf68 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55a7651bd1c8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55a7651bd100 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55a7651bd348 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55a7651bd288 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55a7651bd4d8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55a7651bd410 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55a7651bd630 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55a7651bd5a0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55a7651bd788 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55a7651bd6f8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55a7651bd8e0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55a7651bd850 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55a7651bda68 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55a7651bd9a8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55a7651bdbf8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55a7651bdb30 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55a7651bdd88 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55a7651bdcc0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55a7651bdf18 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55a7651bde50 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55a7651be010 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55a7651be138 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55a7651be2b8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55a7651be1f0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55a7651be408 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55a7651be378 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55a7651be4c0 <col:63> "" ""
|-CXXMethodDecl 0x55a7651be608 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55a7651be548 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55a7651be818 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55a7651be6c8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55a7651be748 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55a7651bea38 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55a7651be8e0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55a7651be960 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55a7651bed18 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55a7651beaf8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55a7651beb78 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55a7651cab60 <col:55> 'int' 10
| `-ParmVarDecl 0x55a7651bebf0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a7651cab80 <col:76> 'bool' true
|-CXXMethodDecl 0x55a7651beff8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55a7651bede0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55a7651bee60 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55a7651cab90 <col:56> 'int' 10
| `-ParmVarDecl 0x55a7651beed8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a7651cabb0 <col:77> 'bool' true
|-CXXMethodDecl 0x55a7651bf100 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55a7651bf1c8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55a7651bf290 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55a7651bf330 <col:20>
| `-OptimizeNoneAttr 0x55a7651bf388 <col:30>
|-CXXConversionDecl 0x55a7651bf478 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55a7651bf548 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55a7651bf608 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55a7651bf6f8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55a7651bf7b8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55a7651bf938 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55a7651bf870 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55a7651bfa88 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55a7651bf9f8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55a7651bfb78 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55a7651bfc38 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55a7651bfe88 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55a7651bfcf0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55a7651bfd70 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55a7651c00e8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55a7651bff50 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55a7651bffd0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55a7651c01b8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7651c03c8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55a7651c0270 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55a7651c02f0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55a7651c05e8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55a7651c0490 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55a7651c0510 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55a7651c0778 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55a7651c06b0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55a7651c0868 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55a7651c09d8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55a7651c0918 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55a7651c0be8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55a7651c0a98 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55a7651c0b18 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55a7651c0e00 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55a7651c0ca8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55a7651c0d20 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55a7651c0f90 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55a7651c0ec0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55a7651c11b0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55a7651c1050 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55a7651c10d0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55a7651c1300 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55a7651c1270 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55a7651c14d8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55a7651c13c0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55a7651c1440 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55a7651c1628 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55a7651c1598 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55a7651c1840 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55a7651c16e0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55a7651c1760 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55a7651cabc0 <col:39> 'int' 0
|-CXXMethodDecl 0x55a7651c1a60 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55a7651c1900 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55a7651c1980 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55a7651cabe0 <col:48> 'int' 0
|-CXXMethodDecl 0x55a7651c1c40 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55a7651c1b20 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55a7651c1ba0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55a7651cac00 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55a7651c1d10 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55a7651c1dd0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55a7651c1e90 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55a7651c1f50 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55a7651c2010 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55a7651c21b8 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55a7651c20c0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55a7651c2338 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55a7651c2270 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55a7651c2510 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55a7651c23f8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55a7651c2688 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55a7651c25c8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55a7651c27d0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55a7651c2740 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55a7651c2920 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55a7651c2890 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55a7651c2af8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55a7651c29e0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55a7651c2a60 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55a7651c2cd8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55a7651c2bc0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55a7651c2c40 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55a7651c2e28 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55a7651c2d98 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55a7651c3038 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55a7651c2ee8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55a7651c2f68 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55a7651c3198 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55a7651c3100 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55a7651c32f0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55a7651c3258 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55a7651c3398 <col:57> "" ""
|-CXXMethodDecl 0x55a7651c34a8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55a7651c3418 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55a7651c35f8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55a7651c3568 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55a7651c3778 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55a7651c36b0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55a7651c3840 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55a7651c3900 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55a7651c39c0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55a7651c3a60 <col:49> "" ""
|-CXXMethodDecl 0x55a7651c3af0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55a7651c3bb0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55a7651c3ca0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55a7651c3d68 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55a7651c3e28 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55a7651c3ee8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55a7651c3fe0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55a7651c40a8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55a7651c4170 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55a7651c4348 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55a7651c4228 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55a7651c42a8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55a7651c4570 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55a7651c4410 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55a7651c4490 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55a7651c4680 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55a7651c46e8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55a7651c4710 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a7651c4828 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55a7651c48c8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55a7651c4928 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55a7651c4988 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55a7651c4a38 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55a7651c4aa0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55a7651c4cd8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55a7651c4d28 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7651c4cb8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55a7651c4bc8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55a7651c4b70 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55a7651c4bb0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55a7651c4b90 <col:32> 'int' 8
|-CXXRecordDecl 0x55a7651c4d40 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a7651c4e58 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55a7651c4f00 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55a7651c4f68 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55a7651c4ff8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55a7651cb090 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55a7651cb4c8 <col:12>
| |-CXXConstructorDecl 0x55a7651cb198 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a7651cb2a8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55a7651c4f00 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55a7651cda50 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55a7651cda20 <col:12> 'const char *const' lvalue .data 0x55a7651c4f00
| | |     `-DeclRefExpr 0x55a7651cda00 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7651cb2a8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55a7651c4f68 'length' 'int'
| | | `-ImplicitCastExpr 0x55a7651cdae0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55a7651cdab0 <col:12> 'const int' lvalue .length 0x55a7651c4f68
| | |     `-DeclRefExpr 0x55a7651cda90 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7651cb2a8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55a7651c4ff8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55a7651cdb70 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55a7651cdb40 <col:12> 'String::memo_t *const' lvalue .memo 0x55a7651c4ff8
| | |     `-DeclRefExpr 0x55a7651cdb20 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7651cb2a8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55a7651cdbc8 <col:12>
| |-CXXConstructorDecl 0x55a7651cb348 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a7651cb348
| | `-ParmVarDecl 0x55a7651cb458 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55a7651d09b0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55a7651dc3c8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a7651dc4d8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55a7651dc9f0 <col:12>
| |   |-BinaryOperator 0x55a7651dc808 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55a7651dc7c0 <col:12> 'const char *' lvalue ->data 0x55a7651c4f00
| |   | | `-CXXThisExpr 0x55a7651dc7b0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55a7651dc7f0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55a7651dc780 <col:12> 'const char *const' lvalue .data 0x55a7651c4f00
| |   |     `-DeclRefExpr 0x55a7651dc760 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7651dc4d8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55a7651dc8d0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55a7651dc888 <col:12> 'int' lvalue ->length 0x55a7651c4f68
| |   | | `-CXXThisExpr 0x55a7651dc878 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55a7651dc8b8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55a7651dc848 <col:12> 'const int' lvalue .length 0x55a7651c4f68
| |   |     `-DeclRefExpr 0x55a7651dc828 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7651dc4d8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55a7651dc998 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55a7651dc950 <col:12> 'String::memo_t *' lvalue ->memo 0x55a7651c4ff8
| |   | | `-CXXThisExpr 0x55a7651dc940 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55a7651dc980 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55a7651dc910 <col:12> 'String::memo_t *const' lvalue .memo 0x55a7651c4ff8
| |   |     `-DeclRefExpr 0x55a7651dc8f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a7651dc4d8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55a7651dc9e0 <col:12>
| |     `-UnaryOperator 0x55a7651dc9c8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55a7651dc9b8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55a7651dc548 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a7651dc548
|   `-ParmVarDecl 0x55a7651dc658 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55a7651c5070 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55a7651c52b8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55a7651c50d8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55a7651c5158 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55a7651c51d0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55a7651cb050 <col:79, line:261:5>
|   |-BinaryOperator 0x55a7651cacc8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55a7651cac60 <col:2, col:5> 'const char *' lvalue .data 0x55a7651c4f00
|   | | `-MemberExpr 0x55a7651cac30 <col:2> 'String::rep_t' lvalue ->_r 0x55a7651c5070
|   | |   `-CXXThisExpr 0x55a7651cac20 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55a7651cacb0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a7651cac90 <col:12> 'const char *' lvalue ParmVar 0x55a7651c50d8 'data' 'const char *'
|   |-BinaryOperator 0x55a7651cad90 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55a7651cad28 <col:2, col:5> 'int' lvalue .length 0x55a7651c4f68
|   | | `-MemberExpr 0x55a7651cacf8 <col:2> 'String::rep_t' lvalue ->_r 0x55a7651c5070
|   | |   `-CXXThisExpr 0x55a7651cace8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55a7651cad78 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a7651cad58 <col:14> 'int' lvalue ParmVar 0x55a7651c5158 'length' 'int'
|   `-IfStmt 0x55a7651cb038 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55a7651caeb0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55a7651cae98 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55a7651cae78 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55a7651cae58 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55a7651cadf0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55a7651c4ff8
|     |       | `-MemberExpr 0x55a7651cadc0 <col:7> 'String::rep_t' lvalue ->_r 0x55a7651c5070
|     |       |   `-CXXThisExpr 0x55a7651cadb0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55a7651cae40 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55a7651cae20 <col:17> 'String::memo_t *' lvalue ParmVar 0x55a7651c51d0 'memo' 'String::memo_t *'
|     `-CallExpr 0x55a7651cb010 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55a7651caff8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a7651caf00 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55a7651b3ce8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55a7651caf68 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55a7651c48c8
|         `-ImplicitCastExpr 0x55a7651caf50 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55a7651caf30 <col:27> 'String::memo_t *' lvalue ParmVar 0x55a7651c51d0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55a7651c5568 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55a7651c5388 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55a7651c5408 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55a7651c5480 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55a7651c5070 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55a7651cb4d8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a7651cb668 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55a7651cb5d0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55a7651cb540 <col:2> '<bound member function type>' ->assign_memo 0x55a7651c52b8
|     | `-ImplicitCastExpr 0x55a7651cb608 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55a7651cb530 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55a7651cb620 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a7651cb570 <col:14> 'const char *' lvalue ParmVar 0x55a7651c5388 'data' 'const char *'
|     |-ImplicitCastExpr 0x55a7651cb638 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55a7651cb590 <col:20> 'int' lvalue ParmVar 0x55a7651c5408 'length' 'int'
|     `-ImplicitCastExpr 0x55a7651cb650 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55a7651cb5b0 <col:28> 'String::memo_t *' lvalue ParmVar 0x55a7651c5480 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55a7651c56f8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55a7651c5638 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55a7651cb8c0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55a7651cb840 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55a7651cb690 <col:2> '<bound member function type>' ->assign_memo 0x55a7651c52b8
|     | `-CXXThisExpr 0x55a7651cb680 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55a7651cb878 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55a7651cb710 <col:14, col:19> 'const char *' lvalue .data 0x55a7651c4f00
|     |   `-MemberExpr 0x55a7651cb6e0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55a7651c5070
|     |     `-DeclRefExpr 0x55a7651cb6c0 <col:14> 'const String' lvalue ParmVar 0x55a7651c5638 'x' 'const String &'
|     |-ImplicitCastExpr 0x55a7651cb890 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55a7651cb790 <col:25, col:30> 'int' lvalue .length 0x55a7651c4f68
|     |   `-MemberExpr 0x55a7651cb760 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55a7651c5070
|     |     `-DeclRefExpr 0x55a7651cb740 <col:25> 'const String' lvalue ParmVar 0x55a7651c5638 'x' 'const String &'
|     `-ImplicitCastExpr 0x55a7651cb8a8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55a7651cb810 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55a7651c4ff8
|         `-MemberExpr 0x55a7651cb7e0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55a7651c5070
|           `-DeclRefExpr 0x55a7651cb7c0 <col:38> 'const String' lvalue ParmVar 0x55a7651c5638 'x' 'const String &'
|-CXXMethodDecl 0x55a7651c57c0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55a7651cc280 <col:31, line:278:5>
|   `-IfStmt 0x55a7651cc268 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55a7651cb960 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55a7651cb948 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55a7651cb918 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55a7651c4ff8
|     |     `-MemberExpr 0x55a7651cb8e8 <col:6> 'String::rep_t' lvalue ->_r 0x55a7651c5070
|     |       `-CXXThisExpr 0x55a7651cb8d8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55a7651cc240 <col:15, line:277:2>
|       |-ParenExpr 0x55a7651cbe10 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55a7651cbde0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55a7651cba70 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55a7651cba58 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55a7651cba40 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55a7651cba00 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55a7651c48c8
|       |   |       `-ImplicitCastExpr 0x55a7651cb9e8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55a7651cb9b8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55a7651c4ff8
|       |   |           `-MemberExpr 0x55a7651cb988 <col:27> 'String::rep_t' lvalue ->_r 0x55a7651c5070
|       |   |             `-CXXThisExpr 0x55a7651cb978 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55a7651cbad0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55a7651cbab0 <col:54> 'int' 0
|       |   `-CallExpr 0x55a7651cbd40 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55a7651cbd28 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55a7651cbca8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55a7651cbd80 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55a7651cbbb8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55a7651cbd98 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55a7651cbbe8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55a7651cbdb0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55a7651cbc20 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55a7651cbdc8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55a7651cbc90 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55a7651cbc78 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55a7651cbc40 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55a7651cc160 <line:274:6, line:275:22>
|       | |-CallExpr 0x55a7651cc020 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55a7651cc008 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55a7651cbf80 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55a7651b5130 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55a7651cbf50 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55a7651c48c8
|       | |   `-ImplicitCastExpr 0x55a7651cbf38 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55a7651cbf08 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55a7651c4ff8
|       | |       `-MemberExpr 0x55a7651cbed8 <col:40> 'String::rep_t' lvalue ->_r 0x55a7651c5070
|       | |         `-CXXThisExpr 0x55a7651cbec8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55a7651cc120 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55a7651cc108 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55a7651cc048 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55a7651c9fa0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55a7651cc148 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55a7651cc0a8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55a7651c4ff8
|       |       `-MemberExpr 0x55a7651cc078 <col:15> 'String::rep_t' lvalue ->_r 0x55a7651c5070
|       |         `-CXXThisExpr 0x55a7651cc068 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55a7651cc220 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55a7651cc1b8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55a7651c4ff8
|         | `-MemberExpr 0x55a7651cc188 <col:6> 'String::rep_t' lvalue ->_r 0x55a7651c5070
|         |   `-CXXThisExpr 0x55a7651cc178 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55a7651cc208 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55a7651cc1e8 <col:16> 'int' 0
|-CXXMethodDecl 0x55a7651c5a58 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55a7651c5878 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55a7651c58f8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55a7651c5970 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55a7651c5b30 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55a7651c5d80 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55a7651c5be8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55a7651c5c68 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55a7651c5ce0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55a7651c5f68 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55a7651c5e50 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55a7651c5ed0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55a7651c6068 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55a7651cc358 <col:41, line:286:5>
|   `-ReturnStmt 0x55a7651cc348 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55a7651cc318 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55a7651cc2e0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55a7651cc2c8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55a7651cc2a8 <col:46> 'int' 1
|-CXXMethodDecl 0x55a7651c6308 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55a7651c6120 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55a7651c61a0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55a7651c6220 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55a7651c9fa0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55a7651c63d0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55a7651ca070 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55a7651ca240 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55a7651ca128 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55a7651ca1a8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55a7651ca300 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55a7651ca3c8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55a7651ca4c8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55a7651ca540 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55a7651ca5b8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55a7651ca620 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55a7651ca720 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55a7651ca770 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7651ca700 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55a7651ca6e0 <col:22> 'int' 14
|-CXXMethodDecl 0x55a7651ca988 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55a7651ca7a0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55a7651ca820 <col:38> col:41 'int'
| `-ParmVarDecl 0x55a7651ca8a0 <col:43> col:46 'int'
|-FriendDecl 0x55a7651caa90 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55a7651cab20 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7654dbca0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55a7654dbe78 prev 0x55a7654dbca0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55a7654dbf08 <col:46, col:52> col:46 public
|-TypedefDecl 0x55a7654dbf30 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654dd890 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55a7654dd840 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55a7654dd820 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55a7654dc148 'type'
|     `-SubstTemplateTypeParmType 0x55a7654dc110 'String' sugar
|       |-TemplateTypeParmType 0x55a76517f520 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76517f4d0 'T'
|       `-RecordType 0x55a7651bbd10 'String'
|         `-CXXRecord 0x55a7651bbc80 'String'
|-TypedefDecl 0x55a7654dd948 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55a7654dd910 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55a7654dd8f0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55a7654dd890 'type'
|     `-ElaboratedType 0x55a7654dd840 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55a7654dd820 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55a7654dc148 'type'
|         `-SubstTemplateTypeParmType 0x55a7654dc110 'String' sugar
|           |-TemplateTypeParmType 0x55a76517f520 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55a76517f4d0 'T'
|           `-RecordType 0x55a7651bbd10 'String'
|             `-CXXRecord 0x55a7651bbc80 'String'
|-CXXMethodDecl 0x55a7654ddac8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55a7654dd9d8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55a7654ddbb8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55a7654ddc98 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55a7654ddc98
|-CXXMethodDecl 0x55a7654ddf68 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55a7654dde70 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55a7654de1a8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55a7654de020 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7654de098 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a7654de378 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55a7654de268 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7654de2e0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a7654de4d8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55a7654de5a8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55a7654de7f8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55a7654de668 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55a7654de6e0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a7654dea58 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55a7654de8c8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55a7654de940 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a7654dec18 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55a7654deb28 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a7654dedd8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55a7654dece0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a7654dee90 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a7654def40 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7654df178 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55a7654deff0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7654df068 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55a7654df418 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55a7654df320 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55a7654df4e0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55a7654df530 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55a7654df580 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7653f34b0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55a7654daa48 prev 0x55a7653f34b0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a7654dbc10 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55a7654dbbc0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55a7654dbba0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55a7654dba50 'type'
|     `-SubstTemplateTypeParmType 0x55a7654db8e0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55a7651550b0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55a765155058 'F'
|       `-RecordType 0x55a7654db540 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55a7654db460 'typed_array_memory'
|-FieldDecl 0x55a7654df5d0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55a7654df620 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a7654df658 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55a7654daae0 'String' sugar
|   |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a76518c7e8 'T'
|   `-RecordType 0x55a7651bbd10 'String'
|     `-CXXRecord 0x55a7651bbc80 'String'
|-TypedefDecl 0x55a7654df6e8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55a7654df6b0 'String &'
|   `-SubstTemplateTypeParmType 0x55a7654daae0 'String' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a7651bbd10 'String'
|       `-CXXRecord 0x55a7651bbc80 'String'
|-TypedefDecl 0x55a7654df778 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55a7654df740 'const String &'
|   `-QualType 0x55a7654daae1 'const String' const
|     `-SubstTemplateTypeParmType 0x55a7654daae0 'String' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a7651bbd10 'String'
|         `-CXXRecord 0x55a7651bbc80 'String'
|-TypedefDecl 0x55a7654df808 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55a7654df7d0 'String *'
|   `-SubstTemplateTypeParmType 0x55a7654daae0 'String' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a7651bbd10 'String'
|       `-CXXRecord 0x55a7651bbc80 'String'
|-TypedefDecl 0x55a7654df898 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55a7654df860 'const String *'
|   `-QualType 0x55a7654daae1 'const String' const
|     `-SubstTemplateTypeParmType 0x55a7654daae0 'String' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a7651bbd10 'String'
|         `-CXXRecord 0x55a7651bbc80 'String'
|-TypedefDecl 0x55a7654e04f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55a7654e04a0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55a7654e0480 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55a7654e03b8 'type'
|     `-LValueReferenceType 0x55a7654e0380 'const String &'
|       `-QualType 0x55a7654e0121 'const String' const
|         `-SubstTemplateTypeParmType 0x55a7654e0120 'String' sugar
|           |-TemplateTypeParmType 0x55a76515f000 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55a76515efa8 'T'
|           `-RecordType 0x55a7651bbd10 'String'
|             `-CXXRecord 0x55a7651bbc80 'String'
|-TypedefDecl 0x55a7654e0558 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55a7654df740 'const String &'
|   `-QualType 0x55a7654daae1 'const String' const
|     `-SubstTemplateTypeParmType 0x55a7654daae0 'String' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a7651bbd10 'String'
|         `-CXXRecord 0x55a7651bbc80 'String'
|-TypedefDecl 0x55a7654e05b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654e0618 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55a7654df7d0 'String *'
|   `-SubstTemplateTypeParmType 0x55a7654daae0 'String' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a7651bbd10 'String'
|       `-CXXRecord 0x55a7651bbc80 'String'
|-TypedefDecl 0x55a7654e0680 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55a7654df860 'const String *'
|   `-QualType 0x55a7654daae1 'const String' const
|     `-SubstTemplateTypeParmType 0x55a7654daae0 'String' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a7651bbd10 'String'
|         `-CXXRecord 0x55a7651bbc80 'String'
|-EnumDecl 0x55a7654e06d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55a7654e07d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a7654e07b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a76518dec8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a76518dea0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a76518de80 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a7654e0858 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a7654e0aa8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654e0910 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654e09b0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55a7654e0d68 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55a7654e0c50 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55a7654e1028 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55a7654e0f10 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55a7654e1340 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55a7654e1220 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55a7654e1650 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55a7654e1530 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55a7654e1940 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654e1788 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654e1800 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55a7654e1a68 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55a7654e1b48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654e1ba0 <col:30> Inherited
|-CXXMethodDecl 0x55a7654e1be8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55a7654e1c98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654e1cf0 <col:30> Inherited
|-CXXMethodDecl 0x55a7654e1db8 <line:152:5, col:63> col:55 begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55a7654e1e68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654e1ec0 <col:30> Inherited
|-CXXMethodDecl 0x55a7654e1f08 <line:153:5, col:61> col:55 end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55a7654e1fb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654e2010 <col:30> Inherited
|-CXXMethodDecl 0x55a7654e2058 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55a7654e2108 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654e2160 <col:30> Inherited
|-CXXMethodDecl 0x55a7654e21a8 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55a7654e2258 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654e22b0 <col:30> Inherited
|-CXXMethodDecl 0x55a7654e22d8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7654e2388 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7654e2438 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a7654e3ac0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654e24e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654e2560 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55a7654e3c10 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654e3b80 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654e3db8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55a7654e3cc8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7654e3e70 <col:20>
| `-OptimizeNoneAttr 0x55a7654e3ec8 <col:30>
|-CXXMethodDecl 0x55a7654e3fb8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55a7654e3ef0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7654e4070 <col:20>
| `-OptimizeNoneAttr 0x55a7654e40c8 <col:30>
|-CXXMethodDecl 0x55a7654e4180 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654e40f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654e42c8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7654e4238 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654e43f8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55a7654e44f8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55a7654e45c8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55a7654e4698 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55a7654e47d8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654e4748 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654e4920 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7654e4890 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654e4a68 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55a7654e49d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7654e4b20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a7654e4c20 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a7654e4b90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7654e4cd8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a7654e4d98 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55a7654e4e98 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55a7654e5018 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7654e4f58 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55a7654e57a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a7654e50d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55a7654e5708 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55a7654e5608 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55a7654e5888 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a7654e59d8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7654e5948 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55a7654e5a90 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a7654e5cd8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654e5b50 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55a7654e5bc8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55a7654e5e68 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55a7654e5da8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55a7654e6078 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55a7654e5f30 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55a7654e5fa8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55a7654e6138 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7654e6398 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55a7654e62a0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55a7654e6468 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a7654e6468

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7654e7a90 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55a7654e7c68 prev 0x55a7654e7a90 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55a7654e7cf8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55a7654e7d20 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654e98f0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55a7654e98a0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55a7654e81d0 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55a7654e80d0 'type'
|     `-TemplateSpecializationType 0x55a7654e8060 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55a7654e7f40 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55a7654e7f20 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55a7654e7f00 <col:24> 'unsigned long' 4
|       `-RecordType 0x55a7654e8040 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55a7654e7f60 'char_array'
|-TypedefDecl 0x55a7654e99a8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55a7654e9970 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55a7654e9950 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55a7654e98f0 'type'
|     `-ElaboratedType 0x55a7654e98a0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55a7654e81d0 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55a7654e80d0 'type'
|         `-TemplateSpecializationType 0x55a7654e8060 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55a7654e7f40 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55a7654e7f20 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55a7654e7f00 <col:24> 'unsigned long' 4
|           `-RecordType 0x55a7654e8040 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55a7654e7f60 'char_array'
|-CXXMethodDecl 0x55a7654e9b28 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55a7654e9a38 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55a7654e9c18 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55a7654e9cf8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55a7654e9cf8
|-CXXMethodDecl 0x55a7654e9fc8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55a7654e9ed0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55a7654ea208 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55a7654ea080 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7654ea0f8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a7654ea3d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55a7654ea2c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7654ea340 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a7654ea538 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55a7654ea608 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55a7654ea858 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55a7654ea6c8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55a7654ea740 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a7654eaab8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55a7654ea928 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55a7654ea9a0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a7654eac78 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55a7654eab88 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a7654eae38 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55a7654ead40 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a7654eaef0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a7654eafa0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7654eb1d8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55a7654eb050 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7654eb0c8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55a7654eb478 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55a7654eb380 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55a7654eb540 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55a7654eb590 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55a7654eb5e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7654e66b0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55a7654e68b8 prev 0x55a7654e66b0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a7654e7a00 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55a7654e79b0 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x55a7654e7990 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x55a7654e7840 'type'
|     `-SubstTemplateTypeParmType 0x55a7654e7660 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55a765154930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a7651548d8 'T'
|       `-RecordType 0x55a7654e71b0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55a7654e70c8 'sized_array_memory'
|-FieldDecl 0x55a7654eb630 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55a7654eb680 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a7654eb6b8 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55a7654e6950 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a76518c7e8 'T'
|   `-BuiltinType 0x55a764e8d410 'unsigned int'
|-TypedefDecl 0x55a7654eb748 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x55a7654eb710 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x55a7654e6950 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-BuiltinType 0x55a764e8d410 'unsigned int'
|-TypedefDecl 0x55a7654eb808 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x55a7654eb7d0 'const unsigned int &'
|   `-QualType 0x55a7654e6951 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55a7654e6950 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-BuiltinType 0x55a764e8d410 'unsigned int'
|-TypedefDecl 0x55a7654eb898 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x55a7654eb860 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55a7654e6950 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-BuiltinType 0x55a764e8d410 'unsigned int'
|-TypedefDecl 0x55a7654eb928 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x55a7654eb8f0 'const unsigned int *'
|   `-QualType 0x55a7654e6951 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55a7654e6950 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-BuiltinType 0x55a764e8d410 'unsigned int'
|-TypedefDecl 0x55a7654ee0e0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x55a7654ee090 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x55a7654ee070 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x55a7654ee000 'type'
|     `-SubstTemplateTypeParmType 0x55a7654eddc0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55a76515f730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76515f6e0 'T'
|       `-BuiltinType 0x55a764e8d410 'unsigned int'
|-TypedefDecl 0x55a7654ee148 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x55a7654eb7d0 'const unsigned int &'
|   `-QualType 0x55a7654e6951 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55a7654e6950 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-BuiltinType 0x55a764e8d410 'unsigned int'
|-TypedefDecl 0x55a7654ee1a0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654ee208 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x55a7654eb860 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55a7654e6950 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-BuiltinType 0x55a764e8d410 'unsigned int'
|-TypedefDecl 0x55a7654ee270 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x55a7654eb8f0 'const unsigned int *'
|   `-QualType 0x55a7654e6951 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55a7654e6950 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-BuiltinType 0x55a764e8d410 'unsigned int'
|-EnumDecl 0x55a7654ee2c8 <line:134:5> col:5
| `-EnumConstantDecl 0x55a7654ee3c0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a7654ee3a0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a76518dec8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a76518dea0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a76518de80 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a7654ee448 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a7654ee698 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654ee500 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654ee5a0 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x55a7654ee958 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55a7654ee840 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x55a7654eec18 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55a7654eeb00 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55a7654eef60 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55a7654eee40 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x55a7654ef270 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55a7654ef150 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55a7654ef560 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654ef3a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654ef420 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55a7654ef688 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55a7654ef768 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654ef7c0 <col:30> Inherited
|-CXXMethodDecl 0x55a7654ef808 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55a7654ef8b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654ef910 <col:30> Inherited
|-CXXMethodDecl 0x55a7654ef9a8 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55a7654efa58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654efab0 <col:30> Inherited
|-CXXMethodDecl 0x55a7654efaf8 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55a7654efba8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654efc00 <col:30> Inherited
|-CXXMethodDecl 0x55a7654efc48 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55a7654efcf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654efd50 <col:30> Inherited
|-CXXMethodDecl 0x55a7654efd98 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55a7654efe48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654efea0 <col:30> Inherited
|-CXXMethodDecl 0x55a7654efec8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7654eff78 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7654f0028 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a7654f01e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654f00d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654f0150 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55a7654f0338 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654f02a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654f04e8 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x55a7654f03f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7654f05a0 <col:20>
| `-OptimizeNoneAttr 0x55a7654f05f8 <col:30>
|-CXXMethodDecl 0x55a7654f0718 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x55a7654f0620 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7654f07d0 <col:20>
| `-OptimizeNoneAttr 0x55a7654f0828 <col:30>
|-CXXMethodDecl 0x55a7654f08e0 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654f0850 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654f0a28 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7654f0998 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654f0b58 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x55a7654f0c88 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55a7654f0d58 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x55a7654f0e28 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55a7654f0f68 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654f0ed8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654f10b0 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7654f1020 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654f11f8 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55a7654f1168 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7654f12b0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a7654f13b0 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a7654f1320 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7654f1468 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a7654f1528 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x55a7654f1628 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x55a7654f17a8 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7654f16e8 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x55a7654f1f68 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a7654f1860 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x55a7654f1ec8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x55a7654f1dc8 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x55a7654f2048 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a7654f2198 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7654f2108 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55a7654f2250 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a7654f2498 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654f2310 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55a7654f2388 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55a7654f2658 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x55a7654f2568 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55a7654f28a8 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x55a7654f2720 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55a7654f2798 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55a7654f2968 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7654f2bc8 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55a7654f2ad0 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x55a7654f2c98 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a7654f2c98

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7654c8e58 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55a7654f2ef8 prev 0x55a7654c8e58 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a7654f3f10 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55a7654f3ec0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55a7654f3ea0 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55a7654f3d50 'type'
|     `-SubstTemplateTypeParmType 0x55a7654e7660 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55a765154930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a7651548d8 'T'
|       `-RecordType 0x55a7654e71b0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55a7654e70c8 'sized_array_memory'
|-FieldDecl 0x55a7654f4010 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55a7654f4060 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a7654f4098 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55a7654f2f90 'int' sugar
|   |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a76518c7e8 'T'
|   `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654f4128 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55a7654f40f0 'int &'
|   `-SubstTemplateTypeParmType 0x55a7654f2f90 'int' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654f41e8 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55a7654f41b0 'const int &'
|   `-QualType 0x55a7654f2f91 'const int' const
|     `-SubstTemplateTypeParmType 0x55a7654f2f90 'int' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654f4278 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55a7654f4240 'int *'
|   `-SubstTemplateTypeParmType 0x55a7654f2f90 'int' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654f4308 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55a7654f42d0 'const int *'
|   `-QualType 0x55a7654f2f91 'const int' const
|     `-SubstTemplateTypeParmType 0x55a7654f2f90 'int' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654f4ef0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55a7654f4ea0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55a7654f4e80 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55a7654f4e10 'type'
|     `-SubstTemplateTypeParmType 0x55a7654f4bd0 'int' sugar
|       |-TemplateTypeParmType 0x55a76515f730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76515f6e0 'T'
|       `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654f4f58 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55a7654f41b0 'const int &'
|   `-QualType 0x55a7654f2f91 'const int' const
|     `-SubstTemplateTypeParmType 0x55a7654f2f90 'int' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654f4fb0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654f5018 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55a7654f4240 'int *'
|   `-SubstTemplateTypeParmType 0x55a7654f2f90 'int' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654f5080 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55a7654f42d0 'const int *'
|   `-QualType 0x55a7654f2f91 'const int' const
|     `-SubstTemplateTypeParmType 0x55a7654f2f90 'int' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-BuiltinType 0x55a764e8d370 'int'
|-EnumDecl 0x55a7654f50d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55a7654f51d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a7654f51b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a76518dec8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a76518dea0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a76518de80 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a7654f5258 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a7654f54a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654f5310 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654f53b0 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55a7654f6cd8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55a7654f6bc0 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55a7654f6f98 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55a7654f6e80 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55a7654f72b0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55a7654f7190 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55a7654f75c0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55a7654f74a0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55a7654f78b0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654f76f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654f7770 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55a7654f79d8 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55a7654f7ab8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654f7b10 <col:30> Inherited
|-CXXMethodDecl 0x55a7654f7b58 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55a7654f7c08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654f7c60 <col:30> Inherited
|-CXXMethodDecl 0x55a7654f7d28 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55a7654f7dd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654f7e30 <col:30> Inherited
|-CXXMethodDecl 0x55a7654f7e78 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55a7654f7f28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654f7f80 <col:30> Inherited
|-CXXMethodDecl 0x55a7654f7fc8 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55a7654f8078 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654f80d0 <col:30> Inherited
|-CXXMethodDecl 0x55a7654f8118 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55a7654f81c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654f8220 <col:30> Inherited
|-CXXMethodDecl 0x55a7654f8248 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7654f82f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7654f83a8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a7654f8568 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654f8458 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654f84d0 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55a7654f86b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654f8628 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654f8868 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55a7654f8770 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7654f8920 <col:20>
| `-OptimizeNoneAttr 0x55a7654f8978 <col:30>
|-CXXMethodDecl 0x55a7654f8a98 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55a7654f89a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7654f8b50 <col:20>
| `-OptimizeNoneAttr 0x55a7654f8ba8 <col:30>
|-CXXMethodDecl 0x55a7654f8c60 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654f8bd0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654f8da8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7654f8d18 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654f8ed8 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55a7654f9008 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55a7654f90d8 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55a7654f91a8 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x55a7654f92e8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654f9258 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654f9430 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7654f93a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654f9578 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55a7654f94e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7654f9630 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a7654f9730 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a7654f96a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7654f97e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a7654f98a8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55a7654f99a8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55a7654f9b28 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7654f9a68 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55a7654fa2e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a7654f9be0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55a7654fa248 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55a7654fa148 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55a7654fa3c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a7654fa518 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7654fa488 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55a7654fa5d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a7654fa818 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654fa690 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55a7654fa708 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55a7654fa9d8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55a7654fa8e8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55a7654fac28 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55a7654faaa0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55a7654fab18 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55a7654face8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7654faf48 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55a7654fae50 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55a7654fb018 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a7654fb018

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7654fb150 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55a7654fb268 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x55a7654fb308 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55a7654fb368 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x55a7654fb400 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55a7654fb400
| `-ParmVarDecl 0x55a7654fb518 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55a7654fb5b8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55a7654fb5b8
| `-ParmVarDecl 0x55a7654fb6c8 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55a7654fb768 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55a7654fb768
| `-ParmVarDecl 0x55a7654fb878 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55a7654fb8e8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55a7654fb8e8
| `-ParmVarDecl 0x55a7654fb9f8 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x55a7654fba80 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55a7654fba80

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7654fd010 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x55a7654fd1e8 prev 0x55a7654fd010 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55a7654fd278 <col:46, col:52> col:46 public
|-TypedefDecl 0x55a7654fd2a0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a765500ae0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x55a765500a90 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55a765500a70 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x55a7654fd4b8 'type'
|     `-SubstTemplateTypeParmType 0x55a7654fd480 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55a76517f520 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76517f4d0 'T'
|       `-RecordType 0x55a7654fb1e0 'Router::element_landmark_t'
|         `-CXXRecord 0x55a7654fb150 'element_landmark_t'
|-TypedefDecl 0x55a765500b98 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x55a765500b60 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x55a765500b40 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55a765500ae0 'type'
|     `-ElaboratedType 0x55a765500a90 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x55a765500a70 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x55a7654fd4b8 'type'
|         `-SubstTemplateTypeParmType 0x55a7654fd480 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55a76517f520 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55a76517f4d0 'T'
|           `-RecordType 0x55a7654fb1e0 'Router::element_landmark_t'
|             `-CXXRecord 0x55a7654fb150 'element_landmark_t'
|-CXXMethodDecl 0x55a765500d18 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x55a765500c28 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x55a765500e08 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55a765500ee8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55a765500ee8
|-CXXMethodDecl 0x55a7655011b8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55a7655010c0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x55a7655013f8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55a765501270 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7655012e8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55a7655015c8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55a7655014b8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a765501530 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55a765501728 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55a7655017f8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55a765501a48 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55a7655018b8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55a765501930 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55a765501ca8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x55a765501b18 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55a765501b90 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55a765501e68 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55a765501d78 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55a765502028 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55a765501f30 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55a7655020e0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a765502190 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7655023c8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55a765502240 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7655022b8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55a765502668 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55a765502570 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x55a765502730 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x55a765502780 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55a7655027d0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7654fbb70 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x55a7654fbd78 prev 0x55a7654fbb70 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a7654fcf80 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x55a7654fcf30 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55a7654fcf10 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55a7654fcdc0 'type'
|     `-SubstTemplateTypeParmType 0x55a7654fcc50 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x55a7651550b0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55a765155058 'F'
|       `-RecordType 0x55a7654fc8b0 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x55a7654fc7d0 'typed_array_memory'
|-FieldDecl 0x55a765502820 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x55a765502870 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a7655028a8 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x55a7654fbe10 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a76518c7e8 'T'
|   `-RecordType 0x55a7654fb1e0 'Router::element_landmark_t'
|     `-CXXRecord 0x55a7654fb150 'element_landmark_t'
|-TypedefDecl 0x55a765502938 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x55a765502900 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x55a7654fbe10 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a7654fb1e0 'Router::element_landmark_t'
|       `-CXXRecord 0x55a7654fb150 'element_landmark_t'
|-TypedefDecl 0x55a7655029c8 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55a765502990 'const Router::element_landmark_t &'
|   `-QualType 0x55a7654fbe11 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55a7654fbe10 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a7654fb1e0 'Router::element_landmark_t'
|         `-CXXRecord 0x55a7654fb150 'element_landmark_t'
|-TypedefDecl 0x55a765502a58 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x55a765502a20 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55a7654fbe10 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a7654fb1e0 'Router::element_landmark_t'
|       `-CXXRecord 0x55a7654fb150 'element_landmark_t'
|-TypedefDecl 0x55a765502ae8 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x55a765502ab0 'const Router::element_landmark_t *'
|   `-QualType 0x55a7654fbe11 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55a7654fbe10 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a7654fb1e0 'Router::element_landmark_t'
|         `-CXXRecord 0x55a7654fb150 'element_landmark_t'
|-TypedefDecl 0x55a765503740 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x55a7655036f0 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x55a7655036d0 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x55a765503608 'type'
|     `-LValueReferenceType 0x55a7655035d0 'const Router::element_landmark_t &'
|       `-QualType 0x55a765503371 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x55a765503370 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55a76515f000 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55a76515efa8 'T'
|           `-RecordType 0x55a7654fb1e0 'Router::element_landmark_t'
|             `-CXXRecord 0x55a7654fb150 'element_landmark_t'
|-TypedefDecl 0x55a7655037a8 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55a765502990 'const Router::element_landmark_t &'
|   `-QualType 0x55a7654fbe11 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55a7654fbe10 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a7654fb1e0 'Router::element_landmark_t'
|         `-CXXRecord 0x55a7654fb150 'element_landmark_t'
|-TypedefDecl 0x55a765503800 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a765503868 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x55a765502a20 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55a7654fbe10 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a7654fb1e0 'Router::element_landmark_t'
|       `-CXXRecord 0x55a7654fb150 'element_landmark_t'
|-TypedefDecl 0x55a7655038d0 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x55a765502ab0 'const Router::element_landmark_t *'
|   `-QualType 0x55a7654fbe11 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55a7654fbe10 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a7654fb1e0 'Router::element_landmark_t'
|         `-CXXRecord 0x55a7654fb150 'element_landmark_t'
|-EnumDecl 0x55a765503928 <line:134:5> col:5
| `-EnumConstantDecl 0x55a765503a20 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a765503a00 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a76518dec8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a76518dea0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a76518de80 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a765503aa8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a765503d38 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55a765503b60 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a765503c00 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55a765503ff8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55a765503ee0 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x55a7655042b8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55a7655041a0 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55a765504600 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55a7655044e0 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x55a765504910 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55a7655047f0 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55a765504c00 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55a765504a48 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a765504ac0 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55a765504d28 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55a765504e08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a765504e60 <col:30> Inherited
|-CXXMethodDecl 0x55a765504ea8 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55a765504f58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a765504fb0 <col:30> Inherited
|-CXXMethodDecl 0x55a765505078 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55a765505128 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a765505180 <col:30> Inherited
|-CXXMethodDecl 0x55a7655051c8 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55a765505278 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7655052d0 <col:30> Inherited
|-CXXMethodDecl 0x55a765505318 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55a7655053c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a765505420 <col:30> Inherited
|-CXXMethodDecl 0x55a765505468 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55a765505518 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a765505570 <col:30> Inherited
|-CXXMethodDecl 0x55a765505598 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a765505648 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7655056f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a7655058b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7655057a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a765505820 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55a765505a08 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a765505978 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a765505bb8 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x55a765505ac0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a765505c70 <col:20>
| `-OptimizeNoneAttr 0x55a765505cc8 <col:30>
|-CXXMethodDecl 0x55a765505de8 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x55a765505cf0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a765505ea0 <col:20>
| `-OptimizeNoneAttr 0x55a765505ef8 <col:30>
|-CXXMethodDecl 0x55a765505fb0 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a765505f20 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7655060f8 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a765506068 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a765506228 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55a765506358 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55a765506428 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55a7655064f8 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55a765506638 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7655065a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a765506780 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7655066f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7655068c8 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x55a765506838 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a765506980 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a765506a80 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a7655069f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a765506b38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a765506bf8 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x55a765506cf8 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x55a765506e78 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55a765506db8 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x55a765507608 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a765506f30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x55a765507568 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x55a765507468 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55a7655076e8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a765507838 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7655077a8 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55a7655078f0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a765507b38 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7655079b0 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55a765507a28 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55a765507cc8 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x55a765507c08 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55a765507ed8 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x55a765507d90 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55a765507e08 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55a765507f98 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7655081f8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55a765508100 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x55a7655082c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a7655082c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a76544aaa0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55a76544ac78 prev 0x55a76544aaa0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55a76544ad08 <col:46, col:52> col:46 public
|-TypedefDecl 0x55a76544ad30 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a76544c900 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55a76544c8b0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55a76544b1e0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55a76544b0e0 'type'
|     `-TemplateSpecializationType 0x55a76544b070 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55a76544af50 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55a76544af30 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55a76544af10 <col:24> 'unsigned long' 16
|       `-RecordType 0x55a76544b050 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55a76544af70 'char_array'
|-TypedefDecl 0x55a76544c9b8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55a76544c980 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55a76544c960 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55a76544c900 'type'
|     `-ElaboratedType 0x55a76544c8b0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55a76544b1e0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55a76544b0e0 'type'
|         `-TemplateSpecializationType 0x55a76544b070 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55a76544af50 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55a76544af30 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55a76544af10 <col:24> 'unsigned long' 16
|           `-RecordType 0x55a76544b050 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55a76544af70 'char_array'
|-CXXMethodDecl 0x55a76544cb38 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55a76544ca48 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55a76544cc28 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55a76544cd08 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55a76544cd08
|-CXXMethodDecl 0x55a76544cfd8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55a76544cee0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55a76544d218 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55a76544d090 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a76544d108 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55a76544d3e8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55a76544d2d8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a76544d350 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55a76544d548 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55a76544d618 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55a76544d868 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55a76544d6d8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55a76544d750 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55a76544dac8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55a76544d938 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55a76544d9b0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55a76544dc88 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55a76544db98 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55a76544de48 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55a76544dd50 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55a76544df00 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a76544dfb0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a76544e1e8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55a76544e060 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a76544e0d8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55a76544e488 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55a76544e390 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55a76544e550 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55a76544e5a0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55a76544e5f0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a76550ba20 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x55a76550bc28 prev 0x55a76550ba20 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a76550ccf0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55a76550cca0 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x55a76550cc80 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x55a76550cb30 'type'
|     `-SubstTemplateTypeParmType 0x55a76544a670 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55a765154930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a7651548d8 'T'
|       `-RecordType 0x55a76544a150 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55a76544a068 'sized_array_memory'
|-FieldDecl 0x55a76550cdf0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55a76550ce40 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a76550ce78 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x55a76550bcc0 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a76518c7e8 'T'
|   `-RecordType 0x55a7654cd2e0 'Router::Connection'
|     `-CXXRecord 0x55a7654cd250 'Connection'
|-TypedefDecl 0x55a76550cf38 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x55a76550cf00 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x55a76550bcc0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a7654cd2e0 'Router::Connection'
|       `-CXXRecord 0x55a7654cd250 'Connection'
|-TypedefDecl 0x55a76550cfc8 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x55a76550cf90 'const Router::Connection &'
|   `-QualType 0x55a76550bcc1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55a76550bcc0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a7654cd2e0 'Router::Connection'
|         `-CXXRecord 0x55a7654cd250 'Connection'
|-TypedefDecl 0x55a76550d058 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x55a76550d020 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55a76550bcc0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a7654cd2e0 'Router::Connection'
|       `-CXXRecord 0x55a7654cd250 'Connection'
|-TypedefDecl 0x55a76550d0e8 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x55a76550d0b0 'const Router::Connection *'
|   `-QualType 0x55a76550bcc1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55a76550bcc0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a7654cd2e0 'Router::Connection'
|         `-CXXRecord 0x55a7654cd250 'Connection'
|-TypedefDecl 0x55a76550dd40 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x55a76550dcf0 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x55a76550dcd0 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x55a76550dc08 'type'
|     `-LValueReferenceType 0x55a76550dbd0 'const Router::Connection &'
|       `-QualType 0x55a76550d971 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x55a76550d970 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x55a76515f000 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55a76515efa8 'T'
|           `-RecordType 0x55a7654cd2e0 'Router::Connection'
|             `-CXXRecord 0x55a7654cd250 'Connection'
|-TypedefDecl 0x55a76550dda8 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x55a76550cf90 'const Router::Connection &'
|   `-QualType 0x55a76550bcc1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55a76550bcc0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a7654cd2e0 'Router::Connection'
|         `-CXXRecord 0x55a7654cd250 'Connection'
|-TypedefDecl 0x55a76550de00 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a76550de68 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x55a76550d020 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55a76550bcc0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a7654cd2e0 'Router::Connection'
|       `-CXXRecord 0x55a7654cd250 'Connection'
|-TypedefDecl 0x55a76550ded0 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x55a76550d0b0 'const Router::Connection *'
|   `-QualType 0x55a76550bcc1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55a76550bcc0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a7654cd2e0 'Router::Connection'
|         `-CXXRecord 0x55a7654cd250 'Connection'
|-EnumDecl 0x55a76550df28 <line:134:5> col:5
| `-EnumConstantDecl 0x55a76550e020 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a76550e000 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a76518dec8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a76518dea0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a76518de80 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a76550e0a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a76550e338 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55a76550e160 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a76550e200 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x55a76550e5f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55a76550e4e0 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x55a76550e8b8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55a76550e7a0 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55a76550ec00 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55a76550eae0 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x55a76550ef10 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55a76550edf0 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55a76550f200 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55a76550f048 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a76550f0c0 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55a76550f358 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55a76550f438 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a76550f490 <col:30> Inherited
|-CXXMethodDecl 0x55a76550f4d8 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55a76550f588 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a76550f5e0 <col:30> Inherited
|-CXXMethodDecl 0x55a76550f6a8 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55a76550f758 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a76550f7b0 <col:30> Inherited
|-CXXMethodDecl 0x55a76550f7f8 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55a76550f8a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a76550f900 <col:30> Inherited
|-CXXMethodDecl 0x55a76550f948 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55a76550f9f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a76550fa50 <col:30> Inherited
|-CXXMethodDecl 0x55a76550fa98 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55a76550fb48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a76550fba0 <col:30> Inherited
|-CXXMethodDecl 0x55a76550fbc8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a76550fc78 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a76550fd28 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a76550fee8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55a76550fdd8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a76550fe50 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55a765510038 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a76550ffa8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7655101e8 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x55a7655100f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7655102a0 <col:20>
| `-OptimizeNoneAttr 0x55a7655102f8 <col:30>
|-CXXMethodDecl 0x55a765510418 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x55a765510320 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7655104d0 <col:20>
| `-OptimizeNoneAttr 0x55a765510528 <col:30>
|-CXXMethodDecl 0x55a7655105e0 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a765510550 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a765510728 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a765510698 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a765510858 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x55a765510988 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55a765510a58 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x55a765510b28 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55a765510c68 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a765510bd8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a765510db0 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a765510d20 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a765510ef8 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x55a765510e68 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a765510fb0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a7655110b0 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a765511020 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a765511168 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a765511228 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x55a765511328 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x55a7655114d8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7655113e8 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x55a765511c98 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a765511590 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x55a765511bf8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x55a765511af8 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x55a765511d78 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a765511ec8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55a765511e38 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55a765511f80 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a7655121c8 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55a765512040 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55a7655120b8 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55a765512388 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x55a765512298 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55a7655125d8 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x55a765512450 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55a7655124c8 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55a765512698 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7655128f8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55a765512800 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x55a7655129c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a7655129c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a765409ef0 prev 0x55a7653f0680 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a765409fe8 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55a76540a078 <col:22, col:28> col:22 public
|-EnumDecl 0x55a76540a0a0 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55a76540a1b8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a76540a198 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55a76540a180 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55a76540a160 <col:14> 'int' 999
| |-EnumConstantDecl 0x55a76540a260 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a76540a240 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55a76540a228 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55a76540a208 <col:14> 'int' 1
| |-EnumConstantDecl 0x55a76540a2f0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a76540a2d0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55a76540a2b0 <col:17> 'int' 0
| |-EnumConstantDecl 0x55a76540a380 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a76540a360 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55a76540a340 <col:13> 'int' 1
| |-EnumConstantDecl 0x55a76540a410 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a76540a3f0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55a76540a3d0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55a76540a4a0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a76540a480 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55a76540a460 <col:13> 'int' 3
| |-EnumConstantDecl 0x55a76540a530 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a76540a510 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55a76540a4f0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55a76540a5c0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a76540a5a0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55a76540a580 <col:14> 'int' 5
| |-EnumConstantDecl 0x55a76540a650 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55a76540a630 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55a76540a610 <col:12> 'int' 6
| `-EnumConstantDecl 0x55a76540a6e0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55a76540a6c0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55a76540a6a0 <col:13> 'int' 7
|-VarDecl 0x55a76540a750 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55a76540a7d8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55a76540a860 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55a76540a8e8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55a76540a970 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55a76540a9f8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55a76540aa80 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55a76540ab08 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55a76540ab90 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55a76540ac18 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55a76540aca0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55a76540ada0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55a765411e68 '_nerrors' 'int'
| | `-IntegerLiteral 0x55a7654125f8 <line:128:13> 'int' 0
| `-CompoundStmt 0x55a765412668 <col:16, line:129:5>
|-CXXDestructorDecl 0x55a76540ae90 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55a765412678 <col:29, line:132:5>
|-CXXMethodDecl 0x55a76540b048 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55a76540af80 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a76540b110 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55a76540b1f8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55a7654126d0 <col:44, line:161:5>
|   `-ReturnStmt 0x55a7654126c0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55a7654126a8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55a765412688 <col:9> 'ErrorHandler *' lvalue Var 0x55a765411ec8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55a76540b368 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55a76540b2a8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a76540b430 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55a765412730 <col:43, line:173:5>
|   `-ReturnStmt 0x55a765412720 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55a765412708 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55a7654126e8 <col:9> 'ErrorHandler *' lvalue Var 0x55a765411f40 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55a76540b4e8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55a76540b568 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55a76540b678 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55a76540b5e8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55a76540b7c8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55a76540b738 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55a76540b920 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55a76540b888 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55a76540ba78 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55a76540b9e0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55a76540bbd0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55a76540bb38 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55a76540bde0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55a76540bc88 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55a76540bd08 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55a76540bfb8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55a76540bea0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55a76540bf20 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55a76540c1d8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55a76540c078 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55a76540c0f8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55a76540c3b8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55a76540c298 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55a76540c318 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55a76540c598 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55a76540c478 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55a76540c4f8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55a76540c720 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55a76540c658 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55a76540c8f0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55a76540c7d8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55a76540c850 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55a765412988 <col:57, line:234:5>
|   `-ReturnStmt 0x55a765412978 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55a765412960 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55a765412908 <col:9, col:41> 'int'
|         |-MemberExpr 0x55a7654128d8 <col:9> '<bound member function type>' ->xmessage 0x55a76540c720
|         | `-CXXThisExpr 0x55a7654128c8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55a765412948 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55a765412930 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55a7654128a8 <col:18, col:40> 'String' (CXXTemporary 0x55a7654128a8)
|               `-CallExpr 0x55a765412870 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55a765412858 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55a7654127d0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55a76540e978 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55a7654127f0 <col:31> 'const String' lvalue ParmVar 0x55a76540c850 'str' 'const String &'
|                 `-DeclRefExpr 0x55a765412810 <col:36> 'const String' lvalue ParmVar 0x55a76540c7d8 'anno' 'const String &'
|-CXXMethodDecl 0x55a76540cc30 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55a76540c9b0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55a76540ca30 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55a76540cb00 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55a765412c18 <col:68, line:243:5>
|   `-ReturnStmt 0x55a765412c08 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55a765412bf0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55a765412b90 <col:9, col:41> 'int'
|         |-MemberExpr 0x55a765412b60 <col:9> '<bound member function type>' ->xmessage 0x55a76540c8f0
|         | `-CXXThisExpr 0x55a765412b50 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55a765412a28 <col:18> 'const String' lvalue ParmVar 0x55a76540c9b0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55a765412bd8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55a765412bc0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55a765412b30 <col:24, col:40> 'String' (CXXTemporary 0x55a765412b30)
|               `-CXXMemberCallExpr 0x55a765412ac8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55a765412a58 <col:24> '<bound member function type>' ->vformat 0x55a76540de10
|                 | `-CXXThisExpr 0x55a765412a48 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55a765412af8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55a765412a88 <col:32> 'const char *' lvalue ParmVar 0x55a76540ca30 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55a765412b10 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55a765412aa8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55a76540cb00 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55a76540ced0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55a76540ccf8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55a76540cd70 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55a76540cde8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55a765412f58 <col:23, line:254:5>
|   `-ReturnStmt 0x55a765412f48 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55a765412f30 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55a765412ed0 <col:9, col:71> 'int'
|         |-MemberExpr 0x55a765412ea0 <col:9> '<bound member function type>' ->xmessage 0x55a76540c8f0
|         | `-CXXThisExpr 0x55a765412e90 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55a765412f18 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55a765412f00 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55a765412e50 <col:18, col:65> 'String' (CXXTemporary 0x55a765412e50)
|         |     `-CallExpr 0x55a765412de8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55a765412dd0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55a765412cb8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55a76540e978 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55a765412cd8 <col:31> 'const String' lvalue ParmVar 0x55a76540cd70 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55a765412e30 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55a765412e18 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55a765412db0 <col:37, col:64> 'String' (CXXTemporary 0x55a765412db0)
|         |             `-CallExpr 0x55a765412d80 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55a765412d68 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55a765412cf8 <col:37> 'String (const String &)' lvalue CXXMethod 0x55a76540efc8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55a765412d18 <col:56> 'const String' lvalue ParmVar 0x55a76540ccf8 'landmark' 'const String &'
|         `-DeclRefExpr 0x55a765412e70 <col:68> 'const String' lvalue ParmVar 0x55a76540cde8 'str' 'const String &'
|-CXXMethodDecl 0x55a76540d250 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55a76540cf98 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55a76540d010 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55a76540d090 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55a76540d108 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55a765413210 <col:34, line:267:5>
|   `-ReturnStmt 0x55a765413200 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55a7654131e8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55a765413180 <col:9, col:51> 'int'
|         |-MemberExpr 0x55a765413150 <col:9> '<bound member function type>' ->xmessage 0x55a76540ced0
|         | `-CXXThisExpr 0x55a765413140 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55a765412ff8 <col:18> 'const String' lvalue ParmVar 0x55a76540cf98 'landmark' 'const String &'
|         |-DeclRefExpr 0x55a765413018 <col:28> 'const String' lvalue ParmVar 0x55a76540d010 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55a7654131d0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55a7654131b8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55a765413120 <col:34, col:50> 'String' (CXXTemporary 0x55a765413120)
|               `-CXXMemberCallExpr 0x55a7654130b8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55a765413048 <col:34> '<bound member function type>' ->vformat 0x55a76540de10
|                 | `-CXXThisExpr 0x55a765413038 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55a7654130e8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55a765413078 <col:42> 'const char *' lvalue ParmVar 0x55a76540d090 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55a765413100 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55a765413098 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55a76540d108 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55a76540d360 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55a765413290 <col:25, line:288:5>
|   `-ReturnStmt 0x55a765413280 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55a765413268 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55a765413238 <col:9> 'const int' lvalue ->_nerrors 0x55a765411e68
|         `-CXXThisExpr 0x55a765413228 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55a76540d570 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55a76540d418 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55a76540d498 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55a76540d858 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55a76540d638 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55a76540d6b8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55a76540d730 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55a76540d9f0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55a76540d928 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55a76540dc38 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55a76540dab0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55a76540db28 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55a7654134f0 <col:58, line:357:5>
|   `-ReturnStmt 0x55a7654134e0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55a7654134c8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55a765413498 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55a765413480 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55a765413460 <col:9, col:29> 'String' (CXXTemporary 0x55a765413460)
|             `-CallExpr 0x55a7654133f0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55a7654133d8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55a765413358 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55a76540d858 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55a7654132f8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55a765413428 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55a765413318 <col:21> 'const char *' lvalue ParmVar 0x55a76540dab0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55a765413440 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55a765413338 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55a76540db28 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55a76540de10 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55a76540dd00 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55a76540dd78 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55a76540df68 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55a76540ded8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55a76540e0e8 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55a76540e020 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55a76540e380 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55a76540e1a0 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55a76540e220 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55a76540e298 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55a76540e4e0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55a76540e450 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55a765413608 <col:37, line:441:5>
|   `-IfStmt 0x55a7654135f0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55a765413578 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55a765413548 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55a765413508 <col:6> 'int' lvalue ParmVar 0x55a76540e450 'level' 'int'
|     | `-ImplicitCastExpr 0x55a765413560 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55a765413528 <col:15> 'ErrorHandler::Level' EnumConstant 0x55a76540a4a0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55a7654135d8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55a7654135a8 <col:8> 'int' lvalue ->_nerrors 0x55a765411e68
|         `-CXXThisExpr 0x55a765413598 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55a76540e5a8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55a7654136a0 <col:26, line:448:5>
|   `-BinaryOperator 0x55a765413680 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55a765413630 <col:2> 'int' lvalue ->_nerrors 0x55a765411e68
|     | `-CXXThisExpr 0x55a765413620 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55a765413660 <col:13> 'int' 0
|-CXXMethodDecl 0x55a76540e770 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55a76540e660 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55a76540e6d8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55a76540e978 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55a76540e830 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55a76540e8a8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55a76540ec28 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55a76540ea38 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55a76540eab8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55a76540eb38 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55a76540ece0 <col:59> 0 0
|-CXXMethodDecl 0x55a76540ee78 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55a76540ed58 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55a76540edd8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55a765413d10 <col:70, line:534:5>
|   |-DeclStmt 0x55a765413810 <line:528:2, col:20>
|   | |-VarDecl 0x55a7654136c8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55a765413730 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55a765413768 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55a7654137d0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55a7654138e0 <line:529:2, col:23>
|   | `-VarDecl 0x55a765413840 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55a7654138c8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55a7654138a8 <col:18> 'const char *' lvalue ParmVar 0x55a76540ed58 'begin' 'const char *'
|   |-DoStmt 0x55a765413ca8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55a765413bd8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55a765413bc0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55a765413ba0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55a7654138f8 <col:6> 'const char *' lvalue Var 0x55a765413840 'x' 'const char *'
|   | |     `-CallExpr 0x55a765413af0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55a765413ad8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55a765413a90 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55a765412340 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55a765413b58 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55a765413b40 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55a7654139b0 <col:20, col:27> 'String' (CXXTemporary 0x55a7654139b0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55a765413978 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55a765413b70 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55a7654139d0 <col:30> 'const char *' lvalue Var 0x55a765413840 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55a765413b88 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55a7654139f0 <col:33> 'const char *' lvalue ParmVar 0x55a76540edd8 'end' 'const char *'
|   | |       |-UnaryOperator 0x55a765413a30 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55a765413a10 <col:39> 'String' lvalue Var 0x55a7654136c8 'name' 'String'
|   | |       |-UnaryOperator 0x55a765413a68 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55a765413a48 <col:46> 'String' lvalue Var 0x55a765413768 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55a765413a80 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55a765413c90 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55a765413c78 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55a765413c58 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55a765413c28 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55a7651bf478
|   |         `-ImplicitCastExpr 0x55a765413c10 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55a765413bf0 <col:11> 'String' lvalue Var 0x55a7654136c8 'name' 'String'
|   `-ReturnStmt 0x55a765413d00 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55a765413ce8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55a765413cc8 <col:9> 'const char *' lvalue Var 0x55a765413840 'x' 'const char *'
|-CXXMethodDecl 0x55a76540efc8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55a76540ef38 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55a765414318 <col:55, line:550:5>
|   `-IfStmt 0x55a7654142f0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55a765413f50 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55a765413f38 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55a765413f20 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55a765413f00 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55a765413ed0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55a7651bf478
|     | |       `-DeclRefExpr 0x55a765413d70 <col:6> 'const String' lvalue ParmVar 0x55a76540ef38 'x' 'const String &'
|     | `-BinaryOperator 0x55a765413eb0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55a765413e80 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55a765413e30 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55a765413e18 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55a765413dd0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55a7651d8cb0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55a765413d90 <col:11> 'const String' lvalue ParmVar 0x55a76540ef38 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55a765413db0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55a765413e98 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55a765413e68 <col:19> 'char' 123
|     |-ReturnStmt 0x55a765413fc0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55a765413f90 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55a765413f70 <col:13> 'const String' lvalue ParmVar 0x55a76540ef38 'x' 'const String &'
|     `-IfStmt 0x55a7654142c8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55a765414058 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55a765414040 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55a765414020 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55a765413ff0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55a7651bf478
|       |       `-DeclRefExpr 0x55a765413fd0 <col:11> 'const String' lvalue ParmVar 0x55a76540ef38 'x' 'const String &'
|       |-ReturnStmt 0x55a7654141e0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55a7654141c8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55a765414198 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55a765414180 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55a765414160 <col:13, col:29> 'String' (CXXTemporary 0x55a765414160)
|       |         `-CallExpr 0x55a765414110 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55a7654140f8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55a765414070 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55a76540e770 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55a765414140 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55a765414090 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55a7654140b0 <col:28> 'const String' lvalue ParmVar 0x55a76540ef38 'x' 'const String &'
|       `-ReturnStmt 0x55a7654142b8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55a7654142a0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55a765414270 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55a765414258 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55a765414238 <col:13, col:20> 'String' (CXXTemporary 0x55a765414238)
|                 `-CXXTemporaryObjectExpr 0x55a765414200 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55a76540f1c8 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55a76540f080 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55a76540f0f8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a7654125e8 <col:71> 'bool' false
|-CXXRecordDecl 0x55a76540f278 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55a76540f578 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55a76540f510 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55a76540f4b0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55a76540f470 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55a7651bbd10 'String'
|       | `-CXXRecord 0x55a7651bbc80 'String'
|       |-BuiltinType 0x55a764e8d370 'int'
|       `-DecayedType 0x55a76540cad0 '__va_list_tag *' sugar
|         |-TypedefType 0x55a76540caa0 'va_list' sugar
|         | |-Typedef 0x55a7650acba0 'va_list'
|         | `-TypedefType 0x55a7650acb50 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55a764fe4778 '__gnuc_va_list'
|         |   `-TypedefType 0x55a764fe46e0 '__builtin_va_list' sugar
|         |     |-Typedef 0x55a764ecebd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55a764eceb80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55a764e8e0c0 '__va_list_tag'
|         |         `-CXXRecord 0x55a764e8e028 '__va_list_tag'
|         `-PointerType 0x55a7650b2440 '__va_list_tag *'
|           `-RecordType 0x55a764e8e0c0 '__va_list_tag'
|             `-CXXRecord 0x55a764e8e028 '__va_list_tag'
|-EnumDecl 0x55a76540f5d0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55a76540f6d0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a76540fc30 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76540f6b0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55a76540f690 <col:16> 'int' 1
| |-EnumConstantDecl 0x55a76540f760 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a76540fc48 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76540f740 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55a76540f720 <col:21> 'int' 2
| |-EnumConstantDecl 0x55a76540f7f0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a76540fc60 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76540f7d0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55a76540f7b0 <col:22> 'int' 4
| |-EnumConstantDecl 0x55a76540f880 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a76540fc78 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76540f860 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55a76540f840 <col:17> 'int' 8
| |-EnumConstantDecl 0x55a76540f910 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a76540fc90 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76540f8f0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55a76540f8d0 <col:22> 'int' 16
| |-EnumConstantDecl 0x55a76540f9a0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a76540fca8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76540f980 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55a76540f960 <col:19> 'int' 32
| |-EnumConstantDecl 0x55a76540fa30 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a76540fcc0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76540fa10 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55a76540f9f0 <col:17> 'int' 64
| |-EnumConstantDecl 0x55a76540fac0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a76540fcd8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76540faa0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55a76540fa80 <col:14> 'int' 128
| |-EnumConstantDecl 0x55a76540fb50 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55a76540fcf0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76540fb30 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55a76540fb10 <col:16> 'int' 256
| `-EnumConstantDecl 0x55a76540fbe0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55a76540fd08 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a76540fbc0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55a76540fba0 <col:12> 'int' 1024
|-CXXMethodDecl 0x55a765411bf0 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55a76540fd30 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55a76540fdd0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55a765411d80 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55a765411cb0 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55a765411e28 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55a765411e68 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55a765411ec8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55a765411f40 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55a765412340 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55a765411fb8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55a765412038 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55a7654120b8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55a765412130 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55a7654121a8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55a765412220 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55a765412468 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55a765412468
| `-ParmVarDecl 0x55a765412578 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55a765414678 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55a765414678
  `-ParmVarDecl 0x55a765414788 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7653ebdd0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55a7653ebf20 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55a7653ebfa0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x55a7653ecd98 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55a7653ecd98
| `-ParmVarDecl 0x55a7653ecea8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x55a7653ecf48 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55a7653ecf48
| `-ParmVarDecl 0x55a7653ed058 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x55a7653ed0c8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55a7653ed0c8
|-CXXMethodDecl 0x55a7653ed998 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55a7653ed998
| `-ParmVarDecl 0x55a7653edaa8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x55a7653edb18 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55a7653edb18
| `-ParmVarDecl 0x55a7653edc28 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x55a76552e1b0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55a76552e290 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7653ec0d0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55a7653ec1f8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55a7653ec280 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x55a7653ed1f8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55a7653ed1f8
| `-ParmVarDecl 0x55a7653ed308 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x55a7653ed3a8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55a7653ed3a8
| `-ParmVarDecl 0x55a7653ed4b8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x55a7653ed528 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55a7653ed528
|-CXXMethodDecl 0x55a7653edcc8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55a7653edcc8
| `-ParmVarDecl 0x55a7653eddd8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x55a7653ede48 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55a7653ede48
| `-ParmVarDecl 0x55a7653edf58 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x55a76552e2f0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55a76552e3d0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7653e7758 prev 0x55a7653e6bf0 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55a7653e7850 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x55a7653e78e0 <col:17, col:23> col:17 public
|-EnumDecl 0x55a7653e7908 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x55a7653e7a10 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e8760 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e79f0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x55a7653e79d0 <col:11> 'int' 1
| |-EnumConstantDecl 0x55a7653e7aa0 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e8778 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e7a80 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x55a7653e7a60 <col:12> 'int' 2
| |-EnumConstantDecl 0x55a7653e7b30 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e8790 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e7b10 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x55a7653e7af0 <col:17> 'int' 4
| |-EnumConstantDecl 0x55a7653e7bc0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e87a8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e7ba0 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x55a7653e7b80 <col:16> 'int' 0
| |-EnumConstantDecl 0x55a7653e7c50 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e87c0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e7c30 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55a7653e7c10 <col:19> 'int' 32
| |-EnumConstantDecl 0x55a7653e7ce0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e87d8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e7cc0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x55a7653e7ca0 <col:10> 'int' 64
| |-EnumConstantDecl 0x55a7653e7d70 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e87f0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e7d50 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x55a7653e7d30 <col:19> 'int' 128
| |-EnumConstantDecl 0x55a7653e7e00 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e8808 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e7de0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x55a7653e7dc0 <col:20> 'int' 256
| |-EnumConstantDecl 0x55a7653e7e90 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e8820 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e7e70 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x55a7653e7e50 <col:17> 'int' 512
| |-EnumConstantDecl 0x55a7653e7f20 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e8838 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e7f00 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x55a7653e7ee0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x55a7653e7fb0 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e8850 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e7f90 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x55a7653e7f70 <col:11> 'int' 2048
| |-EnumConstantDecl 0x55a7653e8040 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e8868 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e8020 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x55a7653e8000 <col:16> 'int' 4096
| |-EnumConstantDecl 0x55a7653e80d0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e8880 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e80b0 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x55a7653e8090 <col:13> 'int' 8192
| |-EnumConstantDecl 0x55a7653e8160 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e8898 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e8140 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x55a7653e8120 <col:15> 'int' 16384
| |-EnumConstantDecl 0x55a7653e8230 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x55a7653e8210 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x55a7653e81f0 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55a7653e81b0 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x55a7653e81d0 <col:20> 'int' 26
| |-EnumConstantDecl 0x55a7653e8300 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x55a7653e82e0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x55a7653e82c0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55a7653e8280 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x55a7653e82a0 <col:27> 'int' 27
| |-EnumConstantDecl 0x55a7653e8390 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e88b0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e8370 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x55a7653e8350 <col:17> 'int' 28
| |-EnumConstantDecl 0x55a7653e8460 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x55a7653e8440 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x55a7653e8420 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55a7653e83e0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x55a7653e8400 <col:18> 'int' EnumConstant 0x55a7653e8390 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653e84f0 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e88c8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e84d0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x55a7653e84b0 <col:25> 'int' 8
| |-EnumConstantDecl 0x55a7653e8580 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55a7653e88e0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653e8560 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x55a7653e8540 <col:26> 'int' 16
| `-EnumConstantDecl 0x55a7653e8710 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x55a7653e88f8 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7653e86f0 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x55a7653e86d0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x55a7653e8690 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x55a7653e8650 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x55a7653e8610 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x55a7653e85d0 <col:14> 'int' EnumConstant 0x55a7653e7a10 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x55a7653e85f0 <col:23> 'int' EnumConstant 0x55a7653e7aa0 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x55a7653e8630 <col:33> 'int' EnumConstant 0x55a7653e7b30 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x55a7653e8670 <col:48> 'int' EnumConstant 0x55a7653e84f0 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x55a7653e86b0 <col:71> 'int' EnumConstant 0x55a7653e8580 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x55a7653e8958 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x55a7653ee378 <col:39, line:64:5>
|   `-ReturnStmt 0x55a7653ee368 <line:63:2, col:9>
|     `-MemberExpr 0x55a7653ee338 <col:9> 'const String' lvalue ->_name 0x55a7653ebd80
|       `-CXXThisExpr 0x55a7653ee328 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55a7653e8a18 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x55a7653ee3f8 <col:35, line:71:5>
|   `-ReturnStmt 0x55a7653ee3e8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x55a7653ee3d0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55a7653ee3a0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55a7653ec490
|         `-CXXThisExpr 0x55a7653ee390 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55a7653e8b68 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x55a7653e8ad0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x55a7653ee578 <col:42, line:77:5>
|   `-ReturnStmt 0x55a7653ee568 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x55a7653ee550 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x55a7653ee520 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x55a7653ee480 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x55a7653ee450 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55a7653ee410 <col:9> 'int' lvalue ParmVar 0x55a7653e8ad0 'op' 'int'
|         | `-ImplicitCastExpr 0x55a7653ee468 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55a7653ee430 <col:15> 'Handler::Flags' EnumConstant 0x55a7653e7aa0 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x55a7653ee4b0 <col:25> 'void *const' lvalue ->_write_user_data 0x55a7653ec430
|         | `-CXXThisExpr 0x55a7653ee4a0 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x55a7653ee4f0 <col:44> 'void *const' lvalue ->_read_user_data 0x55a7653ec3c8
|           `-CXXThisExpr 0x55a7653ee4e0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x55a7653e8c38 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x55a7653ee5f8 <col:41, line:82:5>
|   `-ReturnStmt 0x55a7653ee5e8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x55a7653ee5d0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55a7653ee5a0 <col:9> 'void *const' lvalue ->_read_user_data 0x55a7653ec3c8
|         `-CXXThisExpr 0x55a7653ee590 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55a7653e8d00 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x55a7653ee678 <col:42, line:87:5>
|   `-ReturnStmt 0x55a7653ee668 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x55a7653ee650 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55a7653ee620 <col:9> 'void *const' lvalue ->_write_user_data 0x55a7653ec430
|         `-CXXThisExpr 0x55a7653ee610 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55a7653e8dc8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x55a7653e8e68 <col:52> "" ""
|-CXXMethodDecl 0x55a7653e8f00 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x55a7653e8fa0 <col:52> "" ""
|-CXXMethodDecl 0x55a7653e9030 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x55a7653ee768 <col:34, line:98:5>
|   `-ReturnStmt 0x55a7653ee758 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x55a7653ee740 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55a7653ee720 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55a7653ee6f0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55a7653ee6a0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55a7653ec490
|         |   `-CXXThisExpr 0x55a7653ee690 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55a7653ee708 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55a7653ee6d0 <col:18> 'Handler::Flags' EnumConstant 0x55a7653e7a10 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55a7653e90f0 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x55a7653ee858 <col:36, line:104:5>
|   `-ReturnStmt 0x55a7653ee848 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x55a7653ee830 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55a7653ee810 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55a7653ee7e0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55a7653ee790 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55a7653ec490
|         |   `-CXXThisExpr 0x55a7653ee780 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55a7653ee7f8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55a7653ee7c0 <col:18> 'Handler::Flags' EnumConstant 0x55a7653e7b30 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x55a7653e91b0 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x55a7653eea38 <col:38, line:113:5>
|   `-ReturnStmt 0x55a7653eea28 <line:112:2, col:49>
|     `-BinaryOperator 0x55a7653eea08 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x55a7653ee9b0 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x55a7653ee990 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55a7653ee960 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55a7653ee880 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55a7653ec490
|       |   |   `-CXXThisExpr 0x55a7653ee870 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55a7653ee978 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55a7653ee940 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x55a7653ee920 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x55a7653ee8f0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55a7653ee8b0 <col:20> 'Handler::Flags' EnumConstant 0x55a7653e7a10 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55a7653ee908 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55a7653ee8d0 <col:29> 'Handler::Flags' EnumConstant 0x55a7653e7d70 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55a7653ee9f0 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55a7653ee9d0 <col:49> 'Handler::Flags' EnumConstant 0x55a7653e7a10 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55a7653e9270 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x55a7653eeb28 <col:34, line:118:5>
|   `-ReturnStmt 0x55a7653eeb18 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x55a7653eeb00 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55a7653eeae0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55a7653eeab0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55a7653eea60 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55a7653ec490
|         |   `-CXXThisExpr 0x55a7653eea50 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55a7653eeac8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55a7653eea90 <col:18> 'Handler::Flags' EnumConstant 0x55a7653e7aa0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55a7653e9330 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x55a7653eed08 <col:39, line:127:5>
|   `-ReturnStmt 0x55a7653eecf8 <line:126:2, col:51>
|     `-BinaryOperator 0x55a7653eecd8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x55a7653eec80 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x55a7653eec60 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55a7653eec30 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55a7653eeb50 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55a7653ec490
|       |   |   `-CXXThisExpr 0x55a7653eeb40 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55a7653eec48 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55a7653eec10 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x55a7653eebf0 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x55a7653eebc0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55a7653eeb80 <col:20> 'Handler::Flags' EnumConstant 0x55a7653e7aa0 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55a7653eebd8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55a7653eeba0 <col:30> 'Handler::Flags' EnumConstant 0x55a7653e7e00 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55a7653eecc0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55a7653eeca0 <col:51> 'Handler::Flags' EnumConstant 0x55a7653e7aa0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55a7653e93f0 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x55a7653eee10 <col:33, line:132:5>
|   `-ReturnStmt 0x55a7653eee00 <line:131:2, col:41>
|     `-BinaryOperator 0x55a7653eede0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x55a7653eed60 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x55a7653eed30 <col:9> '<bound member function type>' ->read_visible 0x55a7653e91b0
|       |   `-CXXThisExpr 0x55a7653eed20 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x55a7653eedc0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x55a7653eed90 <col:27> '<bound member function type>' ->write_visible 0x55a7653e9330
|           `-CXXThisExpr 0x55a7653eed80 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x55a7653e94b0 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x55a7653eef48 <col:51, line:138:5>
|   `-ReturnStmt 0x55a7653eef38 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x55a7653eef20 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55a7653eef00 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55a7653eeeb8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55a7653eee88 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55a7653eee38 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55a7653ec490
|           |   `-CXXThisExpr 0x55a7653eee28 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55a7653eeea0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55a7653eee68 <col:26> 'Handler::Flags' EnumConstant 0x55a7653e7c50 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55a7653e9570 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x55a7653ef058 <col:50, line:144:5>
|   `-ReturnStmt 0x55a7653ef048 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x55a7653ef030 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55a7653ef010 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55a7653eeff0 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55a7653eefc0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55a7653eef70 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55a7653ec490
|           |   `-CXXThisExpr 0x55a7653eef60 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55a7653eefd8 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55a7653eefa0 <col:26> 'Handler::Flags' EnumConstant 0x55a7653e7c50 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55a7653e9630 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x55a7653ef148 <col:29, line:166:5>
|   `-ReturnStmt 0x55a7653ef138 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x55a7653ef120 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55a7653ef100 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55a7653ef0d0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55a7653ef080 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55a7653ec490
|         |   `-CXXThisExpr 0x55a7653ef070 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55a7653ef0e8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55a7653ef0b0 <col:18> 'Handler::Flags' EnumConstant 0x55a7653e7ce0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x55a7653e98b8 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55a7653e96e0 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x55a7653e9758 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x55a7653e97d0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a7653e9ac8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55a7653e9980 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x55a7653e99f8 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55a7653ee260 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55a7653ee240 <col:62> 'int' 0
| `-CompoundStmt 0x55a7653ef3e8 <col:71, line:188:5>
|   `-ReturnStmt 0x55a7653ef3d8 <line:187:2, col:36>
|     `-ExprWithCleanups 0x55a7653ef3c0 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x55a7653ef390 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55a7653ef378 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55a7653ef358 <col:9, col:36> 'String' (CXXTemporary 0x55a7653ef358)
|             `-CXXMemberCallExpr 0x55a7653ef2b8 <col:9, col:36> 'String'
|               |-MemberExpr 0x55a7653ef288 <col:9> '<bound member function type>' ->call_read 0x55a7653e98b8
|               | `-CXXThisExpr 0x55a7653ef278 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55a7653ef2f0 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55a7653ef1d0 <col:19> 'Element *' lvalue ParmVar 0x55a7653e9980 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x55a7653ef320 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x55a7653ef308 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x55a7653ef238 <col:22, col:29> 'String' (CXXTemporary 0x55a7653ef238)
|               |     `-CXXTemporaryObjectExpr 0x55a7653ef200 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x55a7653ef338 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x55a7653ef258 <col:32> 'ErrorHandler *' lvalue ParmVar 0x55a7653e99f8 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x55a7653e9d60 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55a7653e9b88 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x55a7653e9c00 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55a7653e9c78 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a7653e9ee8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x55a7653e9e28 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x55a7653ea118 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x55a7653e9fa0 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55a7653ea018 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x55a7653ea218 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x55a7653ef448 <col:50, line:225:5>
|   `-ReturnStmt 0x55a7653ef438 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x55a7653ef420 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x55a7653ef400 <col:9> 'const Handler *' lvalue Var 0x55a7653ec5c0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x55a7653ea2b8 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x55a7653ea3c0 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eaf60 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653ea3a0 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55a7653ea380 <col:11> 'Handler::Flags' EnumConstant 0x55a7653e7a10 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653ea450 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eaf78 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653ea430 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55a7653ea410 <col:12> 'Handler::Flags' EnumConstant 0x55a7653e7aa0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653ea4e0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eaf90 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653ea4c0 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55a7653ea4a0 <col:17> 'Handler::Flags' EnumConstant 0x55a7653e7b30 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653ea570 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eafa8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653ea550 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55a7653ea530 <col:16> 'Handler::Flags' EnumConstant 0x55a7653e7bc0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653ea600 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eafc0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653ea5e0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x55a7653ea5c0 <col:19> 'Handler::Flags' EnumConstant 0x55a7653e7c50 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653ea690 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eafd8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653ea670 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55a7653ea650 <col:10> 'Handler::Flags' EnumConstant 0x55a7653e7ce0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653ea720 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eaff0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653ea700 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x55a7653ea6e0 <col:19> 'Handler::Flags' EnumConstant 0x55a7653e7d70 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653ea7b0 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eb008 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653ea790 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x55a7653ea770 <col:20> 'Handler::Flags' EnumConstant 0x55a7653e7e00 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653ea840 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eb020 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653ea820 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x55a7653ea800 <col:17> 'Handler::Flags' EnumConstant 0x55a7653e7e90 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653ea8d0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eb038 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653ea8b0 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x55a7653ea890 <col:15> 'Handler::Flags' EnumConstant 0x55a7653e7f20 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653ea960 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eb050 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653ea940 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55a7653ea920 <col:11> 'Handler::Flags' EnumConstant 0x55a7653e7fb0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653ea9f0 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eb068 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653ea9d0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55a7653ea9b0 <col:16> 'Handler::Flags' EnumConstant 0x55a7653e8040 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653eaa80 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eb080 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eaa60 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55a7653eaa40 <col:13> 'Handler::Flags' EnumConstant 0x55a7653e80d0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653eab10 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eb098 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eaaf0 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55a7653eaad0 <col:15> 'Handler::Flags' EnumConstant 0x55a7653e8160 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653eaba0 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eb0b0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eab80 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x55a7653eab60 <col:20> 'Handler::Flags' EnumConstant 0x55a7653e8230 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653eac30 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eb0c8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eac10 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x55a7653eabf0 <col:27> 'Handler::Flags' EnumConstant 0x55a7653e8300 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653eacc0 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eb0e0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eaca0 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55a7653eac80 <col:22> 'Handler::Flags' EnumConstant 0x55a7653e8390 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653ead50 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eb0f8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653ead30 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x55a7653ead10 <col:18> 'Handler::Flags' EnumConstant 0x55a7653e8460 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653eade0 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eb110 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eadc0 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x55a7653eada0 <col:25> 'Handler::Flags' EnumConstant 0x55a7653e84f0 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653eae70 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55a7653eb128 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eae50 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x55a7653eae30 <col:26> 'Handler::Flags' EnumConstant 0x55a7653e8580 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x55a7653eaf10 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x55a7653eb140 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7653eaef0 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x55a7653eaec0 <col:20> 'Handler::Flags' EnumConstant 0x55a7653e8710 'f_special' 'Handler::Flags'
|-EnumDecl 0x55a7653eb158 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x55a7653eb260 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55a7653eb7c0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eb240 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55a7653eb220 <col:12> 'Handler::Flags' EnumConstant 0x55a7653e7a10 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653eb2f0 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55a7653eb7d8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eb2d0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55a7653eb2b0 <col:13> 'Handler::Flags' EnumConstant 0x55a7653e7aa0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653eb380 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55a7653eb7f0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eb360 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55a7653eb340 <col:15> 'Handler::Flags' EnumConstant 0x55a7653e7b30 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653eb410 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55a7653eb808 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eb3f0 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55a7653eb3d0 <col:8> 'Handler::Flags' EnumConstant 0x55a7653e7ce0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653eb4a0 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55a7653eb820 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eb480 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55a7653eb460 <col:9> 'Handler::Flags' EnumConstant 0x55a7653e7fb0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653eb530 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55a7653eb838 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eb510 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55a7653eb4f0 <col:14> 'Handler::Flags' EnumConstant 0x55a7653e8040 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653eb5c0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55a7653eb850 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eb5a0 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55a7653eb580 <col:11> 'Handler::Flags' EnumConstant 0x55a7653e80d0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653eb650 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55a7653eb868 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eb630 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55a7653eb610 <col:13> 'Handler::Flags' EnumConstant 0x55a7653e8160 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55a7653eb6e0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55a7653eb880 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eb6c0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55a7653eb6a0 <col:20> 'Handler::Flags' EnumConstant 0x55a7653e8390 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x55a7653eb770 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x55a7653eb898 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7653eb750 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x55a7653eb730 <col:16> 'Handler::Flags' EnumConstant 0x55a7653e8460 'f_user0' 'Handler::Flags'
|-EnumDecl 0x55a7653eb8b0 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x55a7653eb970 <col:25> "" ""
| |-EnumConstantDecl 0x55a7653eba20 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x55a7653ebb00 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653eba00 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55a7653eb9e0 <col:14> 'Handler::Flags' EnumConstant 0x55a7653e7bc0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x55a7653ebab0 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x55a7653ebb18 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7653eba90 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x55a7653eba70 <col:17> 'Handler::Flags' EnumConstant 0x55a7653e7c50 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55a7653ebc98 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x55a7653ebb40 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x55a7653ebbc0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x55a7653efb08 <col:70, line:284:5>
|   |-ParenExpr 0x55a7653ef928 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x55a7653ef8f8 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x55a7653ef628 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7653ef5f8 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x55a7653ef5a0 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x55a7653ef580 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x55a7653ef550 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x55a7653ef470 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55a7653ec490
|   |   |   |   |   `-CXXThisExpr 0x55a7653ef460 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x55a7653ef568 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x55a7653ef530 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x55a7653ef510 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x55a7653ef4e0 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x55a7653ef4a0 <col:34> 'Handler::Flags' EnumConstant 0x55a7653e7a10 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x55a7653ef4f8 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x55a7653ef4c0 <col:43> 'Handler::Flags' EnumConstant 0x55a7653e84f0 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x55a7653ef5e0 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x55a7653ef5c0 <col:69> 'Handler::Flags' EnumConstant 0x55a7653e7a10 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x55a7653ef688 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7653ef668 <col:85> 'int' 0
|   |   `-CallExpr 0x55a7653ef858 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x55a7653ef840 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653ef820 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7653ef898 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653ef6f8 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x55a7653ef8b0 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653ef748 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x55a7653ef8c8 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7653ef780 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x55a7653ef8e0 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7653ef808 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7653ef7f0 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7653ef7a0 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x55a7653efaf8 <line:283:2, col:38>
|     `-ExprWithCleanups 0x55a7653efae0 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x55a7653efab0 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55a7653efa98 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55a7653efa78 <col:9, col:38> 'String' (CXXTemporary 0x55a7653efa78)
|             `-CallExpr 0x55a7653efa10 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x55a7653ef9f8 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x55a7653ef988 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x55a7653ebfa0
|               |   `-MemberExpr 0x55a7653ef958 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x55a7653ec068
|               |     `-CXXThisExpr 0x55a7653ef948 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55a7653efa40 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55a7653ef9b8 <col:22> 'Element *' lvalue ParmVar 0x55a7653ebb40 'e' 'Element *'
|               `-ImplicitCastExpr 0x55a7653efa58 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x55a7653ef9d8 <col:25> 'void *' lvalue ParmVar 0x55a7653ebbc0 'new_user_data' 'void *'
|-AccessSpecDecl 0x55a7653ebd48 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55a7653ebd80 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x55a7653ebdd0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55a7653ebf20 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55a7653ebfa0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x55a7653ecd98 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55a7653ecd98
| | `-ParmVarDecl 0x55a7653ecea8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x55a7653ecf48 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55a7653ecf48
| | `-ParmVarDecl 0x55a7653ed058 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x55a7653ed0c8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55a7653ed0c8
| |-CXXMethodDecl 0x55a7653ed998 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55a7653ed998
| | `-ParmVarDecl 0x55a7653edaa8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x55a7653edb18 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55a7653edb18
| | `-ParmVarDecl 0x55a7653edc28 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x55a76552e1b0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55a76552e290 <col:5>
|-FieldDecl 0x55a7653ec068 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x55a7653ec0d0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55a7653ec1f8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55a7653ec280 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x55a7653ed1f8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55a7653ed1f8
| | `-ParmVarDecl 0x55a7653ed308 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x55a7653ed3a8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55a7653ed3a8
| | `-ParmVarDecl 0x55a7653ed4b8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x55a7653ed528 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55a7653ed528
| |-CXXMethodDecl 0x55a7653edcc8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55a7653edcc8
| | `-ParmVarDecl 0x55a7653eddd8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x55a7653ede48 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55a7653ede48
| | `-ParmVarDecl 0x55a7653edf58 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x55a76552e2f0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55a76552e3d0 <col:5>
|-FieldDecl 0x55a7653ec348 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x55a7653ec3c8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x55a7653ec430 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x55a7653ec490 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x55a7653ec4f8 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x55a7653ec560 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x55a7653ec5c0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x55a7653ec6e0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x55a7653ec638 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x55a7653ee310 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55a7653ee2f8 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x55a7653ee2e0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55a7653ee2c0 <col:30, col:37> 'String' (CXXTemporary 0x55a7653ee2c0)
|           `-CXXTemporaryObjectExpr 0x55a7653ee288 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x55a7653ec888 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x55a7653ec7c8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x55a7653eca08 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x55a7653ec940 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x55a7653ecbc8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x55a7653ecc08 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x55a7653ecc08
| `-ParmVarDecl 0x55a7653ecce8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x55a7653ed638 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x55a7653ed638
| `-ParmVarDecl 0x55a7653ed748 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x55a7653ed7e8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x55a7653ed7e8
| `-ParmVarDecl 0x55a7653ed8f8 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x55a7653edfc8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x55a7653edfc8
| `-ParmVarDecl 0x55a7653ee0d8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x55a7653ee160 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x55a7653ee160

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a765513538 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x55a765513748 prev 0x55a765513538 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a765514d00 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55a765514cb0 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x55a765514c90 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x55a765514b40 'type'
|     `-SubstTemplateTypeParmType 0x55a7654555e0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55a765154930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a7651548d8 'T'
|       `-RecordType 0x55a765455130 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55a765455048 'sized_array_memory'
|-FieldDecl 0x55a765514e00 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55a765514e50 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a765514e88 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x55a7655137e0 'void *' sugar
|   |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a76518c7e8 'T'
|   `-PointerType 0x55a764e8dad0 'void *'
|     `-BuiltinType 0x55a764e8d2d0 'void'
|-TypedefDecl 0x55a765514f18 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x55a765514ee0 'void *&'
|   `-SubstTemplateTypeParmType 0x55a7655137e0 'void *' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-PointerType 0x55a764e8dad0 'void *'
|       `-BuiltinType 0x55a764e8d2d0 'void'
|-TypedefDecl 0x55a765514fd8 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x55a765514fa0 'void *const &'
|   `-QualType 0x55a7655137e1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55a7655137e0 'void *' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-PointerType 0x55a764e8dad0 'void *'
|         `-BuiltinType 0x55a764e8d2d0 'void'
|-TypedefDecl 0x55a765515068 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x55a765515030 'void **'
|   `-SubstTemplateTypeParmType 0x55a7655137e0 'void *' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-PointerType 0x55a764e8dad0 'void *'
|       `-BuiltinType 0x55a764e8d2d0 'void'
|-TypedefDecl 0x55a7655150f8 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x55a7655150c0 'void *const *'
|   `-QualType 0x55a7655137e1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55a7655137e0 'void *' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-PointerType 0x55a764e8dad0 'void *'
|         `-BuiltinType 0x55a764e8d2d0 'void'
|-TypedefDecl 0x55a765515ce0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x55a765515c90 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x55a765515c70 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x55a765515c00 'type'
|     `-SubstTemplateTypeParmType 0x55a7655159c0 'void *' sugar
|       |-TemplateTypeParmType 0x55a76515f730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76515f6e0 'T'
|       `-PointerType 0x55a764e8dad0 'void *'
|         `-BuiltinType 0x55a764e8d2d0 'void'
|-TypedefDecl 0x55a765515d48 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x55a765514fa0 'void *const &'
|   `-QualType 0x55a7655137e1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55a7655137e0 'void *' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-PointerType 0x55a764e8dad0 'void *'
|         `-BuiltinType 0x55a764e8d2d0 'void'
|-TypedefDecl 0x55a765515da0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a765515e08 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x55a765515030 'void **'
|   `-SubstTemplateTypeParmType 0x55a7655137e0 'void *' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-PointerType 0x55a764e8dad0 'void *'
|       `-BuiltinType 0x55a764e8d2d0 'void'
|-TypedefDecl 0x55a765515e70 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x55a7655150c0 'void *const *'
|   `-QualType 0x55a7655137e1 'void *const' const
|     `-SubstTemplateTypeParmType 0x55a7655137e0 'void *' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-PointerType 0x55a764e8dad0 'void *'
|         `-BuiltinType 0x55a764e8d2d0 'void'
|-EnumDecl 0x55a765515ec8 <line:134:5> col:5
| `-EnumConstantDecl 0x55a765515fc0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a765515fa0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a76518dec8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a76518dea0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a76518de80 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a765516048 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a765516298 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a765516100 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7655161a0 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x55a765516558 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x55a765516440 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x55a765516818 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x55a765516700 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55a765516b60 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x55a765516a40 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x55a765516e70 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x55a765516d50 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55a765517160 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a765516fa8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a765517020 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55a7655172b8 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55a765517398 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7655173f0 <col:30> Inherited
|-CXXMethodDecl 0x55a765517438 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55a7655174e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a765517540 <col:30> Inherited
|-CXXMethodDecl 0x55a765517608 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55a7655176b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a765517710 <col:30> Inherited
|-CXXMethodDecl 0x55a765517758 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55a765517808 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a765517860 <col:30> Inherited
|-CXXMethodDecl 0x55a7655178a8 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55a765517958 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7655179b0 <col:30> Inherited
|-CXXMethodDecl 0x55a7655179f8 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55a765517aa8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a765517b00 <col:30> Inherited
|-CXXMethodDecl 0x55a765517b28 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a765517bd8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a765517c88 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a765517e48 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a765517d38 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a765517db0 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55a765517f98 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a765517f08 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a765518148 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x55a765518050 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a765518200 <col:20>
| `-OptimizeNoneAttr 0x55a765518258 <col:30>
|-CXXMethodDecl 0x55a765518378 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55a765518280 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a765518430 <col:20>
| `-OptimizeNoneAttr 0x55a765518488 <col:30>
|-CXXMethodDecl 0x55a765518540 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7655184b0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a765518688 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7655185f8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7655187b8 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x55a7655188e8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x55a7655189b8 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x55a765518a88 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x55a765518bc8 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55a765518b38 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a765518d10 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a765518c80 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a765518e58 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55a765518dc8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a765518f10 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a765519010 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a765518f80 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7655190c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a765519188 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x55a765519288 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x55a765519408 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55a765519348 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x55a765519bc8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a7655194c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x55a765519b28 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x55a765519a28 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x55a765519ca8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a765519df8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55a765519d68 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55a765519eb0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a76551a0f8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a765519f70 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55a765519fe8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55a76551a2b8 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x55a76551a1c8 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55a76551a508 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x55a76551a380 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55a76551a3f8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55a76551a5c8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a76551a828 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x55a76551a730 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x55a76551a8f8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a76551a8f8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a76551aaf0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55a76551ac08 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x55a76551ac98 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x55a76551ada0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x55a76551adf0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a76551ad80 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x55a76551ad60 <col:27> 'int' 4096
|-FieldDecl 0x55a76551ae18 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x55a76551ae80 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x55a76551b078 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x55a76551b108 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x55a76551b2c8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x55a76551b168 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x55a76551b1e0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x55a76551ae18 'name' 'String'
| | `-CXXConstructExpr 0x55a765526c68 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55a765526c28 <col:20> 'const String' lvalue ParmVar 0x55a76551b168 'n' 'const String &'
| |-CXXCtorInitializer Field 0x55a76551ae80 'nsig' 'int'
| | `-IntegerLiteral 0x55a765526cc0 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x55a76551b078 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x55a765526da8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55a76551b108 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x55a765526d68 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x55a765526d28 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55a76551b1e0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x55a765527038 <col:42, line:289:9>
|   `-CallExpr 0x55a765526fe8 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x55a765526fd0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55a765526fb0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55a7650eefe8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55a765527020 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x55a765526ef8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x55a765526ed8 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x55a765526ec0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a765526e70 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55a76551b078
|     |     |   `-CXXThisExpr 0x55a765526e60 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x55a765526ea0 <col:25> 'int' 0
|     |-IntegerLiteral 0x55a765526f10 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55a765526f90 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x55a765526f70 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x55a765526f40 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55a76551b078 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55a765526f30 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x55a76551b3a8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55a76551b3a8
| `-ParmVarDecl 0x55a76551b4b8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x55a76551b558 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55a76551b558
| `-ParmVarDecl 0x55a76551b668 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x55a76551b708 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55a76551b708
| `-ParmVarDecl 0x55a76551b818 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x55a76551b888 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55a76551b888
| `-ParmVarDecl 0x55a76551b998 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x55a76551ba20 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55a76551ba20

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7654c2e10 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a7654c2f28 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x55a7654c2fb8 <col:21, col:27> col:21 public
|-EnumDecl 0x55a7654c2fe0 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x55a7654c30f8 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x55a7654c30d8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55a7654c30c0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55a7654c30a0 <col:32> 'int' 1
| `-EnumConstantDecl 0x55a7654c31a0 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x55a7654c3180 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55a7654c3168 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55a7654c3148 <col:53> 'int' 1000
|-CXXConstructorDecl 0x55a7654c3250 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x55a7654c3788 <col:19, col:21>
|-CXXDestructorDecl 0x55a7654c3340 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x55a7654c3798 <col:28, col:30>
|-CXXMethodDecl 0x55a7654c3500 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x55a7654c3430 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x55a7654c3608 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x55a7654c3608
  `-ParmVarDecl 0x55a7654c3718 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7654c3d40 prev 0x55a76549ed80 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55a7654c3e38 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x55a7654c3ec8 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x55a7654c3f38 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55a7654c3ff8 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x55a7654c40b8 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x55a7654c4178 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x55a7654c4238 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x55a7654c42d8 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x55a7654c4438 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x55a7654c4418 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x55a7654c43f8 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x55a7654c43c0 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x55a7654c43a0 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x55a7654c43d8 <col:42> 'int' 1
|-CXXMethodDecl 0x55a7654c44d8 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x55a7654c4648 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55a7654c4588 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x55a7654c4790 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55a7654c4700 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x55a7654c4858 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x55a7654c4b80 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x55a7654c4c48 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x55a7654c4dc8 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x55a7654c4d00 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55a7654c4e90 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x55a7654c5098 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x55a7654c4f40 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x55a7654c4fc0 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x55a7654c5228 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x55a7654c5160 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x55a7654c5378 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x55a7654c52e8 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x55a7654c54c8 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x55a7654c5438 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x55a7654c5618 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x55a7654c5588 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x55a7654c5848 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x55a7654c56d8 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x55a7654c5770 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x55a7654c5a58 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55a7654c5908 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x55a7654c5980 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55a7655238b0 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55a765523890 <col:60> 'int' 0
|-CXXMethodDecl 0x55a7654c5ce8 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x55a7654c5b18 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55a7654c5b90 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x55a7654c5c08 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55a7655238e8 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55a7655238c8 <col:76> 'int' 0
|-CXXMethodDecl 0x55a7654c5f88 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55a7654c5db0 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55a7654c5e28 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x55a7654c5ea0 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55a765523920 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55a765523900 <col:84> 'int' 0
|-CXXMethodDecl 0x55a7654c62e0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55a7654c6050 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x55a7654c60c8 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x55a7654c6148 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x55a7654c61e8 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55a7654c6590 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55a7654c63b0 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x55a7654c6430 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x55a7654c64a8 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55a7654c67f8 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55a7654c6658 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x55a7654c66d8 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x55a7654c6750 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55a7654c6cb0 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55a7654c68c0 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55a7654c6940 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x55a7654c69e8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x55a7654c6b60 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55a7654c6d70 <col:115> "" ""
|-CXXMethodDecl 0x55a7654c7130 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55a7654c6df0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55a7654c6e70 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x55a7654c6ee8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x55a7654c7030 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55a7654c71f0 <col:113> "" ""
|-CXXMethodDecl 0x55a7654c7340 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x55a7654c7278 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x55a7654c7510 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x55a7654c7400 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x55a7654c7478 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x55a7654c7718 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x55a7654c75d0 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x55a7654c7648 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x55a7654c7b18 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55a7654c77d8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55a7654c7850 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55a7654c78c8 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a7654c7948 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x55a7654c79c0 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a765523958 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a765523938 <col:137> 'int' 0
|-CXXMethodDecl 0x55a7654c7f28 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55a7654c7bf0 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x55a7654c7c68 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x55a7654c7ce0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a7654c7d60 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x55a7654c7dd8 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a765523990 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a765523970 <col:139> 'int' 0
|-CXXMethodDecl 0x55a7654c83d8 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x55a7654c8000 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x55a7654c8078 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x55a7654c80f0 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a7654c8168 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a7654c81e8 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x55a7655239c8 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a7655239a8 <col:133> 'int' 0
| `-ParmVarDecl 0x55a7654c8268 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x55a765523a00 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55a7655239e0 <col:160> 'int' 0
|-CXXMethodDecl 0x55a7654c8770 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55a7654c84b8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55a7654c8530 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55a7654c85a8 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a7654c8620 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a765523a38 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a765523a18 <col:116> 'int' 0
|-EnumDecl 0x55a7654c8830 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x55a7654c8930 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x55a7654c8980 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7654c8910 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x55a7654c88f0 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x55a7654c8b00 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x55a7654c89a8 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x55a7654c8a20 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x55a7654c8d18 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x55a7654c8bc0 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x55a7654c8c40 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x55a7654c9178 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x55a7654c8dd8 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x55a7654c9060 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x55a7654c9300 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x55a7654c9238 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x55a7654c94b0 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x55a7654c93b8 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x55a7654c96c0 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x55a7654c9568 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x55a7654c95e8 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x55a7654c9848 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x55a7654c9780 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x55a7654c9968 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x55a7654c9a58 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x55a7654c9bc8 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x55a7654c9b08 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x55a7654c9d50 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x55a7654c9c80 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x55a7654c9f58 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x55a7654c9e08 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x55a7654c9e88 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x55a7654ca088 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x55a7654ca178 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x55a7654ca238 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x55a7654ca438 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55a7654ca2e8 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x55a7654ca360 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55a765523ae8 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55a765523ad0 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x55a765523ab8 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55a765523a98 <col:58, col:65> 'String' (CXXTemporary 0x55a765523a98)
|           `-CXXTemporaryObjectExpr 0x55a765523a60 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x55a7654ca608 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55a7654ca4f8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55a7654ca570 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55a765523b98 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55a765523b80 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55a765523b68 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55a765523b48 <col:71, col:78> 'String' (CXXTemporary 0x55a765523b48)
|           `-CXXTemporaryObjectExpr 0x55a765523b10 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55a7654ca7d8 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55a7654ca6c8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55a7654ca740 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55a765523c48 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55a765523c30 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55a765523c18 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55a765523bf8 <col:71, col:78> 'String' (CXXTemporary 0x55a765523bf8)
|           `-CXXTemporaryObjectExpr 0x55a765523bc0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55a7654ca9a8 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55a7654ca898 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x55a7654ca910 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55a765523cf8 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55a765523ce0 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x55a765523cc8 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55a765523ca8 <col:70, col:77> 'String' (CXXTemporary 0x55a765523ca8)
|           `-CXXTemporaryObjectExpr 0x55a765523c70 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x55a7654cab28 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x55a7654caa68 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x55a7654cad48 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x55a7654cabe0 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x55a7654cac58 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x55a7654cae48 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x55a7654cae48
|-CXXMethodDecl 0x55a7654caf50 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55a7654cb010 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55a7654cb0d0 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x55a7654cb190 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55a7654cb388 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x55a7654cb240 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x55a7654cb2b8 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x55a7654cb740 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x55a7654cb448 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x55a7654cb4c0 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x55a7654cb538 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x55a7654cb5b0 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x55a7654cb630 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x55a7654cbaa0 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x55a7654cb820 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x55a7654cb8a0 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x55a7654cb920 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x55a7654cb9a0 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x55a7654cbb80 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x55a7654cbcc0 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x55a7654cbc30 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x55a7654cbe10 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55a7654cbd78 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a7654cc018 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x55a7654cbec8 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x55a7654cbf40 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a7654cc168 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x55a7654cc0d8 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a7654cc2b0 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x55a7654cc220 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x55a7654cc4f0 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x55a7654cc370 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55a7654cc418 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x55a7654cc678 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x55a7654cc5b0 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x55a7654cc720 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a7654cc838 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x55a7654cc8e0 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x55a7654cc948 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x55a7654cca00 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x55a765523d20 <col:16, line:150:9>
| |-CXXConstructorDecl 0x55a7654ccbd8 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x55a7654ccac0 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x55a7654ccb40 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x55a7654cc8e0 'idx' 'int'
| | | `-ImplicitCastExpr 0x55a765523d70 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55a765523d30 <col:19> 'int' lvalue ParmVar 0x55a7654ccac0 'i' 'int'
| | |-CXXCtorInitializer Field 0x55a7654cc948 'port' 'int'
| | | `-ImplicitCastExpr 0x55a765523df0 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55a765523db0 <col:28> 'int' lvalue ParmVar 0x55a7654ccb40 'p' 'int'
| | `-CompoundStmt 0x55a765523e40 <col:31, line:153:9>
| |-CXXMethodDecl 0x55a7654ccdb8 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55a7654cccc8 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55a765524040 <col:46, line:157:9>
| |   `-ReturnStmt 0x55a765524030 <line:156:13, col:46>
| |     `-BinaryOperator 0x55a765524010 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x55a765523f10 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55a765523ee0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55a765523e60 <col:20> 'const int' lvalue ->idx 0x55a7654cc8e0
| |       | |   `-CXXThisExpr 0x55a765523e50 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55a765523ef8 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55a765523eb0 <col:27, col:29> 'const int' lvalue .idx 0x55a7654cc8e0
| |       |     `-DeclRefExpr 0x55a765523e90 <col:27> 'const Router::Port' lvalue ParmVar 0x55a7654cccc8 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55a765523ff0 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x55a765523fc0 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55a765523f40 <col:36> 'const int' lvalue ->port 0x55a7654cc948
| |         |   `-CXXThisExpr 0x55a765523f30 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55a765523fd8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55a765523f90 <col:44, col:46> 'const int' lvalue .port 0x55a7654cc948
| |             `-DeclRefExpr 0x55a765523f70 <col:44> 'const Router::Port' lvalue ParmVar 0x55a7654cccc8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55a7654ccf00 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55a7654cce70 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55a765524248 <col:46, line:160:9>
| |   `-ReturnStmt 0x55a765524238 <line:159:13, col:46>
| |     `-BinaryOperator 0x55a765524218 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x55a765524118 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x55a7655240e8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55a765524068 <col:20> 'const int' lvalue ->idx 0x55a7654cc8e0
| |       | |   `-CXXThisExpr 0x55a765524058 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55a765524100 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55a7655240b8 <col:27, col:29> 'const int' lvalue .idx 0x55a7654cc8e0
| |       |     `-DeclRefExpr 0x55a765524098 <col:27> 'const Router::Port' lvalue ParmVar 0x55a7654cce70 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55a7655241f8 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x55a7655241c8 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55a765524148 <col:36> 'const int' lvalue ->port 0x55a7654cc948
| |         |   `-CXXThisExpr 0x55a765524138 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55a7655241e0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55a765524198 <col:44, col:46> 'const int' lvalue .port 0x55a7654cc948
| |             `-DeclRefExpr 0x55a765524178 <col:44> 'const Router::Port' lvalue ParmVar 0x55a7654cce70 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55a7654cd048 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55a7654ccfb8 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x55a765524570 <col:45, line:163:9>
| |   `-ReturnStmt 0x55a765524560 <line:162:13, col:65>
| |     `-BinaryOperator 0x55a765524540 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x55a765524320 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55a7655242f0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55a765524270 <col:20> 'const int' lvalue ->idx 0x55a7654cc8e0
| |       | |   `-CXXThisExpr 0x55a765524260 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55a765524308 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55a7655242c0 <col:26, col:28> 'const int' lvalue .idx 0x55a7654cc8e0
| |       |     `-DeclRefExpr 0x55a7655242a0 <col:26> 'const Router::Port' lvalue ParmVar 0x55a7654ccfb8 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55a765524520 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x55a765524500 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x55a765524400 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55a7655243d0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55a765524350 <col:36> 'const int' lvalue ->idx 0x55a7654cc8e0
| |           | |   `-CXXThisExpr 0x55a765524340 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55a7655243e8 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55a7655243a0 <col:43, col:45> 'const int' lvalue .idx 0x55a7654cc8e0
| |           |     `-DeclRefExpr 0x55a765524380 <col:43> 'const Router::Port' lvalue ParmVar 0x55a7654ccfb8 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55a7655244e0 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x55a7655244b0 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55a765524430 <col:52> 'const int' lvalue ->port 0x55a7654cc948
| |             |   `-CXXThisExpr 0x55a765524420 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55a7655244c8 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55a765524480 <col:59, col:61> 'const int' lvalue .port 0x55a7654cc948
| |                 `-DeclRefExpr 0x55a765524460 <col:59> 'const Router::Port' lvalue ParmVar 0x55a7654ccfb8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55a7654cd190 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55a7654cd100 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55a765524898 <col:46, line:166:9>
| |   `-ReturnStmt 0x55a765524888 <line:165:13, col:66>
| |     `-BinaryOperator 0x55a765524868 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x55a765524648 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55a765524618 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55a765524598 <col:20> 'const int' lvalue ->idx 0x55a7654cc8e0
| |       | |   `-CXXThisExpr 0x55a765524588 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55a765524630 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55a7655245e8 <col:26, col:28> 'const int' lvalue .idx 0x55a7654cc8e0
| |       |     `-DeclRefExpr 0x55a7655245c8 <col:26> 'const Router::Port' lvalue ParmVar 0x55a7654cd100 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55a765524848 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x55a765524828 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x55a765524728 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55a7655246f8 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55a765524678 <col:36> 'const int' lvalue ->idx 0x55a7654cc8e0
| |           | |   `-CXXThisExpr 0x55a765524668 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55a765524710 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55a7655246c8 <col:43, col:45> 'const int' lvalue .idx 0x55a7654cc8e0
| |           |     `-DeclRefExpr 0x55a7655246a8 <col:43> 'const Router::Port' lvalue ParmVar 0x55a7654cd100 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55a765524808 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x55a7655247d8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55a765524758 <col:52> 'const int' lvalue ->port 0x55a7654cc948
| |             |   `-CXXThisExpr 0x55a765524748 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55a7655247f0 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55a7655247a8 <col:60, col:62> 'const int' lvalue .port 0x55a7654cc948
| |                 `-DeclRefExpr 0x55a765524788 <col:60> 'const Router::Port' lvalue ParmVar 0x55a7654cd100 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x55a7655248b0 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x55a7655248b0
| | `-ParmVarDecl 0x55a7655249c8 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x55a765524a68 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x55a765524a68
| | `-ParmVarDecl 0x55a765524b78 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x55a765524c10 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55a765524ee0 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x55a765524ee0
| | `-ParmVarDecl 0x55a765524fe8 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x55a765525058 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55a765525168 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x55a765525488 <col:12>
|     |-BinaryOperator 0x55a765525328 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55a7655252e0 <col:12> 'int' lvalue ->idx 0x55a7654cc8e0
|     | | `-CXXThisExpr 0x55a7655252d0 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55a765525310 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55a7655252a0 <col:12> 'int' xvalue .idx 0x55a7654cc8e0
|     |     `-CXXStaticCastExpr 0x55a765525270 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55a765525240 <col:12> 'Router::Port' lvalue ParmVar 0x55a765525168 '' 'Router::Port &&'
|     |-BinaryOperator 0x55a765525430 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55a7655253e8 <col:12> 'int' lvalue ->port 0x55a7654cc948
|     | | `-CXXThisExpr 0x55a7655253d8 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55a765525418 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55a7655253a8 <col:12> 'int' xvalue .port 0x55a7654cc948
|     |     `-CXXStaticCastExpr 0x55a765525378 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55a765525348 <col:12> 'Router::Port' lvalue ParmVar 0x55a765525168 '' 'Router::Port &&'
|     `-ReturnStmt 0x55a765525478 <col:12>
|       `-UnaryOperator 0x55a765525460 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a765525450 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x55a7654cd250 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a7654cd368 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x55a7654cd558 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x55a7654cd610 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x55a7654cd558 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55a765524be8 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55a765524d20 <col:22, line:173:9>
| |-CXXConstructorDecl 0x55a7654ce5a8 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x55a7654cd6d0 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x55a7654ce3b0 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x55a7654ce430 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x55a7654ce4b0 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x55a7654cd558 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55a765524d30 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55a765525768 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x55a765525558 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x55a765525520 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x55a765525508 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x55a7655251f0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55a765525058 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x55a765524e00 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x55a765524de8 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x55a765524d98 <col:13> 'Router::Port [2]' lvalue ->p 0x55a7654cd558
| |   |   | |   `-CXXThisExpr 0x55a765524d88 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x55a765524dc8 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x55a7655251d8 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x55a765524ea0 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x55a765524e70 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x55a765524e30 <col:25> 'int' lvalue ParmVar 0x55a7654ce430 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x55a765524e88 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x55a765524e50 <col:33> 'int' lvalue ParmVar 0x55a7654ce4b0 'to_port' 'int'
| |   `-ExprWithCleanups 0x55a765525750 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x55a765525718 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55a765525700 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x55a7655256e0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55a765525058 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x55a7655255e8 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x55a7655255d0 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x55a765525580 <col:13> 'Router::Port [2]' lvalue ->p 0x55a7654cd558
| |       | |   `-CXXThisExpr 0x55a765525570 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x55a7655255b0 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x55a7655256c8 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x55a765525688 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x55a765525658 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x55a765525618 <col:25> 'int' lvalue ParmVar 0x55a7654cd6d0 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x55a765525670 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x55a765525638 <col:35> 'int' lvalue ParmVar 0x55a7654ce3b0 'from_port' 'int'
| |-CXXMethodDecl 0x55a7654ce778 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x55a7654ce688 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x55a765525d28 <col:45, line:182:9>
| |   |-ParenExpr 0x55a765525c08 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55a765525bd8 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55a7655258a8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55a765525878 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55a7655257e0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55a7655257c8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55a765525788 <col:34> 'int' lvalue ParmVar 0x55a7654ce688 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55a7655257a8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55a765525858 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55a765525840 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55a765525800 <col:44> 'int' lvalue ParmVar 0x55a7654ce688 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55a765525820 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55a765525908 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55a7655258e8 <col:59> 'int' 0
| |   |   `-CallExpr 0x55a765525b38 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55a765525b20 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55a765525b00 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55a765525b78 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55a765525978 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55a765525b90 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55a7655259a0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55a765525ba8 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55a7655259d8 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x55a765525bc0 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55a765525ae8 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55a765525ad0 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55a765525a78 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x55a765525d18 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x55a765525cf8 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55a765525cc8 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55a765525c38 <col:20> 'Router::Port const[2]' lvalue ->p 0x55a7654cd558
| |       |   `-CXXThisExpr 0x55a765525c28 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55a765525ce0 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55a765525c68 <col:22> 'int' lvalue ParmVar 0x55a7654ce688 'i' 'int'
| |-CXXMethodDecl 0x55a7654ce928 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x55a7654ce838 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x55a7655262a0 <col:33, line:186:9>
| |   |-ParenExpr 0x55a7655261c0 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55a765526190 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55a765525e68 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55a765525e38 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55a765525da0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55a765525d88 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55a765525d48 <col:34> 'int' lvalue ParmVar 0x55a7654ce838 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55a765525d68 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55a765525e18 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55a765525e00 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55a765525dc0 <col:44> 'int' lvalue ParmVar 0x55a7654ce838 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55a765525de0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55a765525ec8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55a765525ea8 <col:59> 'int' 0
| |   |   `-CallExpr 0x55a7655260f0 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55a7655260d8 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55a7655260b8 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55a765526130 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55a765525f38 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55a765526148 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55a765525f60 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55a765526160 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55a765525f98 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x55a765526178 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55a7655260a0 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55a765526088 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55a765526038 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x55a765526290 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x55a765526270 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55a765526240 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55a7655261f0 <col:20> 'Router::Port [2]' lvalue ->p 0x55a7654cd558
| |       |   `-CXXThisExpr 0x55a7655261e0 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55a765526258 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55a765526220 <col:22> 'int' lvalue ParmVar 0x55a7654ce838 'i' 'int'
| |-CXXMethodDecl 0x55a7654ceac8 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x55a7654cea08 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x55a765526678 <col:52, line:190:9>
| |   `-ReturnStmt 0x55a765526668 <line:189:13, col:51>
| |     `-BinaryOperator 0x55a765526648 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x55a765526460 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x55a765526448 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x55a765526400 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55a7654ccdb8 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x55a765526338 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x55a765526320 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x55a7655262d0 <col:20> 'Router::Port const[2]' lvalue ->p 0x55a7654cd558
| |       | | |   `-CXXThisExpr 0x55a7655262c0 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x55a765526300 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x55a7655263e0 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x55a7655263c8 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x55a765526378 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x55a7654cd558
| |       |   |   `-DeclRefExpr 0x55a765526358 <col:28> 'const Router::Connection' lvalue ParmVar 0x55a7654cea08 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x55a7655263a8 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x55a765526610 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x55a7655265f8 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x55a7655265d8 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55a7654ccdb8 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x55a765526510 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x55a7655264f8 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x55a7655264a8 <col:38> 'Router::Port const[2]' lvalue ->p 0x55a7654cd558
| |         | |   `-CXXThisExpr 0x55a765526498 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x55a7655264d8 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x55a7655265b8 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x55a7655265a0 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x55a765526550 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55a7654cd558
| |           |   `-DeclRefExpr 0x55a765526530 <col:46> 'const Router::Connection' lvalue ParmVar 0x55a7654cea08 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x55a765526580 <col:50> 'int' 1
| `-CXXMethodDecl 0x55a7654cec10 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x55a7654ceb80 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x55a765526c10 <col:51, line:193:9>
|     `-ReturnStmt 0x55a765526c00 <line:192:13, col:69>
|       `-BinaryOperator 0x55a765526be0 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x55a765526808 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x55a7655267f0 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x55a7655267d0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55a7654cd048 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x55a765526708 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x55a7655266f0 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x55a7655266a0 <col:20> 'Router::Port const[2]' lvalue ->p 0x55a7654cd558
|         | | |   `-CXXThisExpr 0x55a765526690 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x55a7655266d0 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x55a7655267b0 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x55a765526798 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x55a765526748 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x55a7654cd558
|         |   |   `-DeclRefExpr 0x55a765526728 <col:27> 'const Router::Connection' lvalue ParmVar 0x55a7654ceb80 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x55a765526778 <col:31> 'int' 0
|         `-ParenExpr 0x55a765526bc0 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x55a765526ba0 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x55a7655269b8 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x55a7655269a0 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x55a765526980 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55a7654ccdb8 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x55a7655268b8 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x55a7655268a0 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x55a765526850 <col:38> 'Router::Port const[2]' lvalue ->p 0x55a7654cd558
|             | | |   `-CXXThisExpr 0x55a765526840 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x55a765526880 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x55a765526960 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x55a765526948 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x55a7655268f8 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55a7654cd558
|             |   |   `-DeclRefExpr 0x55a7655268d8 <col:46> 'const Router::Connection' lvalue ParmVar 0x55a7654ceb80 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x55a765526928 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x55a765526b68 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x55a765526b50 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55a765526b30 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55a7654cd048 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x55a765526a68 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x55a765526a50 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x55a765526a00 <col:56> 'Router::Port const[2]' lvalue ->p 0x55a7654cd558
|               | |   `-CXXThisExpr 0x55a7655269f0 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x55a765526a30 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x55a765526b10 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x55a765526af8 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x55a765526aa8 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x55a7654cd558
|                 |   `-DeclRefExpr 0x55a765526a88 <col:63> 'const Router::Connection' lvalue ParmVar 0x55a7654ceb80 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x55a765526ad8 <col:67> 'int' 1
|-AccessSpecDecl 0x55a7654cecd0 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x55a7654cecf8 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x55a7654cedb0 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x55a7654cee70 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55a7654ceec0 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55a7654cef10 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55a7654cef60 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x55a7654cefb0 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x55a7654cf000 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x55a7654cf118 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55a7654cf0f8 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x55a7654cf0e0 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x55a7654cf0c0 <col:25> 'int' 2
| |-EnumConstantDecl 0x55a7654cf1c0 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55a7654cf1a0 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x55a7654cf188 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x55a7654cf168 <col:48> 'int' 1
| |-EnumConstantDecl 0x55a7654cf250 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55a7654cf230 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x55a7654cf210 <col:71> 'int' 0
| |-EnumConstantDecl 0x55a7654cf2e0 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55a7654cf2c0 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x55a7654cf2a0 <col:30> 'int' 1
| `-EnumConstantDecl 0x55a7654cf370 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x55a7654cf350 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x55a7654cf330 <col:50> 'int' 2
|-FieldDecl 0x55a7654cf3d0 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x55a7654cf430 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x55a7654cf498 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x55a7654cf538 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x55a7654cf518 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x55a7654cf4e8 <col:30> 'int' 1
|-FieldDecl 0x55a7654cf5d8 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x55a7654cf5b8 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x55a7654cf588 <col:33> 'int' 1
|-FieldDecl 0x55a7654cf678 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x55a7654cf658 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x55a7654cf628 <col:32> 'int' 1
|-FieldDecl 0x55a7654cf6e0 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x55a7654cf740 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x55a7654da8e0 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x55a7654e6550 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55a7654e6650 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55a7654f2d80 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x55a7654fb100 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x55a7654fb150 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55a7654fb268 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x55a7654fb308 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x55a7654fb368 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x55a7654fb400 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55a7654fb400
| | `-ParmVarDecl 0x55a7654fb518 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x55a7654fb5b8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55a7654fb5b8
| | `-ParmVarDecl 0x55a7654fb6c8 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x55a7654fb768 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55a7654fb768
| | `-ParmVarDecl 0x55a7654fb878 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x55a7654fb8e8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55a7654fb8e8
| | `-ParmVarDecl 0x55a7654fb9f8 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x55a7654fba80 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55a7654fba80
|-FieldDecl 0x55a7655083b0 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x55a765508410 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55a765508520 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55a765508878 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x55a765508980 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55a765512ab0 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x55a765512bc0 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55a765512cc0 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55a765512dd0 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55a765512ee0 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55a765512ff0 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55a765513100 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x55a765513150 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x55a765513250 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x55a7655132a0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a765513230 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x55a765513210 <col:29> 'int' 256
|-FieldDecl 0x55a765513300 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x55a765513368 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x55a7655133d0 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x55a7655134d0 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55a76551a9e0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x55a76551aa40 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x55a76551aaa0 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x55a76551aaf0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55a76551ac08 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x55a76551ac98 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x55a76551ada0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x55a76551adf0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55a76551ad80 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x55a76551ad60 <col:27> 'int' 4096
| |-FieldDecl 0x55a76551ae18 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x55a76551ae80 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x55a76551b078 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x55a76551b108 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x55a76551b2c8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x55a76551b168 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x55a76551b1e0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x55a76551ae18 'name' 'String'
| | | `-CXXConstructExpr 0x55a765526c68 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x55a765526c28 <col:20> 'const String' lvalue ParmVar 0x55a76551b168 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x55a76551ae80 'nsig' 'int'
| | | `-IntegerLiteral 0x55a765526cc0 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x55a76551b078 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x55a765526da8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x55a76551b108 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x55a765526d68 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55a765526d28 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55a76551b1e0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x55a765527038 <col:42, line:289:9>
| |   `-CallExpr 0x55a765526fe8 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55a765526fd0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55a765526fb0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55a7650eefe8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55a765527020 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x55a765526ef8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x55a765526ed8 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x55a765526ec0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x55a765526e70 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55a76551b078
| |     |     |   `-CXXThisExpr 0x55a765526e60 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x55a765526ea0 <col:25> 'int' 0
| |     |-IntegerLiteral 0x55a765526f10 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55a765526f90 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x55a765526f70 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x55a765526f40 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55a76551b078 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x55a765526f30 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x55a76551b3a8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55a76551b3a8
| | `-ParmVarDecl 0x55a76551b4b8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x55a76551b558 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55a76551b558
| | `-ParmVarDecl 0x55a76551b668 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x55a76551b708 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55a76551b708
| | `-ParmVarDecl 0x55a76551b818 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x55a76551b888 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55a76551b888
| | `-ParmVarDecl 0x55a76551b998 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x55a76551ba20 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55a76551ba20
|-FieldDecl 0x55a76551bb10 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x55a76551bb70 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x55a76551bbd0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x55a76551bc30 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x55a76551bc90 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x55a76551bda0 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55a76551bea0 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55a76551bf00 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x55a765520638 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x55a765520570 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x55a7655207e8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x55a7655206f8 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x55a765520930 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x55a7655208a0 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x55a765520cd8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x55a7655209e8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x55a765520a60 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x55a765520ae0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x55a765520b58 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x55a765520bd0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a765523d10 <col:57> 'bool' false
|-CXXMethodDecl 0x55a765520e48 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55a765520db0 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55a765520f98 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55a765520f00 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x55a7655210e8 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55a765521050 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x55a765521240 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x55a7655211a8 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x55a765521560 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x55a7655212f8 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x55a765521370 <col:50> col:54 'bool'
| |-ParmVarDecl 0x55a7655213f0 <col:56> col:59 'int'
| `-ParmVarDecl 0x55a765521468 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x55a7655216c8 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55a765521630 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x55a765521790 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x55a765521850 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x55a765521a50 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x55a765521900 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x55a765521978 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x55a765521b20 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x55a765521c68 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x55a765521bd0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x55a765527270 <col:42, line:326:5>
|   `-ReturnStmt 0x55a765527260 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x55a765527248 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x55a765527228 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x55a7655271f8 <col:16, col:45> '<bound member function type>' .back 0x55a7654f91a8
|           `-ArraySubscriptExpr 0x55a765527178 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x55a765527148 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a765527060 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x55a765508878
|             |   `-CXXThisExpr 0x55a765527050 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x55a765527160 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x55a765527090 <col:38> 'bool' lvalue ParmVar 0x55a765521bd0 'isout' 'bool'
|-CXXMethodDecl 0x55a765521e38 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x55a765521d20 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x55a765521d98 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x55a765521f90 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x55a765521ef8 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x55a765522238 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x55a765522048 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x55a7655220c0 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x55a765522140 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x55a765522410 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x55a765522300 <col:30> col:34 'bool'
| `-ParmVarDecl 0x55a765522378 <col:36> col:40 'bool'
|-CXXMethodDecl 0x55a765522598 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x55a7655224d8 <col:30> col:33 'int'
|-CXXMethodDecl 0x55a765522830 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x55a765522658 <col:23> col:26 'int'
| |-ParmVarDecl 0x55a7655226d0 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x55a765522748 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x55a765522a48 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x55a7655228f8 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x55a765522970 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x55a765522c58 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x55a765522b10 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x55a765522b88 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x55a765522dd8 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x55a765522d18 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x55a765522fd8 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x55a765522e90 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x55a765522f08 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x55a7655231b0 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a765523098 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x55a765523118 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x55a765523490 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55a765523270 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x55a7655232e8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55a765523368 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x55a7655233e0 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x55a765523570 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55a7655235d0 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x55a765523850 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x55a765523750 parent 0x55a7653f0870 prev 0x55a765400498 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x55a765523630 <col:36> col:39 'int'
    `-ParmVarDecl 0x55a7655236b0 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7653f0870 prev 0x55a7653f05f0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a7653f0968 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55a7653f09f8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55a7653f0a58 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55a7653f0b48 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55a7653f0c48 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55a7653f0e18 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55a7653f0cc8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55a7653f0d40 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55a7653f0fa8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55a7653f0ee0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55a7653f1050 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55a7653f1188 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55a7653f10c0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55a7653f1328 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55a7653f1268 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55a7653f14c8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55a7653f1408 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55a7653f1570 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55a7653f1670 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55a7653f1750 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653f1650 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55a7653f1630 <col:26> 'int' 1
| `-EnumConstantDecl 0x55a7653f1700 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55a7653f1768 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7653f16e0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55a7653f16c0 <col:44> 'int' 2
|-CXXMethodDecl 0x55a7653f18b0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55a7653f1798 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55a7653f1818 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55a7653f1a08 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55a7653f1978 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55a7653f1c48 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55a7653f1ac8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55a7653f1b40 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55a7653f1cf8 <col:20>
| `-OptimizeNoneAttr 0x55a7653f1d50 <col:30>
|-CXXMethodDecl 0x55a7653f1e58 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55a7653f1d90 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55a7653f1f00 <col:20>
| `-OptimizeNoneAttr 0x55a7653f1f58 <col:30>
|-CXXMethodDecl 0x55a7653f1fa8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55a7653f2070 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55a7653f2188 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55a7653f2210 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55a7653f2298 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55a7653f2320 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55a7653f23a8 <line:59:5, col:35> col:23 used PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55a7653f2438 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55a7653f24f8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55a7653f2580 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55a7653f2608 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55a7653f2690 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55a7653f2718 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55a7653f27a0 <line:67:5, col:39> col:23 used PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55a7653f2830 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55a7653f28f0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55a7653f2980 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55a7653f2ad0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55a7653f2a38 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55a7653f2c60 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55a7653f2b90 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55a7653f2f10 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55a7653f2d18 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55a7653f2d98 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55a7653f2e18 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55a7653f2fc8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55a7653f30d0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a7653f3360 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653f30b0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55a7653f3090 <col:33> 'int' 0
| |-EnumConstantDecl 0x55a7653f3160 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a7653f3378 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653f3140 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55a7653f3120 <col:32> 'int' 20
| |-EnumConstantDecl 0x55a7653f31f0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a7653f3390 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653f31d0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55a7653f31b0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55a7653f3280 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a7653f33a8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653f3260 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55a7653f3240 <col:35> 'int' 100
| `-EnumConstantDecl 0x55a7653f3310 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55a7653f33c0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7653f32f0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55a7653f32d0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55a7653f3400 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55a7653f3840 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55a7653f36b0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55a7653f3728 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a7653f3910 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55a7653f3a90 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55a7653f39c0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a7653f3c98 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55a7653f3b48 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55a7653f3bc0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a7653f3d98 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55a7653f3e38 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55a7653f3f00 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a7653f3f90 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55a7653f41c0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653f3f70 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55a7653f3f50 <col:36> 'int' EnumConstant 0x55a7653f3f00 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a7653f3fe0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a7653f4030 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a7653f4080 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a7653f40d0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a7653f4120 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55a7653f4170 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55a7653f42a8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55a7653f41e8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55a7653f4370 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55a7653f4430 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55a7653f44f0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55a7653f45b0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55a7653f46c8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55a7653f4790 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x55a7653f4910 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55a7653f4840 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55a7653f4a38 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55a7653f4c38 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55a7653f4ae8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55a7653f4b68 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55a765402588 <col:54, line:127:5>
|   |-ParenExpr 0x55a765402438 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55a765402408 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55a7654020f8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55a7654020d0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55a7654020b8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55a7654020a0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55a765402070 <col:31> 'Router *' lvalue ->_router 0x55a7653fff50
|   |   |         `-CXXThisExpr 0x55a765402060 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55a765402158 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a765402138 <col:48> 'int' 0
|   |   `-CallExpr 0x55a765402368 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55a765402350 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a765402330 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7654023a8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7654021c8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55a7654023c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7654021e8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55a7654023d8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a765402220 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55a7654023f0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a765402318 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a765402300 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7654022b8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55a7654024d0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55a765402468 <col:9> 'Router *' lvalue ->_router 0x55a7653fff50
|   | | `-CXXThisExpr 0x55a765402458 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55a7654024b8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a765402498 <col:19> 'Router *' lvalue ParmVar 0x55a7653f4ae8 'r' 'Router *'
|   `-BinaryOperator 0x55a765402568 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55a765402500 <col:9> 'int' lvalue ->_eindex 0x55a7653fffb8
|     | `-CXXThisExpr 0x55a7654024f0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55a765402550 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55a765402530 <col:19> 'int' lvalue ParmVar 0x55a7653f4b68 'eindex' 'int'
|-CXXMethodDecl 0x55a7653f4dc0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55a7653f4cf8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55a7653f4e90 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55a7653f4f58 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55a7653f4ff8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55a7653f5248 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55a7653f50c0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55a7653f5140 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55a7653f52f8 <col:20>
| `-OptimizeNoneAttr 0x55a7653f5350 <col:30>
|-CXXMethodDecl 0x55a7653f5458 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55a7653f5390 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55a7653f5500 <col:20>
| `-OptimizeNoneAttr 0x55a7653f5558 <col:30>
|-CXXMethodDecl 0x55a7653f5628 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55a7653f5598 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55a7653f56d0 <col:20>
| `-OptimizeNoneAttr 0x55a7653f5728 <col:30>
|-CXXMethodDecl 0x55a7653f58b8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55a7653f5760 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55a7653f57e0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55a7653f5a48 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55a7653f5980 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55a7653f5b98 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55a7653f5b08 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55a7653f5ce8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55a7653f5c58 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55a7653f5e38 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55a7653f5da8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55a7653f60f8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55a7653f5ef0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55a7653f5f70 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55a7653f6018 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55a7653f61d0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55a7653f6290 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55a7653f6560 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55a7653f6410 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55a7653f6488 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55a7653f6688 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55a7653f6860 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55a7653f6740 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55a7653f67c0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55a7653f6a48 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55a7653f6928 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55a7653f69a8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55a7653f6db8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55a7653f6b08 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55a7653f6b80 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a7653f6c00 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55a765401b70 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a765401b50 <col:106> 'int' 0
| `-ParmVarDecl 0x55a7653f6c78 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a765401ba8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a765401b88 <col:126> 'int' 0
|-CXXMethodDecl 0x55a7653f7158 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a7653f6e88 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55a7653f6f20 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a7653f6fa0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55a7653f7018 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a765401be0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a765401bc0 <col:114> 'int' 0
|-CXXMethodDecl 0x55a7653f74e8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a7653f7230 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55a7653f72a8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a7653f7328 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55a765401bf8 <col:96> 'int' 0
| `-ParmVarDecl 0x55a7653f73a0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a765401c38 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a765401c18 <col:116> 'int' 0
|-CXXMethodDecl 0x55a7653f7868 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55a7653f75b8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55a7653f7630 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a7653f76b0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55a765401c70 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a765401c50 <col:109> 'int' 0
| `-ParmVarDecl 0x55a7653f7728 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a765401ca8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a765401c88 <col:129> 'int' 0
|-CXXMethodDecl 0x55a7653f7be8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a7653f7938 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55a7653f79b0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a7653f7a30 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55a7653f7aa8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a765401ce0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a765401cc0 <col:117> 'int' 0
|-CXXMethodDecl 0x55a7653f7f78 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a7653f7cc0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653f7d38 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a7653f7db8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55a765401cf8 <col:99> 'int' 0
| `-ParmVarDecl 0x55a7653f7e30 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a765401d38 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a765401d18 <col:119> 'int' 0
|-CXXMethodDecl 0x55a7653f8398 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55a7653f8048 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55a7653f80c8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55a7653f8140 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a7653f81c0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55a765401d70 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a765401d50 <col:108> 'int' 0
| `-ParmVarDecl 0x55a7653f8240 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55a765401da8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55a765401d88 <col:141> 'int' 0
|-CXXMethodDecl 0x55a7653f87b8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55a7653f8470 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55a7653f84f0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55a7653f8568 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a7653f85e8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55a7653f8668 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55a765401dc0 <col:121> 'int' 0
|-CXXMethodDecl 0x55a7653f8be8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55a7653f8898 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55a7653f8918 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55a7653f8990 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a7653f8a10 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55a765401de0 <col:98> 'int' 0
| `-ParmVarDecl 0x55a7653f8a90 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55a765401e00 <col:123> 'int' 0
|-CXXMethodDecl 0x55a7653f8eb0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55a7653f8cc0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55a7653f8d40 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55a7653f8dc0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55a765401e20 <col:80> 'int' 0
|-EnumDecl 0x55a7653f8f68 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55a7653f9070 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a7653f9300 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653f9050 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55a7653f9030 <col:42> 'int' 1
| |-EnumConstantDecl 0x55a7653f9100 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a7653f9318 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653f90e0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55a7653f90c0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55a7653f9190 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a7653f9330 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653f9170 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55a7653f9150 <col:44> 'int' 4
| |-EnumConstantDecl 0x55a7653f9220 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a7653f9348 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653f9200 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55a7653f91e0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55a7653f92b0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55a7653f9360 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7653f9290 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55a7653f9270 <col:34> 'int' 6
|-CXXMethodDecl 0x55a7653f9618 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55a7653f9388 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55a7653f9428 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55a7653f94a8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55a7653f9520 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55a765401ed8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55a765401ec0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55a765401ea8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55a765401e88 <col:98, col:105> 'String' (CXXTemporary 0x55a765401e88)
|           `-CXXTemporaryObjectExpr 0x55a765401e50 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55a7653f98b8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55a7653f96e8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55a7653f9760 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55a7653f97d8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55a765401f88 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55a765401f70 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55a765401f58 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55a765401f38 <col:94, col:101> 'String' (CXXTemporary 0x55a765401f38)
| |         `-CXXTemporaryObjectExpr 0x55a765401f00 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55a765402770 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55a7654026e8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55a7654026b8 <col:9> '<bound member function type>' ->add_task_handlers 0x55a7653f9618
|     | `-CXXThisExpr 0x55a7654026a8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55a765402728 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a765402628 <col:27> 'Task *' lvalue ParmVar 0x55a7653f96e8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55a765402740 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a765402648 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55a7653f9760 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55a765402758 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55a765402668 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55a7653f92b0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55a765402688 <col:62> 'const String' lvalue ParmVar 0x55a7653f97d8 'prefix' 'const String &'
|-CXXMethodDecl 0x55a7653f9ac8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55a7653f9980 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55a7653f99f8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55a765402038 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55a765402020 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55a765402008 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55a765401fe8 <col:70, col:77> 'String' (CXXTemporary 0x55a765401fe8)
| |         `-CXXTemporaryObjectExpr 0x55a765401fb0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55a765402948 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55a7654028c0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55a765402890 <col:9> '<bound member function type>' ->add_task_handlers 0x55a7653f9618
|     | `-CXXThisExpr 0x55a765402880 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55a765402900 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a765402800 <col:27> 'Task *' lvalue ParmVar 0x55a7653f9980 'task' 'Task *'
|     |-ImplicitCastExpr 0x55a765402918 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55a765402820 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55a765402930 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55a765402840 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55a7653f92b0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55a765402860 <col:57> 'const String' lvalue ParmVar 0x55a7653f99f8 'prefix' 'const String &'
|-CXXMethodDecl 0x55a7653f9da8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55a7653f9b90 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653f9c10 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7653f9c88 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55a7653fa058 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55a7653f9e78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653f9ef8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7653f9f78 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55a7653fa348 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55a7653fa128 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653fa1a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7653fa220 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55a7653fa5f8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55a7653fa418 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653fa498 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7653fa518 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55a7653fa8a8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55a7653fa6c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653fa748 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7653fa7c8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55a7653fab58 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55a7653fa978 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653fa9f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7653faa70 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55a7653fae08 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55a7653fac28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653faca8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7653fad28 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55a7653fb118 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55a7653faf30 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653fafb0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7653fb030 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55a7653fb3f8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55a7653fb1e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653fb268 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7653fb310 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55a7653fb6d8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55a7653fb4c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653fb548 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7653fb5f0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55a7653fb940 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55a7653fb7a8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55a7653fb828 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55a7653fb8a0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55a7653fbbe8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55a7653fba10 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55a7653fba90 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55a7653fbb08 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55a7653fbe98 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55a7653fbcb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653fbd38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7653fbdb8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55a7653fc148 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55a7653fbf68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653fbfe8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7653fc060 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55a7653fc3f8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55a7653fc218 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653fc298 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7653fc310 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55a7653fc6c8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55a7653fc4c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653fc548 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a7653fc5e8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55a7653fc9f8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55a7653fc798 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a7653fc818 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55a7653fc890 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55a7653fc908 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a765402050 <col:93> 'bool' false
|-CXXMethodDecl 0x55a7653fcbe0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a7653fcac8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55a7653fcb48 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55a7653fcdb8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a7653fcca0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55a7653fcd20 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55a7653fd098 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55a7653fce78 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55a7653fcef0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55a7653fcf70 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55a7653fcfe8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55a7653fd388 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55a7653fd168 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55a7653fd1e0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55a7653fd260 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55a7653fd2d8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55a7653fd5c0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55a7653fd460 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55a7653fd4e0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55a7653fd7a8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55a7653fd688 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55a7653fd708 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55a7653fd858 prev 0x55a7653f4ff8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a7653fd950 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55a7653fd9e0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55a7653fda58 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55a7653fdb18 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55a7653fdbe0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55a7653fdd58 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55a7653fdc90 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55a7653fde00 <col:24>
| | `-OptimizeNoneAttr 0x55a7653fde58 <col:34>
| |-CXXMethodDecl 0x55a7653fdea0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55a7653fe158 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55a7653fdf50 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55a7653fdfc8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55a7653fe048 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55a7653fe210 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55a7653fe248 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55a7653fe2b0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55a7653fe338 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55a7653fe658 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55a7653fe3f0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55a7653fe468 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55a7653fe4e0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55a7653fe560 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55a7653fe770 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55a7654060e8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55a7654060e8
| | `-ParmVarDecl 0x55a7654061f8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55a765406298 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55a765406298
| | `-ParmVarDecl 0x55a7654063a8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55a76552eae8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a7653fe7e8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55a7653fe888 <col:38> "" ""
|-CXXMethodDecl 0x55a7653fe918 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55a7653fe9b8 <col:44> "" ""
|-AccessSpecDecl 0x55a7653fea28 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55a7653fea50 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55a7653feb50 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55a7653feba0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7653feb30 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55a7653feb10 <col:27> 'int' 4
|-FieldDecl 0x55a7653fec58 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55a7653fee08 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55a7653feec0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55a7653fff50 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55a7653fffb8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55a765400108 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55a765400048 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55a7654002b8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55a7654001c8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55a765400498 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55a765400378 <col:20> col:23 'int'
| `-ParmVarDecl 0x55a7654003f8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55a765400740 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55a765400560 <col:23> col:26 'int'
| |-ParmVarDecl 0x55a7654005e0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55a765400658 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55a7654007f8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55a7654008c0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55a765400910 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55a765400960 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55a765400b40 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55a7654009f0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55a765400a68 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a765400de8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55a765400c08 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55a765400c88 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55a765400d00 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55a765401008 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55a765400eb8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55a765400f38 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55a765401340 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55a7654010c8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55a765401148 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55a7654011c0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55a765401240 <col:57> col:60 'int'
|-CXXMethodDecl 0x55a765401528 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a765401410 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55a765401490 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55a765401678 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55a7654015e8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55a7654019f8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55a765401738 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55a7654017b8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55a765401830 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55a7654018b0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55a765401b10 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SetUDPChecksum
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a765409258 <../elements/tcpudp/setudpchecksum.hh:25:1, line:36:1> line:25:7 class SetUDPChecksum definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55a7654093b8 <col:1, col:7> col:7 implicit referenced class SetUDPChecksum
|-AccessSpecDecl 0x55a765409448 <col:41, col:47> col:41 public
|-CXXConstructorDecl 0x55a7654094d0 <line:27:5, col:20> col:5 SetUDPChecksum 'void ()'
|-CXXDestructorDecl 0x55a7654095c0 <line:28:5, col:21> col:5 ~SetUDPChecksum 'void ()' noexcept-unevaluated 0x55a7654095c0
| `-Overrides: [ 0x55a7653f0b48 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55a7654096f0 <line:30:5, col:63> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55a7653f1fa8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55a765409e18 <col:36, col:63>
|   `-ReturnStmt 0x55a765409e08 <col:38, col:45>
|     `-ImplicitCastExpr 0x55a765409df0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55a765409dc8 <col:45> 'const char [15]' lvalue "SetUDPChecksum"
|-CXXMethodDecl 0x55a7654097b8 <line:31:5, col:58> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55a7653f2070 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55a765409e78 <col:36, col:58>
|   `-ReturnStmt 0x55a765409e68 <col:38, col:45>
|     `-ImplicitCastExpr 0x55a765409e50 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55a765409e30 <col:45> 'const char []' lvalue Var 0x55a7653f23a8 'PORTS_1_1X2' 'const char []'
|-CXXMethodDecl 0x55a765409880 <line:32:5, col:62> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55a7653f2438 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55a765409ed8 <col:36, col:62>
|   `-ReturnStmt 0x55a765409ec8 <col:38, col:45>
|     `-ImplicitCastExpr 0x55a765409eb0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55a765409e90 <col:45> 'const char []' lvalue Var 0x55a7653f27a0 'PROCESSING_A_AH' 'const char []'
|-CXXMethodDecl 0x55a7654099c0 <line:34:5, col:35> col:13 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x55a7653f1188 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x55a765409930 <col:27, col:34> col:35 'Packet *'
|-CXXConstructorDecl 0x55a765409a98 <line:25:7> col:7 implicit SetUDPChecksum 'void (const SetUDPChecksum &)' inline default_delete noexcept-unevaluated 0x55a765409a98
| `-ParmVarDecl 0x55a765409ba8 <col:7> col:7 'const SetUDPChecksum &'
`-CXXMethodDecl 0x55a765409c48 <col:7> col:7 implicit operator= 'SetUDPChecksum &(const SetUDPChecksum &)' inline default_delete noexcept-unevaluated 0x55a765409c48
  `-ParmVarDecl 0x55a765409d58 <col:7> col:7 'const SetUDPChecksum &'

Layout: <CGRecordLayout
  LLVMType:%class.SetUDPChecksum = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.SetUDPChecksum.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_udp
         0 |   uint16_t uh_sport
         2 |   uint16_t uh_dport
         4 |   uint16_t uh_ulen
         6 |   uint16_t uh_sum
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7653c8f08 prev 0x55a7653be110 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a7653c9000 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55a7653c90f0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55a7653c9218 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55a7653c9398 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55a7653c9518 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55a7653c9698 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55a7653da4c8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a7653dad38 <col:11>
|-CXXDestructorDecl 0x55a7653da5a0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55a7653da6d8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55a7653da6d8
| `-ParmVarDecl 0x55a7653da7e8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55a7653da888 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a7653da888
| `-ParmVarDecl 0x55a7653da998 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55a7653dd758 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a7653dd868 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55a7653ddae8 <col:11>
|   `-ReturnStmt 0x55a7653ddad8 <col:11>
|     `-UnaryOperator 0x55a7653ddac0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a7653ddab0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55a7653dd8d8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a7653dd8d8
  `-ParmVarDecl 0x55a7653dd9e8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7653c9700 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a7653c9818 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55a7653c98b8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55a7653c9920 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55a7653c9988 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55a7653c99f0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55a7653c9a50 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55a7653c9b10 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55a7653c9b70 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55a7653c9bd0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55a7653da3d8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55a7653c98b8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55a7653dad48 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55a7653dada0 <col:12>
|-CXXConstructorDecl 0x55a7653daa08 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55a7653daa08
| `-ParmVarDecl 0x55a7653dab18 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55a7653dabb8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55a7653dabb8
| `-ParmVarDecl 0x55a7653dacc8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55a7653dce40 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7653b7820 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a7653b7938 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55a7653b79c8 <col:16, col:22> col:16 public
|-EnumDecl 0x55a7653b79f0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55a7653b7af0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55a7653b7bd0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653b7ad0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55a7653b7ab0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55a7653b7b80 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55a7653b7be8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7653b7b60 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55a7653b7b40 <col:22> 'int' 64
|-CXXMethodDecl 0x55a7653b7f28 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55a7653b7c10 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a7653b7c90 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55a7653b7d08 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a7653b7d80 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a7653b7fe8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55a7653b81e8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55a7653b8060 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55a7653b80d8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a7653b8298 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55a7653b83f8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55a7653b8308 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a7653b84a0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55a7653b8800 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55a7653b8790 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55a7653b8730 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55a7653b86f0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55a764e8d2d0 'void'
|       |-PointerType 0x55a7651379a0 'unsigned char *'
|       | `-BuiltinType 0x55a764e8d3d0 'unsigned char'
|       |-TypedefType 0x55a764f33f10 'size_t' sugar
|       | |-Typedef 0x55a764efdb20 'size_t'
|       | `-BuiltinType 0x55a764e8d430 'unsigned long'
|       `-PointerType 0x55a764e8dad0 'void *'
|         `-BuiltinType 0x55a764e8d2d0 'void'
|-CXXMethodDecl 0x55a7653b8c78 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55a7653b8870 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55a7653b88e8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a7653b8980 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55a7653b8a00 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55a7653d3370 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55a7653d3358 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55a7653d3320 <col:58> 'int' 0
| |-ParmVarDecl 0x55a7653b8a80 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55a7653d3398 <col:76> 'int' 0
| |-ParmVarDecl 0x55a7653b8b00 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55a7653d33b8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55a7653b8d48 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55a7653b8dc8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55a7653b8e88 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55a7653b8f28 <col:20>
| `-OptimizeNoneAttr 0x55a7653b8f80 <col:30>
|-CXXMethodDecl 0x55a7653b8ff8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55a7653b9098 <col:20>
| `-OptimizeNoneAttr 0x55a7653b90f0 <col:30>
|-CXXMethodDecl 0x55a7653b9168 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55a7653b9208 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55a7653b92b8 <line:77:5, col:102> col:56 used uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55a7653b9358 <col:20>
| |-OptimizeNoneAttr 0x55a7653b93b0 <col:30>
| `-WarnUnusedResultAttr 0x55a7653b93d8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55a7653b9430 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55a7653b94d0 <col:20>
| `-OptimizeNoneAttr 0x55a7653b9528 <col:30>
|-CXXMethodDecl 0x55a7653b9578 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55a7653b9618 <col:20>
| `-OptimizeNoneAttr 0x55a7653b9670 <col:30>
|-CXXMethodDecl 0x55a7653b96b8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55a7653b9758 <col:20>
| `-OptimizeNoneAttr 0x55a7653b97b0 <col:30>
|-CXXMethodDecl 0x55a7653b97f8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7653b98b8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7653b9980 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55a7653b9a48 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55a7653b9b08 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7653b9c28 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55a7653d3480 <col:54, line:99:5>
|   `-ReturnStmt 0x55a7653d3470 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55a7653d3458 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55a7653d3428 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55a7653c9f08
|         `-CXXThisExpr 0x55a7653d3418 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55a7653b9dc8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55a7653b9cd8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55a7653d3530 <col:67, line:103:5>
|   `-BinaryOperator 0x55a7653d3510 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55a7653d34a8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55a7653c9f08
|     | `-CXXThisExpr 0x55a7653d3498 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55a7653d34f8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55a7653d34d8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55a7653b9cd8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55a7653b9ec0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55a7653d35b0 <col:33, line:107:5>
|   `-ReturnStmt 0x55a7653d35a0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55a7653d3588 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55a7653d3558 <col:16> 'void *' lvalue ->_destructor_argument 0x55a7653c9f70
|         `-CXXThisExpr 0x55a7653d3548 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55a7653b9f80 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55a7653d3be0 <col:25, line:113:5>
|   |-ParenExpr 0x55a7653d3928 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55a7653d38f8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55a7653d3668 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55a7653d3640 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55a7653d3608 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55a7653d35d8 <col:24> '<bound member function type>' ->shared 0x55a7653b8ff8
|   |   |       `-ImplicitCastExpr 0x55a7653d3628 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55a7653d35c8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55a7653d36c8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7653d36a8 <col:42> 'int' 0
|   |   `-CallExpr 0x55a7653d3858 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55a7653d3840 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653d3820 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7653d3898 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d3738 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55a7653d38b0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d3760 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7653d38c8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7653d3798 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55a7653d38e0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7653d3808 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7653d37f0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7653d37b8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55a7653d3b28 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55a7653d3958 <col:2> 'unsigned char *' lvalue ->_head 0x55a7653c9d10
|   | | `-CXXThisExpr 0x55a7653d3948 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55a7653d3b10 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55a7653d3af0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55a7653d3998 <col:10> 'unsigned char *' lvalue ->_data 0x55a7653c9d78
|   |     | `-CXXThisExpr 0x55a7653d3988 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55a7653d3ad8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55a7653d3ab8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55a7653d39d8 <col:18> 'unsigned char *' lvalue ->_tail 0x55a7653c9de0
|   |         | `-CXXThisExpr 0x55a7653d39c8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55a7653d3aa0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55a7653d3a80 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55a7653d3a18 <col:26> 'unsigned char *' lvalue ->_end 0x55a7653c9e48
|   |             | `-CXXThisExpr 0x55a7653d3a08 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55a7653d3a68 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55a7653d3a48 <col:33> 'int' 0
|   `-BinaryOperator 0x55a7653d3bc0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55a7653d3b58 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55a7653c9f08
|     | `-CXXThisExpr 0x55a7653d3b48 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55a7653d3ba8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55a7653d3b88 <col:16> 'int' 0
|-CXXMethodDecl 0x55a7653ba0c0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55a7653ba030 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a7653ba168 <col:20>
| |-OptimizeNoneAttr 0x55a7653ba1c0 <col:30>
| `-WarnUnusedResultAttr 0x55a7653ba1e8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55a7653ba2b8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55a7653ba228 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a7653ba360 <col:20>
| |-OptimizeNoneAttr 0x55a7653ba3b8 <col:30>
| `-WarnUnusedResultAttr 0x55a7653ba3e0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55a7653ba518 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55a7653ba420 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a7653ba5c0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55a7653ba6c0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55a7653ba630 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a7653ba768 <col:20>
| `-OptimizeNoneAttr 0x55a7653ba7c0 <col:30>
|-CXXMethodDecl 0x55a7653ba888 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55a7653ba7f8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a7653ba930 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55a7653baa30 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55a7653ba9a0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a7653baad8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55a7653babd8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55a7653bab48 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a7653bac80 <col:20>
| `-OptimizeNoneAttr 0x55a7653bacd8 <col:30>
|-CXXMethodDecl 0x55a7653bae68 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55a7653bad18 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55a7653bad90 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55a7653d33d8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55a7653baf18 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55a7653bb118 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55a7653baf90 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55a7653bb008 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7653bb328 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55a7653bb1d8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a7653bb250 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7653bb538 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55a7653bb3e8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55a7653bb468 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55a7653d33e8 <col:39> 'int' 0
|-CXXMethodDecl 0x55a7653bb608 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55a7653bb6d0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55a7653bb798 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a7653bb858 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7653bb920 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55a7653bba68 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55a7653bb9d8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55a7653bbc38 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55a7653bbb28 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55a7653bbba0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7653bbd08 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55a7653bbdc8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55a7653bbe68 <col:20>
| `-OptimizeNoneAttr 0x55a7653bbec0 <col:30>
|-CXXMethodDecl 0x55a7653bbf10 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55a7653bbfb0 <col:20>
| `-OptimizeNoneAttr 0x55a7653bc008 <col:30>
|-CXXMethodDecl 0x55a7653bc058 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a7653bc118 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7653bc1e0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55a7653bc280 <col:20>
| `-OptimizeNoneAttr 0x55a7653bc2d8 <col:30>
|-CXXMethodDecl 0x55a7653bc428 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55a7653bc318 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55a7653bc390 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7653bc578 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55a7653bc4e8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7653bc650 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55a7653bc710 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55a7653bc7b0 <col:20>
| `-OptimizeNoneAttr 0x55a7653bc808 <col:30>
|-CXXMethodDecl 0x55a7653bc858 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55a7653bc8f8 <col:20>
| `-OptimizeNoneAttr 0x55a7653bc950 <col:30>
|-CXXMethodDecl 0x55a7653bc9a0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a7653bca68 <line:300:5, col:63> col:44 used transport_length 'int () const'
| |-NoInlineAttr 0x55a7653bcb08 <col:20>
| `-OptimizeNoneAttr 0x55a7653bcb60 <col:30>
|-CXXMethodDecl 0x55a7653bcba8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55a7653bccc8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55a7653bce38 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55a7653bcd78 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55a7653bcf28 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55a7653bcfc8 <col:20>
| `-OptimizeNoneAttr 0x55a7653bd020 <col:30>
|-CXXMethodDecl 0x55a7653bd070 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a7653bd130 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7653bd368 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55a7653bd1e0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55a7653bd258 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a7653bd418 <col:20>
| `-OptimizeNoneAttr 0x55a7653bd470 <col:30>
|-CXXMethodDecl 0x55a7653bd518 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55a7653bd5b8 <col:20>
| `-OptimizeNoneAttr 0x55a7653bd610 <col:30>
|-CXXMethodDecl 0x55a7653bd660 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55a7653bd700 <col:20>
| `-OptimizeNoneAttr 0x55a7653bd758 <col:30>
|-CXXMethodDecl 0x55a7653bd7a0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55a7653bd840 <col:20>
| `-OptimizeNoneAttr 0x55a7653bd898 <col:30>
|-CXXMethodDecl 0x55a7653bd998 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55a7653bd8d0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55a7653bda40 <col:20>
| `-OptimizeNoneAttr 0x55a7653bda98 <col:30>
|-CXXMethodDecl 0x55a7653bdc58 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55a7653bdad0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55a7653bdb48 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a7653bdd08 <col:20>
| `-OptimizeNoneAttr 0x55a7653bdd60 <col:30>
|-CXXMethodDecl 0x55a7653bde08 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55a7653bdf28 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55a7653be048 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55a7653be0e8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55a7653be110 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55a7653be238 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55a7653be2d8 <col:20>
| `-OptimizeNoneAttr 0x55a7653be330 <col:30>
|-CXXMethodDecl 0x55a7653be3d8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55a7653be478 <col:20>
| `-OptimizeNoneAttr 0x55a7653be4d0 <col:30>
|-AccessSpecDecl 0x55a7653be4f8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55a7653be520 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55a7653be620 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55a7653be670 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7653be600 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55a7653be5e0 <col:14> 'int' 48
|-CXXMethodDecl 0x55a7653be6d8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55a7653be778 <col:20>
| `-OptimizeNoneAttr 0x55a7653be7d0 <col:30>
|-CXXMethodDecl 0x55a7653be848 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55a7653be8e8 <col:20>
| `-OptimizeNoneAttr 0x55a7653be940 <col:30>
|-CXXMethodDecl 0x55a7653bea08 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55a7653be978 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55a7653beba8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55a7653bed48 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55a7653bec58 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55a7653bedf0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55a7653beef0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a7653bf2a0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653beed0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55a7653beeb0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55a7653bef80 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a7653bf2b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653bef60 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55a7653bef40 <col:14> 'int' 1
| |-EnumConstantDecl 0x55a7653bf010 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a7653bf2d0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653beff0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55a7653befd0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55a7653bf0a0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a7653bf2e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653bf080 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55a7653bf060 <col:14> 'int' 3
| |-EnumConstantDecl 0x55a7653bf130 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a7653bf300 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653bf110 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55a7653bf0f0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55a7653bf1c0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a7653bf318 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653bf1a0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55a7653bf180 <col:13> 'int' 5
| `-EnumConstantDecl 0x55a7653bf250 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55a7653bf330 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7653bf230 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55a7653bf210 <col:14> 'int' 6
|-CXXMethodDecl 0x55a7653bf398 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55a7653bf438 <col:20>
| `-OptimizeNoneAttr 0x55a7653bf490 <col:30>
|-CXXMethodDecl 0x55a7653bf588 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55a7653bf4c8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55a7653bf630 <col:20>
| `-OptimizeNoneAttr 0x55a7653bf688 <col:30>
|-CXXMethodDecl 0x55a7653bf6f8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55a7653bf820 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55a7653bf998 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55a7653bf8d0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55a7653bfa60 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55a7653bfb28 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55a7653bfc68 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55a7653bfbd8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55a7653bfd10 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55a7653bfe10 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55a7653c0010 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653bfdf0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55a7653bfdd0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55a7653bfea0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55a7653c0028 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653bfe80 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55a7653bfe60 <col:45> 'int' 4
| |-EnumConstantDecl 0x55a7653bff30 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55a7653c0040 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653bff10 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55a7653bfef0 <col:24> 'int' 0
| `-EnumConstantDecl 0x55a7653bffc0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55a7653c0058 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7653bffa0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55a7653bff80 <col:47> 'int' 16
|-CXXMethodDecl 0x55a7653c00b8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55a7653c0228 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55a7653c0168 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55a7653c02d0 <col:20>
| `-OptimizeNoneAttr 0x55a7653c0328 <col:30>
|-CXXMethodDecl 0x55a7653c0378 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55a7653d3d00 <col:18, col:36>
|   `-ReturnStmt 0x55a7653d3cf0 <col:20, col:33>
|     `-ImplicitCastExpr 0x55a7653d3cd8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55a7653d3cb8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55a7653d3c88 <col:27> '<bound member function type>' ->xanno 0x55a7653be3d8
|           `-CXXThisExpr 0x55a7653d3c78 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55a7653c0470 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55a7653d3e10 <col:30, col:48>
|   `-ReturnStmt 0x55a7653d3e00 <col:32, col:45>
|     `-ImplicitCastExpr 0x55a7653d3de8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55a7653d3dc8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55a7653d3d98 <col:39> '<bound member function type>' ->xanno 0x55a7653be238
|           `-CXXThisExpr 0x55a7653d3d88 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55a7653c0558 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55a7653d3fa8 <col:24, col:50>
|   `-ReturnStmt 0x55a7653d3f98 <col:26, col:47>
|     `-UnaryOperator 0x55a7653d3f80 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a7653d3f60 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55a7653d3f48 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a7653d3ef8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55a7653c9218
|         |   `-CXXMemberCallExpr 0x55a7653d3ed8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55a7653d3ea8 <col:34> '<bound member function type>' ->xanno 0x55a7653be3d8
|         |       `-CXXThisExpr 0x55a7653d3e98 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55a7653d3f28 <col:46> 'int' 0
|-CXXMethodDecl 0x55a7653c0660 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55a7653d4178 <col:36, col:62>
|   `-ReturnStmt 0x55a7653d4168 <col:38, col:59>
|     `-UnaryOperator 0x55a7653d4150 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a7653d4130 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55a7653d4118 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a7653d4090 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55a7653c9218
|         |   `-CXXMemberCallExpr 0x55a7653d4070 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55a7653d4040 <col:46> '<bound member function type>' ->xanno 0x55a7653be238
|         |       `-CXXThisExpr 0x55a7653d4030 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55a7653d40c0 <col:58> 'int' 0
|-CXXMethodDecl 0x55a7653c0778 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55a7653d4310 <col:26, col:53>
|   `-ReturnStmt 0x55a7653d4300 <col:28, col:50>
|     `-UnaryOperator 0x55a7653d42e8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a7653d42c8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55a7653d42b0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a7653d4260 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55a7653c9518
|         |   `-CXXMemberCallExpr 0x55a7653d4240 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55a7653d4210 <col:36> '<bound member function type>' ->xanno 0x55a7653be3d8
|         |       `-CXXThisExpr 0x55a7653d4200 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55a7653d4290 <col:49> 'int' 0
|-CXXMethodDecl 0x55a7653c0898 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55a7653d44e8 <col:38, col:65>
|   `-ReturnStmt 0x55a7653d44d8 <col:40, col:62>
|     `-UnaryOperator 0x55a7653d44c0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a7653d44a0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55a7653d4488 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a7653d43f8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55a7653c9518
|         |   `-CXXMemberCallExpr 0x55a7653d43d8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55a7653d43a8 <col:48> '<bound member function type>' ->xanno 0x55a7653be238
|         |       `-CXXThisExpr 0x55a7653d4398 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55a7653d4428 <col:61> 'int' 0
|-CXXMethodDecl 0x55a7653c0a48 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55a7653c0950 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55a7653d4bb8 <col:34, line:463:5>
|   |-ParenExpr 0x55a7653d4a00 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55a7653d49d0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55a7653d4638 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7653d4608 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7653d4558 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7653d4540 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7653d4500 <col:23> 'int' lvalue ParmVar 0x55a7653c0950 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7653d4520 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7653d45e8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7653d45b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7653d4578 <col:33> 'int' lvalue ParmVar 0x55a7653c0950 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55a7653d45d0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55a7653d4598 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7653be620 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55a7653d4698 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7653d4678 <col:56> 'int' 0
|   |   `-CallExpr 0x55a7653d4930 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55a7653d4918 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653d48f8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7653d4970 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d4788 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55a7653d4988 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d47b8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7653d49a0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7653d47f0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55a7653d49b8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7653d48e0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7653d48c8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7653d4888 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55a7653d4ba8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55a7653d4b90 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55a7653d4b70 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55a7653d4b40 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a7653d4af0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55a7653c9218
|         |   `-CXXMemberCallExpr 0x55a7653d4ad0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55a7653d4aa0 <col:9> '<bound member function type>' ->xanno 0x55a7653be238
|         |       `-CXXThisExpr 0x55a7653d4a90 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55a7653d4b58 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55a7653d4b20 <col:21> 'int' lvalue ParmVar 0x55a7653c0950 'i' 'int'
|-CXXMethodDecl 0x55a7653c0c98 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55a7653c0b08 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55a7653c0b80 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55a7653d5248 <col:40, line:472:5>
|   |-ParenExpr 0x55a7653d5060 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55a7653d5030 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55a7653d4d10 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7653d4ce0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7653d4c30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7653d4c18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7653d4bd8 <col:23> 'int' lvalue ParmVar 0x55a7653c0b08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7653d4bf8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7653d4cc0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7653d4c90 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7653d4c50 <col:33> 'int' lvalue ParmVar 0x55a7653c0b08 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55a7653d4ca8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55a7653d4c70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7653be620 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55a7653d4d70 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7653d4d50 <col:56> 'int' 0
|   |   `-CallExpr 0x55a7653d4f90 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55a7653d4f78 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653d4f58 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7653d4fd0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d4de0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55a7653d4fe8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d4e10 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7653d5000 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7653d4e48 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55a7653d5018 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7653d4f40 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7653d4f28 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7653d4ee8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55a7653d5228 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55a7653d51d0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55a7653d51a0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55a7653d5150 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55a7653c9218
|     | |   `-CXXMemberCallExpr 0x55a7653d5130 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55a7653d5100 <col:2> '<bound member function type>' ->xanno 0x55a7653be3d8
|     | |       `-CXXThisExpr 0x55a7653d50f0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55a7653d51b8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55a7653d5180 <col:14> 'int' lvalue ParmVar 0x55a7653c0b08 'i' 'int'
|     `-ImplicitCastExpr 0x55a7653d5210 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55a7653d51f0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55a7653c0b80 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55a7653c0e58 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55a7653c0d60 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55a7653d59c8 <col:36, line:485:5>
|   |-ParenExpr 0x55a7653d5730 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7653d5700 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7653d53e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7653d53b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7653d52c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7653d52a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7653d5268 <col:23> 'int' lvalue ParmVar 0x55a7653c0d60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7653d5288 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7653d5390 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7653d5378 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7653d52e0 <col:33> 'int' lvalue ParmVar 0x55a7653c0d60 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7653d5358 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7653d5340 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7653d5300 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7653be620 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7653d5320 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a7653d5440 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7653d5420 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7653d5660 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7653d5648 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653d5628 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7653d56a0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d54b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a7653d56b8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d54e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7653d56d0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7653d5520 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55a7653d56e8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7653d5610 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7653d55f8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7653d55b8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55a7653d59b8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55a7653d59a0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55a7653d5988 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a7653d5958 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55a7653d58f8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a7653d58c8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a7653d5840 <col:61, col:70> 'char const[48]' lvalue ->c 0x55a7653c90f0
|             |   `-CXXMemberCallExpr 0x55a7653d5820 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a7653d57f0 <col:61> '<bound member function type>' ->xanno 0x55a7653be238
|             |       `-CXXThisExpr 0x55a7653d57e0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a7653d58e0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a7653d5870 <col:74> 'int' lvalue ParmVar 0x55a7653c0d60 'i' 'int'
|-CXXMethodDecl 0x55a7653c10a8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55a7653c0f18 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a7653c0f90 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55a7653d6118 <col:42, line:500:5>
|   |-ParenExpr 0x55a7653d5eb0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7653d5e80 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7653d5b60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7653d5b30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7653d5a40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7653d5a28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7653d59e8 <col:23> 'int' lvalue ParmVar 0x55a7653c0f18 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7653d5a08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7653d5b10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7653d5af8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7653d5a60 <col:33> 'int' lvalue ParmVar 0x55a7653c0f18 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7653d5ad8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7653d5ac0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7653d5a80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7653be620 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7653d5aa0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a7653d5bc0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7653d5ba0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7653d5de0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7653d5dc8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653d5da8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7653d5e20 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d5c30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a7653d5e38 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d5c68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7653d5e50 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7653d5ca0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55a7653d5e68 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7653d5d90 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7653d5d78 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7653d5d38 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55a7653d60f8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55a7653d60a8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a7653d6078 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55a7653d6020 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a7653d5ff0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a7653d5fa0 <col:48, col:57> 'char [48]' lvalue ->c 0x55a7653c90f0
|     |     |   `-CXXMemberCallExpr 0x55a7653d5f80 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a7653d5f50 <col:48> '<bound member function type>' ->xanno 0x55a7653be3d8
|     |     |       `-CXXThisExpr 0x55a7653d5f40 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a7653d6008 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a7653d5fd0 <col:61> 'int' lvalue ParmVar 0x55a7653c0f18 'i' 'int'
|     `-ImplicitCastExpr 0x55a7653d60e0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55a7653d60c0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55a7653c0f90 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55a7653c1268 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55a7653c1170 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55a7653d6878 <col:35, line:513:5>
|   |-ParenExpr 0x55a7653d6588 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7653d6558 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7653d62b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7653d6280 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7653d6190 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7653d6178 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7653d6138 <col:23> 'int' lvalue ParmVar 0x55a7653c1170 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7653d6158 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7653d6260 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7653d6248 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7653d61b0 <col:33> 'int' lvalue ParmVar 0x55a7653c1170 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7653d6228 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7653d6210 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7653d61d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7653be620 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7653d61f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a7653d6310 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7653d62f0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7653d64b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7653d64a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653d6480 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7653d64f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d6380 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a7653d6510 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d63b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7653d6528 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7653d63f0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55a7653d6540 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7653d6468 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7653d6450 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7653d6410 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55a7653d6868 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55a7653d6850 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55a7653d6838 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a7653d6808 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55a7653d6780 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a7653d6750 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a7653d6700 <col:60, col:69> 'char const[48]' lvalue ->c 0x55a7653c90f0
|             |   `-CXXMemberCallExpr 0x55a7653d66e0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a7653d66b0 <col:60> '<bound member function type>' ->xanno 0x55a7653be238
|             |       `-CXXThisExpr 0x55a7653d66a0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a7653d6768 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a7653d6730 <col:73> 'int' lvalue ParmVar 0x55a7653c1170 'i' 'int'
|-CXXMethodDecl 0x55a7653c14b8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55a7653c1328 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a7653c13a0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55a7653d6f98 <col:41, line:528:5>
|   |-ParenExpr 0x55a7653d6d20 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7653d6cf0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7653d6a10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7653d69e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7653d68f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7653d68d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7653d6898 <col:23> 'int' lvalue ParmVar 0x55a7653c1328 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7653d68b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7653d69c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7653d69a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7653d6910 <col:33> 'int' lvalue ParmVar 0x55a7653c1328 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7653d6988 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7653d6970 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7653d6930 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7653be620 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7653d6950 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a7653d6a70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7653d6a50 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7653d6c50 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7653d6c38 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653d6c18 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7653d6c90 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d6ae0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a7653d6ca8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d6b18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7653d6cc0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7653d6b50 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55a7653d6cd8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7653d6c00 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7653d6be8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7653d6ba8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55a7653d6f78 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55a7653d6f28 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a7653d6ef8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55a7653d6ea0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a7653d6e60 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a7653d6e10 <col:47, col:56> 'char [48]' lvalue ->c 0x55a7653c90f0
|     |     |   `-CXXMemberCallExpr 0x55a7653d6df0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a7653d6dc0 <col:47> '<bound member function type>' ->xanno 0x55a7653be3d8
|     |     |       `-CXXThisExpr 0x55a7653d6db0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a7653d6e78 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a7653d6e40 <col:60> 'int' lvalue ParmVar 0x55a7653c1328 'i' 'int'
|     `-ImplicitCastExpr 0x55a7653d6f60 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55a7653d6f40 <col:65> 'int16_t':'short' lvalue ParmVar 0x55a7653c13a0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55a7653c1678 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55a7653c1580 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55a7653d7668 <col:36, line:541:5>
|   |-ParenExpr 0x55a7653d7408 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7653d73d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7653d7130 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7653d7100 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7653d7010 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7653d6ff8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7653d6fb8 <col:23> 'int' lvalue ParmVar 0x55a7653c1580 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7653d6fd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7653d70e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7653d70c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7653d7030 <col:33> 'int' lvalue ParmVar 0x55a7653c1580 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7653d70a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7653d7090 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7653d7050 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7653be620 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7653d7070 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55a7653d7190 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7653d7170 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7653d7338 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7653d7320 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653d7300 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7653d7378 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d7200 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55a7653d7390 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d7238 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7653d73a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7653d7270 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55a7653d73c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7653d72e8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7653d72d0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7653d7290 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55a7653d7658 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55a7653d7640 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55a7653d7628 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a7653d75f8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55a7653d75a0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a7653d7570 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a7653d7520 <col:61, col:70> 'char const[48]' lvalue ->c 0x55a7653c90f0
|             |   `-CXXMemberCallExpr 0x55a7653d7500 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a7653d74d0 <col:61> '<bound member function type>' ->xanno 0x55a7653be238
|             |       `-CXXThisExpr 0x55a7653d74c0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a7653d7588 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a7653d7550 <col:74> 'int' lvalue ParmVar 0x55a7653c1580 'i' 'int'
|-CXXMethodDecl 0x55a7653c1848 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55a7653c1738 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55a7653c17b0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a7653c18f8 <col:20>
| `-OptimizeNoneAttr 0x55a7653c1950 <col:30>
|-CXXMethodDecl 0x55a7653c1a88 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55a7653c1990 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55a7653d7d38 <col:35, line:562:5>
|   |-ParenExpr 0x55a7653d7ad8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7653d7aa8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7653d7800 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7653d77d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7653d76e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7653d76c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7653d7688 <col:23> 'int' lvalue ParmVar 0x55a7653c1990 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7653d76a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7653d77b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7653d7798 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7653d7700 <col:33> 'int' lvalue ParmVar 0x55a7653c1990 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7653d7778 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7653d7760 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7653d7720 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7653be620 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7653d7740 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55a7653d7860 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7653d7840 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7653d7a08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7653d79f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653d79d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7653d7a48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d78d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55a7653d7a60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d7908 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7653d7a78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7653d7940 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55a7653d7a90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7653d79b8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7653d79a0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7653d7960 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55a7653d7d28 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55a7653d7d10 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55a7653d7cf8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a7653d7cc8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55a7653d7c70 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a7653d7c40 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a7653d7bf0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55a7653c90f0
|             |   `-CXXMemberCallExpr 0x55a7653d7bd0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a7653d7ba0 <col:60> '<bound member function type>' ->xanno 0x55a7653be238
|             |       `-CXXThisExpr 0x55a7653d7b90 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a7653d7c58 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a7653d7c20 <col:73> 'int' lvalue ParmVar 0x55a7653c1990 'i' 'int'
|-CXXMethodDecl 0x55a7653c1c98 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55a7653c1b48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a7653c1bc0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55a7653d8418 <col:41, line:577:5>
|   |-ParenExpr 0x55a7653d81a8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7653d8178 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7653d7ed0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7653d7ea0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7653d7db0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7653d7d98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7653d7d58 <col:23> 'int' lvalue ParmVar 0x55a7653c1b48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7653d7d78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7653d7e80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7653d7e68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7653d7dd0 <col:33> 'int' lvalue ParmVar 0x55a7653c1b48 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7653d7e48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7653d7e30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7653d7df0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7653be620 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7653d7e10 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55a7653d7f30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7653d7f10 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7653d80d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7653d80c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653d80a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7653d8118 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d7fa0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55a7653d8130 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d7fd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7653d8148 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7653d8010 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55a7653d8160 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7653d8088 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7653d8070 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7653d8030 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55a7653d83f8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55a7653d83a8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a7653d8378 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55a7653d8318 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a7653d82e8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a7653d8298 <col:47, col:56> 'char [48]' lvalue ->c 0x55a7653c90f0
|     |     |   `-CXXMemberCallExpr 0x55a7653d8278 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a7653d8248 <col:47> '<bound member function type>' ->xanno 0x55a7653be3d8
|     |     |       `-CXXThisExpr 0x55a7653d8238 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a7653d8300 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a7653d82c8 <col:60> 'int' lvalue ParmVar 0x55a7653c1b48 'i' 'int'
|     `-ImplicitCastExpr 0x55a7653d83e0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55a7653d83c0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55a7653c1bc0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55a7653c1e58 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55a7653c1d60 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55a7653d8b48 <col:36, line:591:5>
|   |-ParenExpr 0x55a7653d8888 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7653d8858 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7653d85b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7653d8580 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7653d8490 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7653d8478 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7653d8438 <col:23> 'int' lvalue ParmVar 0x55a7653c1d60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7653d8458 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7653d8560 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7653d8548 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7653d84b0 <col:33> 'int' lvalue ParmVar 0x55a7653c1d60 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7653d8528 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7653d8510 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7653d84d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7653be620 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7653d84f0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55a7653d8610 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7653d85f0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7653d87b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7653d87a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653d8780 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7653d87f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d8680 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55a7653d8810 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d86b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7653d8828 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7653d86f0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55a7653d8840 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7653d8768 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7653d8750 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7653d8710 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55a7653d8b38 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55a7653d8b20 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55a7653d8b08 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a7653d8ad8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55a7653d8a50 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a7653d8a20 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a7653d89d0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55a7653c90f0
|             |   `-CXXMemberCallExpr 0x55a7653d89b0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a7653d8980 <col:61> '<bound member function type>' ->xanno 0x55a7653be238
|             |       `-CXXThisExpr 0x55a7653d8970 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a7653d8a38 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a7653d8a00 <col:74> 'int' lvalue ParmVar 0x55a7653c1d60 'i' 'int'
|-CXXMethodDecl 0x55a7653c20a8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55a7653c1f18 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a7653c1f90 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55a7653d9228 <col:42, line:606:5>
|   |-ParenExpr 0x55a7653d8fb8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a7653d8f88 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a7653d8ce0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7653d8cb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7653d8bc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7653d8ba8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7653d8b68 <col:23> 'int' lvalue ParmVar 0x55a7653c1f18 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7653d8b88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7653d8c90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a7653d8c78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7653d8be0 <col:33> 'int' lvalue ParmVar 0x55a7653c1f18 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7653d8c58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7653d8c40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7653d8c00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7653be620 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a7653d8c20 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55a7653d8d40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7653d8d20 <col:60> 'int' 0
|   |   `-CallExpr 0x55a7653d8ee8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a7653d8ed0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653d8eb0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7653d8f28 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d8db0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55a7653d8f40 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d8de8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7653d8f58 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7653d8e20 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55a7653d8f70 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7653d8e98 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7653d8e80 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7653d8e40 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55a7653d9208 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55a7653d91b8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a7653d9188 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55a7653d9128 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a7653d90f8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a7653d90a8 <col:48, col:57> 'char [48]' lvalue ->c 0x55a7653c90f0
|     |     |   `-CXXMemberCallExpr 0x55a7653d9088 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a7653d9058 <col:48> '<bound member function type>' ->xanno 0x55a7653be3d8
|     |     |       `-CXXThisExpr 0x55a7653d9048 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a7653d9110 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a7653d90d8 <col:61> 'int' lvalue ParmVar 0x55a7653c1f18 'i' 'int'
|     `-ImplicitCastExpr 0x55a7653d91f0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55a7653d91d0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55a7653c1f90 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55a7653c2240 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55a7653c2170 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55a7653d9a98 <col:33, line:620:5>
|   |-ParenExpr 0x55a7653d9810 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55a7653d97e0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55a7653d9430 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7653d9400 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7653d92a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7653d9288 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7653d9248 <col:23> 'int' lvalue ParmVar 0x55a7653c2170 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7653d9268 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7653d93e0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55a7653d93c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7653d92c0 <col:33> 'int' lvalue ParmVar 0x55a7653c2170 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7653d93a8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7653d9390 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7653d92e0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7653be620 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55a7653d9368 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55a7653d9350 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55a7653d9318 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55a7653d9490 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7653d9470 <col:79> 'int' 0
|   |   `-CallExpr 0x55a7653d9740 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55a7653d9728 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653d9708 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7653d9780 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d9578 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55a7653d9798 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d95c0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7653d97b0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7653d95f8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55a7653d97c8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7653d96f0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7653d96d8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7653d9698 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55a7653d9a88 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55a7653d9a70 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55a7653d9a58 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a7653d9a28 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55a7653d99a0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a7653d9970 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a7653d9920 <col:67, col:76> 'char const[48]' lvalue ->c 0x55a7653c90f0
|             |   `-CXXMemberCallExpr 0x55a7653d9900 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a7653d98d0 <col:67> '<bound member function type>' ->xanno 0x55a7653be238
|             |       `-CXXThisExpr 0x55a7653d98c0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a7653d9988 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a7653d9950 <col:80> 'int' lvalue ParmVar 0x55a7653c2170 'i' 'int'
|-CXXMethodDecl 0x55a7653c2458 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55a7653c2300 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a7653c2380 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55a7653da2c0 <col:45, line:635:5>
|   |-ParenExpr 0x55a7653da008 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55a7653d9fd8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55a7653d9ca0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a7653d9c70 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a7653d9b10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a7653d9af8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a7653d9ab8 <col:23> 'int' lvalue ParmVar 0x55a7653c2300 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a7653d9ad8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a7653d9c50 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55a7653d9c38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a7653d9b30 <col:33> 'int' lvalue ParmVar 0x55a7653c2300 'i' 'int'
|   |   |     `-BinaryOperator 0x55a7653d9c18 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a7653d9c00 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a7653d9b50 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a7653be620 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55a7653d9bd8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55a7653d9bc0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55a7653d9b88 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55a7653d9d00 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a7653d9ce0 <col:79> 'int' 0
|   |   `-CallExpr 0x55a7653d9f38 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55a7653d9f20 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653d9f00 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a7653d9f78 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d9d70 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55a7653d9f90 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a7653d9db8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a7653d9fa8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a7653d9df0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55a7653d9fc0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a7653d9ee8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a7653d9ed0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a7653d9e88 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55a7653da2a0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55a7653da208 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a7653da1d8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55a7653da178 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a7653da148 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a7653da0f8 <col:54, col:63> 'char [48]' lvalue ->c 0x55a7653c90f0
|     |     |   `-CXXMemberCallExpr 0x55a7653da0d8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a7653da0a8 <col:54> '<bound member function type>' ->xanno 0x55a7653be3d8
|     |     |       `-CXXThisExpr 0x55a7653da098 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a7653da160 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a7653da128 <col:67> 'int' lvalue ParmVar 0x55a7653c2300 'i' 'int'
|     `-CXXConstCastExpr 0x55a7653da270 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55a7653da258 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55a7653da220 <col:91> 'const void *' lvalue ParmVar 0x55a7653c2380 'x' 'const void *'
|-CXXMethodDecl 0x55a7653c2528 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55a7653da348 <col:34, line:640:5>
|   `-ReturnStmt 0x55a7653da338 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55a7653da320 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55a7653da2f0 <col:16> 'Packet *' lvalue ->_data_packet 0x55a7653c9ca8
|         `-CXXThisExpr 0x55a7653da2e0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55a7653c2668 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55a7653c25d8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a7653d3408 <col:46> 'bool' true
|-CXXMethodDecl 0x55a7653c27e8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55a7653c2720 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55a7653c2890 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55a7653c3040 <line:660:22> "" ""
| |-EnumConstantDecl 0x55a7653c2990 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7653c30b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653c2970 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55a7653c2950 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55a7653b7af0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55a7653c2a20 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7653c30c8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653c2a00 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55a7653c29e0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55a7653b7b80 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55a7653c2ab0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7653c30e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653c2a90 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55a7653c2a70 <col:21> 'int' 0
| |-EnumConstantDecl 0x55a7653c2b40 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7653c30f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653c2b20 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55a7653c2b00 <col:19> 'int' 16
| |-EnumConstantDecl 0x55a7653c2bd0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7653c3110 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653c2bb0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55a7653c2b90 <col:21> 'int' 16
| |-EnumConstantDecl 0x55a7653c2c60 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7653c3128 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653c2c40 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55a7653c2c20 <col:19> 'int' 32
| |-EnumConstantDecl 0x55a7653c2cf0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7653c3140 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653c2cd0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55a7653c2cb0 <col:19> 'int' EnumConstant 0x55a7653c2b40 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55a7653c2d80 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7653c3158 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653c2d60 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55a7653c2d40 <col:19> 'int' EnumConstant 0x55a7653c2c60 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55a7653c2e50 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7653c3170 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653c2e30 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55a7653c2e10 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55a7653c2dd0 <col:23> 'int' EnumConstant 0x55a7653c2d80 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55a7653c2df0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55a7653c2f20 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a7653c3188 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653c2f00 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55a7653c2ee0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55a7653c2ea0 <col:23> 'int' EnumConstant 0x55a7653c2d80 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55a7653c2ec0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55a7653c2ff0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55a7653c31a0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7653c2fd0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55a7653c2fb0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55a7653c2f70 <col:23> 'int' EnumConstant 0x55a7653c2d80 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55a7653c2f90 <col:40> 'int' 8
|-CXXMethodDecl 0x55a7653c31e0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55a7653c3280 <col:68> "" ""
|-CXXMethodDecl 0x55a7653c3318 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55a7653c33b8 <col:45> "" ""
|-CXXMethodDecl 0x55a7653c3450 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55a7653c34f0 <col:57> "" ""
|-CXXMethodDecl 0x55a7653c3588 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55a7653c3628 <col:45> "" ""
|-CXXMethodDecl 0x55a7653c36c0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55a7653c3760 <col:57> "" ""
|-CXXMethodDecl 0x55a7653c37f0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55a7653c3890 <col:51> "" ""
|-CXXMethodDecl 0x55a7653c3920 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55a7653c39c0 <col:63> "" ""
|-CXXMethodDecl 0x55a7653c3a50 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55a7653c3af0 <col:53> "" ""
|-CXXMethodDecl 0x55a7653c3b80 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55a7653c3c20 <col:65> "" ""
|-CXXMethodDecl 0x55a7653c3d38 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55a7653c3ca8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55a7653c3de0 <col:61> "" ""
|-CXXMethodDecl 0x55a7653c3f78 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55a7653c3e68 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55a7653c3ee0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55a7653c4028 <col:67> "" ""
|-CXXMethodDecl 0x55a7653c4140 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55a7653c40b0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55a7653c41e8 <col:63> "" ""
|-CXXMethodDecl 0x55a7653c4380 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55a7653c4270 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a7653c42e8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55a7653c4430 <col:69> "" ""
|-CXXMethodDecl 0x55a7653c4548 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55a7653c44b8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55a7653c45f0 <col:63> "" ""
|-CXXMethodDecl 0x55a7653c6cc8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55a7653c6bb8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a7653c6c30 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a7653c6d78 <col:69> "" ""
|-CXXMethodDecl 0x55a7653c6e90 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55a7653c6e00 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55a7653c6f38 <col:62> "" ""
|-CXXMethodDecl 0x55a7653c70d0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55a7653c6fc0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a7653c7038 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55a7653c7180 <col:68> "" ""
|-CXXMethodDecl 0x55a7653c7298 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55a7653c7208 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55a7653c7340 <col:63> "" ""
|-CXXMethodDecl 0x55a7653c74d8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55a7653c73c8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a7653c7440 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55a7653c7588 <col:69> "" ""
|-CXXMethodDecl 0x55a7653c7618 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55a7653c76b8 <col:64> "" ""
|-CXXMethodDecl 0x55a7653c7748 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55a7653c77e8 <col:52> "" ""
|-CXXMethodDecl 0x55a7653c7878 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55a7653c7918 <col:67> "" ""
|-CXXMethodDecl 0x55a7653c79a8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55a7653c7a48 <col:55> "" ""
|-CXXMethodDecl 0x55a7653c7b60 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55a7653c7ad0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55a7653c7c08 <col:58> "" ""
|-CXXMethodDecl 0x55a7653c7da0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55a7653c7c90 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a7653c7d08 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55a7653c7e50 <col:62> "" ""
|-CXXMethodDecl 0x55a7653c7f68 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55a7653c7ed8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55a7653c8010 <col:58> "" ""
|-CXXMethodDecl 0x55a7653c81a8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55a7653c8098 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a7653c8110 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55a7653c8258 <col:62> "" ""
|-CXXMethodDecl 0x55a7653c8370 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55a7653c82e0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55a7653c8418 <col:60> "" ""
|-CXXMethodDecl 0x55a7653c85b0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55a7653c84a0 <col:34> col:37 'int'
| |-ParmVarDecl 0x55a7653c8518 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55a7653c8660 <col:64> "" ""
|-CXXMethodDecl 0x55a7653c8778 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55a7653c86e8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55a7653c8820 <col:58> "" ""
|-CXXMethodDecl 0x55a7653c89b8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55a7653c88a8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a7653c8920 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55a7653c8a68 <col:62> "" ""
|-CXXMethodDecl 0x55a7653c8b80 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55a7653c8af0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55a7653c8c28 <col:59> "" ""
|-CXXMethodDecl 0x55a7653c8dc0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55a7653c8cb0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a7653c8d28 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a7653c8e70 <col:63> "" ""
|-AccessSpecDecl 0x55a7653c8ee0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55a7653c8f08 prev 0x55a7653be110 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a7653c9000 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55a7653c90f0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55a7653c9218 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55a7653c9398 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55a7653c9518 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55a7653c9698 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55a7653da4c8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55a7653dad38 <col:11>
| |-CXXDestructorDecl 0x55a7653da5a0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55a7653da6d8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55a7653da6d8
| | `-ParmVarDecl 0x55a7653da7e8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55a7653da888 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a7653da888
| | `-ParmVarDecl 0x55a7653da998 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55a7653dd758 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a7653dd868 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55a7653ddae8 <col:11>
| |   `-ReturnStmt 0x55a7653ddad8 <col:11>
| |     `-UnaryOperator 0x55a7653ddac0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55a7653ddab0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55a7653dd8d8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a7653dd8d8
|   `-ParmVarDecl 0x55a7653dd9e8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55a7653c9700 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a7653c9818 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55a7653c98b8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55a7653c9920 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55a7653c9988 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55a7653c99f0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55a7653c9a50 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55a7653c9b10 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55a7653c9b70 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55a7653c9bd0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55a7653da3d8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55a7653c98b8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55a7653dad48 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55a7653dada0 <col:12>
| |-CXXConstructorDecl 0x55a7653daa08 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55a7653daa08
| | `-ParmVarDecl 0x55a7653dab18 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55a7653dabb8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55a7653dabb8
| | `-ParmVarDecl 0x55a7653dacc8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55a7653dce40 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55a7653c9c48 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55a7653c9ca8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55a7653c9d10 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55a7653c9d78 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55a7653c9de0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55a7653c9e48 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55a7653c9ea8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55a7653c9f08 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55a7653c9f70 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55a7653c9ff8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55a7653c9c48 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55a7653da370 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55a7653c9ea8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55a7653dadb0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55a7653dae10 <col:21, line:755:5>
|-CXXConstructorDecl 0x55a7653ca198 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55a7653ca0d8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55a7653ca290 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55a7653ca478 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55a7653ca380 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55a7653ca748 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55a7653ca530 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a7653ca5a8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a7653ca620 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7653ca968 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55a7653ca818 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55a7653ca890 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55a7653d2f48 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55a7653caa28 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55a7653caaa0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55a7653cab18 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55a7653d30a0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55a7653d3010 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7653d31e8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55a7653d3158 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55a7653d32e0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7653daeb0 prev 0x55a7653b7770 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x55a7653dafe8 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x55a7653db078 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x55a7653db120 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x55a7653db1c0 <col:20>
| `-OptimizeNoneAttr 0x55a7653db218 <col:30>
|-CXXMethodDecl 0x55a7653db268 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x55a7653db308 <col:20>
| `-OptimizeNoneAttr 0x55a7653db360 <col:30>
|-CXXMethodDecl 0x55a7653db3b0 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55a7653db478 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55a7653db540 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55a7653db658 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x55a7653db720 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x55a7653db7c0 <col:20>
| `-OptimizeNoneAttr 0x55a7653db818 <col:30>
|-CXXMethodDecl 0x55a7653db888 <line:787:5, col:62> col:50 used ip_header 'click_ip *() const'
| |-NoInlineAttr 0x55a7653db928 <col:20>
| `-OptimizeNoneAttr 0x55a7653db980 <col:30>
|-CXXMethodDecl 0x55a7653dba28 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x55a7653dbac8 <col:20>
| `-OptimizeNoneAttr 0x55a7653dbb20 <col:30>
|-CXXMethodDecl 0x55a7653dbb70 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55a7653dbc88 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x55a7653dbda8 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x55a7653dbec8 <line:792:5, col:36> col:23 used udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x55a7653dbf90 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x55a7653dc030 <col:62> "" ""
|-AccessSpecDecl 0x55a7653dc0a0 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x55a7653dc100 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x55a7653dccf8 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x55a7653dcf20 <col:29, col:31>
|-CXXMethodDecl 0x55a7653dc1c8 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x55a7653dc308 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x55a7653dc278 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x55a7653dc400 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x55a7653dcf30 <col:23, col:25>
|-CXXMethodDecl 0x55a7653dc5b8 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x55a7653dc4f0 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x55a7653dc888 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55a7653dc670 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a7653dc6e8 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a7653dc760 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7653dca18 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x55a7653dc950 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x55a7653dcb10 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x55a7653dcb78 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x55a7653dcb78
  `-ParmVarDecl 0x55a7653dcc88 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a765125228 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a765125348 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x55a765125410 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x55a7651f5c00 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a7651faf18 <col:8>
|-CXXConstructorDecl 0x55a7651f5d08 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x55a7651f5d08
| `-ParmVarDecl 0x55a7651f5e18 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x55a7651f5eb8 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55a7651f5fc8 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x55a765125410 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x55a7651fb130 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55a7651fb100 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55a765125410
| |     `-CXXStaticCastExpr 0x55a7651fb0d0 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x55a7651fb0a0 <col:8> 'in_addr' lvalue ParmVar 0x55a7651f5fc8 '' 'in_addr &&'
| `-CompoundStmt 0x55a7651fb178 <col:8>
`-CXXDestructorDecl 0x55a7651fb3b0 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7651ee8f8 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55a7651eea18 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x55a7651eeb00 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x55a7651eeae0 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x55a7651eeaa8 <col:22> 'int' 4
|-FieldDecl 0x55a7651eeba8 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x55a7651eeb88 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x55a7651eeb50 <col:21> 'int' 4
|-FieldDecl 0x55a7651eec08 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x55a7651eec68 <line:40:5, col:14> col:14 ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x55a7651eecc8 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x55a7651eed28 <line:42:5, col:14> col:14 referenced ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x55a7651eed88 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x55a7651eede8 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55a7651eee48 <line:49:5, col:14> col:14 ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x55a7651eeeb8 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x55a7651eef28 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a76552e620 prev 0x55a7653b7610 <../dummy_inc/clicknet/udp.h:11:1, line:16:1> line:11:8 referenced struct click_udp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55a76552e718 <col:1, col:8> col:8 implicit struct click_udp
|-FieldDecl 0x55a76552e7b8 <line:12:5, col:14> col:14 uh_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55a76552e818 <line:13:5, col:14> col:14 uh_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x55a76552e878 <line:14:5, col:14> col:14 referenced uh_ulen 'uint16_t':'unsigned short'
`-FieldDecl 0x55a76552e8d8 <line:15:5, col:14> col:14 referenced uh_sum 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a76543e3d0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a765442530 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55a7654425f8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55a765442658 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55a7654426c0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55a765442748 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55a7654429b0 <col:16, line:46:5>
|   |-BinaryOperator 0x55a7654428f8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55a765442818 <col:9> 'TaskLink *' lvalue ->_prev 0x55a7654425f8
|   | | `-CXXThisExpr 0x55a765442808 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55a7654428e0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55a7654428c0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55a765442858 <col:17> 'TaskLink *' lvalue ->_next 0x55a765442658
|   |     | `-CXXThisExpr 0x55a765442848 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55a7654428a8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55a765442888 <col:25> 'int' 0
|   `-BinaryOperator 0x55a765442990 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55a765442928 <col:9> 'unsigned int' lvalue ->_pass 0x55a7654426c0
|     | `-CXXThisExpr 0x55a765442918 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55a765442978 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55a765442958 <col:17> 'int' 0
|-CXXConstructorDecl 0x55a7654b74f8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55a7654b74f8
| `-ParmVarDecl 0x55a7654b7608 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55a7654b76a8 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55a7654b76a8
| `-ParmVarDecl 0x55a7654b77b8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55a7654b79a8 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55a7654b79a8
|-CXXMethodDecl 0x55a7654b81a8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55a7654b81a8
| `-ParmVarDecl 0x55a7654b82b8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55a7654b8328 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55a7654b8328
  `-ParmVarDecl 0x55a7654b8438 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a765444f18 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55a765445048 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55a7654450a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55a765445108 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55a7654be768 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55a7654be840 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55a7654be840
|-CXXConstructorDecl 0x55a7654beaf8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55a7654beaf8
| `-ParmVarDecl 0x55a7654bec08 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55a7654beca8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55a7654beca8
  `-ParmVarDecl 0x55a7654bedb8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a765444d70 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55a765444e88 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55a765444f18 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55a765445048 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55a7654450a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55a765445108 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55a7654be768 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55a7654be840 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55a7654be840
| |-CXXConstructorDecl 0x55a7654beaf8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55a7654beaf8
| | `-ParmVarDecl 0x55a7654bec08 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55a7654beca8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55a7654beca8
|   `-ParmVarDecl 0x55a7654bedb8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55a7654451c8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55a765445228 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55a7654451c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55a765445048 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55a765445280 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55a7654451c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55a7654450a8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55a7654452d8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55a7654451c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55a765445108 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55a765445330 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55a7654be670 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a7654befd8 <col:11>
|-CXXConstructorDecl 0x55a7654be948 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55a7654be948
| `-ParmVarDecl 0x55a7654bea58 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55a7654bee58 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55a7654bee58
  `-ParmVarDecl 0x55a7654bef68 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7653891a0 prev 0x55a76537ffe0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a765389298 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55a765389338 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55a765390100 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a7653904e8 <col:11>
|-CXXConstructorDecl 0x55a7653901e0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a7653902c8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55a765390c30 <col:11>
|-CXXConstructorDecl 0x55a765390368 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55a765390478 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55a765392488 <col:11>
|-CXXDestructorDecl 0x55a765391798 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a765098128 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a765098238 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55a765098b00 <col:11>
|   `-ReturnStmt 0x55a765098af0 <col:11>
|     `-UnaryOperator 0x55a765098ad8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a765098ac8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55a7650982a8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55a7650983b8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55a76543c6d0 <col:11>
    `-ReturnStmt 0x55a76543c6c0 <col:11>
      `-UnaryOperator 0x55a76543c6a8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55a76543c698 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a76537f198 prev 0x55a76537eea8 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a76537f290 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55a76537f320 <col:19, col:25> col:19 public
|-TypedefDecl 0x55a76537f358 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55a764fe4300 'int32_t' sugar
|   |-Typedef 0x55a764ef6268 'int32_t'
|   `-TypedefType 0x55a764ecf3b0 '__int32_t' sugar
|     |-Typedef 0x55a764ecefc8 '__int32_t'
|     `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a76537f3c0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55a764fe44c0 'int64_t' sugar
|   |-Typedef 0x55a764ef62d0 'int64_t'
|   `-TypedefType 0x55a764ecf4d0 '__int64_t' sugar
|     |-Typedef 0x55a764ecf0a8 '__int64_t'
|     `-BuiltinType 0x55a764e8d390 'long'
|-EnumDecl 0x55a76537f418 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55a76537f590 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55a76537f570 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55a76537f548 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55a76537f530 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55a76537f500 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55a76537f688 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55a76537f668 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55a76537f640 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55a76537f628 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55a76537f600 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55a76537f5e0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55a76537f6d8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55a76537f7e0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a76537fd30 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76537f7c0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55a76537f7a0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55a76537f870 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a76537fd48 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76537f850 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55a76537f830 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55a76537f900 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a76537fd60 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76537f8e0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55a76537f8c0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55a76537f990 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a76537fd78 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76537f970 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55a76537f950 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55a76537fa20 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a76537fd90 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76537fa00 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55a76537f9e0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55a76537fab0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a76537fda8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76537fa90 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55a76537fa70 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55a76537fb40 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a76537fdc0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76537fb20 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55a76537fb00 <col:26> 'int' EnumConstant 0x55a76537f7e0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55a76537fc10 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55a76537fdd8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a76537fbf0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55a76537fbd0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55a76537fb90 <col:27> 'int' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55a76537fbb0 <col:44> 'int' EnumConstant 0x55a76537fab0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55a76537fce0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55a76537fdf0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a76537fcc0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55a76537fca0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55a76537fc60 <col:27> 'int' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55a76537fc80 <col:44> 'int' EnumConstant 0x55a76537f990 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55a76537fe08 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55a76537ff10 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55a76537ff60 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a76537fef0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55a76537fed0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55a76537ff88 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55a764fe3f30 'uninitialized_type'
|   `-CXXRecord 0x55a764fe3e98 'uninitialized_type'
|-CXXRecordDecl 0x55a76537ffe0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55a7653800f0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55a76538a2e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a7653904f8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a765390618 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55a7653905d0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55a765390560 <col:9> '<bound member function type>' ->assign 0x55a765384d38
|     | `-CXXThisExpr 0x55a765390550 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55a765390590 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55a765390600 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55a7653905b0 <col:19> 'int' 0
|-CXXConstructorDecl 0x55a765380338 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55a7653801b0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55a765380228 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55a76538be30 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55a76538be10 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55a76538a2e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a765390630 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a765390780 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55a765390708 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55a765390698 <col:9> '<bound member function type>' ->assign 0x55a765384d38
|     | `-CXXThisExpr 0x55a765390688 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55a765390750 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55a765390738 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55a7653906c8 <col:16> 'long' lvalue ParmVar 0x55a7653801b0 'sec' 'long'
|     `-ImplicitCastExpr 0x55a765390768 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55a7653906e8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765380228 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55a765380598 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55a765380408 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55a765380480 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55a76538be68 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55a76538be48 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55a76538a2e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a765390798 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a7653908d0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55a765390870 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55a765390800 <col:9> '<bound member function type>' ->assign 0x55a765384d38
|     | `-CXXThisExpr 0x55a7653907f0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55a7653908a0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55a765390830 <col:16> 'int' lvalue ParmVar 0x55a765380408 'sec' 'int'
|     `-ImplicitCastExpr 0x55a7653908b8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55a765390850 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765380480 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55a7653807f8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55a765380668 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55a7653806e0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55a76538bea0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55a76538be80 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55a76538a2e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a7653908e8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a765390a38 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55a7653909c0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55a765390950 <col:9> '<bound member function type>' ->assign 0x55a765384d38
|     | `-CXXThisExpr 0x55a765390940 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55a765390a08 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55a7653909f0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55a765390980 <col:16> 'unsigned long' lvalue ParmVar 0x55a765380668 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55a765390a20 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55a7653909a0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a7653806e0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55a765381990 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55a7653808c8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55a765380940 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55a76538bed8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55a76538beb8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55a76538a2e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a765390a50 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a765390ba0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55a765390b28 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55a765390ab8 <col:9> '<bound member function type>' ->assign 0x55a765384d38
|     | `-CXXThisExpr 0x55a765390aa8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55a765390b70 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55a765390b58 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55a765390ae8 <col:16> 'unsigned int' lvalue ParmVar 0x55a7653808c8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55a765390b88 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55a765390b08 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765380940 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55a765381af0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55a765381a60 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55a765381c88 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55a765381bc8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55a765381eb8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55a765381dc0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55a765382068 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55a765381fa8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55a76538a2e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a765390c40 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55a765390bb8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55a765381fa8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55a765390ca0 <col:19, line:214:5>
|-CXXConstructorDecl 0x55a765382238 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55a765382178 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55a76538a2e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a765390cb0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a765390d60 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55a765390d38 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55a765390d08 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55a765382178 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55a765382428 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55a7653823a0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55a76537ef40 'Timestamp'
|   | `-CXXRecord 0x55a76537f198 'Timestamp'
|   `-ParenType 0x55a765382340 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55a765382310 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55a76537f4e0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55a76537f358 'seconds_type'
|         `-TypedefType 0x55a764fe4300 'int32_t' sugar
|           |-Typedef 0x55a764ef6268 'int32_t'
|           `-TypedefType 0x55a764ecf3b0 '__int32_t' sugar
|             |-Typedef 0x55a764ecefc8 '__int32_t'
|             `-BuiltinType 0x55a764e8d370 'int'
|-CXXConversionDecl 0x55a765382568 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55a765382638 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55a765390e68 <col:37, line:231:5>
|   `-ReturnStmt 0x55a765390e58 <line:227:9, col:23>
|     `-BinaryOperator 0x55a765390e38 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55a765390e08 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55a765390db8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55a765389338
|       |   `-MemberExpr 0x55a765390d88 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55a76538a2e8
|       |     `-CXXThisExpr 0x55a765390d78 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55a765390e20 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55a765390de8 <col:23> 'int' 0
|-CXXMethodDecl 0x55a7653826f8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55a7653827b8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55a765382878 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55a765382938 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55a7653829f8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55a765382b68 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55a765382aa8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55a765382cb0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55a765382c20 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a765382d78 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55a765382e18 <col:54> "" ""
|-CXXMethodDecl 0x55a765382ea8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55a765382f48 <col:54> "" ""
|-CXXMethodDecl 0x55a765382fd8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55a765383078 <col:54> "" ""
|-CXXMethodDecl 0x55a765383178 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55a765383248 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55a765383378 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55a765383470 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55a7653835a8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55a765391080 <col:39, line:271:5>
|   `-ReturnStmt 0x55a765391070 <line:267:9, col:61>
|     `-CallExpr 0x55a765391010 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55a765390ff8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a765390e80 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55a76538a618 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55a765391040 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55a765390ee0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55a765389338
|       |   `-MemberExpr 0x55a765390eb0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55a76538a2e8
|       |     `-CXXThisExpr 0x55a765390ea0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55a765391058 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55a765390f80 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55a765390f50 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55a765390f10 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55a765390f68 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55a765390f30 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fab0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a765383668 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55a765391240 <col:39, line:279:5>
|   `-ReturnStmt 0x55a765391230 <line:275:9, col:61>
|     `-CallExpr 0x55a7653911d0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55a7653911b8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a765391098 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55a76538a618 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55a765391200 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55a7653910f8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55a765389338
|       |   `-MemberExpr 0x55a7653910c8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55a76538a2e8
|       |     `-CXXThisExpr 0x55a7653910b8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55a765391218 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55a765391198 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55a765391168 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55a765391128 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55a765391180 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55a765391148 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537f990 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a765383728 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55a7653913d8 <col:39, line:287:5>
|   `-ReturnStmt 0x55a7653913c8 <line:283:9, col:53>
|     `-BinaryOperator 0x55a7653913a8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55a765391378 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55a765391298 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55a765389338
|       |   `-MemberExpr 0x55a765391268 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55a76538a2e8
|       |     `-CXXThisExpr 0x55a765391258 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55a765391390 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55a765391358 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55a765391338 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55a765391308 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55a7653912c8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537f7e0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55a765391320 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55a7653912e8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a765383818 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55a765392670 <col:40, line:293:5>
|   |-DeclStmt 0x55a765391520 <line:291:9, col:48>
|   | `-VarDecl 0x55a765391400 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55a765391500 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55a7653914a8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55a765391478 <col:22> '<bound member function type>' ->subsec 0x55a7653827b8
|   |     |   `-CXXThisExpr 0x55a765391468 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55a7653914e8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55a7653914c8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fc10 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55a765392660 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55a765392648 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55a765392618 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a765392600 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55a7653925e0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55a7653925b0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55a765392348 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55a765392330 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55a765391538 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55a765391400 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55a765392550 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55a765392538 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55a765392508 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55a765392360 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55a7653922d0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55a7653922b8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55a765392268 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55a76537f0e8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55a765392208 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55a765391568 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55a765391558 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55a765392250 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55a765392238 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55a765391a28 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55a765391590 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55a765391620 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55a7653915f0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55a7653915b0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fc10 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55a765391608 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55a7653915d0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55a765391400 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55a765392580 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55a765392318 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55a765392308 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55a7653838d8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55a765392bc8 <col:40, line:302:5>
|   |-DeclStmt 0x55a7653927c0 <line:297:9, col:48>
|   | `-VarDecl 0x55a7653926a0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55a7653927a0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55a765392748 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55a765392718 <col:22> '<bound member function type>' ->subsec 0x55a7653827b8
|   |     |   `-CXXThisExpr 0x55a765392708 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55a765392788 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55a765392768 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fce0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55a765392bb8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55a765392ba0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55a765392b70 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a765392b58 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55a765392b38 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55a765392b08 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55a765392a30 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55a765392a18 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55a7653927d8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55a7653926a0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55a765392aa8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55a765392a90 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55a765392a60 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55a765392a48 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55a7653929b8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55a7653929a0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55a765392980 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55a76537f0e8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55a765392920 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55a765392808 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55a7653927f8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55a765392968 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55a765392950 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55a7653928e0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55a765392830 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55a7653928c0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55a765392890 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55a765392850 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fce0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55a7653928a8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55a765392870 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55a7653926a0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55a765392ad8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55a765392a00 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55a7653929f0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55a765383998 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55a765392c50 <col:40, line:306:5>
|   `-ReturnStmt 0x55a765392c40 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55a765392c10 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55a765392bf8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a765392be8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55a765383b38 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55a765383a48 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55a765383d08 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55a765383c10 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55a765383df8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55a765383f68 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55a765383ea8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55a765392d98 <col:56, line:320:5>
|   `-ReturnStmt 0x55a765392d88 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55a765392d70 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55a765392d40 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a765392d28 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55a765392ce8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55a765392cb8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55a765392c78 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55a765383ea8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55a765392cd0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55a765392c98 <col:31> 'int' 0
|-CXXMethodDecl 0x55a7653841a8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55a765384020 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a765384098 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a765392f68 <col:72, line:326:5>
|   `-ReturnStmt 0x55a765392f58 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55a765392f40 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55a765392f10 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a765392ef8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55a765392eb8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55a765392ea0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55a765392dc0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55a765384020 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55a765392e60 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55a765392e48 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55a765392de0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55a765388a90 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55a765392e88 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55a765392e00 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765384098 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a765384358 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55a765384268 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55a765393630 <col:56, line:337:5>
|   |-DeclStmt 0x55a765393268 <line:329:9, col:51>
|   | `-VarDecl 0x55a765392f90 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55a765393250 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55a765393220 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55a765393208 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55a7653931f0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55a7653931c0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55a7653931a8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55a765393190 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55a765393080 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55a765393420 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55a7653932d0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55a765389338
|   | | `-MemberExpr 0x55a7653932a0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55a76538a2e8
|   | |   `-DeclRefExpr 0x55a765393280 <col:9> 'Timestamp' lvalue Var 0x55a765392f90 't' 'Timestamp'
|   | `-BinaryOperator 0x55a765393400 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55a7653933d0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a765393300 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55a765384268 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55a7653933e8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55a7653933b0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55a765393390 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55a765393360 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55a765393320 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55a765393378 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55a765393340 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fab0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55a765393618 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55a7653935e8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55a7653935d0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55a7653935b0 <col:16> 'Timestamp' lvalue Var 0x55a765392f90 't' 'Timestamp'
|-CXXMethodDecl 0x55a765384520 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55a765384410 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a765384488 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a7653937e8 <col:72, line:343:5>
|   `-ReturnStmt 0x55a7653937d8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55a7653937c0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55a765393790 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a765393778 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55a765393738 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55a765393720 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55a765393668 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55a765384410 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55a7653936e0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55a7653936c8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55a765393688 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55a765388bd8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55a765393708 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55a7653936a8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765384488 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a765384670 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55a7653845e0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55a765393c30 <col:56, line:354:5>
|   |-DeclStmt 0x55a7653939d8 <line:346:9, col:51>
|   | `-VarDecl 0x55a765393810 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55a7653939c0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55a765393990 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55a765393978 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55a765393960 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55a765393930 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55a765393918 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55a765393900 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55a7653938d0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55a765393b90 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55a765393a40 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55a765389338
|   | | `-MemberExpr 0x55a765393a10 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55a76538a2e8
|   | |   `-DeclRefExpr 0x55a7653939f0 <col:9> 'Timestamp' lvalue Var 0x55a765393810 't' 'Timestamp'
|   | `-BinaryOperator 0x55a765393b70 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55a765393b40 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a765393a70 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55a7653845e0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55a765393b58 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55a765393b20 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55a765393b00 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55a765393ad0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55a765393a90 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55a765393ae8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55a765393ab0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537f990 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55a765393c18 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55a765393be8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55a765393bd0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55a765393bb0 <col:16> 'Timestamp' lvalue Var 0x55a765393810 't' 'Timestamp'
|-CXXMethodDecl 0x55a765384838 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55a765384728 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a7653847a0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a765393de8 <col:72, line:360:5>
|   `-ReturnStmt 0x55a765393dd8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55a765393dc0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55a765393d90 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a765393d78 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55a765393d38 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55a765393d20 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55a765393c68 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55a765384728 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55a765393ce0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55a765393cc8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55a765393c88 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55a765388d20 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55a765393d08 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55a765393ca8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a7653847a0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a765384988 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55a7653848f8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55a7653a0758 <col:56, line:371:5>
|   |-DeclStmt 0x55a765393fd8 <line:363:9, col:51>
|   | `-VarDecl 0x55a765393e10 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55a765393fc0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55a765393f90 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55a765393f78 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55a765393f60 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55a765393f30 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55a765393f18 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55a765393f00 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55a765393ed0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55a7653a06b8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55a765394040 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55a765389338
|   | | `-MemberExpr 0x55a765394010 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55a76538a2e8
|   | |   `-DeclRefExpr 0x55a765393ff0 <col:9> 'Timestamp' lvalue Var 0x55a765393e10 't' 'Timestamp'
|   | `-CallExpr 0x55a7653a0658 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55a7653a0640 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55a765394070 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55a76538a618 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55a7653a0688 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55a765394090 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55a7653848f8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55a7653a06a0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55a7653a0620 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55a7653a05f0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55a7653940b0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537f7e0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55a7653a0608 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55a7653940d0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55a7653a0740 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55a7653a0710 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55a7653a06f8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55a7653a06d8 <col:16> 'Timestamp' lvalue Var 0x55a765393e10 't' 'Timestamp'
|-CXXMethodDecl 0x55a765384a78 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55a7653a0898 <col:39, line:377:5>
|   `-ReturnStmt 0x55a7653a0888 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55a7653a0870 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55a7653a0840 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a7653a0828 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55a7653a07e8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55a7653a0790 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55a7653a07d0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55a7653a07b0 <col:29> 'int' 1
|-CXXMethodDecl 0x55a765384b38 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55a7653a0978 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55a7653a0930 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55a7653a08c0 <col:9> '<bound member function type>' ->assign 0x55a765384d38
|     | `-CXXThisExpr 0x55a7653a08b0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55a7653a08f0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55a7653a0960 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55a7653a0910 <col:19> 'int' 0
|-CXXMethodDecl 0x55a765384d38 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55a765384be8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a765384c60 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55a76538bf10 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55a76538bef0 <col:60> 'int' 0
| `-CompoundStmt 0x55a7653a0b70 <col:63, line:395:5>
|   `-BinaryOperator 0x55a7653a0b50 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55a7653a09d0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55a765389338
|     | `-MemberExpr 0x55a7653a09a0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55a76538a2e8
|     |   `-CXXThisExpr 0x55a7653a0990 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55a7653a0b30 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55a7653a0ac0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55a7653a0a60 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55a7653a0a48 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55a7653a0a30 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55a7653a0a00 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55a765384be8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55a7653a0aa8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55a7653a0a88 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55a7653a0b18 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55a7653a0b00 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55a7653a0ae0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765384c60 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a765384f08 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55a765384df8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a765384e70 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a7653a0cc8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55a7653a0c80 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55a7653a0b98 <col:9> '<bound member function type>' ->assign 0x55a765384d38
|     | `-CXXThisExpr 0x55a7653a0b88 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55a7653a0cb0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55a7653a0bc8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55a765384df8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55a7653a0c40 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55a7653a0c28 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a7653a0be8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55a765388bd8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55a7653a0c68 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55a7653a0c08 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765384e70 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7653850d8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55a765384fc8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a765385040 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a7653a0e20 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55a7653a0dd8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55a7653a0cf0 <col:9> '<bound member function type>' ->assign 0x55a765384d38
|     | `-CXXThisExpr 0x55a7653a0ce0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55a7653a0e08 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55a7653a0d20 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55a765384fc8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55a7653a0d98 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55a7653a0d80 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a7653a0d40 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55a765388d20 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55a7653a0dc0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55a7653a0d60 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765385040 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a7653852a8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55a765385198 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a765385210 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55a76538bf48 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55a76538bf28 <col:57> 'int' 0
| `-DeprecatedAttr 0x55a765385358 <col:75> "" ""
|-CXXMethodDecl 0x55a7653854e8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55a7653853d8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a765385450 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a765385598 <col:74> "" ""
|-CXXMethodDecl 0x55a765385728 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55a765385618 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55a765385690 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a7653857d8 <col:74> "" ""
|-CXXMethodDecl 0x55a765385868 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55a765385908 <col:42> "" ""
|-CXXMethodDecl 0x55a765388140 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55a765388020 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55a7653880a0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55a765388210 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55a7653882d0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55a765388370 <col:20>
| `-OptimizeNoneAttr 0x55a7653883c8 <col:30>
|-CXXMethodDecl 0x55a765388410 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55a7653884d0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55a765388590 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55a765388650 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55a765388710 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55a7653887d0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55a765388890 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55a765388950 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55a765388a90 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55a765388a00 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a7653a0f68 <col:58, line:512:5>
|   `-ReturnStmt 0x55a7653a0f58 <line:511:9, col:53>
|     `-BinaryOperator 0x55a7653a0f38 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55a7653a0f08 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55a7653a0e38 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765388a00 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55a7653a0f20 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55a7653a0ee8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55a7653a0ec8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55a7653a0e98 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55a7653a0e58 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55a7653a0eb0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55a7653a0e78 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fab0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a765388bd8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55a765388b48 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a7653a10b0 <col:58, line:516:5>
|   `-ReturnStmt 0x55a7653a10a0 <line:515:9, col:53>
|     `-BinaryOperator 0x55a7653a1080 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55a7653a1050 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55a7653a0f80 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765388b48 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55a7653a1068 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55a7653a1030 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55a7653a1010 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55a7653a0fe0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55a7653a0fa0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55a7653a0ff8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55a7653a0fc0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537f990 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a765388d20 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55a765388c90 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a7653a11f8 <col:58, line:520:5>
|   `-ReturnStmt 0x55a7653a11e8 <line:519:9, col:53>
|     `-BinaryOperator 0x55a7653a11c8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55a7653a1198 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55a7653a10c8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765388c90 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55a7653a11b0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55a7653a1178 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55a7653a1158 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55a7653a1128 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55a7653a10e8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537f7e0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55a7653a1140 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55a7653a1108 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a765388e68 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55a765388dd8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a7653a1340 <col:60, line:524:5>
|   `-ReturnStmt 0x55a7653a1330 <line:523:9, col:55>
|     `-BinaryOperator 0x55a7653a1310 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55a7653a12e0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55a7653a1210 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765388dd8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55a7653a12f8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55a7653a12c0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55a7653a12a0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55a7653a1270 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55a7653a1230 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55a7653a1288 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55a7653a1250 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fab0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a765388fb0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55a765388f20 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a7653a1488 <col:60, line:528:5>
|   `-ReturnStmt 0x55a7653a1478 <line:527:9, col:55>
|     `-BinaryOperator 0x55a7653a1458 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55a7653a1428 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55a7653a1358 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765388f20 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55a7653a1440 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55a7653a1408 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55a7653a13e8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55a7653a13b8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55a7653a1378 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55a7653a13d0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55a7653a1398 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537f990 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55a7653890f8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55a765389068 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a7653a15d0 <col:60, line:532:5>
|   `-ReturnStmt 0x55a7653a15c0 <line:531:9, col:55>
|     `-BinaryOperator 0x55a7653a15a0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55a7653a1570 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55a7653a14a0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765389068 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55a7653a1588 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55a7653a1550 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55a7653a1530 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55a7653a1500 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55a7653a14c0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537f7e0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55a7653a1518 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55a7653a14e0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55a76537fb40 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55a7653891a0 prev 0x55a76537ffe0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a765389298 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55a765389338 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55a765390100 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55a7653904e8 <col:11>
| |-CXXConstructorDecl 0x55a7653901e0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a7653902c8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55a765390c30 <col:11>
| |-CXXConstructorDecl 0x55a765390368 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a765390478 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55a765392488 <col:11>
| |-CXXDestructorDecl 0x55a765391798 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55a765098128 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a765098238 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55a765098b00 <col:11>
| |   `-ReturnStmt 0x55a765098af0 <col:11>
| |     `-UnaryOperator 0x55a765098ad8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55a765098ac8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55a7650982a8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55a7650983b8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55a76543c6d0 <col:11>
|     `-ReturnStmt 0x55a76543c6c0 <col:11>
|       `-UnaryOperator 0x55a76543c6a8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55a76543c698 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55a7653893a0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55a7653894a0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55a7653896a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a765389480 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55a765389460 <col:21> 'int' 0
| |-EnumConstantDecl 0x55a765389530 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55a7653896b8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a765389510 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55a7653894f0 <col:23> 'int' 1
| |-EnumConstantDecl 0x55a7653895c0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55a7653896d0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a7653895a0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55a765389580 <col:23> 'int' 2
| `-EnumConstantDecl 0x55a765389650 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55a7653896e8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a765389630 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55a765389610 <col:27> 'int' 3
|-CXXMethodDecl 0x55a765389728 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55a7653897f0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55a7653899f8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55a7653898a0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55a765389920 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55a76538bf60 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55a765389c08 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55a765389ab8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55a765389b30 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55a765389cd8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55a765389d98 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55a765389f08 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55a765389e48 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55a765389fd0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55a76538a090 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55a76538a150 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55a76538a210 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55a76538a2b0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55a76538a2e8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55a76538a358 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55a7653a15e8 <col:27, line:684:5>
|-CXXMethodDecl 0x55a76538a418 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55a7653a15f8 <col:27, line:696:5>
|-CXXMethodDecl 0x55a76538a618 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55a76538a4c8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55a76538a540 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a7653a1780 <col:66, line:700:5>
|   `-ReturnStmt 0x55a7653a1770 <line:699:9, col:31>
|     `-CallExpr 0x55a7653a1710 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55a7653a16f8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a7653a16a8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55a76520c9c8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55a7653a1740 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55a7653a1668 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55a76538a4c8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55a7653a1758 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55a7653a1688 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a76538a540 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a76538a988 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55a76538a6d8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55a76538a750 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55a76538a7c8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55a76538a840 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a7653a1ad0 <col:64, line:707:5>
|   |-DeclStmt 0x55a7653a1810 <line:704:9, col:24>
|   | `-VarDecl 0x55a7653a17a8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55a7653a1a20 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55a7653a1828 <col:9> 'int32_t':'int' lvalue ParmVar 0x55a76538a750 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55a7653a1a08 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55a7653a19a0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55a7653a1988 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a7653a1908 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55a765211c98 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55a7653a19d8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55a7653a18a8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55a76538a7c8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55a7653a19f0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55a7653a18c8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a76538a840 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55a7653a18e8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55a7653a17a8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55a7653a1ab0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55a7653a1a40 <col:9> 'int32_t':'int' lvalue ParmVar 0x55a76538a6d8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55a7653a1a98 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55a7653a1a80 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55a7653a1a60 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55a7653a17a8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55a76538ac28 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55a76538aa58 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55a76538aad0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55a76538ab48 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55a76538aec8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55a76538acf0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55a76538ad68 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55a76538ade0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55a76538b058 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55a76538af90 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55a76538b258 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55a76538b110 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55a76538b188 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55a76538b528 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55a76538b468 parent 0x55a764e8d278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55a76538b318 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55a76538b390 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55a76538b748 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55a76538b688 parent 0x55a764e8d278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55a76538b578 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55a76538b5f0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55a76538b910 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55a76538b858 parent 0x55a764e8d278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55a76538b798 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55a76538bb98 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55a76538bad8 parent 0x55a764e8d278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55a76538b988 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55a76538ba00 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55a76538bdb8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55a76538bcf8 parent 0x55a764e8d278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55a76538bbe8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55a76538bc60 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55a765391640 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a765391728 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55a76538a2e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a765392198 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55a765392150 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55a76538a2e8
| |     `-DeclRefExpr 0x55a765392130 <col:7> 'const Timestamp' lvalue ParmVar 0x55a765391728 '' 'const Timestamp &'
| `-CompoundStmt 0x55a7653921f8 <col:7>
|-CXXConstructorDecl 0x55a7653918a8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55a7653919b8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55a76538a2e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55a765392498 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55a765392440 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55a76538a2e8
| |     `-CXXStaticCastExpr 0x55a765392410 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55a7653923e0 <col:7> 'Timestamp' lvalue ParmVar 0x55a7653919b8 '' 'Timestamp &&'
| `-CompoundStmt 0x55a7653924f8 <col:7>
|-CXXDestructorDecl 0x55a765391a68 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a765097f78 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a765098088 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55a765098b78 <col:7>
|   |-CXXMemberCallExpr 0x55a765098b18 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55a765098a58 <col:7> '<bound member function type>' .operator= 0x55a765098128
|   | | `-MemberExpr 0x55a765098968 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55a76538a2e8
|   | |   `-CXXThisExpr 0x55a765098958 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55a765098a28 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55a76538a2e8
|   |   `-DeclRefExpr 0x55a765098a08 <col:7> 'const Timestamp' lvalue ParmVar 0x55a765098088 '' 'const Timestamp &'
|   `-ReturnStmt 0x55a765098b68 <col:7>
|     `-UnaryOperator 0x55a765098b50 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a765098b40 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55a765098428 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55a765098538 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55a76543c748 <col:7>
    |-CXXMemberCallExpr 0x55a76543c6e8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55a76543c650 <col:7> '<bound member function type>' .operator= 0x55a7650982a8
    | | `-MemberExpr 0x55a76543c520 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55a76538a2e8
    | |   `-CXXThisExpr 0x55a76543c510 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55a76543c620 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55a76538a2e8
    |   `-CXXStaticCastExpr 0x55a76543c5f0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55a76543c5c0 <col:7> 'Timestamp' lvalue ParmVar 0x55a765098538 '' 'Timestamp &&'
    `-ReturnStmt 0x55a76543c738 <col:7>
      `-UnaryOperator 0x55a76543c720 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55a76543c710 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a765449348 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55a765449558 prev 0x55a765449348 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a76544aa10 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55a76544a9c0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55a76544a9a0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55a76544a850 'type'
|     `-SubstTemplateTypeParmType 0x55a76544a670 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55a765154930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a7651548d8 'T'
|       `-RecordType 0x55a76544a150 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55a76544a068 'sized_array_memory'
|-FieldDecl 0x55a76544e640 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55a76544e690 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a76544e6c8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55a7654495f0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a76518c7e8 'T'
|   `-RecordType 0x55a765448550 'TimerSet::heap_element'
|     `-CXXRecord 0x55a7654484c0 'heap_element'
|-TypedefDecl 0x55a76544e788 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55a76544e750 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55a7654495f0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a765448550 'TimerSet::heap_element'
|       `-CXXRecord 0x55a7654484c0 'heap_element'
|-TypedefDecl 0x55a76544e818 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55a76544e7e0 'const TimerSet::heap_element &'
|   `-QualType 0x55a7654495f1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55a7654495f0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a765448550 'TimerSet::heap_element'
|         `-CXXRecord 0x55a7654484c0 'heap_element'
|-TypedefDecl 0x55a76544e8a8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55a76544e870 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55a7654495f0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a765448550 'TimerSet::heap_element'
|       `-CXXRecord 0x55a7654484c0 'heap_element'
|-TypedefDecl 0x55a76544e968 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55a76544e930 'const TimerSet::heap_element *'
|   `-QualType 0x55a7654495f1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55a7654495f0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a765448550 'TimerSet::heap_element'
|         `-CXXRecord 0x55a7654484c0 'heap_element'
|-TypedefDecl 0x55a76544f7d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55a76544f780 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55a76544f760 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55a76544f698 'type'
|     `-LValueReferenceType 0x55a76544f660 'const TimerSet::heap_element &'
|       `-QualType 0x55a76544f401 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55a76544f400 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55a76515f000 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55a76515efa8 'T'
|           `-RecordType 0x55a765448550 'TimerSet::heap_element'
|             `-CXXRecord 0x55a7654484c0 'heap_element'
|-TypedefDecl 0x55a76544f838 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55a76544e7e0 'const TimerSet::heap_element &'
|   `-QualType 0x55a7654495f1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55a7654495f0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a765448550 'TimerSet::heap_element'
|         `-CXXRecord 0x55a7654484c0 'heap_element'
|-TypedefDecl 0x55a76544f890 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a76544f8f8 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55a76544e870 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55a7654495f0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a765448550 'TimerSet::heap_element'
|       `-CXXRecord 0x55a7654484c0 'heap_element'
|-TypedefDecl 0x55a76544f960 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55a76544e930 'const TimerSet::heap_element *'
|   `-QualType 0x55a7654495f1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55a7654495f0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a765448550 'TimerSet::heap_element'
|         `-CXXRecord 0x55a7654484c0 'heap_element'
|-EnumDecl 0x55a76544f9b8 <line:134:5> col:5
| `-EnumConstantDecl 0x55a76544fab0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a76544fa90 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a76518dec8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a76518dea0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a76518de80 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a76544fb38 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a76544fdc8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55a76544fbf0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a76544fc90 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55a765450088 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55a76544ff70 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55a765450348 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55a765450230 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55a765450690 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55a765450570 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55a7654509a0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55a765450880 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55a765450c90 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55a765450ad8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a765450b50 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55a765450de8 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55a765450ec8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a765450f20 <col:30> Inherited
|-CXXMethodDecl 0x55a765450f68 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55a765451018 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a765451070 <col:30> Inherited
|-CXXMethodDecl 0x55a765451138 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55a7654511e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a765451240 <col:30> Inherited
|-CXXMethodDecl 0x55a765451288 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55a765451338 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a765451390 <col:30> Inherited
|-CXXMethodDecl 0x55a7654513d8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55a765451488 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654514e0 <col:30> Inherited
|-CXXMethodDecl 0x55a765451528 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55a7654515d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a765451630 <col:30> Inherited
|-CXXMethodDecl 0x55a765451658 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a765451708 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7654517b8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55a765451978 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55a765451868 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654518e0 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55a765451ac8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a765451a38 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a765451c78 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55a765451b80 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a765451d30 <col:20>
| `-OptimizeNoneAttr 0x55a765451d88 <col:30>
|-CXXMethodDecl 0x55a765451ea8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55a765451db0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a765451f60 <col:20>
| `-OptimizeNoneAttr 0x55a765451fb8 <col:30>
|-CXXMethodDecl 0x55a765452070 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a765451fe0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654521b8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a765452128 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654522e8 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55a765452418 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55a765452550 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55a765452620 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55a765452760 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654526d0 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654528a8 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a765452818 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654529f0 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55a765452960 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a765452aa8 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a765452ba8 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a765452b18 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a765452c60 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a765452d18 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55a765452e18 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55a765452fc8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55a765452ed8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55a7654537b8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a765453080 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55a765453718 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55a765453618 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55a765453898 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a7654539e8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55a765453958 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55a765453aa0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a765453ce8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55a765453b60 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55a765453bd8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55a765453ea8 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55a765453db8 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55a7654540f8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55a765453f70 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55a765453fe8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55a7654541b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a765454418 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55a765454320 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55a7654544e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a7654544e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a765454630 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55a765454838 prev 0x55a765454630 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a765455980 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55a765455930 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55a765455910 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55a7654557c0 'type'
|     `-SubstTemplateTypeParmType 0x55a7654555e0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55a765154930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a7651548d8 'T'
|       `-RecordType 0x55a765455130 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55a765455048 'sized_array_memory'
|-FieldDecl 0x55a7654595b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55a765459600 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a765459638 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55a7654548d0 'Timer *' sugar
|   |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a76518c7e8 'T'
|   `-PointerType 0x55a7653f13d0 'Timer *'
|     `-RecordType 0x55a7653f0520 'Timer'
|       `-CXXRecord 0x55a765435f18 'Timer'
|-TypedefDecl 0x55a7654596f8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55a7654596c0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55a7654548d0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-PointerType 0x55a7653f13d0 'Timer *'
|       `-RecordType 0x55a7653f0520 'Timer'
|         `-CXXRecord 0x55a765435f18 'Timer'
|-TypedefDecl 0x55a7654597b8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55a765459780 'Timer *const &'
|   `-QualType 0x55a7654548d1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55a7654548d0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-PointerType 0x55a7653f13d0 'Timer *'
|         `-RecordType 0x55a7653f0520 'Timer'
|           `-CXXRecord 0x55a765435f18 'Timer'
|-TypedefDecl 0x55a765459878 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55a765459840 'Timer **'
|   `-SubstTemplateTypeParmType 0x55a7654548d0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-PointerType 0x55a7653f13d0 'Timer *'
|       `-RecordType 0x55a7653f0520 'Timer'
|         `-CXXRecord 0x55a765435f18 'Timer'
|-TypedefDecl 0x55a765459938 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55a765459900 'Timer *const *'
|   `-QualType 0x55a7654548d1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55a7654548d0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-PointerType 0x55a7653f13d0 'Timer *'
|         `-RecordType 0x55a7653f0520 'Timer'
|           `-CXXRecord 0x55a765435f18 'Timer'
|-TypedefDecl 0x55a76545b7b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55a76545a4c0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55a76545a4a0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55a76545a430 'type'
|     `-SubstTemplateTypeParmType 0x55a76545a1f0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55a76515f730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76515f6e0 'T'
|       `-PointerType 0x55a7653f13d0 'Timer *'
|         `-RecordType 0x55a7653f0520 'Timer'
|           `-CXXRecord 0x55a765435f18 'Timer'
|-TypedefDecl 0x55a76545b818 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55a765459780 'Timer *const &'
|   `-QualType 0x55a7654548d1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55a7654548d0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-PointerType 0x55a7653f13d0 'Timer *'
|         `-RecordType 0x55a7653f0520 'Timer'
|           `-CXXRecord 0x55a765435f18 'Timer'
|-TypedefDecl 0x55a76545b870 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a76545b8d8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55a765459840 'Timer **'
|   `-SubstTemplateTypeParmType 0x55a7654548d0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-PointerType 0x55a7653f13d0 'Timer *'
|       `-RecordType 0x55a7653f0520 'Timer'
|         `-CXXRecord 0x55a765435f18 'Timer'
|-TypedefDecl 0x55a76545b940 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55a765459900 'Timer *const *'
|   `-QualType 0x55a7654548d1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55a7654548d0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-PointerType 0x55a7653f13d0 'Timer *'
|         `-RecordType 0x55a7653f0520 'Timer'
|           `-CXXRecord 0x55a765435f18 'Timer'
|-EnumDecl 0x55a76545b998 <line:134:5> col:5
| `-EnumConstantDecl 0x55a76545ba90 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a76545ba70 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a76518dec8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a76518dea0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a76518de80 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a76545bb18 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a76545bda8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a76545bbd0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a76545bc70 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55a76545c068 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55a76545bf50 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55a76545c328 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55a76545c210 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55a76545c670 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55a76545c550 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55a76545c980 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55a76545c860 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55a76545cc70 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a76545cab8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a76545cb30 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55a76545cdc8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55a76545cea8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a76545cf00 <col:30> Inherited
|-CXXMethodDecl 0x55a76545cf48 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55a76545cff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a76545d050 <col:30> Inherited
|-CXXMethodDecl 0x55a76545d118 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55a76545d1c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a76545d220 <col:30> Inherited
|-CXXMethodDecl 0x55a76545d268 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55a76545d318 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a76545d370 <col:30> Inherited
|-CXXMethodDecl 0x55a76545d3b8 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55a76545d468 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a76545d4c0 <col:30> Inherited
|-CXXMethodDecl 0x55a76545d508 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55a76545d5b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a76545d610 <col:30> Inherited
|-CXXMethodDecl 0x55a76545d638 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a76545d6e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a76545d798 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a76545d958 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a76545d848 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a76545d8c0 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55a76545daa8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a76545da18 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a76545dc58 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55a76545db60 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a76545dd10 <col:20>
| `-OptimizeNoneAttr 0x55a76545dd68 <col:30>
|-CXXMethodDecl 0x55a76545de88 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55a76545dd90 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a76545df40 <col:20>
| `-OptimizeNoneAttr 0x55a76545df98 <col:30>
|-CXXMethodDecl 0x55a76545e050 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55a76545dfc0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a76545e198 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a76545e108 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a76545e2c8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55a76545e3f8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55a76545e4c8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55a76545e598 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55a76545e6d8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55a76545e648 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a76545e820 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a76545e790 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a76545e968 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55a76545e8d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a76545ea20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a76545eb20 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a76545ea90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a76545ebd8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a76545ec98 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55a76545ed98 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55a76545ef18 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55a76545ee58 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55a76545f6d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a76545efd0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55a76545f638 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55a76545f538 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55a76545f7b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a76545f908 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55a76545f878 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55a76545f9c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a76545fc08 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55a76545fa80 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55a76545faf8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55a76545fdc8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55a76545fcd8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55a765460018 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55a76545fe90 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55a76545ff08 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55a7654600d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a765460338 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55a765460240 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55a765460408 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a765460408

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a765432950 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a765432a68 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55a765432af8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55a765432b80 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55a765432c70 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55a765432d70 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55a765432e30 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55a765432ef0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55a765433018 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55a765433018
| `-ParmVarDecl 0x55a765433128 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55a7654611b8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55a7654611b8
  `-ParmVarDecl 0x55a7654612c8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a765447640 prev 0x55a76543a1d8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55a765447738 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55a7654477c8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55a765447850 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55a765447948 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55a765461630 <col:43, col:67>
|   `-ReturnStmt 0x55a765461620 <col:45, col:52>
|     `-CXXConstructExpr 0x55a7654615f0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55a7654615c0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55a765449130
|         `-CXXThisExpr 0x55a7654615b0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55a765447a08 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55a765447c10 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55a765447ab8 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55a765447b30 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55a765447d08 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55a765447dd0 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55a7654616b0 <col:39, col:67>
|   `-ReturnStmt 0x55a7654616a0 <col:41, col:48>
|     `-ImplicitCastExpr 0x55a765461688 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55a765461658 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55a765449218
|         `-CXXThisExpr 0x55a765461648 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55a765447e98 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55a765461730 <col:35, col:59>
|   `-ReturnStmt 0x55a765461720 <col:37, col:44>
|     `-ImplicitCastExpr 0x55a765461708 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55a7654616d8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55a765449280
|         `-CXXThisExpr 0x55a7654616c8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55a765447fe0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55a765447f50 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55a765448128 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55a765448098 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55a765448328 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55a7654481e0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55a765448258 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55a7654483f8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55a765448498 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55a7654484c0 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a7654485d8 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55a765448678 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55a7654486d8 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55a765448808 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55a765448738 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55a765448678 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55a765461808 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55a7654617b0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55a765461780 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55a765437638
|   |       `-ImplicitCastExpr 0x55a7654617d0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55a765461768 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55a765461748 <col:17> 'Timer *' lvalue ParmVar 0x55a765448738 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55a7654486d8 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55a7654618a0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a765461860 <col:41> 'Timer *' lvalue ParmVar 0x55a765448738 't_' 'Timer *'
|   `-CompoundStmt 0x55a7654618f0 <col:45, line:44:2>
|-CXXRecordDecl 0x55a7654488d0 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a7654489e8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55a765448c38 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55a765448ab8 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55a765448b30 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55a765461a20 <col:71, line:49:2>
|     `-ReturnStmt 0x55a765461a10 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55a7654619d8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55a7654619c0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55a7654619a0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55a7653ae738 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55a765461920 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55a765448678
|         | `-DeclRefExpr 0x55a765461900 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55a765448ab8 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55a765461970 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55a765448678
|           `-DeclRefExpr 0x55a765461950 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55a765448b30 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55a765448d00 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a765448e18 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55a765449038 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55a765448eb8 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55a765448f30 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55a765461c28 <col:63, line:54:2>
|     `-BinaryOperator 0x55a765461c08 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55a765461ab8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55a765439678
|       | `-ImplicitCastExpr 0x55a765461aa0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55a765461a70 <col:6, col:9> 'Timer *' lvalue ->t 0x55a7654486d8
|       |     `-ImplicitCastExpr 0x55a765461a58 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55a765461a38 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55a765448f30 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55a765461bf0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55a765461bd0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55a765461b78 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55a765461b58 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55a765461b28 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55a765461ae8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55a765448f30 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55a765461b40 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55a765461b08 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55a765448eb8 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55a765461bb8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55a765461b98 <col:39> 'int' 1
|-FieldDecl 0x55a765449130 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55a7654491a0 <col:44, col:53> aligned
|   `-ConstantExpr 0x55a765449180 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55a765449100 <col:52> 'int' 8
|-FieldDecl 0x55a765449218 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55a765449280 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55a7654492e8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55a7654545d0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55a7654604f0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55a765460550 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55a7654605b0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55a765460610 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a765460700 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55a765460670 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55a7654607c8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55a765462080 <col:29, line:81:5>
|   `-IfStmt 0x55a765462058 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55a765461d10 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55a765461cb0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55a765461c80 <col:6, col:18> '<bound member function type>' .size 0x55a765451658
|     |     `-ImplicitCastExpr 0x55a765461cf8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55a765461c50 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55a7654545d0
|     |         `-CXXThisExpr 0x55a765461c40 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55a765461f00 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55a765461ee8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55a765461ec8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55a765097f78 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55a765461d38 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55a765449130
|     | | `-CXXThisExpr 0x55a765461d28 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55a765461eb0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55a765461e80 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55a765448678
|     |     `-CXXMemberCallExpr 0x55a765461e58 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55a765461e28 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55a765452760
|     |       | `-MemberExpr 0x55a765461d78 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55a7654545d0
|     |       |   `-CXXThisExpr 0x55a765461d68 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55a765461e08 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55a765462040 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55a765462008 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55a765461ff0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55a765461fd0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55a765098428 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55a765461f48 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55a765449130
|         | `-CXXThisExpr 0x55a765461f38 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55a765461fb8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55a765461f88 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55a765460908 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55a765460878 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55a7654609d0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55a765460a90 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55a765460b50 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55a765460c40 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55a765460ca8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55a765460ca8
| `-ParmVarDecl 0x55a765460db8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55a765460e58 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55a765460e58
| `-ParmVarDecl 0x55a765460f68 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55a765461008 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55a765461008
| `-ParmVarDecl 0x55a765461118 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55a765461338 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55a765461338
| `-ParmVarDecl 0x55a765461448 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55a7654614d0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55a7654614d0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7654a01e8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55a7654a03f8 prev 0x55a7654a01e8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a7654a14d0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55a7654a1480 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55a7654a1460 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55a7654a1310 'type'
|     `-SubstTemplateTypeParmType 0x55a7654555e0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55a765154930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a7651548d8 'T'
|       `-RecordType 0x55a765455130 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55a765455048 'sized_array_memory'
|-FieldDecl 0x55a7654a15d0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55a7654a1620 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a7654a1658 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55a7654a0490 'pollfd' sugar
|   |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a76518c7e8 'T'
|   `-RecordType 0x55a76549e2a0 'pollfd'
|     `-CXXRecord 0x55a76549e210 'pollfd'
|-TypedefDecl 0x55a7654a1718 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55a7654a16e0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55a7654a0490 'pollfd' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a76549e2a0 'pollfd'
|       `-CXXRecord 0x55a76549e210 'pollfd'
|-TypedefDecl 0x55a7654a17d8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55a7654a17a0 'const pollfd &'
|   `-QualType 0x55a7654a0491 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55a7654a0490 'pollfd' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a76549e2a0 'pollfd'
|         `-CXXRecord 0x55a76549e210 'pollfd'
|-TypedefDecl 0x55a7654a1868 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55a7654a1830 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55a7654a0490 'pollfd' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a76549e2a0 'pollfd'
|       `-CXXRecord 0x55a76549e210 'pollfd'
|-TypedefDecl 0x55a7654a1928 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55a7654a18f0 'const pollfd *'
|   `-QualType 0x55a7654a0491 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55a7654a0490 'pollfd' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a76549e2a0 'pollfd'
|         `-CXXRecord 0x55a76549e210 'pollfd'
|-TypedefDecl 0x55a7654a2500 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55a7654a24b0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55a7654a2490 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55a7654a2420 'type'
|     `-SubstTemplateTypeParmType 0x55a7654a21e0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55a76515f730 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76515f6e0 'T'
|       `-RecordType 0x55a76549e2a0 'pollfd'
|         `-CXXRecord 0x55a76549e210 'pollfd'
|-TypedefDecl 0x55a7654a2568 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55a7654a17a0 'const pollfd &'
|   `-QualType 0x55a7654a0491 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55a7654a0490 'pollfd' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a76549e2a0 'pollfd'
|         `-CXXRecord 0x55a76549e210 'pollfd'
|-TypedefDecl 0x55a7654a25c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654a2628 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55a7654a1830 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55a7654a0490 'pollfd' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a76549e2a0 'pollfd'
|       `-CXXRecord 0x55a76549e210 'pollfd'
|-TypedefDecl 0x55a7654a2690 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55a7654a18f0 'const pollfd *'
|   `-QualType 0x55a7654a0491 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55a7654a0490 'pollfd' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a76549e2a0 'pollfd'
|         `-CXXRecord 0x55a76549e210 'pollfd'
|-EnumDecl 0x55a7654a26e8 <line:134:5> col:5
| `-EnumConstantDecl 0x55a7654a27e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a7654a27c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a76518dec8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a76518dea0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a76518de80 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a7654a2868 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a7654a2af8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654a2920 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654a29c0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55a7654a2db8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55a7654a2ca0 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55a7654a3078 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55a7654a2f60 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55a7654a33c0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55a7654a32a0 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55a7654a36d0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55a7654a35b0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55a7654a39c0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654a3808 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654a3880 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55a7654a3b18 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55a7654a3bf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654a3c50 <col:30> Inherited
|-CXXMethodDecl 0x55a7654a3c98 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55a7654a3d48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654a3da0 <col:30> Inherited
|-CXXMethodDecl 0x55a7654a3e68 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55a7654a3f18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654a3f70 <col:30> Inherited
|-CXXMethodDecl 0x55a7654a3fb8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55a7654a4068 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654a40c0 <col:30> Inherited
|-CXXMethodDecl 0x55a7654a4108 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55a7654a41b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654a4210 <col:30> Inherited
|-CXXMethodDecl 0x55a7654a4258 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55a7654a4308 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654a4360 <col:30> Inherited
|-CXXMethodDecl 0x55a7654a4388 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7654a4438 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7654a44e8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a7654a46a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654a4598 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654a4610 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55a7654a47f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654a4768 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654a49a8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55a7654a48b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7654a4a60 <col:20>
| `-OptimizeNoneAttr 0x55a7654a4ab8 <col:30>
|-CXXMethodDecl 0x55a7654a4bd8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55a7654a4ae0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7654a4c90 <col:20>
| `-OptimizeNoneAttr 0x55a7654a4ce8 <col:30>
|-CXXMethodDecl 0x55a7654a4da0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654a4d10 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654a4ee8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7654a4e58 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654a5018 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55a7654a5148 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55a7654a5218 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55a7654a52e8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55a7654a5428 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654a5398 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654a5570 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7654a54e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654a5730 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55a7654a5628 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7654a57e8 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a7654a58e8 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a7654a5858 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7654a59a0 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a7654a5a58 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55a7654a5b58 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55a7654a5d08 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7654a5c18 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55a7654a64c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a7654a5dc0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55a7654a6428 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55a7654a6328 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55a7654a65a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a7654a66f8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7654a6668 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55a7654a67b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a7654a69f8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654a6870 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55a7654a68e8 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55a7654a6bb8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55a7654a6ac8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55a7654a6e08 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55a7654a6c80 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55a7654a6cf8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55a7654a6ec8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7654a7128 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55a7654a7030 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55a7654a71f8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a7654a71f8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7654a87e0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55a7654a89b8 prev 0x55a7654a87e0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55a7654a8a48 <col:46, col:52> col:46 public
|-TypedefDecl 0x55a7654a8a70 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654aa640 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55a7654aa5f0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55a7654a8f20 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55a7654a8e20 'type'
|     `-TemplateSpecializationType 0x55a7654a8db0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55a7654a8c90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55a7654a8c70 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55a7654a8c50 <col:24> 'unsigned long' 24
|       `-RecordType 0x55a7654a8d90 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55a7654a8cb0 'char_array'
|-TypedefDecl 0x55a7654aa6f8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55a7654aa6c0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55a7654aa6a0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55a7654aa640 'type'
|     `-ElaboratedType 0x55a7654aa5f0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55a7654a8f20 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55a7654a8e20 'type'
|         `-TemplateSpecializationType 0x55a7654a8db0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55a7654a8c90 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55a7654a8c70 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55a7654a8c50 <col:24> 'unsigned long' 24
|           `-RecordType 0x55a7654a8d90 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55a7654a8cb0 'char_array'
|-CXXMethodDecl 0x55a7654aa878 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55a7654aa788 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55a7654aa968 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55a7654aaa48 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55a7654aaa48
|-CXXMethodDecl 0x55a7654aad18 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55a7654aac20 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55a7654aaf58 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55a7654aadd0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7654aae48 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55a7654ab128 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55a7654ab018 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7654ab090 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55a7654ab288 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55a7654ab358 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55a7654ab5a8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55a7654ab418 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55a7654ab490 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55a7654ab808 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55a7654ab678 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55a7654ab6f0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55a7654ab9c8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55a7654ab8d8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55a7654abb88 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55a7654aba90 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55a7654abc40 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a7654abcf0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7654abf28 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55a7654abda0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55a7654abe18 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55a7654ac1c8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55a7654ac0d0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55a7654ac290 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55a7654ac2e0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55a7654ac330 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a7654a7340 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55a7654a7548 prev 0x55a7654a7340 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55a7654a8750 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55a7654a8700 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55a7654a86e0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55a7654a8590 'type'
|     `-SubstTemplateTypeParmType 0x55a7654a83b0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55a765154930 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a7651548d8 'T'
|       `-RecordType 0x55a7654a7f00 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55a7654a7e20 'sized_array_memory'
|-FieldDecl 0x55a7654ac380 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55a7654ac3d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55a7654ac408 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55a7654a75e0 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55a76518c7e8 'T'
|   `-RecordType 0x55a76549fd50 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55a76549fcc0 'SelectorInfo'
|-TypedefDecl 0x55a7654ac4c8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55a7654ac490 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55a7654a75e0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a76549fd50 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55a76549fcc0 'SelectorInfo'
|-TypedefDecl 0x55a7654ac588 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55a7654ac550 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55a7654a75e1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55a7654a75e0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a76549fd50 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55a76549fcc0 'SelectorInfo'
|-TypedefDecl 0x55a7654ac618 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55a7654ac5e0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55a7654a75e0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a76549fd50 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55a76549fcc0 'SelectorInfo'
|-TypedefDecl 0x55a7654ac6d8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55a7654ac6a0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55a7654a75e1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55a7654a75e0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a76549fd50 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55a76549fcc0 'SelectorInfo'
|-TypedefDecl 0x55a7654ad330 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55a7654ad2e0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55a7654ad2c0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55a7654ad1f8 'type'
|     `-LValueReferenceType 0x55a7654ad1c0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55a7654acf61 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55a7654acf60 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55a76515f000 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55a76515efa8 'T'
|           `-RecordType 0x55a76549fd50 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55a76549fcc0 'SelectorInfo'
|-TypedefDecl 0x55a7654ad398 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55a7654ac550 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55a7654a75e1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55a7654a75e0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a76549fd50 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55a76549fcc0 'SelectorInfo'
|-TypedefDecl 0x55a7654ad3f0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-TypedefDecl 0x55a7654ad458 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55a7654ac5e0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55a7654a75e0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55a76518c7e8 'T'
|     `-RecordType 0x55a76549fd50 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55a76549fcc0 'SelectorInfo'
|-TypedefDecl 0x55a7654ad4c0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55a7654ac6a0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55a7654a75e1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55a7654a75e0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55a76518c840 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55a76518c7e8 'T'
|       `-RecordType 0x55a76549fd50 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55a76549fcc0 'SelectorInfo'
|-EnumDecl 0x55a7654ad518 <line:134:5> col:5
| `-EnumConstantDecl 0x55a7654ad610 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55a7654ad5f0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55a76518dec8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55a76518dea0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55a76518de80 <col:40> 'int' 1
|-CXXConstructorDecl 0x55a7654ad740 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55a7654ad9c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654ad7f8 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654ad890 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55a7654adc88 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55a7654adb70 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55a7654adf48 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55a7654ade30 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55a7654ae290 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55a7654ae170 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55a7654ae5a0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55a7654ae480 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55a7654ae890 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654ae6d8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654ae750 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55a7654ae9e8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55a7654aeac8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654aeb20 <col:30> Inherited
|-CXXMethodDecl 0x55a7654aeb68 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55a7654aec18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654aec70 <col:30> Inherited
|-CXXMethodDecl 0x55a7654aed38 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55a7654aede8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654aee40 <col:30> Inherited
|-CXXMethodDecl 0x55a7654aee88 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55a7654aef38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654aef90 <col:30> Inherited
|-CXXMethodDecl 0x55a7654aefd8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55a7654af088 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654af0e0 <col:30> Inherited
|-CXXMethodDecl 0x55a7654af128 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55a7654af1d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55a7654af230 <col:30> Inherited
|-CXXMethodDecl 0x55a7654af258 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7654af308 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55a7654af3b8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55a7654af578 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654af468 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55a7654af4e0 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55a7654af6c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654af638 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654af878 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55a7654af780 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7654af930 <col:20>
| `-OptimizeNoneAttr 0x55a7654af988 <col:30>
|-CXXMethodDecl 0x55a7654afaa8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55a7654af9b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55a7654afb60 <col:20>
| `-OptimizeNoneAttr 0x55a7654afbb8 <col:30>
|-CXXMethodDecl 0x55a7654afc70 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654afbe0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654afdb8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7654afd28 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654afee8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55a7654b0018 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55a7654b00e8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55a7654b01b8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55a7654b02f8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55a7654b0268 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654b0440 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55a7654b03b0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55a7654b0588 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55a7654b04f8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7654b0640 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55a7654b0740 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55a7654b06b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55a7654b07f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55a7654b08b8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55a7654b09b8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55a7654b0b68 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7654b0a78 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55a7654b1328 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55a7654b0c20 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55a7654b1288 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55a7654b1188 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55a7654b1408 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55a7654b1558 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55a7654b14c8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55a7654b1610 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55a7654b1858 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55a7654b16d0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55a7654b1748 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55a7654b1a18 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55a7654b1928 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55a7654b1c68 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55a7654b1ae0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55a7654b1b58 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55a7654b1d28 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55a7654b1f88 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55a7654b1e90 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55a7654b2058 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55a7654b2058

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a76549eea0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a76549efb8 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55a76549f048 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55a76549f0d0 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55a76549f1c0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55a76549f1c0
|-CXXMethodDecl 0x55a76549f2c0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55a76549f560 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55a76549f378 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55a76549f3f0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55a76549f470 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55a76549f7d0 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55a76549f630 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55a76549f6a8 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55a76549f728 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55a76549f928 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55a76549f898 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55a76549f9f0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55a7654b3708 <col:34, line:50:5>
|   |-BinaryOperator 0x55a7654b30d8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55a7654b3098 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55a7654a0178
|   | | `-CXXThisExpr 0x55a7654b3088 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55a7654b30c8 <col:23> 'bool' true
|   `-CallExpr 0x55a7654b36e0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55a7654b36c8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55a7654b3648 <col:2> 'void (long)' lvalue Function 0x55a7654b3548 'ignore_result' 'void (long)' (FunctionTemplate 0x55a76514f8d8 'ignore_result')
|     `-CallExpr 0x55a7654b32f0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55a7654b32d8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a7654b3258 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55a7654673c8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55a7654b3328 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55a7654b3200 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55a7654b31e8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55a7654b3198 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55a7654a0118
|       |   |   `-CXXThisExpr 0x55a7654b3188 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55a7654b31c8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55a7654b3358 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55a7654b3340 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55a7654b3220 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55a7654b3370 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55a7654b3238 <col:41> 'int' 1
|-CXXMethodDecl 0x55a76549fb30 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55a76549faa0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55a76549fbf8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55a76549fc98 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55a76549fcc0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a76549fdd8 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55a76549fe78 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55a76549fed8 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55a76549ff40 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55a76549fff0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55a76549fe78 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55a7654b3768 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55a7654b3728 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55a76549fed8 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55a7654b37e8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55a7654b37a8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55a76549ff40 'pollfd' 'int'
|   | `-UnaryOperator 0x55a7654b3848 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55a7654b3828 <col:35> 'int' 1
|   `-CompoundStmt 0x55a7654b38c0 <line:64:2, line:65:2>
|-FieldDecl 0x55a7654a0118 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55a7654a0178 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55a7654a72e0 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55a7654b2140 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55a7654b2378 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55a7654b21a8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55a7654b2220 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55a7654b2298 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55a7654b2560 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55a7654b2448 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55a7654b24c8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55a7654b27a8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55a7654b2628 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55a7654b26a8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55a7654b29b8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55a7654b2868 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55a7654b28e0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55a7654b2b08 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55a7654b2a78 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55a7654b2bd0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55a7654b2c90 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55a7654b2d58 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55a7654b2d58
| `-ParmVarDecl 0x55a7654b2e68 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55a7654b2f08 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55a7654b2f08
  `-ParmVarDecl 0x55a7654b3018 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7654318b8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a7654319d8 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55a765431a68 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55a765431af0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55a765431be0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55a765431ce0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55a765431da0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55a765431e60 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55a765431f48 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55a765432068 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55a765432068
| `-ParmVarDecl 0x55a765432178 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55a7654b84d8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55a7654b84d8
  `-ParmVarDecl 0x55a7654b85e8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7654455e8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a765445708 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55a7654457a8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55a765445808 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55a7654b7ad8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55a7654b7ad8
| `-ParmVarDecl 0x55a7654b7be8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55a7654b7c88 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55a7654b7c88
| `-ParmVarDecl 0x55a7654b7d98 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55a7654b7e08 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55a7654b7e08
|-CXXMethodDecl 0x55a7654b8688 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55a7654b8688
| `-ParmVarDecl 0x55a7654b8798 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55a7654b8808 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55a7654b8808
| `-ParmVarDecl 0x55a7654b8918 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55a7654bf038 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55a7654bf110 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7654337b0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a7654338c8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55a765433958 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55a7654339e0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55a765433aa0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55a764e8d370 'int'
|-CXXMethodDecl 0x55a765433b68 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55a765433c08 <col:45> always_inline
|-CXXMethodDecl 0x55a765433d38 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55a765433c70 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55a765433de0 <col:49> always_inline
|-CXXConstructorDecl 0x55a765433ed8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55a765433ed8
| `-ParmVarDecl 0x55a765433fe8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55a765434088 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55a765434088
| `-ParmVarDecl 0x55a765434198 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55a7654b7ef0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55a7654b7ef0
|-CXXMethodDecl 0x55a7654b89b8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55a7654b89b8
| `-ParmVarDecl 0x55a7654b8ac8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55a7654b8b38 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55a7654b8b38
  `-ParmVarDecl 0x55a7654b8c48 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7654b3d30 prev 0x55a76549ee10 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55a7654b3e28 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55a7654b3eb8 <col:22, col:28> col:22 public
|-EnumDecl 0x55a7654b3ee0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55a7654b3ff8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55a7654b3fd8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55a7654b3fc0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55a7654b3fa0 <col:32> 'int' 1
| `-EnumConstantDecl 0x55a7654b40a0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55a7654b4080 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55a7654b4068 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55a7654b4048 <col:53> 'int' 1000
|-CXXMethodDecl 0x55a7654b4140 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55a7654b4200 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55a7654b42e8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55a7654b8d08 <col:34, col:52>
|   `-ReturnStmt 0x55a7654b8cf8 <col:36, col:43>
|     `-MemberExpr 0x55a7654b8cc8 <col:43> 'TimerSet' lvalue ->_timers 0x55a7654b5fd8
|       `-CXXThisExpr 0x55a7654b8cb8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55a7654b43d8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55a7654b8d70 <col:46, col:64>
|   `-ReturnStmt 0x55a7654b8d60 <col:48, col:55>
|     `-MemberExpr 0x55a7654b8d30 <col:55> 'const TimerSet' lvalue ->_timers 0x55a7654b5fd8
|       `-CXXThisExpr 0x55a7654b8d20 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55a7654b44c8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55a7654b8dd8 <col:36, col:55>
|   `-ReturnStmt 0x55a7654b8dc8 <col:38, col:45>
|     `-MemberExpr 0x55a7654b8d98 <col:45> 'SelectSet' lvalue ->_selects 0x55a7654b6038
|       `-CXXThisExpr 0x55a7654b8d88 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55a7654b45b8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55a7654b8e40 <col:48, col:67>
|   `-ReturnStmt 0x55a7654b8e30 <col:50, col:57>
|     `-MemberExpr 0x55a7654b8e00 <col:57> 'const SelectSet' lvalue ->_selects 0x55a7654b6038
|       `-CXXThisExpr 0x55a7654b8df0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55a7654b4678 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55a7654b4768 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55a7654b48d8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55a7654b4818 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55a7654b49a0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55a7654b4de8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55a7654b4a50 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55a7654b4cd0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55a7654b4eb8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55a7654b4f78 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55a7654b5038 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55a7654b5178 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55a7654b50e8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55a7654b5240 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55a7654b5300 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55a7654b53c0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55a7654b5480 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55a7654b55c0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55a7654b5530 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55a7654b5688 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55a7654b5770 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55a7654b5810 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55a7654b58d0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7654b5920 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7654b5970 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7654b59c0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7654b5a10 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7654b5a60 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7654b5ab0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7654b5b00 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7654b5b50 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55a7654b5ba0 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55a7654b5bf0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55a7654b5ce8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55a7654b5c58 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55a7654b5e38 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55a7654b5da8 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55a7654b5ee0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55a7654b5f18 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55a7654b5f78 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55a7654b5fd8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55a7654b6038 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55a7654b60b8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55a7654b6128 <col:40, col:50> aligned
|   `-ConstantExpr 0x55a7654b6108 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55a7654b6088 <col:48> 'int' 64
|-FieldDecl 0x55a7654b6198 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55a7654b61f8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55a7654b62f0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55a7654b6400 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55a7654b6460 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55a7654b64e0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55a7654b6550 <col:36, col:46> aligned
|   `-ConstantExpr 0x55a7654b6530 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55a7654b64b0 <col:44> 'int' 64
|-FieldDecl 0x55a7654b65c8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55a7654b6628 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55a7654b6678 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55a7654b66b8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55a7654b6720 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55a7654b6770 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55a7654b6918 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55a7654b67a8 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55a7654b6828 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55a7654b6a18 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55a7654b6a18
|-CXXMethodDecl 0x55a7654b6b20 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55a7654b6be8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55a7654b8f38 <col:34, line:217:5>
|   `-ReturnStmt 0x55a7654b8f28 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55a7654b8f10 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55a7654b8ee0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55a7654426c0
|         `-ImplicitCastExpr 0x55a7654b8ec8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55a7654b8e98 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55a765442658
|             `-MemberExpr 0x55a7654b8e68 <col:16> 'const TaskLink' lvalue ->_task_link 0x55a7654b5f18
|               `-CXXThisExpr 0x55a7654b8e58 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55a7654b6ca8 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55a7654b6d68 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55a7654b9660 <col:39, line:226:5>
|   |-DeclStmt 0x55a7654b9188 <line:223:9, col:68>
|   | `-VarDecl 0x55a7654b8f60 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55a7654b9140 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55a7654b9110 <col:24, col:38> '<bound member function type>' .compare_swap 0x55a7651b6140
|   |     | `-MemberExpr 0x55a7654b8fd8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55a7654b6198
|   |     |   `-CXXThisExpr 0x55a7654b8fc8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55a7654b90c8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55a7654b90b0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55a7654b9088 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55a7654b9068 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55a7654b9170 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55a7654b90f0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55a7654b91d0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55a7654b91a0 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55a7654b8f60 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55a7654b9640 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55a7654b9610 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55a7654b92e8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55a7654b92b8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55a7654b92a0 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55a7654b91f8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55a7654b8f60 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55a7654b9278 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55a7654b9260 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55a7654b9238 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55a7654b9218 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55a7654b9348 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55a7654b9328 <col:60> 'int' 0
|       `-CallExpr 0x55a7654b9570 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55a7654b9558 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55a7654b9538 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a764f2ad20 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55a7654b95b0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55a7654b9438 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55a7654b95c8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55a7654b9468 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55a7654b95e0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55a7654b94a8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55a7654b95f8 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55a7654b9520 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55a7654b9508 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55a7654b94c8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55a7654b6eb0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55a7654b6e20 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55a7654b6f78 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55a7654b7038 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55a7654b70f8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55a7654b71b8 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55a7654b7278 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55a7654b7370 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55a7654b73d0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55a7654b7460 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55a7654b7828 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55a7654b7828
| `-ParmVarDecl 0x55a7654b7938 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55a7654b7ff8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55a7654b7ff8
  `-ParmVarDecl 0x55a7654b8108 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a7654429d0 prev 0x55a7653f03e0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55a765442b08 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55a765442b98 <col:33, col:39> col:33 public
|-EnumDecl 0x55a765442bc0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55a765442d00 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55a765442ce0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55a765442cc0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55a765442c80 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55a765442ca0 <col:26> 'int' 16
| `-EnumConstantDecl 0x55a765442dd0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55a765442db0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55a765442d90 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55a765442d50 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55a765442d70 <col:47> 'int' 31
|-EnumDecl 0x55a765442e20 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55a765442f60 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55a765443080 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a765442f40 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55a765442f20 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55a765442ee0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55a765442f00 <col:29> 'int' 15
| `-EnumConstantDecl 0x55a765443030 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55a765443098 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a765443010 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55a765442ff0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55a765442fb0 <col:51> 'int' 1
|         `-IntegerLiteral 0x55a765442fd0 <col:54> 'int' 10
|-CXXConstructorDecl 0x55a765443268 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55a7654430c0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55a765443140 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55a7654433c0 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55a765443330 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55a7654434b8 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55a7654434b8
|-CXXMethodDecl 0x55a765443648 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55a765446748 <col:42, line:100:5>
|   `-ReturnStmt 0x55a765446738 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55a765446720 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55a7654466f0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55a765445470
|         `-CXXThisExpr 0x55a7654466e0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55a765443710 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55a7654467c8 <col:36, line:105:5>
|   `-ReturnStmt 0x55a7654467b8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55a7654467a0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55a765446770 <col:16> 'void *const' lvalue ->_thunk 0x55a7654454d8
|         `-CXXThisExpr 0x55a765446760 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55a7654437d0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55a765446848 <col:37, line:110:5>
|   `-ReturnStmt 0x55a765446838 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55a765446820 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55a7654467f0 <col:16> 'Element *const' lvalue ->_owner 0x55a765445598
|         `-CXXThisExpr 0x55a7654467e0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55a765443890 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55a765443958 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55a765443a18 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55a765443ad8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55a765446930 <col:35, line:137:5>
|   `-ReturnStmt 0x55a765446920 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55a7654468e8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55a7654468b8 <col:16, col:24> '<bound member function type>' ->router 0x55a765402bf0
|         `-ImplicitCastExpr 0x55a765446908 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55a7654468a0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55a765446870 <col:16> 'Element *const' lvalue ->_owner 0x55a765445598
|               `-CXXThisExpr 0x55a765446860 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55a765443b98 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55a765443d58 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55a765443c48 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55a765443cc0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55a765443f68 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55a765443e18 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55a765443e90 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55a765444038 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55a765446a40 <col:35, line:181:5>
|   `-ReturnStmt 0x55a765446a30 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55a765446a18 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55a765446a00 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55a7654469d0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55a7654450a8
|           `-MemberExpr 0x55a765446988 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55a7654451c8
|             `-MemberExpr 0x55a765446958 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55a7654453f8
|               `-CXXThisExpr 0x55a765446948 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55a7654440f8 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55a765446b58 <col:30, line:192:5>
|   `-BinaryOperator 0x55a765446b38 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55a765446ae0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55a7654450a8
|     | `-MemberExpr 0x55a765446a98 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55a7654451c8
|     |   `-MemberExpr 0x55a765446a68 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55a7654453f8
|     |     `-CXXThisExpr 0x55a765446a58 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55a765446b20 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55a765446b10 <col:32> 'bool' false
|-CXXMethodDecl 0x55a7654441b8 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55a765446ea8 <col:30, line:206:5>
|   |-BinaryOperator 0x55a765446c50 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55a765446bf8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55a7654450a8
|   | | `-MemberExpr 0x55a765446bb0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55a7654451c8
|   | |   `-MemberExpr 0x55a765446b80 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55a7654453f8
|   | |     `-CXXThisExpr 0x55a765446b70 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55a765446c38 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55a765446c28 <col:32> 'bool' true
|   |-CallExpr 0x55a765446cf0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55a765446cd8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a765446cb8 <col:9> 'void ()' lvalue Function 0x55a765431470 'click_fence' 'void ()'
|   `-IfStmt 0x55a765446e90 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55a765446dd0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55a765446da0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55a765446d50 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55a765445808
|     | |   `-MemberExpr 0x55a765446d20 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55a765445880
|     | |     `-CXXThisExpr 0x55a765446d10 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55a765446db8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55a765446d80 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55a765446e50 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55a765446e00 <col:13> '<bound member function type>' ->complete_schedule 0x55a765446280
|       | `-CXXThisExpr 0x55a765446df0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55a765446e78 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55a765446e30 <col:31> 'int' 0
|-CXXMethodDecl 0x55a765444278 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55a765446fd0 <col:35, line:240:5>
|   `-BinaryOperator 0x55a765446fb0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55a765446f58 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55a7654450a8
|     | `-MemberExpr 0x55a765446f10 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55a7654451c8
|     |   `-MemberExpr 0x55a765446ee0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55a7654453f8
|     |     `-CXXThisExpr 0x55a765446ed0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55a765446f98 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55a765446f88 <col:32> 'bool' true
|-CXXMethodDecl 0x55a765444338 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55a7654471e8 <col:37, line:253:5>
|   |-BinaryOperator 0x55a7654470c8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55a765447070 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55a7654450a8
|   | | `-MemberExpr 0x55a765447028 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55a7654451c8
|   | |   `-MemberExpr 0x55a765446ff8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55a7654453f8
|   | |     `-CXXThisExpr 0x55a765446fe8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55a7654470b0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55a7654470a0 <col:32> 'bool' false
|   `-BinaryOperator 0x55a7654471c8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55a765447170 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55a765445108
|     | `-MemberExpr 0x55a765447128 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55a7654451c8
|     |   `-MemberExpr 0x55a7654470f8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55a7654453f8
|     |     `-CXXThisExpr 0x55a7654470e8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55a7654471b0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55a7654471a0 <col:41> 'bool' true
|-CXXMethodDecl 0x55a7654443f8 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55a765447368 <col:37, line:264:5>
|   |-BinaryOperator 0x55a7654472e8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55a765447290 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55a765445108
|   | | `-MemberExpr 0x55a765447248 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55a7654451c8
|   | |   `-MemberExpr 0x55a765447218 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55a7654453f8
|   | |     `-CXXThisExpr 0x55a765447208 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55a7654472d0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55a7654472c0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55a765447348 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55a765447318 <col:9> '<bound member function type>' ->reschedule 0x55a7654441b8
|       `-CXXThisExpr 0x55a765447308 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55a765444540 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55a7654444b0 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55a765444610 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55a765444758 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55a7654446c8 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55a7654448a8 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55a765444818 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55a765444970 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55a765444a30 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55a765444ad0 <col:53> "" ""
|-CXXMethodDecl 0x55a765444b68 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55a765444c08 <col:47> "" ""
|-AccessSpecDecl 0x55a765444c78 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55a765444cb8 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55a765444d20 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55a765444d70 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a765444e88 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55a765444f18 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55a765445048 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55a7654450a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55a765445108 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55a7654be768 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55a7654be840 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55a7654be840
| | |-CXXConstructorDecl 0x55a7654beaf8 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55a7654beaf8
| | | `-ParmVarDecl 0x55a7654bec08 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55a7654beca8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55a7654beca8
| |   `-ParmVarDecl 0x55a7654bedb8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55a7654451c8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55a765445228 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55a7654451c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55a765445048 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55a765445280 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55a7654451c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55a7654450a8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55a7654452d8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55a7654451c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55a765445108 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55a765445330 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55a7654be670 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55a7654befd8 <col:11>
| |-CXXConstructorDecl 0x55a7654be948 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55a7654be948
| | `-ParmVarDecl 0x55a7654bea58 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55a7654bee58 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55a7654bee58
|   `-ParmVarDecl 0x55a7654bef68 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55a7654453f8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55a765445470 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55a7654454d8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55a765445538 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55a765445598 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55a7654455e8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a765445708 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55a7654457a8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55a765445808 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55a7654b7ad8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55a7654b7ad8
| | `-ParmVarDecl 0x55a7654b7be8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55a7654b7c88 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55a7654b7c88
| | `-ParmVarDecl 0x55a7654b7d98 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55a7654b7e08 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55a7654b7e08
| |-CXXMethodDecl 0x55a7654b8688 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55a7654b8688
| | `-ParmVarDecl 0x55a7654b8798 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55a7654b8808 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55a7654b8808
| | `-ParmVarDecl 0x55a7654b8918 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55a7654bf038 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55a7654bf110 <col:11>
|-FieldDecl 0x55a765445880 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55a7654459c8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55a765445908 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55a765445b78 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55a765445a88 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55a765445c40 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55a765445d00 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55a765445dc0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55a765447478 <col:41, line:355:5>
|   `-ReturnStmt 0x55a765447468 <line:354:9, col:38>
|     `-BinaryOperator 0x55a765447448 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55a765447418 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55a7654473c8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55a765445808
|       |   `-MemberExpr 0x55a765447398 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55a765445880
|       |     `-CXXThisExpr 0x55a765447388 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55a765447430 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55a7654473f8 <col:38> 'int' 0
|-CXXMethodDecl 0x55a765445e80 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55a765445fc0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55a765445f30 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55a765446138 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55a765446078 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55a765446280 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55a7654461f0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55a765446348 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55a765446510 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55a7654463f8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55a765446478 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55a765446610 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55a7654466a0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a765439728 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55a765439858 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55a76543a348 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.19 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a765435f18 prev 0x55a7653f0490 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a765436010 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55a7654360a0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55a765436100 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55a7654361a8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55a7654362c8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55a765436510 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55a7654363a8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55a765436768 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55a7654365d0 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55a765436650 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55a7654368f8 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55a765436830 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55a765436a78 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55a7654369b8 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55a765436c28 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55a765436b68 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55a765436d20 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55a76543a520 <col:21, line:58:5>
|   `-IfStmt 0x55a76543a508 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55a76543a470 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55a76543a440 <col:6> '<bound member function type>' ->scheduled 0x55a765437578
|     |   `-ImplicitCastExpr 0x55a76543a490 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55a76543a430 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55a76543a4e8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55a76543a4b8 <col:6> '<bound member function type>' ->unschedule 0x55a765438bd0
|         `-CXXThisExpr 0x55a76543a4a8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55a765436e20 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55a76543a6c0 <col:26, line:65:5>
|   |-BinaryOperator 0x55a76543a5e0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55a76543a578 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55a765439858
|   | | `-MemberExpr 0x55a76543a548 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55a765439918
|   | |   `-CXXThisExpr 0x55a76543a538 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55a76543a5c8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a76543a5a8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55a765439d78 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55a76543a6a0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55a76543a610 <col:2> 'void *' lvalue ->_thunk 0x55a765439998
|     | `-CXXThisExpr 0x55a76543a600 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55a76543a678 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55a76543a640 <col:20> 'int' 1
|-CXXMethodDecl 0x55a765436f60 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55a765436ed0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55a76543a820 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55a76543a710 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55a76543a6e0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55a765436ed0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55a76543a800 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55a76543a7d0 <col:2> '<bound member function type>' ->assign 0x55a765436e20
|       `-CXXThisExpr 0x55a76543a7c0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55a765437130 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55a765437018 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55a765437098 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55a76543a9a0 <col:58, line:79:5>
|   |-BinaryOperator 0x55a76543a8e8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55a76543a880 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55a765439858
|   | | `-MemberExpr 0x55a76543a850 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55a765439918
|   | |   `-CXXThisExpr 0x55a76543a840 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55a76543a8d0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a76543a8b0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55a765437018 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55a76543a980 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55a76543a918 <col:2> 'void *' lvalue ->_thunk 0x55a765439998
|     | `-CXXThisExpr 0x55a76543a908 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55a76543a968 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55a76543a948 <col:11> 'void *' lvalue ParmVar 0x55a765437098 'user_data' 'void *'
|-CXXMethodDecl 0x55a765437280 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55a7654371f0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55a76543ab38 <col:35, line:87:5>
|   |-BinaryOperator 0x55a76543aa68 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55a76543aa00 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55a765439858
|   | | `-MemberExpr 0x55a76543a9d0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55a765439918
|   | |   `-CXXThisExpr 0x55a76543a9c0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55a76543aa50 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a76543aa30 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55a765439f50 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55a76543ab18 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55a76543aa98 <col:2> 'void *' lvalue ->_thunk 0x55a765439998
|     | `-CXXThisExpr 0x55a76543aa88 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55a76543ab00 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55a76543aae8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55a76543aac8 <col:11> 'Element *' lvalue ParmVar 0x55a7654371f0 'element' 'Element *'
|-CXXMethodDecl 0x55a7654373c8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55a765437338 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55a76543acd0 <col:29, line:94:5>
|   |-BinaryOperator 0x55a76543ac00 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55a76543ab98 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55a765439858
|   | | `-MemberExpr 0x55a76543ab68 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55a765439918
|   | |   `-CXXThisExpr 0x55a76543ab58 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55a76543abe8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55a76543abc8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55a76543a128 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55a76543acb0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55a76543ac30 <col:2> 'void *' lvalue ->_thunk 0x55a765439998
|     | `-CXXThisExpr 0x55a76543ac20 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55a76543ac98 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55a76543ac80 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55a76543ac60 <col:11> 'Task *' lvalue ParmVar 0x55a765437338 'task' 'Task *'
|-CXXMethodDecl 0x55a7654374b8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55a76543adb0 <col:37, line:100:5>
|   `-ReturnStmt 0x55a76543ada0 <line:99:2, col:19>
|     `-BinaryOperator 0x55a76543ad80 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55a76543ad50 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55a76543ad00 <col:9> 'Element *const' lvalue ->_owner 0x55a7654399f8
|       |   `-CXXThisExpr 0x55a76543acf0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55a76543ad68 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55a76543ad30 <col:19> 'int' 0
|-CXXMethodDecl 0x55a765437578 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55a76543ae70 <col:35, line:105:5>
|   `-ReturnStmt 0x55a76543ae60 <line:104:2, col:23>
|     `-BinaryOperator 0x55a76543ae40 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55a76543ae28 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55a76543add8 <col:9> 'const int' lvalue ->_schedpos1 0x55a765439678
|       |   `-CXXThisExpr 0x55a76543adc8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55a76543ae08 <col:23> 'int' 0
|-CXXMethodDecl 0x55a765437638 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55a76543aed8 <col:51, line:118:5>
|   `-ReturnStmt 0x55a76543aec8 <line:117:2, col:9>
|     `-MemberExpr 0x55a76543ae98 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55a7654396d8
|       `-CXXThisExpr 0x55a76543ae88 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55a7654376f8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55a76543b430 <col:37, line:136:5>
|   `-IfStmt 0x55a76543b408 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55a76543af98 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55a76543af80 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55a76543af60 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55a76543af30 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55a765382568
|     |       `-MemberExpr 0x55a76543af00 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55a7654396d8
|     |         `-CXXThisExpr 0x55a76543aef0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55a76543b378 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55a76543b360 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55a76543b330 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55a76543b318 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55a76543b2e0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55a76543b2c8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55a76543b2a8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55a7653b0d40 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55a76543b248 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55a76543b230 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55a76543b158 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55a76543b140 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55a76543b120 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55a7653b0a00 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55a76543b0c0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55a76543afc0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55a7654396d8
|     |         |     |   `-CXXThisExpr 0x55a76543afb0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55a76543b108 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55a76543b0f0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55a76543b0a0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55a76543b088 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55a76543b028 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55a7653a4060 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55a76543b290 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55a76543b278 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55a76543b210 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55a76543b1f8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55a76543b1c8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55a7651ff5b0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55a76543b3f8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55a76543b3c8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55a76543b398 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55a7654396d8
|           `-CXXThisExpr 0x55a76543b388 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55a7654377b8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55a76543b518 <col:35, line:141:5>
|   `-ReturnStmt 0x55a76543b508 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55a76543b4d0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55a76543b4a0 <col:9, col:17> '<bound member function type>' ->router 0x55a765402bf0
|         `-ImplicitCastExpr 0x55a76543b4f0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55a76543b488 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55a76543b458 <col:9> 'Element *const' lvalue ->_owner 0x55a7654399f8
|               `-CXXThisExpr 0x55a76543b448 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55a765437878 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55a76543b598 <col:37, line:146:5>
|   `-ReturnStmt 0x55a76543b588 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55a76543b570 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55a76543b540 <col:9> 'Element *const' lvalue ->_owner 0x55a7654399f8
|         `-CXXThisExpr 0x55a76543b530 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55a765437938 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55a76543b618 <col:41, line:151:5>
|   `-ReturnStmt 0x55a76543b608 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55a76543b5f0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55a76543b5c0 <col:9> 'RouterThread *const' lvalue ->_thread 0x55a765439a58
|         `-CXXThisExpr 0x55a76543b5b0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55a765437a00 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55a765437bf8 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55a765437ab0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55a765437b28 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a76543a338 <col:50> 'bool' false
|-CXXMethodDecl 0x55a765437d78 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55a765437cb8 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55a765437ec0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55a765437e30 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55a765438008 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55a765437f78 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55a765438150 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55a7654380c0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55a765438298 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55a765438208 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55a765438360 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55a76543b780 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55a76543b768 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55a76543b710 <col:2, col:47> 'void'
|       |-MemberExpr 0x55a76543b640 <col:2> '<bound member function type>' ->schedule_at_steady 0x55a765437ec0
|       | `-CXXThisExpr 0x55a76543b630 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55a76543b750 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55a76543b738 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55a76543b6f0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55a76543b6d8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55a76543b6a8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55a7651ff5b0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55a7654384a0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55a765438410 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55a7654385e8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a765438558 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a76543b908 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55a76543b8f0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55a76543b898 <col:2, col:40> 'void'
|       |-MemberExpr 0x55a76543b7a8 <col:2> '<bound member function type>' ->schedule_after 0x55a7654384a0
|       | `-CXXThisExpr 0x55a76543b798 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55a76543b8d8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55a76543b8c0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55a76543b858 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55a76543b828 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55a76543b7e8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765438558 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55a76543b840 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55a76543b808 <col:38> 'int' 0
|-CXXMethodDecl 0x55a765438730 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a7654386a0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a76543bb78 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55a76543bb60 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55a76543bb08 <col:2, col:49> 'void'
|       |-MemberExpr 0x55a76543b930 <col:2> '<bound member function type>' ->schedule_after 0x55a7654384a0
|       | `-CXXThisExpr 0x55a76543b920 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55a76543bb48 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55a76543bb30 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55a76543bab0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55a76543ba98 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55a76543ba08 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55a765384358 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55a76543baf0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55a76543bad8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55a76543b9e8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a7654386a0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a765438878 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55a7654387e8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55a76543bd58 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55a76543bd40 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55a76543bce8 <col:2, col:38> 'void'
|       |-MemberExpr 0x55a76543bba0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55a765437ec0
|       | `-CXXThisExpr 0x55a76543bb90 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55a76543bd28 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55a76543bd10 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55a76543bcb0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55a76543bc98 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55a76543bc78 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55a7653b0a00 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55a76543bc48 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55a76543bc30 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55a76543bbe0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55a7654396d8
|             |     `-CXXThisExpr 0x55a76543bbd0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55a76543bc10 <col:33> 'const Timestamp' lvalue ParmVar 0x55a7654387e8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55a7654389c0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a765438930 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a76543c030 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55a76543c018 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55a76543bfc0 <col:2, col:79> 'void'
|       |-MemberExpr 0x55a76543bd80 <col:2> '<bound member function type>' ->schedule_at_steady 0x55a765437ec0
|       | `-CXXThisExpr 0x55a76543bd70 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55a76543c000 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55a76543bfe8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55a76543bf80 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55a76543beb8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55a76543bea0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55a76543be30 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55a76543be00 <col:31, col:41> '<bound member function type>' .sec 0x55a7652010a8
|             | |     `-ImplicitCastExpr 0x55a76543be50 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55a76543bdd0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55a7654396d8
|             | |         `-CXXThisExpr 0x55a76543bdc0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55a76543be88 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55a76543be68 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765438930 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55a76543bf48 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55a76543bf18 <col:60, col:70> '<bound member function type>' .subsec 0x55a7652017a0
|                 `-ImplicitCastExpr 0x55a76543bf68 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55a76543bee8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55a7654396d8
|                     `-CXXThisExpr 0x55a76543bed8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55a765438b08 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a765438a78 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55a76543c368 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55a76543c350 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55a76543c2f8 <col:2, col:65> 'void'
|       |-MemberExpr 0x55a76543c058 <col:2> '<bound member function type>' ->schedule_at_steady 0x55a765437ec0
|       | `-CXXThisExpr 0x55a76543c048 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55a76543c338 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55a76543c320 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55a76543c2c0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55a76543c2a8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55a76543c288 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55a7653b0a00 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55a76543c228 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55a76543c210 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55a76543c098 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55a7654396d8
|             |     `-CXXThisExpr 0x55a76543c088 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55a76543c270 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55a76543c258 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55a76543c1b8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55a76543c1a0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55a76543c170 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55a765384358 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55a76543c1f8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55a76543c1e0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55a76543c150 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55a765438a78 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a765438bd0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55a765438c90 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55a76543c830 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55a76543c3c0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55a76543c390 <col:2> '<bound member function type>' ->unschedule 0x55a765438bd0
|   |   `-CXXThisExpr 0x55a76543c380 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55a76543c818 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55a76543c7e0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55a76543c7c8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a76543c478 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55a765098428 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55a76543c3f0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55a7654396d8
|       | `-CXXThisExpr 0x55a76543c3e0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55a76543c460 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55a76543c430 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55a765438d50 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55a76543cb88 <col:42, line:310:5>
|   |-IfStmt 0x55a76543c9d0 <line:306:2, line:307:23>
|   | |-CallExpr 0x55a76543c900 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55a76543c8e8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55a76543c888 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55a7653a24d0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55a76543c9c0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55a76543c9a8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55a76543c978 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55a76543c960 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55a76543c930 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55a76543cb78 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55a76543cb60 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55a76543cb30 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55a76543cb18 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55a76543cad8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55a76543cac0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55a76543ca90 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55a765384670 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55a76543cb00 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55a76543ca70 <col:30> 'int' 500
|-CXXMethodDecl 0x55a765438e90 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a765438e00 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a765438f38 <col:69> "" ""
|-CXXMethodDecl 0x55a765439048 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a765438fb8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a7654390f0 <col:70> "" ""
|-CXXMethodDecl 0x55a765439200 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a765439170 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a7654392a8 <col:71> "" ""
|-CXXMethodDecl 0x55a7654393b8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55a765439328 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a765439460 <col:72> "" ""
|-EnumDecl 0x55a7654394d0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55a7654395d0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55a765439620 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a7654395b0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55a765439590 <col:25> 'int' 1
|-AccessSpecDecl 0x55a765439638 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55a765439678 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55a7654396d8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55a765439728 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55a765439858 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55a76543a348 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55a765439918 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55a765439998 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55a7654399f8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55a765439a58 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55a765439ba8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55a765439ab8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55a765439d78 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55a765439c60 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55a765439ce0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55a765439f50 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55a765439e38 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55a765439eb8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55a76543a128 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55a76543a010 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55a76543a090 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55a76543a2f8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55a76544af70 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55a76555b8b8 <line:167:18>
|-CXXRecordDecl 0x55a76555b978 prev 0x55a76544af70 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55a76555ba88 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
