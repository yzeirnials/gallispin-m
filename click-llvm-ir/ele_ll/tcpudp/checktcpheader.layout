
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa3566aa8 prev 0x55eaa355e248 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55eaa3566ba0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55eaa3566c30 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55eaa3566ca8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55eaa3566d68 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55eaa3566e30 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55eaa3566fa8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55eaa3566ee0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55eaa3567050 <col:24>
| `-OptimizeNoneAttr 0x55eaa35670a8 <col:34>
|-CXXMethodDecl 0x55eaa35670f0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55eaa35673a8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55eaa35671a0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55eaa3567218 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55eaa3567298 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55eaa3567460 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55eaa3567498 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55eaa3567500 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55eaa3567588 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55eaa35678a8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55eaa3567640 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55eaa35676b8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55eaa3567730 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55eaa35677b0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55eaa35679c0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55eaa356f338 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55eaa356f338
| `-ParmVarDecl 0x55eaa356f448 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55eaa356f4e8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55eaa356f4e8
| `-ParmVarDecl 0x55eaa356f5f8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55eaa3668a20 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa3559ac0 prev 0x55eaa3559840 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55eaa3559bb8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55eaa3559c48 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55eaa3559ca8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55eaa3559d98 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55eaa3559e98 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55eaa355a068 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55eaa3559f18 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55eaa3559f90 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55eaa355a1f8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55eaa355a130 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55eaa355a2a0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55eaa355a3d8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55eaa355a310 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55eaa355a578 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55eaa355a4b8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55eaa355a718 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55eaa355a658 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55eaa355a7c0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55eaa355a8c0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55eaa355a9a0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa355a8a0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55eaa355a880 <col:26> 'int' 1
| `-EnumConstantDecl 0x55eaa355a950 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55eaa355a9b8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55eaa355a930 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55eaa355a910 <col:44> 'int' 2
|-CXXMethodDecl 0x55eaa355ab00 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55eaa355a9e8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55eaa355aa68 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55eaa355ac58 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55eaa355abc8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55eaa355ae98 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55eaa355ad18 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55eaa355ad90 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55eaa355af48 <col:20>
| `-OptimizeNoneAttr 0x55eaa355afa0 <col:30>
|-CXXMethodDecl 0x55eaa355b0a8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55eaa355afe0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55eaa355b150 <col:20>
| `-OptimizeNoneAttr 0x55eaa355b1a8 <col:30>
|-CXXMethodDecl 0x55eaa355b1f8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55eaa355b2c0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55eaa355b3d8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55eaa355b460 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55eaa355b4e8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55eaa355b570 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55eaa355b5f8 <line:59:5, col:35> col:23 used PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55eaa355b688 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55eaa355b748 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55eaa355b7d0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55eaa355b858 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55eaa355b8e0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55eaa355b968 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55eaa355b9f0 <line:67:5, col:39> col:23 used PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55eaa355ba80 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55eaa355bb40 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55eaa355bbd0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55eaa355bd20 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55eaa355bc88 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55eaa355beb0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55eaa355bde0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55eaa355c160 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55eaa355bf68 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55eaa355bfe8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55eaa355c068 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55eaa355c218 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55eaa355c320 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55eaa355c5b0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa355c300 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55eaa355c2e0 <col:33> 'int' 0
| |-EnumConstantDecl 0x55eaa355c3b0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55eaa355c5c8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa355c390 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55eaa355c370 <col:32> 'int' 20
| |-EnumConstantDecl 0x55eaa355c440 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55eaa355c5e0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa355c420 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55eaa355c400 <col:38> 'int' 90
| |-EnumConstantDecl 0x55eaa355c4d0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55eaa355c5f8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa355c4b0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55eaa355c490 <col:35> 'int' 100
| `-EnumConstantDecl 0x55eaa355c560 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55eaa355c610 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55eaa355c540 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55eaa355c520 <col:32> 'int' 2000
|-CXXMethodDecl 0x55eaa355c650 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55eaa355ca90 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55eaa355c900 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55eaa355c978 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55eaa355cb60 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55eaa355cce0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55eaa355cc10 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55eaa355cee8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55eaa355cd98 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55eaa355ce10 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55eaa355cfe8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55eaa355d088 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55eaa355d150 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55eaa355d1e0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55eaa355d410 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa355d1c0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55eaa355d1a0 <col:36> 'int' EnumConstant 0x55eaa355d150 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55eaa355d230 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55eaa355d280 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55eaa355d2d0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55eaa355d320 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55eaa355d370 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55eaa355d3c0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55eaa355d4f8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55eaa355d438 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55eaa355d5c0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55eaa355d680 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55eaa355d740 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55eaa355d800 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55eaa355d918 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55eaa355d9e0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55eaa355db60 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55eaa355da90 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55eaa355dc88 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55eaa355de88 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55eaa355dd38 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55eaa355ddb8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55eaa356b7d8 <col:54, line:127:5>
|   |-ParenExpr 0x55eaa356b688 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55eaa356b658 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55eaa356b348 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55eaa356b320 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55eaa356b308 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55eaa356b2f0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55eaa356b2c0 <col:31> 'Router *' lvalue ->_router 0x55eaa35691a0
|   |   |         `-CXXThisExpr 0x55eaa356b2b0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55eaa356b3a8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55eaa356b388 <col:48> 'int' 0
|   |   `-CallExpr 0x55eaa356b5b8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55eaa356b5a0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55eaa356b580 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55eaa356b5f8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa356b418 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55eaa356b610 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa356b438 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55eaa356b628 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55eaa356b470 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55eaa356b640 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55eaa356b568 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55eaa356b550 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55eaa356b508 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55eaa356b720 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55eaa356b6b8 <col:9> 'Router *' lvalue ->_router 0x55eaa35691a0
|   | | `-CXXThisExpr 0x55eaa356b6a8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55eaa356b708 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eaa356b6e8 <col:19> 'Router *' lvalue ParmVar 0x55eaa355dd38 'r' 'Router *'
|   `-BinaryOperator 0x55eaa356b7b8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55eaa356b750 <col:9> 'int' lvalue ->_eindex 0x55eaa3569208
|     | `-CXXThisExpr 0x55eaa356b740 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55eaa356b7a0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55eaa356b780 <col:19> 'int' lvalue ParmVar 0x55eaa355ddb8 'eindex' 'int'
|-CXXMethodDecl 0x55eaa355e010 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55eaa355df48 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55eaa355e0e0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55eaa355e1a8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55eaa355e248 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55eaa355e498 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55eaa355e310 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55eaa355e390 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55eaa355e548 <col:20>
| `-OptimizeNoneAttr 0x55eaa355e5a0 <col:30>
|-CXXMethodDecl 0x55eaa355e6a8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55eaa355e5e0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55eaa355e750 <col:20>
| `-OptimizeNoneAttr 0x55eaa355e7a8 <col:30>
|-CXXMethodDecl 0x55eaa355e878 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55eaa355e7e8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55eaa355e920 <col:20>
| `-OptimizeNoneAttr 0x55eaa355e978 <col:30>
|-CXXMethodDecl 0x55eaa355eb08 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55eaa355e9b0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55eaa355ea30 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55eaa355ec98 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55eaa355ebd0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55eaa355ede8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55eaa355ed58 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55eaa355ef38 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55eaa355eea8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55eaa355f088 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55eaa355eff8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55eaa355f348 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55eaa355f140 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55eaa355f1c0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55eaa355f268 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55eaa355f420 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55eaa355f4e0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55eaa355f7b0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55eaa355f660 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55eaa355f6d8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55eaa355f8d8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55eaa355fab0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55eaa355f990 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55eaa355fa10 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55eaa355fc98 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55eaa355fb78 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55eaa355fbf8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55eaa3560008 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55eaa355fd58 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55eaa355fdd0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55eaa355fe50 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55eaa356adc0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55eaa356ada0 <col:106> 'int' 0
| `-ParmVarDecl 0x55eaa355fec8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55eaa356adf8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55eaa356add8 <col:126> 'int' 0
|-CXXMethodDecl 0x55eaa35603a8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55eaa35600d8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55eaa3560170 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55eaa35601f0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55eaa3560268 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55eaa356ae30 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55eaa356ae10 <col:114> 'int' 0
|-CXXMethodDecl 0x55eaa3560738 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55eaa3560480 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55eaa35604f8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55eaa3560578 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55eaa356ae48 <col:96> 'int' 0
| `-ParmVarDecl 0x55eaa35605f0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55eaa356ae88 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55eaa356ae68 <col:116> 'int' 0
|-CXXMethodDecl 0x55eaa3560ab8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55eaa3560808 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55eaa3560880 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55eaa3560900 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55eaa356aec0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55eaa356aea0 <col:109> 'int' 0
| `-ParmVarDecl 0x55eaa3560978 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55eaa356aef8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55eaa356aed8 <col:129> 'int' 0
|-CXXMethodDecl 0x55eaa3560e38 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55eaa3560b88 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55eaa3560c00 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55eaa3560c80 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55eaa3560cf8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55eaa356af30 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55eaa356af10 <col:117> 'int' 0
|-CXXMethodDecl 0x55eaa35611c8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55eaa3560f10 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa3560f88 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55eaa3561008 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55eaa356af48 <col:99> 'int' 0
| `-ParmVarDecl 0x55eaa3561080 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55eaa356af88 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55eaa356af68 <col:119> 'int' 0
|-CXXMethodDecl 0x55eaa35615e8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55eaa3561298 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55eaa3561318 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55eaa3561390 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55eaa3561410 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55eaa356afc0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55eaa356afa0 <col:108> 'int' 0
| `-ParmVarDecl 0x55eaa3561490 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55eaa356aff8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55eaa356afd8 <col:141> 'int' 0
|-CXXMethodDecl 0x55eaa3561a08 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55eaa35616c0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55eaa3561740 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55eaa35617b8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55eaa3561838 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55eaa35618b8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55eaa356b010 <col:121> 'int' 0
|-CXXMethodDecl 0x55eaa3561e38 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55eaa3561ae8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55eaa3561b68 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55eaa3561be0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55eaa3561c60 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55eaa356b030 <col:98> 'int' 0
| `-ParmVarDecl 0x55eaa3561ce0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55eaa356b050 <col:123> 'int' 0
|-CXXMethodDecl 0x55eaa3562100 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55eaa3561f10 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55eaa3561f90 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55eaa3562010 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55eaa356b070 <col:80> 'int' 0
|-EnumDecl 0x55eaa35621b8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55eaa35622c0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55eaa3562550 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa35622a0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55eaa3562280 <col:42> 'int' 1
| |-EnumConstantDecl 0x55eaa3562350 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55eaa3562568 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa3562330 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55eaa3562310 <col:40> 'int' 2
| |-EnumConstantDecl 0x55eaa35623e0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55eaa3562580 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa35623c0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55eaa35623a0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55eaa3562470 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55eaa3562598 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa3562450 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55eaa3562430 <col:36> 'int' 7
| `-EnumConstantDecl 0x55eaa3562500 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55eaa35625b0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55eaa35624e0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55eaa35624c0 <col:34> 'int' 6
|-CXXMethodDecl 0x55eaa3562868 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55eaa35625d8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55eaa3562678 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55eaa35626f8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55eaa3562770 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55eaa356b128 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55eaa356b110 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55eaa356b0f8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55eaa356b0d8 <col:98, col:105> 'String' (CXXTemporary 0x55eaa356b0d8)
|           `-CXXTemporaryObjectExpr 0x55eaa356b0a0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55eaa3562b08 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55eaa3562938 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55eaa35629b0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55eaa3562a28 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55eaa356b1d8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55eaa356b1c0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55eaa356b1a8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55eaa356b188 <col:94, col:101> 'String' (CXXTemporary 0x55eaa356b188)
| |         `-CXXTemporaryObjectExpr 0x55eaa356b150 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55eaa356b9c0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55eaa356b938 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55eaa356b908 <col:9> '<bound member function type>' ->add_task_handlers 0x55eaa3562868
|     | `-CXXThisExpr 0x55eaa356b8f8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55eaa356b978 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55eaa356b878 <col:27> 'Task *' lvalue ParmVar 0x55eaa3562938 'task' 'Task *'
|     |-ImplicitCastExpr 0x55eaa356b990 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55eaa356b898 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55eaa35629b0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55eaa356b9a8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55eaa356b8b8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55eaa3562500 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55eaa356b8d8 <col:62> 'const String' lvalue ParmVar 0x55eaa3562a28 'prefix' 'const String &'
|-CXXMethodDecl 0x55eaa3562d18 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55eaa3562bd0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55eaa3562c48 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55eaa356b288 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55eaa356b270 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55eaa356b258 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55eaa356b238 <col:70, col:77> 'String' (CXXTemporary 0x55eaa356b238)
| |         `-CXXTemporaryObjectExpr 0x55eaa356b200 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55eaa356bb98 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55eaa356bb10 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55eaa356bae0 <col:9> '<bound member function type>' ->add_task_handlers 0x55eaa3562868
|     | `-CXXThisExpr 0x55eaa356bad0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55eaa356bb50 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55eaa356ba50 <col:27> 'Task *' lvalue ParmVar 0x55eaa3562bd0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55eaa356bb68 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55eaa356ba70 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55eaa356bb80 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55eaa356ba90 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55eaa3562500 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55eaa356bab0 <col:57> 'const String' lvalue ParmVar 0x55eaa3562c48 'prefix' 'const String &'
|-CXXMethodDecl 0x55eaa3562ff8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55eaa3562de0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa3562e60 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55eaa3562ed8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55eaa35632a8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55eaa35630c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa3563148 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55eaa35631c8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55eaa3563598 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55eaa3563378 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa35633f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55eaa3563470 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55eaa3563848 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55eaa3563668 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa35636e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55eaa3563768 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55eaa3563af8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55eaa3563918 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa3563998 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55eaa3563a18 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55eaa3563da8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55eaa3563bc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa3563c48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55eaa3563cc0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55eaa3564058 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55eaa3563e78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa3563ef8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55eaa3563f78 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55eaa3564368 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55eaa3564180 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa3564200 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55eaa3564280 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55eaa3564648 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55eaa3564438 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa35644b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55eaa3564560 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55eaa3564928 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55eaa3564718 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa3564798 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55eaa3564840 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55eaa3564b90 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55eaa35649f8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55eaa3564a78 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55eaa3564af0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55eaa3564e38 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55eaa3564c60 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55eaa3564ce0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55eaa3564d58 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55eaa35650e8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55eaa3564f08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa3564f88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55eaa3565008 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55eaa3565398 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55eaa35651b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa3565238 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55eaa35652b0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55eaa3565648 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55eaa3565468 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa35654e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55eaa3565560 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55eaa3565918 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55eaa3565718 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa3565798 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55eaa3565838 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55eaa3565c48 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55eaa35659e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55eaa3565a68 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55eaa3565ae0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55eaa3565b58 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55eaa356b2a0 <col:93> 'bool' false
|-CXXMethodDecl 0x55eaa3565e30 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55eaa3565d18 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55eaa3565d98 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55eaa3566008 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55eaa3565ef0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55eaa3565f70 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55eaa35662e8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55eaa35660c8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55eaa3566140 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55eaa35661c0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55eaa3566238 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55eaa35665d8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55eaa35663b8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55eaa3566430 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55eaa35664b0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55eaa3566528 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55eaa3566810 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55eaa35666b0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55eaa3566730 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55eaa35669f8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55eaa35668d8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55eaa3566958 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55eaa3566aa8 prev 0x55eaa355e248 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55eaa3566ba0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55eaa3566c30 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55eaa3566ca8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55eaa3566d68 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55eaa3566e30 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55eaa3566fa8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55eaa3566ee0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55eaa3567050 <col:24>
| | `-OptimizeNoneAttr 0x55eaa35670a8 <col:34>
| |-CXXMethodDecl 0x55eaa35670f0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55eaa35673a8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55eaa35671a0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55eaa3567218 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55eaa3567298 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55eaa3567460 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55eaa3567498 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55eaa3567500 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55eaa3567588 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55eaa35678a8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55eaa3567640 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55eaa35676b8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55eaa3567730 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55eaa35677b0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55eaa35679c0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55eaa356f338 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55eaa356f338
| | `-ParmVarDecl 0x55eaa356f448 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55eaa356f4e8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55eaa356f4e8
| | `-ParmVarDecl 0x55eaa356f5f8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55eaa3668a20 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55eaa3567a38 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55eaa3567ad8 <col:38> "" ""
|-CXXMethodDecl 0x55eaa3567b68 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55eaa3567c08 <col:44> "" ""
|-AccessSpecDecl 0x55eaa3567c78 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55eaa3567ca0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55eaa3567da0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55eaa3567df0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55eaa3567d80 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55eaa3567d60 <col:27> 'int' 4
|-FieldDecl 0x55eaa3567ea8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55eaa3568058 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55eaa3568110 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55eaa35691a0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55eaa3569208 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55eaa3569358 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55eaa3569298 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55eaa3569508 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55eaa3569418 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55eaa35696e8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55eaa35695c8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55eaa3569648 <col:25> col:28 'int'
|-CXXMethodDecl 0x55eaa3569990 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55eaa35697b0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55eaa3569830 <col:28> col:31 'int'
| `-ParmVarDecl 0x55eaa35698a8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55eaa3569a48 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55eaa3569b10 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55eaa3569b60 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55eaa3569bb0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55eaa3569d90 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55eaa3569c40 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55eaa3569cb8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55eaa356a038 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55eaa3569e58 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55eaa3569ed8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55eaa3569f50 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55eaa356a258 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55eaa356a108 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55eaa356a188 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55eaa356a590 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55eaa356a318 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55eaa356a398 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55eaa356a410 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55eaa356a490 <col:57> col:60 'int'
|-CXXMethodDecl 0x55eaa356a778 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55eaa356a660 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55eaa356a6e0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55eaa356a8c8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55eaa356a838 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55eaa356ac48 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55eaa356a988 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55eaa356aa08 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55eaa356aa80 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55eaa356ab00 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55eaa356ad60 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class CheckTCPHeader
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
   108:0-0 |   _Bool _verbose
       112 |   class atomic_uint32_t _drops
       112 |     uint32_t _val
       120 |   class atomic_uint32_t * _reason_drops
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa3318570 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55eaa3318688 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55eaa3318718 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55eaa33187e8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55eaa33188d0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55eaa3318ae8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55eaa3318990 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa3318c98 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55eaa3318ba0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55eaa3318de0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55eaa3318d50 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55eaa3318f28 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55eaa3318e98 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa3319070 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55eaa3318fe0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa3319138 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55eaa3319280 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55eaa33191f0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55eaa3319348 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55eaa3319490 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55eaa3319400 <col:28> col:31 'int'
|-CXXMethodDecl 0x55eaa3319608 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55eaa3319548 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa3319750 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55eaa33196c0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa3319818 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55eaa33199d8 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55eaa33198c8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55eaa3319940 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa3319c28 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55eaa3319a98 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55eaa3319b10 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55eaa3319cd8 <col:86> "" ""
|-CXXMethodDecl 0x55eaa3319f48 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55eaa3319db8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55eaa3319e30 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa331a0f8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55eaa331a008 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55eaa331a2a8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55eaa331a1b0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55eaa331a578 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55eaa331a360 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55eaa331a3d8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55eaa331a450 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa331a858 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55eaa331a640 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55eaa331a6b8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55eaa331a730 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55eaa331a910 <col:115> "" ""
|-AccessSpecDecl 0x55eaa331a980 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55eaa331a9b8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa331bed0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55eaa331bed0
| `-ParmVarDecl 0x55eaa331bfd8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55eaa331c078 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55eaa331c078
| `-ParmVarDecl 0x55eaa331c188 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55eaa33517b8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55eaa35435b0 <col:7>
|-CXXConstructorDecl 0x55eaa3351890 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55eaa3351890
| `-ParmVarDecl 0x55eaa33519a8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55eaa3351a18 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55eaa3351a18
| `-ParmVarDecl 0x55eaa3351b28 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55eaa3545fb0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa35724a8 <../elements/tcpudp/checktcpheader.hh:54:1, line:88:1> line:54:7 class CheckTCPHeader definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55eaa3572608 <col:1, col:7> col:7 implicit referenced class CheckTCPHeader
|-AccessSpecDecl 0x55eaa3572698 <col:41, col:47> col:41 public
|-CXXConstructorDecl 0x55eaa3572720 <line:56:3, col:18> col:3 CheckTCPHeader 'void ()'
|-CXXDestructorDecl 0x55eaa3572810 <line:57:3, col:19> col:3 ~CheckTCPHeader 'void ()' noexcept-unevaluated 0x55eaa3572810
| `-Overrides: [ 0x55eaa3559d98 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55eaa3572940 <line:59:3, col:61> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x55eaa355b1f8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55eaa3573c78 <col:34, col:61>
|   `-ReturnStmt 0x55eaa3573c68 <col:36, col:43>
|     `-ImplicitCastExpr 0x55eaa3573c50 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55eaa3573c28 <col:43> 'const char [15]' lvalue "CheckTCPHeader"
|-CXXMethodDecl 0x55eaa3572a08 <line:60:3, col:56> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x55eaa355b2c0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55eaa3573cd8 <col:34, col:56>
|   `-ReturnStmt 0x55eaa3573cc8 <col:36, col:43>
|     `-ImplicitCastExpr 0x55eaa3573cb0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55eaa3573c90 <col:43> 'const char []' lvalue Var 0x55eaa355b5f8 'PORTS_1_1X2' 'const char []'
|-CXXMethodDecl 0x55eaa3572ad0 <line:61:3, col:60> col:15 processing 'const char *() const'
| |-Overrides: [ 0x55eaa355b688 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55eaa3573d38 <col:34, col:60>
|   `-ReturnStmt 0x55eaa3573d28 <col:36, col:43>
|     `-ImplicitCastExpr 0x55eaa3573d10 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55eaa3573cf0 <col:43> 'const char []' lvalue Var 0x55eaa355b9f0 'PROCESSING_A_AH' 'const char []'
|-CXXMethodDecl 0x55eaa3572da0 <line:63:3, col:49> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55eaa355ca90 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55eaa3572c50 <col:17, col:32> col:33 'Vector<String> &'
| `-ParmVarDecl 0x55eaa3572cc8 <col:35, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x55eaa3572e70 <line:64:3, col:21> col:8 add_handlers 'void ()'
| `-Overrides: [ 0x55eaa355cb60 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55eaa3572fb0 <line:66:3, col:33> col:11 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x55eaa355a3d8 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x55eaa3572f20 <col:25, col:32> col:33 'Packet *'
|-AccessSpecDecl 0x55eaa3573058 <line:71:2, col:9> col:2 private
|-FieldDecl 0x55eaa35730d0 <line:73:3, col:19> col:8 _verbose 'bool'
| `-ConstantExpr 0x55eaa35730b0 <col:19> 'int' Int: 1
|   `-IntegerLiteral 0x55eaa3573080 <col:19> 'int' 1
|-FieldDecl 0x55eaa3573130 <line:74:3, col:19> col:19 referenced _drops 'atomic_uint32_t'
|-FieldDecl 0x55eaa3573190 <line:75:3, col:20> col:20 _reason_drops 'atomic_uint32_t *'
|-EnumDecl 0x55eaa35731e0 <line:77:3, line:82:3> line:77:8 referenced Reason
| |-EnumConstantDecl 0x55eaa35732a0 <line:78:5> col:5 NOT_TCP 'CheckTCPHeader::Reason'
| |-EnumConstantDecl 0x55eaa35732f0 <line:79:5> col:5 BAD_LENGTH 'CheckTCPHeader::Reason'
| |-EnumConstantDecl 0x55eaa3573340 <line:80:5> col:5 BAD_CHECKSUM 'CheckTCPHeader::Reason'
| `-EnumConstantDecl 0x55eaa3573390 <line:81:5> col:5 referenced NREASONS 'CheckTCPHeader::Reason'
|-VarDecl 0x55eaa3573480 <line:83:3, col:43> col:22 reason_texts 'const char *[3]' static
|-CXXMethodDecl 0x55eaa3573648 <line:85:3, col:32> col:11 drop 'Packet *(CheckTCPHeader::Reason, Packet *)'
| |-ParmVarDecl 0x55eaa35734f8 <col:16> col:22 'CheckTCPHeader::Reason'
| `-ParmVarDecl 0x55eaa3573570 <col:24, col:31> col:32 'Packet *'
|-CXXMethodDecl 0x55eaa3573820 <line:86:3, col:47> col:17 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55eaa3573708 <col:30, col:38> col:39 'Element *'
| `-ParmVarDecl 0x55eaa3573788 <col:41, col:46> col:47 'void *'
|-CXXConstructorDecl 0x55eaa35738f8 <line:54:7> col:7 implicit CheckTCPHeader 'void (const CheckTCPHeader &)' inline default_delete noexcept-unevaluated 0x55eaa35738f8
| `-ParmVarDecl 0x55eaa3573a08 <col:7> col:7 'const CheckTCPHeader &'
`-CXXMethodDecl 0x55eaa3573aa8 <col:7> col:7 implicit operator= 'CheckTCPHeader &(const CheckTCPHeader &)' inline default_delete noexcept-unevaluated 0x55eaa3573aa8
  `-ParmVarDecl 0x55eaa3573bb8 <col:7> col:7 'const CheckTCPHeader &'

Layout: <CGRecordLayout
  LLVMType:%class.CheckTCPHeader = type { %class.Element.base, i8, %class.atomic_uint32_t, %class.atomic_uint32_t* }
  NonVirtualBaseLLVMType:%class.CheckTCPHeader = type { %class.Element.base, i8, %class.atomic_uint32_t, %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:108>
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa332d960 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55eaa332da78 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55eaa332db18 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55eaa332db78 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55eaa332dbd8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55eaa332dc88 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa332df90 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55eaa332e0a8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55eaa332e150 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55eaa332e1b8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55eaa332e248 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55eaa33342e0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55eaa3334718 <col:12>
|-CXXConstructorDecl 0x55eaa33343e8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55eaa33344f8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55eaa332e150 'data' 'const char *'
| | `-ImplicitCastExpr 0x55eaa3336ca0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55eaa3336c70 <col:12> 'const char *const' lvalue .data 0x55eaa332e150
| |     `-DeclRefExpr 0x55eaa3336c50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55eaa33344f8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55eaa332e1b8 'length' 'int'
| | `-ImplicitCastExpr 0x55eaa3336d30 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55eaa3336d00 <col:12> 'const int' lvalue .length 0x55eaa332e1b8
| |     `-DeclRefExpr 0x55eaa3336ce0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55eaa33344f8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55eaa332e248 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55eaa3336dc0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55eaa3336d90 <col:12> 'String::memo_t *const' lvalue .memo 0x55eaa332e248
| |     `-DeclRefExpr 0x55eaa3336d70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55eaa33344f8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55eaa3336e18 <col:12>
|-CXXConstructorDecl 0x55eaa3334598 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55eaa3334598
| `-ParmVarDecl 0x55eaa33346a8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55eaa3339c00 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55eaa3345618 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55eaa3345728 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55eaa3345c40 <col:12>
|   |-BinaryOperator 0x55eaa3345a58 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55eaa3345a10 <col:12> 'const char *' lvalue ->data 0x55eaa332e150
|   | | `-CXXThisExpr 0x55eaa3345a00 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55eaa3345a40 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55eaa33459d0 <col:12> 'const char *const' lvalue .data 0x55eaa332e150
|   |     `-DeclRefExpr 0x55eaa33459b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55eaa3345728 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55eaa3345b20 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55eaa3345ad8 <col:12> 'int' lvalue ->length 0x55eaa332e1b8
|   | | `-CXXThisExpr 0x55eaa3345ac8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55eaa3345b08 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55eaa3345a98 <col:12> 'const int' lvalue .length 0x55eaa332e1b8
|   |     `-DeclRefExpr 0x55eaa3345a78 <col:12> 'const String::rep_t' lvalue ParmVar 0x55eaa3345728 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55eaa3345be8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55eaa3345ba0 <col:12> 'String::memo_t *' lvalue ->memo 0x55eaa332e248
|   | | `-CXXThisExpr 0x55eaa3345b90 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55eaa3345bd0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55eaa3345b60 <col:12> 'String::memo_t *const' lvalue .memo 0x55eaa332e248
|   |     `-DeclRefExpr 0x55eaa3345b40 <col:12> 'const String::rep_t' lvalue ParmVar 0x55eaa3345728 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55eaa3345c30 <col:12>
|     `-UnaryOperator 0x55eaa3345c18 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55eaa3345c08 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55eaa3345798 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55eaa3345798
  `-ParmVarDecl 0x55eaa33458a8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa3324ed0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55eaa3324fe8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55eaa3325078 <col:16, col:22> col:16 public
|-TypedefDecl 0x55eaa33250b8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55eaa2ff7dc0 'const char *'
|   `-QualType 0x55eaa2ff7311 'const char' const
|     `-BuiltinType 0x55eaa2ff7310 'char'
|-TypedefDecl 0x55eaa3325140 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55eaa3325110 'String::const_iterator' sugar
|   |-Typedef 0x55eaa33250b8 'const_iterator'
|   `-PointerType 0x55eaa2ff7dc0 'const char *'
|     `-QualType 0x55eaa2ff7311 'const char' const
|       `-BuiltinType 0x55eaa2ff7310 'char'
|-TypedefDecl 0x55eaa33252b0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55eaa3325220 'int (String::*)() const'
|   |-RecordType 0x55eaa3324f60 'String'
|   | `-CXXRecord 0x55eaa3324ed0 'String'
|   `-ParenType 0x55eaa33251c0 'int () const' sugar
|     `-FunctionProtoType 0x55eaa32f8d50 'int () const' const cdecl
|       `-BuiltinType 0x55eaa2ff7370 'int'
|-TypedefDecl 0x55eaa3325318 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55eaa314d710 'int64_t' sugar
|   |-Typedef 0x55eaa30602d0 'int64_t'
|   `-TypedefType 0x55eaa30394d0 '__int64_t' sugar
|     |-Typedef 0x55eaa30390a8 '__int64_t'
|     `-BuiltinType 0x55eaa2ff7390 'long'
|-TypedefDecl 0x55eaa3325380 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55eaa314d630 'uint64_t' sugar
|   |-Typedef 0x55eaa3060470 'uint64_t'
|   `-TypedefType 0x55eaa3039560 '__uint64_t' sugar
|     |-Typedef 0x55eaa3039118 '__uint64_t'
|     `-BuiltinType 0x55eaa2ff7430 'unsigned long'
|-TypedefDecl 0x55eaa3325410 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55eaa33253e0 'String::intmax_t' sugar
|   |-Typedef 0x55eaa3325318 'intmax_t'
|   `-TypedefType 0x55eaa314d710 'int64_t' sugar
|     |-Typedef 0x55eaa30602d0 'int64_t'
|     `-TypedefType 0x55eaa30394d0 '__int64_t' sugar
|       |-Typedef 0x55eaa30390a8 '__int64_t'
|       `-BuiltinType 0x55eaa2ff7390 'long'
|-TypedefDecl 0x55eaa33254a0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55eaa3325470 'String::uintmax_t' sugar
|   |-Typedef 0x55eaa3325380 'uintmax_t'
|   `-TypedefType 0x55eaa314d630 'uint64_t' sugar
|     |-Typedef 0x55eaa3060470 'uint64_t'
|     `-TypedefType 0x55eaa3039560 '__uint64_t' sugar
|       |-Typedef 0x55eaa3039118 '__uint64_t'
|       `-BuiltinType 0x55eaa2ff7430 'unsigned long'
|-CXXConstructorDecl 0x55eaa3325560 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55eaa3325708 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55eaa3325648 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55eaa33258b8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55eaa33257f8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55eaa3325a10 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55eaa3325980 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55eaa3325c28 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55eaa3325ad8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55eaa3325b58 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55eaa3325e48 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55eaa3325cf8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55eaa3325d78 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55eaa3326068 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55eaa3325f18 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55eaa3325f98 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55eaa3326288 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55eaa3326138 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55eaa33261b8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55eaa3326418 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55eaa3326350 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55eaa3326598 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55eaa33264d8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55eaa3326728 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55eaa3326660 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55eaa3326880 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55eaa33267f0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55eaa33269d8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55eaa3326948 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55eaa3326b30 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55eaa3326aa0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55eaa3326cb8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55eaa3326bf8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55eaa3326e48 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55eaa3326d80 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55eaa3326fd8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55eaa3326f10 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55eaa3327168 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55eaa33270a0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55eaa3327260 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55eaa3327388 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55eaa3327508 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55eaa3327440 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55eaa3327658 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55eaa33275c8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55eaa3327710 <col:63> "" ""
|-CXXMethodDecl 0x55eaa3327858 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55eaa3327798 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55eaa3327a68 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55eaa3327918 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55eaa3327998 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55eaa3327c88 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55eaa3327b30 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55eaa3327bb0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55eaa3327f68 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55eaa3327d48 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55eaa3327dc8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55eaa3333db0 <col:55> 'int' 10
| `-ParmVarDecl 0x55eaa3327e40 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55eaa3333dd0 <col:76> 'bool' true
|-CXXMethodDecl 0x55eaa3328248 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55eaa3328030 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55eaa33280b0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55eaa3333de0 <col:56> 'int' 10
| `-ParmVarDecl 0x55eaa3328128 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55eaa3333e00 <col:77> 'bool' true
|-CXXMethodDecl 0x55eaa3328350 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55eaa3328418 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55eaa33284e0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55eaa3328580 <col:20>
| `-OptimizeNoneAttr 0x55eaa33285d8 <col:30>
|-CXXConversionDecl 0x55eaa33286c8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55eaa3328798 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55eaa3328858 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55eaa3328948 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55eaa3328a08 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55eaa3328b88 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55eaa3328ac0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55eaa3328cd8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55eaa3328c48 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55eaa3328dc8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55eaa3328e88 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55eaa33290d8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55eaa3328f40 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55eaa3328fc0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55eaa3329338 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55eaa33291a0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55eaa3329220 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55eaa3329408 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55eaa3329618 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55eaa33294c0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55eaa3329540 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55eaa3329838 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55eaa33296e0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55eaa3329760 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55eaa33299c8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55eaa3329900 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55eaa3329ab8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55eaa3329c28 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55eaa3329b68 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55eaa3329e38 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55eaa3329ce8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55eaa3329d68 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55eaa332a050 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55eaa3329ef8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55eaa3329f70 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55eaa332a1e0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55eaa332a110 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55eaa332a400 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55eaa332a2a0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55eaa332a320 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55eaa332a550 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55eaa332a4c0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55eaa332a728 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55eaa332a610 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55eaa332a690 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55eaa332a878 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55eaa332a7e8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55eaa332aa90 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55eaa332a930 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55eaa332a9b0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55eaa3333e10 <col:39> 'int' 0
|-CXXMethodDecl 0x55eaa332acb0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55eaa332ab50 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55eaa332abd0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55eaa3333e30 <col:48> 'int' 0
|-CXXMethodDecl 0x55eaa332ae90 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55eaa332ad70 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55eaa332adf0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55eaa3333e50 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55eaa332af60 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55eaa332b020 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55eaa332b0e0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55eaa332b1a0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55eaa332b260 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55eaa332b408 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55eaa332b310 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55eaa332b588 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55eaa332b4c0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55eaa332b760 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55eaa332b648 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55eaa332b8d8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55eaa332b818 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55eaa332ba20 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55eaa332b990 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55eaa332bb70 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55eaa332bae0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55eaa332bd48 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55eaa332bc30 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55eaa332bcb0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55eaa332bf28 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55eaa332be10 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55eaa332be90 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55eaa332c078 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55eaa332bfe8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55eaa332c288 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55eaa332c138 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55eaa332c1b8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55eaa332c3e8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55eaa332c350 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55eaa332c540 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55eaa332c4a8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55eaa332c5e8 <col:57> "" ""
|-CXXMethodDecl 0x55eaa332c6f8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55eaa332c668 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55eaa332c848 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55eaa332c7b8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55eaa332c9c8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55eaa332c900 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55eaa332ca90 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55eaa332cb50 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55eaa332cc10 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55eaa332ccb0 <col:49> "" ""
|-CXXMethodDecl 0x55eaa332cd40 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55eaa332ce00 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55eaa332cef0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55eaa332cfb8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55eaa332d078 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55eaa332d138 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55eaa332d230 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55eaa332d2f8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55eaa332d3c0 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55eaa332d598 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55eaa332d478 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55eaa332d4f8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55eaa332d7c0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55eaa332d660 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55eaa332d6e0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55eaa332d8d0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55eaa332d938 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55eaa332d960 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55eaa332da78 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55eaa332db18 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55eaa332db78 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55eaa332dbd8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55eaa332dc88 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55eaa332dcf0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55eaa332df28 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55eaa332df78 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55eaa332df08 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55eaa332de18 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55eaa332ddc0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55eaa332de00 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55eaa332dde0 <col:32> 'int' 8
|-CXXRecordDecl 0x55eaa332df90 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55eaa332e0a8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55eaa332e150 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55eaa332e1b8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55eaa332e248 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55eaa33342e0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55eaa3334718 <col:12>
| |-CXXConstructorDecl 0x55eaa33343e8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55eaa33344f8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55eaa332e150 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55eaa3336ca0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55eaa3336c70 <col:12> 'const char *const' lvalue .data 0x55eaa332e150
| | |     `-DeclRefExpr 0x55eaa3336c50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55eaa33344f8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55eaa332e1b8 'length' 'int'
| | | `-ImplicitCastExpr 0x55eaa3336d30 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55eaa3336d00 <col:12> 'const int' lvalue .length 0x55eaa332e1b8
| | |     `-DeclRefExpr 0x55eaa3336ce0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55eaa33344f8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55eaa332e248 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55eaa3336dc0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55eaa3336d90 <col:12> 'String::memo_t *const' lvalue .memo 0x55eaa332e248
| | |     `-DeclRefExpr 0x55eaa3336d70 <col:12> 'const String::rep_t' lvalue ParmVar 0x55eaa33344f8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55eaa3336e18 <col:12>
| |-CXXConstructorDecl 0x55eaa3334598 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55eaa3334598
| | `-ParmVarDecl 0x55eaa33346a8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55eaa3339c00 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55eaa3345618 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55eaa3345728 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55eaa3345c40 <col:12>
| |   |-BinaryOperator 0x55eaa3345a58 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55eaa3345a10 <col:12> 'const char *' lvalue ->data 0x55eaa332e150
| |   | | `-CXXThisExpr 0x55eaa3345a00 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55eaa3345a40 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55eaa33459d0 <col:12> 'const char *const' lvalue .data 0x55eaa332e150
| |   |     `-DeclRefExpr 0x55eaa33459b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55eaa3345728 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55eaa3345b20 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55eaa3345ad8 <col:12> 'int' lvalue ->length 0x55eaa332e1b8
| |   | | `-CXXThisExpr 0x55eaa3345ac8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55eaa3345b08 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55eaa3345a98 <col:12> 'const int' lvalue .length 0x55eaa332e1b8
| |   |     `-DeclRefExpr 0x55eaa3345a78 <col:12> 'const String::rep_t' lvalue ParmVar 0x55eaa3345728 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55eaa3345be8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55eaa3345ba0 <col:12> 'String::memo_t *' lvalue ->memo 0x55eaa332e248
| |   | | `-CXXThisExpr 0x55eaa3345b90 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55eaa3345bd0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55eaa3345b60 <col:12> 'String::memo_t *const' lvalue .memo 0x55eaa332e248
| |   |     `-DeclRefExpr 0x55eaa3345b40 <col:12> 'const String::rep_t' lvalue ParmVar 0x55eaa3345728 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55eaa3345c30 <col:12>
| |     `-UnaryOperator 0x55eaa3345c18 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55eaa3345c08 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55eaa3345798 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55eaa3345798
|   `-ParmVarDecl 0x55eaa33458a8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55eaa332e2c0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55eaa332e508 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55eaa332e328 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55eaa332e3a8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55eaa332e420 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55eaa33342a0 <col:79, line:261:5>
|   |-BinaryOperator 0x55eaa3333f18 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55eaa3333eb0 <col:2, col:5> 'const char *' lvalue .data 0x55eaa332e150
|   | | `-MemberExpr 0x55eaa3333e80 <col:2> 'String::rep_t' lvalue ->_r 0x55eaa332e2c0
|   | |   `-CXXThisExpr 0x55eaa3333e70 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55eaa3333f00 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eaa3333ee0 <col:12> 'const char *' lvalue ParmVar 0x55eaa332e328 'data' 'const char *'
|   |-BinaryOperator 0x55eaa3333fe0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55eaa3333f78 <col:2, col:5> 'int' lvalue .length 0x55eaa332e1b8
|   | | `-MemberExpr 0x55eaa3333f48 <col:2> 'String::rep_t' lvalue ->_r 0x55eaa332e2c0
|   | |   `-CXXThisExpr 0x55eaa3333f38 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55eaa3333fc8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55eaa3333fa8 <col:14> 'int' lvalue ParmVar 0x55eaa332e3a8 'length' 'int'
|   `-IfStmt 0x55eaa3334288 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55eaa3334100 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55eaa33340e8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55eaa33340c8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55eaa33340a8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55eaa3334040 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55eaa332e248
|     |       | `-MemberExpr 0x55eaa3334010 <col:7> 'String::rep_t' lvalue ->_r 0x55eaa332e2c0
|     |       |   `-CXXThisExpr 0x55eaa3334000 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55eaa3334090 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55eaa3334070 <col:17> 'String::memo_t *' lvalue ParmVar 0x55eaa332e420 'memo' 'String::memo_t *'
|     `-CallExpr 0x55eaa3334260 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55eaa3334248 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55eaa3334150 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55eaa331cf38 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55eaa33341b8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55eaa332db18
|         `-ImplicitCastExpr 0x55eaa33341a0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55eaa3334180 <col:27> 'String::memo_t *' lvalue ParmVar 0x55eaa332e420 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55eaa332e7b8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55eaa332e5d8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55eaa332e658 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55eaa332e6d0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55eaa332e2c0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55eaa3334728 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55eaa33348b8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55eaa3334820 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55eaa3334790 <col:2> '<bound member function type>' ->assign_memo 0x55eaa332e508
|     | `-ImplicitCastExpr 0x55eaa3334858 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55eaa3334780 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55eaa3334870 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55eaa33347c0 <col:14> 'const char *' lvalue ParmVar 0x55eaa332e5d8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55eaa3334888 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55eaa33347e0 <col:20> 'int' lvalue ParmVar 0x55eaa332e658 'length' 'int'
|     `-ImplicitCastExpr 0x55eaa33348a0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55eaa3334800 <col:28> 'String::memo_t *' lvalue ParmVar 0x55eaa332e6d0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55eaa332e948 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55eaa332e888 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55eaa3334b10 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55eaa3334a90 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55eaa33348e0 <col:2> '<bound member function type>' ->assign_memo 0x55eaa332e508
|     | `-CXXThisExpr 0x55eaa33348d0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55eaa3334ac8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55eaa3334960 <col:14, col:19> 'const char *' lvalue .data 0x55eaa332e150
|     |   `-MemberExpr 0x55eaa3334930 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55eaa332e2c0
|     |     `-DeclRefExpr 0x55eaa3334910 <col:14> 'const String' lvalue ParmVar 0x55eaa332e888 'x' 'const String &'
|     |-ImplicitCastExpr 0x55eaa3334ae0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55eaa33349e0 <col:25, col:30> 'int' lvalue .length 0x55eaa332e1b8
|     |   `-MemberExpr 0x55eaa33349b0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55eaa332e2c0
|     |     `-DeclRefExpr 0x55eaa3334990 <col:25> 'const String' lvalue ParmVar 0x55eaa332e888 'x' 'const String &'
|     `-ImplicitCastExpr 0x55eaa3334af8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55eaa3334a60 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55eaa332e248
|         `-MemberExpr 0x55eaa3334a30 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55eaa332e2c0
|           `-DeclRefExpr 0x55eaa3334a10 <col:38> 'const String' lvalue ParmVar 0x55eaa332e888 'x' 'const String &'
|-CXXMethodDecl 0x55eaa332ea10 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55eaa33354d0 <col:31, line:278:5>
|   `-IfStmt 0x55eaa33354b8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55eaa3334bb0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55eaa3334b98 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55eaa3334b68 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55eaa332e248
|     |     `-MemberExpr 0x55eaa3334b38 <col:6> 'String::rep_t' lvalue ->_r 0x55eaa332e2c0
|     |       `-CXXThisExpr 0x55eaa3334b28 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55eaa3335490 <col:15, line:277:2>
|       |-ParenExpr 0x55eaa3335060 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55eaa3335030 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55eaa3334cc0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55eaa3334ca8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55eaa3334c90 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55eaa3334c50 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55eaa332db18
|       |   |       `-ImplicitCastExpr 0x55eaa3334c38 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55eaa3334c08 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55eaa332e248
|       |   |           `-MemberExpr 0x55eaa3334bd8 <col:27> 'String::rep_t' lvalue ->_r 0x55eaa332e2c0
|       |   |             `-CXXThisExpr 0x55eaa3334bc8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55eaa3334d20 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55eaa3334d00 <col:54> 'int' 0
|       |   `-CallExpr 0x55eaa3334f90 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55eaa3334f78 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55eaa3334ef8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55eaa3334fd0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55eaa3334e08 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55eaa3334fe8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55eaa3334e38 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55eaa3335000 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55eaa3334e70 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55eaa3335018 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55eaa3334ee0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55eaa3334ec8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55eaa3334e90 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55eaa33353b0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55eaa3335270 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55eaa3335258 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55eaa33351d0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55eaa331e380 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55eaa33351a0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55eaa332db18
|       | |   `-ImplicitCastExpr 0x55eaa3335188 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55eaa3335158 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55eaa332e248
|       | |       `-MemberExpr 0x55eaa3335128 <col:40> 'String::rep_t' lvalue ->_r 0x55eaa332e2c0
|       | |         `-CXXThisExpr 0x55eaa3335118 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55eaa3335370 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55eaa3335358 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55eaa3335298 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55eaa33331f0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55eaa3335398 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55eaa33352f8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55eaa332e248
|       |       `-MemberExpr 0x55eaa33352c8 <col:15> 'String::rep_t' lvalue ->_r 0x55eaa332e2c0
|       |         `-CXXThisExpr 0x55eaa33352b8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55eaa3335470 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55eaa3335408 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55eaa332e248
|         | `-MemberExpr 0x55eaa33353d8 <col:6> 'String::rep_t' lvalue ->_r 0x55eaa332e2c0
|         |   `-CXXThisExpr 0x55eaa33353c8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55eaa3335458 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55eaa3335438 <col:16> 'int' 0
|-CXXMethodDecl 0x55eaa332eca8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55eaa332eac8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55eaa332eb48 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55eaa332ebc0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55eaa332ed80 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55eaa332efd0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55eaa332ee38 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55eaa332eeb8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55eaa332ef30 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55eaa332f1b8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55eaa332f0a0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55eaa332f120 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55eaa332f2b8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55eaa33355a8 <col:41, line:286:5>
|   `-ReturnStmt 0x55eaa3335598 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55eaa3335568 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55eaa3335530 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55eaa3335518 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55eaa33354f8 <col:46> 'int' 1
|-CXXMethodDecl 0x55eaa332f558 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55eaa332f370 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55eaa332f3f0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55eaa332f470 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55eaa33331f0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55eaa332f620 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55eaa33332c0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55eaa3333490 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55eaa3333378 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55eaa33333f8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55eaa3333550 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55eaa3333618 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55eaa3333718 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55eaa3333790 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55eaa3333808 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55eaa3333870 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55eaa3333970 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55eaa33339c0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55eaa3333950 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55eaa3333930 <col:22> 'int' 14
|-CXXMethodDecl 0x55eaa3333bd8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55eaa33339f0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55eaa3333a70 <col:38> col:41 'int'
| `-ParmVarDecl 0x55eaa3333af0 <col:43> col:46 'int'
|-FriendDecl 0x55eaa3333ce0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55eaa3333d70 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55eaa35a2970 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55eaa35a2b48 prev 0x55eaa35a2970 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55eaa35a2bd8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55eaa35a2c00 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55eaa2ff7370 'int'
|-TypedefDecl 0x55eaa35a4560 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55eaa35a4510 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55eaa35a44f0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55eaa35a2e18 'type'
|     `-SubstTemplateTypeParmType 0x55eaa35a2de0 'String' sugar
|       |-TemplateTypeParmType 0x55eaa32e8770 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55eaa32e8720 'T'
|       `-RecordType 0x55eaa3324f60 'String'
|         `-CXXRecord 0x55eaa3324ed0 'String'
|-TypedefDecl 0x55eaa35a8640 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55eaa35a45e0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55eaa35a45c0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55eaa35a4560 'type'
|     `-ElaboratedType 0x55eaa35a4510 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55eaa35a44f0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55eaa35a2e18 'type'
|         `-SubstTemplateTypeParmType 0x55eaa35a2de0 'String' sugar
|           |-TemplateTypeParmType 0x55eaa32e8770 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55eaa32e8720 'T'
|           `-RecordType 0x55eaa3324f60 'String'
|             `-CXXRecord 0x55eaa3324ed0 'String'
|-CXXMethodDecl 0x55eaa35a87c8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55eaa35a86d8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55eaa35a88b8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55eaa35a8998 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55eaa35a8998
|-CXXMethodDecl 0x55eaa35a8c68 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55eaa35a8b70 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55eaa35a8ea8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55eaa35a8d20 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55eaa35a8d98 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55eaa35a9078 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55eaa35a8f68 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55eaa35a8fe0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55eaa35a91d8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55eaa35a92a8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55eaa35a94f8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55eaa35a9368 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55eaa35a93e0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55eaa35a9758 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55eaa35a95c8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55eaa35a9640 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55eaa35a9918 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55eaa35a9828 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55eaa35a9ad8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55eaa35a99e0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55eaa35a9b90 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55eaa35a9c40 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55eaa35a9e78 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55eaa35a9cf0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55eaa35a9d68 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55eaa35aa118 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55eaa35aa020 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55eaa35aa1e0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55eaa35aa230 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55eaa35aa280 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55eaa355c700 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55eaa35a13d8 prev 0x55eaa355c700 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55eaa35a28e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55eaa35a2890 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55eaa35a2870 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55eaa35a2720 'type'
|     `-SubstTemplateTypeParmType 0x55eaa35a25b0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55eaa32be300 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55eaa32be2a8 'F'
|       `-RecordType 0x55eaa35a2210 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55eaa35a2130 'typed_array_memory'
|-FieldDecl 0x55eaa35aa2d0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55eaa35aa320 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55eaa35aa358 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55eaa35a1470 'String' sugar
|   |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|   `-RecordType 0x55eaa3324f60 'String'
|     `-CXXRecord 0x55eaa3324ed0 'String'
|-TypedefDecl 0x55eaa35aa3e8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55eaa35aa3b0 'String &'
|   `-SubstTemplateTypeParmType 0x55eaa35a1470 'String' sugar
|     |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|     `-RecordType 0x55eaa3324f60 'String'
|       `-CXXRecord 0x55eaa3324ed0 'String'
|-TypedefDecl 0x55eaa35aa478 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55eaa35aa440 'const String &'
|   `-QualType 0x55eaa35a1471 'const String' const
|     `-SubstTemplateTypeParmType 0x55eaa35a1470 'String' sugar
|       |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|       `-RecordType 0x55eaa3324f60 'String'
|         `-CXXRecord 0x55eaa3324ed0 'String'
|-TypedefDecl 0x55eaa35aa508 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55eaa35aa4d0 'String *'
|   `-SubstTemplateTypeParmType 0x55eaa35a1470 'String' sugar
|     |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|     `-RecordType 0x55eaa3324f60 'String'
|       `-CXXRecord 0x55eaa3324ed0 'String'
|-TypedefDecl 0x55eaa35aa598 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55eaa35aa560 'const String *'
|   `-QualType 0x55eaa35a1471 'const String' const
|     `-SubstTemplateTypeParmType 0x55eaa35a1470 'String' sugar
|       |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|       `-RecordType 0x55eaa3324f60 'String'
|         `-CXXRecord 0x55eaa3324ed0 'String'
|-TypedefDecl 0x55eaa35ab1f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55eaa35ab1a0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55eaa35ab180 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55eaa35ab0b8 'type'
|     `-LValueReferenceType 0x55eaa35ab080 'const String &'
|       `-QualType 0x55eaa35aae21 'const String' const
|         `-SubstTemplateTypeParmType 0x55eaa35aae20 'String' sugar
|           |-TemplateTypeParmType 0x55eaa32c8470 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55eaa32c8418 'T'
|           `-RecordType 0x55eaa3324f60 'String'
|             `-CXXRecord 0x55eaa3324ed0 'String'
|-TypedefDecl 0x55eaa35ab258 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55eaa35aa440 'const String &'
|   `-QualType 0x55eaa35a1471 'const String' const
|     `-SubstTemplateTypeParmType 0x55eaa35a1470 'String' sugar
|       |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|       `-RecordType 0x55eaa3324f60 'String'
|         `-CXXRecord 0x55eaa3324ed0 'String'
|-TypedefDecl 0x55eaa35ab2b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55eaa2ff7370 'int'
|-TypedefDecl 0x55eaa35ab318 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55eaa35aa4d0 'String *'
|   `-SubstTemplateTypeParmType 0x55eaa35a1470 'String' sugar
|     |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|     `-RecordType 0x55eaa3324f60 'String'
|       `-CXXRecord 0x55eaa3324ed0 'String'
|-TypedefDecl 0x55eaa35ab380 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55eaa35aa560 'const String *'
|   `-QualType 0x55eaa35a1471 'const String' const
|     `-SubstTemplateTypeParmType 0x55eaa35a1470 'String' sugar
|       |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|       `-RecordType 0x55eaa3324f60 'String'
|         `-CXXRecord 0x55eaa3324ed0 'String'
|-EnumDecl 0x55eaa35ab3d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55eaa35ab4d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55eaa35ab4b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55eaa32f7118 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55eaa32f70f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55eaa32f70d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55eaa35ab558 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55eaa35ab7e8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55eaa35ab610 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55eaa35ab6b0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55eaa35aba78 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55eaa35ab960 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55eaa35abd38 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55eaa35abc20 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55eaa35ac050 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55eaa35abf30 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55eaa35ac360 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55eaa35ac240 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55eaa35ac650 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55eaa35ac498 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55eaa35ac510 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55eaa35ac778 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55eaa35ac828 <col:20> Inherited
| `-OptimizeNoneAttr 0x55eaa35ac880 <col:30> Inherited
|-CXXMethodDecl 0x55eaa35ac8c8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55eaa35ac978 <col:20> Inherited
| `-OptimizeNoneAttr 0x55eaa35ac9d0 <col:30> Inherited
|-CXXMethodDecl 0x55eaa35aca98 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55eaa35acb48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55eaa35acba0 <col:30> Inherited
|-CXXMethodDecl 0x55eaa35acbe8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55eaa35acc98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55eaa35accf0 <col:30> Inherited
|-CXXMethodDecl 0x55eaa35acd38 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55eaa35acde8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55eaa35ace40 <col:30> Inherited
|-CXXMethodDecl 0x55eaa35ace88 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55eaa35acf38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55eaa35acf90 <col:30> Inherited
|-CXXMethodDecl 0x55eaa35acfb8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55eaa35ad068 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55eaa35ad118 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55eaa35ad2d8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55eaa35ad1c8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55eaa35ad240 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55eaa35ad428 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55eaa35ad398 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55eaa35ad5d8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55eaa35ad4e0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55eaa35ad690 <col:20>
| `-OptimizeNoneAttr 0x55eaa35ad6e8 <col:30>
|-CXXMethodDecl 0x55eaa35ad808 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55eaa35ad710 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55eaa35ad8c0 <col:20>
| `-OptimizeNoneAttr 0x55eaa35ad918 <col:30>
|-CXXMethodDecl 0x55eaa35ad9d0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55eaa35ad940 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55eaa35adb18 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55eaa35ada88 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55eaa35adc48 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55eaa35add48 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55eaa35ade18 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55eaa35adee8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55eaa35ae028 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55eaa35adf98 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55eaa35ae170 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55eaa35ae0e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55eaa35ae2b8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55eaa35ae228 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55eaa35ae370 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55eaa35ae470 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55eaa35ae3e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55eaa35ae528 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55eaa35ae5e8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55eaa35ae6e8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55eaa35ae868 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55eaa35ae7a8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55eaa35af028 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55eaa35ae920 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55eaa35aef88 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55eaa35aee88 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55eaa35af108 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55eaa35af258 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55eaa35af1c8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55eaa35af310 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55eaa35af558 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55eaa35af3d0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55eaa35af448 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55eaa35af6e8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55eaa35af628 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55eaa35af8f8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55eaa35af7b0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55eaa35af828 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55eaa35af9b8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55eaa35afc18 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55eaa35afb20 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55eaa35afce8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55eaa35afce8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa362b6e8 prev 0x55eaa34daea8 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55eaa362b7e0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55eaa362b870 <col:22, col:28> col:22 public
|-EnumDecl 0x55eaa362b898 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55eaa362b9b8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55eaa362b998 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55eaa362b980 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55eaa362b960 <col:14> 'int' 999
| |-EnumConstantDecl 0x55eaa362ba60 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55eaa362ba40 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55eaa362ba28 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55eaa362ba08 <col:14> 'int' 1
| |-EnumConstantDecl 0x55eaa362baf0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55eaa362bad0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55eaa362bab0 <col:17> 'int' 0
| |-EnumConstantDecl 0x55eaa362bb80 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55eaa362bb60 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55eaa362bb40 <col:13> 'int' 1
| |-EnumConstantDecl 0x55eaa362bc10 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55eaa362bbf0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55eaa362bbd0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55eaa362bca0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55eaa362bc80 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55eaa362bc60 <col:13> 'int' 3
| |-EnumConstantDecl 0x55eaa362bd30 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55eaa362bd10 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55eaa362bcf0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55eaa362bdc0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55eaa362bda0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55eaa362bd80 <col:14> 'int' 5
| |-EnumConstantDecl 0x55eaa362be50 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55eaa362be30 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55eaa362be10 <col:12> 'int' 6
| `-EnumConstantDecl 0x55eaa362bee0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55eaa362bec0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55eaa362bea0 <col:13> 'int' 7
|-VarDecl 0x55eaa362bf50 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55eaa362bfd8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55eaa362c060 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55eaa362c0e8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55eaa362c170 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55eaa362c1f8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55eaa362c280 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55eaa362c308 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55eaa362c390 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55eaa362c418 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55eaa362c4a0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55eaa362c5a0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55eaa3631928 '_nerrors' 'int'
| | `-IntegerLiteral 0x55eaa36320b8 <line:128:13> 'int' 0
| `-CompoundStmt 0x55eaa3632128 <col:16, line:129:5>
|-CXXDestructorDecl 0x55eaa362c690 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55eaa3632138 <col:29, line:132:5>
|-CXXMethodDecl 0x55eaa362c848 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55eaa362c780 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55eaa362c910 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55eaa362c9f8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55eaa3632190 <col:44, line:161:5>
|   `-ReturnStmt 0x55eaa3632180 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55eaa3632168 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55eaa3632148 <col:9> 'ErrorHandler *' lvalue Var 0x55eaa3631988 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55eaa362cb38 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55eaa362caa8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55eaa362cc00 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55eaa36321f0 <col:43, line:173:5>
|   `-ReturnStmt 0x55eaa36321e0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55eaa36321c8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55eaa36321a8 <col:9> 'ErrorHandler *' lvalue Var 0x55eaa3631a00 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55eaa362ccb8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55eaa362cd38 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55eaa362ce48 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55eaa362cdb8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55eaa362cf98 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55eaa362cf08 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55eaa362d0f0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55eaa362d058 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55eaa362d248 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55eaa362d1b0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55eaa362d3a0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55eaa362d308 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55eaa362d5b0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55eaa362d458 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55eaa362d4d8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55eaa362d788 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55eaa362d670 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55eaa362d6f0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55eaa362d9a8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55eaa362d848 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55eaa362d8c8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55eaa362db88 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55eaa362da68 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55eaa362dae8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55eaa362dd68 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55eaa362dc48 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55eaa362dcc8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55eaa362def0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55eaa362de28 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55eaa362e0c0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55eaa362dfa8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55eaa362e020 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55eaa3632448 <col:57, line:234:5>
|   `-ReturnStmt 0x55eaa3632438 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55eaa3632420 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55eaa36323c8 <col:9, col:41> 'int'
|         |-MemberExpr 0x55eaa3632398 <col:9> '<bound member function type>' ->xmessage 0x55eaa362def0
|         | `-CXXThisExpr 0x55eaa3632388 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55eaa3632408 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55eaa36323f0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55eaa3632368 <col:18, col:40> 'String' (CXXTemporary 0x55eaa3632368)
|               `-CallExpr 0x55eaa3632330 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55eaa3632318 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55eaa3632290 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55eaa36300b8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55eaa36322b0 <col:31> 'const String' lvalue ParmVar 0x55eaa362e020 'str' 'const String &'
|                 `-DeclRefExpr 0x55eaa36322d0 <col:36> 'const String' lvalue ParmVar 0x55eaa362dfa8 'anno' 'const String &'
|-CXXMethodDecl 0x55eaa362e3a0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55eaa362e180 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55eaa362e200 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55eaa362e278 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55eaa36326d8 <col:68, line:243:5>
|   `-ReturnStmt 0x55eaa36326c8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55eaa36326b0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55eaa3632650 <col:9, col:41> 'int'
|         |-MemberExpr 0x55eaa3632620 <col:9> '<bound member function type>' ->xmessage 0x55eaa362e0c0
|         | `-CXXThisExpr 0x55eaa3632610 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55eaa36324e8 <col:18> 'const String' lvalue ParmVar 0x55eaa362e180 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55eaa3632698 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55eaa3632680 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55eaa36325f0 <col:24, col:40> 'String' (CXXTemporary 0x55eaa36325f0)
|               `-CXXMemberCallExpr 0x55eaa3632588 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55eaa3632518 <col:24> '<bound member function type>' ->vformat 0x55eaa362f580
|                 | `-CXXThisExpr 0x55eaa3632508 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55eaa36325b8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55eaa3632548 <col:32> 'const char *' lvalue ParmVar 0x55eaa362e200 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55eaa36325d0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55eaa3632568 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55eaa362e278 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55eaa362e640 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55eaa362e468 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55eaa362e4e0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55eaa362e558 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55eaa3632a18 <col:23, line:254:5>
|   `-ReturnStmt 0x55eaa3632a08 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55eaa36329f0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55eaa3632990 <col:9, col:71> 'int'
|         |-MemberExpr 0x55eaa3632960 <col:9> '<bound member function type>' ->xmessage 0x55eaa362e0c0
|         | `-CXXThisExpr 0x55eaa3632950 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55eaa36329d8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55eaa36329c0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55eaa3632910 <col:18, col:65> 'String' (CXXTemporary 0x55eaa3632910)
|         |     `-CallExpr 0x55eaa36328a8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55eaa3632890 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55eaa3632778 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55eaa36300b8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55eaa3632798 <col:31> 'const String' lvalue ParmVar 0x55eaa362e4e0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55eaa36328f0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55eaa36328d8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55eaa3632870 <col:37, col:64> 'String' (CXXTemporary 0x55eaa3632870)
|         |             `-CallExpr 0x55eaa3632840 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55eaa3632828 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55eaa36327b8 <col:37> 'String (const String &)' lvalue CXXMethod 0x55eaa36307a0 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55eaa36327d8 <col:56> 'const String' lvalue ParmVar 0x55eaa362e468 'landmark' 'const String &'
|         `-DeclRefExpr 0x55eaa3632930 <col:68> 'const String' lvalue ParmVar 0x55eaa362e558 'str' 'const String &'
|-CXXMethodDecl 0x55eaa362e9c0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55eaa362e708 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55eaa362e780 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55eaa362e800 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55eaa362e878 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55eaa3632cd0 <col:34, line:267:5>
|   `-ReturnStmt 0x55eaa3632cc0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55eaa3632ca8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55eaa3632c40 <col:9, col:51> 'int'
|         |-MemberExpr 0x55eaa3632c10 <col:9> '<bound member function type>' ->xmessage 0x55eaa362e640
|         | `-CXXThisExpr 0x55eaa3632c00 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55eaa3632ab8 <col:18> 'const String' lvalue ParmVar 0x55eaa362e708 'landmark' 'const String &'
|         |-DeclRefExpr 0x55eaa3632ad8 <col:28> 'const String' lvalue ParmVar 0x55eaa362e780 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55eaa3632c90 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55eaa3632c78 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55eaa3632be0 <col:34, col:50> 'String' (CXXTemporary 0x55eaa3632be0)
|               `-CXXMemberCallExpr 0x55eaa3632b78 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55eaa3632b08 <col:34> '<bound member function type>' ->vformat 0x55eaa362f580
|                 | `-CXXThisExpr 0x55eaa3632af8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55eaa3632ba8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55eaa3632b38 <col:42> 'const char *' lvalue ParmVar 0x55eaa362e800 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55eaa3632bc0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55eaa3632b58 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55eaa362e878 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55eaa362ead0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55eaa3632d50 <col:25, line:288:5>
|   `-ReturnStmt 0x55eaa3632d40 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55eaa3632d28 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55eaa3632cf8 <col:9> 'const int' lvalue ->_nerrors 0x55eaa3631928
|         `-CXXThisExpr 0x55eaa3632ce8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55eaa362ece0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55eaa362eb88 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55eaa362ec08 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55eaa362efc8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55eaa362eda8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55eaa362ee28 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55eaa362eea0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55eaa362f160 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55eaa362f098 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55eaa362f3a8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55eaa362f220 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55eaa362f298 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55eaa3632fb0 <col:58, line:357:5>
|   `-ReturnStmt 0x55eaa3632fa0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55eaa3632f88 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55eaa3632f58 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55eaa3632f40 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55eaa3632f20 <col:9, col:29> 'String' (CXXTemporary 0x55eaa3632f20)
|             `-CallExpr 0x55eaa3632eb0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55eaa3632e98 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55eaa3632e18 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55eaa362efc8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55eaa3632db8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55eaa3632ee8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55eaa3632dd8 <col:21> 'const char *' lvalue ParmVar 0x55eaa362f220 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55eaa3632f00 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55eaa3632df8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55eaa362f298 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55eaa362f580 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55eaa362f470 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55eaa362f4e8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55eaa362f6d8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55eaa362f648 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55eaa362f820 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55eaa362f790 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55eaa362fac0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55eaa362f8d8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55eaa362f958 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55eaa362f9d0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55eaa362fc20 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55eaa362fb90 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55eaa36330c8 <col:37, line:441:5>
|   `-IfStmt 0x55eaa36330b0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55eaa3633038 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55eaa3633008 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55eaa3632fc8 <col:6> 'int' lvalue ParmVar 0x55eaa362fb90 'level' 'int'
|     | `-ImplicitCastExpr 0x55eaa3633020 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55eaa3632fe8 <col:15> 'ErrorHandler::Level' EnumConstant 0x55eaa362bca0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55eaa3633098 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55eaa3633068 <col:8> 'int' lvalue ->_nerrors 0x55eaa3631928
|         `-CXXThisExpr 0x55eaa3633058 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55eaa362fce8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55eaa3633160 <col:26, line:448:5>
|   `-BinaryOperator 0x55eaa3633140 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55eaa36330f0 <col:2> 'int' lvalue ->_nerrors 0x55eaa3631928
|     | `-CXXThisExpr 0x55eaa36330e0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55eaa3633120 <col:13> 'int' 0
|-CXXMethodDecl 0x55eaa362feb0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55eaa362fda0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55eaa362fe18 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55eaa36300b8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55eaa362ff70 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55eaa362ffe8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55eaa3630400 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55eaa3630178 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55eaa36301f8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55eaa3630278 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55eaa36304b8 <col:59> 0 0
|-CXXMethodDecl 0x55eaa3630650 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55eaa3630530 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55eaa36305b0 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55eaa36337d0 <col:70, line:534:5>
|   |-DeclStmt 0x55eaa36332d0 <line:528:2, col:20>
|   | |-VarDecl 0x55eaa3633188 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55eaa36331f0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55eaa3633228 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55eaa3633290 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55eaa36333a0 <line:529:2, col:23>
|   | `-VarDecl 0x55eaa3633300 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55eaa3633388 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55eaa3633368 <col:18> 'const char *' lvalue ParmVar 0x55eaa3630530 'begin' 'const char *'
|   |-DoStmt 0x55eaa3633768 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55eaa3633698 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55eaa3633680 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55eaa3633660 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55eaa36333b8 <col:6> 'const char *' lvalue Var 0x55eaa3633300 'x' 'const char *'
|   | |     `-CallExpr 0x55eaa36335b0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55eaa3633598 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55eaa3633550 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55eaa3631e00 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55eaa3633618 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55eaa3633600 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55eaa3633470 <col:20, col:27> 'String' (CXXTemporary 0x55eaa3633470)
|   | |       |     `-CXXTemporaryObjectExpr 0x55eaa3633438 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55eaa3633630 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55eaa3633490 <col:30> 'const char *' lvalue Var 0x55eaa3633300 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55eaa3633648 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55eaa36334b0 <col:33> 'const char *' lvalue ParmVar 0x55eaa36305b0 'end' 'const char *'
|   | |       |-UnaryOperator 0x55eaa36334f0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55eaa36334d0 <col:39> 'String' lvalue Var 0x55eaa3633188 'name' 'String'
|   | |       |-UnaryOperator 0x55eaa3633528 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55eaa3633508 <col:46> 'String' lvalue Var 0x55eaa3633228 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55eaa3633540 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55eaa3633750 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55eaa3633738 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55eaa3633718 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55eaa36336e8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55eaa33286c8
|   |         `-ImplicitCastExpr 0x55eaa36336d0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55eaa36336b0 <col:11> 'String' lvalue Var 0x55eaa3633188 'name' 'String'
|   `-ReturnStmt 0x55eaa36337c0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55eaa36337a8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55eaa3633788 <col:9> 'const char *' lvalue Var 0x55eaa3633300 'x' 'const char *'
|-CXXMethodDecl 0x55eaa36307a0 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55eaa3630710 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55eaa3633dd8 <col:55, line:550:5>
|   `-IfStmt 0x55eaa3633db0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55eaa3633a10 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55eaa36339f8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55eaa36339e0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55eaa36339c0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55eaa3633990 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55eaa33286c8
|     | |       `-DeclRefExpr 0x55eaa3633830 <col:6> 'const String' lvalue ParmVar 0x55eaa3630710 'x' 'const String &'
|     | `-BinaryOperator 0x55eaa3633970 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55eaa3633940 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55eaa36338f0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55eaa36338d8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55eaa3633890 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55eaa3341f00 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55eaa3633850 <col:11> 'const String' lvalue ParmVar 0x55eaa3630710 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55eaa3633870 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55eaa3633958 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55eaa3633928 <col:19> 'char' 123
|     |-ReturnStmt 0x55eaa3633a80 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55eaa3633a50 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55eaa3633a30 <col:13> 'const String' lvalue ParmVar 0x55eaa3630710 'x' 'const String &'
|     `-IfStmt 0x55eaa3633d88 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55eaa3633b18 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55eaa3633b00 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55eaa3633ae0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55eaa3633ab0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55eaa33286c8
|       |       `-DeclRefExpr 0x55eaa3633a90 <col:11> 'const String' lvalue ParmVar 0x55eaa3630710 'x' 'const String &'
|       |-ReturnStmt 0x55eaa3633ca0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55eaa3633c88 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55eaa3633c58 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55eaa3633c40 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55eaa3633c20 <col:13, col:29> 'String' (CXXTemporary 0x55eaa3633c20)
|       |         `-CallExpr 0x55eaa3633bd0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55eaa3633bb8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55eaa3633b30 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55eaa362feb0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55eaa3633c00 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55eaa3633b50 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55eaa3633b70 <col:28> 'const String' lvalue ParmVar 0x55eaa3630710 'x' 'const String &'
|       `-ReturnStmt 0x55eaa3633d78 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55eaa3633d60 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55eaa3633d30 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55eaa3633d18 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55eaa3633cf8 <col:13, col:20> 'String' (CXXTemporary 0x55eaa3633cf8)
|                 `-CXXTemporaryObjectExpr 0x55eaa3633cc0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55eaa3630968 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55eaa3630858 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55eaa36308d0 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55eaa36320a8 <col:71> 'bool' false
|-CXXRecordDecl 0x55eaa3630a18 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55eaa3630d18 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55eaa3630cb0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55eaa3630c50 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55eaa3630c10 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55eaa3324f60 'String'
|       | `-CXXRecord 0x55eaa3324ed0 'String'
|       |-BuiltinType 0x55eaa2ff7370 'int'
|       `-DecayedType 0x55eaa34dbef0 '__va_list_tag *' sugar
|         |-TypedefType 0x55eaa34dbec0 'va_list' sugar
|         | |-Typedef 0x55eaa3215df0 'va_list'
|         | `-TypedefType 0x55eaa3215da0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55eaa314d9c8 '__gnuc_va_list'
|         |   `-TypedefType 0x55eaa314d930 '__builtin_va_list' sugar
|         |     |-Typedef 0x55eaa3038bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55eaa3038b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55eaa2ff80c0 '__va_list_tag'
|         |         `-CXXRecord 0x55eaa2ff8028 '__va_list_tag'
|         `-PointerType 0x55eaa321b690 '__va_list_tag *'
|           `-RecordType 0x55eaa2ff80c0 '__va_list_tag'
|             `-CXXRecord 0x55eaa2ff8028 '__va_list_tag'
|-EnumDecl 0x55eaa3630d70 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55eaa3630e70 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55eaa36313d0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa3630e50 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55eaa3630e30 <col:16> 'int' 1
| |-EnumConstantDecl 0x55eaa3630f00 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55eaa36313e8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa3630ee0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55eaa3630ec0 <col:21> 'int' 2
| |-EnumConstantDecl 0x55eaa3630f90 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55eaa3631400 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa3630f70 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55eaa3630f50 <col:22> 'int' 4
| |-EnumConstantDecl 0x55eaa3631020 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55eaa3631418 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa3631000 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55eaa3630fe0 <col:17> 'int' 8
| |-EnumConstantDecl 0x55eaa36310b0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55eaa3631430 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa3631090 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55eaa3631070 <col:22> 'int' 16
| |-EnumConstantDecl 0x55eaa3631140 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55eaa3631448 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa3631120 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55eaa3631100 <col:19> 'int' 32
| |-EnumConstantDecl 0x55eaa36311d0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55eaa3631460 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa36311b0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55eaa3631190 <col:17> 'int' 64
| |-EnumConstantDecl 0x55eaa3631260 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55eaa3631478 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa3631240 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55eaa3631220 <col:14> 'int' 128
| |-EnumConstantDecl 0x55eaa36312f0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55eaa3631490 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa36312d0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55eaa36312b0 <col:16> 'int' 256
| `-EnumConstantDecl 0x55eaa3631380 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55eaa36314a8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55eaa3631360 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55eaa3631340 <col:12> 'int' 1024
|-CXXMethodDecl 0x55eaa36316b8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55eaa36314d0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55eaa3631570 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55eaa3631840 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55eaa3631778 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55eaa36318e8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55eaa3631928 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55eaa3631988 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55eaa3631a00 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55eaa3631e00 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55eaa3631a78 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55eaa3631af8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55eaa3631b78 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55eaa3631bf0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55eaa3631c68 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55eaa3631ce0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55eaa3631f28 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55eaa3631f28
| `-ParmVarDecl 0x55eaa3632038 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55eaa3634138 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55eaa3634138
  `-ParmVarDecl 0x55eaa3634248 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa34daf38 prev 0x55eaa351f1a8 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55eaa34db030 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55eaa34db0c0 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55eaa34db1f8 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55eaa34db0f8 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55eaa34dc620 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55eaa34dc600 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55eaa34dc198 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55eaa34dc6b0 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55eaa34dc670 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55eaa34db0f8 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55eaa34dc200 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55eaa34dc730 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55eaa34dc6f0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55eaa34dc260 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55eaa34dc770 <col:54> 'bool' false
| `-CompoundStmt 0x55eaa34dc878 <col:61, line:38:5>
|   `-BinaryOperator 0x55eaa34dc858 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55eaa34dc7f0 <col:9> 'const Element *' lvalue ->_context 0x55eaa34dc138
|     | `-CXXThisExpr 0x55eaa34dc7e0 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55eaa34dc840 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55eaa34dc820 <col:20> 'int' 0
|-CXXConstructorDecl 0x55eaa34db408 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55eaa34db2b8 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55eaa34db330 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55eaa34dc658 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55eaa34dc638 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55eaa34dc138 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55eaa34dc8d0 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55eaa34dc890 <col:20> 'const Element *' lvalue ParmVar 0x55eaa34db2b8 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55eaa34dc198 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55eaa34dc950 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55eaa34dc910 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55eaa34db330 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55eaa34dc200 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55eaa34dc9d0 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55eaa34dc990 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55eaa34dc260 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55eaa34dca10 <col:73> 'bool' false
| `-CompoundStmt 0x55eaa34dca88 <col:80, line:46:5>
|-CXXMethodDecl 0x55eaa34db538 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55eaa34dcb00 <col:36, line:51:5>
|   `-ReturnStmt 0x55eaa34dcaf0 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55eaa34dcad8 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55eaa34dcaa8 <col:16> 'const Element *const' lvalue ->_context 0x55eaa34dc138
|         `-CXXThisExpr 0x55eaa34dca98 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55eaa34db628 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55eaa34dcb80 <col:32, line:57:5>
|   `-ReturnStmt 0x55eaa34dcb70 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55eaa34dcb58 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55eaa34dcb28 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55eaa34dc198
|         `-CXXThisExpr 0x55eaa34dcb18 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55eaa34db6e8 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55eaa34db870 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55eaa34db7a0 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55eaa34db9c0 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55eaa34db930 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55eaa34dbb10 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55eaa34dba80 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55eaa34dbd18 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55eaa34dbbc8 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55eaa34dbc40 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55eaa34dc048 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55eaa34dbdd8 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55eaa34dbe58 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55eaa34dbf20 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55eaa34dc100 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55eaa34dc138 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55eaa34dc198 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55eaa34dc200 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55eaa34dc260 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55eaa34dc2b0 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55eaa34dc2b0
| `-ParmVarDecl 0x55eaa34dc3c8 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x55eaa34dc468 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55eaa34dc468
| `-ParmVarDecl 0x55eaa34dc578 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x55eaa3669808 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55eaa35e6e60 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55eaa35e7038 prev 0x55eaa35e6e60 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55eaa35e70c8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55eaa35e70f0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55eaa2ff7370 'int'
|-TypedefDecl 0x55eaa35e8cc0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55eaa35e8c70 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55eaa35e75a0 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55eaa35e74a0 'type'
|     `-TemplateSpecializationType 0x55eaa35e7430 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55eaa35e7310 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55eaa35e72f0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55eaa35e72d0 <col:24> 'unsigned long' 4
|       `-RecordType 0x55eaa35e7410 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55eaa35e7330 'char_array'
|-TypedefDecl 0x55eaa35e8d78 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55eaa35e8d40 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55eaa35e8d20 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55eaa35e8cc0 'type'
|     `-ElaboratedType 0x55eaa35e8c70 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55eaa35e75a0 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55eaa35e74a0 'type'
|         `-TemplateSpecializationType 0x55eaa35e7430 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55eaa35e7310 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55eaa35e72f0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55eaa35e72d0 <col:24> 'unsigned long' 4
|           `-RecordType 0x55eaa35e7410 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55eaa35e7330 'char_array'
|-CXXMethodDecl 0x55eaa35e8ef8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55eaa35e8e08 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55eaa35e8fe8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55eaa35e90c8 <line:23:5, col:20> col:5 ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55eaa35e9398 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55eaa35e92a0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55eaa35e95d8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55eaa35e9450 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55eaa35e94c8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55eaa35e97a8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55eaa35e9698 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55eaa35e9710 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55eaa35f2d20 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55eaa35f2df0 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55eaa35f3038 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55eaa35f2eb0 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55eaa35f2f28 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55eaa35f3298 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55eaa35f3108 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55eaa35f3180 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55eaa35f3458 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55eaa35f3368 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55eaa35f3618 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55eaa35f3520 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55eaa35f36d0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55eaa35f3780 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55eaa35f39b8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55eaa35f3830 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55eaa35f38a8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55eaa35f3c58 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55eaa35f3b60 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55eaa35f3d20 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55eaa35f3d70 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55eaa35f3dc0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55eaa35e5868 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55eaa35e5a78 prev 0x55eaa35e5868 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55eaa35e6dd0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55eaa35e6d80 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55eaa35e6d60 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55eaa35e6c10 'type'
|     `-SubstTemplateTypeParmType 0x55eaa35e6a30 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55eaa32bdb80 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55eaa32bdb28 'T'
|       `-RecordType 0x55eaa35e6580 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55eaa35e6498 'sized_array_memory'
|-FieldDecl 0x55eaa35f3e10 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55eaa35f3e60 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55eaa35f3e98 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55eaa35e5b10 'int' sugar
|   |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|   `-BuiltinType 0x55eaa2ff7370 'int'
|-TypedefDecl 0x55eaa35f3f28 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55eaa35f3ef0 'int &'
|   `-SubstTemplateTypeParmType 0x55eaa35e5b10 'int' sugar
|     |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|     `-BuiltinType 0x55eaa2ff7370 'int'
|-TypedefDecl 0x55eaa35f3fe8 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55eaa35f3fb0 'const int &'
|   `-QualType 0x55eaa35e5b11 'const int' const
|     `-SubstTemplateTypeParmType 0x55eaa35e5b10 'int' sugar
|       |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|       `-BuiltinType 0x55eaa2ff7370 'int'
|-TypedefDecl 0x55eaa35f4078 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55eaa35f4040 'int *'
|   `-SubstTemplateTypeParmType 0x55eaa35e5b10 'int' sugar
|     |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|     `-BuiltinType 0x55eaa2ff7370 'int'
|-TypedefDecl 0x55eaa35f4108 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55eaa35f40d0 'const int *'
|   `-QualType 0x55eaa35e5b11 'const int' const
|     `-SubstTemplateTypeParmType 0x55eaa35e5b10 'int' sugar
|       |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|       `-BuiltinType 0x55eaa2ff7370 'int'
|-TypedefDecl 0x55eaa35f4cf0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55eaa35f4ca0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55eaa35f4c80 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55eaa35f4c10 'type'
|     `-SubstTemplateTypeParmType 0x55eaa35f49d0 'int' sugar
|       |-TemplateTypeParmType 0x55eaa32c8ba0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55eaa32c8b50 'T'
|       `-BuiltinType 0x55eaa2ff7370 'int'
|-TypedefDecl 0x55eaa35f4d58 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55eaa35f3fb0 'const int &'
|   `-QualType 0x55eaa35e5b11 'const int' const
|     `-SubstTemplateTypeParmType 0x55eaa35e5b10 'int' sugar
|       |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|       `-BuiltinType 0x55eaa2ff7370 'int'
|-TypedefDecl 0x55eaa35f4db0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55eaa2ff7370 'int'
|-TypedefDecl 0x55eaa35f4e18 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55eaa35f4040 'int *'
|   `-SubstTemplateTypeParmType 0x55eaa35e5b10 'int' sugar
|     |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|     `-BuiltinType 0x55eaa2ff7370 'int'
|-TypedefDecl 0x55eaa35f4e80 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55eaa35f40d0 'const int *'
|   `-QualType 0x55eaa35e5b11 'const int' const
|     `-SubstTemplateTypeParmType 0x55eaa35e5b10 'int' sugar
|       |-TemplateTypeParmType 0x55eaa32f5a90 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55eaa32f5a38 'T'
|       `-BuiltinType 0x55eaa2ff7370 'int'
|-EnumDecl 0x55eaa35f4ed8 <line:134:5> col:5
| `-EnumConstantDecl 0x55eaa35f4fd0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55eaa35f4fb0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55eaa32f7118 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55eaa32f70f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55eaa32f70d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55eaa35f5058 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55eaa35f52a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55eaa35f5110 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55eaa35f51b0 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55eaa35f5568 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55eaa35f5450 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55eaa35f5828 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55eaa35f5710 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55eaa35f5b70 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55eaa35f5a50 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55eaa35f5e80 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55eaa35f5d60 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55eaa35f6170 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55eaa35f5fb8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55eaa35f6030 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55eaa35f6298 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55eaa35f6378 <col:20> Inherited
| `-OptimizeNoneAttr 0x55eaa35f63d0 <col:30> Inherited
|-CXXMethodDecl 0x55eaa35f6418 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55eaa35f64c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55eaa35f6520 <col:30> Inherited
|-CXXMethodDecl 0x55eaa35f65e8 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55eaa35f6698 <col:20> Inherited
| `-OptimizeNoneAttr 0x55eaa35f66f0 <col:30> Inherited
|-CXXMethodDecl 0x55eaa35f6738 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55eaa35f67e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55eaa35f6840 <col:30> Inherited
|-CXXMethodDecl 0x55eaa35f6888 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55eaa35f6938 <col:20> Inherited
| `-OptimizeNoneAttr 0x55eaa35f6990 <col:30> Inherited
|-CXXMethodDecl 0x55eaa35f69d8 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55eaa35f6a88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55eaa35f6ae0 <col:30> Inherited
|-CXXMethodDecl 0x55eaa35f6b08 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55eaa35f6bb8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55eaa35f6c68 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55eaa35f6e28 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55eaa35f6d18 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55eaa35f6d90 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55eaa35f6f78 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55eaa35f6ee8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55eaa35f7128 <line:163:5, col:65> col:43 operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55eaa35f7030 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55eaa35f71e0 <col:20>
| `-OptimizeNoneAttr 0x55eaa35f7238 <col:30>
|-CXXMethodDecl 0x55eaa35f7358 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55eaa35f7260 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55eaa35f7410 <col:20>
| `-OptimizeNoneAttr 0x55eaa35f7468 <col:30>
|-CXXMethodDecl 0x55eaa35f7520 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55eaa35f7490 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55eaa35f7668 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55eaa35f75d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55eaa35f7798 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55eaa35f78c8 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55eaa35f7998 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55eaa35f7a68 <line:170:5, col:28> col:21 back 'const int &() const' inline
|-CXXMethodDecl 0x55eaa35f7ba8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55eaa35f7b18 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55eaa35f7cf0 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55eaa35f7c60 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55eaa35f7e38 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55eaa35f7da8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55eaa35f7ef0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55eaa35f7ff0 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55eaa35f7f60 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55eaa35f80a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55eaa35f8168 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55eaa35f8268 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55eaa35f83e8 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55eaa35f8328 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55eaa35f8ba8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55eaa35f84a0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55eaa35f8b08 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55eaa35f8a08 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55eaa35f8c88 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55eaa35f8dd8 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55eaa35f8d48 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55eaa35f8e90 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55eaa35f90d8 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55eaa35f8f50 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55eaa35f8fc8 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55eaa35f9298 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55eaa35f91a8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55eaa35f94e8 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55eaa35f9360 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55eaa35f93d8 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55eaa35f95a8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55eaa35f9808 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55eaa35f9710 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55eaa35f98d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa35e39d8 prev 0x55eaa35cb4c8 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55eaa35e3ad0 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x55eaa35e3bc0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x55eaa360b570 <col:16, line:828:9>
|-CXXDestructorDecl 0x55eaa35e3cb0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x55eaa360b580 <col:25, line:830:9>
|-CXXMethodDecl 0x55eaa35e3db0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x55eaa35e3e60 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x55eaa35e3f08 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55eaa35e3f08
| `-ParmVarDecl 0x55eaa35e4018 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x55eaa35e47d8 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55eaa35e47d8
  `-ParmVarDecl 0x55eaa35e48e8 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa35cb2d8 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x55eaa35cb438 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x55eaa35cb4c8 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x55eaa35cb580 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x55eaa35cb688 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x55eaa35cb5b8 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55eaa35fc798 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55eaa35fc778 <col:31> 'int' 0
|-CXXConstructorDecl 0x55eaa35cb9a8 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x55eaa35cb820 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x55eaa35cb898 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55eaa35fc7d0 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55eaa35fc7b0 <col:59> 'int' 0
|-CXXConstructorDecl 0x55eaa35cbb80 <line:265:5, col:56> col:5 Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55eaa35cba70 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x55eaa35cbae8 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55eaa35fc808 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55eaa35fc7e8 <col:55> 'int' 0
|-CXXConstructorDecl 0x55eaa35cbf38 <line:271:5, line:272:32> line:271:5 used Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55eaa35cbd20 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x55eaa35cbd98 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x55eaa35cbe10 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55eaa35fc840 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55eaa35fc820 <col:31> 'int' 0
|-CXXConstructorDecl 0x55eaa35cc0f8 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x55eaa35cc038 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x55eaa35cc1f0 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x55eaa35cc3d8 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x55eaa35cc2e0 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x55eaa35cc4c8 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x55eaa35fcbf0 <col:24, line:291:5>
|   `-ReturnStmt 0x55eaa35fcbe0 <line:290:9, col:79>
|     `-BinaryOperator 0x55eaa35fcbc0 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x55eaa35fca98 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x55eaa35fc9f0 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x55eaa35fc9d0 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x55eaa35fc8c8 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x55eaa35fc8b0 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x55eaa35fc898 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x55eaa35fc868 <col:18> 'Vector<String> *const' lvalue ->_conf 0x55eaa35e5800
|       | |   |       `-CXXThisExpr 0x55eaa35fc858 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x55eaa35fc9b8 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x55eaa35fc9a0 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x55eaa35fc968 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x55eaa35fc938 <col:28, col:35> '<bound member function type>' ->size 0x55eaa35acfb8
|       | |           `-ImplicitCastExpr 0x55eaa35fc988 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x55eaa35fc920 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x55eaa35fc8f0 <col:28> 'Vector<String> *const' lvalue ->_conf 0x55eaa35e5800
|       | |                 `-CXXThisExpr 0x55eaa35fc8e0 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x55eaa35fca80 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x55eaa35fca68 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x55eaa35fca50 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x55eaa35fca20 <col:47> 'Args::Slot *const' lvalue ->_slots 0x55eaa35f9a20
|       |         `-CXXThisExpr 0x55eaa35fca10 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x55eaa35fcba0 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x55eaa35fcb88 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55eaa35fcb70 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55eaa35fcb30 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55eaa35fcb18 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55eaa35fcac8 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55eaa35f9ad0
|         |     |   `-CXXThisExpr 0x55eaa35fcab8 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55eaa35fcaf8 <col:73> 'int' 0
|         `-IntegerLiteral 0x55eaa35fcb50 <col:79> 'int' 0
|-CXXMethodDecl 0x55eaa35cc588 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x55eaa35fcdc8 <col:32, line:296:5>
|   `-ReturnStmt 0x55eaa35fcdb8 <line:295:9, col:49>
|     `-BinaryOperator 0x55eaa35fcd98 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x55eaa35fcc78 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x55eaa35fcc60 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55eaa35fcc48 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x55eaa35fcc18 <col:17> 'Args::Slot *const' lvalue ->_slots 0x55eaa35f9a20
|       |       `-CXXThisExpr 0x55eaa35fcc08 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x55eaa35fcd78 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x55eaa35fcd60 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55eaa35fcd48 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55eaa35fcd08 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55eaa35fccf0 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55eaa35fcca0 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55eaa35f9ad0
|         |     |   `-CXXThisExpr 0x55eaa35fcc90 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55eaa35fccd0 <col:43> 'int' 0
|         `-IntegerLiteral 0x55eaa35fcd28 <col:49> 'int' 0
|-CXXMethodDecl 0x55eaa35cc678 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x55eaa35fcfd8 <col:19, line:306:5>
|   |-IfStmt 0x55eaa35fcef8 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x55eaa35fce38 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x55eaa35fce20 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x55eaa35fcdf0 <col:13> 'Vector<String> *' lvalue ->_conf 0x55eaa35e5800
|   | |     `-CXXThisExpr 0x55eaa35fcde0 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x55eaa35fced8 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x55eaa35fcea8 <col:13, col:20> '<bound member function type>' ->clear 0x55eaa35af9b8
|   |     `-ImplicitCastExpr 0x55eaa35fce90 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x55eaa35fce60 <col:13> 'Vector<String> *' lvalue ->_conf 0x55eaa35e5800
|   |         `-CXXThisExpr 0x55eaa35fce50 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x55eaa35fcf80 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x55eaa35fcf50 <col:9, col:16> '<bound member function type>' .clear 0x55eaa35f95a8
|   |   `-MemberExpr 0x55eaa35fcf20 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x55eaa35f99c0
|   |     `-CXXThisExpr 0x55eaa35fcf10 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x55eaa35fcfc8 <line:305:9, col:17>
|     `-UnaryOperator 0x55eaa35fcfb0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55eaa35fcfa0 <col:17> 'Args *' this
|-CXXMethodDecl 0x55eaa35cc8f8 <line:313:5, col:36> col:11 bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x55eaa35cc800 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x55eaa35cca78 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x55eaa35cc9b0 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x55eaa35ccdf8 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x55eaa35ccb20 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x55eaa35ccd58 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x55eaa35ccbc8 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x55eaa35ccc40 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x55eaa35fd2f8 <col:67, line:327:5>
|     |-WhileStmt 0x55eaa35fd2a8 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x55eaa35fd0c0 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55eaa35fd040 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55eaa3517678 0x55eaa3360c58 0x55eaa3360930 0x55eaa3352110 0x55eaa3351dc0 0x55eaa33516b0 0x55eaa3324020 0x55eaa32b02c0
|     | | |-DeclRefExpr 0x55eaa35fd000 <col:16> 'Iter' lvalue ParmVar 0x55eaa35ccbc8 'begin' 'Iter'
|     | | `-DeclRefExpr 0x55eaa35fd020 <col:25> 'Iter' lvalue ParmVar 0x55eaa35ccc40 'end' 'Iter'
|     | `-CompoundStmt 0x55eaa35fd288 <col:30, line:325:9>
|     |   |-CallExpr 0x55eaa35fd228 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x55eaa35fd108 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x55eaa35fd1f8 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x55eaa35fd188 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55eaa351c7f8 0x55eaa351c418 0x55eaa351c048 0x55eaa351bc68 0x55eaa351b888 0x55eaa351b4b8
|     |   |   `-DeclRefExpr 0x55eaa35fd168 <col:24> 'Iter' lvalue ParmVar 0x55eaa35ccbc8 'begin' 'Iter'
|     |   `-UnaryOperator 0x55eaa35fd270 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x55eaa35fd250 <col:15> 'Iter' lvalue ParmVar 0x55eaa35ccbc8 'begin' 'Iter'
|     `-ReturnStmt 0x55eaa35fd2e8 <line:326:9, col:17>
|       `-UnaryOperator 0x55eaa35fd2d0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55eaa35fd2c0 <col:17> 'Args *' this
|-CXXMethodDecl 0x55eaa35ccf00 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x55eaa35cce70 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x55eaa35cd048 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x55eaa35ccfb8 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x55eaa35cd110 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x55eaa35fd3d8 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x55eaa35fd378 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x55eaa35fd328 <col:9> '<bound member function type>' ->reset_from 0x55eaa35f9e48
|   | | `-CXXThisExpr 0x55eaa35fd318 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x55eaa35fd358 <col:20> 'int' 0
|   `-ReturnStmt 0x55eaa35fd3c8 <line:352:9, col:17>
|     `-UnaryOperator 0x55eaa35fd3b0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55eaa35fd3a0 <col:17> 'Args *' this
|-VarDecl 0x55eaa35cd1c8 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x55eaa35cd230 <col:38> 'int' 1
|-VarDecl 0x55eaa35cd2c0 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x55eaa35cd328 <col:39> 'int' 2
|-VarDecl 0x55eaa35cd3b8 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x55eaa35cd420 <col:39> 'int' 4
|-VarDecl 0x55eaa35cd4b0 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x55eaa35cd518 <col:39> 'int' 8
|-FunctionTemplateDecl 0x55eaa35cd898 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x55eaa35cd590 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55eaa35cd7f8 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55eaa35cd640 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55eaa35cd6e8 <col:37, col:40> col:40 referenced x 'T &'
| | `-CompoundStmt 0x55eaa35fd530 <col:43, line:371:5>
| |   `-ReturnStmt 0x55eaa35fd520 <line:370:9, col:34>
| |     `-CallExpr 0x55eaa35fd4e8 <col:16, col:34> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55eaa35fd408 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55eaa35fd488 <col:21> 'const char *' lvalue ParmVar 0x55eaa35cd640 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55eaa35fd4a8 <col:30> 'int' 0
| |       `-DeclRefExpr 0x55eaa35fd4c8 <col:33> 'T' lvalue ParmVar 0x55eaa35cd6e8 'x' 'T &'
| `-CXXMethodDecl 0x55eaa3669c88 <line:369:5, line:371:5> line:369:11 used read 'Args &(const char *, bool &)'
|   |-TemplateArgument type 'bool'
|   |-ParmVarDecl 0x55eaa3669aa8 <col:16, col:28> col:28 keyword 'const char *'
|   `-ParmVarDecl 0x55eaa3669b78 <col:37, col:40> col:40 x 'bool &'
|-FunctionTemplateDecl 0x55eaa35cdbc8 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x55eaa35cd900 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55eaa35cdb28 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55eaa35cd9b0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35cda58 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55eaa35fd680 <col:45, line:375:5>
|     `-ReturnStmt 0x55eaa35fd670 <line:374:9, col:42>
|       `-CallExpr 0x55eaa35fd638 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35fd558 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35fd5d8 <col:21> 'const char *' lvalue ParmVar 0x55eaa35cd9b0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa35fd5f8 <col:30> 'const int' lvalue Var 0x55eaa35cd1c8 'mandatory' 'const int'
|         `-DeclRefExpr 0x55eaa35fd618 <col:41> 'T' lvalue ParmVar 0x55eaa35cda58 'x' 'T &'
|-FunctionTemplateDecl 0x55eaa35cdef8 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x55eaa35cdc30 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55eaa35cde58 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55eaa35cdce0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35cdd88 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55eaa35fd7d0 <col:45, line:379:5>
|     `-ReturnStmt 0x55eaa35fd7c0 <line:378:9, col:43>
|       `-CallExpr 0x55eaa35fd788 <col:16, col:43> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35fd6a8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35fd728 <col:21> 'const char *' lvalue ParmVar 0x55eaa35cdce0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa35fd748 <col:30> 'const int' lvalue Var 0x55eaa35cd2c0 'positional' 'const int'
|         `-DeclRefExpr 0x55eaa35fd768 <col:42> 'T' lvalue ParmVar 0x55eaa35cdd88 'x' 'T &'
|-FunctionTemplateDecl 0x55eaa35ce228 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x55eaa35cdf60 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55eaa35ce188 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55eaa35ce010 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35ce0b8 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x55eaa35fd9d0 <col:46, line:383:5>
|     `-ReturnStmt 0x55eaa35fd9c0 <line:382:9, col:55>
|       `-CallExpr 0x55eaa35fd988 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35fd7f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35fd878 <col:21> 'const char *' lvalue ParmVar 0x55eaa35ce010 'keyword' 'const char *'
|         |-BinaryOperator 0x55eaa35fd948 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55eaa35fd8f8 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55eaa35fd8d8 <col:30> 'const int' lvalue Var 0x55eaa35cd1c8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55eaa35fd930 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55eaa35fd910 <col:42> 'const int' lvalue Var 0x55eaa35cd2c0 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55eaa35fd968 <col:54> 'T' lvalue ParmVar 0x55eaa35ce0b8 'x' 'T &'
|-FunctionTemplateDecl 0x55eaa35ce628 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x55eaa35ce290 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55eaa35ce588 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x55eaa35ce340 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35ce3c0 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35ce468 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x55eaa35fdb10 <col:54, line:388:5>
|     |-CallExpr 0x55eaa35fda98 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55eaa35fd9e8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55eaa35fda28 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55eaa35fda38 <col:30> 'const char *' lvalue ParmVar 0x55eaa35ce340 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55eaa35fda58 <col:39> 'int' lvalue ParmVar 0x55eaa35ce3c0 'flags' 'int'
|     | `-DeclRefExpr 0x55eaa35fda78 <col:46> 'T' lvalue ParmVar 0x55eaa35ce468 'x' 'T &'
|     `-ReturnStmt 0x55eaa35fdb00 <line:387:9, col:17>
|       `-UnaryOperator 0x55eaa35fdae8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55eaa35fdad8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55eaa35cead8 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x55eaa35ce698 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55eaa35ce718 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55eaa35cea38 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55eaa35ce7d8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35ce878 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x55eaa35ce918 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x55eaa35fdc80 <col:74, line:403:5>
|     `-ReturnStmt 0x55eaa35fdc70 <line:402:9, col:56>
|       `-CallExpr 0x55eaa35fdc30 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35fdb40 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35fdbb0 <col:28> 'const char *' lvalue ParmVar 0x55eaa35ce7d8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55eaa35fdbd0 <col:37> 'int' 0
|         |-DeclRefExpr 0x55eaa35fdbf0 <col:40> 'T' lvalue ParmVar 0x55eaa35ce878 'x' 'T &'
|         `-DeclRefExpr 0x55eaa35fdc10 <col:43> 'const V' lvalue ParmVar 0x55eaa35ce918 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55eaa35cef48 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55eaa35ceb48 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55eaa35cebc8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55eaa35ceea8 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55eaa35cec88 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35ced28 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x55eaa35cedc8 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x55eaa35fdde8 <col:76, line:407:5>
|     `-ReturnStmt 0x55eaa35fddd8 <line:406:9, col:65>
|       `-CallExpr 0x55eaa35fdd98 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35fdca8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35fdd18 <col:28> 'const char *' lvalue ParmVar 0x55eaa35cec88 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa35fdd38 <col:37> 'const int' lvalue Var 0x55eaa35cd2c0 'positional' 'const int'
|         |-DeclRefExpr 0x55eaa35fdd58 <col:49> 'T' lvalue ParmVar 0x55eaa35ced28 'x' 'T &'
|         `-DeclRefExpr 0x55eaa35fdd78 <col:52> 'const V' lvalue ParmVar 0x55eaa35cedc8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55eaa35cf498 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x55eaa35cefb8 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55eaa35cf038 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55eaa35cf3f8 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55eaa35cf0f8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35cf178 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35cf218 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x55eaa35cf2b8 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x55eaa35fdf50 <col:85, line:412:5>
|     |-CallExpr 0x55eaa35fded0 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55eaa35fde00 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55eaa35fde40 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55eaa35fde50 <col:37> 'const char *' lvalue ParmVar 0x55eaa35cf0f8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55eaa35fde70 <col:46> 'int' lvalue ParmVar 0x55eaa35cf178 'flags' 'int'
|     | |-DeclRefExpr 0x55eaa35fde90 <col:53> 'T' lvalue ParmVar 0x55eaa35cf218 'x' 'T &'
|     | `-DeclRefExpr 0x55eaa35fdeb0 <col:56> 'const V' lvalue ParmVar 0x55eaa35cf2b8 'default_value' 'const V &'
|     `-ReturnStmt 0x55eaa35fdf40 <line:411:9, col:17>
|       `-UnaryOperator 0x55eaa35fdf28 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55eaa35fdf18 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55eaa35cf928 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x55eaa35cf510 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35cf588 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35cf888 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55eaa35cf648 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35cf6c0 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35cf768 <col:47, col:50> col:50 referenced x 'T &'
|   `-CompoundStmt 0x55eaa35fe0d0 <col:53, line:425:5>
|     `-ReturnStmt 0x55eaa35fe0c0 <line:424:9, col:42>
|       `-CallExpr 0x55eaa35fe080 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35fdf80 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35fe000 <col:21> 'const char *' lvalue ParmVar 0x55eaa35cf648 'keyword' 'const char *'
|         |-IntegerLiteral 0x55eaa35fe020 <col:30> 'int' 0
|         |-DeclRefExpr 0x55eaa35fe040 <col:33> 'P' lvalue ParmVar 0x55eaa35cf6c0 'parser' 'P'
|         `-DeclRefExpr 0x55eaa35fe060 <col:41> 'T' lvalue ParmVar 0x55eaa35cf768 'x' 'T &'
|-FunctionTemplateDecl 0x55eaa35cfd78 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x55eaa35cf998 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35cfa18 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35cfcd8 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55eaa35cfad8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35cfb50 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35cfbf8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55eaa35fe248 <col:55, line:429:5>
|     `-ReturnStmt 0x55eaa35fe238 <line:428:9, col:50>
|       `-CallExpr 0x55eaa35fe1f8 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35fe0f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35fe178 <col:21> 'const char *' lvalue ParmVar 0x55eaa35cfad8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa35fe198 <col:30> 'const int' lvalue Var 0x55eaa35cd1c8 'mandatory' 'const int'
|         |-DeclRefExpr 0x55eaa35fe1b8 <col:41> 'P' lvalue ParmVar 0x55eaa35cfb50 'parser' 'P'
|         `-DeclRefExpr 0x55eaa35fe1d8 <col:49> 'T' lvalue ParmVar 0x55eaa35cfbf8 'x' 'T &'
|-FunctionTemplateDecl 0x55eaa35d01c8 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x55eaa35cfde8 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35cfe68 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35d0128 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55eaa35cff28 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35cffa0 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d0048 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55eaa35fe3c0 <col:55, line:433:5>
|     `-ReturnStmt 0x55eaa35fe3b0 <line:432:9, col:51>
|       `-CallExpr 0x55eaa35fe370 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35fe270 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35fe2f0 <col:21> 'const char *' lvalue ParmVar 0x55eaa35cff28 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa35fe310 <col:30> 'const int' lvalue Var 0x55eaa35cd2c0 'positional' 'const int'
|         |-DeclRefExpr 0x55eaa35fe330 <col:42> 'P' lvalue ParmVar 0x55eaa35cffa0 'parser' 'P'
|         `-DeclRefExpr 0x55eaa35fe350 <col:50> 'T' lvalue ParmVar 0x55eaa35d0048 'x' 'T &'
|-FunctionTemplateDecl 0x55eaa35d0618 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x55eaa35d0238 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d02b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35d0578 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55eaa35d0378 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d03f0 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d0498 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x55eaa35fe5e8 <col:56, line:437:5>
|     `-ReturnStmt 0x55eaa35fe5d8 <line:436:9, col:63>
|       `-CallExpr 0x55eaa35fe598 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35fe3e8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35fe468 <col:21> 'const char *' lvalue ParmVar 0x55eaa35d0378 'keyword' 'const char *'
|         |-BinaryOperator 0x55eaa35fe538 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55eaa35fe4e8 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55eaa35fe4c8 <col:30> 'const int' lvalue Var 0x55eaa35cd1c8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55eaa35fe520 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55eaa35fe500 <col:42> 'const int' lvalue Var 0x55eaa35cd2c0 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55eaa35fe558 <col:54> 'P' lvalue ParmVar 0x55eaa35d03f0 'parser' 'P'
|         `-DeclRefExpr 0x55eaa35fe578 <col:62> 'T' lvalue ParmVar 0x55eaa35d0498 'x' 'T &'
|-FunctionTemplateDecl 0x55eaa35d0b48 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x55eaa35d0688 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d0708 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35d0aa8 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55eaa35d07c8 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d0848 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35d08c0 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d0968 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x55eaa35fe750 <col:64, line:442:5>
|     |-CallExpr 0x55eaa35fe6d0 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55eaa35fe600 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55eaa35fe640 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55eaa35fe650 <col:30> 'const char *' lvalue ParmVar 0x55eaa35d07c8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55eaa35fe670 <col:39> 'int' lvalue ParmVar 0x55eaa35d0848 'flags' 'int'
|     | |-DeclRefExpr 0x55eaa35fe690 <col:46> 'P' lvalue ParmVar 0x55eaa35d08c0 'parser' 'P'
|     | `-DeclRefExpr 0x55eaa35fe6b0 <col:54> 'T' lvalue ParmVar 0x55eaa35d0968 'x' 'T &'
|     `-ReturnStmt 0x55eaa35fe740 <line:441:9, col:17>
|       `-UnaryOperator 0x55eaa35fe728 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55eaa35fe718 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55eaa35d1148 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x55eaa35d0bc0 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d0c38 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55eaa35d0cb8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55eaa35d10a8 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55eaa35d0d80 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d0df8 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d0e98 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x55eaa35d0f68 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x55eaa35fe8e8 <col:84, line:458:5>
|     `-ReturnStmt 0x55eaa35fe8d8 <line:457:9, col:64>
|       `-CallExpr 0x55eaa35fe890 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35fe780 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35fe7f0 <col:28> 'const char *' lvalue ParmVar 0x55eaa35d0d80 'keyword' 'const char *'
|         |-IntegerLiteral 0x55eaa35fe810 <col:37> 'int' 0
|         |-DeclRefExpr 0x55eaa35fe830 <col:40> 'P' lvalue ParmVar 0x55eaa35d0df8 'parser' 'P'
|         |-DeclRefExpr 0x55eaa35fe850 <col:48> 'T' lvalue ParmVar 0x55eaa35d0e98 'x' 'T &'
|         `-DeclRefExpr 0x55eaa35fe870 <col:51> 'const V' lvalue ParmVar 0x55eaa35d0f68 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55eaa35d16c8 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55eaa35d11c0 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d1238 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55eaa35d12b8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55eaa35d1628 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55eaa35d1380 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d13f8 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d1498 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x55eaa35d1538 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x55eaa35fea78 <col:86, line:462:5>
|     `-ReturnStmt 0x55eaa35fea68 <line:461:9, col:73>
|       `-CallExpr 0x55eaa35fea20 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35fe910 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35fe980 <col:28> 'const char *' lvalue ParmVar 0x55eaa35d1380 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa35fe9a0 <col:37> 'const int' lvalue Var 0x55eaa35cd2c0 'positional' 'const int'
|         |-DeclRefExpr 0x55eaa35fe9c0 <col:49> 'P' lvalue ParmVar 0x55eaa35d13f8 'parser' 'P'
|         |-DeclRefExpr 0x55eaa35fe9e0 <col:57> 'T' lvalue ParmVar 0x55eaa35d1498 'x' 'T &'
|         `-DeclRefExpr 0x55eaa35fea00 <col:60> 'const V' lvalue ParmVar 0x55eaa35d1538 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55eaa35d1d28 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x55eaa35d1740 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d17b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55eaa35d1838 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55eaa35d1c88 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55eaa35d1900 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d1980 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35d19f8 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d1a98 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x55eaa35d1b38 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x55eaa35fec08 <col:95, line:467:5>
|     |-CallExpr 0x55eaa35feb80 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55eaa35fea90 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55eaa35fead0 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55eaa35feae0 <col:37> 'const char *' lvalue ParmVar 0x55eaa35d1900 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55eaa35feb00 <col:46> 'int' lvalue ParmVar 0x55eaa35d1980 'flags' 'int'
|     | |-DeclRefExpr 0x55eaa35feb20 <col:53> 'P' lvalue ParmVar 0x55eaa35d19f8 'parser' 'P'
|     | |-DeclRefExpr 0x55eaa35feb40 <col:61> 'T' lvalue ParmVar 0x55eaa35d1a98 'x' 'T &'
|     | `-DeclRefExpr 0x55eaa35feb60 <col:64> 'const V' lvalue ParmVar 0x55eaa35d1b38 'default_value' 'const V &'
|     `-ReturnStmt 0x55eaa35febf8 <line:466:9, col:17>
|       `-UnaryOperator 0x55eaa35febe0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55eaa35febd0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55eaa35d2308 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x55eaa35d1da8 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d1e28 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55eaa35d1ea8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55eaa35d2268 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55eaa35d1f70 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d1fe8 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d2088 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55eaa35d2128 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x55eaa35fedb0 <col:63, line:481:5>
|     `-ReturnStmt 0x55eaa35feda0 <line:480:9, col:47>
|       `-CallExpr 0x55eaa35fed58 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35fec38 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35fecb8 <col:21> 'const char *' lvalue ParmVar 0x55eaa35d1f70 'keyword' 'const char *'
|         |-IntegerLiteral 0x55eaa35fecd8 <col:30> 'int' 0
|         |-DeclRefExpr 0x55eaa35fecf8 <col:33> 'P' lvalue ParmVar 0x55eaa35d1fe8 'parser' 'P'
|         |-DeclRefExpr 0x55eaa35fed18 <col:41> 'T1' lvalue ParmVar 0x55eaa35d2088 'x1' 'T1 &'
|         `-DeclRefExpr 0x55eaa35fed38 <col:45> 'T2' lvalue ParmVar 0x55eaa35d2128 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55eaa35d2a98 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x55eaa35d2380 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d23f8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55eaa35d2478 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55eaa35d29f8 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55eaa35d2540 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d25b8 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d2860 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55eaa35d2908 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55eaa35fef50 <col:65, line:485:5>
|     `-ReturnStmt 0x55eaa35fef40 <line:484:9, col:55>
|       `-CallExpr 0x55eaa35feef8 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35fedd8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35fee58 <col:21> 'const char *' lvalue ParmVar 0x55eaa35d2540 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa35fee78 <col:30> 'const int' lvalue Var 0x55eaa35cd1c8 'mandatory' 'const int'
|         |-DeclRefExpr 0x55eaa35fee98 <col:41> 'P' lvalue ParmVar 0x55eaa35d25b8 'parser' 'P'
|         |-DeclRefExpr 0x55eaa35feeb8 <col:49> 'T1' lvalue ParmVar 0x55eaa35d2860 'x1' 'T1 &'
|         `-DeclRefExpr 0x55eaa35feed8 <col:53> 'T2' lvalue ParmVar 0x55eaa35d2908 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55eaa35d3018 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x55eaa35d2b10 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d2b88 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55eaa35d2c08 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55eaa35d2f78 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55eaa35d2cd0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d2d48 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d2de8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55eaa35d2e88 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55eaa35ff0f0 <col:65, line:489:5>
|     `-ReturnStmt 0x55eaa35ff0e0 <line:488:9, col:56>
|       `-CallExpr 0x55eaa35ff098 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35fef78 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35feff8 <col:21> 'const char *' lvalue ParmVar 0x55eaa35d2cd0 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa35ff018 <col:30> 'const int' lvalue Var 0x55eaa35cd2c0 'positional' 'const int'
|         |-DeclRefExpr 0x55eaa35ff038 <col:42> 'P' lvalue ParmVar 0x55eaa35d2d48 'parser' 'P'
|         |-DeclRefExpr 0x55eaa35ff058 <col:50> 'T1' lvalue ParmVar 0x55eaa35d2de8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55eaa35ff078 <col:54> 'T2' lvalue ParmVar 0x55eaa35d2e88 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55eaa35d3598 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x55eaa35d3090 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d3108 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55eaa35d3188 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55eaa35d34f8 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55eaa35d3250 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d32c8 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d3368 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55eaa35d3408 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x55eaa35ff340 <col:66, line:493:5>
|     `-ReturnStmt 0x55eaa35ff330 <line:492:9, col:68>
|       `-CallExpr 0x55eaa35ff2e8 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35ff118 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35ff198 <col:21> 'const char *' lvalue ParmVar 0x55eaa35d3250 'keyword' 'const char *'
|         |-BinaryOperator 0x55eaa35ff268 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55eaa35ff218 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55eaa35ff1f8 <col:30> 'const int' lvalue Var 0x55eaa35cd1c8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55eaa35ff250 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55eaa35ff230 <col:42> 'const int' lvalue Var 0x55eaa35cd2c0 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55eaa35ff288 <col:54> 'P' lvalue ParmVar 0x55eaa35d32c8 'parser' 'P'
|         |-DeclRefExpr 0x55eaa35ff2a8 <col:62> 'T1' lvalue ParmVar 0x55eaa35d3368 'x1' 'T1 &'
|         `-DeclRefExpr 0x55eaa35ff2c8 <col:66> 'T2' lvalue ParmVar 0x55eaa35d3408 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55eaa35d3bf8 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x55eaa35d3610 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d3688 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55eaa35d3708 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55eaa35d3b58 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55eaa35d37d0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d3850 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35d38c8 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d3968 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55eaa35d3a08 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x55eaa35ff4d0 <col:74, line:498:5>
|     |-CallExpr 0x55eaa35ff448 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55eaa35ff358 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55eaa35ff398 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55eaa35ff3a8 <col:30> 'const char *' lvalue ParmVar 0x55eaa35d37d0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55eaa35ff3c8 <col:39> 'int' lvalue ParmVar 0x55eaa35d3850 'flags' 'int'
|     | |-DeclRefExpr 0x55eaa35ff3e8 <col:46> 'P' lvalue ParmVar 0x55eaa35d38c8 'parser' 'P'
|     | |-DeclRefExpr 0x55eaa35ff408 <col:54> 'T1' lvalue ParmVar 0x55eaa35d3968 'x1' 'T1 &'
|     | `-DeclRefExpr 0x55eaa35ff428 <col:58> 'T2' lvalue ParmVar 0x55eaa35d3a08 'x2' 'T2 &'
|     `-ReturnStmt 0x55eaa35ff4c0 <line:497:9, col:17>
|       `-UnaryOperator 0x55eaa35ff4a8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55eaa35ff498 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55eaa35d3f58 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x55eaa35d3c78 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55eaa35d3eb8 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55eaa35d3d30 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d3da8 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x55eaa35ff618 <col:52, line:509:5>
|     `-ReturnStmt 0x55eaa35ff608 <line:508:9, col:44>
|       `-CallExpr 0x55eaa35ff5d0 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35ff500 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35ff570 <col:26> 'const char *' lvalue ParmVar 0x55eaa35d3d30 'keyword' 'const char *'
|         |-IntegerLiteral 0x55eaa35ff590 <col:35> 'int' 0
|         `-DeclRefExpr 0x55eaa35ff5b0 <col:38> 'P' lvalue ParmVar 0x55eaa35d3da8 'parser' 'P'
|-FunctionTemplateDecl 0x55eaa35d4258 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x55eaa35d3fc0 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55eaa35d41b8 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55eaa35d4070 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d40e8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55eaa35ff758 <col:54, line:513:5>
|     `-ReturnStmt 0x55eaa35ff748 <line:512:9, col:52>
|       `-CallExpr 0x55eaa35ff710 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35ff640 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35ff6b0 <col:26> 'const char *' lvalue ParmVar 0x55eaa35d4070 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa35ff6d0 <col:35> 'const int' lvalue Var 0x55eaa35cd1c8 'mandatory' 'const int'
|         `-DeclRefExpr 0x55eaa35ff6f0 <col:46> 'P' lvalue ParmVar 0x55eaa35d40e8 'parser' 'P'
|-FunctionTemplateDecl 0x55eaa35d4558 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x55eaa35d42c0 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55eaa35d44b8 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55eaa35d4370 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d43e8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55eaa35ff898 <col:54, line:517:5>
|     `-ReturnStmt 0x55eaa35ff888 <line:516:9, col:53>
|       `-CallExpr 0x55eaa35ff850 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35ff780 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35ff7f0 <col:26> 'const char *' lvalue ParmVar 0x55eaa35d4370 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa35ff810 <col:35> 'const int' lvalue Var 0x55eaa35cd2c0 'positional' 'const int'
|         `-DeclRefExpr 0x55eaa35ff830 <col:47> 'P' lvalue ParmVar 0x55eaa35d43e8 'parser' 'P'
|-FunctionTemplateDecl 0x55eaa35d4858 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x55eaa35d45c0 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55eaa35d47b8 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55eaa35d4670 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d46e8 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x55eaa35ffa88 <col:55, line:521:5>
|     `-ReturnStmt 0x55eaa35ffa78 <line:520:9, col:65>
|       `-CallExpr 0x55eaa35ffa40 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35ff8c0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35ff930 <col:26> 'const char *' lvalue ParmVar 0x55eaa35d4670 'keyword' 'const char *'
|         |-BinaryOperator 0x55eaa35ffa00 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x55eaa35ff9b0 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55eaa35ff990 <col:35> 'const int' lvalue Var 0x55eaa35cd1c8 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55eaa35ff9e8 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55eaa35ff9c8 <col:47> 'const int' lvalue Var 0x55eaa35cd2c0 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55eaa35ffa20 <col:59> 'P' lvalue ParmVar 0x55eaa35d46e8 'parser' 'P'
|-FunctionTemplateDecl 0x55eaa35d4c28 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x55eaa35d48c0 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55eaa35d4b88 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55eaa35d4970 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d49f0 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35d4a68 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x55eaa35ffbc8 <col:63, line:526:5>
|     |-CallExpr 0x55eaa35ffb50 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55eaa35ffaa0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x55eaa35ffae0 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x55eaa35ffaf0 <col:35> 'const char *' lvalue ParmVar 0x55eaa35d4970 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55eaa35ffb10 <col:44> 'int' lvalue ParmVar 0x55eaa35d49f0 'flags' 'int'
|     | `-DeclRefExpr 0x55eaa35ffb30 <col:51> 'P' lvalue ParmVar 0x55eaa35d4a68 'parser' 'P'
|     `-ReturnStmt 0x55eaa35ffbb8 <line:525:9, col:17>
|       `-UnaryOperator 0x55eaa35ffba0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55eaa35ffb90 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55eaa35d5078 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x55eaa35d4c98 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d4d18 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35d4fd8 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55eaa35d4dd8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d4e50 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d4ef8 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x55eaa35ffd20 <col:58, line:541:5>
|     `-ReturnStmt 0x55eaa35ffd10 <line:540:9, col:39>
|       `-CallExpr 0x55eaa35ffcd8 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35ffbf8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35ffc78 <col:21> 'const char *' lvalue ParmVar 0x55eaa35d4dd8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa35ffc98 <col:30> 'P' lvalue ParmVar 0x55eaa35d4e50 'parser' 'P'
|         `-DeclRefExpr 0x55eaa35ffcb8 <col:38> 'T' lvalue ParmVar 0x55eaa35d4ef8 'x' 'T &'
|-FunctionTemplateDecl 0x55eaa35d54c8 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x55eaa35d50e8 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d5168 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35d5428 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55eaa35d5228 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d52a0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d5348 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55eaa35ffe58 <col:60, line:545:5>
|     `-ReturnStmt 0x55eaa35ffe48 <line:544:9, col:41>
|       `-CallExpr 0x55eaa35ffe10 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35ffd48 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35ffdb0 <col:23> 'const char *' lvalue ParmVar 0x55eaa35d5228 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa35ffdd0 <col:32> 'P' lvalue ParmVar 0x55eaa35d52a0 'parser' 'P'
|         `-DeclRefExpr 0x55eaa35ffdf0 <col:40> 'T' lvalue ParmVar 0x55eaa35d5348 'x' 'T &'
|-FunctionTemplateDecl 0x55eaa35d5918 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x55eaa35d5538 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d55b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35d5878 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55eaa35d5678 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d56f0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d5798 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55eaa35fff90 <col:60, line:549:5>
|     `-ReturnStmt 0x55eaa35fff80 <line:548:9, col:41>
|       `-CallExpr 0x55eaa35fff48 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35ffe80 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa35ffee8 <col:23> 'const char *' lvalue ParmVar 0x55eaa35d5678 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa35fff08 <col:32> 'P' lvalue ParmVar 0x55eaa35d56f0 'parser' 'P'
|         `-DeclRefExpr 0x55eaa35fff28 <col:40> 'T' lvalue ParmVar 0x55eaa35d5798 'x' 'T &'
|-FunctionTemplateDecl 0x55eaa35d5d68 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x55eaa35d5988 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d5a08 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35d5cc8 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55eaa35d5ac8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d5b40 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d5be8 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x55eaa36000c8 <col:61, line:553:5>
|     `-ReturnStmt 0x55eaa36000b8 <line:552:9, col:42>
|       `-CallExpr 0x55eaa3600080 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa35fffb8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa3600020 <col:24> 'const char *' lvalue ParmVar 0x55eaa35d5ac8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa3600040 <col:33> 'P' lvalue ParmVar 0x55eaa35d5b40 'parser' 'P'
|         `-DeclRefExpr 0x55eaa3600060 <col:41> 'T' lvalue ParmVar 0x55eaa35d5be8 'x' 'T &'
|-FunctionTemplateDecl 0x55eaa35d6248 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x55eaa35d5dd8 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d5e58 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35d61a8 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55eaa35d5f18 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d5f98 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35d6010 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d60b8 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x55eaa3600240 <col:69, line:557:5>
|     `-ReturnStmt 0x55eaa3600230 <line:556:9, col:46>
|       `-CallExpr 0x55eaa36001f0 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa36000f0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa3600170 <col:21> 'const char *' lvalue ParmVar 0x55eaa35d5f18 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa3600190 <col:30> 'int' lvalue ParmVar 0x55eaa35d5f98 'flags' 'int'
|         |-DeclRefExpr 0x55eaa36001b0 <col:37> 'P' lvalue ParmVar 0x55eaa35d6010 'parser' 'P'
|         `-DeclRefExpr 0x55eaa36001d0 <col:45> 'T' lvalue ParmVar 0x55eaa35d60b8 'x' 'T &'
|-FunctionTemplateDecl 0x55eaa35d6558 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x55eaa35d62c0 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55eaa35d64b8 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55eaa35d6370 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d63e8 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x55eaa3600380 <col:56, line:571:5>
|     `-ReturnStmt 0x55eaa3600370 <line:570:9, col:48>
|       `-CallExpr 0x55eaa3600338 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa3600268 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa36002d8 <col:30> 'const char *' lvalue ParmVar 0x55eaa35d6370 'keyword' 'const char *'
|         |-IntegerLiteral 0x55eaa36002f8 <col:39> 'int' 0
|         `-DeclRefExpr 0x55eaa3600318 <col:42> 'P' lvalue ParmVar 0x55eaa35d63e8 'parser' 'P'
|-FunctionTemplateDecl 0x55eaa35d68e8 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x55eaa35d65c0 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55eaa35d6848 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55eaa35d6670 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d66f0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35d6768 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55eaa3600550 <col:67, line:576:5>
|     |-CallExpr 0x55eaa36004d8 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55eaa3600398 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55eaa36003d8 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55eaa36003e8 <col:39> 'const char *' lvalue ParmVar 0x55eaa35d6670 'keyword' 'const char *'
|     | |-BinaryOperator 0x55eaa3600498 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55eaa3600448 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55eaa3600408 <col:48> 'int' lvalue ParmVar 0x55eaa35d66f0 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55eaa3600480 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55eaa3600460 <col:56> 'const int' lvalue Var 0x55eaa35cd4b0 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x55eaa36004b8 <col:68> 'P' lvalue ParmVar 0x55eaa35d6768 'parser' 'P'
|     `-ReturnStmt 0x55eaa3600540 <line:575:9, col:17>
|       `-UnaryOperator 0x55eaa3600528 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55eaa3600518 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55eaa35d6d38 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x55eaa35d6958 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d69d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35d6c98 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55eaa35d6a98 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d6b10 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d6bb8 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x55eaa36006c0 <col:62, line:592:5>
|     `-ReturnStmt 0x55eaa36006b0 <line:591:9, col:51>
|       `-CallExpr 0x55eaa3600670 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa3600580 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa36005f0 <col:30> 'const char *' lvalue ParmVar 0x55eaa35d6a98 'keyword' 'const char *'
|         |-IntegerLiteral 0x55eaa3600610 <col:39> 'int' 0
|         |-DeclRefExpr 0x55eaa3600630 <col:42> 'P' lvalue ParmVar 0x55eaa35d6b10 'parser' 'P'
|         `-DeclRefExpr 0x55eaa3600650 <col:50> 'T' lvalue ParmVar 0x55eaa35d6bb8 'x' 'T &'
|-FunctionTemplateDecl 0x55eaa35d7218 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x55eaa35d6da8 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d6e28 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35d7178 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55eaa35d6ee8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d6f68 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35d6fe0 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d7088 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x55eaa36008b8 <col:73, line:597:5>
|     |-CallExpr 0x55eaa3600838 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55eaa36006d8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55eaa3600718 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55eaa3600728 <col:39> 'const char *' lvalue ParmVar 0x55eaa35d6ee8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55eaa36007d8 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55eaa3600788 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55eaa3600748 <col:48> 'int' lvalue ParmVar 0x55eaa35d6f68 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55eaa36007c0 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55eaa36007a0 <col:56> 'const int' lvalue Var 0x55eaa35cd4b0 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55eaa36007f8 <col:68> 'P' lvalue ParmVar 0x55eaa35d6fe0 'parser' 'P'
|     | `-DeclRefExpr 0x55eaa3600818 <col:76> 'T' lvalue ParmVar 0x55eaa35d7088 'x' 'T &'
|     `-ReturnStmt 0x55eaa36008a8 <line:596:9, col:17>
|       `-UnaryOperator 0x55eaa3600890 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55eaa3600880 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55eaa35d77c8 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x55eaa35d7290 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d7308 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35d7728 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x55eaa35d73c8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d7440 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d7600 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55eaa3600a28 <col:65, line:614:5>
|     `-ReturnStmt 0x55eaa3600a18 <line:613:9, col:46>
|       `-CallExpr 0x55eaa36009d8 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa36008e8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa3600958 <col:25> 'const char *' lvalue ParmVar 0x55eaa35d73c8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55eaa3600978 <col:34> 'int' 0
|         |-DeclRefExpr 0x55eaa3600998 <col:37> 'P' lvalue ParmVar 0x55eaa35d7440 'parser' 'P'
|         `-DeclRefExpr 0x55eaa36009b8 <col:45> 'Vector<T>' lvalue ParmVar 0x55eaa35d7600 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55eaa35d7bf8 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x55eaa35d7838 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55eaa35d7b58 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x55eaa35d78f0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d7a40 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55eaa3600c40 <col:55, line:618:5>
|     `-ReturnStmt 0x55eaa3600c30 <line:617:9, col:55>
|       `-CallExpr 0x55eaa3600bf0 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa3600a50 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa3600ac0 <col:25> 'const char *' lvalue ParmVar 0x55eaa35d78f0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55eaa3600ae0 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x55eaa3600bb0 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55eaa3600bd0 <col:54> 'Vector<T>' lvalue ParmVar 0x55eaa35d7a40 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55eaa35d81c8 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x55eaa35d7c60 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d7cd8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35d8128 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55eaa35d7d98 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d7e18 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35d7e90 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35d7fe0 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55eaa3600e38 <col:76, line:623:5>
|     |-CallExpr 0x55eaa3600db8 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55eaa3600c58 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x55eaa3600c98 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x55eaa3600ca8 <col:34> 'const char *' lvalue ParmVar 0x55eaa35d7d98 'keyword' 'const char *'
|     | |-BinaryOperator 0x55eaa3600d58 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x55eaa3600d08 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55eaa3600cc8 <col:43> 'int' lvalue ParmVar 0x55eaa35d7e18 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55eaa3600d40 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55eaa3600d20 <col:51> 'const int' lvalue Var 0x55eaa35cd4b0 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55eaa3600d78 <col:63> 'P' lvalue ParmVar 0x55eaa35d7e90 'parser' 'P'
|     | `-DeclRefExpr 0x55eaa3600d98 <col:71> 'Vector<T>' lvalue ParmVar 0x55eaa35d7fe0 'x' 'Vector<T> &'
|     `-ReturnStmt 0x55eaa3600e28 <line:622:9, col:17>
|       `-UnaryOperator 0x55eaa3600e10 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55eaa3600e00 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55eaa35d8708 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x55eaa35d8240 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35d82b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35d8668 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x55eaa35d8378 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d83f8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35d8540 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55eaa36010a0 <col:66, line:627:5>
|     `-ReturnStmt 0x55eaa3601090 <line:626:9, col:59>
|       `-CallExpr 0x55eaa3601050 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55eaa3600e68 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55eaa3600ed8 <col:25> 'const char *' lvalue ParmVar 0x55eaa35d8378 'keyword' 'const char *'
|         |-DeclRefExpr 0x55eaa3600ef8 <col:34> 'int' lvalue ParmVar 0x55eaa35d83f8 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x55eaa3601010 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55eaa3601030 <col:58> 'Vector<T>' lvalue ParmVar 0x55eaa35d8540 'x' 'Vector<T> &'
|-CXXMethodDecl 0x55eaa35d8798 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x55eaa3601120 <col:25, line:633:5>
|   `-ReturnStmt 0x55eaa3601110 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x55eaa36010f8 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55eaa36010c8 <col:16> 'const bool' lvalue ->_status 0x55eaa35e5668
|         `-CXXThisExpr 0x55eaa36010b8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55eaa35d8918 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x55eaa35d8850 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x55eaa3601208 <col:27, line:639:5>
|   |-BinaryOperator 0x55eaa36011b0 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55eaa3601138 <col:9> 'bool' lvalue ParmVar 0x55eaa35d8850 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55eaa3601198 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55eaa3601168 <col:13> 'bool' lvalue ->_status 0x55eaa35e5668
|   |     `-CXXThisExpr 0x55eaa3601158 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55eaa36011f8 <line:638:9, col:17>
|     `-UnaryOperator 0x55eaa36011e0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55eaa36011d0 <col:17> 'Args *' this
|-CXXMethodDecl 0x55eaa35d8a98 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55eaa35d89d8 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x55eaa36012f8 <col:39, line:644:5>
|   |-BinaryOperator 0x55eaa36012a0 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55eaa3601228 <col:9> 'bool' lvalue ParmVar 0x55eaa35d89d8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55eaa3601288 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55eaa3601258 <col:13> 'const bool' lvalue ->_status 0x55eaa35e5668
|   |     `-CXXThisExpr 0x55eaa3601248 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55eaa36012e8 <line:643:9, col:17>
|     `-UnaryOperator 0x55eaa36012d0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55eaa36012c0 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55eaa35d8b60 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x55eaa36013a0 <col:30, line:651:5>
|   `-ReturnStmt 0x55eaa3601390 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x55eaa3601378 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55eaa3601348 <col:16> 'bool' lvalue ->_read_status 0x55eaa34dc260
|         `-ImplicitCastExpr 0x55eaa3601328 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x55eaa3601318 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55eaa35d8ca8 <line:655:5, line:658:5> line:655:11 read_status 'Args &(bool &)'
| |-ParmVarDecl 0x55eaa35d8c18 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x55eaa36014a8 <col:32, line:658:5>
|   |-BinaryOperator 0x55eaa3601450 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55eaa36013b8 <col:9> 'bool' lvalue ParmVar 0x55eaa35d8c18 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55eaa3601438 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55eaa3601408 <col:13> 'bool' lvalue ->_read_status 0x55eaa34dc260
|   |     `-ImplicitCastExpr 0x55eaa36013e8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55eaa36013d8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55eaa3601498 <line:657:9, col:17>
|     `-UnaryOperator 0x55eaa3601480 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55eaa3601470 <col:17> 'Args *' this
|-CXXMethodDecl 0x55eaa35d8df8 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55eaa35d8d68 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x55eaa36015b8 <col:44, line:663:5>
|   |-BinaryOperator 0x55eaa3601560 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55eaa36014c8 <col:9> 'bool' lvalue ParmVar 0x55eaa35d8d68 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55eaa3601548 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55eaa3601518 <col:13> 'bool' lvalue ->_read_status 0x55eaa34dc260
|   |     `-ImplicitCastExpr 0x55eaa36014f8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55eaa36014e8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55eaa36015a8 <line:662:9, col:17>
|     `-UnaryOperator 0x55eaa3601590 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55eaa3601580 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55eaa35d8ec0 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x55eaa35d8f88 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x55eaa35d9050 <line:684:5, col:17> col:9 consume 'int ()'
|-CXXMethodDecl 0x55eaa35d9118 <line:693:5, col:18> col:9 used complete 'int ()'
|-FunctionTemplateDecl 0x55eaa35d9428 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x55eaa35d91b8 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55eaa35d9388 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x55eaa35d9298 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x55eaa3601970 <col:19, line:706:5>
|     `-IfStmt 0x55eaa3601948 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x55eaa36016b8 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x55eaa3601878 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x55eaa3601848 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x55eaa3601808 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x55eaa3601710 <col:42> '<bound member function type>' ->simple_slot 0x55eaa35fab00
|       |     | `-CXXThisExpr 0x55eaa3601700 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x55eaa36017a8 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x55eaa3601760 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x55eaa33656f8
|       |     | `-DeclRefExpr 0x55eaa3601740 <col:55> 'T' lvalue ParmVar 0x55eaa35d9298 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x55eaa36017e8 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x55eaa3601938 <line:705:13, col:34>
|         `-CallExpr 0x55eaa3601910 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x55eaa3601898 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x55eaa36018f0 <col:33> 'T' lvalue ParmVar 0x55eaa35d9298 'x' 'T &'
|-FunctionTemplateDecl 0x55eaa35d96f8 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x55eaa35d9488 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55eaa35d9658 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x55eaa35d9568 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x55eaa3601d50 <col:31, line:717:5>
|     |-DeclStmt 0x55eaa3601ab0 <line:713:9, col:23>
|     | `-VarDecl 0x55eaa3601998 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x55eaa3601a88 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55eaa3601a10 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55eaa3601a68 <col:21> 'T' lvalue ParmVar 0x55eaa35d9568 'x' 'T &'
|     |-IfStmt 0x55eaa3601d00 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x55eaa3601ba8 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x55eaa3601ce0 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55eaa3601c80 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55eaa3601c10 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55eaa351c7f8 0x55eaa351c418 0x55eaa351c048 0x55eaa351bc68 0x55eaa351b888 0x55eaa351b4b8
|     |   | `-DeclRefExpr 0x55eaa3601bf0 <col:14> 'T *' lvalue Var 0x55eaa3601998 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x55eaa3601cc0 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x55eaa3601d38 <line:716:9, col:16>
|       `-DeclRefExpr 0x55eaa3601d18 <col:16> 'T *' lvalue Var 0x55eaa3601998 's' 'T *'
|-FunctionTemplateDecl 0x55eaa35d9b08 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x55eaa35d9758 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55eaa35d97d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55eaa35d9a68 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x55eaa35d98b8 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x55eaa35d9958 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x55eaa3602060 <col:37, line:726:5>
|     |-IfStmt 0x55eaa3601ff0 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x55eaa3602010 <line:723:13, col:26>
|     | | `-VarDecl 0x55eaa3601db8 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x55eaa3601ea8 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x55eaa3601e30 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x55eaa3601e88 <col:25> 'T' lvalue ParmVar 0x55eaa35d98b8 'x' 'T &'
|     | |-DeclRefExpr 0x55eaa3601ed0 <col:16> 'T *' lvalue Var 0x55eaa3601db8 's' 'T *'
|     | `-BinaryOperator 0x55eaa3601fd0 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55eaa3601f80 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55eaa3601f10 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55eaa351c7f8 0x55eaa351c418 0x55eaa351c048 0x55eaa351bc68 0x55eaa351b888 0x55eaa351b4b8
|     |   | `-DeclRefExpr 0x55eaa3601ef0 <col:14> 'T *' lvalue Var 0x55eaa3601db8 's' 'T *'
|     |   `-DeclRefExpr 0x55eaa3601fb0 <col:18> 'const V' lvalue ParmVar 0x55eaa35d9958 'value' 'const V &'
|     `-ReturnStmt 0x55eaa3602050 <line:725:9, col:17>
|       `-UnaryOperator 0x55eaa3602038 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55eaa3602028 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55eaa35d9f08 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x55eaa35d9b70 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55eaa35d9e68 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x55eaa35d9c20 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35d9ca0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35d9d48 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x55eaa3602e80 <col:65, line:737:5>
|     |-DeclStmt 0x55eaa36020f8 <line:732:9, col:26>
|     | `-VarDecl 0x55eaa3602090 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55eaa3602e48 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x55eaa3602e68 <line:733:13, col:58>
|       | `-VarDecl 0x55eaa3602120 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55eaa3602300 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55eaa36022d0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55eaa36022b8 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55eaa3602298 <col:26, col:58> 'String' (CXXTemporary 0x55eaa3602298)
|       |           `-CXXMemberCallExpr 0x55eaa3602228 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55eaa3602198 <col:26> '<bound member function type>' ->find 0x55eaa35fa118
|       |             | `-CXXThisExpr 0x55eaa3602188 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55eaa3602260 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55eaa36021c8 <col:31> 'const char *' lvalue ParmVar 0x55eaa35d9c20 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55eaa3602278 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55eaa36021e8 <col:40> 'int' lvalue ParmVar 0x55eaa35d9ca0 'flags' 'int'
|       |             `-DeclRefExpr 0x55eaa3602208 <col:47> 'Args::Slot *' lvalue Var 0x55eaa3602090 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55eaa36023b8 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55eaa36023a0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55eaa3602380 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55eaa3602350 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55eaa33286c8
|       |       `-ImplicitCastExpr 0x55eaa3602338 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55eaa3602318 <col:20> 'String' lvalue Var 0x55eaa3602120 'str' 'String'
|       `-CompoundStmt 0x55eaa3602e28 <col:61, line:736:9>
|         |-DeclStmt 0x55eaa3602870 <line:734:13, col:76>
|         | `-VarDecl 0x55eaa3602408 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55eaa3602840 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55eaa36027b0 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55eaa36027f8 <col:60> 'T' lvalue ParmVar 0x55eaa35d9d48 'variable' 'T &'
|         |     `-UnaryOperator 0x55eaa3602828 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55eaa3602818 <col:71> 'Args *' this
|         `-CallExpr 0x55eaa3602df8 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x55eaa3602898 <col:13> '<bound member function type>' ->postparse 0x55eaa35fa328
|           | `-CXXThisExpr 0x55eaa3602888 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55eaa3602db8 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55eaa36028c8 <col:23> 'T *' lvalue Var 0x55eaa3602408 's' 'T *'
|           | `-CallExpr 0x55eaa3602d78 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55eaa3602b50 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x55eaa3602c50 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x55eaa3602c70 <col:86> 'String' lvalue Var 0x55eaa3602120 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55eaa3602d20 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55eaa3602cb0 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55eaa351c7f8 0x55eaa351c418 0x55eaa351c048 0x55eaa351bc68 0x55eaa351b888 0x55eaa351b4b8
|           |   | `-DeclRefExpr 0x55eaa3602c90 <col:92> 'T *' lvalue Var 0x55eaa3602408 's' 'T *'
|           |   `-UnaryOperator 0x55eaa3602d60 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55eaa3602d50 <col:96> 'Args *' this
|           `-DeclRefExpr 0x55eaa3602dd8 <col:103> 'Args::Slot *' lvalue Var 0x55eaa3602090 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55eaa35da458 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55eaa35d9f78 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55eaa35d9ff8 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55eaa35da3b8 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55eaa35da0b8 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35da138 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35da1d8 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x55eaa35da278 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x55eaa3603d20 <col:88, line:745:5>
|     |-DeclStmt 0x55eaa3602f18 <line:741:9, col:26>
|     | `-VarDecl 0x55eaa3602eb0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55eaa3603138 <line:742:9, col:55>
|     | `-VarDecl 0x55eaa3602f40 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55eaa3603120 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55eaa36030f0 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55eaa36030d8 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55eaa36030b8 <col:22, col:54> 'String' (CXXTemporary 0x55eaa36030b8)
|     |           `-CXXMemberCallExpr 0x55eaa3603048 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55eaa3602fb8 <col:22> '<bound member function type>' ->find 0x55eaa35fa118
|     |             | `-CXXThisExpr 0x55eaa3602fa8 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55eaa3603080 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55eaa3602fe8 <col:27> 'const char *' lvalue ParmVar 0x55eaa35da0b8 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55eaa3603098 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55eaa3603008 <col:36> 'int' lvalue ParmVar 0x55eaa35da138 'flags' 'int'
|     |             `-DeclRefExpr 0x55eaa3603028 <col:43> 'Args::Slot *' lvalue Var 0x55eaa3602eb0 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55eaa3603510 <line:743:9, col:72>
|     | `-VarDecl 0x55eaa3603188 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55eaa36034e0 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55eaa3603450 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55eaa3603498 <col:56> 'T' lvalue ParmVar 0x55eaa35da1d8 'variable' 'T &'
|     |     `-UnaryOperator 0x55eaa36034c8 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55eaa36034b8 <col:67> 'Args *' this
|     `-CallExpr 0x55eaa3603cf0 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x55eaa3603538 <col:9> '<bound member function type>' ->postparse 0x55eaa35fa328
|       | `-CXXThisExpr 0x55eaa3603528 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55eaa3603cb0 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55eaa3603568 <col:19> 'T *' lvalue Var 0x55eaa3603188 's' 'T *'
|       | `-ParenExpr 0x55eaa3603c90 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x55eaa3603c60 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55eaa3603c48 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55eaa3603c30 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55eaa3603c10 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55eaa3603be0 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55eaa33286c8
|       |     |       `-ImplicitCastExpr 0x55eaa3603bc8 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55eaa3603588 <col:25> 'String' lvalue Var 0x55eaa3602f40 'str' 'String'
|       |     |-CallExpr 0x55eaa3603a38 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55eaa3603810 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x55eaa3603910 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x55eaa3603930 <col:89> 'String' lvalue Var 0x55eaa3602f40 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55eaa36039e0 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55eaa3603970 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55eaa351c7f8 0x55eaa351c418 0x55eaa351c048 0x55eaa351bc68 0x55eaa351b888 0x55eaa351b4b8
|       |     | | `-DeclRefExpr 0x55eaa3603950 <col:95> 'T *' lvalue Var 0x55eaa3603188 's' 'T *'
|       |     | `-UnaryOperator 0x55eaa3603a20 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55eaa3603a10 <col:99> 'Args *' this
|       |     `-ParenExpr 0x55eaa3603ba8 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x55eaa3603b88 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x55eaa3603b58 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55eaa3603b08 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55eaa3603a98 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55eaa351c7f8 0x55eaa351c418 0x55eaa351c048 0x55eaa351bc68 0x55eaa351b888 0x55eaa351b4b8
|       |         | | `-DeclRefExpr 0x55eaa3603a78 <col:109> 'T *' lvalue Var 0x55eaa3603188 's' 'T *'
|       |         | `-DeclRefExpr 0x55eaa3603b38 <col:113> 'const V' lvalue ParmVar 0x55eaa35da278 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55eaa3603b78 <col:120> 'bool' true
|       `-DeclRefExpr 0x55eaa3603cd0 <col:128> 'Args::Slot *' lvalue Var 0x55eaa3602eb0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55eaa35e1a18 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x55eaa35da4d0 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35da548 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35e1978 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55eaa35da608 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35da688 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35da700 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35da7a8 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x55eaa3606ba8 <col:75, line:754:5>
|     |-DeclStmt 0x55eaa3603dc8 <line:749:9, col:26>
|     | `-VarDecl 0x55eaa3603d60 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55eaa3606b70 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x55eaa3606b90 <line:750:13, col:58>
|       | `-VarDecl 0x55eaa3603df0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55eaa3603fd0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55eaa3603fa0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55eaa3603f88 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55eaa3603f68 <col:26, col:58> 'String' (CXXTemporary 0x55eaa3603f68)
|       |           `-CXXMemberCallExpr 0x55eaa3603ef8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55eaa3603e68 <col:26> '<bound member function type>' ->find 0x55eaa35fa118
|       |             | `-CXXThisExpr 0x55eaa3603e58 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55eaa3603f30 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55eaa3603e98 <col:31> 'const char *' lvalue ParmVar 0x55eaa35da608 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55eaa3603f48 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55eaa3603eb8 <col:40> 'int' lvalue ParmVar 0x55eaa35da688 'flags' 'int'
|       |             `-DeclRefExpr 0x55eaa3603ed8 <col:47> 'Args::Slot *' lvalue Var 0x55eaa3603d60 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55eaa3604088 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55eaa3604070 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55eaa3604050 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55eaa3604020 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55eaa33286c8
|       |       `-ImplicitCastExpr 0x55eaa3604008 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55eaa3603fe8 <col:20> 'String' lvalue Var 0x55eaa3603df0 'str' 'String'
|       `-CompoundStmt 0x55eaa3606b50 <col:61, line:753:9>
|         |-DeclStmt 0x55eaa3604460 <line:751:13, col:63>
|         | `-VarDecl 0x55eaa36040d8 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55eaa3604430 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55eaa36043a0 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55eaa36043e8 <col:47> 'T' lvalue ParmVar 0x55eaa35da7a8 'variable' 'T &'
|         |     `-UnaryOperator 0x55eaa3604418 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55eaa3604408 <col:58> 'Args *' this
|         `-CallExpr 0x55eaa3606b20 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x55eaa3604488 <col:13> '<bound member function type>' ->postparse 0x55eaa35fa328
|           | `-CXXThisExpr 0x55eaa3604478 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55eaa3606ae0 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55eaa36044b8 <col:23> 'T *' lvalue Var 0x55eaa36040d8 's' 'T *'
|           | `-CallExpr 0x55eaa3606aa0 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55eaa3606930 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55eaa3606978 <col:56> 'P' lvalue ParmVar 0x55eaa35da700 'parser' 'P'
|           |   |-DeclRefExpr 0x55eaa3606998 <col:64> 'String' lvalue Var 0x55eaa3603df0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55eaa3606a48 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55eaa36069d8 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55eaa351c7f8 0x55eaa351c418 0x55eaa351c048 0x55eaa351bc68 0x55eaa351b888 0x55eaa351b4b8
|           |   | `-DeclRefExpr 0x55eaa36069b8 <col:70> 'T *' lvalue Var 0x55eaa36040d8 's' 'T *'
|           |   `-UnaryOperator 0x55eaa3606a88 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55eaa3606a78 <col:74> 'Args *' this
|           `-DeclRefExpr 0x55eaa3606b00 <col:81> 'Args::Slot *' lvalue Var 0x55eaa3603d60 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55eaa35e2078 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55eaa35e1a90 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55eaa35e1b08 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x55eaa35e1b88 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55eaa35e1fd8 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55eaa35e1c50 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35e1cd0 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35e1d48 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35e1de8 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x55eaa35e1e88 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x55eaa3607938 <col:98, line:762:5>
|     |-DeclStmt 0x55eaa3606c40 <line:758:9, col:26>
|     | `-VarDecl 0x55eaa3606bd8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55eaa3606e60 <line:759:9, col:55>
|     | `-VarDecl 0x55eaa3606c68 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55eaa3606e48 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55eaa3606e18 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55eaa3606e00 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55eaa3606de0 <col:22, col:54> 'String' (CXXTemporary 0x55eaa3606de0)
|     |           `-CXXMemberCallExpr 0x55eaa3606d70 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55eaa3606ce0 <col:22> '<bound member function type>' ->find 0x55eaa35fa118
|     |             | `-CXXThisExpr 0x55eaa3606cd0 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55eaa3606da8 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55eaa3606d10 <col:27> 'const char *' lvalue ParmVar 0x55eaa35e1c50 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55eaa3606dc0 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55eaa3606d30 <col:36> 'int' lvalue ParmVar 0x55eaa35e1cd0 'flags' 'int'
|     |             `-DeclRefExpr 0x55eaa3606d50 <col:43> 'Args::Slot *' lvalue Var 0x55eaa3606bd8 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55eaa3607280 <line:760:9, col:59>
|     | `-VarDecl 0x55eaa3606eb8 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55eaa3607250 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55eaa36071c0 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55eaa3607208 <col:43> 'T' lvalue ParmVar 0x55eaa35e1de8 'variable' 'T &'
|     |     `-UnaryOperator 0x55eaa3607238 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55eaa3607228 <col:54> 'Args *' this
|     `-CallExpr 0x55eaa3607908 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x55eaa36072a8 <col:9> '<bound member function type>' ->postparse 0x55eaa35fa328
|       | `-CXXThisExpr 0x55eaa3607298 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55eaa36078c8 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55eaa36072d8 <col:19> 'T *' lvalue Var 0x55eaa3606eb8 's' 'T *'
|       | `-ParenExpr 0x55eaa36078a8 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x55eaa3607878 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55eaa3607860 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55eaa3607848 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55eaa3607828 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55eaa36077f8 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55eaa33286c8
|       |     |       `-ImplicitCastExpr 0x55eaa36077e0 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55eaa36072f8 <col:25> 'String' lvalue Var 0x55eaa3606c68 'str' 'String'
|       |     |-CallExpr 0x55eaa3607650 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55eaa36074e0 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x55eaa3607528 <col:59> 'P' lvalue ParmVar 0x55eaa35e1d48 'parser' 'P'
|       |     | |-DeclRefExpr 0x55eaa3607548 <col:67> 'String' lvalue Var 0x55eaa3606c68 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55eaa36075f8 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55eaa3607588 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55eaa351c7f8 0x55eaa351c418 0x55eaa351c048 0x55eaa351bc68 0x55eaa351b888 0x55eaa351b4b8
|       |     | | `-DeclRefExpr 0x55eaa3607568 <col:73> 'T *' lvalue Var 0x55eaa3606eb8 's' 'T *'
|       |     | `-UnaryOperator 0x55eaa3607638 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55eaa3607628 <col:77> 'Args *' this
|       |     `-ParenExpr 0x55eaa36077c0 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x55eaa36077a0 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x55eaa3607770 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55eaa3607720 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55eaa36076b0 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55eaa351c7f8 0x55eaa351c418 0x55eaa351c048 0x55eaa351bc68 0x55eaa351b888 0x55eaa351b4b8
|       |         | | `-DeclRefExpr 0x55eaa3607690 <col:87> 'T *' lvalue Var 0x55eaa3606eb8 's' 'T *'
|       |         | `-DeclRefExpr 0x55eaa3607750 <col:91> 'const V' lvalue ParmVar 0x55eaa35e1e88 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55eaa3607790 <col:98> 'bool' true
|       `-DeclRefExpr 0x55eaa36078e8 <col:106> 'Args::Slot *' lvalue Var 0x55eaa3606bd8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55eaa35e26e8 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x55eaa35e20f8 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35e2178 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55eaa35e21f8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55eaa35e2648 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55eaa35e22c0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35e2340 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35e23b8 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35e2458 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x55eaa35e24f8 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x55eaa3608918 <col:60, line:773:5>
|     |-DeclStmt 0x55eaa36079e0 <line:767:9, col:26>
|     | `-VarDecl 0x55eaa3607978 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55eaa36088e0 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x55eaa3608900 <line:768:13, col:58>
|       | `-VarDecl 0x55eaa3607a08 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55eaa3607be8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55eaa3607bb8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55eaa3607ba0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55eaa3607b80 <col:26, col:58> 'String' (CXXTemporary 0x55eaa3607b80)
|       |           `-CXXMemberCallExpr 0x55eaa3607b10 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55eaa3607a80 <col:26> '<bound member function type>' ->find 0x55eaa35fa118
|       |             | `-CXXThisExpr 0x55eaa3607a70 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55eaa3607b48 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55eaa3607ab0 <col:31> 'const char *' lvalue ParmVar 0x55eaa35e22c0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55eaa3607b60 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55eaa3607ad0 <col:40> 'int' lvalue ParmVar 0x55eaa35e2340 'flags' 'int'
|       |             `-DeclRefExpr 0x55eaa3607af0 <col:47> 'Args::Slot *' lvalue Var 0x55eaa3607978 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55eaa3607ca0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55eaa3607c88 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55eaa3607c68 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55eaa3607c38 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55eaa33286c8
|       |       `-ImplicitCastExpr 0x55eaa3607c20 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55eaa3607c00 <col:20> 'String' lvalue Var 0x55eaa3607a08 'str' 'String'
|       `-CompoundStmt 0x55eaa36088b8 <col:61, line:772:9>
|         |-DeclStmt 0x55eaa3607fe0 <line:769:13, col:66>
|         | `-VarDecl 0x55eaa3607cf8 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x55eaa3607fb0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55eaa3607f20 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55eaa3607f68 <col:49> 'T1' lvalue ParmVar 0x55eaa35e2458 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x55eaa3607f98 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55eaa3607f88 <col:61> 'Args *' this
|         |-DeclStmt 0x55eaa3608350 <line:770:13, col:66>
|         | `-VarDecl 0x55eaa3608068 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x55eaa3608320 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55eaa3608290 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55eaa36082d8 <col:49> 'T2' lvalue ParmVar 0x55eaa35e24f8 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x55eaa3608308 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55eaa36082f8 <col:61> 'Args *' this
|         `-CallExpr 0x55eaa3608888 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x55eaa3608378 <col:13> '<bound member function type>' ->postparse 0x55eaa35fa328
|           | `-CXXThisExpr 0x55eaa3608368 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55eaa3608848 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x55eaa36083e8 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x55eaa36083a8 <col:23> 'T1 *' lvalue Var 0x55eaa3607cf8 's1' 'T1 *'
|           | | `-DeclRefExpr 0x55eaa36083c8 <col:29> 'T2 *' lvalue Var 0x55eaa3608068 's2' 'T2 *'
|           | `-CallExpr 0x55eaa3608800 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55eaa36085d0 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55eaa3608618 <col:63> 'P' lvalue ParmVar 0x55eaa35e23b8 'parser' 'P'
|           |   |-DeclRefExpr 0x55eaa3608638 <col:71> 'String' lvalue Var 0x55eaa3607a08 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55eaa36086e8 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55eaa3608678 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55eaa351c7f8 0x55eaa351c418 0x55eaa351c048 0x55eaa351bc68 0x55eaa351b888 0x55eaa351b4b8
|           |   | `-DeclRefExpr 0x55eaa3608658 <col:77> 'T1 *' lvalue Var 0x55eaa3607cf8 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x55eaa36087a8 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55eaa3608738 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55eaa351c7f8 0x55eaa351c418 0x55eaa351c048 0x55eaa351bc68 0x55eaa351b888 0x55eaa351b4b8
|           |   | `-DeclRefExpr 0x55eaa3608718 <col:82> 'T2 *' lvalue Var 0x55eaa3608068 's2' 'T2 *'
|           |   `-UnaryOperator 0x55eaa36087e8 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55eaa36087d8 <col:87> 'Args *' this
|           `-DeclRefExpr 0x55eaa3608868 <col:94> 'Args::Slot *' lvalue Var 0x55eaa3607978 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55eaa35e2ad8 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x55eaa35e2768 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55eaa35e2a38 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55eaa35e2820 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35e28a0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35e2918 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55eaa3608e30 <col:67, line:780:5>
|     |-DeclStmt 0x55eaa36089b0 <line:777:9, col:26>
|     | `-VarDecl 0x55eaa3608948 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55eaa3608df8 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x55eaa3608e18 <line:778:13, col:58>
|       | `-VarDecl 0x55eaa36089d8 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55eaa3608bb8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55eaa3608b88 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55eaa3608b70 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55eaa3608b50 <col:26, col:58> 'String' (CXXTemporary 0x55eaa3608b50)
|       |           `-CXXMemberCallExpr 0x55eaa3608ae0 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55eaa3608a50 <col:26> '<bound member function type>' ->find 0x55eaa35fa118
|       |             | `-CXXThisExpr 0x55eaa3608a40 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55eaa3608b18 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55eaa3608a80 <col:31> 'const char *' lvalue ParmVar 0x55eaa35e2820 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55eaa3608b30 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55eaa3608aa0 <col:40> 'int' lvalue ParmVar 0x55eaa35e28a0 'flags' 'int'
|       |             `-DeclRefExpr 0x55eaa3608ac0 <col:47> 'Args::Slot *' lvalue Var 0x55eaa3608948 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55eaa3608c70 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55eaa3608c58 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55eaa3608c38 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55eaa3608c08 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55eaa33286c8
|       |       `-ImplicitCastExpr 0x55eaa3608bf0 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55eaa3608bd0 <col:20> 'String' lvalue Var 0x55eaa36089d8 'str' 'String'
|       `-CallExpr 0x55eaa3608dc8 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x55eaa3608c98 <col:13> '<bound member function type>' ->postparse 0x55eaa35fa328
|         | `-CXXThisExpr 0x55eaa3608c88 <col:13> 'Args *' implicit this
|         |-CallExpr 0x55eaa3608d78 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x55eaa3608ce8 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x55eaa3608cc8 <col:23> 'P' lvalue ParmVar 0x55eaa35e2918 'parser' 'P'
|         | |-DeclRefExpr 0x55eaa3608d30 <col:36> 'String' lvalue Var 0x55eaa36089d8 'str' 'String'
|         | `-UnaryOperator 0x55eaa3608d60 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x55eaa3608d50 <col:42> 'Args *' this
|         `-DeclRefExpr 0x55eaa3608da8 <col:49> 'Args::Slot *' lvalue Var 0x55eaa3608948 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55eaa35e2e78 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55eaa35e2b48 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55eaa35e2dd8 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55eaa35e2c00 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35e2c80 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35e2cf8 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x55eaa36097a0 <col:71, line:792:5>
|     |-DeclStmt 0x55eaa3608ec8 <line:784:9, col:26>
|     | `-VarDecl 0x55eaa3608e60 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55eaa3608f98 <line:785:9, col:29>
|     | `-VarDecl 0x55eaa3608ef8 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55eaa3608f80 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55eaa3608f60 <col:28> 'int' 1
|     |-WhileStmt 0x55eaa3609650 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x55eaa3609670 <line:786:16, col:61>
|     | | `-VarDecl 0x55eaa3608fc0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55eaa36091a0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55eaa3609170 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55eaa3609158 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55eaa3609138 <col:29, col:61> 'String' (CXXTemporary 0x55eaa3609138)
|     | |           `-CXXMemberCallExpr 0x55eaa36090c8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55eaa3609038 <col:29> '<bound member function type>' ->find 0x55eaa35fa118
|     | |             | `-CXXThisExpr 0x55eaa3609028 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55eaa3609100 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55eaa3609068 <col:34> 'const char *' lvalue ParmVar 0x55eaa35e2c00 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55eaa3609118 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55eaa3609088 <col:43> 'int' lvalue ParmVar 0x55eaa35e2c80 'flags' 'int'
|     | |             `-DeclRefExpr 0x55eaa36090a8 <col:50> 'Args::Slot *' lvalue Var 0x55eaa3608e60 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55eaa3609258 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55eaa3609240 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55eaa3609220 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55eaa36091f0 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55eaa33286c8
|     | |       `-ImplicitCastExpr 0x55eaa36091d8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55eaa36091b8 <col:23> 'String' lvalue Var 0x55eaa3608fc0 'str' 'String'
|     | `-CompoundStmt 0x55eaa3609628 <col:64, line:790:9>
|     |   |-CallExpr 0x55eaa36093b0 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x55eaa3609280 <col:13> '<bound member function type>' ->postparse 0x55eaa35fa328
|     |   | | `-CXXThisExpr 0x55eaa3609270 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55eaa3609360 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55eaa36092d0 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55eaa36092b0 <col:23> 'P' lvalue ParmVar 0x55eaa35e2cf8 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55eaa3609318 <col:36> 'String' lvalue Var 0x55eaa3608fc0 'str' 'String'
|     |   | | `-UnaryOperator 0x55eaa3609348 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55eaa3609338 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x55eaa3609390 <col:49> 'Args::Slot *' lvalue Var 0x55eaa3608e60 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55eaa3609548 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55eaa36093e0 <col:13> 'int' lvalue Var 0x55eaa3608ef8 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55eaa3609530 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55eaa3609510 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55eaa3609478 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55eaa3609458 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55eaa3609440 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55eaa3609400 <col:28> 'int' lvalue Var 0x55eaa3608ef8 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55eaa3609420 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55eaa36094f8 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55eaa36094c8 <col:49> 'bool' lvalue ->_read_status 0x55eaa34dc260
|     |   |         `-ImplicitCastExpr 0x55eaa36094a8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55eaa3609498 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55eaa36095f8 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55eaa3609568 <col:13> 'int' lvalue ParmVar 0x55eaa35e2c80 'flags' 'int'
|     |     `-UnaryOperator 0x55eaa36095e0 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55eaa36095c8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55eaa36095a8 <col:23> 'const int' lvalue Var 0x55eaa35cd1c8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55eaa3609780 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55eaa36096b8 <col:9> 'bool' lvalue ->_read_status 0x55eaa34dc260
|       | `-ImplicitCastExpr 0x55eaa3609698 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55eaa3609688 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55eaa3609760 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55eaa3609740 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55eaa3609728 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55eaa36096e8 <col:25> 'int' lvalue Var 0x55eaa3608ef8 'read_status' 'int'
|           `-IntegerLiteral 0x55eaa3609708 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55eaa35e3358 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55eaa35e2ee8 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35e2f68 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35e32b8 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55eaa35e3028 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35e30a8 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35e3120 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35e31c8 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x55eaa360a730 <col:84, line:805:5>
|     |-DeclStmt 0x55eaa3609848 <line:796:9, col:26>
|     | `-VarDecl 0x55eaa36097e0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55eaa3609918 <line:797:9, col:29>
|     | `-VarDecl 0x55eaa3609878 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55eaa3609900 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55eaa36098e0 <col:28> 'int' 1
|     |-DeclStmt 0x55eaa3609c50 <line:798:9, col:71>
|     | `-VarDecl 0x55eaa3609968 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55eaa3609c20 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55eaa3609b90 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x55eaa3609bd8 <col:55> 'T' lvalue ParmVar 0x55eaa35e31c8 'variable' 'T &'
|     |     `-UnaryOperator 0x55eaa3609c08 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55eaa3609bf8 <col:66> 'Args *' this
|     |-WhileStmt 0x55eaa360a5e0 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x55eaa360a600 <line:799:16, col:61>
|     | | `-VarDecl 0x55eaa3609c78 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55eaa3609e58 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55eaa3609e28 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55eaa3609e10 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55eaa3609df0 <col:29, col:61> 'String' (CXXTemporary 0x55eaa3609df0)
|     | |           `-CXXMemberCallExpr 0x55eaa3609d80 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55eaa3609cf0 <col:29> '<bound member function type>' ->find 0x55eaa35fa118
|     | |             | `-CXXThisExpr 0x55eaa3609ce0 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55eaa3609db8 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55eaa3609d20 <col:34> 'const char *' lvalue ParmVar 0x55eaa35e3028 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55eaa3609dd0 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55eaa3609d40 <col:43> 'int' lvalue ParmVar 0x55eaa35e30a8 'flags' 'int'
|     | |             `-DeclRefExpr 0x55eaa3609d60 <col:50> 'Args::Slot *' lvalue Var 0x55eaa36097e0 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55eaa3609f10 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55eaa3609ef8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55eaa3609ed8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55eaa3609ea8 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55eaa33286c8
|     | |       `-ImplicitCastExpr 0x55eaa3609e90 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55eaa3609e70 <col:23> 'String' lvalue Var 0x55eaa3609c78 'str' 'String'
|     | `-CompoundStmt 0x55eaa360a5b8 <col:64, line:803:9>
|     |   |-CallExpr 0x55eaa360a340 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x55eaa3609f38 <col:13> '<bound member function type>' ->postparse 0x55eaa35fa328
|     |   | | `-CXXThisExpr 0x55eaa3609f28 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x55eaa360a300 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x55eaa3609f68 <col:23> 'T *' lvalue Var 0x55eaa3609968 's' 'T *'
|     |   | | `-CallExpr 0x55eaa360a2c0 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x55eaa360a150 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x55eaa360a198 <col:56> 'P' lvalue ParmVar 0x55eaa35e3120 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x55eaa360a1b8 <col:64> 'String' lvalue Var 0x55eaa3609c78 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x55eaa360a268 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x55eaa360a1f8 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55eaa351c7f8 0x55eaa351c418 0x55eaa351c048 0x55eaa351bc68 0x55eaa351b888 0x55eaa351b4b8
|     |   | |   | `-DeclRefExpr 0x55eaa360a1d8 <col:70> 'T *' lvalue Var 0x55eaa3609968 's' 'T *'
|     |   | |   `-UnaryOperator 0x55eaa360a2a8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x55eaa360a298 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x55eaa360a320 <col:81> 'Args::Slot *' lvalue Var 0x55eaa36097e0 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55eaa360a4d8 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55eaa360a370 <col:13> 'int' lvalue Var 0x55eaa3609878 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55eaa360a4c0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55eaa360a4a0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55eaa360a408 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55eaa360a3e8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55eaa360a3d0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55eaa360a390 <col:28> 'int' lvalue Var 0x55eaa3609878 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55eaa360a3b0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55eaa360a488 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55eaa360a458 <col:49> 'bool' lvalue ->_read_status 0x55eaa34dc260
|     |   |         `-ImplicitCastExpr 0x55eaa360a438 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55eaa360a428 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55eaa360a588 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55eaa360a4f8 <col:13> 'int' lvalue ParmVar 0x55eaa35e30a8 'flags' 'int'
|     |     `-UnaryOperator 0x55eaa360a570 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55eaa360a558 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55eaa360a538 <col:23> 'const int' lvalue Var 0x55eaa35cd1c8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55eaa360a710 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55eaa360a648 <col:9> 'bool' lvalue ->_read_status 0x55eaa34dc260
|       | `-ImplicitCastExpr 0x55eaa360a628 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55eaa360a618 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55eaa360a6f0 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55eaa360a6d0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55eaa360a6b8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55eaa360a678 <col:25> 'int' lvalue Var 0x55eaa3609878 'read_status' 'int'
|           `-IntegerLiteral 0x55eaa360a698 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55eaa35e3938 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x55eaa35e33d0 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55eaa35e3448 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55eaa35e3898 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55eaa35e3508 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55eaa35e3588 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x55eaa35e3600 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x55eaa35e3750 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x55eaa360b538 <col:87, line:821:5>
|     |-DeclStmt 0x55eaa360a7e0 <line:809:9, col:26>
|     | `-VarDecl 0x55eaa360a778 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55eaa360a8b0 <line:810:9, col:29>
|     | `-VarDecl 0x55eaa360a810 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55eaa360a898 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55eaa360a878 <col:28> 'int' 1
|     |-DeclStmt 0x55eaa360aaf8 <line:811:9, col:38>
|     | `-VarDecl 0x55eaa360a9e0 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x55eaa360aad0 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55eaa360aa58 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55eaa360aab0 <col:29> 'Vector<T>' lvalue ParmVar 0x55eaa35e3750 'variable' 'Vector<T> &'
|     |-WhileStmt 0x55eaa360b3e8 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x55eaa360b408 <line:812:16, col:61>
|     | | `-VarDecl 0x55eaa360ab20 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55eaa360ad00 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55eaa360acd0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55eaa360acb8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55eaa360ac98 <col:29, col:61> 'String' (CXXTemporary 0x55eaa360ac98)
|     | |           `-CXXMemberCallExpr 0x55eaa360ac28 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55eaa360ab98 <col:29> '<bound member function type>' ->find 0x55eaa35fa118
|     | |             | `-CXXThisExpr 0x55eaa360ab88 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55eaa360ac60 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55eaa360abc8 <col:34> 'const char *' lvalue ParmVar 0x55eaa35e3508 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55eaa360ac78 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55eaa360abe8 <col:43> 'int' lvalue ParmVar 0x55eaa35e3588 'flags' 'int'
|     | |             `-DeclRefExpr 0x55eaa360ac08 <col:50> 'Args::Slot *' lvalue Var 0x55eaa360a778 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55eaa360adb8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55eaa360ada0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55eaa360ad80 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55eaa360ad50 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55eaa33286c8
|     | |       `-ImplicitCastExpr 0x55eaa360ad38 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55eaa360ad18 <col:23> 'String' lvalue Var 0x55eaa360ab20 'str' 'String'
|     | `-CompoundStmt 0x55eaa360b3b0 <col:64, line:819:9>
|     |   |-DeclStmt 0x55eaa360ae78 <line:813:13, col:23>
|     |   | `-VarDecl 0x55eaa360ade0 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x55eaa360ae58 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x55eaa360aff8 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x55eaa360aea0 <col:13> '<bound member function type>' ->postparse 0x55eaa35fa328
|     |   | | `-CXXThisExpr 0x55eaa360ae90 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55eaa360afa0 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55eaa360aef0 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55eaa360aed0 <col:23> 'P' lvalue ParmVar 0x55eaa35e3600 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55eaa360af38 <col:36> 'String' lvalue Var 0x55eaa360ab20 'str' 'String'
|     |   | | |-DeclRefExpr 0x55eaa360af58 <col:41> 'T' lvalue Var 0x55eaa360ade0 'sx' 'T'
|     |   | | `-UnaryOperator 0x55eaa360af88 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55eaa360af78 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x55eaa360afd8 <col:53> 'Args::Slot *' lvalue Var 0x55eaa360a778 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x55eaa360b150 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x55eaa360b088 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x55eaa360b058 <col:17> 'bool' lvalue ->_read_status 0x55eaa34dc260
|     |   | |   `-ImplicitCastExpr 0x55eaa360b038 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x55eaa360b028 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x55eaa360b128 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x55eaa360b0c0 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x55eaa360b0a0 <col:17> 'Vector<T> *' lvalue Var 0x55eaa360a9e0 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x55eaa360b108 <col:30> 'T' lvalue Var 0x55eaa360ade0 'sx' 'T'
|     |   |-BinaryOperator 0x55eaa360b2d0 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55eaa360b168 <col:13> 'int' lvalue Var 0x55eaa360a810 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55eaa360b2b8 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55eaa360b298 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55eaa360b200 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55eaa360b1e0 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55eaa360b1c8 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55eaa360b188 <col:28> 'int' lvalue Var 0x55eaa360a810 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55eaa360b1a8 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55eaa360b280 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55eaa360b250 <col:49> 'bool' lvalue ->_read_status 0x55eaa34dc260
|     |   |         `-ImplicitCastExpr 0x55eaa360b230 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55eaa360b220 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55eaa360b380 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55eaa360b2f0 <col:13> 'int' lvalue ParmVar 0x55eaa35e3588 'flags' 'int'
|     |     `-UnaryOperator 0x55eaa360b368 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55eaa360b350 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55eaa360b330 <col:23> 'const int' lvalue Var 0x55eaa35cd1c8 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55eaa360b518 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55eaa360b450 <col:9> 'bool' lvalue ->_read_status 0x55eaa34dc260
|       | `-ImplicitCastExpr 0x55eaa360b430 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55eaa360b420 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55eaa360b4f8 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55eaa360b4d8 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55eaa360b4c0 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55eaa360b480 <col:25> 'int' lvalue Var 0x55eaa360a810 'read_status' 'int'
|           `-IntegerLiteral 0x55eaa360b4a0 <col:40> 'int' 1
|-AccessSpecDecl 0x55eaa35e39b0 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x55eaa35e39d8 prev 0x55eaa35cb4c8 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x55eaa35e3ad0 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x55eaa35e3bc0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x55eaa360b570 <col:16, line:828:9>
| |-CXXDestructorDecl 0x55eaa35e3cb0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x55eaa360b580 <col:25, line:830:9>
| |-CXXMethodDecl 0x55eaa35e3db0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x55eaa35e3e60 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x55eaa35e3f08 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55eaa35e3f08
| | `-ParmVarDecl 0x55eaa35e4018 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x55eaa35e47d8 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55eaa35e47d8
|   `-ParmVarDecl 0x55eaa35e48e8 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x55eaa35e4088 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x55eaa35e41e8 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x55eaa35e43e0 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x55eaa35e4290 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x55eaa35e4308 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x55eaa360b760 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x55eaa35e4698 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x55eaa360b5d0 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55eaa360b590 <col:20> 'void *' lvalue ParmVar 0x55eaa35e4290 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x55eaa35e4700 '_slot' 'char *'
| | | `-CXXNewExpr 0x55eaa360b658 <col:32, col:45> 'char *' array Function 0x55eaa314b118 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x55eaa360b640 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x55eaa360b610 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x55eaa35e4308 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x55eaa35e4760 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x55eaa360b720 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x55eaa360b6e0 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x55eaa35e4308 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x55eaa360b7e0 <col:61, line:838:9>
| |-CXXDestructorDecl 0x55eaa35e44e0 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x55eaa35e3cb0 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x55eaa360b868 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x55eaa360b848 <line:840:13, col:22> 'void' array Function 0x55eaa314b478 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x55eaa360b830 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x55eaa360b800 <col:22> 'char *' lvalue ->_slot 0x55eaa35e4700
| |         `-CXXThisExpr 0x55eaa360b7f0 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x55eaa35e45e0 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x55eaa35e3db0 Slot::store 'void ()' ]
| | `-CompoundStmt 0x55eaa360ba58 <col:22, line:844:9>
| |   `-CallExpr 0x55eaa360b9c0 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x55eaa360b9a8 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55eaa360b988 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55eaa3256ef8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x55eaa360b9f8 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x55eaa360b8d8 <col:20> 'void *' lvalue ->_ptr 0x55eaa35e4698
| |     |   `-CXXThisExpr 0x55eaa360b8c8 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x55eaa360ba28 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x55eaa360ba10 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x55eaa360b918 <col:26> 'char *' lvalue ->_slot 0x55eaa35e4700
| |     |     `-CXXThisExpr 0x55eaa360b908 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x55eaa360ba40 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x55eaa360b958 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x55eaa35e4760
| |         `-CXXThisExpr 0x55eaa360b948 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x55eaa35e4698 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x55eaa35e4700 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x55eaa35e4760 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x55eaa35e4958 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55eaa35e4958
| | `-ParmVarDecl 0x55eaa35e4a68 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x55eaa35e4b08 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55eaa35e4b08
|   `-ParmVarDecl 0x55eaa35e4c18 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x55eaa35e4db8 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x55eaa35e4c88 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x55eaa35e4d28 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x55eaa35e5050 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x55eaa35e5248 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x55eaa35e5118 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x55eaa35e53c8 '_ptr' 'T *'
|   | | `-ParenListExpr 0x55eaa360ba90 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x55eaa360ba70 <col:20> 'T *' lvalue ParmVar 0x55eaa35e5118 'ptr' 'T *'
|   | `-CompoundStmt 0x55eaa360bae0 <col:25, line:854:9>
|   |-CXXMethodDecl 0x55eaa35e5318 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x55eaa35e3db0 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x55eaa360bc90 <col:22, line:857:9>
|   |   `-CallExpr 0x55eaa360bc60 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x55eaa360baf0 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x55eaa330f848 0x55eaa32b9958
|   |     |-CXXOperatorCallExpr 0x55eaa360bbf0 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x55eaa360bb80 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55eaa351c7f8 0x55eaa351c418 0x55eaa351c048 0x55eaa351bc68 0x55eaa351b888 0x55eaa351b4b8
|   |     | `-MemberExpr 0x55eaa360bb50 <col:29> 'T *' lvalue ->_ptr 0x55eaa35e53c8
|   |     |   `-CXXThisExpr 0x55eaa360bb40 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x55eaa360bc30 <col:35> 'T' lvalue ->_slot 0x55eaa35e5428
|   |       `-CXXThisExpr 0x55eaa360bc20 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x55eaa35e53c8 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x55eaa35e5428 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x55eaa35e5490 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x55eaa35e5590 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x55eaa35e55e0 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55eaa35e5570 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x55eaa35e5550 <col:31> 'int' 48
|-FieldDecl 0x55eaa35e5608 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x55eaa35e5668 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x55eaa35e56c8 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x55eaa35e5800 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x55eaa35f99c0 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55eaa35f9a20 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x55eaa35f9ad0 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x55eaa35f9cf8 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x55eaa35f9c00 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x55eaa35f9e48 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x55eaa35f9db8 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x55eaa35fa118 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x55eaa35f9f08 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x55eaa35f9f88 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x55eaa35fa030 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x55eaa35fa328 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x55eaa35fa1e0 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x55eaa35fa258 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x55eaa35fa3f8 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x55eaa35fa548 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x55eaa35fa4b0 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x55eaa35fa8d8 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x55eaa35fa608 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x55eaa35fa688 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x55eaa35fa730 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x55eaa35fa7e8 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x55eaa35fab00 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x55eaa35fa9b0 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x55eaa35faa28 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x55eaa35fc718 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x55eaa35fabb0 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x55eaa35fc678 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x55eaa35fac88 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector*, %class.Vector.0, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector*, %class.Vector.0, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa3532158 prev 0x55eaa3527360 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55eaa3532250 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55eaa3532340 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55eaa3532468 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55eaa35325e8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55eaa3532768 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55eaa35328e8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55eaa3543718 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55eaa3543f88 <col:11>
|-CXXDestructorDecl 0x55eaa35437f0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55eaa3543928 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55eaa3543928
| `-ParmVarDecl 0x55eaa3543a38 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55eaa3543ad8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55eaa3543ad8
| `-ParmVarDecl 0x55eaa3543be8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55eaa35469a8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55eaa3546ab8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55eaa3546d38 <col:11>
|   `-ReturnStmt 0x55eaa3546d28 <col:11>
|     `-UnaryOperator 0x55eaa3546d10 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55eaa3546d00 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55eaa3546b28 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55eaa3546b28
  `-ParmVarDecl 0x55eaa3546c38 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa3532950 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55eaa3532a68 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55eaa3532b08 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55eaa3532b70 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55eaa3532bd8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55eaa3532c40 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55eaa3532ca0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55eaa3532d60 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55eaa3532dc0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55eaa3532e20 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55eaa3543628 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55eaa3532b08 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55eaa3543f98 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55eaa3543ff0 <col:12>
|-CXXConstructorDecl 0x55eaa3543c58 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55eaa3543c58
| `-ParmVarDecl 0x55eaa3543d68 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55eaa3543e08 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55eaa3543e08
| `-ParmVarDecl 0x55eaa3543f18 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55eaa3546090 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa3520a70 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55eaa3520b88 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55eaa3520c18 <col:16, col:22> col:16 public
|-EnumDecl 0x55eaa3520c40 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55eaa3520d40 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55eaa3520e20 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa3520d20 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55eaa3520d00 <col:21> 'int' 28
| `-EnumConstantDecl 0x55eaa3520dd0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55eaa3520e38 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55eaa3520db0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55eaa3520d90 <col:22> 'int' 64
|-CXXMethodDecl 0x55eaa3521178 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55eaa3520e60 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55eaa3520ee0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55eaa3520f58 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55eaa3520fd0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55eaa3521238 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55eaa3521438 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55eaa35212b0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55eaa3521328 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55eaa35214e8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55eaa3521648 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55eaa3521558 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55eaa35216f0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55eaa3521a50 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55eaa35219e0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55eaa3521980 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55eaa3521940 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55eaa2ff72d0 'void'
|       |-PointerType 0x55eaa32a0bf0 'unsigned char *'
|       | `-BuiltinType 0x55eaa2ff73d0 'unsigned char'
|       |-TypedefType 0x55eaa309d160 'size_t' sugar
|       | |-Typedef 0x55eaa3067b20 'size_t'
|       | `-BuiltinType 0x55eaa2ff7430 'unsigned long'
|       `-PointerType 0x55eaa2ff7ad0 'void *'
|         `-BuiltinType 0x55eaa2ff72d0 'void'
|-CXXMethodDecl 0x55eaa3521ec8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55eaa3521ac0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55eaa3521b38 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55eaa3521bd0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55eaa3521c50 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55eaa353c5c0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55eaa353c5a8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55eaa353c570 <col:58> 'int' 0
| |-ParmVarDecl 0x55eaa3521cd0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55eaa353c5e8 <col:76> 'int' 0
| |-ParmVarDecl 0x55eaa3521d50 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55eaa353c608 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55eaa3521f98 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55eaa3522018 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55eaa35220d8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55eaa3522178 <col:20>
| `-OptimizeNoneAttr 0x55eaa35221d0 <col:30>
|-CXXMethodDecl 0x55eaa3522248 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55eaa35222e8 <col:20>
| `-OptimizeNoneAttr 0x55eaa3522340 <col:30>
|-CXXMethodDecl 0x55eaa35223b8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55eaa3522458 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55eaa3522508 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55eaa35225a8 <col:20>
| |-OptimizeNoneAttr 0x55eaa3522600 <col:30>
| `-WarnUnusedResultAttr 0x55eaa3522628 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55eaa3522680 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55eaa3522720 <col:20>
| `-OptimizeNoneAttr 0x55eaa3522778 <col:30>
|-CXXMethodDecl 0x55eaa35227c8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55eaa3522868 <col:20>
| `-OptimizeNoneAttr 0x55eaa35228c0 <col:30>
|-CXXMethodDecl 0x55eaa3522908 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55eaa35229a8 <col:20>
| `-OptimizeNoneAttr 0x55eaa3522a00 <col:30>
|-CXXMethodDecl 0x55eaa3522a48 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55eaa3522b08 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55eaa3522bd0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55eaa3522c98 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55eaa3522d58 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55eaa3522e78 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55eaa353c6d0 <col:54, line:99:5>
|   `-ReturnStmt 0x55eaa353c6c0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55eaa353c6a8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55eaa353c678 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55eaa3533158
|         `-CXXThisExpr 0x55eaa353c668 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55eaa3523018 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55eaa3522f28 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55eaa353c780 <col:67, line:103:5>
|   `-BinaryOperator 0x55eaa353c760 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55eaa353c6f8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55eaa3533158
|     | `-CXXThisExpr 0x55eaa353c6e8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55eaa353c748 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55eaa353c728 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55eaa3522f28 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55eaa3523110 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55eaa353c800 <col:33, line:107:5>
|   `-ReturnStmt 0x55eaa353c7f0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55eaa353c7d8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55eaa353c7a8 <col:16> 'void *' lvalue ->_destructor_argument 0x55eaa35331c0
|         `-CXXThisExpr 0x55eaa353c798 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55eaa35231d0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55eaa353ce30 <col:25, line:113:5>
|   |-ParenExpr 0x55eaa353cb78 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55eaa353cb48 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55eaa353c8b8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55eaa353c890 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55eaa353c858 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55eaa353c828 <col:24> '<bound member function type>' ->shared 0x55eaa3522248
|   |   |       `-ImplicitCastExpr 0x55eaa353c878 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55eaa353c818 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55eaa353c918 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55eaa353c8f8 <col:42> 'int' 0
|   |   `-CallExpr 0x55eaa353caa8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55eaa353ca90 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55eaa353ca70 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55eaa353cae8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa353c988 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55eaa353cb00 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa353c9b0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55eaa353cb18 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55eaa353c9e8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55eaa353cb30 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55eaa353ca58 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55eaa353ca40 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55eaa353ca08 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55eaa353cd78 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55eaa353cba8 <col:2> 'unsigned char *' lvalue ->_head 0x55eaa3532f60
|   | | `-CXXThisExpr 0x55eaa353cb98 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55eaa353cd60 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55eaa353cd40 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55eaa353cbe8 <col:10> 'unsigned char *' lvalue ->_data 0x55eaa3532fc8
|   |     | `-CXXThisExpr 0x55eaa353cbd8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55eaa353cd28 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55eaa353cd08 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55eaa353cc28 <col:18> 'unsigned char *' lvalue ->_tail 0x55eaa3533030
|   |         | `-CXXThisExpr 0x55eaa353cc18 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55eaa353ccf0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55eaa353ccd0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55eaa353cc68 <col:26> 'unsigned char *' lvalue ->_end 0x55eaa3533098
|   |             | `-CXXThisExpr 0x55eaa353cc58 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55eaa353ccb8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55eaa353cc98 <col:33> 'int' 0
|   `-BinaryOperator 0x55eaa353ce10 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55eaa353cda8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55eaa3533158
|     | `-CXXThisExpr 0x55eaa353cd98 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55eaa353cdf8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55eaa353cdd8 <col:16> 'int' 0
|-CXXMethodDecl 0x55eaa3523310 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55eaa3523280 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55eaa35233b8 <col:20>
| |-OptimizeNoneAttr 0x55eaa3523410 <col:30>
| `-WarnUnusedResultAttr 0x55eaa3523438 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55eaa3523508 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55eaa3523478 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55eaa35235b0 <col:20>
| |-OptimizeNoneAttr 0x55eaa3523608 <col:30>
| `-WarnUnusedResultAttr 0x55eaa3523630 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55eaa3523768 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55eaa3523670 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55eaa3523810 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55eaa3523910 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55eaa3523880 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55eaa35239b8 <col:20>
| `-OptimizeNoneAttr 0x55eaa3523a10 <col:30>
|-CXXMethodDecl 0x55eaa3523ad8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55eaa3523a48 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55eaa3523b80 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55eaa3523c80 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55eaa3523bf0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55eaa3523d28 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55eaa3523e28 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55eaa3523d98 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55eaa3523ed0 <col:20>
| `-OptimizeNoneAttr 0x55eaa3523f28 <col:30>
|-CXXMethodDecl 0x55eaa35240b8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55eaa3523f68 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55eaa3523fe0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55eaa353c628 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55eaa3524168 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55eaa3524368 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55eaa35241e0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55eaa3524258 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa3524578 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55eaa3524428 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55eaa35244a0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa3524788 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55eaa3524638 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55eaa35246b8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55eaa353c638 <col:39> 'int' 0
|-CXXMethodDecl 0x55eaa3524858 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55eaa3524920 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55eaa35249e8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55eaa3524aa8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55eaa3524b70 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55eaa3524cb8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55eaa3524c28 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55eaa3524e88 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55eaa3524d78 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55eaa3524df0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa3524f58 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55eaa3525018 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55eaa35250b8 <col:20>
| `-OptimizeNoneAttr 0x55eaa3525110 <col:30>
|-CXXMethodDecl 0x55eaa3525160 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55eaa3525200 <col:20>
| `-OptimizeNoneAttr 0x55eaa3525258 <col:30>
|-CXXMethodDecl 0x55eaa35252a8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55eaa3525368 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55eaa3525430 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55eaa35254d0 <col:20>
| `-OptimizeNoneAttr 0x55eaa3525528 <col:30>
|-CXXMethodDecl 0x55eaa3525678 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55eaa3525568 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55eaa35255e0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa35257c8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55eaa3525738 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa35258a0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55eaa3525960 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55eaa3525a00 <col:20>
| `-OptimizeNoneAttr 0x55eaa3525a58 <col:30>
|-CXXMethodDecl 0x55eaa3525aa8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55eaa3525b48 <col:20>
| `-OptimizeNoneAttr 0x55eaa3525ba0 <col:30>
|-CXXMethodDecl 0x55eaa3525bf0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55eaa3525cb8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55eaa3525d58 <col:20>
| `-OptimizeNoneAttr 0x55eaa3525db0 <col:30>
|-CXXMethodDecl 0x55eaa3525df8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55eaa3525f18 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55eaa3526088 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55eaa3525fc8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55eaa3526178 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55eaa3526218 <col:20>
| `-OptimizeNoneAttr 0x55eaa3526270 <col:30>
|-CXXMethodDecl 0x55eaa35262c0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55eaa3526380 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55eaa35265b8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55eaa3526430 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55eaa35264a8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55eaa3526668 <col:20>
| `-OptimizeNoneAttr 0x55eaa35266c0 <col:30>
|-CXXMethodDecl 0x55eaa3526768 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55eaa3526808 <col:20>
| `-OptimizeNoneAttr 0x55eaa3526860 <col:30>
|-CXXMethodDecl 0x55eaa35268b0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55eaa3526950 <col:20>
| `-OptimizeNoneAttr 0x55eaa35269a8 <col:30>
|-CXXMethodDecl 0x55eaa35269f0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55eaa3526a90 <col:20>
| `-OptimizeNoneAttr 0x55eaa3526ae8 <col:30>
|-CXXMethodDecl 0x55eaa3526be8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55eaa3526b20 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55eaa3526c90 <col:20>
| `-OptimizeNoneAttr 0x55eaa3526ce8 <col:30>
|-CXXMethodDecl 0x55eaa3526ea8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55eaa3526d20 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55eaa3526d98 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55eaa3526f58 <col:20>
| `-OptimizeNoneAttr 0x55eaa3526fb0 <col:30>
|-CXXMethodDecl 0x55eaa3527058 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55eaa3527178 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55eaa3527298 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55eaa3527338 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55eaa3527360 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55eaa3527488 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55eaa3527528 <col:20>
| `-OptimizeNoneAttr 0x55eaa3527580 <col:30>
|-CXXMethodDecl 0x55eaa3527628 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55eaa35276c8 <col:20>
| `-OptimizeNoneAttr 0x55eaa3527720 <col:30>
|-AccessSpecDecl 0x55eaa3527748 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55eaa3527770 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55eaa3527870 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55eaa35278c0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55eaa3527850 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55eaa3527830 <col:14> 'int' 48
|-CXXMethodDecl 0x55eaa3527928 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55eaa35279c8 <col:20>
| `-OptimizeNoneAttr 0x55eaa3527a20 <col:30>
|-CXXMethodDecl 0x55eaa3527a98 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55eaa3527b38 <col:20>
| `-OptimizeNoneAttr 0x55eaa3527b90 <col:30>
|-CXXMethodDecl 0x55eaa3527c58 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55eaa3527bc8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55eaa3527df8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55eaa3527f98 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55eaa3527ea8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55eaa3528040 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55eaa3528140 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55eaa35284f0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa3528120 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55eaa3528100 <col:9> 'int' 0
| |-EnumConstantDecl 0x55eaa35281d0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55eaa3528508 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa35281b0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55eaa3528190 <col:14> 'int' 1
| |-EnumConstantDecl 0x55eaa3528260 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55eaa3528520 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa3528240 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55eaa3528220 <col:14> 'int' 2
| |-EnumConstantDecl 0x55eaa35282f0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55eaa3528538 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa35282d0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55eaa35282b0 <col:14> 'int' 3
| |-EnumConstantDecl 0x55eaa3528380 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55eaa3528550 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa3528360 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55eaa3528340 <col:13> 'int' 4
| |-EnumConstantDecl 0x55eaa3528410 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55eaa3528568 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa35283f0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55eaa35283d0 <col:13> 'int' 5
| `-EnumConstantDecl 0x55eaa35284a0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55eaa3528580 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55eaa3528480 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55eaa3528460 <col:14> 'int' 6
|-CXXMethodDecl 0x55eaa35285e8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55eaa3528688 <col:20>
| `-OptimizeNoneAttr 0x55eaa35286e0 <col:30>
|-CXXMethodDecl 0x55eaa35287d8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55eaa3528718 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55eaa3528880 <col:20>
| `-OptimizeNoneAttr 0x55eaa35288d8 <col:30>
|-CXXMethodDecl 0x55eaa3528948 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55eaa3528a70 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55eaa3528be8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55eaa3528b20 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55eaa3528cb0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55eaa3528d78 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55eaa3528eb8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55eaa3528e28 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55eaa3528f60 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55eaa3529060 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55eaa3529260 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa3529040 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55eaa3529020 <col:23> 'int' 0
| |-EnumConstantDecl 0x55eaa35290f0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55eaa3529278 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa35290d0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55eaa35290b0 <col:45> 'int' 4
| |-EnumConstantDecl 0x55eaa3529180 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55eaa3529290 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa3529160 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55eaa3529140 <col:24> 'int' 0
| `-EnumConstantDecl 0x55eaa3529210 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55eaa35292a8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55eaa35291f0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55eaa35291d0 <col:47> 'int' 16
|-CXXMethodDecl 0x55eaa3529308 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55eaa3529478 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55eaa35293b8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55eaa3529520 <col:20>
| `-OptimizeNoneAttr 0x55eaa3529578 <col:30>
|-CXXMethodDecl 0x55eaa35295c8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55eaa353cf50 <col:18, col:36>
|   `-ReturnStmt 0x55eaa353cf40 <col:20, col:33>
|     `-ImplicitCastExpr 0x55eaa353cf28 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55eaa353cf08 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55eaa353ced8 <col:27> '<bound member function type>' ->xanno 0x55eaa3527628
|           `-CXXThisExpr 0x55eaa353cec8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55eaa35296c0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55eaa353d060 <col:30, col:48>
|   `-ReturnStmt 0x55eaa353d050 <col:32, col:45>
|     `-ImplicitCastExpr 0x55eaa353d038 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55eaa353d018 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55eaa353cfe8 <col:39> '<bound member function type>' ->xanno 0x55eaa3527488
|           `-CXXThisExpr 0x55eaa353cfd8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55eaa35297a8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55eaa353d1f8 <col:24, col:50>
|   `-ReturnStmt 0x55eaa353d1e8 <col:26, col:47>
|     `-UnaryOperator 0x55eaa353d1d0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55eaa353d1b0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55eaa353d198 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55eaa353d148 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55eaa3532468
|         |   `-CXXMemberCallExpr 0x55eaa353d128 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55eaa353d0f8 <col:34> '<bound member function type>' ->xanno 0x55eaa3527628
|         |       `-CXXThisExpr 0x55eaa353d0e8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55eaa353d178 <col:46> 'int' 0
|-CXXMethodDecl 0x55eaa35298b0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55eaa353d3c8 <col:36, col:62>
|   `-ReturnStmt 0x55eaa353d3b8 <col:38, col:59>
|     `-UnaryOperator 0x55eaa353d3a0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55eaa353d380 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55eaa353d368 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55eaa353d2e0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55eaa3532468
|         |   `-CXXMemberCallExpr 0x55eaa353d2c0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55eaa353d290 <col:46> '<bound member function type>' ->xanno 0x55eaa3527488
|         |       `-CXXThisExpr 0x55eaa353d280 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55eaa353d310 <col:58> 'int' 0
|-CXXMethodDecl 0x55eaa35299c8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55eaa353d560 <col:26, col:53>
|   `-ReturnStmt 0x55eaa353d550 <col:28, col:50>
|     `-UnaryOperator 0x55eaa353d538 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55eaa353d518 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55eaa353d500 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55eaa353d4b0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55eaa3532768
|         |   `-CXXMemberCallExpr 0x55eaa353d490 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55eaa353d460 <col:36> '<bound member function type>' ->xanno 0x55eaa3527628
|         |       `-CXXThisExpr 0x55eaa353d450 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55eaa353d4e0 <col:49> 'int' 0
|-CXXMethodDecl 0x55eaa3529ae8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55eaa353d738 <col:38, col:65>
|   `-ReturnStmt 0x55eaa353d728 <col:40, col:62>
|     `-UnaryOperator 0x55eaa353d710 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55eaa353d6f0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55eaa353d6d8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55eaa353d648 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55eaa3532768
|         |   `-CXXMemberCallExpr 0x55eaa353d628 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55eaa353d5f8 <col:48> '<bound member function type>' ->xanno 0x55eaa3527488
|         |       `-CXXThisExpr 0x55eaa353d5e8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55eaa353d678 <col:61> 'int' 0
|-CXXMethodDecl 0x55eaa3529c98 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55eaa3529ba0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55eaa353de08 <col:34, line:463:5>
|   |-ParenExpr 0x55eaa353dc50 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55eaa353dc20 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55eaa353d888 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55eaa353d858 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55eaa353d7a8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55eaa353d790 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55eaa353d750 <col:23> 'int' lvalue ParmVar 0x55eaa3529ba0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55eaa353d770 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55eaa353d838 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55eaa353d808 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55eaa353d7c8 <col:33> 'int' lvalue ParmVar 0x55eaa3529ba0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55eaa353d820 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55eaa353d7e8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55eaa3527870 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55eaa353d8e8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55eaa353d8c8 <col:56> 'int' 0
|   |   `-CallExpr 0x55eaa353db80 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55eaa353db68 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55eaa353db48 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55eaa353dbc0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa353d9d8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55eaa353dbd8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa353da08 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55eaa353dbf0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55eaa353da40 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55eaa353dc08 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55eaa353db30 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55eaa353db18 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55eaa353dad8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55eaa353ddf8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55eaa353dde0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55eaa353ddc0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55eaa353dd90 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55eaa353dd40 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55eaa3532468
|         |   `-CXXMemberCallExpr 0x55eaa353dd20 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55eaa353dcf0 <col:9> '<bound member function type>' ->xanno 0x55eaa3527488
|         |       `-CXXThisExpr 0x55eaa353dce0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55eaa353dda8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55eaa353dd70 <col:21> 'int' lvalue ParmVar 0x55eaa3529ba0 'i' 'int'
|-CXXMethodDecl 0x55eaa3529ee8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55eaa3529d58 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55eaa3529dd0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55eaa353e498 <col:40, line:472:5>
|   |-ParenExpr 0x55eaa353e2b0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55eaa353e280 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55eaa353df60 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55eaa353df30 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55eaa353de80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55eaa353de68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55eaa353de28 <col:23> 'int' lvalue ParmVar 0x55eaa3529d58 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55eaa353de48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55eaa353df10 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55eaa353dee0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55eaa353dea0 <col:33> 'int' lvalue ParmVar 0x55eaa3529d58 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55eaa353def8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55eaa353dec0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55eaa3527870 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55eaa353dfc0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55eaa353dfa0 <col:56> 'int' 0
|   |   `-CallExpr 0x55eaa353e1e0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55eaa353e1c8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55eaa353e1a8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55eaa353e220 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa353e030 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55eaa353e238 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa353e060 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55eaa353e250 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55eaa353e098 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55eaa353e268 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55eaa353e190 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55eaa353e178 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55eaa353e138 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55eaa353e478 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55eaa353e420 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55eaa353e3f0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55eaa353e3a0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55eaa3532468
|     | |   `-CXXMemberCallExpr 0x55eaa353e380 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55eaa353e350 <col:2> '<bound member function type>' ->xanno 0x55eaa3527628
|     | |       `-CXXThisExpr 0x55eaa353e340 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55eaa353e408 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55eaa353e3d0 <col:14> 'int' lvalue ParmVar 0x55eaa3529d58 'i' 'int'
|     `-ImplicitCastExpr 0x55eaa353e460 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55eaa353e440 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55eaa3529dd0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55eaa352a0a8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55eaa3529fb0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55eaa353ec18 <col:36, line:485:5>
|   |-ParenExpr 0x55eaa353e980 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55eaa353e950 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55eaa353e630 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55eaa353e600 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55eaa353e510 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55eaa353e4f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55eaa353e4b8 <col:23> 'int' lvalue ParmVar 0x55eaa3529fb0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55eaa353e4d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55eaa353e5e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55eaa353e5c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55eaa353e530 <col:33> 'int' lvalue ParmVar 0x55eaa3529fb0 'i' 'int'
|   |   |     `-BinaryOperator 0x55eaa353e5a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55eaa353e590 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55eaa353e550 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55eaa3527870 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55eaa353e570 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55eaa353e690 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55eaa353e670 <col:60> 'int' 0
|   |   `-CallExpr 0x55eaa353e8b0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55eaa353e898 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55eaa353e878 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55eaa353e8f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa353e700 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55eaa353e908 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa353e738 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55eaa353e920 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55eaa353e770 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55eaa353e938 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55eaa353e860 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55eaa353e848 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55eaa353e808 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55eaa353ec08 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55eaa353ebf0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55eaa353ebd8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55eaa353eba8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55eaa353eb48 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55eaa353eb18 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55eaa353ea90 <col:61, col:70> 'char const[48]' lvalue ->c 0x55eaa3532340
|             |   `-CXXMemberCallExpr 0x55eaa353ea70 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55eaa353ea40 <col:61> '<bound member function type>' ->xanno 0x55eaa3527488
|             |       `-CXXThisExpr 0x55eaa353ea30 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55eaa353eb30 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55eaa353eac0 <col:74> 'int' lvalue ParmVar 0x55eaa3529fb0 'i' 'int'
|-CXXMethodDecl 0x55eaa352a2f8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55eaa352a168 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55eaa352a1e0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55eaa353f368 <col:42, line:500:5>
|   |-ParenExpr 0x55eaa353f100 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55eaa353f0d0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55eaa353edb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55eaa353ed80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55eaa353ec90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55eaa353ec78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55eaa353ec38 <col:23> 'int' lvalue ParmVar 0x55eaa352a168 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55eaa353ec58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55eaa353ed60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55eaa353ed48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55eaa353ecb0 <col:33> 'int' lvalue ParmVar 0x55eaa352a168 'i' 'int'
|   |   |     `-BinaryOperator 0x55eaa353ed28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55eaa353ed10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55eaa353ecd0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55eaa3527870 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55eaa353ecf0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55eaa353ee10 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55eaa353edf0 <col:60> 'int' 0
|   |   `-CallExpr 0x55eaa353f030 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55eaa353f018 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55eaa353eff8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55eaa353f070 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa353ee80 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55eaa353f088 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa353eeb8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55eaa353f0a0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55eaa353eef0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55eaa353f0b8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55eaa353efe0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55eaa353efc8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55eaa353ef88 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55eaa353f348 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55eaa353f2f8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55eaa353f2c8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55eaa353f270 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55eaa353f240 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55eaa353f1f0 <col:48, col:57> 'char [48]' lvalue ->c 0x55eaa3532340
|     |     |   `-CXXMemberCallExpr 0x55eaa353f1d0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55eaa353f1a0 <col:48> '<bound member function type>' ->xanno 0x55eaa3527628
|     |     |       `-CXXThisExpr 0x55eaa353f190 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55eaa353f258 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55eaa353f220 <col:61> 'int' lvalue ParmVar 0x55eaa352a168 'i' 'int'
|     `-ImplicitCastExpr 0x55eaa353f330 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55eaa353f310 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55eaa352a1e0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55eaa352a4b8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55eaa352a3c0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55eaa353fac8 <col:35, line:513:5>
|   |-ParenExpr 0x55eaa353f7d8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55eaa353f7a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55eaa353f500 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55eaa353f4d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55eaa353f3e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55eaa353f3c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55eaa353f388 <col:23> 'int' lvalue ParmVar 0x55eaa352a3c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55eaa353f3a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55eaa353f4b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55eaa353f498 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55eaa353f400 <col:33> 'int' lvalue ParmVar 0x55eaa352a3c0 'i' 'int'
|   |   |     `-BinaryOperator 0x55eaa353f478 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55eaa353f460 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55eaa353f420 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55eaa3527870 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55eaa353f440 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55eaa353f560 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55eaa353f540 <col:60> 'int' 0
|   |   `-CallExpr 0x55eaa353f708 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55eaa353f6f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55eaa353f6d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55eaa353f748 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa353f5d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55eaa353f760 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa353f608 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55eaa353f778 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55eaa353f640 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55eaa353f790 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55eaa353f6b8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55eaa353f6a0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55eaa353f660 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55eaa353fab8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55eaa353faa0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55eaa353fa88 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55eaa353fa58 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55eaa353f9d0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55eaa353f9a0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55eaa353f950 <col:60, col:69> 'char const[48]' lvalue ->c 0x55eaa3532340
|             |   `-CXXMemberCallExpr 0x55eaa353f930 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55eaa353f900 <col:60> '<bound member function type>' ->xanno 0x55eaa3527488
|             |       `-CXXThisExpr 0x55eaa353f8f0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55eaa353f9b8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55eaa353f980 <col:73> 'int' lvalue ParmVar 0x55eaa352a3c0 'i' 'int'
|-CXXMethodDecl 0x55eaa352a708 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55eaa352a578 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55eaa352a5f0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55eaa35401e8 <col:41, line:528:5>
|   |-ParenExpr 0x55eaa353ff70 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55eaa353ff40 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55eaa353fc60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55eaa353fc30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55eaa353fb40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55eaa353fb28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55eaa353fae8 <col:23> 'int' lvalue ParmVar 0x55eaa352a578 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55eaa353fb08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55eaa353fc10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55eaa353fbf8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55eaa353fb60 <col:33> 'int' lvalue ParmVar 0x55eaa352a578 'i' 'int'
|   |   |     `-BinaryOperator 0x55eaa353fbd8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55eaa353fbc0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55eaa353fb80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55eaa3527870 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55eaa353fba0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55eaa353fcc0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55eaa353fca0 <col:60> 'int' 0
|   |   `-CallExpr 0x55eaa353fea0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55eaa353fe88 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55eaa353fe68 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55eaa353fee0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa353fd30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55eaa353fef8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa353fd68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55eaa353ff10 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55eaa353fda0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55eaa353ff28 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55eaa353fe50 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55eaa353fe38 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55eaa353fdf8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55eaa35401c8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55eaa3540178 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55eaa3540148 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55eaa35400f0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55eaa35400b0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55eaa3540060 <col:47, col:56> 'char [48]' lvalue ->c 0x55eaa3532340
|     |     |   `-CXXMemberCallExpr 0x55eaa3540040 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55eaa3540010 <col:47> '<bound member function type>' ->xanno 0x55eaa3527628
|     |     |       `-CXXThisExpr 0x55eaa3540000 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55eaa35400c8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55eaa3540090 <col:60> 'int' lvalue ParmVar 0x55eaa352a578 'i' 'int'
|     `-ImplicitCastExpr 0x55eaa35401b0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55eaa3540190 <col:65> 'int16_t':'short' lvalue ParmVar 0x55eaa352a5f0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55eaa352a8c8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55eaa352a7d0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55eaa35408b8 <col:36, line:541:5>
|   |-ParenExpr 0x55eaa3540658 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55eaa3540628 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55eaa3540380 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55eaa3540350 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55eaa3540260 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55eaa3540248 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55eaa3540208 <col:23> 'int' lvalue ParmVar 0x55eaa352a7d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55eaa3540228 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55eaa3540330 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55eaa3540318 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55eaa3540280 <col:33> 'int' lvalue ParmVar 0x55eaa352a7d0 'i' 'int'
|   |   |     `-BinaryOperator 0x55eaa35402f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55eaa35402e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55eaa35402a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55eaa3527870 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55eaa35402c0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55eaa35403e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55eaa35403c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55eaa3540588 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55eaa3540570 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55eaa3540550 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55eaa35405c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa3540450 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55eaa35405e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa3540488 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55eaa35405f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55eaa35404c0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55eaa3540610 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55eaa3540538 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55eaa3540520 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55eaa35404e0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55eaa35408a8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55eaa3540890 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55eaa3540878 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55eaa3540848 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55eaa35407f0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55eaa35407c0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55eaa3540770 <col:61, col:70> 'char const[48]' lvalue ->c 0x55eaa3532340
|             |   `-CXXMemberCallExpr 0x55eaa3540750 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55eaa3540720 <col:61> '<bound member function type>' ->xanno 0x55eaa3527488
|             |       `-CXXThisExpr 0x55eaa3540710 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55eaa35407d8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55eaa35407a0 <col:74> 'int' lvalue ParmVar 0x55eaa352a7d0 'i' 'int'
|-CXXMethodDecl 0x55eaa352aa98 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55eaa352a988 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55eaa352aa00 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55eaa352ab48 <col:20>
| `-OptimizeNoneAttr 0x55eaa352aba0 <col:30>
|-CXXMethodDecl 0x55eaa352acd8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55eaa352abe0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55eaa3540f88 <col:35, line:562:5>
|   |-ParenExpr 0x55eaa3540d28 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55eaa3540cf8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55eaa3540a50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55eaa3540a20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55eaa3540930 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55eaa3540918 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55eaa35408d8 <col:23> 'int' lvalue ParmVar 0x55eaa352abe0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55eaa35408f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55eaa3540a00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55eaa35409e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55eaa3540950 <col:33> 'int' lvalue ParmVar 0x55eaa352abe0 'i' 'int'
|   |   |     `-BinaryOperator 0x55eaa35409c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55eaa35409b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55eaa3540970 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55eaa3527870 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55eaa3540990 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55eaa3540ab0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55eaa3540a90 <col:60> 'int' 0
|   |   `-CallExpr 0x55eaa3540c58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55eaa3540c40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55eaa3540c20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55eaa3540c98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa3540b20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55eaa3540cb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa3540b58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55eaa3540cc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55eaa3540b90 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55eaa3540ce0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55eaa3540c08 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55eaa3540bf0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55eaa3540bb0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55eaa3540f78 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55eaa3540f60 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55eaa3540f48 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55eaa3540f18 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55eaa3540ec0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55eaa3540e90 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55eaa3540e40 <col:60, col:69> 'char const[48]' lvalue ->c 0x55eaa3532340
|             |   `-CXXMemberCallExpr 0x55eaa3540e20 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55eaa3540df0 <col:60> '<bound member function type>' ->xanno 0x55eaa3527488
|             |       `-CXXThisExpr 0x55eaa3540de0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55eaa3540ea8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55eaa3540e70 <col:73> 'int' lvalue ParmVar 0x55eaa352abe0 'i' 'int'
|-CXXMethodDecl 0x55eaa352aee8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55eaa352ad98 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55eaa352ae10 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55eaa3541668 <col:41, line:577:5>
|   |-ParenExpr 0x55eaa35413f8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55eaa35413c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55eaa3541120 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55eaa35410f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55eaa3541000 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55eaa3540fe8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55eaa3540fa8 <col:23> 'int' lvalue ParmVar 0x55eaa352ad98 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55eaa3540fc8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55eaa35410d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55eaa35410b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55eaa3541020 <col:33> 'int' lvalue ParmVar 0x55eaa352ad98 'i' 'int'
|   |   |     `-BinaryOperator 0x55eaa3541098 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55eaa3541080 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55eaa3541040 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55eaa3527870 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55eaa3541060 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55eaa3541180 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55eaa3541160 <col:60> 'int' 0
|   |   `-CallExpr 0x55eaa3541328 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55eaa3541310 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55eaa35412f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55eaa3541368 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa35411f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55eaa3541380 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa3541228 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55eaa3541398 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55eaa3541260 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55eaa35413b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55eaa35412d8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55eaa35412c0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55eaa3541280 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55eaa3541648 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55eaa35415f8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55eaa35415c8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55eaa3541568 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55eaa3541538 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55eaa35414e8 <col:47, col:56> 'char [48]' lvalue ->c 0x55eaa3532340
|     |     |   `-CXXMemberCallExpr 0x55eaa35414c8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55eaa3541498 <col:47> '<bound member function type>' ->xanno 0x55eaa3527628
|     |     |       `-CXXThisExpr 0x55eaa3541488 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55eaa3541550 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55eaa3541518 <col:60> 'int' lvalue ParmVar 0x55eaa352ad98 'i' 'int'
|     `-ImplicitCastExpr 0x55eaa3541630 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55eaa3541610 <col:65> 'int32_t':'int' lvalue ParmVar 0x55eaa352ae10 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55eaa352b0a8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55eaa352afb0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55eaa3541d98 <col:36, line:591:5>
|   |-ParenExpr 0x55eaa3541ad8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55eaa3541aa8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55eaa3541800 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55eaa35417d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55eaa35416e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55eaa35416c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55eaa3541688 <col:23> 'int' lvalue ParmVar 0x55eaa352afb0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55eaa35416a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55eaa35417b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55eaa3541798 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55eaa3541700 <col:33> 'int' lvalue ParmVar 0x55eaa352afb0 'i' 'int'
|   |   |     `-BinaryOperator 0x55eaa3541778 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55eaa3541760 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55eaa3541720 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55eaa3527870 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55eaa3541740 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55eaa3541860 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55eaa3541840 <col:60> 'int' 0
|   |   `-CallExpr 0x55eaa3541a08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55eaa35419f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55eaa35419d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55eaa3541a48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa35418d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55eaa3541a60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa3541908 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55eaa3541a78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55eaa3541940 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55eaa3541a90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55eaa35419b8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55eaa35419a0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55eaa3541960 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55eaa3541d88 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55eaa3541d70 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55eaa3541d58 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55eaa3541d28 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55eaa3541ca0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55eaa3541c70 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55eaa3541c20 <col:61, col:70> 'char const[48]' lvalue ->c 0x55eaa3532340
|             |   `-CXXMemberCallExpr 0x55eaa3541c00 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55eaa3541bd0 <col:61> '<bound member function type>' ->xanno 0x55eaa3527488
|             |       `-CXXThisExpr 0x55eaa3541bc0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55eaa3541c88 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55eaa3541c50 <col:74> 'int' lvalue ParmVar 0x55eaa352afb0 'i' 'int'
|-CXXMethodDecl 0x55eaa352b2f8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55eaa352b168 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55eaa352b1e0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55eaa3542478 <col:42, line:606:5>
|   |-ParenExpr 0x55eaa3542208 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55eaa35421d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55eaa3541f30 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55eaa3541f00 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55eaa3541e10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55eaa3541df8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55eaa3541db8 <col:23> 'int' lvalue ParmVar 0x55eaa352b168 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55eaa3541dd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55eaa3541ee0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55eaa3541ec8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55eaa3541e30 <col:33> 'int' lvalue ParmVar 0x55eaa352b168 'i' 'int'
|   |   |     `-BinaryOperator 0x55eaa3541ea8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55eaa3541e90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55eaa3541e50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55eaa3527870 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55eaa3541e70 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55eaa3541f90 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55eaa3541f70 <col:60> 'int' 0
|   |   `-CallExpr 0x55eaa3542138 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55eaa3542120 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55eaa3542100 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55eaa3542178 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa3542000 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55eaa3542190 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa3542038 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55eaa35421a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55eaa3542070 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55eaa35421c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55eaa35420e8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55eaa35420d0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55eaa3542090 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55eaa3542458 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55eaa3542408 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55eaa35423d8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55eaa3542378 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55eaa3542348 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55eaa35422f8 <col:48, col:57> 'char [48]' lvalue ->c 0x55eaa3532340
|     |     |   `-CXXMemberCallExpr 0x55eaa35422d8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55eaa35422a8 <col:48> '<bound member function type>' ->xanno 0x55eaa3527628
|     |     |       `-CXXThisExpr 0x55eaa3542298 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55eaa3542360 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55eaa3542328 <col:61> 'int' lvalue ParmVar 0x55eaa352b168 'i' 'int'
|     `-ImplicitCastExpr 0x55eaa3542440 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55eaa3542420 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55eaa352b1e0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55eaa352b490 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55eaa352b3c0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55eaa3542ce8 <col:33, line:620:5>
|   |-ParenExpr 0x55eaa3542a60 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55eaa3542a30 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55eaa3542680 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55eaa3542650 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55eaa35424f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55eaa35424d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55eaa3542498 <col:23> 'int' lvalue ParmVar 0x55eaa352b3c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55eaa35424b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55eaa3542630 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55eaa3542618 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55eaa3542510 <col:33> 'int' lvalue ParmVar 0x55eaa352b3c0 'i' 'int'
|   |   |     `-BinaryOperator 0x55eaa35425f8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55eaa35425e0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55eaa3542530 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55eaa3527870 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55eaa35425b8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55eaa35425a0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55eaa3542568 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55eaa35426e0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55eaa35426c0 <col:79> 'int' 0
|   |   `-CallExpr 0x55eaa3542990 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55eaa3542978 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55eaa3542958 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55eaa35429d0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa35427c8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55eaa35429e8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa3542810 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55eaa3542a00 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55eaa3542848 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55eaa3542a18 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55eaa3542940 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55eaa3542928 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55eaa35428e8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55eaa3542cd8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55eaa3542cc0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55eaa3542ca8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55eaa3542c78 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55eaa3542bf0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55eaa3542bc0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55eaa3542b70 <col:67, col:76> 'char const[48]' lvalue ->c 0x55eaa3532340
|             |   `-CXXMemberCallExpr 0x55eaa3542b50 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55eaa3542b20 <col:67> '<bound member function type>' ->xanno 0x55eaa3527488
|             |       `-CXXThisExpr 0x55eaa3542b10 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55eaa3542bd8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55eaa3542ba0 <col:80> 'int' lvalue ParmVar 0x55eaa352b3c0 'i' 'int'
|-CXXMethodDecl 0x55eaa352b6a8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55eaa352b550 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55eaa352b5d0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55eaa3543510 <col:45, line:635:5>
|   |-ParenExpr 0x55eaa3543258 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55eaa3543228 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55eaa3542ef0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55eaa3542ec0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55eaa3542d60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55eaa3542d48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55eaa3542d08 <col:23> 'int' lvalue ParmVar 0x55eaa352b550 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55eaa3542d28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55eaa3542ea0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55eaa3542e88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55eaa3542d80 <col:33> 'int' lvalue ParmVar 0x55eaa352b550 'i' 'int'
|   |   |     `-BinaryOperator 0x55eaa3542e68 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55eaa3542e50 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55eaa3542da0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55eaa3527870 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55eaa3542e28 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55eaa3542e10 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55eaa3542dd8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55eaa3542f50 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55eaa3542f30 <col:79> 'int' 0
|   |   `-CallExpr 0x55eaa3543188 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55eaa3543170 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55eaa3543150 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55eaa3093f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55eaa35431c8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa3542fc0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55eaa35431e0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55eaa3543008 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55eaa35431f8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55eaa3543040 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55eaa3543210 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55eaa3543138 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55eaa3543120 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55eaa35430d8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55eaa35434f0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55eaa3543458 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55eaa3543428 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55eaa35433c8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55eaa3543398 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55eaa3543348 <col:54, col:63> 'char [48]' lvalue ->c 0x55eaa3532340
|     |     |   `-CXXMemberCallExpr 0x55eaa3543328 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55eaa35432f8 <col:54> '<bound member function type>' ->xanno 0x55eaa3527628
|     |     |       `-CXXThisExpr 0x55eaa35432e8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55eaa35433b0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55eaa3543378 <col:67> 'int' lvalue ParmVar 0x55eaa352b550 'i' 'int'
|     `-CXXConstCastExpr 0x55eaa35434c0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55eaa35434a8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55eaa3543470 <col:91> 'const void *' lvalue ParmVar 0x55eaa352b5d0 'x' 'const void *'
|-CXXMethodDecl 0x55eaa352b778 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55eaa3543598 <col:34, line:640:5>
|   `-ReturnStmt 0x55eaa3543588 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55eaa3543570 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55eaa3543540 <col:16> 'Packet *' lvalue ->_data_packet 0x55eaa3532ef8
|         `-CXXThisExpr 0x55eaa3543530 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55eaa352b8b8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55eaa352b828 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55eaa353c658 <col:46> 'bool' true
|-CXXMethodDecl 0x55eaa352ba38 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55eaa352b970 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55eaa352bae0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55eaa352c290 <line:660:22> "" ""
| |-EnumConstantDecl 0x55eaa352bbe0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55eaa352c300 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa352bbc0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55eaa352bba0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55eaa3520d40 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55eaa352bc70 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55eaa352c318 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa352bc50 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55eaa352bc30 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55eaa3520dd0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55eaa352bd00 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55eaa352c330 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa352bce0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55eaa352bcc0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55eaa352bd90 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55eaa352c348 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa352bd70 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55eaa352bd50 <col:19> 'int' 16
| |-EnumConstantDecl 0x55eaa352be20 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55eaa352c360 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa352be00 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55eaa352bde0 <col:21> 'int' 16
| |-EnumConstantDecl 0x55eaa352beb0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55eaa352c378 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa352be90 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55eaa352be70 <col:19> 'int' 32
| |-EnumConstantDecl 0x55eaa352bf40 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55eaa352c390 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa352bf20 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55eaa352bf00 <col:19> 'int' EnumConstant 0x55eaa352bd90 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55eaa352bfd0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55eaa352c3a8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa352bfb0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55eaa352bf90 <col:19> 'int' EnumConstant 0x55eaa352beb0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55eaa352c0a0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55eaa352c3c0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa352c080 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55eaa352c060 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55eaa352c020 <col:23> 'int' EnumConstant 0x55eaa352bfd0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55eaa352c040 <col:40> 'int' 2
| |-EnumConstantDecl 0x55eaa352c170 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55eaa352c3d8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55eaa352c150 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55eaa352c130 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55eaa352c0f0 <col:23> 'int' EnumConstant 0x55eaa352bfd0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55eaa352c110 <col:40> 'int' 4
| `-EnumConstantDecl 0x55eaa352c240 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55eaa352c3f0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55eaa352c220 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55eaa352c200 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55eaa352c1c0 <col:23> 'int' EnumConstant 0x55eaa352bfd0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55eaa352c1e0 <col:40> 'int' 8
|-CXXMethodDecl 0x55eaa352c430 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55eaa352c4d0 <col:68> "" ""
|-CXXMethodDecl 0x55eaa352c568 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55eaa352c608 <col:45> "" ""
|-CXXMethodDecl 0x55eaa352c6a0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55eaa352c740 <col:57> "" ""
|-CXXMethodDecl 0x55eaa352c7d8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55eaa352c878 <col:45> "" ""
|-CXXMethodDecl 0x55eaa352c910 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55eaa352c9b0 <col:57> "" ""
|-CXXMethodDecl 0x55eaa352ca40 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55eaa352cae0 <col:51> "" ""
|-CXXMethodDecl 0x55eaa352cb70 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55eaa352cc10 <col:63> "" ""
|-CXXMethodDecl 0x55eaa352cca0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55eaa352cd40 <col:53> "" ""
|-CXXMethodDecl 0x55eaa352cdd0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55eaa352ce70 <col:65> "" ""
|-CXXMethodDecl 0x55eaa352cf88 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55eaa352cef8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55eaa352d030 <col:61> "" ""
|-CXXMethodDecl 0x55eaa352d1c8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55eaa352d0b8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55eaa352d130 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55eaa352d278 <col:67> "" ""
|-CXXMethodDecl 0x55eaa352d390 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55eaa352d300 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55eaa352d438 <col:63> "" ""
|-CXXMethodDecl 0x55eaa352d5d0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55eaa352d4c0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55eaa352d538 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55eaa352d680 <col:69> "" ""
|-CXXMethodDecl 0x55eaa352d798 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55eaa352d708 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55eaa352d840 <col:63> "" ""
|-CXXMethodDecl 0x55eaa352ff18 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55eaa352fe08 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55eaa352fe80 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55eaa352ffc8 <col:69> "" ""
|-CXXMethodDecl 0x55eaa35300e0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55eaa3530050 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55eaa3530188 <col:62> "" ""
|-CXXMethodDecl 0x55eaa3530320 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55eaa3530210 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55eaa3530288 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55eaa35303d0 <col:68> "" ""
|-CXXMethodDecl 0x55eaa35304e8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55eaa3530458 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55eaa3530590 <col:63> "" ""
|-CXXMethodDecl 0x55eaa3530728 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55eaa3530618 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55eaa3530690 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55eaa35307d8 <col:69> "" ""
|-CXXMethodDecl 0x55eaa3530868 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55eaa3530908 <col:64> "" ""
|-CXXMethodDecl 0x55eaa3530998 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55eaa3530a38 <col:52> "" ""
|-CXXMethodDecl 0x55eaa3530ac8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55eaa3530b68 <col:67> "" ""
|-CXXMethodDecl 0x55eaa3530bf8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55eaa3530c98 <col:55> "" ""
|-CXXMethodDecl 0x55eaa3530db0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55eaa3530d20 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55eaa3530e58 <col:58> "" ""
|-CXXMethodDecl 0x55eaa3530ff0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55eaa3530ee0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55eaa3530f58 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55eaa35310a0 <col:62> "" ""
|-CXXMethodDecl 0x55eaa35311b8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55eaa3531128 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55eaa3531260 <col:58> "" ""
|-CXXMethodDecl 0x55eaa35313f8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55eaa35312e8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55eaa3531360 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55eaa35314a8 <col:62> "" ""
|-CXXMethodDecl 0x55eaa35315c0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55eaa3531530 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55eaa3531668 <col:60> "" ""
|-CXXMethodDecl 0x55eaa3531800 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55eaa35316f0 <col:34> col:37 'int'
| |-ParmVarDecl 0x55eaa3531768 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55eaa35318b0 <col:64> "" ""
|-CXXMethodDecl 0x55eaa35319c8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55eaa3531938 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55eaa3531a70 <col:58> "" ""
|-CXXMethodDecl 0x55eaa3531c08 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55eaa3531af8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55eaa3531b70 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55eaa3531cb8 <col:62> "" ""
|-CXXMethodDecl 0x55eaa3531dd0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55eaa3531d40 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55eaa3531e78 <col:59> "" ""
|-CXXMethodDecl 0x55eaa3532010 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55eaa3531f00 <col:33> col:36 'int'
| |-ParmVarDecl 0x55eaa3531f78 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55eaa35320c0 <col:63> "" ""
|-AccessSpecDecl 0x55eaa3532130 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55eaa3532158 prev 0x55eaa3527360 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55eaa3532250 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55eaa3532340 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55eaa3532468 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55eaa35325e8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55eaa3532768 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55eaa35328e8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55eaa3543718 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55eaa3543f88 <col:11>
| |-CXXDestructorDecl 0x55eaa35437f0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55eaa3543928 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55eaa3543928
| | `-ParmVarDecl 0x55eaa3543a38 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55eaa3543ad8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55eaa3543ad8
| | `-ParmVarDecl 0x55eaa3543be8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55eaa35469a8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55eaa3546ab8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55eaa3546d38 <col:11>
| |   `-ReturnStmt 0x55eaa3546d28 <col:11>
| |     `-UnaryOperator 0x55eaa3546d10 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55eaa3546d00 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55eaa3546b28 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55eaa3546b28
|   `-ParmVarDecl 0x55eaa3546c38 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55eaa3532950 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55eaa3532a68 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55eaa3532b08 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55eaa3532b70 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55eaa3532bd8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55eaa3532c40 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55eaa3532ca0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55eaa3532d60 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55eaa3532dc0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55eaa3532e20 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55eaa3543628 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55eaa3532b08 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55eaa3543f98 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55eaa3543ff0 <col:12>
| |-CXXConstructorDecl 0x55eaa3543c58 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55eaa3543c58
| | `-ParmVarDecl 0x55eaa3543d68 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55eaa3543e08 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55eaa3543e08
| | `-ParmVarDecl 0x55eaa3543f18 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55eaa3546090 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55eaa3532e98 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55eaa3532ef8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55eaa3532f60 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55eaa3532fc8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55eaa3533030 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55eaa3533098 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55eaa35330f8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55eaa3533158 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55eaa35331c0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55eaa3533248 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55eaa3532e98 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55eaa35435c0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55eaa35330f8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55eaa3544000 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55eaa3544060 <col:21, line:755:5>
|-CXXConstructorDecl 0x55eaa35333e8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55eaa3533328 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55eaa35334e0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55eaa35336c8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55eaa35335d0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55eaa3533998 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55eaa3533780 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55eaa35337f8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55eaa3533870 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa3533bb8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55eaa3533a68 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55eaa3533ae0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55eaa353c198 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55eaa3533c78 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55eaa3533cf0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55eaa3533d68 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55eaa353c2f0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55eaa353c260 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55eaa353c438 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55eaa353c3a8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55eaa353c530 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa328e478 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55eaa328e598 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x55eaa328e660 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x55eaa335ee50 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55eaa3364168 <col:8>
|-CXXConstructorDecl 0x55eaa335ef58 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x55eaa335ef58
| `-ParmVarDecl 0x55eaa335f068 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x55eaa335f108 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55eaa335f218 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x55eaa328e660 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x55eaa3364380 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55eaa3364350 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55eaa328e660
| |     `-CXXStaticCastExpr 0x55eaa3364320 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x55eaa33642f0 <col:8> 'in_addr' lvalue ParmVar 0x55eaa335f218 '' 'in_addr &&'
| `-CompoundStmt 0x55eaa33643c8 <col:8>
`-CXXDestructorDecl 0x55eaa3364600 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa3357b48 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55eaa3357c68 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x55eaa3357d50 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x55eaa3357d30 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x55eaa3357cf8 <col:22> 'int' 4
|-FieldDecl 0x55eaa3357df8 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x55eaa3357dd8 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x55eaa3357da0 <col:21> 'int' 4
|-FieldDecl 0x55eaa3357e58 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x55eaa3357eb8 <line:40:5, col:14> col:14 referenced ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x55eaa3357f18 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x55eaa3357f78 <line:42:5, col:14> col:14 ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x55eaa3357fd8 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x55eaa3358038 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55eaa3358098 <line:49:5, col:14> col:14 ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x55eaa3358108 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x55eaa3358178 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa3573db8 prev 0x55eaa35207b0 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 referenced struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55eaa3573eb0 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x55eaa3573f50 <line:25:5, col:14> col:14 th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55eaa3573fb0 <line:26:5, col:14> col:14 th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x55eaa3574030 <line:27:5, col:15> col:15 th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55eaa3574090 <line:28:5, col:15> col:15 th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55eaa3574138 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x55eaa3574118 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x55eaa35740e0 <col:26> 'int' 4
|-FieldDecl 0x55eaa35741e0 <line:31:5, col:23> col:14 referenced th_off 'unsigned int'
| `-ConstantExpr 0x55eaa35741c0 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x55eaa3574188 <col:23> 'int' 4
|-FieldDecl 0x55eaa3574240 <line:39:5, col:13> col:13 th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x55eaa35742a0 <line:48:5, col:14> col:14 th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x55eaa3574300 <line:49:5, col:14> col:14 th_sum 'uint16_t':'unsigned short'
`-FieldDecl 0x55eaa3574360 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa3651310 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55eaa3651450 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x55eaa36514f8 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x55eaa3651560 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x55eaa36515c8 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x55eaa3651680 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x55eaa36514f8 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x55eaa3652500 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x55eaa36524b8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x55eaa3652480 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x55eaa3652468 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x55eaa3652410 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55eaa334b1b0 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x55eaa3651560 'len' 'int'
| | `-IntegerLiteral 0x55eaa3652578 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x55eaa36515c8 'cap' 'int'
| | `-IntegerLiteral 0x55eaa36525e0 <col:20> 'int' 0
| `-CompoundStmt 0x55eaa3652660 <col:23, line:119:2>
|-CXXConstructorDecl 0x55eaa36517f8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x55eaa3651738 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x55eaa3652670 <col:37, line:121:2>
|-CXXConstructorDecl 0x55eaa3654888 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55eaa3654998 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55eaa36514f8 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x55eaa3656350 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x55eaa3656320 <col:12> 'unsigned char *const' lvalue .s 0x55eaa36514f8
| |     `-DeclRefExpr 0x55eaa3656300 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55eaa3654998 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55eaa3651560 'len' 'int'
| | `-ImplicitCastExpr 0x55eaa36563e0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55eaa36563b0 <col:12> 'const int' lvalue .len 0x55eaa3651560
| |     `-DeclRefExpr 0x55eaa3656390 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55eaa3654998 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55eaa36515c8 'cap' 'int'
| | `-ImplicitCastExpr 0x55eaa3656470 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55eaa3656440 <col:12> 'const int' lvalue .cap 0x55eaa36515c8
| |     `-DeclRefExpr 0x55eaa3656420 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55eaa3654998 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x55eaa36564c8 <col:12>
|-CXXConstructorDecl 0x55eaa3654a38 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55eaa3654a38
| `-ParmVarDecl 0x55eaa3654b48 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x55eaa3656780 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa364cac0 prev 0x55eaa3574578 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55eaa364cbb8 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x55eaa364cc48 <col:21, col:27> col:21 public
|-TypedefDecl 0x55eaa364cc88 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55eaa2ff7dc0 'const char *'
|   `-QualType 0x55eaa2ff7311 'const char' const
|     `-BuiltinType 0x55eaa2ff7310 'char'
|-TypedefDecl 0x55eaa364ccf8 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x55eaa2ff7f90 'char *'
|   `-BuiltinType 0x55eaa2ff7310 'char'
|-TypedefDecl 0x55eaa364ce30 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x55eaa364cda0 'int (StringAccum::*)() const'
|   |-RecordType 0x55eaa32b5850 'StringAccum'
|   | `-CXXRecord 0x55eaa364cac0 'StringAccum'
|   `-ParenType 0x55eaa33251c0 'int () const' sugar
|     `-FunctionProtoType 0x55eaa32f8d50 'int () const' const cdecl
|       `-BuiltinType 0x55eaa2ff7370 'int'
|-CXXConstructorDecl 0x55eaa364cef0 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x55eaa364d040 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x55eaa364cfb0 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x55eaa364d190 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x55eaa364d100 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x55eaa364d338 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x55eaa364d278 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x55eaa364d4e8 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x55eaa364d428 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x55eaa364d5e0 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x55eaa364d798 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x55eaa364d6d0 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x55eaa364d918 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x55eaa364d850 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x55eaa364da10 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55eaa364dad8 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x55eaa364dba0 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55eaa364dc68 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x55eaa364dd30 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x55eaa364de98 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55eaa364df68 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55eaa364e028 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55eaa364e138 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55eaa364e248 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55eaa364e308 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55eaa364e3c8 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55eaa364e510 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55eaa364e480 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55eaa364e6a0 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x55eaa364e5d0 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55eaa364e768 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55eaa364e860 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x55eaa364e920 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55eaa364e9e8 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x55eaa364eaa8 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55eaa364eb68 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55eaa364ec28 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55eaa364ed78 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x55eaa364ece0 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x55eaa364eec8 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x55eaa364ee38 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x55eaa364f020 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x55eaa364ef88 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x55eaa364f170 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x55eaa364f0e0 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x55eaa364f390 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x55eaa364f230 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x55eaa364f2b0 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x55eaa3652338 <col:53> 'int' 0
|-CXXMethodDecl 0x55eaa364f4e8 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x55eaa364f458 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x55eaa3652358 <col:34> 'int' 1
|-CXXMethodDecl 0x55eaa364f630 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x55eaa364f5a0 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55eaa364f780 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x55eaa364f6f0 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x55eaa364f8d0 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x55eaa364f840 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x55eaa364fa20 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55eaa364f990 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55eaa364fbf8 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55eaa364fae0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55eaa364fb60 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55eaa364fdd8 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55eaa364fcc0 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x55eaa364fd40 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x55eaa364ffb8 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55eaa364fea0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55eaa364ff20 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55eaa3650198 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55eaa3650080 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x55eaa3650100 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x55eaa3650378 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55eaa3650260 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55eaa36502e0 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55eaa36506d8 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x55eaa36504c0 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55eaa3650540 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55eaa3652378 <col:56> 'int' 10
| `-ParmVarDecl 0x55eaa36505b8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55eaa3652398 <col:77> 'bool' true
|-CXXMethodDecl 0x55eaa3650a38 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x55eaa3650820 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55eaa36508a0 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x55eaa36523a8 <col:57> 'int' 10
| `-ParmVarDecl 0x55eaa3650918 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55eaa36523c8 <col:78> 'bool' true
|-CXXMethodDecl 0x55eaa3650c60 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x55eaa3650b08 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x55eaa3650b88 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x55eaa3650d58 <line:98:5, col:24> col:12 used take_string 'String ()'
|-CXXMethodDecl 0x55eaa3650ec8 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x55eaa3650e08 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x55eaa3651018 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x55eaa3650f88 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x55eaa36510c0 <col:51> "" ""
|-AccessSpecDecl 0x55eaa3651130 <line:106:3, col:10> col:3 private
|-EnumDecl 0x55eaa3651158 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x55eaa36512a8 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x55eaa36512f8 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55eaa3651288 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x55eaa3651258 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x55eaa332df28 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x55eaa3651310 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55eaa3651450 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x55eaa36514f8 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x55eaa3651560 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x55eaa36515c8 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x55eaa3651680 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x55eaa36514f8 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x55eaa3652500 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x55eaa36524b8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x55eaa3652480 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x55eaa3652468 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x55eaa3652410 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55eaa334b1b0 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x55eaa3651560 'len' 'int'
| | | `-IntegerLiteral 0x55eaa3652578 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x55eaa36515c8 'cap' 'int'
| | | `-IntegerLiteral 0x55eaa36525e0 <col:20> 'int' 0
| | `-CompoundStmt 0x55eaa3652660 <col:23, line:119:2>
| |-CXXConstructorDecl 0x55eaa36517f8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x55eaa3651738 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x55eaa3652670 <col:37, line:121:2>
| |-CXXConstructorDecl 0x55eaa3654888 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55eaa3654998 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55eaa36514f8 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x55eaa3656350 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x55eaa3656320 <col:12> 'unsigned char *const' lvalue .s 0x55eaa36514f8
| | |     `-DeclRefExpr 0x55eaa3656300 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55eaa3654998 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55eaa3651560 'len' 'int'
| | | `-ImplicitCastExpr 0x55eaa36563e0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55eaa36563b0 <col:12> 'const int' lvalue .len 0x55eaa3651560
| | |     `-DeclRefExpr 0x55eaa3656390 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55eaa3654998 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55eaa36515c8 'cap' 'int'
| | | `-ImplicitCastExpr 0x55eaa3656470 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55eaa3656440 <col:12> 'const int' lvalue .cap 0x55eaa36515c8
| | |     `-DeclRefExpr 0x55eaa3656420 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55eaa3654998 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x55eaa36564c8 <col:12>
| |-CXXConstructorDecl 0x55eaa3654a38 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55eaa3654a38
| | `-ParmVarDecl 0x55eaa3654b48 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x55eaa3656780 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x55eaa36518d0 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x55eaa36519d0 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x55eaa3651938 <col:16> col:19 'int'
|-CXXMethodDecl 0x55eaa3651bb0 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x55eaa3651a90 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x55eaa3651b10 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x55eaa3651d90 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x55eaa3651c78 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55eaa3651cf8 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55eaa3651ee8 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x55eaa3651e58 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x55eaa3652038 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x55eaa3651fa8 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x55eaa36522f8 <line:132:5, col:70> col:25
  `-FunctionDecl 0x55eaa3652238 parent 0x55eaa2ff7278 <col:5, col:70> col:25 operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x55eaa36520f0 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x55eaa3652168 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<_Bool>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   _Bool * _ptr
        24 |   _Bool _slot
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class BoolArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<_Bool> (empty)
         0 |   class BoolArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55eaa3623c00 <../dummy_inc/click/args.hh:1257:1, line:1262:1> line:1257:7 referenced class BoolArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55eaa3623d18 <col:1, col:7> col:7 implicit class BoolArg
|-AccessSpecDecl 0x55eaa3623da8 <col:17, col:23> col:17 public
|-CXXMethodDecl 0x55eaa3623fe8 <line:1258:5, col:91> col:17 used parse 'bool (const String &, bool &, const ArgContext &)' static
| |-ParmVarDecl 0x55eaa3623de0 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55eaa3623e60 <col:42, col:48> col:48 result 'bool &'
| `-ParmVarDecl 0x55eaa3623ed8 <col:56, col:81> col:74 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55eaa3624200 <col:81> 'const ArgContext' lvalue Var 0x55eaa360bcb8 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55eaa3624140 <line:1259:5, line:1261:5> line:1259:19 unparse 'String (bool)' static
| |-ParmVarDecl 0x55eaa36240b0 <col:27, col:32> col:32 used x 'bool'
| `-CompoundStmt 0x55eaa3624358 <col:35, line:1261:5>
|   `-ReturnStmt 0x55eaa3624348 <line:1260:9, col:24>
|     `-ExprWithCleanups 0x55eaa3624330 <col:16, col:24> 'String'
|       `-CXXConstructExpr 0x55eaa3624300 <col:16, col:24> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55eaa36242e8 <col:16, col:24> 'String' xvalue
|           `-CXXFunctionalCastExpr 0x55eaa36242c0 <col:16, col:24> 'String' functional cast to class String <ConstructorConversion>
|             `-CXXBindTemporaryExpr 0x55eaa36242a0 <col:16, col:24> 'String' (CXXTemporary 0x55eaa36242a0)
|               `-CXXConstructExpr 0x55eaa3624268 <col:16, col:24> 'String' 'void (bool)'
|                 `-ImplicitCastExpr 0x55eaa3624250 <col:23> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x55eaa3624230 <col:23> 'bool' lvalue ParmVar 0x55eaa36240b0 'x' 'bool'
|-CXXConstructorDecl 0x55eaa36cd168 <line:1257:7> col:7 implicit constexpr BoolArg 'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55eaa36cd240 <col:7> col:7 implicit ~BoolArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55eaa36cd378 <col:7> col:7 implicit constexpr BoolArg 'void (const BoolArg &)' inline default trivial noexcept-unevaluated 0x55eaa36cd378
| `-ParmVarDecl 0x55eaa36cd488 <col:7> col:7 'const BoolArg &'
`-CXXConstructorDecl 0x55eaa36cd528 <col:7> col:7 implicit used constexpr BoolArg 'void (BoolArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55eaa36cd638 <col:7> col:7 'BoolArg &&'
  `-CompoundStmt 0x55eaa36ce290 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.BoolArg = type { i8 }
  NonVirtualBaseLLVMType:%class.BoolArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55eaa3624398 <../dummy_inc/click/args.hh:1264:1, col:54> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'BoolArg'
|-TemplateArgument type 'bool'
|-CXXRecordDecl 0x55eaa36245f8 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55eaa36cd078 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55eaa36cd6a8 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<bool> &)' inline default trivial noexcept-unevaluated 0x55eaa36cd6a8
| `-ParmVarDecl 0x55eaa36cd7b8 <col:19> col:19 'const DefaultArg<bool> &'
|-CXXConstructorDecl 0x55eaa36cd858 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<bool> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55eaa36cd968 <col:19> col:19 used 'DefaultArg<bool> &&'
| |-CXXCtorInitializer 'BoolArg'
| | `-CXXConstructExpr 0x55eaa36ce2a0 <col:19> 'BoolArg' 'void (BoolArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55eaa36ce270 <col:19> 'BoolArg' xvalue <UncheckedDerivedToBase (BoolArg)>
| |     `-CXXStaticCastExpr 0x55eaa36ce240 <col:19> 'DefaultArg<bool>' xvalue static_cast<struct DefaultArg<_Bool> &&> <NoOp>
| |       `-DeclRefExpr 0x55eaa36ce210 <col:19> 'DefaultArg<bool>' lvalue ParmVar 0x55eaa36cd968 '' 'DefaultArg<bool> &&'
| `-CompoundStmt 0x55eaa36ce310 <col:19>
`-CXXDestructorDecl 0x55eaa36cda08 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>
