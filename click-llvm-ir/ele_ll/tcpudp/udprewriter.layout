
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct libdivide_u32_t
         0 |   uint32_t magic
         4 |   uint8_t more
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPFlowID
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   class IPAddress _daddr
         4 |     uint32_t _addr
         8 |   uint16_t _sport
        10 |   uint16_t _dport
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPRewriterEntry
         0 |   class IPFlowID _flowid
         0 |     class IPAddress _saddr
         0 |       uint32_t _addr
         4 |     class IPAddress _daddr
         4 |       uint32_t _addr
         8 |     uint16_t _sport
        10 |     uint16_t _dport
   12:0-23 |   uint32_t _output
        15 |   uint8_t _direction
        16 |   class IPRewriterEntry * _hashnext
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterFlow *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5)
         0 |   class IPRewriterPattern * pattern
         0 |   class IPMapper * mapper
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterInput
         0 |   class IPRewriterBase * owner
         8 |   int owner_input
        12 |   int kind
        16 |   int foutput
        24 |   class IPRewriterBase * reply_element
        32 |   int routput
        36 |   uint32_t count
        40 |   uint32_t failures
        48 |   union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5) u
        48 |     class IPRewriterPattern * pattern
        48 |     class IPMapper * mapper
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class IPRewriterEntry * _element
         8 |   class IPRewriterEntry ** _pprev
        16 |   HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |   const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > (base)
         0 |     class IPRewriterEntry * _element
         8 |     class IPRewriterEntry ** _pprev
        16 |     HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |     const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterFlow
         0 |   class IPRewriterEntry [2] _e
        48 |   uint16_t _ip_csum_delta
        50 |   uint16_t _udp_csum_delta
        52 |   click_jiffies_t _expiry_j
   56:0-31 |   size_t _place
        60 |   uint8_t _ip_p
        61 |   uint8_t _tflags
        62 |   _Bool _guaranteed
        63 |   uint8_t _reply_anno
        64 |   class IPRewriterInput * _owner
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | class UDPRewriter::UDPFlow
         0 |   class IPRewriterFlow (base)
         0 |     class IPRewriterEntry [2] _e
        48 |     uint16_t _ip_csum_delta
        50 |     uint16_t _udp_csum_delta
        52 |     click_jiffies_t _expiry_j
   56:0-31 |     size_t _place
        60 |     uint8_t _ip_p
        61 |     uint8_t _tflags
        62 |     _Bool _guaranteed
        63 |     uint8_t _reply_anno
        64 |     class IPRewriterInput * _owner
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9a8a330 prev 0x559ea99ffdb8 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9a8a428 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x559ea9a8a4b8 <col:19, col:25> col:19 public
|-TypedefDecl 0x559ea9a8a4f0 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x559ea9876760 'uninitialized_type'
|   `-CXXRecord 0x559ea98766c8 'uninitialized_type'
|-CXXConstructorDecl 0x559ea9a8a5b0 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x559ea9a91e70 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559ea9a91f18 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559ea9a91ed8 <col:10> 'int' 0
| `-CompoundStmt 0x559ea9a91f60 <col:13, line:22:5>
|-CXXConstructorDecl 0x559ea9a8a700 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x559ea9a8a670 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x559ea9a91e70 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559ea9a91fb0 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x559ea9a91f70 <col:10> 'unsigned int' lvalue ParmVar 0x559ea9a8a670 'x' 'unsigned int'
| `-CompoundStmt 0x559ea9a91ff8 <col:13, line:27:5>
|-CXXConstructorDecl 0x559ea9a8a858 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x559ea9a8a7c8 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x559ea9a91e70 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559ea9a92060 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x559ea9a92048 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x559ea9a92008 <col:10> 'int' lvalue ParmVar 0x559ea9a8a7c8 'x' 'int'
| `-CompoundStmt 0x559ea9a920a8 <col:13, line:31:5>
|-CXXConstructorDecl 0x559ea9a8a9b0 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x559ea9a8a920 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x559ea9a91e70 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559ea9a92110 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x559ea9a920f8 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x559ea9a920b8 <col:10> 'unsigned long' lvalue ParmVar 0x559ea9a8a920 'x' 'unsigned long'
| `-CompoundStmt 0x559ea9a92158 <col:13, line:35:5>
|-CXXConstructorDecl 0x559ea9a8ab08 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x559ea9a8aa78 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x559ea9a91e70 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559ea9a921c0 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x559ea9a921a8 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x559ea9a92168 <col:10> 'long' lvalue ParmVar 0x559ea9a8aa78 'x' 'long'
| `-CompoundStmt 0x559ea9a92208 <col:13, line:39:5>
|-CXXConstructorDecl 0x559ea9a8acc8 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x559ea9a8abd8 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x559ea9a91e70 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559ea9a92288 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x559ea9a92238 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x559ea99b8b60
| |     `-DeclRefExpr 0x559ea9a92218 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x559ea9a8abd8 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x559ea9a922d0 <col:20, line:44:5>
|-CXXConstructorDecl 0x559ea9a8ffa0 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x559ea9a8ad90 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x559ea9a92438 <col:51, line:56:5>
|   `-BinaryOperator 0x559ea9a92418 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x559ea9a922f0 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x559ea9a91e70
|     | `-CXXThisExpr 0x559ea9a922e0 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x559ea9a92400 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x559ea9a923e8 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x559ea9a923c8 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x559ea9a92398 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x559ea9a92380 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x559ea9a92320 <col:47> 'const unsigned char *' lvalue ParmVar 0x559ea9a8ad90 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x559ea9a900f0 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x559ea9a90060 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x559ea9a90298 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x559ea9a901d8 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x559ea9a924a8 <col:56, line:68:5>
|   `-CStyleCastExpr 0x559ea9a92480 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x559ea9a92450 <col:9> 'const uninitialized_type' lvalue ParmVar 0x559ea9a901d8 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x559ea9a90428 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x559ea9a90360 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x559ea9a90518 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x559ea9a93468 <col:46, line:83:5>
|   `-ReturnStmt 0x559ea9a93458 <line:82:2, col:29>
|     `-ExprWithCleanups 0x559ea9a93440 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x559ea9a93410 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559ea9a932c8 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x559ea9a931b0 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x559ea9a93098 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x559ea9a924d0 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x559ea9a90608 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x559ea9a93518 <col:31, line:88:5>
|   `-ReturnStmt 0x559ea9a93508 <line:87:2, col:10>
|     `-UnaryOperator 0x559ea9a934f0 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x559ea9a934d8 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x559ea9a934c0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x559ea9a93490 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x559ea9a91e70
|             `-CXXThisExpr 0x559ea9a93480 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x559ea9a906c8 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x559ea9a93598 <col:34, line:93:5>
|   `-ReturnStmt 0x559ea9a93588 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x559ea9a93570 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x559ea9a93540 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x559ea9a91e70
|         `-CXXThisExpr 0x559ea9a93530 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x559ea9a90798 <line:99:5, line:101:5> line:99:12 used operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x559ea9a93618 <col:38, line:101:5>
|   `-ReturnStmt 0x559ea9a93608 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x559ea9a935f0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x559ea9a935c0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x559ea9a91e70
|         `-CXXThisExpr 0x559ea9a935b0 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x559ea9a90868 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x559ea9a938e8 <col:38, line:108:5>
|   `-ReturnStmt 0x559ea9a938d8 <line:107:2, col:58>
|     `-BinaryOperator 0x559ea9a938b8 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x559ea9a937d0 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x559ea9a937b0 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x559ea9a93798 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x559ea9a93640 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x559ea9a91e70
|       |   |   `-CXXThisExpr 0x559ea9a93630 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x559ea9a93770 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x559ea9a93758 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x559ea9a936d8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x559ea99c6048 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x559ea9a936b8 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x559ea9a93890 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x559ea9a93878 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x559ea9a93858 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x559ea99c6048 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x559ea9a93838 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x559ea9a90928 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x559ea9a93b58 <col:39, line:112:5>
|   `-ReturnStmt 0x559ea9a93b48 <line:111:2, col:56>
|     `-BinaryOperator 0x559ea9a93b28 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x559ea9a93a40 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x559ea9a93a20 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x559ea9a93a08 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x559ea9a93910 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x559ea9a91e70
|       |   |   `-CXXThisExpr 0x559ea9a93900 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x559ea9a939e0 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x559ea9a939c8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x559ea9a939a8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x559ea99c6048 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x559ea9a93988 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x559ea9a93b00 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x559ea9a93ae8 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x559ea9a93ac8 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x559ea99c6048 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x559ea9a93aa8 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x559ea9a90a58 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x559ea9a90b60 <line:115:5, col:38> col:12 used operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x559ea9a90c70 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x559ea9a90d60 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x559ea9a90e20 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x559ea9a90ee8 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x559ea9a910e8 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x559ea9a90f98 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x559ea9a91010 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x559ea9a91268 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x559ea9a911a8 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x559ea9a913b0 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x559ea9a91320 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x559ea9a91558 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x559ea9a91468 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x559ea9a916a0 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x559ea9a91610 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x559ea9a917e8 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x559ea9a91758 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x559ea9a918b0 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x559ea9a91970 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x559ea9a91ae8 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x559ea9a91a20 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x559ea9a91bb0 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x559ea9a91c98 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x559ea9a91d40 <col:51> "" ""
|-TypedefDecl 0x559ea9a91de0 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x559ea99ffe50 'IPAddress'
|   `-CXXRecord 0x559ea9a8a330 'IPAddress'
|-AccessSpecDecl 0x559ea9a91e38 <line:150:3, col:10> col:3 private
|-FieldDecl 0x559ea9a91e70 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x559ea9a92518 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9a92628 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x559ea9a91e70 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559ea9d30dc8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x559ea9d30d80 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x559ea9a91e70
| |     `-DeclRefExpr 0x559ea9d30d60 <col:7> 'const IPAddress' lvalue ParmVar 0x559ea9a92628 '' 'const IPAddress &'
| `-CompoundStmt 0x559ea9d30e10 <col:7>
|-CXXConstructorDecl 0x559ea9a926c8 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9a927d8 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x559ea9a91e70 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559ea9a933b8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x559ea9a93370 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x559ea9a91e70
| |     `-CXXStaticCastExpr 0x559ea9a93340 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9a93310 <col:7> 'IPAddress' lvalue ParmVar 0x559ea9a927d8 '' 'IPAddress &&'
| `-CompoundStmt 0x559ea9a93400 <col:7>
|-CXXDestructorDecl 0x559ea9a930c8 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x559ea9d316b8 <col:7> col:7 implicit used operator= 'IPAddress &(const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9d317c8 <col:7> col:7 used 'const IPAddress &'
| `-CompoundStmt 0x559ea9d31b20 <col:7>
|   |-BinaryOperator 0x559ea9d31ac8 <col:7> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x559ea9d31a80 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x559ea9a91e70
|   | | `-CXXThisExpr 0x559ea9d31a70 <col:7> 'IPAddress *' this
|   | `-ImplicitCastExpr 0x559ea9d31ab0 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x559ea9d31a40 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x559ea9a91e70
|   |     `-DeclRefExpr 0x559ea9d31a20 <col:7> 'const IPAddress' lvalue ParmVar 0x559ea9d317c8 '' 'const IPAddress &'
|   `-ReturnStmt 0x559ea9d31b10 <col:7>
|     `-UnaryOperator 0x559ea9d31af8 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559ea9d31ae8 <col:7> 'IPAddress *' this
`-CXXMethodDecl 0x559ea9d31838 <col:7> col:7 implicit operator= 'IPAddress &(IPAddress &&)' inline default trivial noexcept-unevaluated 0x559ea9d31838
  `-ParmVarDecl 0x559ea9d31948 <col:7> col:7 'IPAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9d2e370 <../dummy_inc/click/ipflowid.hh:9:1, line:143:1> line:9:7 referenced class IPFlowID definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9d2e488 <col:1, col:7> col:7 implicit referenced class IPFlowID
|-AccessSpecDecl 0x559ea9d2e518 <col:18, col:24> col:18 public
|-TypedefDecl 0x559ea9d2e550 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x559ea9876760 'uninitialized_type'
|   `-CXXRecord 0x559ea98766c8 'uninitialized_type'
|-CXXConstructorDecl 0x559ea9d2e610 <line:17:5, line:19:5> line:17:5 used IPFlowID 'void ()'
| |-CXXCtorInitializer Field 0x559ea9d30518 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x559ea9d30ae8 <line:18:4, col:11> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x559ea9d30578 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x559ea9d30b50 <col:14, col:21> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x559ea9d305d8 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x559ea9d30be0 <col:31> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x559ea9d30ba0 <col:31> 'int' 0
| |-CXXCtorInitializer Field 0x559ea9d30638 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x559ea9d30c60 <col:42> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x559ea9d30c20 <col:42> 'int' 0
| `-CompoundStmt 0x559ea9d30cc0 <col:45, line:19:5>
|-CXXConstructorDecl 0x559ea9d2e978 <line:26:5, line:28:5> line:26:5 used IPFlowID 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x559ea9d2e6c8 <col:14, col:24> col:24 used saddr 'IPAddress'
| |-ParmVarDecl 0x559ea9d2e740 <col:31, col:40> col:40 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x559ea9d2e7b8 <col:47, col:57> col:57 used daddr 'IPAddress'
| |-ParmVarDecl 0x559ea9d2e830 <col:64, col:73> col:73 used dport 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x559ea9d30518 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x559ea9d30e20 <line:27:4, col:16> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x559ea9d30d10 <col:11> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x559ea9d30cd0 <col:11> 'IPAddress' lvalue ParmVar 0x559ea9d2e6c8 'saddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x559ea9d30578 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x559ea9d30ed0 <col:19, col:31> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x559ea9d30eb8 <col:26> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x559ea9d30e78 <col:26> 'IPAddress' lvalue ParmVar 0x559ea9d2e7b8 'daddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x559ea9d305d8 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x559ea9d30f68 <col:41> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x559ea9d30f28 <col:41> 'uint16_t':'unsigned short' lvalue ParmVar 0x559ea9d2e740 'sport' 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x559ea9d30638 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x559ea9d30fe8 <col:56> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x559ea9d30fa8 <col:56> 'uint16_t':'unsigned short' lvalue ParmVar 0x559ea9d2e830 'dport' 'uint16_t':'unsigned short'
| `-CompoundStmt 0x559ea9d31048 <col:63, line:28:5>
|-CXXConstructorDecl 0x559ea9d2eb98 <line:37:5, col:60> col:14 IPFlowID 'void (const Packet *, bool)'
| |-ParmVarDecl 0x559ea9d2ea50 <col:23, col:37> col:37 p 'const Packet *'
| `-ParmVarDecl 0x559ea9d2eac8 <col:40, col:55> col:45 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559ea9d30ab0 <col:55> 'bool' false
|-CXXConstructorDecl 0x559ea9d2eda8 <line:47:5, col:64> col:14 IPFlowID 'void (const click_ip *, bool)'
| |-ParmVarDecl 0x559ea9d2ec60 <col:23, col:39> col:39 iph 'const click_ip *'
| `-ParmVarDecl 0x559ea9d2ecd8 <col:44, col:59> col:49 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559ea9d30ac0 <col:59> 'bool' false
|-CXXConstructorDecl 0x559ea9d2ef00 <line:50:5, line:52:5> line:50:12 IPFlowID 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x559ea9d2ee70 <col:21, col:47> col:47 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x559ea9d30518 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x559ea9d31058 <col:12> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x559ea9d30578 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x559ea9d310a8 <col:12> 'IPAddress' 'void ()'
| `-CompoundStmt 0x559ea9d31160 <col:55, line:52:5>
|   `-CStyleCastExpr 0x559ea9d31138 <line:51:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x559ea9d31108 <col:9> 'const uninitialized_type' lvalue ParmVar 0x559ea9d2ee70 'unused' 'const uninitialized_type &'
|-TypedefDecl 0x559ea9d2f0b8 <line:55:5, col:60> col:35 referenced unspecified_bool_type 'IPAddress (IPFlowID::*)() const'
| `-MemberPointerType 0x559ea9d2f030 'IPAddress (IPFlowID::*)() const'
|   |-RecordType 0x559ea9d2e400 'IPFlowID'
|   | `-CXXRecord 0x559ea9d2e370 'IPFlowID'
|   `-ParenType 0x559ea9d2efd0 'IPAddress () const' sugar
|     `-FunctionProtoType 0x559ea9c56a70 'IPAddress () const' const cdecl
|       `-RecordType 0x559ea99ffe50 'IPAddress'
|         `-CXXRecord 0x559ea9a8a330 'IPAddress'
|-CXXConversionDecl 0x559ea9d2f1f8 <line:57:5, line:59:5> line:57:5 operator IPAddress (IPFlowID::*)() const 'IPFlowID::unspecified_bool_type () const'
| `-CompoundStmt 0x559ea9d31410 <col:44, line:59:5>
|   `-ReturnStmt 0x559ea9d31400 <line:58:2, col:47>
|     `-ConditionalOperator 0x559ea9d313d0 <col:9, col:47> 'IPAddress (IPFlowID::*)() const'
|       |-BinaryOperator 0x559ea9d312f8 <col:9, col:19> 'bool' '||'
|       | |-ImplicitCastExpr 0x559ea9d312c8 <col:9> 'bool' <IntegralToBoolean>
|       | | `-ImplicitCastExpr 0x559ea9d31248 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | |   `-CXXMemberCallExpr 0x559ea9d31228 <col:9> 'uint32_t':'unsigned int'
|       | |     `-MemberExpr 0x559ea9d311f8 <col:9> '<bound member function type>' .operator unsigned int 0x559ea9a90798
|       | |       `-MemberExpr 0x559ea9d31188 <col:9> 'const IPAddress' lvalue ->_saddr 0x559ea9d30518
|       | |         `-CXXThisExpr 0x559ea9d31178 <col:9> 'const IPFlowID *' implicit this
|       | `-ImplicitCastExpr 0x559ea9d312e0 <col:19> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x559ea9d312b0 <col:19> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x559ea9d31290 <col:19> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x559ea9d31260 <col:19> '<bound member function type>' .operator unsigned int 0x559ea9a90798
|       |         `-MemberExpr 0x559ea9d311c8 <col:19> 'const IPAddress' lvalue ->_daddr 0x559ea9d30578
|       |           `-CXXThisExpr 0x559ea9d311b8 <col:19> 'const IPFlowID *' implicit this
|       |-UnaryOperator 0x559ea9d31380 <col:28, col:39> 'IPAddress (IPFlowID::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x559ea9d31350 <col:29, col:39> 'IPAddress () const' CXXMethod 0x559ea9d2f320 'saddr' 'IPAddress () const'
|       `-ImplicitCastExpr 0x559ea9d313b8 <col:47> 'IPAddress (IPFlowID::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x559ea9d31398 <col:47> 'int' 0
|-CXXMethodDecl 0x559ea9d2f320 <line:63:5, line:65:5> line:63:15 used saddr 'IPAddress () const'
| `-CompoundStmt 0x559ea9d314a8 <col:29, line:65:5>
|   `-ReturnStmt 0x559ea9d31498 <line:64:2, col:9>
|     `-CXXConstructExpr 0x559ea9d31468 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x559ea9d31438 <col:9> 'const IPAddress' lvalue ->_saddr 0x559ea9d30518
|         `-CXXThisExpr 0x559ea9d31428 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x559ea9d2f438 <line:67:5, line:69:5> line:67:14 used sport 'uint16_t () const'
| `-CompoundStmt 0x559ea9d31528 <col:28, line:69:5>
|   `-ReturnStmt 0x559ea9d31518 <line:68:2, col:9>
|     `-ImplicitCastExpr 0x559ea9d31500 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x559ea9d314d0 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x559ea9d305d8
|         `-CXXThisExpr 0x559ea9d314c0 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x559ea9d2f4f8 <line:71:5, line:73:5> line:71:15 used daddr 'IPAddress () const'
| `-CompoundStmt 0x559ea9d315c0 <col:29, line:73:5>
|   `-ReturnStmt 0x559ea9d315b0 <line:72:2, col:9>
|     `-CXXConstructExpr 0x559ea9d31580 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x559ea9d31550 <col:9> 'const IPAddress' lvalue ->_daddr 0x559ea9d30578
|         `-CXXThisExpr 0x559ea9d31540 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x559ea9d2f5b8 <line:75:5, line:77:5> line:75:14 used dport 'uint16_t () const'
| `-CompoundStmt 0x559ea9d31640 <col:28, line:77:5>
|   `-ReturnStmt 0x559ea9d31630 <line:76:2, col:9>
|     `-ImplicitCastExpr 0x559ea9d31618 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x559ea9d315e8 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x559ea9d30638
|         `-CXXThisExpr 0x559ea9d315d8 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x559ea9d2f6f8 <line:80:5, line:82:5> line:80:10 set_saddr 'void (IPAddress)'
| |-ParmVarDecl 0x559ea9d2f668 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x559ea9d31be8 <col:33, line:82:5>
|   `-CXXOperatorCallExpr 0x559ea9d31bb0 <line:81:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x559ea9d31b98 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x559ea9d319d0 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x559ea9d316b8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x559ea9d31668 <col:2> 'IPAddress' lvalue ->_saddr 0x559ea9d30518
|     | `-CXXThisExpr 0x559ea9d31658 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x559ea9d319b8 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x559ea9d31698 <col:11> 'IPAddress' lvalue ParmVar 0x559ea9d2f668 'a' 'IPAddress'
|-CXXMethodDecl 0x559ea9d2f8a8 <line:85:5, line:87:5> line:85:10 set_sport 'void (uint16_t)'
| |-ParmVarDecl 0x559ea9d2f7b0 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x559ea9d31c98 <col:32, line:87:5>
|   `-BinaryOperator 0x559ea9d31c78 <line:86:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x559ea9d31c10 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x559ea9d305d8
|     | `-CXXThisExpr 0x559ea9d31c00 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x559ea9d31c60 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9d31c40 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x559ea9d2f7b0 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x559ea9d2f9f0 <line:89:5, line:91:5> line:89:10 set_daddr 'void (IPAddress)'
| |-ParmVarDecl 0x559ea9d2f960 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x559ea9d31d98 <col:33, line:91:5>
|   `-CXXOperatorCallExpr 0x559ea9d31d60 <line:90:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x559ea9d31d48 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x559ea9d31d28 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x559ea9d316b8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x559ea9d31cc0 <col:2> 'IPAddress' lvalue ->_daddr 0x559ea9d30578
|     | `-CXXThisExpr 0x559ea9d31cb0 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x559ea9d31d10 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x559ea9d31cf0 <col:11> 'IPAddress' lvalue ParmVar 0x559ea9d2f960 'a' 'IPAddress'
|-CXXMethodDecl 0x559ea9d2fb38 <line:94:5, line:96:5> line:94:10 set_dport 'void (uint16_t)'
| |-ParmVarDecl 0x559ea9d2faa8 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x559ea9d31e48 <col:32, line:96:5>
|   `-BinaryOperator 0x559ea9d31e28 <line:95:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x559ea9d31dc0 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x559ea9d30638
|     | `-CXXThisExpr 0x559ea9d31db0 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x559ea9d31e10 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9d31df0 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x559ea9d2faa8 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x559ea9d2fe00 <line:103:5, line:108:5> line:103:10 assign 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x559ea9d2fbf0 <col:17, col:27> col:27 used saddr 'IPAddress'
| |-ParmVarDecl 0x559ea9d2fc68 <col:34, col:43> col:43 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x559ea9d2fce0 <col:50, col:60> col:60 used daddr 'IPAddress'
| |-ParmVarDecl 0x559ea9d2fd58 <col:67, col:76> col:76 used dport 'uint16_t':'unsigned short'
| `-CompoundStmt 0x559ea9d32160 <col:83, line:108:5>
|   |-CXXOperatorCallExpr 0x559ea9d31f10 <line:104:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x559ea9d31ef8 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x559ea9d31ed8 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x559ea9d316b8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x559ea9d31e70 <col:2> 'IPAddress' lvalue ->_saddr 0x559ea9d30518
|   | | `-CXXThisExpr 0x559ea9d31e60 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x559ea9d31ec0 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x559ea9d31ea0 <col:11> 'IPAddress' lvalue ParmVar 0x559ea9d2fbf0 'saddr' 'IPAddress'
|   |-CXXOperatorCallExpr 0x559ea9d31ff8 <line:105:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x559ea9d31fe0 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x559ea9d31fc0 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x559ea9d316b8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x559ea9d31f58 <col:2> 'IPAddress' lvalue ->_daddr 0x559ea9d30578
|   | | `-CXXThisExpr 0x559ea9d31f48 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x559ea9d31fa8 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x559ea9d31f88 <col:11> 'IPAddress' lvalue ParmVar 0x559ea9d2fce0 'daddr' 'IPAddress'
|   |-BinaryOperator 0x559ea9d320a8 <line:106:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x559ea9d32040 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x559ea9d305d8
|   | | `-CXXThisExpr 0x559ea9d32030 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x559ea9d32090 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ea9d32070 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x559ea9d2fc68 'sport' 'uint16_t':'unsigned short'
|   `-BinaryOperator 0x559ea9d32140 <line:107:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x559ea9d320d8 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x559ea9d30638
|     | `-CXXThisExpr 0x559ea9d320c8 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x559ea9d32128 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9d32108 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x559ea9d2fd58 'dport' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x559ea9d2ff08 <line:113:5, line:115:5> line:113:14 used reverse 'IPFlowID () const'
| `-CompoundStmt 0x559ea9d32c98 <col:30, line:115:5>
|   `-ReturnStmt 0x559ea9d32c88 <line:114:2, col:48>
|     `-ExprWithCleanups 0x559ea9d32c70 <col:9, col:48> 'IPFlowID'
|       `-CXXConstructExpr 0x559ea9d32c40 <col:9, col:48> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559ea9d327f8 <col:9, col:48> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x559ea9d32668 <col:9, col:48> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x559ea9d325d8 <col:18> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x559ea9d321b0 <col:18> 'const IPAddress' lvalue ->_daddr 0x559ea9d30578
|             |   `-CXXThisExpr 0x559ea9d321a0 <col:18> 'const IPFlowID *' implicit this
|             |-ImplicitCastExpr 0x559ea9d32608 <col:26> 'uint16_t':'unsigned short' <LValueToRValue>
|             | `-MemberExpr 0x559ea9d321f0 <col:26> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x559ea9d30638
|             |   `-CXXThisExpr 0x559ea9d321e0 <col:26> 'const IPFlowID *' implicit this
|             |-CXXConstructExpr 0x559ea9d32620 <col:34> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x559ea9d32230 <col:34> 'const IPAddress' lvalue ->_saddr 0x559ea9d30518
|             |   `-CXXThisExpr 0x559ea9d32220 <col:34> 'const IPFlowID *' implicit this
|             `-ImplicitCastExpr 0x559ea9d32650 <col:42> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-MemberExpr 0x559ea9d32270 <col:42> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x559ea9d305d8
|                 `-CXXThisExpr 0x559ea9d32260 <col:42> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x559ea9d2ffc8 <line:116:5, col:59> col:21 rev 'IPFlowID () const' inline
| `-DeprecatedAttr 0x559ea9d30068 <col:48> "" ""
|-CXXMethodDecl 0x559ea9d300f8 <line:122:5, col:34> col:23 hashcode 'hashcode_t () const' inline
|-CXXMethodDecl 0x559ea9d301b8 <line:127:5, col:22> col:12 used unparse 'String () const'
|-CXXConversionDecl 0x559ea9d30288 <line:129:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x559ea9d30330 <col:51> "" ""
|-CXXMethodDecl 0x559ea9d303d0 <line:130:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x559ea9d30470 <col:44> "" ""
|-AccessSpecDecl 0x559ea9d304e0 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x559ea9d30518 <line:135:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x559ea9d30578 <line:136:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x559ea9d305d8 <line:137:5, col:14> col:14 referenced _sport 'uint16_t':'unsigned short'
|-FieldDecl 0x559ea9d30638 <line:138:5, col:14> col:14 referenced _dport 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x559ea9d30770 <line:140:5, col:26> col:9 unparse 'int (char *) const'
| `-ParmVarDecl 0x559ea9d306a0 <col:17, col:23> col:23 s 'char *'
|-FriendDecl 0x559ea9d30a58 <line:141:5, col:76> col:25
| `-FunctionDecl 0x559ea9d30998 parent 0x559ea971d278 <col:5, col:76> col:25 operator<< 'StringAccum &(StringAccum &, const IPFlowID &)'
|   |-ParmVarDecl 0x559ea9d30828 <col:36, col:49> col:49 sa 'StringAccum &'
|   `-ParmVarDecl 0x559ea9d308c8 <col:53, col:69> col:69 flow_id 'const IPFlowID &'
|-CXXConstructorDecl 0x559ea9d322a0 <line:9:7> col:7 implicit constexpr IPFlowID 'void (const IPFlowID &)' inline default trivial noexcept-unevaluated 0x559ea9d322a0
| `-ParmVarDecl 0x559ea9d323b8 <col:7> col:7 'const IPFlowID &'
|-CXXConstructorDecl 0x559ea9d32458 <col:7> col:7 implicit used constexpr IPFlowID 'void (IPFlowID &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9d32568 <col:7> col:7 used 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x559ea9d30518 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x559ea9d328e8 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x559ea9d328a0 <col:7> 'IPAddress' xvalue ._saddr 0x559ea9d30518
| |     `-CXXStaticCastExpr 0x559ea9d32870 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9d32840 <col:7> 'IPFlowID' lvalue ParmVar 0x559ea9d32568 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x559ea9d30578 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x559ea9d329e8 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x559ea9d329a0 <col:7> 'IPAddress' xvalue ._daddr 0x559ea9d30578
| |     `-CXXStaticCastExpr 0x559ea9d32970 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9d32940 <col:7> 'IPFlowID' lvalue ParmVar 0x559ea9d32568 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x559ea9d305d8 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x559ea9d32ae8 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x559ea9d32aa0 <col:7> 'uint16_t':'unsigned short' xvalue ._sport 0x559ea9d305d8
| |     `-CXXStaticCastExpr 0x559ea9d32a70 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9d32a40 <col:7> 'IPFlowID' lvalue ParmVar 0x559ea9d32568 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x559ea9d30638 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x559ea9d32bd0 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x559ea9d32b88 <col:7> 'uint16_t':'unsigned short' xvalue ._dport 0x559ea9d30638
| |     `-CXXStaticCastExpr 0x559ea9d32b58 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9d32b28 <col:7> 'IPFlowID' lvalue ParmVar 0x559ea9d32568 '' 'IPFlowID &&'
| `-CompoundStmt 0x559ea9d32c30 <col:7>
|-CXXDestructorDecl 0x559ea9d326b8 <col:7> col:7 implicit referenced ~IPFlowID 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x559ea9d3b0b0 <col:7> col:7 implicit used operator= 'IPFlowID &(const IPFlowID &) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9d3b1b8 <col:7> col:7 used 'const IPFlowID &'
| `-CompoundStmt 0x559ea9d3bd18 <col:7>
|   |-CXXMemberCallExpr 0x559ea9d3b9a8 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x559ea9d3b960 <col:7> '<bound member function type>' .operator= 0x559ea9d316b8
|   | | `-MemberExpr 0x559ea9d3b870 <col:7> 'IPAddress' lvalue ->_saddr 0x559ea9d30518
|   | |   `-CXXThisExpr 0x559ea9d3b860 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x559ea9d3b930 <col:7> 'const IPAddress' lvalue ._saddr 0x559ea9d30518
|   |   `-DeclRefExpr 0x559ea9d3b910 <col:7> 'const IPFlowID' lvalue ParmVar 0x559ea9d3b1b8 '' 'const IPFlowID &'
|   |-CXXMemberCallExpr 0x559ea9d3bb28 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x559ea9d3bae0 <col:7> '<bound member function type>' .operator= 0x559ea9d316b8
|   | | `-MemberExpr 0x559ea9d3b9f0 <col:7> 'IPAddress' lvalue ->_daddr 0x559ea9d30578
|   | |   `-CXXThisExpr 0x559ea9d3b9e0 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x559ea9d3bab0 <col:7> 'const IPAddress' lvalue ._daddr 0x559ea9d30578
|   |   `-DeclRefExpr 0x559ea9d3ba90 <col:7> 'const IPFlowID' lvalue ParmVar 0x559ea9d3b1b8 '' 'const IPFlowID &'
|   |-BinaryOperator 0x559ea9d3bbf8 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x559ea9d3bbb0 <col:7> 'uint16_t':'unsigned short' lvalue ->_sport 0x559ea9d305d8
|   | | `-CXXThisExpr 0x559ea9d3bba0 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x559ea9d3bbe0 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x559ea9d3bb70 <col:7> 'const uint16_t':'const unsigned short' lvalue ._sport 0x559ea9d305d8
|   |     `-DeclRefExpr 0x559ea9d3bb50 <col:7> 'const IPFlowID' lvalue ParmVar 0x559ea9d3b1b8 '' 'const IPFlowID &'
|   |-BinaryOperator 0x559ea9d3bcc0 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x559ea9d3bc78 <col:7> 'uint16_t':'unsigned short' lvalue ->_dport 0x559ea9d30638
|   | | `-CXXThisExpr 0x559ea9d3bc68 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x559ea9d3bca8 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x559ea9d3bc38 <col:7> 'const uint16_t':'const unsigned short' lvalue ._dport 0x559ea9d30638
|   |     `-DeclRefExpr 0x559ea9d3bc18 <col:7> 'const IPFlowID' lvalue ParmVar 0x559ea9d3b1b8 '' 'const IPFlowID &'
|   `-ReturnStmt 0x559ea9d3bd08 <col:7>
|     `-UnaryOperator 0x559ea9d3bcf0 <col:7> 'IPFlowID' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559ea9d3bce0 <col:7> 'IPFlowID *' this
`-CXXMethodDecl 0x559ea9d3b228 <col:7> col:7 implicit operator= 'IPFlowID &(IPFlowID &&)' inline default trivial noexcept-unevaluated 0x559ea9d3b228
  `-ParmVarDecl 0x559ea9d3b338 <col:7> col:7 'IPFlowID &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  NonVirtualBaseLLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9d39b70 prev 0x559ea9d36270 <../elements/ip/iprwmapping.hh:16:1, line:65:1> line:16:7 referenced class IPRewriterEntry definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9d39c68 <col:1, col:7> col:7 implicit referenced class IPRewriterEntry
|-AccessSpecDecl 0x559ea9d39cf8 <col:25, col:31> col:25 public
|-TypedefDecl 0x559ea9d39d30 <line:18:5, col:22> col:22 referenced key_type 'IPFlowID'
| `-RecordType 0x559ea9d2e400 'IPFlowID'
|   `-CXXRecord 0x559ea9d2e370 'IPFlowID'
|-TypedefDecl 0x559ea9d39d98 <line:19:5, col:29> col:29 referenced key_const_reference 'const IPFlowID &'
| `-LValueReferenceType 0x559ea9d30890 'const IPFlowID &'
|   `-QualType 0x559ea9d2e401 'const IPFlowID' const
|     `-RecordType 0x559ea9d2e400 'IPFlowID'
|       `-CXXRecord 0x559ea9d2e370 'IPFlowID'
|-CXXConstructorDecl 0x559ea9d39e50 <line:21:5, line:22:5> line:21:5 IPRewriterEntry 'void ()'
| |-CXXCtorInitializer Field 0x559ea9d3a8b0 '_flowid' 'IPFlowID'
| | `-CXXConstructExpr 0x559ea9d3abb8 <col:5> 'IPFlowID' 'void ()'
| `-CompoundStmt 0x559ea9d3ac10 <col:23, line:22:5>
|-CXXMethodDecl 0x559ea9d3a118 <line:24:5, line:30:5> line:24:10 initialize 'void (const IPFlowID &, uint32_t, bool)'
| |-ParmVarDecl 0x559ea9d39f08 <col:21, col:37> col:37 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x559ea9d39f80 <col:45, col:54> col:54 used output 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559ea9d39ff8 <col:62, col:67> col:67 used direction 'bool'
| `-CompoundStmt 0x559ea9d3bfd8 <col:78, line:30:5>
|   |-ParenExpr 0x559ea9d3b030 <line:25:2, col:164> 'void'
|   | `-ConditionalOperator 0x559ea9d3b000 <col:3, col:163> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9d3acc0 <col:3, col:41> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9d3ac90 <col:23, col:33> 'bool' '<='
|   |   |   |-ImplicitCastExpr 0x559ea9d3ac60 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x559ea9d3ac20 <col:23> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9d39f80 'output' 'uint32_t':'unsigned int'
|   |   |   `-ImplicitCastExpr 0x559ea9d3ac78 <col:33> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x559ea9d3ac40 <col:33> 'int' 16777215
|   |   |-CXXFunctionalCastExpr 0x559ea9d3ad20 <col:45, col:52> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9d3ad00 <col:51> 'int' 0
|   |   `-CallExpr 0x559ea9d3af60 <col:56, col:163> 'void'
|   |     |-ImplicitCastExpr 0x559ea9d3af48 <col:56> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9d3af28 <col:56> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9d3afa0 <col:71> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9d3ad90 <col:71> 'const char [19]' lvalue "output <= 0xFFFFFF"
|   |     |-ImplicitCastExpr 0x559ea9d3afb8 <col:93> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9d3adc0 <col:93> 'const char [30]' lvalue "../elements/ip/iprwmapping.hh"
|   |     |-ImplicitCastExpr 0x559ea9d3afd0 <col:126> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9d3adf8 <col:126> 'int' 25
|   |     `-ImplicitCastExpr 0x559ea9d3afe8 <col:130, col:144> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9d3af10 <col:130, col:144> 'const char [67]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9d3aef8 <col:144> 'const char [67]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9d3ae98 <col:144> 'const char [67]' lvalue "void IPRewriterEntry::initialize(const IPFlowID &, uint32_t, bool)"
|   |-CXXOperatorCallExpr 0x559ea9d3bdc0 <line:26:2, col:12> 'IPFlowID' lvalue
|   | |-ImplicitCastExpr 0x559ea9d3bda8 <col:10> 'IPFlowID &(*)(const IPFlowID &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x559ea9d3b7f8 <col:10> 'IPFlowID &(const IPFlowID &) noexcept' lvalue CXXMethod 0x559ea9d3b0b0 'operator=' 'IPFlowID &(const IPFlowID &) noexcept'
|   | |-MemberExpr 0x559ea9d3b060 <col:2> 'IPFlowID' lvalue ->_flowid 0x559ea9d3a8b0
|   | | `-CXXThisExpr 0x559ea9d3b050 <col:2> 'IPRewriterEntry *' implicit this
|   | `-DeclRefExpr 0x559ea9d3b090 <col:12> 'const IPFlowID' lvalue ParmVar 0x559ea9d39f08 'flowid' 'const IPFlowID &'
|   |-BinaryOperator 0x559ea9d3be70 <line:27:2, col:12> 'uint32_t':'unsigned int' lvalue bitfield '='
|   | |-MemberExpr 0x559ea9d3be08 <col:2> 'uint32_t':'unsigned int' lvalue bitfield ->_output 0x559ea9d3a950
|   | | `-CXXThisExpr 0x559ea9d3bdf8 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x559ea9d3be58 <col:12> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ea9d3be38 <col:12> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9d39f80 'output' 'uint32_t':'unsigned int'
|   |-BinaryOperator 0x559ea9d3bf20 <line:28:2, col:15> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x559ea9d3bea0 <col:2> 'uint8_t':'unsigned char' lvalue ->_direction 0x559ea9d3a9b0
|   | | `-CXXThisExpr 0x559ea9d3be90 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x559ea9d3bf08 <col:15> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x559ea9d3bef0 <col:15> 'bool' <LValueToRValue>
|   |     `-DeclRefExpr 0x559ea9d3bed0 <col:15> 'bool' lvalue ParmVar 0x559ea9d39ff8 'direction' 'bool'
|   `-BinaryOperator 0x559ea9d3bfb8 <line:29:2, col:14> 'IPRewriterEntry *' lvalue '='
|     |-MemberExpr 0x559ea9d3bf50 <col:2> 'IPRewriterEntry *' lvalue ->_hashnext 0x559ea9d3aa10
|     | `-CXXThisExpr 0x559ea9d3bf40 <col:2> 'IPRewriterEntry *' implicit this
|     `-ImplicitCastExpr 0x559ea9d3bfa0 <col:14> 'IPRewriterEntry *' <NullToPointer>
|       `-IntegerLiteral 0x559ea9d3bf80 <col:14> 'int' 0
|-CXXMethodDecl 0x559ea9d3a248 <line:32:5, line:34:5> line:32:21 used flowid 'const IPFlowID &() const'
| `-CompoundStmt 0x559ea9d3c060 <col:36, line:34:5>
|   `-ReturnStmt 0x559ea9d3c050 <line:33:2, col:9>
|     `-MemberExpr 0x559ea9d3c020 <col:9> 'const IPFlowID' lvalue ->_flowid 0x559ea9d3a8b0
|       `-CXXThisExpr 0x559ea9d3c010 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x559ea9d3a308 <line:35:5, col:40> col:21 rewritten_flowid 'IPFlowID () const' inline
|-CXXMethodDecl 0x559ea9d3a3c8 <line:37:5, line:39:5> line:37:10 direction 'bool () const'
| `-CompoundStmt 0x559ea9d3c0f8 <col:28, line:39:5>
|   `-ReturnStmt 0x559ea9d3c0e8 <line:38:2, col:9>
|     `-ImplicitCastExpr 0x559ea9d3c0d0 <col:9> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x559ea9d3c0b8 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x559ea9d3c088 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x559ea9d3a9b0
|           `-CXXThisExpr 0x559ea9d3c078 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x559ea9d3a490 <line:41:5, line:43:5> line:41:9 output 'int () const'
| `-CompoundStmt 0x559ea9d3c190 <col:24, line:43:5>
|   `-ReturnStmt 0x559ea9d3c180 <line:42:2, col:9>
|     `-ImplicitCastExpr 0x559ea9d3c168 <col:9> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x559ea9d3c150 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x559ea9d3c120 <col:9> 'const uint32_t':'const unsigned int' lvalue bitfield ->_output 0x559ea9d3a950
|           `-CXXThisExpr 0x559ea9d3c110 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x559ea9d3a5a8 <line:45:5, line:47:5> line:45:21 flow 'IPRewriterFlow *()'
| `-CompoundStmt 0x559ea9d3c298 <col:28, line:47:5>
|   `-ReturnStmt 0x559ea9d3c288 <line:46:2, col:61>
|     `-CXXReinterpretCastExpr 0x559ea9d3c258 <col:9, col:61> 'IPRewriterFlow *' reinterpret_cast<class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x559ea9d3c228 <col:44, col:51> 'IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x559ea9d3c1a8 <col:44> 'IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x559ea9d3c210 <col:51> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x559ea9d3c1f8 <col:51> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x559ea9d3c1c8 <col:51> 'uint8_t':'unsigned char' lvalue ->_direction 0x559ea9d3a9b0
|               `-CXXThisExpr 0x559ea9d3c1b8 <col:51> 'IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x559ea9d3a6c8 <line:48:5, line:50:5> line:48:27 flow 'const IPRewriterFlow *() const'
| `-CompoundStmt 0x559ea9d3c3a0 <col:40, line:50:5>
|   `-ReturnStmt 0x559ea9d3c390 <line:49:2, col:67>
|     `-CXXReinterpretCastExpr 0x559ea9d3c360 <col:9, col:67> 'const IPRewriterFlow *' reinterpret_cast<const class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x559ea9d3c330 <col:50, col:57> 'const IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x559ea9d3c2b0 <col:50> 'const IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x559ea9d3c318 <col:57> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x559ea9d3c300 <col:57> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x559ea9d3c2d0 <col:57> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x559ea9d3a9b0
|               `-CXXThisExpr 0x559ea9d3c2c0 <col:57> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x559ea9d3a7d8 <line:52:5, line:54:5> line:52:25 used hashkey 'IPRewriterEntry::key_const_reference () const'
| `-CompoundStmt 0x559ea9d3c408 <col:41, line:54:5>
|   `-ReturnStmt 0x559ea9d3c3f8 <line:53:2, col:9>
|     `-MemberExpr 0x559ea9d3c3c8 <col:9> 'const IPFlowID' lvalue ->_flowid 0x559ea9d3a8b0
|       `-CXXThisExpr 0x559ea9d3c3b8 <col:9> 'const IPRewriterEntry *' implicit this
|-AccessSpecDecl 0x559ea9d3a878 <line:56:3, col:10> col:3 private
|-FieldDecl 0x559ea9d3a8b0 <line:58:5, col:14> col:14 referenced _flowid 'IPFlowID'
|-FieldDecl 0x559ea9d3a950 <line:59:5, col:24> col:14 referenced _output 'uint32_t':'unsigned int'
| `-ConstantExpr 0x559ea9d3a930 <col:24> 'int' Int: 24
|   `-IntegerLiteral 0x559ea9d3a900 <col:24> 'int' 24
|-FieldDecl 0x559ea9d3a9b0 <line:60:5, col:13> col:13 referenced _direction 'uint8_t':'unsigned char'
|-FieldDecl 0x559ea9d3aa10 <line:61:5, col:22> col:22 referenced _hashnext 'IPRewriterEntry *'
|-FriendDecl 0x559ea9d3ab60 <line:63:5, col:55> col:12 'class HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|-CXXConstructorDecl 0x559ea9d90f38 <line:16:7> col:7 implicit constexpr IPRewriterEntry 'void (const IPRewriterEntry &)' inline default trivial noexcept-unevaluated 0x559ea9d90f38
| `-ParmVarDecl 0x559ea9d91048 <col:7> col:7 'const IPRewriterEntry &'
|-CXXConstructorDecl 0x559ea9d910e8 <col:7> col:7 implicit constexpr IPRewriterEntry 'void (IPRewriterEntry &&)' inline default trivial noexcept-unevaluated 0x559ea9d910e8
| `-ParmVarDecl 0x559ea9d911f8 <col:7> col:7 'IPRewriterEntry &&'
`-CXXDestructorDecl 0x559ea9d913e8 <col:7> col:7 implicit ~IPRewriterEntry 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  NonVirtualBaseLLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:24 IsSigned:0 StorageSize:24 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9c9a958 prev 0x559ea9c920c8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x559ea9c9aa50 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x559ea9c9aae0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x559ea9c9ab58 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x559ea9c9ac18 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x559ea9c9ace0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x559ea9c9ae58 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x559ea9c9ad90 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x559ea9c9af00 <col:24>
| `-OptimizeNoneAttr 0x559ea9c9af58 <col:34>
|-CXXMethodDecl 0x559ea9c9afa0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x559ea9c9b258 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x559ea9c9b050 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x559ea9c9b0c8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x559ea9c9b148 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x559ea9c9b320 <line:229:7, col:14> col:7 private
|-FieldDecl 0x559ea9c9b358 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x559ea9c9b3c0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x559ea9c9b448 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x559ea9c9b768 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x559ea9c9b500 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x559ea9c9b578 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x559ea9c9b5f0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x559ea9c9b670 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x559ea9c9b880 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x559ea9c09f08 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x559ea9c09f08
| `-ParmVarDecl 0x559ea9c0a018 <col:11> col:11 'const Element::Port &'
`-CXXConstructorDecl 0x559ea9c0a0b8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x559ea9c0a0b8
  `-ParmVarDecl 0x559ea9c0a1c8 <col:11> col:11 'Element::Port &&'

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9c8d910 prev 0x559ea9c8d690 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559ea9c8da08 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x559ea9c8da98 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x559ea9c8daf8 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x559ea9c8dbe8 <line:32:5, col:22> col:13 ~Element 'void ()' virtual noexcept-unevaluated 0x559ea9c8dbe8
|-VarDecl 0x559ea9c8dce8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x559ea9c8deb8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x559ea9c8dd68 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x559ea9c8dde0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x559ea9c8e048 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x559ea9c8df80 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x559ea9c8e0f0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x559ea9c8e228 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x559ea9c8e160 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x559ea9c8e3c8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x559ea9c8e308 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x559ea9c8e568 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x559ea9c8e4a8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x559ea9c8e610 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x559ea9c8e710 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x559ea9c8e7f0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c8e6f0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x559ea9c8e6d0 <col:26> 'int' 1
| `-EnumConstantDecl 0x559ea9c8e7a0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x559ea9c8e808 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9c8e780 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x559ea9c8e760 <col:44> 'int' 2
|-CXXMethodDecl 0x559ea9c8e950 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x559ea9c8e838 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x559ea9c8e8b8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x559ea9c8eaa8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x559ea9c8ea18 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x559ea9c8ece8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x559ea9c8eb68 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x559ea9c8ebe0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x559ea9c8ed98 <col:20>
| `-OptimizeNoneAttr 0x559ea9c8edf0 <col:30>
|-CXXMethodDecl 0x559ea9c8eef8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x559ea9c8ee30 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x559ea9c8efa0 <col:20>
| `-OptimizeNoneAttr 0x559ea9c8eff8 <col:30>
|-CXXMethodDecl 0x559ea9c8f048 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x559ea9c8f110 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x559ea9c8f228 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x559ea9c8f2f0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x559ea9c8f378 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x559ea9c8f400 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x559ea9c8f488 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x559ea9c8f518 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x559ea9c8f5d8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x559ea9c8f660 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x559ea9c8f6e8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x559ea9c8f770 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x559ea9c8f7f8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x559ea9c8f880 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x559ea9c8f910 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x559ea9c8f9d0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x559ea9c8fa60 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x559ea9c8fbb0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x559ea9c8fb18 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x559ea9c8fd40 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x559ea9c8fc70 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x559ea9c8ffe0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x559ea9c8fdf8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x559ea9c8fe78 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x559ea9c8fef8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x559ea9c90098 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x559ea9c901a0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x559ea9c90430 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c90180 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x559ea9c90160 <col:33> 'int' 0
| |-EnumConstantDecl 0x559ea9c90230 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x559ea9c90448 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c90210 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x559ea9c901f0 <col:32> 'int' 20
| |-EnumConstantDecl 0x559ea9c902c0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x559ea9c90460 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c902a0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x559ea9c90280 <col:38> 'int' 90
| |-EnumConstantDecl 0x559ea9c90350 <line:83:9, col:35> col:9 referenced CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x559ea9c90478 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c90330 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x559ea9c90310 <col:35> 'int' 100
| `-EnumConstantDecl 0x559ea9c903e0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x559ea9c90490 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9c903c0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x559ea9c903a0 <col:32> 'int' 2000
|-CXXMethodDecl 0x559ea9c904d0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x559ea9c90910 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x559ea9c90780 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x559ea9c907f8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9c909e0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x559ea9c90b60 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x559ea9c90a90 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9c90d68 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x559ea9c90c18 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x559ea9c90c90 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9c90e68 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x559ea9c90f08 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x559ea9c90fd0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x559ea9c91060 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x559ea9c91290 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c91040 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x559ea9c91020 <col:36> 'int' EnumConstant 0x559ea9c90fd0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x559ea9c910b0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x559ea9c91100 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x559ea9c91150 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x559ea9c911a0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x559ea9c911f0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x559ea9c91240 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x559ea9c91378 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x559ea9c912b8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x559ea9c91440 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x559ea9c91500 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x559ea9c915c0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x559ea9c91680 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x559ea9c91798 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x559ea9c91860 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x559ea9c919e0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x559ea9c91910 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x559ea9c91b08 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x559ea9c91d08 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x559ea9c91bb8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x559ea9c91c38 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x559ea9c9e668 <col:54, line:127:5>
|   |-ParenExpr 0x559ea9c9e518 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x559ea9c9e4e8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9c9e1d8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x559ea9c9e1b0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x559ea9c9e198 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x559ea9c9e180 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x559ea9c9e150 <col:31> 'Router *' lvalue ->_router 0x559ea9c9c030
|   |   |         `-CXXThisExpr 0x559ea9c9e140 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x559ea9c9e238 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9c9e218 <col:48> 'int' 0
|   |   `-CallExpr 0x559ea9c9e448 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x559ea9c9e430 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c9e410 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9c9e488 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c9e2a8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x559ea9c9e4a0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c9e2c8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x559ea9c9e4b8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9c9e300 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x559ea9c9e4d0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9c9e3f8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9c9e3e0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9c9e398 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x559ea9c9e5b0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x559ea9c9e548 <col:9> 'Router *' lvalue ->_router 0x559ea9c9c030
|   | | `-CXXThisExpr 0x559ea9c9e538 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x559ea9c9e598 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ea9c9e578 <col:19> 'Router *' lvalue ParmVar 0x559ea9c91bb8 'r' 'Router *'
|   `-BinaryOperator 0x559ea9c9e648 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x559ea9c9e5e0 <col:9> 'int' lvalue ->_eindex 0x559ea9c9c098
|     | `-CXXThisExpr 0x559ea9c9e5d0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x559ea9c9e630 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9c9e610 <col:19> 'int' lvalue ParmVar 0x559ea9c91c38 'eindex' 'int'
|-CXXMethodDecl 0x559ea9c91e90 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x559ea9c91dc8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x559ea9c91f60 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x559ea9c92028 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x559ea9c920c8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x559ea9c92318 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x559ea9c92190 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x559ea9c92210 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x559ea9c923c8 <col:20>
| `-OptimizeNoneAttr 0x559ea9c92420 <col:30>
|-CXXMethodDecl 0x559ea9c92528 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x559ea9c92460 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x559ea9c925d0 <col:20>
| `-OptimizeNoneAttr 0x559ea9c92628 <col:30>
|-CXXMethodDecl 0x559ea9c926f8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x559ea9c92668 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x559ea9c927a0 <col:20>
| `-OptimizeNoneAttr 0x559ea9c927f8 <col:30>
|-CXXMethodDecl 0x559ea9c92988 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x559ea9c92830 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x559ea9c928b0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x559ea9c92b18 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x559ea9c92a50 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x559ea9c92c68 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x559ea9c92bd8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x559ea9c92db8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x559ea9c92d28 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x559ea9c92f08 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x559ea9c92e78 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x559ea9c931c8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x559ea9c92fc0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x559ea9c93040 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x559ea9c930e8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x559ea9c93300 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x559ea9c933c0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x559ea9c93690 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x559ea9c93540 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x559ea9c935b8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9c937b8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x559ea9c93990 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x559ea9c93870 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x559ea9c938f0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x559ea9c93b78 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x559ea9c93a58 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x559ea9c93ad8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x559ea9c93ee8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x559ea9c93c38 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x559ea9c93cb0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x559ea9c93d30 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x559ea9c9dc50 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x559ea9c9dc30 <col:106> 'int' 0
| `-ParmVarDecl 0x559ea9c93da8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559ea9c9dc88 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559ea9c9dc68 <col:126> 'int' 0
|-CXXMethodDecl 0x559ea9c94268 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559ea9c93fb8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x559ea9c94030 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x559ea9c940b0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x559ea9c94128 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559ea9c9dcc0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559ea9c9dca0 <col:114> 'int' 0
|-CXXMethodDecl 0x559ea9c945f8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559ea9c94340 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x559ea9c943b8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x559ea9c94438 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x559ea9c9dcd8 <col:96> 'int' 0
| `-ParmVarDecl 0x559ea9c944b0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559ea9c9dd18 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559ea9c9dcf8 <col:116> 'int' 0
|-CXXMethodDecl 0x559ea9c94978 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x559ea9c946c8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x559ea9c94740 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x559ea9c947c0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x559ea9c9dd50 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x559ea9c9dd30 <col:109> 'int' 0
| `-ParmVarDecl 0x559ea9c94838 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559ea9c9dd88 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559ea9c9dd68 <col:129> 'int' 0
|-CXXMethodDecl 0x559ea9c94cf8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559ea9c94a48 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x559ea9c94ac0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x559ea9c94b40 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x559ea9c94bb8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559ea9c9ddc0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559ea9c9dda0 <col:117> 'int' 0
|-CXXMethodDecl 0x559ea9c95088 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559ea9c94dd0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c94e48 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x559ea9c94ec8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x559ea9c9ddd8 <col:99> 'int' 0
| `-ParmVarDecl 0x559ea9c94f40 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559ea9c9de18 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559ea9c9ddf8 <col:119> 'int' 0
|-CXXMethodDecl 0x559ea9c954a8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x559ea9c95158 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x559ea9c951d8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x559ea9c95250 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x559ea9c952d0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x559ea9c9de50 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x559ea9c9de30 <col:108> 'int' 0
| `-ParmVarDecl 0x559ea9c95350 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x559ea9c9de88 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x559ea9c9de68 <col:141> 'int' 0
|-CXXMethodDecl 0x559ea9c958c8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x559ea9c95580 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x559ea9c95600 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x559ea9c95678 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x559ea9c956f8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x559ea9c95778 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x559ea9c9dea0 <col:121> 'int' 0
|-CXXMethodDecl 0x559ea9c95cf8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x559ea9c959a8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x559ea9c95a28 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x559ea9c95aa0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x559ea9c95b20 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x559ea9c9dec0 <col:98> 'int' 0
| `-ParmVarDecl 0x559ea9c95ba0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x559ea9c9dee0 <col:123> 'int' 0
|-CXXMethodDecl 0x559ea9c95fc0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x559ea9c95dd0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x559ea9c95e50 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x559ea9c95ed0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x559ea9c9df00 <col:80> 'int' 0
|-EnumDecl 0x559ea9c96078 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x559ea9c96180 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559ea9c96410 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c96160 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x559ea9c96140 <col:42> 'int' 1
| |-EnumConstantDecl 0x559ea9c96210 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559ea9c96428 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c961f0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x559ea9c961d0 <col:40> 'int' 2
| |-EnumConstantDecl 0x559ea9c962a0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559ea9c96440 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c96280 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x559ea9c96260 <col:44> 'int' 4
| |-EnumConstantDecl 0x559ea9c96330 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559ea9c96458 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c96310 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x559ea9c962f0 <col:36> 'int' 7
| `-EnumConstantDecl 0x559ea9c963c0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x559ea9c96470 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9c963a0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x559ea9c96380 <col:34> 'int' 6
|-CXXMethodDecl 0x559ea9c96728 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x559ea9c96498 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x559ea9c96538 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x559ea9c965b8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x559ea9c96630 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x559ea9c9dfb8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x559ea9c9dfa0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x559ea9c9df88 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x559ea9c9df68 <col:98, col:105> 'String' (CXXTemporary 0x559ea9c9df68)
|           `-CXXTemporaryObjectExpr 0x559ea9c9df30 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x559ea9c969c8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x559ea9c967f8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x559ea9c96870 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x559ea9c968e8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x559ea9c9e068 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x559ea9c9e050 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x559ea9c9e038 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x559ea9c9e018 <col:94, col:101> 'String' (CXXTemporary 0x559ea9c9e018)
| |         `-CXXTemporaryObjectExpr 0x559ea9c9dfe0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x559ea9c9e850 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x559ea9c9e7c8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x559ea9c9e798 <col:9> '<bound member function type>' ->add_task_handlers 0x559ea9c96728
|     | `-CXXThisExpr 0x559ea9c9e788 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x559ea9c9e808 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x559ea9c9e708 <col:27> 'Task *' lvalue ParmVar 0x559ea9c967f8 'task' 'Task *'
|     |-ImplicitCastExpr 0x559ea9c9e820 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x559ea9c9e728 <col:33> 'NotifierSignal *' lvalue ParmVar 0x559ea9c96870 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x559ea9c9e838 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x559ea9c9e748 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x559ea9c963c0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x559ea9c9e768 <col:62> 'const String' lvalue ParmVar 0x559ea9c968e8 'prefix' 'const String &'
|-CXXMethodDecl 0x559ea9c96bd8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x559ea9c96a90 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x559ea9c96b08 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x559ea9c9e118 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x559ea9c9e100 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x559ea9c9e0e8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x559ea9c9e0c8 <col:70, col:77> 'String' (CXXTemporary 0x559ea9c9e0c8)
| |         `-CXXTemporaryObjectExpr 0x559ea9c9e090 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x559ea9c9ea28 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x559ea9c9e9a0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x559ea9c9e970 <col:9> '<bound member function type>' ->add_task_handlers 0x559ea9c96728
|     | `-CXXThisExpr 0x559ea9c9e960 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x559ea9c9e9e0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x559ea9c9e8e0 <col:27> 'Task *' lvalue ParmVar 0x559ea9c96a90 'task' 'Task *'
|     |-ImplicitCastExpr 0x559ea9c9e9f8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x559ea9c9e900 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x559ea9c9ea10 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x559ea9c9e920 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x559ea9c963c0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x559ea9c9e940 <col:57> 'const String' lvalue ParmVar 0x559ea9c96b08 'prefix' 'const String &'
|-CXXMethodDecl 0x559ea9c96eb8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x559ea9c96ca0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c96d20 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559ea9c96d98 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x559ea9c97168 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x559ea9c96f88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c97008 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559ea9c97088 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x559ea9c974a8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x559ea9c97238 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c97310 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559ea9c97388 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x559ea9c97758 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x559ea9c97578 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c975f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559ea9c97678 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x559ea9c97a08 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x559ea9c97828 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c978a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559ea9c97928 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x559ea9c97cb8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x559ea9c97ad8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c97b58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559ea9c97bd0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x559ea9c97f68 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x559ea9c97d88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c97e08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559ea9c97e88 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x559ea9c98218 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x559ea9c98038 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c980b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559ea9c98138 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x559ea9c984f8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x559ea9c982e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c98368 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559ea9c98410 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x559ea9c987d8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x559ea9c985c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c98648 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559ea9c986f0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x559ea9c98a40 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x559ea9c988a8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x559ea9c98928 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x559ea9c989a0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x559ea9c98ce8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x559ea9c98b10 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x559ea9c98b90 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x559ea9c98c08 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x559ea9c98f98 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x559ea9c98db8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c98e38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559ea9c98eb8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x559ea9c99248 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x559ea9c99068 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c990e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559ea9c99160 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x559ea9c994f8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x559ea9c99318 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c99398 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559ea9c99410 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x559ea9c997c8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x559ea9c995c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c99648 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559ea9c996e8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x559ea9c99af8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x559ea9c99898 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559ea9c99918 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x559ea9c99990 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x559ea9c99a08 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559ea9c9e130 <col:93> 'bool' false
|-CXXMethodDecl 0x559ea9c99ce0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x559ea9c99bc8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x559ea9c99c48 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x559ea9c99eb8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x559ea9c99da0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x559ea9c99e20 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x559ea9c9a198 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x559ea9c99f78 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x559ea9c99ff0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x559ea9c9a070 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x559ea9c9a0e8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9c9a488 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x559ea9c9a268 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x559ea9c9a2e0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x559ea9c9a360 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x559ea9c9a3d8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9c9a6c0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x559ea9c9a560 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x559ea9c9a5e0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x559ea9c9a8a8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x559ea9c9a788 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x559ea9c9a808 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x559ea9c9a958 prev 0x559ea9c920c8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x559ea9c9aa50 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x559ea9c9aae0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x559ea9c9ab58 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x559ea9c9ac18 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x559ea9c9ace0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x559ea9c9ae58 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x559ea9c9ad90 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x559ea9c9af00 <col:24>
| | `-OptimizeNoneAttr 0x559ea9c9af58 <col:34>
| |-CXXMethodDecl 0x559ea9c9afa0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x559ea9c9b258 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x559ea9c9b050 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x559ea9c9b0c8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x559ea9c9b148 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x559ea9c9b320 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x559ea9c9b358 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x559ea9c9b3c0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x559ea9c9b448 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x559ea9c9b768 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x559ea9c9b500 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x559ea9c9b578 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x559ea9c9b5f0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x559ea9c9b670 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x559ea9c9b880 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x559ea9c09f08 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x559ea9c09f08
| | `-ParmVarDecl 0x559ea9c0a018 <col:11> col:11 'const Element::Port &'
| `-CXXConstructorDecl 0x559ea9c0a0b8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x559ea9c0a0b8
|   `-ParmVarDecl 0x559ea9c0a1c8 <col:11> col:11 'Element::Port &&'
|-CXXMethodDecl 0x559ea9c9b8f8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x559ea9c9b998 <col:38> "" ""
|-CXXMethodDecl 0x559ea9c9ba28 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x559ea9c9bac8 <col:44> "" ""
|-AccessSpecDecl 0x559ea9c9bb38 <line:260:3, col:10> col:3 private
|-EnumDecl 0x559ea9c9bb60 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x559ea9c9bc60 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x559ea9c9bcb0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9c9bc40 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x559ea9c9bc20 <col:27> 'int' 4
|-FieldDecl 0x559ea9c9bd68 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x559ea9c9bf18 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x559ea9c9bfd0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x559ea9c9c030 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x559ea9c9c098 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x559ea9c9c1e8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x559ea9c9c128 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x559ea9c9c398 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x559ea9c9c2a8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x559ea9c9c578 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x559ea9c9c458 <col:20> col:23 'int'
| `-ParmVarDecl 0x559ea9c9c4d8 <col:25> col:28 'int'
|-CXXMethodDecl 0x559ea9c9c820 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x559ea9c9c640 <col:23> col:26 'int'
| |-ParmVarDecl 0x559ea9c9c6c0 <col:28> col:31 'int'
| `-ParmVarDecl 0x559ea9c9c738 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x559ea9c9c8d8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x559ea9c9c9a0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x559ea9c9c9f0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x559ea9c9ca40 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x559ea9c9cc20 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x559ea9c9cad0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x559ea9c9cb48 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9c9cec8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x559ea9c9cce8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x559ea9c9cd68 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x559ea9c9cde0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9c9d0e8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x559ea9c9cf98 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x559ea9c9d018 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x559ea9c9d420 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x559ea9c9d1a8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x559ea9c9d228 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x559ea9c9d2a0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x559ea9c9d320 <col:57> col:60 'int'
|-CXXMethodDecl 0x559ea9c9d608 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x559ea9c9d4f0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x559ea9c9d570 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x559ea9c9d758 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x559ea9c9d6c8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x559ea9c9dad8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x559ea9c9d818 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x559ea9c9d898 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x559ea9c9d910 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x559ea9c9d990 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x559ea9c9dbf0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashContainer_adapter<class IPRewriterEntry> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |   class IPRewriterEntry ** buckets
         8 |   uint32_t nbuckets
        12 |   uint32_t first_bucket
        16 |   size_t size
        24 |   struct libdivide_u32_t bucket_divider
        24 |     uint32_t magic
        28 |     uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
         0 |     class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |     class IPRewriterEntry ** buckets
         8 |     uint32_t nbuckets
        12 |     uint32_t first_bucket
        16 |     size_t size
        24 |     struct libdivide_u32_t bucket_divider
        24 |       uint32_t magic
        28 |       uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<56> >
         0 |   vector_memory<class sized_array_memory<56> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterInput>
         0 |   class vector_memory<class sized_array_memory<56> > vm_
         0 |     vector_memory<class sized_array_memory<56> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterBase
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |     class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |       class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |       class IPRewriterEntry ** buckets
       120 |       uint32_t nbuckets
       124 |       uint32_t first_bucket
       128 |       size_t size
       136 |       struct libdivide_u32_t bucket_divider
       136 |         uint32_t magic
       140 |         uint8_t more
       144 |   class Vector<class IPRewriterInput> _input_specs
       144 |     class vector_memory<class sized_array_memory<56> > vm_
       144 |       vector_memory<class sized_array_memory<56> >::type * l_
       152 |       vector_memory::size_type n_
       156 |       vector_memory::size_type capacity_
       160 |   class IPRewriterHeap * _heap
       168 |   uint32_t [2] _timeouts
       176 |   uint32_t _gc_interval_sec
       184 |   class Timer _gc_timer
       184 |     int _schedpos1
       192 |     class Timestamp _expiry_s
       192 |       union Timestamp::rep_t _t
       192 |         int64_t x
       200 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |       TimerCallback callback
       208 |     void * _thunk
       216 |     class Element * _owner
       224 |     class RouterThread * _thread
           | [sizeof=232, dsize=232, align=8,
           |  nvsize=232, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9d381e8 <../dummy_inc/click/hashcontainer.hh:13:1, col:29> line:33:7 class HashContainer_adapter definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IPRewriterEntry'
|-CXXRecordDecl 0x559ea9d6b008 prev 0x559ea9d381e8 <col:1, col:7> col:7 implicit class HashContainer_adapter
|-AccessSpecDecl 0x559ea9d6b098 <col:31, col:37> col:31 public
|-TypedefDecl 0x559ea9d6b190 <line:34:5, col:34> col:34 referenced key_type 'typename IPRewriterEntry::key_type':'IPFlowID'
| `-ElaboratedType 0x559ea9d6b140 'typename IPRewriterEntry::key_type' sugar
|   `-TypedefType 0x559ea9d6b120 'IPRewriterEntry::key_type' sugar
|     |-Typedef 0x559ea9d39d30 'key_type'
|     `-RecordType 0x559ea9d2e400 'IPFlowID'
|       `-CXXRecord 0x559ea9d2e370 'IPFlowID'
|-TypedefDecl 0x559ea9d6b260 <line:35:5, col:45> col:45 key_const_reference 'typename IPRewriterEntry::key_const_reference':'const IPFlowID &'
| `-ElaboratedType 0x559ea9d6b210 'typename IPRewriterEntry::key_const_reference' sugar
|   `-TypedefType 0x559ea9d3a770 'IPRewriterEntry::key_const_reference' sugar
|     |-Typedef 0x559ea9d39d98 'key_const_reference'
|     `-LValueReferenceType 0x559ea9d30890 'const IPFlowID &'
|       `-QualType 0x559ea9d2e401 'const IPFlowID' const
|         `-RecordType 0x559ea9d2e400 'IPFlowID'
|           `-CXXRecord 0x559ea9d2e370 'IPFlowID'
|-CXXMethodDecl 0x559ea9d6b450 <line:36:5, line:38:5> line:36:16 hashnext 'IPRewriterEntry *&(IPRewriterEntry *)' static
| `-ParmVarDecl 0x559ea9d6b358 <col:25, col:28> col:28 e 'IPRewriterEntry *'
|-CXXMethodDecl 0x559ea9d6b658 <line:39:5, line:41:5> line:39:32 hashkey 'HashContainer_adapter<IPRewriterEntry>::key_const_reference (const IPRewriterEntry *)' static
| `-ParmVarDecl 0x559ea9d6b568 <col:40, col:49> col:49 e 'const IPRewriterEntry *'
|-CXXMethodDecl 0x559ea9d6b8b8 <line:42:5, line:44:5> line:42:17 hashkeyeq 'bool (const HashContainer_adapter<IPRewriterEntry>::key_type &, const HashContainer_adapter<IPRewriterEntry>::key_type &)' static
| |-ParmVarDecl 0x559ea9d6b768 <col:27, col:43> col:43 a 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
| `-ParmVarDecl 0x559ea9d6b7e0 <col:46, col:62> col:62 b 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
|-CXXConstructorDecl 0x559ea9d6f938 <line:33:7> col:7 implicit constexpr HashContainer_adapter 'void (const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x559ea9d6f938
| `-ParmVarDecl 0x559ea9d6fa48 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
|-CXXConstructorDecl 0x559ea9d6fae8 <col:7> col:7 implicit constexpr HashContainer_adapter 'void (HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x559ea9d6fae8
| `-ParmVarDecl 0x559ea9d6fbf8 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'
|-CXXDestructorDecl 0x559ea9d6fe08 <col:7> col:7 implicit ~HashContainer_adapter 'void ()' inline default trivial noexcept-unevaluated 0x559ea9d6fe08
|-CXXMethodDecl 0x559ea9d6ff48 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x559ea9d6ff48
| `-ParmVarDecl 0x559ea9d70058 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
`-CXXMethodDecl 0x559ea9d700c8 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x559ea9d700c8
  `-ParmVarDecl 0x559ea9d701d8 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_adapter = type { i8 }
  NonVirtualBaseLLVMType:%class.HashContainer_adapter = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9cc3bc8 <../dummy_inc/click/libdivide.h:95:1, line:98:1> line:95:8 referenced struct libdivide_u32_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9cc3ce8 <col:1, col:8> col:8 implicit struct libdivide_u32_t
|-FieldDecl 0x559ea9cc3d88 <line:96:5, col:14> col:14 referenced magic 'uint32_t':'unsigned int'
|-FieldDecl 0x559ea9cc3de8 <line:97:5, col:13> col:13 referenced more 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x559ea9cc6ed0 <line:95:8> col:8 implicit used libdivide_u32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x559ea9cc7308 <col:8>
|-CXXConstructorDecl 0x559ea9cc6fd8 <col:8> col:8 implicit constexpr libdivide_u32_t 'void (const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x559ea9cc6fd8
| `-ParmVarDecl 0x559ea9cc70e8 <col:8> col:8 'const libdivide_u32_t &'
|-CXXConstructorDecl 0x559ea9cc7188 <col:8> col:8 implicit used constexpr libdivide_u32_t 'void (libdivide_u32_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9cc7298 <col:8> col:8 used 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x559ea9cc3d88 'magic' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559ea9cc91b0 <col:8> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x559ea9cc9180 <col:8> 'uint32_t':'unsigned int' xvalue .magic 0x559ea9cc3d88
| |     `-CXXStaticCastExpr 0x559ea9cc9150 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9cc9120 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x559ea9cc7298 '' 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x559ea9cc3de8 'more' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x559ea9cc9280 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x559ea9cc9250 <col:8> 'uint8_t':'unsigned char' xvalue .more 0x559ea9cc3de8
| |     `-CXXStaticCastExpr 0x559ea9cc9220 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9cc91f0 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x559ea9cc7298 '' 'libdivide_u32_t &&'
| `-CompoundStmt 0x559ea9cc92d0 <col:8>
|-CXXDestructorDecl 0x559ea9cc9648 <col:8> col:8 implicit referenced ~libdivide_u32_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x559ea9d70278 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x559ea9d70278
| `-ParmVarDecl 0x559ea9d70388 <col:8> col:8 'const libdivide_u32_t &'
`-CXXMethodDecl 0x559ea9d703f8 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(libdivide_u32_t &&)' inline default trivial noexcept-unevaluated 0x559ea9d703f8
  `-ParmVarDecl 0x559ea9d70508 <col:8> col:8 'libdivide_u32_t &&'

Layout: <CGRecordLayout
  LLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  NonVirtualBaseLLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9d6ef50 <../dummy_inc/click/hashcontainer.hh:19:1, line:29:1> line:20:7 class HashContainer_rep definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_mutable_fields
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x559ea9d6f1e8 prev 0x559ea9d6ef50 <col:1, col:7> col:7 implicit class HashContainer_rep
|-FieldDecl 0x559ea9d6f350 <line:21:5, col:9> col:9 buckets 'IPRewriterEntry **'
|-FieldDecl 0x559ea9d6f3a0 <line:22:5, col:14> col:14 nbuckets 'uint32_t':'unsigned int'
|-FieldDecl 0x559ea9d6f3f0 <line:23:5, col:22> col:22 first_bucket 'uint32_t':'unsigned int' mutable
|-FieldDecl 0x559ea9d6f440 <line:24:5, col:12> col:12 size 'size_t':'unsigned long'
|-FieldDecl 0x559ea9d6f490 <line:25:5, col:21> col:21 bucket_divider 'libdivide_u32_t'
|-FriendDecl 0x559ea9d6f5e8 <line:26:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x559ea9d6f738 <line:27:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x559ea9d6f888 <line:28:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x559ea9d6fc80 <line:20:7> col:7 implicit constexpr HashContainer_rep 'void (const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x559ea9d6fc80
| `-ParmVarDecl 0x559ea9d6fd98 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x559ea9d71b10 <col:7> col:7 implicit constexpr operator= 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x559ea9d71b10
  `-ParmVarDecl 0x559ea9d71c18 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  NonVirtualBaseLLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9d38360 <../dummy_inc/click/hashcontainer.hh:81:1, line:297:1> line:82:7 class HashContainer definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x559ea9d6ae88 prev 0x559ea9d38360 <col:1, col:7> col:7 implicit class HashContainer
|-AccessSpecDecl 0x559ea9d6af18 <col:23, col:29> col:23 public
|-TypedefDecl 0x559ea9d6b9e0 <line:85:5, col:34> col:34 key_type 'typename HashContainer_adapter<IPRewriterEntry>::key_type':'IPFlowID'
| `-ElaboratedType 0x559ea9d6b990 'typename HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|   `-TypedefType 0x559ea9d6b710 'HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|     |-Typedef 0x559ea9d6b190 'key_type'
|     `-ElaboratedType 0x559ea9d6b140 'typename IPRewriterEntry::key_type' sugar
|       `-TypedefType 0x559ea9d6b120 'IPRewriterEntry::key_type' sugar
|         |-Typedef 0x559ea9d39d30 'key_type'
|         `-RecordType 0x559ea9d2e400 'IPFlowID'
|           `-CXXRecord 0x559ea9d2e370 'IPFlowID'
|-TypedefDecl 0x559ea9d6ba78 <line:90:5, col:15> col:15 value_type 'IPRewriterEntry':'IPRewriterEntry'
| `-SubstTemplateTypeParmType 0x559ea9d6ba40 'IPRewriterEntry' sugar
|   |-TemplateTypeParmType 0x559ea9cd1730 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x559ea9cd16d8 'T'
|   `-RecordType 0x559ea9d36300 'IPRewriterEntry'
|     `-CXXRecord 0x559ea9d39b70 'IPRewriterEntry'
|-TypedefDecl 0x559ea9d6bad0 <line:93:5, col:20> col:20 referenced size_type 'size_t':'unsigned long'
| `-TypedefType 0x559ea97c6740 'size_t' sugar
|   |-Typedef 0x559ea978db20 'size_t'
|   `-BuiltinType 0x559ea971d430 'unsigned long'
|-TypedefDecl 0x559ea9d6bb28 <line:96:5, col:22> col:22 referenced bucket_count_type 'uint32_t':'unsigned int'
| `-TypedefType 0x559ea9876a50 'uint32_t' sugar
|   |-Typedef 0x559ea9786408 'uint32_t'
|   `-TypedefType 0x559ea975f440 '__uint32_t' sugar
|     |-Typedef 0x559ea975f038 '__uint32_t'
|     `-BuiltinType 0x559ea971d410 'unsigned int'
|-EnumDecl 0x559ea9d6bb80 <line:98:5> col:5
| |-EnumConstantDecl 0x559ea9d6bcb0 <line:102:2, col:42> col:2 max_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
| | `-ConstantExpr 0x559ea9d6bc90 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' Int: 4294967295
| |   `-CStyleCastExpr 0x559ea9d6bc68 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' <NoOp>
| |     `-ImplicitCastExpr 0x559ea9d6bc50 <col:41, col:42> 'HashContainer::bucket_count_type':'unsigned int' <IntegralCast> part_of_explicit_cast
| |       `-UnaryOperator 0x559ea9cd1d80 <col:41, col:42> 'int' prefix '-'
| |         `-IntegerLiteral 0x559ea9cd1d60 <col:42> 'int' 1
| `-EnumConstantDecl 0x559ea9d6bd20 <line:104:2, col:25> col:2 initial_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
|   `-ImplicitCastExpr 0x559ea9d6bd70 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9d6bd00 <col:25> 'int' Int: 63
|       `-IntegerLiteral 0x559ea9cd1e38 <col:25> 'int' 63
|-CXXConstructorDecl 0x559ea9d6bdc0 <line:108:5, col:19> col:5 HashContainer 'void ()'
|-CXXConstructorDecl 0x559ea9d6bf28 <line:111:5, col:47> col:14 HashContainer 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x559ea9d6be78 <col:28, col:46> col:46 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXDestructorDecl 0x559ea9d6c010 <line:114:5, col:20> col:5 ~HashContainer 'void ()' noexcept-unevaluated 0x559ea9d6c010
|-CXXMethodDecl 0x559ea9d6c100 <line:118:5, line:120:5> line:118:22 size 'HashContainer::size_type () const' inline
|-CXXMethodDecl 0x559ea9d6c1b0 <line:123:5, line:125:5> line:123:17 empty 'bool () const' inline
|-CXXMethodDecl 0x559ea9d6c260 <line:128:5, line:130:5> line:128:30 bucket_count 'HashContainer::bucket_count_type () const' inline
|-CXXMethodDecl 0x559ea9d6c3f8 <line:133:5, line:139:5> line:133:22 bucket_size 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x559ea9d6c330 <col:34, col:52> col:52 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x559ea9d6c618 <line:142:5, col:51> col:23 bucket 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| `-ParmVarDecl 0x559ea9d6c528 <col:30, col:46> col:46 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x559ea9d6c6d0 <line:145:5, line:147:5> line:145:17 unbalanced 'bool () const' inline
|-TypedefDecl 0x559ea9d6c960 <line:149:5, col:48> col:48 const_iterator 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x559ea9d6c8c0 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x559ea9d6c8a0 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x559ea9d6c7a0 'HashContainer_const_iterator'
|-TypedefDecl 0x559ea9d6cb90 <line:150:5, col:42> col:42 referenced iterator 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x559ea9d6caf0 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x559ea9d6cad0 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x559ea9d6c9d8 'HashContainer_iterator'
|-CXXMethodDecl 0x559ea9d6cc88 <line:155:5, col:27> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x559ea9d6cdd8 <line:157:5, col:35> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x559ea9d6cea8 <line:161:5, col:25> col:21 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x559ea9d6cf78 <line:163:5, col:33> col:27 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x559ea9d6d118 <line:166:5, col:46> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (HashContainer::bucket_count_type)' inline
| `-ParmVarDecl 0x559ea9d6d028 <col:27, col:45> col:45 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x559ea9d6d2c8 <line:168:5, col:54> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x559ea9d6d1d0 <col:33, col:51> col:51 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x559ea9d6d488 <line:171:5, col:47> col:17 contains 'bool (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x559ea9d6d390 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x559ea9d6d648 <line:173:5, col:49> col:22 count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x559ea9d6d550 <col:28, col:44> col:44 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x559ea9d6d808 <line:183:5, col:45> col:21 used find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x559ea9d6d710 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x559ea9d6d9c8 <line:185:5, col:53> col:27 find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x559ea9d6d8d0 <col:32, col:48> col:48 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x559ea9d6db20 <line:191:5, col:52> col:21 find_prefer 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x559ea9d6da90 <col:33, col:49> col:49 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x559ea9d6dd08 <line:197:5, col:68> col:43 get 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| |-ParmVarDecl 0x559ea9d6dc18 <col:47, col:63> col:63 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
| |-NoInlineAttr 0x559ea9d6ddc0 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9d6de18 <col:30> Inherited
|-CXXMethodDecl 0x559ea9d6e038 <line:219:5, col:51> col:17 insert_at 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x559ea9d6dea8 <col:27, col:37> col:37 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| `-ParmVarDecl 0x559ea9d6df20 <col:41, col:44> col:44 element 'IPRewriterEntry *'
|-CXXMethodDecl 0x559ea9d6e308 <line:239:5, col:58> col:8 set 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *, bool)'
| |-ParmVarDecl 0x559ea9d6e108 <col:12, col:22> col:22 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| |-ParmVarDecl 0x559ea9d6e180 <col:26, col:29> col:29 element 'IPRewriterEntry *'
| `-ParmVarDecl 0x559ea9d6e1e8 <col:38, col:53> col:43 balance 'bool'
|-CXXMethodDecl 0x559ea9d6e4d8 <line:249:5, col:57> col:43 set 'IPRewriterEntry *(IPRewriterEntry *)'
| |-ParmVarDecl 0x559ea9d6e3e0 <col:47, col:50> col:50 element 'IPRewriterEntry *'
| |-NoInlineAttr 0x559ea9d6e590 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9d6e5e8 <col:30> Inherited
|-CXXMethodDecl 0x559ea9d6e718 <line:256:5, col:33> col:15 used erase 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &)' inline
| `-ParmVarDecl 0x559ea9d6e620 <col:21, col:31> col:31 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
|-CXXMethodDecl 0x559ea9d6e8d8 <line:262:5, col:40> col:15 erase 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x559ea9d6e7e0 <col:21, col:37> col:37 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x559ea9d6e990 <line:266:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x559ea9d6ec58 <line:269:5, col:44> col:17 swap 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline
| `-ParmVarDecl 0x559ea9d6eb68 <col:22, col:43> col:43 x 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x559ea9d6eda0 <line:277:5, col:36> col:10 rehash 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x559ea9d6ed10 <col:17, col:35> col:35 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x559ea9d6ee58 <line:282:5, line:285:5> line:282:17 balance 'void ()' inline
|-AccessSpecDecl 0x559ea9d6ef08 <line:287:3, col:10> col:3 private
|-FieldDecl 0x559ea9d71ca0 <line:289:5, col:29> col:29 _rep 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x559ea9d71ef8 <line:291:5, col:46> col:5 HashContainer 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x559ea9d71de8 <col:19, col:45> col:46 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x559ea9d72298 <line:292:5, col:63> col:26 operator= 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x559ea9d72168 <col:36, col:62> col:63 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-FriendDecl 0x559ea9d72458 <line:294:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
`-FriendDecl 0x559ea9d725a8 <line:295:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  NonVirtualBaseLLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9d73be0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<56>'
|-CXXRecordDecl 0x559ea9d73db8 prev 0x559ea9d73be0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x559ea9d73e48 <col:46, col:52> col:46 public
|-TypedefDecl 0x559ea9d73e70 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9d75a40 <line:13:5, col:31> col:31 type 'typename sized_array_memory<56>::type':'char_array<56>'
| `-ElaboratedType 0x559ea9d759f0 'typename sized_array_memory<56>::type' sugar
|   `-TypedefType 0x559ea9d74320 'sized_array_memory<56>::type' sugar
|     |-Typedef 0x559ea9d74220 'type'
|     `-TemplateSpecializationType 0x559ea9d741b0 'char_array<56UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x559ea9d74090 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|       |   `-SubstNonTypeTemplateParmExpr 0x559ea9d74070 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x559ea9d74050 <col:24> 'unsigned long' 56
|       `-RecordType 0x559ea9d74190 'char_array<56>'
|         `-ClassTemplateSpecialization 0x559ea9d740b0 'char_array'
|-TypedefDecl 0x559ea9d75af8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<56> >::type *'
| `-PointerType 0x559ea9d75ac0 'vector_memory<sized_array_memory<56> >::type *'
|   `-TypedefType 0x559ea9d75aa0 'vector_memory<sized_array_memory<56> >::type' sugar
|     |-Typedef 0x559ea9d75a40 'type'
|     `-ElaboratedType 0x559ea9d759f0 'typename sized_array_memory<56>::type' sugar
|       `-TypedefType 0x559ea9d74320 'sized_array_memory<56>::type' sugar
|         |-Typedef 0x559ea9d74220 'type'
|         `-TemplateSpecializationType 0x559ea9d741b0 'char_array<56UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x559ea9d74090 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|           |   `-SubstNonTypeTemplateParmExpr 0x559ea9d74070 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x559ea9d74050 <col:24> 'unsigned long' 56
|           `-RecordType 0x559ea9d74190 'char_array<56>'
|             `-ClassTemplateSpecialization 0x559ea9d740b0 'char_array'
|-CXXMethodDecl 0x559ea9d75c78 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<56> >::type *) const' inline
| `-ParmVarDecl 0x559ea9d75b88 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXConstructorDecl 0x559ea9d75d68 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x559ea9d75e48 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x559ea9d75e48
|-CXXMethodDecl 0x559ea9d76118 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x559ea9d76020 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<56> > &'
|-CXXMethodDecl 0x559ea9d76358 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x559ea9d761d0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x559ea9d76248 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x559ea9d76528 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x559ea9d76418 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x559ea9d76490 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x559ea9d76688 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x559ea9d76758 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x559ea9d769a8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x559ea9d76818 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x559ea9d76890 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x559ea9d76c08 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, vector_memory<sized_array_memory<56> >::iterator)'
| |-ParmVarDecl 0x559ea9d76a78 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x559ea9d76af0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x559ea9d76dc8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x559ea9d76cd8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x559ea9d76f88 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x559ea9d76e90 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x559ea9d77040 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x559ea9d770f0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x559ea9d77328 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x559ea9d771a0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x559ea9d77218 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x559ea9d775c8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x559ea9d774d0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<56> > &'
|-FieldDecl 0x559ea9d77690 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<56> >::type *'
|-FieldDecl 0x559ea9d776e0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x559ea9d77730 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9d72648 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterInput'
|-CXXRecordDecl 0x559ea9d72858 prev 0x559ea9d72648 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x559ea9d73b50 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterInput>::type':'sized_array_memory<56>'
| `-ElaboratedType 0x559ea9d73b00 'typename array_memory<IPRewriterInput>::type' sugar
|   `-TypedefType 0x559ea9d73ae0 'conditional<true, sized_array_memory<56>, typed_array_memory<IPRewriterInput> >::type' sugar
|     |-Typedef 0x559ea9d73990 'type'
|     `-SubstTemplateTypeParmType 0x559ea9d737b0 'sized_array_memory<56>' sugar
|       |-TemplateTypeParmType 0x559ea99fe7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea99fe778 'T'
|       `-RecordType 0x559ea9d73300 'sized_array_memory<56>'
|         `-ClassTemplateSpecialization 0x559ea9d73220 'sized_array_memory'
|-FieldDecl 0x559ea9d77780 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterInput>::array_memory_type>':'vector_memory<sized_array_memory<56> >' mutable
|-AccessSpecDecl 0x559ea9d777d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x559ea9d77808 <line:118:5, col:15> col:15 value_type 'IPRewriterInput':'IPRewriterInput'
| `-SubstTemplateTypeParmType 0x559ea9d728f0 'IPRewriterInput' sugar
|   |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x559ea9a35978 'T'
|   `-RecordType 0x559ea9d363b0 'IPRewriterInput'
|     `-CXXRecord 0x559ea9d54840 'IPRewriterInput'
|-TypedefDecl 0x559ea9d778c8 <line:119:5, col:16> col:16 reference 'IPRewriterInput &'
| `-LValueReferenceType 0x559ea9d77890 'IPRewriterInput &'
|   `-SubstTemplateTypeParmType 0x559ea9d728f0 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x559ea9a35978 'T'
|     `-RecordType 0x559ea9d363b0 'IPRewriterInput'
|       `-CXXRecord 0x559ea9d54840 'IPRewriterInput'
|-TypedefDecl 0x559ea9d77988 <line:120:5, col:22> col:22 const_reference 'const IPRewriterInput &'
| `-LValueReferenceType 0x559ea9d77950 'const IPRewriterInput &'
|   `-QualType 0x559ea9d728f1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x559ea9d728f0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-RecordType 0x559ea9d363b0 'IPRewriterInput'
|         `-CXXRecord 0x559ea9d54840 'IPRewriterInput'
|-TypedefDecl 0x559ea9d77a18 <line:121:5, col:16> col:16 pointer 'IPRewriterInput *'
| `-PointerType 0x559ea9d779e0 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x559ea9d728f0 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x559ea9a35978 'T'
|     `-RecordType 0x559ea9d363b0 'IPRewriterInput'
|       `-CXXRecord 0x559ea9d54840 'IPRewriterInput'
|-TypedefDecl 0x559ea9d77ad8 <line:122:5, col:22> col:22 const_pointer 'const IPRewriterInput *'
| `-PointerType 0x559ea9d77aa0 'const IPRewriterInput *'
|   `-QualType 0x559ea9d728f1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x559ea9d728f0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-RecordType 0x559ea9d363b0 'IPRewriterInput'
|         `-CXXRecord 0x559ea9d54840 'IPRewriterInput'
|-TypedefDecl 0x559ea9d78730 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterInput>::type':'const IPRewriterInput &'
| `-ElaboratedType 0x559ea9d786e0 'typename fast_argument<IPRewriterInput>::type' sugar
|   `-TypedefType 0x559ea9d786c0 'fast_argument<IPRewriterInput, true>::type' sugar
|     |-Typedef 0x559ea9d785f8 'type'
|     `-LValueReferenceType 0x559ea9d785c0 'const IPRewriterInput &'
|       `-QualType 0x559ea9d78361 'const IPRewriterInput' const
|         `-SubstTemplateTypeParmType 0x559ea9d78360 'IPRewriterInput' sugar
|           |-TemplateTypeParmType 0x559ea9a072e0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x559ea9a07288 'T'
|           `-RecordType 0x559ea9d363b0 'IPRewriterInput'
|             `-CXXRecord 0x559ea9d54840 'IPRewriterInput'
|-TypedefDecl 0x559ea9d78798 <line:126:5, col:22> col:22 const_access_type 'const IPRewriterInput &'
| `-LValueReferenceType 0x559ea9d77950 'const IPRewriterInput &'
|   `-QualType 0x559ea9d728f1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x559ea9d728f0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-RecordType 0x559ea9d363b0 'IPRewriterInput'
|         `-CXXRecord 0x559ea9d54840 'IPRewriterInput'
|-TypedefDecl 0x559ea9d787f0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9d78858 <line:130:5, col:16> col:16 iterator 'IPRewriterInput *'
| `-PointerType 0x559ea9d779e0 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x559ea9d728f0 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x559ea9a35978 'T'
|     `-RecordType 0x559ea9d363b0 'IPRewriterInput'
|       `-CXXRecord 0x559ea9d54840 'IPRewriterInput'
|-TypedefDecl 0x559ea9d788c0 <line:131:5, col:22> col:22 const_iterator 'const IPRewriterInput *'
| `-PointerType 0x559ea9d77aa0 'const IPRewriterInput *'
|   `-QualType 0x559ea9d728f1 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x559ea9d728f0 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-RecordType 0x559ea9d363b0 'IPRewriterInput'
|         `-CXXRecord 0x559ea9d54840 'IPRewriterInput'
|-EnumDecl 0x559ea9d78918 <line:134:5> col:5
| `-EnumConstantDecl 0x559ea9d78a10 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterInput>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x559ea9d789f0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x559ea9a36b98 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x559ea9a36b70 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x559ea9a36b50 <col:40> 'int' 1
|-CXXConstructorDecl 0x559ea9d78a98 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x559ea9d78d28 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9d78b50 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x559ea9d78bf0 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXConstructorDecl 0x559ea9d78fe8 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x559ea9d78ed0 <col:19, col:36> col:36 x 'const Vector<IPRewriterInput> &'
|-CXXConstructorDecl 0x559ea9d792a8 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x559ea9d79190 <col:19, col:31> col:31 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x559ea9d795f0 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterInput> &(const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x559ea9d794d0 <col:33, col:50> col:50 x 'const Vector<IPRewriterInput> &'
|-CXXMethodDecl 0x559ea9d79900 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterInput> &(Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x559ea9d797e0 <col:33, col:45> col:45 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x559ea9d7b520 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterInput> &(Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9d79a38 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x559ea9d7b3e0 <col:43, col:69> col:63 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x559ea9d7b678 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x559ea9d7b758 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9d7b7b0 <col:30> Inherited
|-CXXMethodDecl 0x559ea9d7b7f8 <line:151:5, col:53> col:49 end 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x559ea9d7b8a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9d7b900 <col:30> Inherited
|-CXXMethodDecl 0x559ea9d7b9c8 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x559ea9d7ba78 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9d7bad0 <col:30> Inherited
|-CXXMethodDecl 0x559ea9d7bb18 <line:153:5, col:61> col:55 end 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x559ea9d7bbc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9d7bc20 <col:30> Inherited
|-CXXMethodDecl 0x559ea9d7bc68 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x559ea9d7bd18 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9d7bd70 <col:30> Inherited
|-CXXMethodDecl 0x559ea9d7bdb8 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x559ea9d7be68 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9d7bec0 <col:30> Inherited
|-CXXMethodDecl 0x559ea9d7bee8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x559ea9d7bf98 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x559ea9d7c048 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x559ea9d7c208 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9d7c0f8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x559ea9d7c170 <col:37, col:63> col:57 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x559ea9d7c358 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x559ea9d7c2c8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9d7c508 <line:163:5, col:65> col:43 operator[] 'IPRewriterInput &(Vector::size_type)'
| |-ParmVarDecl 0x559ea9d7c410 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x559ea9d7c5c0 <col:20>
| `-OptimizeNoneAttr 0x559ea9d7c618 <col:30>
|-CXXMethodDecl 0x559ea9d7c738 <line:164:5, col:73> col:49 used operator[] 'const IPRewriterInput &(Vector::size_type) const'
| |-ParmVarDecl 0x559ea9d7c640 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x559ea9d7c7f0 <col:20>
| `-OptimizeNoneAttr 0x559ea9d7c848 <col:30>
|-CXXMethodDecl 0x559ea9d7c900 <line:165:5, col:29> col:15 at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x559ea9d7c870 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9d7ca48 <line:166:5, col:37> col:21 at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x559ea9d7c9b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9d7cb78 <line:167:5, col:21> col:15 front 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x559ea9d7cca8 <line:168:5, col:29> col:21 front 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x559ea9d7cd78 <line:169:5, col:20> col:15 back 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x559ea9d7ce48 <line:170:5, col:28> col:21 back 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x559ea9d7cf88 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x559ea9d7cef8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9d7d0d0 <line:173:5, col:47> col:21 unchecked_at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x559ea9d7d040 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9d7d218 <line:174:5, col:59> col:15 at_u 'IPRewriterInput &(Vector::size_type)' inline
| |-ParmVarDecl 0x559ea9d7d188 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x559ea9d7d2d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x559ea9d7d3d0 <line:175:5, col:71> col:21 at_u 'const IPRewriterInput &(Vector::size_type) const' inline
| |-ParmVarDecl 0x559ea9d7d340 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x559ea9d7d488 <col:60> Inherited "" ""
|-CXXMethodDecl 0x559ea9d7d548 <line:177:5, col:20> col:15 data 'IPRewriterInput *()' inline
|-CXXMethodDecl 0x559ea9d7d648 <line:178:5, col:28> col:21 data 'const IPRewriterInput *() const' inline
|-CXXMethodDecl 0x559ea9d7d7f8 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x559ea9d7d708 <col:27, col:47> col:47 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-FunctionTemplateDecl 0x559ea9d7dfb8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x559ea9d7d8b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterInput>':'fast_argument<IPRewriterInput, true>'
| `-CXXMethodDecl 0x559ea9d7df18 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterInput &&)' inline
|   `-ParmVarDecl 0x559ea9d7de18 <col:58, col:62> col:62 v 'IPRewriterInput &&'
|-CXXMethodDecl 0x559ea9d7e098 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x559ea9d7e1e8 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x559ea9d7e158 <col:28, col:48> col:48 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x559ea9d7e2a0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x559ea9d7e4e8 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9d7e360 <col:28, col:37> col:37 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x559ea9d7e3d8 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x559ea9d7e6a8 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator)' inline
| `-ParmVarDecl 0x559ea9d7e5b8 <col:27, col:36> col:36 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x559ea9d7e8f8 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::iterator)' inline
| |-ParmVarDecl 0x559ea9d7e770 <col:27, col:36> col:36 a 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x559ea9d7e7e8 <col:39, col:48> col:48 b 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x559ea9d7e9b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x559ea9d7ec18 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x559ea9d7eb20 <col:22, col:33> col:33 x 'Vector<IPRewriterInput> &'
`-CXXDestructorDecl 0x559ea9d7ece8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x559ea9d7ece8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterHeap
         0 |   Vector<class IPRewriterFlow *> [2] _heaps
        32 |   int32_t _capacity
        36 |   uint32_t _use_count
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9d57d00 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x559ea9d57ed8 prev 0x559ea9d57d00 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x559ea9d57f68 <col:46, col:52> col:46 public
|-TypedefDecl 0x559ea9d57f90 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9d59b60 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x559ea9d59b10 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x559ea9d58440 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x559ea9d58340 'type'
|     `-TemplateSpecializationType 0x559ea9d582d0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x559ea9d581b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x559ea9d58190 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x559ea9d58170 <col:24> 'unsigned long' 8
|       `-RecordType 0x559ea9d582b0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x559ea9d581d0 'char_array'
|-TypedefDecl 0x559ea9d59c18 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x559ea9d59be0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x559ea9d59bc0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x559ea9d59b60 'type'
|     `-ElaboratedType 0x559ea9d59b10 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x559ea9d58440 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x559ea9d58340 'type'
|         `-TemplateSpecializationType 0x559ea9d582d0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x559ea9d581b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x559ea9d58190 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x559ea9d58170 <col:24> 'unsigned long' 8
|           `-RecordType 0x559ea9d582b0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x559ea9d581d0 'char_array'
|-CXXMethodDecl 0x559ea9d59d98 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x559ea9d59ca8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x559ea9d59e88 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x559ea9d59f68 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x559ea9d5a238 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x559ea9d5a140 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x559ea9d5a478 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x559ea9d5a2f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x559ea9d5a368 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x559ea9d5a648 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x559ea9d5a538 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x559ea9d5a5b0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x559ea9d5a7a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x559ea9d5a878 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x559ea9d5aac8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x559ea9d5a938 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x559ea9d5a9b0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x559ea9d5ad28 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x559ea9d5ab98 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x559ea9d5ac10 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x559ea9d5aee8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x559ea9d5adf8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x559ea9d5b0a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x559ea9d5afb0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x559ea9d5b160 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x559ea9d5dc50 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x559ea9d5de88 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x559ea9d5dd00 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x559ea9d5dd78 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x559ea9d5e128 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x559ea9d5e030 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x559ea9d5e1f0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x559ea9d5e240 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x559ea9d5e290 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9d566f0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterFlow *'
|-CXXRecordDecl 0x559ea9d568f0 prev 0x559ea9d566f0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x559ea9d57c70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterFlow *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x559ea9d57c20 'typename array_memory<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x559ea9d57c00 'conditional<true, sized_array_memory<8>, typed_array_memory<IPRewriterFlow *> >::type' sugar
|     |-Typedef 0x559ea9d57ab0 'type'
|     `-SubstTemplateTypeParmType 0x559ea9d578d0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x559ea99fe7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea99fe778 'T'
|       `-RecordType 0x559ea9d57420 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x559ea9d57338 'sized_array_memory'
|-FieldDecl 0x559ea9d5e2e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterFlow *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x559ea9d5e330 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x559ea9d5e368 <line:118:5, col:15> col:15 value_type 'IPRewriterFlow *':'IPRewriterFlow *'
| `-SubstTemplateTypeParmType 0x559ea9d56980 'IPRewriterFlow *' sugar
|   |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x559ea9a35978 'T'
|   `-PointerType 0x559ea9d3a530 'IPRewriterFlow *'
|     `-RecordType 0x559ea9d36250 'IPRewriterFlow'
|       `-CXXRecord 0x559ea9d3c420 'IPRewriterFlow'
|-TypedefDecl 0x559ea9d5e428 <line:119:5, col:16> col:16 reference 'IPRewriterFlow *&'
| `-LValueReferenceType 0x559ea9d5e3f0 'IPRewriterFlow *&'
|   `-SubstTemplateTypeParmType 0x559ea9d56980 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x559ea9a35978 'T'
|     `-PointerType 0x559ea9d3a530 'IPRewriterFlow *'
|       `-RecordType 0x559ea9d36250 'IPRewriterFlow'
|         `-CXXRecord 0x559ea9d3c420 'IPRewriterFlow'
|-TypedefDecl 0x559ea9d5e4e8 <line:120:5, col:22> col:22 const_reference 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x559ea9d5e4b0 'IPRewriterFlow *const &'
|   `-QualType 0x559ea9d56981 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x559ea9d56980 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-PointerType 0x559ea9d3a530 'IPRewriterFlow *'
|         `-RecordType 0x559ea9d36250 'IPRewriterFlow'
|           `-CXXRecord 0x559ea9d3c420 'IPRewriterFlow'
|-TypedefDecl 0x559ea9d5e578 <line:121:5, col:16> col:16 pointer 'IPRewriterFlow **'
| `-PointerType 0x559ea9d5e540 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x559ea9d56980 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x559ea9a35978 'T'
|     `-PointerType 0x559ea9d3a530 'IPRewriterFlow *'
|       `-RecordType 0x559ea9d36250 'IPRewriterFlow'
|         `-CXXRecord 0x559ea9d3c420 'IPRewriterFlow'
|-TypedefDecl 0x559ea9d5e638 <line:122:5, col:22> col:22 const_pointer 'IPRewriterFlow *const *'
| `-PointerType 0x559ea9d5e600 'IPRewriterFlow *const *'
|   `-QualType 0x559ea9d56981 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x559ea9d56980 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-PointerType 0x559ea9d3a530 'IPRewriterFlow *'
|         `-RecordType 0x559ea9d36250 'IPRewriterFlow'
|           `-CXXRecord 0x559ea9d3c420 'IPRewriterFlow'
|-TypedefDecl 0x559ea9d5f420 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterFlow *>::type':'IPRewriterFlow *'
| `-ElaboratedType 0x559ea9d5f3d0 'typename fast_argument<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x559ea9d5f3b0 'fast_argument<IPRewriterFlow *, false>::type' sugar
|     |-Typedef 0x559ea9d5f340 'type'
|     `-SubstTemplateTypeParmType 0x559ea9d5f100 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x559ea9a07a10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a079c0 'T'
|       `-PointerType 0x559ea9d3a530 'IPRewriterFlow *'
|         `-RecordType 0x559ea9d36250 'IPRewriterFlow'
|           `-CXXRecord 0x559ea9d3c420 'IPRewriterFlow'
|-TypedefDecl 0x559ea9d5f488 <line:126:5, col:22> col:22 const_access_type 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x559ea9d5e4b0 'IPRewriterFlow *const &'
|   `-QualType 0x559ea9d56981 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x559ea9d56980 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-PointerType 0x559ea9d3a530 'IPRewriterFlow *'
|         `-RecordType 0x559ea9d36250 'IPRewriterFlow'
|           `-CXXRecord 0x559ea9d3c420 'IPRewriterFlow'
|-TypedefDecl 0x559ea9d5f4e0 <line:128:5, col:17> col:17 referenced size_type 'int'
| `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9d5f548 <line:130:5, col:16> col:16 iterator 'IPRewriterFlow **'
| `-PointerType 0x559ea9d5e540 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x559ea9d56980 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x559ea9a35978 'T'
|     `-PointerType 0x559ea9d3a530 'IPRewriterFlow *'
|       `-RecordType 0x559ea9d36250 'IPRewriterFlow'
|         `-CXXRecord 0x559ea9d3c420 'IPRewriterFlow'
|-TypedefDecl 0x559ea9d5f5b0 <line:131:5, col:22> col:22 const_iterator 'IPRewriterFlow *const *'
| `-PointerType 0x559ea9d5e600 'IPRewriterFlow *const *'
|   `-QualType 0x559ea9d56981 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x559ea9d56980 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-PointerType 0x559ea9d3a530 'IPRewriterFlow *'
|         `-RecordType 0x559ea9d36250 'IPRewriterFlow'
|           `-CXXRecord 0x559ea9d3c420 'IPRewriterFlow'
|-EnumDecl 0x559ea9d5f608 <line:134:5> col:5
| `-EnumConstantDecl 0x559ea9d5f700 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterFlow *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x559ea9d5f6e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x559ea9a36b98 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x559ea9a36b70 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x559ea9a36b50 <col:40> 'int' 1
|-CXXConstructorDecl 0x559ea9d5f788 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x559ea9d5fa18 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9d5f840 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x559ea9d5f8e0 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXConstructorDecl 0x559ea9d5fcd8 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x559ea9d5fbc0 <col:19, col:36> col:36 x 'const Vector<IPRewriterFlow *> &'
|-CXXConstructorDecl 0x559ea9d5ff98 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x559ea9d5fe80 <col:19, col:31> col:31 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x559ea9d602e0 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterFlow *> &(const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x559ea9d601c0 <col:33, col:50> col:50 x 'const Vector<IPRewriterFlow *> &'
|-CXXMethodDecl 0x559ea9d605f0 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterFlow *> &(Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x559ea9d604d0 <col:33, col:45> col:45 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x559ea9d608e0 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterFlow *> &(Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9d60728 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x559ea9d607a0 <col:43, col:69> col:63 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x559ea9d60a38 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x559ea9d60b18 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9d60b70 <col:30> Inherited
|-CXXMethodDecl 0x559ea9d60bb8 <line:151:5, col:53> col:49 end 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x559ea9d60c68 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9d60cc0 <col:30> Inherited
|-CXXMethodDecl 0x559ea9d60d88 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x559ea9d60e38 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9d60e90 <col:30> Inherited
|-CXXMethodDecl 0x559ea9d60ed8 <line:153:5, col:61> col:55 end 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x559ea9d60f88 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9d60fe0 <col:30> Inherited
|-CXXMethodDecl 0x559ea9d61028 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x559ea9d610d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9d61130 <col:30> Inherited
|-CXXMethodDecl 0x559ea9d61178 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x559ea9d61228 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9d61280 <col:30> Inherited
|-CXXMethodDecl 0x559ea9d612a8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x559ea9d61358 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x559ea9d61408 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x559ea9d615c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9d614b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x559ea9d61530 <col:37, col:63> col:57 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x559ea9d61718 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x559ea9d61688 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9d618c8 <line:163:5, col:65> col:43 operator[] 'IPRewriterFlow *&(Vector::size_type)'
| |-ParmVarDecl 0x559ea9d617d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x559ea9d61980 <col:20>
| `-OptimizeNoneAttr 0x559ea9d619d8 <col:30>
|-CXXMethodDecl 0x559ea9d61af8 <line:164:5, col:73> col:49 operator[] 'IPRewriterFlow *const &(Vector::size_type) const'
| |-ParmVarDecl 0x559ea9d61a00 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x559ea9d61bb0 <col:20>
| `-OptimizeNoneAttr 0x559ea9d61c08 <col:30>
|-CXXMethodDecl 0x559ea9d61cc0 <line:165:5, col:29> col:15 at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x559ea9d61c30 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9d61e08 <line:166:5, col:37> col:21 at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x559ea9d61d78 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9d61f38 <line:167:5, col:21> col:15 front 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x559ea9d62068 <line:168:5, col:29> col:21 front 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x559ea9d62138 <line:169:5, col:20> col:15 back 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x559ea9d62208 <line:170:5, col:28> col:21 back 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x559ea9d62348 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x559ea9d622b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9d62490 <line:173:5, col:47> col:21 unchecked_at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x559ea9d62400 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9d625d8 <line:174:5, col:59> col:15 at_u 'IPRewriterFlow *&(Vector::size_type)' inline
| |-ParmVarDecl 0x559ea9d62548 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x559ea9d62690 <col:48> Inherited "" ""
|-CXXMethodDecl 0x559ea9d62790 <line:175:5, col:71> col:21 at_u 'IPRewriterFlow *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x559ea9d62700 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x559ea9d62848 <col:60> Inherited "" ""
|-CXXMethodDecl 0x559ea9d62908 <line:177:5, col:20> col:15 data 'IPRewriterFlow **()' inline
|-CXXMethodDecl 0x559ea9d62a08 <line:178:5, col:28> col:21 data 'IPRewriterFlow *const *() const' inline
|-CXXMethodDecl 0x559ea9d62bb8 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x559ea9d62ac8 <col:27, col:47> col:47 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-FunctionTemplateDecl 0x559ea9d633a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x559ea9d62c70 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterFlow *>':'fast_argument<IPRewriterFlow *, false>'
| `-CXXMethodDecl 0x559ea9d63308 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterFlow *&&)' inline
|   `-ParmVarDecl 0x559ea9d63208 <col:58, col:62> col:62 v 'IPRewriterFlow *&&'
|-CXXMethodDecl 0x559ea9d63488 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x559ea9d635d8 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x559ea9d63548 <col:28, col:48> col:48 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x559ea9d63690 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x559ea9d638d8 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9d63750 <col:28, col:37> col:37 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x559ea9d637c8 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x559ea9d63a98 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator)' inline
| `-ParmVarDecl 0x559ea9d639a8 <col:27, col:36> col:36 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x559ea9d63ce8 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::iterator)' inline
| |-ParmVarDecl 0x559ea9d63b60 <col:27, col:36> col:36 a 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x559ea9d63bd8 <col:39, col:48> col:48 b 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x559ea9d63da8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x559ea9d64008 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x559ea9d63f10 <col:22, col:33> col:33 x 'Vector<IPRewriterFlow *> &'
`-CXXDestructorDecl 0x559ea9d640d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x559ea9d64fe8 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9d561a8 prev 0x559ea9d39a30 <../elements/ip/iprewriterbase.hh:42:1, line:79:1> line:42:7 referenced class IPRewriterHeap definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559ea9d562a0 <col:1, col:7> col:7 implicit referenced class IPRewriterHeap
|-AccessSpecDecl 0x559ea9d56330 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x559ea9d56390 <line:44:5, line:46:5> line:44:5 IPRewriterHeap 'void ()'
| |-CXXCtorInitializer Field 0x559ea9d64978 '_heaps' 'Vector<IPRewriterFlow *> [2]'
| | `-CXXConstructExpr 0x559ea9d64fc0 <col:5> 'Vector<IPRewriterFlow *> [2]' 'void ()'
| |-CXXCtorInitializer Field 0x559ea9d649d8 '_capacity' 'int32_t':'int'
| | `-IntegerLiteral 0x559ea9d64ed8 <line:45:14> 'int' 2147483647
| |-CXXCtorInitializer Field 0x559ea9d64a38 '_use_count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559ea9d64f80 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559ea9d64f40 <col:38> 'int' 1
| `-CompoundStmt 0x559ea9d65038 <col:41, line:46:5>
|-CXXDestructorDecl 0x559ea9d56480 <line:47:5, line:49:5> line:47:5 used ~IPRewriterHeap 'void () noexcept'
| `-CompoundStmt 0x559ea9d65478 <col:23, line:49:5>
|   `-ParenExpr 0x559ea9d65458 <line:48:2, col:153> 'void'
|     `-ConditionalOperator 0x559ea9d65428 <col:3, col:152> 'void'
|       |-CXXStaticCastExpr 0x559ea9d65110 <col:3, col:34> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x559ea9d650e0 <col:23, col:33> 'bool' '=='
|       |   |-CXXMemberCallExpr 0x559ea9d65088 <col:23, col:28> 'Vector<IPRewriterFlow *>::size_type':'int'
|       |   | `-MemberExpr 0x559ea9d65058 <col:23> '<bound member function type>' ->size 0x559ea9d642b8
|       |   |   `-ImplicitCastExpr 0x559ea9d650a8 <col:23> 'const IPRewriterHeap *' <NoOp>
|       |   |     `-CXXThisExpr 0x559ea9d65048 <col:23> 'IPRewriterHeap *' implicit this
|       |   `-IntegerLiteral 0x559ea9d650c0 <col:33> 'int' 0
|       |-CXXFunctionalCastExpr 0x559ea9d65170 <col:38, col:45> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x559ea9d65150 <col:44> 'int' 0
|       `-CallExpr 0x559ea9d65388 <col:49, col:152> 'void'
|         |-ImplicitCastExpr 0x559ea9d65370 <col:49> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x559ea9d65350 <col:49> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x559ea9d653c8 <col:64> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x559ea9d651e0 <col:64> 'const char [12]' lvalue "size() == 0"
|         |-ImplicitCastExpr 0x559ea9d653e0 <col:79> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x559ea9d65288 <col:79> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|         |-ImplicitCastExpr 0x559ea9d653f8 <col:115> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x559ea9d652c0 <col:115> 'int' 48
|         `-ImplicitCastExpr 0x559ea9d65410 <col:119, col:133> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x559ea9d65338 <col:119, col:133> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x559ea9d65320 <col:133> 'const char [34]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x559ea9d652e0 <col:133> 'const char [34]' lvalue "IPRewriterHeap::~IPRewriterHeap()"
|-CXXMethodDecl 0x559ea9d56580 <line:51:5, line:53:5> line:51:10 use 'void ()'
| `-CompoundStmt 0x559ea9d654e8 <col:16, line:53:5>
|   `-UnaryOperator 0x559ea9d654d0 <line:52:2, col:4> 'uint32_t':'unsigned int' lvalue prefix '++'
|     `-MemberExpr 0x559ea9d654a0 <col:4> 'uint32_t':'unsigned int' lvalue ->_use_count 0x559ea9d64a38
|       `-CXXThisExpr 0x559ea9d65490 <col:4> 'IPRewriterHeap *' implicit this
|-CXXMethodDecl 0x559ea9d56640 <line:54:5, line:58:5> line:54:10 unuse 'void ()'
| `-CompoundStmt 0x559ea9d659b0 <col:18, line:58:5>
|   |-ParenExpr 0x559ea9d65880 <line:55:2, col:159> 'void'
|   | `-ConditionalOperator 0x559ea9d65850 <col:3, col:158> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9d655c0 <col:3, col:37> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9d65590 <col:23, col:36> 'bool' '>'
|   |   |   |-ImplicitCastExpr 0x559ea9d65560 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x559ea9d65510 <col:23> 'uint32_t':'unsigned int' lvalue ->_use_count 0x559ea9d64a38
|   |   |   |   `-CXXThisExpr 0x559ea9d65500 <col:23> 'IPRewriterHeap *' implicit this
|   |   |   `-ImplicitCastExpr 0x559ea9d65578 <col:36> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x559ea9d65540 <col:36> 'int' 0
|   |   |-CXXFunctionalCastExpr 0x559ea9d65620 <col:41, col:48> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9d65600 <col:47> 'int' 0
|   |   `-CallExpr 0x559ea9d657b0 <col:52, col:158> 'void'
|   |     |-ImplicitCastExpr 0x559ea9d65798 <col:52> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9d65778 <col:52> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9d657f0 <col:67> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9d65690 <col:67> 'const char [15]' lvalue "_use_count > 0"
|   |     |-ImplicitCastExpr 0x559ea9d65808 <col:85> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9d656b8 <col:85> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|   |     |-ImplicitCastExpr 0x559ea9d65820 <col:121> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9d656f0 <col:121> 'int' 55
|   |     `-ImplicitCastExpr 0x559ea9d65838 <col:125, col:139> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9d65760 <col:125, col:139> 'const char [29]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9d65748 <col:139> 'const char [29]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9d65710 <col:139> 'const char [29]' lvalue "void IPRewriterHeap::unuse()"
|   `-IfStmt 0x559ea9d65998 <line:56:2, line:57:13>
|     |-BinaryOperator 0x559ea9d65948 <line:56:6, col:22> 'bool' '=='
|     | |-ImplicitCastExpr 0x559ea9d65918 <col:6, col:8> 'uint32_t':'unsigned int' <LValueToRValue>
|     | | `-UnaryOperator 0x559ea9d658e0 <col:6, col:8> 'uint32_t':'unsigned int' lvalue prefix '--'
|     | |   `-MemberExpr 0x559ea9d658b0 <col:8> 'uint32_t':'unsigned int' lvalue ->_use_count 0x559ea9d64a38
|     | |     `-CXXThisExpr 0x559ea9d658a0 <col:8> 'IPRewriterHeap *' implicit this
|     | `-ImplicitCastExpr 0x559ea9d65930 <col:22> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x559ea9d658f8 <col:22> 'int' 0
|     `-CXXDeleteExpr 0x559ea9d65978 <line:57:6, col:13> 'void' Function 0x559ea98748a8 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x559ea9d65968 <col:13> 'IPRewriterHeap *' this
|-CXXMethodDecl 0x559ea9d642b8 <line:60:5, line:62:5> line:60:41 used size 'Vector<IPRewriterFlow *>::size_type () const'
| `-CompoundStmt 0x559ea9d685b0 <col:54, line:62:5>
|   `-ReturnStmt 0x559ea9d685a0 <line:61:2, col:43>
|     `-BinaryOperator 0x559ea9d68580 <col:9, col:43> 'int' '+'
|       |-CXXMemberCallExpr 0x559ea9d65b30 <col:9, col:24> 'Vector::size_type':'int'
|       | `-MemberExpr 0x559ea9d65b00 <col:9, col:19> '<bound member function type>' .size 0x559ea9d612a8
|       |   `-ArraySubscriptExpr 0x559ea9d65ae0 <col:9, col:17> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|       |     |-ImplicitCastExpr 0x559ea9d65ac8 <col:9> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x559ea9d659e0 <col:9> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x559ea9d64978
|       |     |   `-CXXThisExpr 0x559ea9d659d0 <col:9> 'const IPRewriterHeap *' implicit this
|       |     `-IntegerLiteral 0x559ea9d65a10 <col:16> 'int' 0
|       `-CXXMemberCallExpr 0x559ea9d65c18 <col:28, col:43> 'Vector::size_type':'int'
|         `-MemberExpr 0x559ea9d65be8 <col:28, col:38> '<bound member function type>' .size 0x559ea9d612a8
|           `-ArraySubscriptExpr 0x559ea9d65bc8 <col:28, col:36> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|             |-ImplicitCastExpr 0x559ea9d65bb0 <col:28> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559ea9d65b60 <col:28> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x559ea9d64978
|             |   `-CXXThisExpr 0x559ea9d65b50 <col:28> 'const IPRewriterHeap *' implicit this
|             `-IntegerLiteral 0x559ea9d65b90 <col:35> 'int' 1
|-CXXMethodDecl 0x559ea9d643a8 <line:63:5, line:65:5> line:63:13 capacity 'int32_t () const'
| `-CompoundStmt 0x559ea9d68630 <col:30, line:65:5>
|   `-ReturnStmt 0x559ea9d68620 <line:64:2, col:9>
|     `-ImplicitCastExpr 0x559ea9d68608 <col:9> 'int32_t':'int' <LValueToRValue>
|       `-MemberExpr 0x559ea9d685d8 <col:9> 'const int32_t':'const int' lvalue ->_capacity 0x559ea9d649d8
|         `-CXXThisExpr 0x559ea9d685c8 <col:9> 'const IPRewriterHeap *' implicit this
|-AccessSpecDecl 0x559ea9d64448 <line:67:3, col:10> col:3 private
|-EnumDecl 0x559ea9d64470 <line:69:5, line:71:5> line:69:5
| |-EnumConstantDecl 0x559ea9d64570 <line:70:2, col:18> col:2 h_best_effort 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
| | `-ImplicitCastExpr 0x559ea9d64650 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9d64550 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x559ea9d64530 <col:18> 'int' 0
| `-EnumConstantDecl 0x559ea9d64600 <col:21, col:35> col:21 h_guarantee 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
|   `-ImplicitCastExpr 0x559ea9d64668 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9d645e0 <col:35> 'int' Int: 1
|       `-IntegerLiteral 0x559ea9d645c0 <col:35> 'int' 1
|-FieldDecl 0x559ea9d64978 <line:72:5, col:38> col:30 referenced _heaps 'Vector<IPRewriterFlow *> [2]'
|-FieldDecl 0x559ea9d649d8 <line:73:5, col:13> col:13 referenced _capacity 'int32_t':'int'
|-FieldDecl 0x559ea9d64a38 <line:74:5, col:14> col:14 referenced _use_count 'uint32_t':'unsigned int'
|-FriendDecl 0x559ea9d64aa8 <line:76:5, col:18> col:12 'class IPRewriterBase':'IPRewriterBase'
|-FriendDecl 0x559ea9d64b40 <line:77:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x559ea9d64ba8 <line:42:7> col:7 implicit IPRewriterHeap 'void (const IPRewriterHeap &)' inline default noexcept-unevaluated 0x559ea9d64ba8
| `-ParmVarDecl 0x559ea9d64cb8 <col:7> col:7 'const IPRewriterHeap &'
`-CXXMethodDecl 0x559ea9d64d58 <col:7> col:7 implicit operator= 'IPRewriterHeap &(const IPRewriterHeap &)' inline default noexcept-unevaluated 0x559ea9d64d58
  `-ParmVarDecl 0x559ea9d64e68 <col:7> col:7 'const IPRewriterHeap &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.0], i32, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.0], i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9c234a0 prev 0x559ea9c1a930 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9c23598 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x559ea9c23638 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x559ea9c29ad8 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x559ea9c29eb8 <col:11>
|-CXXConstructorDecl 0x559ea9c29bb0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9c29c98 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x559ea9c2a600 <col:11>
|-CXXConstructorDecl 0x559ea9c29d38 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9c29e48 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x559ea9c2be58 <col:11>
|-CXXDestructorDecl 0x559ea9c2b168 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x559ea992b638 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea992b748 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x559ea992c010 <col:11>
|   `-ReturnStmt 0x559ea992c000 <col:11>
|     `-UnaryOperator 0x559ea992bfe8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559ea992bfd8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x559ea992b7b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x559ea992b8c8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x559ea9cb5e40 <col:11>
    `-ReturnStmt 0x559ea9cb5e30 <col:11>
      `-UnaryOperator 0x559ea9cb5e18 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x559ea9cb5e08 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9c18518 prev 0x559ea9c18230 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9c18610 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x559ea9c186a0 <col:19, col:25> col:19 public
|-TypedefDecl 0x559ea9c186d8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x559ea9876b30 'int32_t' sugar
|   |-Typedef 0x559ea9786268 'int32_t'
|   `-TypedefType 0x559ea975f3b0 '__int32_t' sugar
|     |-Typedef 0x559ea975efc8 '__int32_t'
|     `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9c18740 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x559ea9876cf0 'int64_t' sugar
|   |-Typedef 0x559ea97862d0 'int64_t'
|   `-TypedefType 0x559ea975f4d0 '__int64_t' sugar
|     |-Typedef 0x559ea975f0a8 '__int64_t'
|     `-BuiltinType 0x559ea971d390 'long'
|-EnumDecl 0x559ea9c18798 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x559ea9c18910 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x559ea9c188f0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x559ea9c188c8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x559ea9c188b0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x559ea9c18880 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x559ea9c18a08 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x559ea9c189e8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x559ea9c189c0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x559ea9c189a8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x559ea9c18980 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x559ea9c18960 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x559ea9c18a58 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x559ea9c18b60 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559ea9c1a680 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c18b40 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x559ea9c18b20 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x559ea9c18bf0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559ea9c1a698 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c18bd0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x559ea9c18bb0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x559ea9c18c80 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559ea9c1a6b0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c18c60 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x559ea9c18c40 <col:25> 'int' 1000
| |-EnumConstantDecl 0x559ea9c18d10 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559ea9c1a6c8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c18cf0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x559ea9c18cd0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x559ea9c18da0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559ea9c1a6e0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c18d80 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x559ea9c18d60 <col:25> 'int' 1000
| |-EnumConstantDecl 0x559ea9c18e30 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559ea9c1a6f8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c18e10 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x559ea9c18df0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x559ea9c18ec0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559ea9c1a710 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c18ea0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x559ea9c18e80 <col:26> 'int' EnumConstant 0x559ea9c18b60 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x559ea9c18f90 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559ea9c1a728 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c18f70 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x559ea9c18f50 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x559ea9c18f10 <col:27> 'int' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x559ea9c18f30 <col:44> 'int' EnumConstant 0x559ea9c18e30 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x559ea9c1a630 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x559ea9c1a740 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9c19040 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x559ea9c19020 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x559ea9c18fe0 <col:27> 'int' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x559ea9c19000 <col:44> 'int' EnumConstant 0x559ea9c18d10 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x559ea9c1a758 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x559ea9c1a860 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x559ea9c1a8b0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9c1a840 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x559ea9c1a820 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x559ea9c1a8d8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x559ea9876760 'uninitialized_type'
|   `-CXXRecord 0x559ea98766c8 'uninitialized_type'
|-CXXRecordDecl 0x559ea9c1a930 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x559ea9c1aa40 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x559ea9c245e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559ea9c29ec8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x559ea9c29fe8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x559ea9c29fa0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x559ea9c29f30 <col:9> '<bound member function type>' ->assign 0x559ea9c216c8
|     | `-CXXThisExpr 0x559ea9c29f20 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x559ea9c29f60 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x559ea9c29fd0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x559ea9c29f80 <col:19> 'int' 0
|-CXXConstructorDecl 0x559ea9c1ac88 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c1ab00 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x559ea9c1ab78 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x559ea9c29970 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559ea9c29950 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x559ea9c245e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559ea9c2a000 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x559ea9c2a150 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x559ea9c2a0d8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x559ea9c2a068 <col:9> '<bound member function type>' ->assign 0x559ea9c216c8
|     | `-CXXThisExpr 0x559ea9c2a058 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x559ea9c2a120 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x559ea9c2a108 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x559ea9c2a098 <col:16> 'long' lvalue ParmVar 0x559ea9c1ab00 'sec' 'long'
|     `-ImplicitCastExpr 0x559ea9c2a138 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9c2a0b8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c1ab78 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x559ea9c1aee8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c1ad58 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x559ea9c1add0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x559ea9c299a8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559ea9c29988 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x559ea9c245e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559ea9c2a168 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x559ea9c2a2a0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x559ea9c2a240 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x559ea9c2a1d0 <col:9> '<bound member function type>' ->assign 0x559ea9c216c8
|     | `-CXXThisExpr 0x559ea9c2a1c0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x559ea9c2a270 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x559ea9c2a200 <col:16> 'int' lvalue ParmVar 0x559ea9c1ad58 'sec' 'int'
|     `-ImplicitCastExpr 0x559ea9c2a288 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9c2a220 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c1add0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x559ea9c1b148 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c1afb8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x559ea9c1b030 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x559ea9c299e0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559ea9c299c0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x559ea9c245e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559ea9c2a2b8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x559ea9c2a408 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x559ea9c2a390 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x559ea9c2a320 <col:9> '<bound member function type>' ->assign 0x559ea9c216c8
|     | `-CXXThisExpr 0x559ea9c2a310 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x559ea9c2a3d8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x559ea9c2a3c0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x559ea9c2a350 <col:16> 'unsigned long' lvalue ParmVar 0x559ea9c1afb8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x559ea9c2a3f0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9c2a370 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c1b030 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x559ea9c1b3a8 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c1b218 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x559ea9c1b290 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x559ea9c29a18 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559ea9c299f8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x559ea9c245e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559ea9c2a420 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x559ea9c2a570 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x559ea9c2a4f8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x559ea9c2a488 <col:9> '<bound member function type>' ->assign 0x559ea9c216c8
|     | `-CXXThisExpr 0x559ea9c2a478 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x559ea9c2a540 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x559ea9c2a528 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x559ea9c2a4b8 <col:16> 'unsigned int' lvalue ParmVar 0x559ea9c1b218 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x559ea9c2a558 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9c2a4d8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c1b290 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x559ea9c1b508 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x559ea9c1b478 <col:31> col:37 'double'
|-CXXConstructorDecl 0x559ea9c1b6a8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x559ea9c1b5e0 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x559ea9c1b8d8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x559ea9c1b7e0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x559ea9c1ba88 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x559ea9c1b9c8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x559ea9c245e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559ea9c2a610 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x559ea9c2a588 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x559ea9c1b9c8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x559ea9c2a670 <col:19, line:214:5>
|-CXXConstructorDecl 0x559ea9c1bc58 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x559ea9c1bb98 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x559ea9c245e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559ea9c2a680 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x559ea9c2a730 <col:53, line:219:5>
|   `-CStyleCastExpr 0x559ea9c2a708 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x559ea9c2a6d8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x559ea9c1bb98 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x559ea9c1be48 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x559ea9c1bdc0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x559ea9c182c0 'Timestamp'
|   | `-CXXRecord 0x559ea9c18518 'Timestamp'
|   `-ParenType 0x559ea9c1bd60 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x559ea9c1bd30 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x559ea9c18860 'Timestamp::seconds_type' sugar
|         |-Typedef 0x559ea9c186d8 'seconds_type'
|         `-TypedefType 0x559ea9876b30 'int32_t' sugar
|           |-Typedef 0x559ea9786268 'int32_t'
|           `-TypedefType 0x559ea975f3b0 '__int32_t' sugar
|             |-Typedef 0x559ea975efc8 '__int32_t'
|             `-BuiltinType 0x559ea971d370 'int'
|-CXXConversionDecl 0x559ea9c1bf88 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x559ea9c1c058 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x559ea9c2a838 <col:37, line:231:5>
|   `-ReturnStmt 0x559ea9c2a828 <line:227:9, col:23>
|     `-BinaryOperator 0x559ea9c2a808 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x559ea9c2a7d8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x559ea9c2a788 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x559ea9c23638
|       |   `-MemberExpr 0x559ea9c2a758 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x559ea9c245e8
|       |     `-CXXThisExpr 0x559ea9c2a748 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x559ea9c2a7f0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x559ea9c2a7b8 <col:23> 'int' 0
|-CXXMethodDecl 0x559ea9c1c118 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x559ea9c1c1d8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x559ea9c1c298 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x559ea9c1c358 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x559ea9c1c418 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x559ea9c1c588 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x559ea9c1c4c8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x559ea9c1c6d0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x559ea9c1c640 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c1c798 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x559ea9c1c838 <col:54> "" ""
|-CXXMethodDecl 0x559ea9c1c8c8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x559ea9c1c968 <col:54> "" ""
|-CXXMethodDecl 0x559ea9c1c9f8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x559ea9c1ca98 <col:54> "" ""
|-CXXMethodDecl 0x559ea9c1cb98 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x559ea9c1cc68 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x559ea9c1cd98 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x559ea9c1ce90 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x559ea9c1cfc8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x559ea9c2aa50 <col:39, line:271:5>
|   `-ReturnStmt 0x559ea9c2aa40 <line:267:9, col:61>
|     `-CallExpr 0x559ea9c2a9e0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x559ea9c2a9c8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x559ea9c2a850 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x559ea9c24918 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x559ea9c2aa10 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x559ea9c2a8b0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x559ea9c23638
|       |   `-MemberExpr 0x559ea9c2a880 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x559ea9c245e8
|       |     `-CXXThisExpr 0x559ea9c2a870 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x559ea9c2aa28 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x559ea9c2a950 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x559ea9c2a920 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x559ea9c2a8e0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x559ea9c2a938 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x559ea9c2a900 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18e30 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559ea9c1d088 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x559ea9c2ac10 <col:39, line:279:5>
|   `-ReturnStmt 0x559ea9c2ac00 <line:275:9, col:61>
|     `-CallExpr 0x559ea9c2aba0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x559ea9c2ab88 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x559ea9c2aa68 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x559ea9c24918 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x559ea9c2abd0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x559ea9c2aac8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x559ea9c23638
|       |   `-MemberExpr 0x559ea9c2aa98 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x559ea9c245e8
|       |     `-CXXThisExpr 0x559ea9c2aa88 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x559ea9c2abe8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x559ea9c2ab68 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x559ea9c2ab38 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x559ea9c2aaf8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x559ea9c2ab50 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x559ea9c2ab18 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18d10 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559ea9c1d148 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x559ea9c2ada8 <col:39, line:287:5>
|   `-ReturnStmt 0x559ea9c2ad98 <line:283:9, col:53>
|     `-BinaryOperator 0x559ea9c2ad78 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x559ea9c2ad48 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x559ea9c2ac68 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x559ea9c23638
|       |   `-MemberExpr 0x559ea9c2ac38 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x559ea9c245e8
|       |     `-CXXThisExpr 0x559ea9c2ac28 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x559ea9c2ad60 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x559ea9c2ad28 <col:23, col:53> 'int'
|           `-BinaryOperator 0x559ea9c2ad08 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x559ea9c2acd8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x559ea9c2ac98 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18b60 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x559ea9c2acf0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x559ea9c2acb8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559ea9c1d238 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x559ea9c2c040 <col:40, line:293:5>
|   |-DeclStmt 0x559ea9c2aef0 <line:291:9, col:48>
|   | `-VarDecl 0x559ea9c2add0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x559ea9c2aed0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x559ea9c2ae78 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x559ea9c2ae48 <col:22> '<bound member function type>' ->subsec 0x559ea9c1c1d8
|   |     |   `-CXXThisExpr 0x559ea9c2ae38 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x559ea9c2aeb8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x559ea9c2ae98 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18f90 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x559ea9c2c030 <line:292:9, col:70>
|     `-ExprWithCleanups 0x559ea9c2c018 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x559ea9c2bfe8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559ea9c2bfd0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x559ea9c2bfb0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x559ea9c2bf80 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x559ea9c2bd18 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x559ea9c2bd00 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x559ea9c2af08 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x559ea9c2add0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x559ea9c2bf20 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x559ea9c2bf08 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x559ea9c2bed8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x559ea9c2bd30 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x559ea9c2bca0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x559ea9c2bc88 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x559ea9c2bc38 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x559ea9c18468 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x559ea9c2bbd8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x559ea9c2af38 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x559ea9c2af28 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x559ea9c2bc20 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x559ea9c2bc08 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x559ea9c2b3f8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x559ea9c2af60 <col:39> 'int' 0
|               |               `-BinaryOperator 0x559ea9c2aff0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x559ea9c2afc0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x559ea9c2af80 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18f90 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x559ea9c2afd8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x559ea9c2afa0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x559ea9c2add0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x559ea9c2bf50 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x559ea9c2bce8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x559ea9c2bcd8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x559ea9c1d2f8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x559ea9c2c598 <col:40, line:302:5>
|   |-DeclStmt 0x559ea9c2c190 <line:297:9, col:48>
|   | `-VarDecl 0x559ea9c2c070 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x559ea9c2c170 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x559ea9c2c118 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x559ea9c2c0e8 <col:22> '<bound member function type>' ->subsec 0x559ea9c1c1d8
|   |     |   `-CXXThisExpr 0x559ea9c2c0d8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x559ea9c2c158 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x559ea9c2c138 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c1a630 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x559ea9c2c588 <line:298:9, col:70>
|     `-ExprWithCleanups 0x559ea9c2c570 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x559ea9c2c540 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559ea9c2c528 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x559ea9c2c508 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x559ea9c2c4d8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x559ea9c2c400 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x559ea9c2c3e8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x559ea9c2c1a8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x559ea9c2c070 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x559ea9c2c478 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x559ea9c2c460 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x559ea9c2c430 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x559ea9c2c418 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x559ea9c2c388 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x559ea9c2c370 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x559ea9c2c350 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x559ea9c18468 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x559ea9c2c2f0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x559ea9c2c1d8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x559ea9c2c1c8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x559ea9c2c338 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x559ea9c2c320 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x559ea9c2c2b0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x559ea9c2c200 <col:39> 'int' 0
|               |               `-BinaryOperator 0x559ea9c2c290 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x559ea9c2c260 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x559ea9c2c220 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c1a630 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x559ea9c2c278 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x559ea9c2c240 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x559ea9c2c070 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x559ea9c2c4a8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x559ea9c2c3d0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x559ea9c2c3c0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x559ea9c1d3b8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x559ea9c2c620 <col:40, line:306:5>
|   `-ReturnStmt 0x559ea9c2c610 <line:305:9, col:17>
|     `-CXXConstructExpr 0x559ea9c2c5e0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x559ea9c2c5c8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x559ea9c2c5b8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x559ea9c1d558 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x559ea9c1d468 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c1d728 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x559ea9c1d630 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x559ea9c1d818 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x559ea9c1d988 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x559ea9c1d8c8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x559ea9c2c768 <col:56, line:320:5>
|   `-ReturnStmt 0x559ea9c2c758 <line:319:9, col:32>
|     `-ExprWithCleanups 0x559ea9c2c740 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x559ea9c2c710 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559ea9c2c6f8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x559ea9c2c6b8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x559ea9c2c688 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x559ea9c2c648 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x559ea9c1d8c8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x559ea9c2c6a0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x559ea9c2c668 <col:31> 'int' 0
|-CXXMethodDecl 0x559ea9c1dbc8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x559ea9c1da40 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559ea9c1dab8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9c2c938 <col:72, line:326:5>
|   `-ReturnStmt 0x559ea9c2c928 <line:325:9, col:51>
|     `-ExprWithCleanups 0x559ea9c2c910 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x559ea9c2c8e0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559ea9c2c8c8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x559ea9c2c888 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x559ea9c2c870 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x559ea9c2c790 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x559ea9c1da40 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x559ea9c2c830 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x559ea9c2c818 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x559ea9c2c7b0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x559ea9c22d90 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x559ea9c2c858 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x559ea9c2c7d0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c1dab8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c1dd78 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x559ea9c1dc88 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x559ea9c364c0 <col:56, line:337:5>
|   |-DeclStmt 0x559ea9c2cc38 <line:329:9, col:51>
|   | `-VarDecl 0x559ea9c2c960 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x559ea9c2cc20 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x559ea9c2cbf0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x559ea9c2cbd8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x559ea9c2cbc0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x559ea9c2cb90 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x559ea9c2cb78 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x559ea9c2cb60 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x559ea9c2ca50 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x559ea9c362b0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x559ea9c2cca0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x559ea9c23638
|   | | `-MemberExpr 0x559ea9c2cc70 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x559ea9c245e8
|   | |   `-DeclRefExpr 0x559ea9c2cc50 <col:9> 'Timestamp' lvalue Var 0x559ea9c2c960 't' 'Timestamp'
|   | `-BinaryOperator 0x559ea9c36290 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x559ea9c36260 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559ea9c2ccd0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x559ea9c1dc88 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x559ea9c36278 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x559ea9c2cd80 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x559ea9c2cd60 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x559ea9c2cd30 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x559ea9c2ccf0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x559ea9c2cd48 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x559ea9c2cd10 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18e30 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x559ea9c364a8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x559ea9c36478 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x559ea9c36460 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x559ea9c36440 <col:16> 'Timestamp' lvalue Var 0x559ea9c2c960 't' 'Timestamp'
|-CXXMethodDecl 0x559ea9c1df40 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x559ea9c1de30 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559ea9c1dea8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9c36678 <col:72, line:343:5>
|   `-ReturnStmt 0x559ea9c36668 <line:342:9, col:51>
|     `-ExprWithCleanups 0x559ea9c36650 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x559ea9c36620 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559ea9c36608 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x559ea9c365c8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x559ea9c365b0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x559ea9c364f8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x559ea9c1de30 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x559ea9c36570 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x559ea9c36558 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x559ea9c36518 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x559ea9c22ed8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x559ea9c36598 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x559ea9c36538 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c1dea8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c1e090 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x559ea9c1e000 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x559ea9c36ac0 <col:56, line:354:5>
|   |-DeclStmt 0x559ea9c36868 <line:346:9, col:51>
|   | `-VarDecl 0x559ea9c366a0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x559ea9c36850 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x559ea9c36820 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x559ea9c36808 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x559ea9c367f0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x559ea9c367c0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x559ea9c367a8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x559ea9c36790 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x559ea9c36760 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x559ea9c36a20 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x559ea9c368d0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x559ea9c23638
|   | | `-MemberExpr 0x559ea9c368a0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x559ea9c245e8
|   | |   `-DeclRefExpr 0x559ea9c36880 <col:9> 'Timestamp' lvalue Var 0x559ea9c366a0 't' 'Timestamp'
|   | `-BinaryOperator 0x559ea9c36a00 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x559ea9c369d0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559ea9c36900 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x559ea9c1e000 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x559ea9c369e8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x559ea9c369b0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x559ea9c36990 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x559ea9c36960 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x559ea9c36920 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x559ea9c36978 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x559ea9c36940 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18d10 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x559ea9c36aa8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x559ea9c36a78 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x559ea9c36a60 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x559ea9c36a40 <col:16> 'Timestamp' lvalue Var 0x559ea9c366a0 't' 'Timestamp'
|-CXXMethodDecl 0x559ea9c1e258 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x559ea9c1e148 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559ea9c1e1c0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9c36c78 <col:72, line:360:5>
|   `-ReturnStmt 0x559ea9c36c68 <line:359:9, col:51>
|     `-ExprWithCleanups 0x559ea9c36c50 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x559ea9c36c20 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559ea9c36c08 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x559ea9c36bc8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x559ea9c36bb0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x559ea9c36af8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x559ea9c1e148 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x559ea9c36b70 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x559ea9c36b58 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x559ea9c36b18 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x559ea9c23020 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x559ea9c36b98 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x559ea9c36b38 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c1e1c0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c1e3a8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x559ea9c1e318 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x559ea9c370e8 <col:56, line:371:5>
|   |-DeclStmt 0x559ea9c36e68 <line:363:9, col:51>
|   | `-VarDecl 0x559ea9c36ca0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x559ea9c36e50 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x559ea9c36e20 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x559ea9c36e08 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x559ea9c36df0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x559ea9c36dc0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x559ea9c36da8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x559ea9c36d90 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x559ea9c36d60 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x559ea9c37048 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x559ea9c36ed0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x559ea9c23638
|   | | `-MemberExpr 0x559ea9c36ea0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x559ea9c245e8
|   | |   `-DeclRefExpr 0x559ea9c36e80 <col:9> 'Timestamp' lvalue Var 0x559ea9c36ca0 't' 'Timestamp'
|   | `-CallExpr 0x559ea9c36fe8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x559ea9c36fd0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x559ea9c36f00 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x559ea9c24918 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x559ea9c37018 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559ea9c36f20 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x559ea9c1e318 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x559ea9c37030 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x559ea9c36fb0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x559ea9c36f80 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x559ea9c36f40 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18b60 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x559ea9c36f98 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x559ea9c36f60 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x559ea9c370d0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x559ea9c370a0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x559ea9c37088 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x559ea9c37068 <col:16> 'Timestamp' lvalue Var 0x559ea9c36ca0 't' 'Timestamp'
|-CXXMethodDecl 0x559ea9c1e498 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x559ea9c37228 <col:39, line:377:5>
|   `-ReturnStmt 0x559ea9c37218 <line:376:9, col:30>
|     `-ExprWithCleanups 0x559ea9c37200 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x559ea9c371d0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559ea9c371b8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x559ea9c37178 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x559ea9c37120 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x559ea9c37160 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x559ea9c37140 <col:29> 'int' 1
|-CXXMethodDecl 0x559ea9c1e558 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x559ea9c37308 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x559ea9c372c0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x559ea9c37250 <col:9> '<bound member function type>' ->assign 0x559ea9c216c8
|     | `-CXXThisExpr 0x559ea9c37240 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x559ea9c37280 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x559ea9c372f0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x559ea9c372a0 <col:19> 'int' 0
|-CXXMethodDecl 0x559ea9c216c8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c21580 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559ea9c215f8 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x559ea9c29a50 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559ea9c29a30 <col:60> 'int' 0
| `-CompoundStmt 0x559ea9c37500 <col:63, line:395:5>
|   `-BinaryOperator 0x559ea9c374e0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x559ea9c37360 <col:9, col:12> 'int64_t':'long' lvalue .x 0x559ea9c23638
|     | `-MemberExpr 0x559ea9c37330 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x559ea9c245e8
|     |   `-CXXThisExpr 0x559ea9c37320 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x559ea9c374c0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x559ea9c37450 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x559ea9c373f0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x559ea9c373d8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x559ea9c373c0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x559ea9c37390 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x559ea9c21580 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x559ea9c37438 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x559ea9c37418 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x559ea9c374a8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x559ea9c37490 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x559ea9c37470 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c215f8 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c21898 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c21788 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559ea9c21800 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9c37658 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x559ea9c37610 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x559ea9c37528 <col:9> '<bound member function type>' ->assign 0x559ea9c216c8
|     | `-CXXThisExpr 0x559ea9c37518 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x559ea9c37640 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x559ea9c37558 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x559ea9c21788 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x559ea9c375d0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x559ea9c375b8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x559ea9c37578 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x559ea9c22ed8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x559ea9c375f8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559ea9c37598 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c21800 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c21a68 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c21958 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559ea9c219d0 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9c377b0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x559ea9c37768 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x559ea9c37680 <col:9> '<bound member function type>' ->assign 0x559ea9c216c8
|     | `-CXXThisExpr 0x559ea9c37670 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x559ea9c37798 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x559ea9c376b0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x559ea9c21958 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x559ea9c37728 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x559ea9c37710 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x559ea9c376d0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x559ea9c23020 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x559ea9c37750 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559ea9c376f0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c219d0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c21c38 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c21b28 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559ea9c21ba0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x559ea9c29a88 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559ea9c29a68 <col:57> 'int' 0
| `-DeprecatedAttr 0x559ea9c21ce8 <col:75> "" ""
|-CXXMethodDecl 0x559ea9c21e78 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c21d68 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559ea9c21de0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559ea9c21f28 <col:74> "" ""
|-CXXMethodDecl 0x559ea9c220b8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c21fa8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559ea9c22020 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559ea9c22168 <col:74> "" ""
|-CXXMethodDecl 0x559ea9c221f8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x559ea9c22298 <col:42> "" ""
|-CXXMethodDecl 0x559ea9c22440 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x559ea9c22320 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x559ea9c223a0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x559ea9c22510 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x559ea9c225d0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x559ea9c22670 <col:20>
| `-OptimizeNoneAttr 0x559ea9c226c8 <col:30>
|-CXXMethodDecl 0x559ea9c22710 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x559ea9c227d0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x559ea9c22890 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x559ea9c22950 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x559ea9c22a10 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x559ea9c22ad0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x559ea9c22b90 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x559ea9c22c50 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x559ea9c22d90 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x559ea9c22d00 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9c378f8 <col:58, line:512:5>
|   `-ReturnStmt 0x559ea9c378e8 <line:511:9, col:53>
|     `-BinaryOperator 0x559ea9c378c8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x559ea9c37898 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x559ea9c377c8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c22d00 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x559ea9c378b0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x559ea9c37878 <col:23, col:53> 'int'
|           `-BinaryOperator 0x559ea9c37858 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x559ea9c37828 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x559ea9c377e8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x559ea9c37840 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x559ea9c37808 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18e30 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559ea9c22ed8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x559ea9c22e48 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9c37a40 <col:58, line:516:5>
|   `-ReturnStmt 0x559ea9c37a30 <line:515:9, col:53>
|     `-BinaryOperator 0x559ea9c37a10 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x559ea9c379e0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x559ea9c37910 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c22e48 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x559ea9c379f8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x559ea9c379c0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x559ea9c379a0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x559ea9c37970 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x559ea9c37930 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x559ea9c37988 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x559ea9c37950 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18d10 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559ea9c23020 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x559ea9c22f90 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9c37b88 <col:58, line:520:5>
|   `-ReturnStmt 0x559ea9c37b78 <line:519:9, col:53>
|     `-BinaryOperator 0x559ea9c37b58 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x559ea9c37b28 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x559ea9c37a58 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c22f90 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x559ea9c37b40 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x559ea9c37b08 <col:23, col:53> 'int'
|           `-BinaryOperator 0x559ea9c37ae8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x559ea9c37ab8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x559ea9c37a78 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18b60 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x559ea9c37ad0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x559ea9c37a98 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559ea9c23168 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x559ea9c230d8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9c37cd0 <col:60, line:524:5>
|   `-ReturnStmt 0x559ea9c37cc0 <line:523:9, col:55>
|     `-BinaryOperator 0x559ea9c37ca0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x559ea9c37c70 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x559ea9c37ba0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c230d8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x559ea9c37c88 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x559ea9c37c50 <col:25, col:55> 'int'
|           `-BinaryOperator 0x559ea9c37c30 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x559ea9c37c00 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x559ea9c37bc0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x559ea9c37c18 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x559ea9c37be0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18e30 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559ea9c232b0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x559ea9c23220 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9c37e18 <col:60, line:528:5>
|   `-ReturnStmt 0x559ea9c37e08 <line:527:9, col:55>
|     `-BinaryOperator 0x559ea9c37de8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x559ea9c37db8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x559ea9c37ce8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c23220 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x559ea9c37dd0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x559ea9c37d98 <col:25, col:55> 'int'
|           `-BinaryOperator 0x559ea9c37d78 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x559ea9c37d48 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x559ea9c37d08 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x559ea9c37d60 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x559ea9c37d28 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18d10 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559ea9c233f8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x559ea9c23368 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9c37f60 <col:60, line:532:5>
|   `-ReturnStmt 0x559ea9c37f50 <line:531:9, col:55>
|     `-BinaryOperator 0x559ea9c37f30 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x559ea9c37f00 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x559ea9c37e30 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c23368 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x559ea9c37f18 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x559ea9c37ee0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x559ea9c37ec0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x559ea9c37e90 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x559ea9c37e50 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18b60 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x559ea9c37ea8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x559ea9c37e70 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559ea9c18ec0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x559ea9c234a0 prev 0x559ea9c1a930 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559ea9c23598 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x559ea9c23638 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x559ea9c29ad8 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x559ea9c29eb8 <col:11>
| |-CXXConstructorDecl 0x559ea9c29bb0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x559ea9c29c98 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x559ea9c2a600 <col:11>
| |-CXXConstructorDecl 0x559ea9c29d38 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x559ea9c29e48 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x559ea9c2be58 <col:11>
| |-CXXDestructorDecl 0x559ea9c2b168 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x559ea992b638 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x559ea992b748 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x559ea992c010 <col:11>
| |   `-ReturnStmt 0x559ea992c000 <col:11>
| |     `-UnaryOperator 0x559ea992bfe8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x559ea992bfd8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x559ea992b7b8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x559ea992b8c8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x559ea9cb5e40 <col:11>
|     `-ReturnStmt 0x559ea9cb5e30 <col:11>
|       `-UnaryOperator 0x559ea9cb5e18 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x559ea9cb5e08 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x559ea9c236a0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x559ea9c237a0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x559ea9c239a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c23780 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x559ea9c23760 <col:21> 'int' 0
| |-EnumConstantDecl 0x559ea9c23830 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x559ea9c239b8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c23810 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x559ea9c237f0 <col:23> 'int' 1
| |-EnumConstantDecl 0x559ea9c238c0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x559ea9c239d0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c238a0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x559ea9c23880 <col:23> 'int' 2
| `-EnumConstantDecl 0x559ea9c23950 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x559ea9c239e8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9c23930 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x559ea9c23910 <col:27> 'int' 3
|-CXXMethodDecl 0x559ea9c23a28 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x559ea9c23af0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x559ea9c23cf8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x559ea9c23ba0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x559ea9c23c20 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x559ea9c29aa0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x559ea9c23f08 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x559ea9c23db8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x559ea9c23e30 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x559ea9c23fd8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x559ea9c24098 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x559ea9c24208 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x559ea9c24148 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x559ea9c242d0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x559ea9c24390 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x559ea9c24450 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x559ea9c24510 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x559ea9c245b0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x559ea9c245e8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x559ea9c24658 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x559ea9c37f78 <col:27, line:684:5>
|-CXXMethodDecl 0x559ea9c24718 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x559ea9c37f88 <col:27, line:696:5>
|-CXXMethodDecl 0x559ea9c24918 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x559ea9c247c8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x559ea9c24840 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9c38110 <col:66, line:700:5>
|   `-ReturnStmt 0x559ea9c38100 <line:699:9, col:31>
|     `-CallExpr 0x559ea9c380a0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x559ea9c38088 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x559ea9c38038 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x559ea9aa5858 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x559ea9c380d0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x559ea9c37ff8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x559ea9c247c8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x559ea9c380e8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559ea9c38018 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c24840 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c24c88 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x559ea9c249d8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x559ea9c24a50 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x559ea9c24ac8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x559ea9c24b40 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9c38460 <col:64, line:707:5>
|   |-DeclStmt 0x559ea9c381a0 <line:704:9, col:24>
|   | `-VarDecl 0x559ea9c38138 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x559ea9c383b0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x559ea9c381b8 <col:9> 'int32_t':'int' lvalue ParmVar 0x559ea9c24a50 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x559ea9c38398 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x559ea9c38330 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x559ea9c38318 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c38298 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x559ea9aaaea8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x559ea9c38368 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x559ea9c38238 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x559ea9c24ac8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x559ea9c38380 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x559ea9c38258 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9c24b40 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x559ea9c38278 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x559ea9c38138 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x559ea9c38440 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x559ea9c383d0 <col:9> 'int32_t':'int' lvalue ParmVar 0x559ea9c249d8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x559ea9c38428 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x559ea9c38410 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x559ea9c383f0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x559ea9c38138 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x559ea9c24f28 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x559ea9c24d58 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x559ea9c24dd0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x559ea9c24e48 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x559ea9c251c8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x559ea9c24ff0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x559ea9c25068 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x559ea9c250e0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x559ea9c25358 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x559ea9c25290 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x559ea9c28da0 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x559ea9c25410 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x559ea9c25488 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x559ea9c29068 <line:717:5, col:73> col:24
| `-FunctionDecl 0x559ea9c28fa8 parent 0x559ea971d278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x559ea9c28e60 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x559ea9c28ed8 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x559ea9c29288 <line:718:5, col:72> col:24
| `-FunctionDecl 0x559ea9c291c8 parent 0x559ea971d278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x559ea9c290b8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x559ea9c29130 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x559ea9c29450 <line:719:5, col:57> col:29
| `-FunctionDecl 0x559ea9c29398 parent 0x559ea971d278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x559ea9c292d8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x559ea9c296d8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x559ea9c29618 parent 0x559ea971d278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x559ea9c294c8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x559ea9c29540 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x559ea9c298f8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x559ea9c29838 parent 0x559ea971d278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x559ea9c29728 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x559ea9c297a0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x559ea9c2b010 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9c2b0f8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x559ea9c245e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559ea9c2bb68 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x559ea9c2bb20 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x559ea9c245e8
| |     `-DeclRefExpr 0x559ea9c2bb00 <col:7> 'const Timestamp' lvalue ParmVar 0x559ea9c2b0f8 '' 'const Timestamp &'
| `-CompoundStmt 0x559ea9c2bbc8 <col:7>
|-CXXConstructorDecl 0x559ea9c2b278 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9c2b388 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x559ea9c245e8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559ea9c2be68 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x559ea9c2be10 <col:7> 'Timestamp::rep_t' xvalue ._t 0x559ea9c245e8
| |     `-CXXStaticCastExpr 0x559ea9c2bde0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9c2bdb0 <col:7> 'Timestamp' lvalue ParmVar 0x559ea9c2b388 '' 'Timestamp &&'
| `-CompoundStmt 0x559ea9c2bec8 <col:7>
|-CXXDestructorDecl 0x559ea9c2b438 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x559ea992b490 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea992b598 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x559ea992c088 <col:7>
|   |-CXXMemberCallExpr 0x559ea992c028 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x559ea992bf68 <col:7> '<bound member function type>' .operator= 0x559ea992b638
|   | | `-MemberExpr 0x559ea992be78 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x559ea9c245e8
|   | |   `-CXXThisExpr 0x559ea992be68 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x559ea992bf38 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x559ea9c245e8
|   |   `-DeclRefExpr 0x559ea992bf18 <col:7> 'const Timestamp' lvalue ParmVar 0x559ea992b598 '' 'const Timestamp &'
|   `-ReturnStmt 0x559ea992c078 <col:7>
|     `-UnaryOperator 0x559ea992c060 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559ea992c050 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x559ea992b938 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x559ea992ba48 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x559ea9cb5eb8 <col:7>
    |-CXXMemberCallExpr 0x559ea9cb5e58 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x559ea9cb5dc0 <col:7> '<bound member function type>' .operator= 0x559ea992b7b8
    | | `-MemberExpr 0x559ea9cb5c90 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x559ea9c245e8
    | |   `-CXXThisExpr 0x559ea9cb5c80 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x559ea9cb5d90 <col:7> 'Timestamp::rep_t' xvalue ._t 0x559ea9c245e8
    |   `-CXXStaticCastExpr 0x559ea9cb5d60 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x559ea9cb5d30 <col:7> 'Timestamp' lvalue ParmVar 0x559ea992ba48 '' 'Timestamp &&'
    `-ReturnStmt 0x559ea9cb5ea8 <col:7>
      `-UnaryOperator 0x559ea9cb5e90 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x559ea9cb5e80 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9cb2e98 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x559ea9cb2fc8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x559ea9cb3ab8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9c0d448 prev 0x559ea9c8d530 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 referenced class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559ea9c0d540 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x559ea9c0d5d0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x559ea9c0d630 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x559ea9c0d6d8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x559ea9c0d7f8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x559ea9c0d998 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x559ea9c0d8d8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x559ea9c0dbe8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x559ea9c0da58 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x559ea9c0dad8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x559ea9c0dd78 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x559ea9c0dcb0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x559ea9c0def8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x559ea9c0de38 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x559ea9c0e0a8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x559ea9c0dfe8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x559ea9c0e1a0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x559ea9cb3c90 <col:21, line:58:5>
|   `-IfStmt 0x559ea9cb3c78 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x559ea9cb3be0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x559ea9cb3bb0 <col:6> '<bound member function type>' ->scheduled 0x559ea9c0e9f8
|     |   `-ImplicitCastExpr 0x559ea9cb3c00 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x559ea9cb3ba0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x559ea9cb3c58 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x559ea9cb3c28 <col:6> '<bound member function type>' ->unschedule 0x559ea9cb2340
|         `-CXXThisExpr 0x559ea9cb3c18 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x559ea9c0e2a0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x559ea9cb3e30 <col:26, line:65:5>
|   |-BinaryOperator 0x559ea9cb3d50 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x559ea9cb3ce8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x559ea9cb2fc8
|   | | `-MemberExpr 0x559ea9cb3cb8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x559ea9cb3088
|   | |   `-CXXThisExpr 0x559ea9cb3ca8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x559ea9cb3d38 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ea9cb3d18 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x559ea9cb34e8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x559ea9cb3e10 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x559ea9cb3d80 <col:2> 'void *' lvalue ->_thunk 0x559ea9cb3108
|     | `-CXXThisExpr 0x559ea9cb3d70 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x559ea9cb3de8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x559ea9cb3db0 <col:20> 'int' 1
|-CXXMethodDecl 0x559ea9c0e3e0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x559ea9c0e350 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x559ea9cb3f90 <col:52, line:71:5>
|   |-CStyleCastExpr 0x559ea9cb3e80 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x559ea9cb3e50 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x559ea9c0e350 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x559ea9cb3f70 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x559ea9cb3f40 <col:2> '<bound member function type>' ->assign 0x559ea9c0e2a0
|       `-CXXThisExpr 0x559ea9cb3f30 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x559ea9c0e5b0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x559ea9c0e498 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x559ea9c0e518 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x559ea9cb4110 <col:58, line:79:5>
|   |-BinaryOperator 0x559ea9cb4058 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x559ea9cb3ff0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x559ea9cb2fc8
|   | | `-MemberExpr 0x559ea9cb3fc0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x559ea9cb3088
|   | |   `-CXXThisExpr 0x559ea9cb3fb0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x559ea9cb4040 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ea9cb4020 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x559ea9c0e498 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x559ea9cb40f0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x559ea9cb4088 <col:2> 'void *' lvalue ->_thunk 0x559ea9cb3108
|     | `-CXXThisExpr 0x559ea9cb4078 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x559ea9cb40d8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9cb40b8 <col:11> 'void *' lvalue ParmVar 0x559ea9c0e518 'user_data' 'void *'
|-CXXMethodDecl 0x559ea9c0e700 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x559ea9c0e670 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x559ea9cb42a8 <col:35, line:87:5>
|   |-BinaryOperator 0x559ea9cb41d8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x559ea9cb4170 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x559ea9cb2fc8
|   | | `-MemberExpr 0x559ea9cb4140 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x559ea9cb3088
|   | |   `-CXXThisExpr 0x559ea9cb4130 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x559ea9cb41c0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ea9cb41a0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x559ea9cb36c0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x559ea9cb4288 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x559ea9cb4208 <col:2> 'void *' lvalue ->_thunk 0x559ea9cb3108
|     | `-CXXThisExpr 0x559ea9cb41f8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x559ea9cb4270 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x559ea9cb4258 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x559ea9cb4238 <col:11> 'Element *' lvalue ParmVar 0x559ea9c0e670 'element' 'Element *'
|-CXXMethodDecl 0x559ea9c0e848 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x559ea9c0e7b8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x559ea9cb4440 <col:29, line:94:5>
|   |-BinaryOperator 0x559ea9cb4370 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x559ea9cb4308 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x559ea9cb2fc8
|   | | `-MemberExpr 0x559ea9cb42d8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x559ea9cb3088
|   | |   `-CXXThisExpr 0x559ea9cb42c8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x559ea9cb4358 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x559ea9cb4338 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x559ea9cb3898 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x559ea9cb4420 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x559ea9cb43a0 <col:2> 'void *' lvalue ->_thunk 0x559ea9cb3108
|     | `-CXXThisExpr 0x559ea9cb4390 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x559ea9cb4408 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x559ea9cb43f0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x559ea9cb43d0 <col:11> 'Task *' lvalue ParmVar 0x559ea9c0e7b8 'task' 'Task *'
|-CXXMethodDecl 0x559ea9c0e938 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x559ea9cb4520 <col:37, line:100:5>
|   `-ReturnStmt 0x559ea9cb4510 <line:99:2, col:19>
|     `-BinaryOperator 0x559ea9cb44f0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x559ea9cb44c0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x559ea9cb4470 <col:9> 'Element *const' lvalue ->_owner 0x559ea9cb3168
|       |   `-CXXThisExpr 0x559ea9cb4460 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x559ea9cb44d8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x559ea9cb44a0 <col:19> 'int' 0
|-CXXMethodDecl 0x559ea9c0e9f8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x559ea9cb45e0 <col:35, line:105:5>
|   `-ReturnStmt 0x559ea9cb45d0 <line:104:2, col:23>
|     `-BinaryOperator 0x559ea9cb45b0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x559ea9cb4598 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x559ea9cb4548 <col:9> 'const int' lvalue ->_schedpos1 0x559ea9cb2de8
|       |   `-CXXThisExpr 0x559ea9cb4538 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x559ea9cb4578 <col:23> 'int' 0
|-CXXMethodDecl 0x559ea9c0eab8 <line:116:5, line:118:5> line:116:29 expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x559ea9cb4648 <col:51, line:118:5>
|   `-ReturnStmt 0x559ea9cb4638 <line:117:2, col:9>
|     `-MemberExpr 0x559ea9cb4608 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x559ea9cb2e48
|       `-CXXThisExpr 0x559ea9cb45f8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x559ea9c0eb78 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x559ea9cb4ba0 <col:37, line:136:5>
|   `-IfStmt 0x559ea9cb4b78 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x559ea9cb4708 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x559ea9cb46f0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x559ea9cb46d0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x559ea9cb46a0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x559ea9c1bf88
|     |       `-MemberExpr 0x559ea9cb4670 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x559ea9cb2e48
|     |         `-CXXThisExpr 0x559ea9cb4660 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x559ea9cb4ae8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x559ea9cb4ad0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x559ea9cb4aa0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x559ea9cb4a88 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x559ea9cb4a50 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x559ea9cb4a38 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x559ea9cb4a18 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x559ea9c47690 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x559ea9cb49b8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x559ea9cb49a0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x559ea9cb48c8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x559ea9cb48b0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x559ea9cb4890 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x559ea9c47350 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x559ea9cb4830 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x559ea9cb4730 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x559ea9cb2e48
|     |         |     |   `-CXXThisExpr 0x559ea9cb4720 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x559ea9cb4878 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x559ea9cb4860 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x559ea9cb4810 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x559ea9cb47f8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x559ea9cb4798 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x559ea9a8c720 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x559ea9cb4a00 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x559ea9cb49e8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x559ea9cb4980 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x559ea9cb4968 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x559ea9cb4938 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x559ea9a8d3f0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x559ea9cb4b68 <line:135:6, col:13>
|       `-CXXConstructExpr 0x559ea9cb4b38 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x559ea9cb4b08 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x559ea9cb2e48
|           `-CXXThisExpr 0x559ea9cb4af8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x559ea9c0ec38 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x559ea9cb4c88 <col:35, line:141:5>
|   `-ReturnStmt 0x559ea9cb4c78 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x559ea9cb4c40 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x559ea9cb4c10 <col:9, col:17> '<bound member function type>' ->router 0x559ea9c9ecd0
|         `-ImplicitCastExpr 0x559ea9cb4c60 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x559ea9cb4bf8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x559ea9cb4bc8 <col:9> 'Element *const' lvalue ->_owner 0x559ea9cb3168
|               `-CXXThisExpr 0x559ea9cb4bb8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x559ea9c0ecf8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x559ea9cb4d08 <col:37, line:146:5>
|   `-ReturnStmt 0x559ea9cb4cf8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x559ea9cb4ce0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x559ea9cb4cb0 <col:9> 'Element *const' lvalue ->_owner 0x559ea9cb3168
|         `-CXXThisExpr 0x559ea9cb4ca0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x559ea9c0edb8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x559ea9cb4d88 <col:41, line:151:5>
|   `-ReturnStmt 0x559ea9cb4d78 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x559ea9cb4d60 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x559ea9cb4d30 <col:9> 'RouterThread *const' lvalue ->_thread 0x559ea9cb31c8
|         `-CXXThisExpr 0x559ea9cb4d20 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x559ea9c0ee80 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x559ea9cb1360 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x559ea9c0ef30 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x559ea9c0efa8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559ea9cb3aa8 <col:50> 'bool' false
|-CXXMethodDecl 0x559ea9cb14e8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x559ea9cb1420 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x559ea9cb1630 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x559ea9cb15a0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x559ea9cb1778 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x559ea9cb16e8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x559ea9cb18c0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x559ea9cb1830 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x559ea9cb1a08 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x559ea9cb1978 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x559ea9cb1ad0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x559ea9cb4ef0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x559ea9cb4ed8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x559ea9cb4e80 <col:2, col:47> 'void'
|       |-MemberExpr 0x559ea9cb4db0 <col:2> '<bound member function type>' ->schedule_at_steady 0x559ea9cb1630
|       | `-CXXThisExpr 0x559ea9cb4da0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x559ea9cb4ec0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x559ea9cb4ea8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x559ea9cb4e60 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x559ea9cb4e48 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x559ea9cb4e18 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x559ea9a8d3f0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x559ea9cb1c10 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x559ea9cb1b80 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x559ea9cb1d58 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x559ea9cb1cc8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9cb5078 <col:56, line:241:5>
|   `-ExprWithCleanups 0x559ea9cb5060 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x559ea9cb5008 <col:2, col:40> 'void'
|       |-MemberExpr 0x559ea9cb4f18 <col:2> '<bound member function type>' ->schedule_after 0x559ea9cb1c10
|       | `-CXXThisExpr 0x559ea9cb4f08 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x559ea9cb5048 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x559ea9cb5030 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x559ea9cb4fc8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x559ea9cb4f98 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x559ea9cb4f58 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9cb1cc8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x559ea9cb4fb0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x559ea9cb4f78 <col:38> 'int' 0
|-CXXMethodDecl 0x559ea9cb1ea0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x559ea9cb1e10 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9cb52e8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x559ea9cb52d0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x559ea9cb5278 <col:2, col:49> 'void'
|       |-MemberExpr 0x559ea9cb50a0 <col:2> '<bound member function type>' ->schedule_after 0x559ea9cb1c10
|       | `-CXXThisExpr 0x559ea9cb5090 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x559ea9cb52b8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x559ea9cb52a0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x559ea9cb5220 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x559ea9cb5208 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x559ea9cb5178 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x559ea9c1dd78 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x559ea9cb5260 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x559ea9cb5248 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x559ea9cb5158 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9cb1e10 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9cb1fe8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x559ea9cb1f58 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x559ea9cb54c8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x559ea9cb54b0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x559ea9cb5458 <col:2, col:38> 'void'
|       |-MemberExpr 0x559ea9cb5310 <col:2> '<bound member function type>' ->schedule_at_steady 0x559ea9cb1630
|       | `-CXXThisExpr 0x559ea9cb5300 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x559ea9cb5498 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x559ea9cb5480 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x559ea9cb5420 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x559ea9cb5408 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x559ea9cb53e8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x559ea9c47350 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x559ea9cb53b8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x559ea9cb53a0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x559ea9cb5350 <col:21> 'Timestamp' lvalue ->_expiry_s 0x559ea9cb2e48
|             |     `-CXXThisExpr 0x559ea9cb5340 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x559ea9cb5380 <col:33> 'const Timestamp' lvalue ParmVar 0x559ea9cb1f58 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x559ea9cb2130 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x559ea9cb20a0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9cb57a0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x559ea9cb5788 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x559ea9cb5730 <col:2, col:79> 'void'
|       |-MemberExpr 0x559ea9cb54f0 <col:2> '<bound member function type>' ->schedule_at_steady 0x559ea9cb1630
|       | `-CXXThisExpr 0x559ea9cb54e0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x559ea9cb5770 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x559ea9cb5758 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x559ea9cb56f0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x559ea9cb5628 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x559ea9cb5610 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x559ea9cb55a0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x559ea9cb5570 <col:31, col:41> '<bound member function type>' .sec 0x559ea9a8eee8
|             | |     `-ImplicitCastExpr 0x559ea9cb55c0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x559ea9cb5540 <col:31> 'Timestamp' lvalue ->_expiry_s 0x559ea9cb2e48
|             | |         `-CXXThisExpr 0x559ea9cb5530 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x559ea9cb55f8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x559ea9cb55d8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9cb20a0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x559ea9cb56b8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x559ea9cb5688 <col:60, col:70> '<bound member function type>' .subsec 0x559ea9a8f5e0
|                 `-ImplicitCastExpr 0x559ea9cb56d8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x559ea9cb5658 <col:60> 'Timestamp' lvalue ->_expiry_s 0x559ea9cb2e48
|                     `-CXXThisExpr 0x559ea9cb5648 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x559ea9cb2278 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x559ea9cb21e8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559ea9cb5ad8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x559ea9cb5ac0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x559ea9cb5a68 <col:2, col:65> 'void'
|       |-MemberExpr 0x559ea9cb57c8 <col:2> '<bound member function type>' ->schedule_at_steady 0x559ea9cb1630
|       | `-CXXThisExpr 0x559ea9cb57b8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x559ea9cb5aa8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x559ea9cb5a90 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x559ea9cb5a30 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x559ea9cb5a18 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x559ea9cb59f8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x559ea9c47350 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x559ea9cb5998 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x559ea9cb5980 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x559ea9cb5808 <col:21> 'Timestamp' lvalue ->_expiry_s 0x559ea9cb2e48
|             |     `-CXXThisExpr 0x559ea9cb57f8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x559ea9cb59e0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x559ea9cb59c8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x559ea9cb5928 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x559ea9cb5910 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x559ea9cb58e0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x559ea9c1dd78 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x559ea9cb5968 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x559ea9cb5950 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x559ea9cb58c0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x559ea9cb21e8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9cb2340 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x559ea9cb2400 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x559ea9cb5fa0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x559ea9cb5b30 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x559ea9cb5b00 <col:2> '<bound member function type>' ->unschedule 0x559ea9cb2340
|   |   `-CXXThisExpr 0x559ea9cb5af0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x559ea9cb5f88 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x559ea9cb5f50 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x559ea9cb5f38 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x559ea9cb5be8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x559ea992b938 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x559ea9cb5b60 <col:2> 'Timestamp' lvalue ->_expiry_s 0x559ea9cb2e48
|       | `-CXXThisExpr 0x559ea9cb5b50 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x559ea9cb5bd0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x559ea9cb5ba0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x559ea9cb24c0 <line:304:5, line:310:5> line:304:29 adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x559ea9cb62f8 <col:42, line:310:5>
|   |-IfStmt 0x559ea9cb6140 <line:306:2, line:307:23>
|   | |-CallExpr 0x559ea9cb6070 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x559ea9cb6058 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x559ea9cb5ff8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x559ea9c38e60 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x559ea9cb6130 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x559ea9cb6118 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x559ea9cb60e8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x559ea9cb60d0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x559ea9cb60a0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x559ea9cb62e8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x559ea9cb62d0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x559ea9cb62a0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559ea9cb6288 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x559ea9cb6248 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x559ea9cb6230 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x559ea9cb6200 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x559ea9c1e090 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x559ea9cb6270 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x559ea9cb61e0 <col:30> 'int' 500
|-CXXMethodDecl 0x559ea9cb2600 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x559ea9cb2570 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559ea9cb26a8 <col:69> "" ""
|-CXXMethodDecl 0x559ea9cb27b8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x559ea9cb2728 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559ea9cb2860 <col:70> "" ""
|-CXXMethodDecl 0x559ea9cb2970 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x559ea9cb28e0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559ea9cb2a18 <col:71> "" ""
|-CXXMethodDecl 0x559ea9cb2b28 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x559ea9cb2a98 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559ea9cb2bd0 <col:72> "" ""
|-EnumDecl 0x559ea9cb2c40 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x559ea9cb2d40 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x559ea9cb2d90 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9cb2d20 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x559ea9cb2d00 <col:25> 'int' 1
|-AccessSpecDecl 0x559ea9cb2da8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x559ea9cb2de8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x559ea9cb2e48 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x559ea9cb2e98 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x559ea9cb2fc8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x559ea9cb3ab8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x559ea9cb3088 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x559ea9cb3108 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x559ea9cb3168 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x559ea9cb31c8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x559ea9cb3318 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x559ea9cb3228 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x559ea9cb34e8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x559ea9cb33d0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x559ea9cb3450 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x559ea9cb36c0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x559ea9cb35a8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x559ea9cb3628 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x559ea9cb3898 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x559ea9cb3780 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x559ea9cb3800 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x559ea9cb3a68 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9d68648 prev 0x559ea9d398e8 <../elements/ip/iprewriterbase.hh:81:1, line:182:1> line:81:7 referenced class IPRewriterBase definition
|-DefinitionData polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x559ea9d68780 <col:1, col:7> col:7 implicit referenced class IPRewriterBase
|-AccessSpecDecl 0x559ea9d68810 <col:41, col:47> col:41 public
|-TypedefDecl 0x559ea9d68970 <line:83:5, col:44> col:44 referenced Map 'HashContainer<IPRewriterEntry>':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x559ea9d688d0 'HashContainer<IPRewriterEntry>' sugar HashContainer
|   |-TemplateArgument type 'IPRewriterEntry'
|   `-RecordType 0x559ea9d38460 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x559ea9d38360 'HashContainer'
|-EnumDecl 0x559ea9d689c8 <line:84:5, line:86:5> line:84:5
| |-EnumConstantDecl 0x559ea9d68ae8 <line:85:2, col:13> col:2 rw_drop 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
| | `-ConstantExpr 0x559ea9d68ac8 <col:12, col:13> 'int' Int: -1
| |   `-UnaryOperator 0x559ea9d68ab0 <col:12, col:13> 'int' prefix '-'
| |     `-IntegerLiteral 0x559ea9d68a90 <col:13> 'int' 1
| `-EnumConstantDecl 0x559ea9d68b90 <col:16, col:29> col:16 rw_addmap 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
|   `-ConstantExpr 0x559ea9d68b70 <col:28, col:29> 'int' Int: -2
|     `-UnaryOperator 0x559ea9d68b58 <col:28, col:29> 'int' prefix '-'
|       `-IntegerLiteral 0x559ea9d68b38 <col:29> 'int' 2
|-CXXConstructorDecl 0x559ea9d68c18 <line:88:5, col:20> col:5 IPRewriterBase 'void ()'
|-CXXDestructorDecl 0x559ea9d68d08 <line:89:5, col:21> col:5 ~IPRewriterBase 'void ()' noexcept-unevaluated 0x559ea9d68d08
| `-Overrides: [ 0x559ea9c8dbe8 Element::~Element 'void ()' ]
|-EnumDecl 0x559ea9d68df0 <line:91:5, line:96:5> line:91:10 ConfigurePhase
| |-EnumConstantDecl 0x559ea9d68ef0 <line:92:2, col:29> col:2 CONFIGURE_PHASE_PATTERNS 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x559ea9d691a0 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9d68ed0 <col:29> 'Element::ConfigurePhase' Int: 20
| |     `-DeclRefExpr 0x559ea9d68eb0 <col:29> 'Element::ConfigurePhase' EnumConstant 0x559ea9c90230 'CONFIGURE_PHASE_INFO' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x559ea9d68f80 <line:93:2, col:29> col:2 referenced CONFIGURE_PHASE_REWRITER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x559ea9d691b8 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9d68f60 <col:29> 'Element::ConfigurePhase' Int: 100
| |     `-DeclRefExpr 0x559ea9d68f40 <col:29> 'Element::ConfigurePhase' EnumConstant 0x559ea9c90350 'CONFIGURE_PHASE_DEFAULT' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x559ea9d69068 <line:94:2, col:54> col:2 CONFIGURE_PHASE_MAPPER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x559ea9d691d0 <col:27, col:54> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9d69048 <col:27, col:54> 'int' Int: 99
| |     `-BinaryOperator 0x559ea9d69028 <col:27, col:54> 'int' '-'
| |       |-ImplicitCastExpr 0x559ea9d69010 <col:27> 'int' <IntegralCast>
| |       | `-DeclRefExpr 0x559ea9d68fd0 <col:27> 'Element::ConfigurePhase' EnumConstant 0x559ea9d68f80 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
| |       `-IntegerLiteral 0x559ea9d68ff0 <col:54> 'int' 1
| `-EnumConstantDecl 0x559ea9d69150 <line:95:2, col:52> col:2 CONFIGURE_PHASE_USER 'IPRewriterBase::ConfigurePhase'
|   `-ImplicitCastExpr 0x559ea9d691e8 <col:25, col:52> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9d69130 <col:25, col:52> 'int' Int: 101
|       `-BinaryOperator 0x559ea9d69110 <col:25, col:52> 'int' '+'
|         |-ImplicitCastExpr 0x559ea9d690f8 <col:25> 'int' <IntegralCast>
|         | `-DeclRefExpr 0x559ea9d690b8 <col:25> 'Element::ConfigurePhase' EnumConstant 0x559ea9d68f80 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|         `-IntegerLiteral 0x559ea9d690d8 <col:52> 'int' 1
|-CXXMethodDecl 0x559ea9d69250 <line:98:5, col:54> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x559ea9c8f110 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x559ea9d81b10 <col:36, col:54>
|   `-ReturnStmt 0x559ea9d81b00 <col:38, col:45>
|     `-ImplicitCastExpr 0x559ea9d81ae8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x559ea9d81ac8 <col:45> 'const char [6]' lvalue "1-/1-"
|-CXXMethodDecl 0x559ea9d69318 <line:99:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x559ea9c8f518 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x559ea9d81b70 <col:36, col:51>
|   `-ReturnStmt 0x559ea9d81b60 <col:38, col:45>
|     `-ImplicitCastExpr 0x559ea9d81b48 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x559ea9d81b28 <col:45> 'const char []' lvalue Var 0x559ea9c8f660 'PUSH' 'const char []'
|-CXXMethodDecl 0x559ea9d693e0 <line:101:5, col:68> col:9 configure_phase 'int () const'
| |-Overrides: [ 0x559ea9c904d0 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x559ea9d81bd0 <col:33, col:68>
|   `-ReturnStmt 0x559ea9d81bc0 <col:35, col:42>
|     `-ImplicitCastExpr 0x559ea9d81ba8 <col:42> 'int' <IntegralCast>
|       `-DeclRefExpr 0x559ea9d81b88 <col:42> 'IPRewriterBase::ConfigurePhase' EnumConstant 0x559ea9d68f80 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|-CXXMethodDecl 0x559ea9d696b0 <line:102:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x559ea9c90910 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x559ea9d69560 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x559ea9d695d8 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9d69808 <line:103:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x559ea9c90b60 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x559ea9d69770 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9d69950 <line:104:5, col:54> col:10 add_rewriter_handlers 'void (bool)'
| `-ParmVarDecl 0x559ea9d698c0 <col:32, col:37> col:37 writable_patterns 'bool'
|-CXXMethodDecl 0x559ea9d69a98 <line:105:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x559ea9c91378 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x559ea9d69a08 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x559ea9d69b88 <line:107:5, line:109:5> line:107:27 flow_heap 'const IPRewriterHeap *() const'
| `-CompoundStmt 0x559ea9d81c68 <col:45, line:109:5>
|   `-ReturnStmt 0x559ea9d81c58 <line:108:2, col:9>
|     `-ImplicitCastExpr 0x559ea9d81c40 <col:9> 'const IPRewriterHeap *' <NoOp>
|       `-ImplicitCastExpr 0x559ea9d81c28 <col:9> 'IPRewriterHeap *' <LValueToRValue>
|         `-MemberExpr 0x559ea9d81bf8 <col:9> 'IPRewriterHeap *const' lvalue ->_heap 0x559ea9d7ee30
|           `-CXXThisExpr 0x559ea9d81be8 <col:9> 'const IPRewriterBase *' implicit this
|-CXXMethodDecl 0x559ea9d69d08 <line:110:5, line:112:5> line:110:21 reply_element 'IPRewriterBase *(int) const'
| |-ParmVarDecl 0x559ea9d69c40 <col:35, col:39> col:39 used input 'int'
| `-CompoundStmt 0x559ea9d81e40 <col:52, line:112:5>
|   `-ReturnStmt 0x559ea9d81e30 <line:111:2, col:29>
|     `-ImplicitCastExpr 0x559ea9d81e18 <col:9, col:29> 'IPRewriterBase *' <LValueToRValue>
|       `-MemberExpr 0x559ea9d81de8 <col:9, col:29> 'IPRewriterBase *const' lvalue .reply_element 0x559ea9d54e10
|         `-CXXOperatorCallExpr 0x559ea9d81db0 <col:9, col:27> 'const IPRewriterInput':'const IPRewriterInput' lvalue
|           |-ImplicitCastExpr 0x559ea9d81d98 <col:21, col:27> 'const IPRewriterInput &(*)(Vector::size_type) const' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x559ea9d81d20 <col:21, col:27> 'const IPRewriterInput &(Vector::size_type) const' lvalue CXXMethod 0x559ea9d7c738 'operator[]' 'const IPRewriterInput &(Vector::size_type) const'
|           |-MemberExpr 0x559ea9d81c90 <col:9> 'const Vector<IPRewriterInput>':'const Vector<IPRewriterInput>' lvalue ->_input_specs 0x559ea9d7edd0
|           | `-CXXThisExpr 0x559ea9d81c80 <col:9> 'const IPRewriterBase *' implicit this
|           `-ImplicitCastExpr 0x559ea9d81d08 <col:22> 'int' <LValueToRValue>
|             `-DeclRefExpr 0x559ea9d81cc0 <col:22> 'int' lvalue ParmVar 0x559ea9d69c40 'input' 'int'
|-CXXMethodDecl 0x559ea9d6a040 <line:113:5, line:115:5> line:113:45 get_map 'HashContainer<IPRewriterEntry> *(int)' virtual
| |-ParmVarDecl 0x559ea9d69ec8 <col:53, col:57> col:57 used mapid 'int'
| `-CompoundStmt 0x559ea9d821b0 <col:64, line:115:5>
|   `-ReturnStmt 0x559ea9d821a0 <line:114:2, col:84>
|     `-ConditionalOperator 0x559ea9d82170 <col:9, col:84> 'IPRewriterBase::Map *'
|       |-ImplicitCastExpr 0x559ea9d82140 <col:9, col:72> 'bool' <IntegralToBoolean>
|       | `-CallExpr 0x559ea9d82068 <col:9, col:72> 'long'
|       |   |-ImplicitCastExpr 0x559ea9d82050 <col:9> 'long (*)(long, long) noexcept' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x559ea9d81e58 <col:9> '<builtin fn type>' Function 0x559ea9a4ea68 '__builtin_expect' 'long (long, long) noexcept'
|       |   |-ImplicitCastExpr 0x559ea9d82098 <col:26, col:68> 'long' <IntegralCast>
|       |   | `-UnaryOperator 0x559ea9d82018 <col:26, col:68> 'bool' prefix '!' cannot overflow
|       |   |   `-UnaryOperator 0x559ea9d82000 <col:27, col:68> 'bool' prefix '!' cannot overflow
|       |   |     `-ParenExpr 0x559ea9d81fe0 <col:28, col:68> 'bool'
|       |   |       `-BinaryOperator 0x559ea9d81fc0 <col:29, col:55> 'bool' '=='
|       |   |         |-ImplicitCastExpr 0x559ea9d81f90 <col:29> 'int' <LValueToRValue>
|       |   |         | `-DeclRefExpr 0x559ea9d81e78 <col:29> 'int' lvalue ParmVar 0x559ea9d69ec8 'mapid' 'int'
|       |   |         `-ImplicitCastExpr 0x559ea9d81fa8 <col:38, col:55> 'int' <IntegralCast>
|       |   |           `-DeclRefExpr 0x559ea9d81ed0 <col:38, col:55> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x559ea9d55450 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|       |   `-ImplicitCastExpr 0x559ea9d820b0 <col:71> 'long' <IntegralCast>
|       |     `-IntegerLiteral 0x559ea9d82030 <col:71> 'int' 1
|       |-UnaryOperator 0x559ea9d82108 <col:76, col:77> 'IPRewriterBase::Map *' prefix '&' cannot overflow
|       | `-MemberExpr 0x559ea9d820d8 <col:77> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_map 0x559ea9d725e8
|       |   `-CXXThisExpr 0x559ea9d820c8 <col:77> 'IPRewriterBase *' implicit this
|       `-ImplicitCastExpr 0x559ea9d82158 <col:84> 'IPRewriterBase::Map *' <NullToPointer>
|         `-IntegerLiteral 0x559ea9d82120 <col:84> 'int' 0
|-EnumDecl 0x559ea9d6a0e8 <line:117:5, line:119:5> line:117:5
| |-EnumConstantDecl 0x559ea9d6a208 <line:118:2, col:21> col:2 get_entry_check 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
| | `-ConstantExpr 0x559ea9d6a1e8 <col:20, col:21> 'int' Int: -1
| |   `-UnaryOperator 0x559ea9d6a1d0 <col:20, col:21> 'int' prefix '-'
| |     `-IntegerLiteral 0x559ea9d6a1b0 <col:21> 'int' 1
| `-EnumConstantDecl 0x559ea9d6a2b0 <col:24, col:43> col:24 get_entry_reply 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
|   `-ConstantExpr 0x559ea9d6a290 <col:42, col:43> 'int' Int: -2
|     `-UnaryOperator 0x559ea9d6a278 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x559ea9d6a258 <col:43> 'int' 2
|-CXXMethodDecl 0x559ea9d6a4f8 <line:120:5, line:121:21> line:120:30 get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)' virtual
| |-ParmVarDecl 0x559ea9d6a318 <col:40, col:44> col:44 ip_p 'int'
| |-ParmVarDecl 0x559ea9d6a390 <col:50, col:66> col:66 flowid 'const IPFlowID &'
| `-ParmVarDecl 0x559ea9d6a410 <line:121:12, col:16> col:16 input 'int'
|-CXXMethodDecl 0x559ea9d6a828 <line:122:5, line:124:24> line:122:30 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' virtual pure
| |-ParmVarDecl 0x559ea9d6a5c8 <col:39, col:43> col:43 ip_p 'int'
| |-ParmVarDecl 0x559ea9d6a640 <col:49, col:65> col:65 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x559ea9d6a6b8 <line:123:11, col:27> col:27 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x559ea9d6a738 <line:124:11, col:15> col:15 input 'int'
|-CXXMethodDecl 0x559ea9d6a988 <line:125:5, col:55> col:18 destroy_flow 'void (IPRewriterFlow *)' virtual pure
| `-ParmVarDecl 0x559ea9d6a8f8 <col:31, col:47> col:47 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x559ea9d6ab38 <line:126:5, line:128:5> line:126:29 best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' virtual
| |-ParmVarDecl 0x559ea9d6aa40 <col:48, col:70> col:70 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x559ea9d82400 <col:76, line:128:5>
|   `-ReturnStmt 0x559ea9d823f0 <line:127:2, col:52>
|     `-BinaryOperator 0x559ea9d823d0 <col:9, col:52> 'unsigned int' '-'
|       |-BinaryOperator 0x559ea9d82300 <col:9, col:37> 'unsigned int' '+'
|       | |-CXXMemberCallExpr 0x559ea9d82230 <col:9, col:22> 'click_jiffies_t':'unsigned int'
|       | | `-MemberExpr 0x559ea9d82200 <col:9, col:15> '<bound member function type>' ->expiry 0x559ea9d3ce20
|       | |   `-ImplicitCastExpr 0x559ea9d821e8 <col:9> 'const IPRewriterFlow *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x559ea9d821c8 <col:9> 'const IPRewriterFlow *' lvalue ParmVar 0x559ea9d6aa40 'flow' 'const IPRewriterFlow *'
|       | `-ImplicitCastExpr 0x559ea9d822e8 <col:26, col:37> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x559ea9d822c8 <col:26, col:37> 'uint32_t':'unsigned int' lvalue
|       |     |-ImplicitCastExpr 0x559ea9d822b0 <col:26> 'uint32_t *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x559ea9d82260 <col:26> 'uint32_t [2]' lvalue ->_timeouts 0x559ea9d7ef18
|       |     |   `-CXXThisExpr 0x559ea9d82250 <col:26> 'IPRewriterBase *' implicit this
|       |     `-IntegerLiteral 0x559ea9d82290 <col:36> 'int' 0
|       `-ImplicitCastExpr 0x559ea9d823b8 <col:41, col:52> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-ArraySubscriptExpr 0x559ea9d82398 <col:41, col:52> 'uint32_t':'unsigned int' lvalue
|           |-ImplicitCastExpr 0x559ea9d82380 <col:41> 'uint32_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x559ea9d82330 <col:41> 'uint32_t [2]' lvalue ->_timeouts 0x559ea9d7ef18
|           |   `-CXXThisExpr 0x559ea9d82320 <col:41> 'IPRewriterBase *' implicit this
|           `-IntegerLiteral 0x559ea9d82360 <col:51> 'int' 1
|-CXXMethodDecl 0x559ea9d6ad18 <line:130:5, col:43> col:9 llrpc 'int (unsigned int, void *)'
| |-Overrides: [ 0x559ea9c9a6c0 Element::llrpc 'int (unsigned int, void *)' ]
| |-ParmVarDecl 0x559ea9d6abf8 <col:15, col:24> col:24 command 'unsigned int'
| `-ParmVarDecl 0x559ea9d6ac78 <col:33, col:39> col:39 data 'void *'
|-AccessSpecDecl 0x559ea9d6adc8 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x559ea9d725e8 <line:134:5, col:9> col:9 referenced _map 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FieldDecl 0x559ea9d7edd0 <line:136:5, col:29> col:29 referenced _input_specs 'Vector<IPRewriterInput>':'Vector<IPRewriterInput>'
|-FieldDecl 0x559ea9d7ee30 <line:138:5, col:21> col:21 referenced _heap 'IPRewriterHeap *'
|-FieldDecl 0x559ea9d7ef18 <line:139:5, col:25> col:14 referenced _timeouts 'uint32_t [2]'
|-FieldDecl 0x559ea9d7ef78 <line:140:5, col:14> col:14 _gc_interval_sec 'uint32_t':'unsigned int'
|-FieldDecl 0x559ea9d7efd8 <line:141:5, col:11> col:11 _gc_timer 'Timer'
|-EnumDecl 0x559ea9d7f028 <line:143:5, line:147:5> line:143:5
| |-EnumConstantDecl 0x559ea9d7f130 <line:144:2, col:20> col:2 default_timeout 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x559ea9d7f2e0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9d7f110 <col:20> 'int' Int: 300
| |     `-IntegerLiteral 0x559ea9d7f0f0 <col:20> 'int' 300
| |-EnumConstantDecl 0x559ea9d7f1c0 <line:145:2, col:22> col:2 default_guarantee 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x559ea9d7f2f8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9d7f1a0 <col:22> 'int' Int: 5
| |     `-IntegerLiteral 0x559ea9d7f180 <col:22> 'int' 5
| `-EnumConstantDecl 0x559ea9d7f290 <line:146:2, col:29> col:2 default_gc_interval 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
|   `-ImplicitCastExpr 0x559ea9d7f310 <col:24, col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9d7f270 <col:24, col:29> 'int' Int: 900
|       `-BinaryOperator 0x559ea9d7f250 <col:24, col:29> 'int' '*'
|         |-IntegerLiteral 0x559ea9d7f210 <col:24> 'int' 60
|         `-IntegerLiteral 0x559ea9d7f230 <col:29> 'int' 15
|-CXXMethodDecl 0x559ea9d7f478 <line:149:5, line:151:5> line:149:21 relevant_timeout 'uint32_t (const uint32_t *)' static
| |-ParmVarDecl 0x559ea9d7f388 <col:38, col:63> col:53 used timeouts 'const uint32_t *':'const uint32_t *'
| `-CompoundStmt 0x559ea9d82608 <col:66, line:151:5>
|   `-ReturnStmt 0x559ea9d825f8 <line:150:2, col:47>
|     `-ImplicitCastExpr 0x559ea9d825e0 <col:9, col:47> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-ConditionalOperator 0x559ea9d825b0 <col:9, col:47> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x559ea9d82598 <col:9, col:19> 'bool' <IntegralToBoolean>
|         | `-ImplicitCastExpr 0x559ea9d82580 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x559ea9d82470 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |     |-ImplicitCastExpr 0x559ea9d82458 <col:9> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         |     | `-DeclRefExpr 0x559ea9d82418 <col:9> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x559ea9d7f388 'timeouts' 'const uint32_t *':'const uint32_t *'
|         |     `-IntegerLiteral 0x559ea9d82438 <col:18> 'int' 1
|         |-ArraySubscriptExpr 0x559ea9d824e8 <col:23, col:33> 'const uint32_t':'const unsigned int' lvalue
|         | |-ImplicitCastExpr 0x559ea9d824d0 <col:23> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         | | `-DeclRefExpr 0x559ea9d82490 <col:23> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x559ea9d7f388 'timeouts' 'const uint32_t *':'const uint32_t *'
|         | `-IntegerLiteral 0x559ea9d824b0 <col:32> 'int' 1
|         `-ArraySubscriptExpr 0x559ea9d82560 <col:37, col:47> 'const uint32_t':'const unsigned int' lvalue
|           |-ImplicitCastExpr 0x559ea9d82548 <col:37> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|           | `-DeclRefExpr 0x559ea9d82508 <col:37> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x559ea9d7f388 'timeouts' 'const uint32_t *':'const uint32_t *'
|           `-IntegerLiteral 0x559ea9d82528 <col:46> 'int' 0
|-CXXMethodDecl 0x559ea9d7f838 <line:153:5, line:154:37> line:153:22 store_flow 'IPRewriterEntry *(IPRewriterFlow *, int, IPRewriterBase::Map &, IPRewriterBase::Map *)'
| |-ParmVarDecl 0x559ea9d7f530 <col:33, col:49> col:49 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x559ea9d7f5b0 <col:55, col:59> col:59 input 'int'
| |-ParmVarDecl 0x559ea9d7f658 <line:154:5, col:10> col:10 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x559ea9d7f6f8 <col:15, col:36> col:20 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x559ea9d81a78 <col:36> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x559ea9d81a58 <col:36> 'int' 0
|-CXXMethodDecl 0x559ea9d7fb18 <line:155:5, line:156:39> line:155:17 used unmap_flow 'void (IPRewriterFlow *, IPRewriterBase::Map &, IPRewriterBase::Map *)' inline
| |-ParmVarDecl 0x559ea9d7f908 <col:28, col:44> col:44 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x559ea9d7f980 <line:156:7, col:12> col:12 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x559ea9d7f9f8 <col:17, col:38> col:22 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x559ea9d81ab0 <col:38> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x559ea9d81a90 <col:38> 'int' 0
|-CXXMethodDecl 0x559ea9d7fcf8 <line:158:5, col:56> col:17 gc_timer_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x559ea9d7fbe0 <col:31, col:38> col:38 t 'Timer *'
| `-ParmVarDecl 0x559ea9d7fc60 <col:41, col:47> col:47 user_data 'void *'
|-CXXMethodDecl 0x559ea9d80020 <line:160:5, line:161:41> line:160:9 parse_input_spec 'int (const String &, IPRewriterInput &, int, ErrorHandler *)'
| |-ParmVarDecl 0x559ea9d7fdb8 <col:26, col:40> col:40 str 'const String &'
| |-ParmVarDecl 0x559ea9d7fe30 <col:45, col:62> col:62 is 'IPRewriterInput &'
| |-ParmVarDecl 0x559ea9d7feb0 <line:161:5, col:9> col:9 input_number 'int'
| `-ParmVarDecl 0x559ea9d7ff28 <col:23, col:37> col:37 errh 'ErrorHandler *'
|-EnumDecl 0x559ea9d800e0 <line:163:5, line:166:5> line:163:5
| |-EnumConstantDecl 0x559ea9d801f8 <line:164:2, col:17> col:2 h_nmappings 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x559ea9d801d8 <col:16, col:17> 'int' Int: -1
| |   `-UnaryOperator 0x559ea9d801c0 <col:16, col:17> 'int' prefix '-'
| |     `-IntegerLiteral 0x559ea9d801a0 <col:17> 'int' 1
| |-EnumConstantDecl 0x559ea9d802a0 <col:20, col:42> col:20 h_mapping_failures 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x559ea9d80280 <col:41, col:42> 'int' Int: -2
| |   `-UnaryOperator 0x559ea9d80268 <col:41, col:42> 'int' prefix '-'
| |     `-IntegerLiteral 0x559ea9d80248 <col:42> 'int' 2
| |-EnumConstantDecl 0x559ea9d80348 <col:45, col:59> col:45 h_patterns 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x559ea9d80328 <col:58, col:59> 'int' Int: -3
| |   `-UnaryOperator 0x559ea9d80310 <col:58, col:59> 'int' prefix '-'
| |     `-IntegerLiteral 0x559ea9d802f0 <col:59> 'int' 3
| |-EnumConstantDecl 0x559ea9d803f0 <line:165:2, col:12> col:2 h_size 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x559ea9d803d0 <col:11, col:12> 'int' Int: -4
| |   `-UnaryOperator 0x559ea9d803b8 <col:11, col:12> 'int' prefix '-'
| |     `-IntegerLiteral 0x559ea9d80398 <col:12> 'int' 4
| |-EnumConstantDecl 0x559ea9d80498 <col:15, col:29> col:15 h_capacity 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x559ea9d80478 <col:28, col:29> 'int' Int: -5
| |   `-UnaryOperator 0x559ea9d80460 <col:28, col:29> 'int' prefix '-'
| |     `-IntegerLiteral 0x559ea9d80440 <col:29> 'int' 5
| `-EnumConstantDecl 0x559ea9d80540 <col:32, col:43> col:32 h_clear 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
|   `-ConstantExpr 0x559ea9d80520 <col:42, col:43> 'int' Int: -6
|     `-UnaryOperator 0x559ea9d80508 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x559ea9d804e8 <col:43> 'int' 6
|-CXXMethodDecl 0x559ea9d806b8 <line:167:5, col:59> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x559ea9d805a0 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x559ea9d80620 <col:44, col:50> col:50 user_data 'void *'
|-CXXMethodDecl 0x559ea9d80998 <line:168:5, col:96> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x559ea9d80778 <col:30, col:44> col:44 str 'const String &'
| |-ParmVarDecl 0x559ea9d807f0 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x559ea9d80870 <col:61, col:67> col:67 user_data 'void *'
| `-ParmVarDecl 0x559ea9d808e8 <col:78, col:92> col:92 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9d80c88 <line:169:5, col:104> col:16 pattern_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x559ea9d80a68 <col:38, col:52> col:52 str 'const String &'
| |-ParmVarDecl 0x559ea9d80ae0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x559ea9d80b60 <col:69, col:75> col:75 user_data 'void *'
| `-ParmVarDecl 0x559ea9d80bd8 <col:86, col:100> col:100 errh 'ErrorHandler *'
|-FriendDecl 0x559ea9d81128 <line:171:5, line:172:52> line:171:33
| `-CXXMethodDecl 0x559ea9d80f98 parent 0x559ea9d54840 prev 0x559ea9d557e0 <col:5, line:172:52> line:171:33 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
|   |-ParmVarDecl 0x559ea9d80d78 <col:48, col:64> col:64 flowid 'const IPFlowID &'
|   |-ParmVarDecl 0x559ea9d80df0 <line:172:4, col:14> col:14 rewritten_flowid 'IPFlowID &'
|   |-ParmVarDecl 0x559ea9d80e68 <col:32, col:40> col:40 p 'Packet *'
|   |-ParmVarDecl 0x559ea9d80ee8 <col:43, col:47> col:47 mapid 'int' cinit
|   | `-ImplicitCastExpr 0x559ea9d55958 <line:39:33> 'int' <IntegralCast>
|   |   `-DeclRefExpr 0x559ea9d55938 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x559ea9d55450 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   |-NoInlineAttr 0x559ea9d810d8 <line:37:20> Inherited
|   `-OptimizeNoneAttr 0x559ea9d81100 <col:30> Inherited
|-AccessSpecDecl 0x559ea9d81168 <line:174:3, col:10> col:3 private
|-CXXMethodDecl 0x559ea9d81268 <line:176:5, col:54> col:10 shift_heap_best_effort 'void (click_jiffies_t)'
| `-ParmVarDecl 0x559ea9d811a0 <col:33, col:49> col:49 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x559ea9d814a8 <line:177:5, col:78> col:10 shrink_heap_for_new_flow 'bool (IPRewriterFlow *, click_jiffies_t)'
| |-ParmVarDecl 0x559ea9d81320 <col:35, col:51> col:51 flow 'IPRewriterFlow *'
| `-ParmVarDecl 0x559ea9d81398 <col:57, col:73> col:73 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x559ea9d815f8 <line:178:5, col:36> col:10 shrink_heap 'void (bool)'
| `-ParmVarDecl 0x559ea9d81568 <col:22, col:27> col:27 clear_all 'bool'
|-FriendDecl 0x559ea9d816c0 <line:180:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x559ea9d81728 <line:81:7> col:7 implicit IPRewriterBase 'void (const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x559ea9d81728
| `-ParmVarDecl 0x559ea9d81838 <col:7> col:7 'const IPRewriterBase &'
`-CXXMethodDecl 0x559ea9d818d8 <col:7> col:7 implicit operator= 'IPRewriterBase &(const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x559ea9d818d8
  `-ParmVarDecl 0x559ea9d819e8 <col:7> col:7 'const IPRewriterBase &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  NonVirtualBaseLLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterPattern
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   int _sport
         8 |   class IPAddress _daddr
         8 |     uint32_t _addr
        12 |   int _dport
        16 |   uint32_t _variation_top
        20 |   uint32_t _next_variation
        24 |   _Bool _is_napt
        25 |   _Bool _sequential
        26 |   _Bool _same_first
        28 |   int _refcount
           | [sizeof=32, dsize=32, align=4,
           |  nvsize=32, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9d363d0 <../elements/ip/iprwpattern.hh:12:1, line:68:1> line:12:7 class IPRewriterPattern definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9d364e8 <col:1, col:7> col:7 implicit referenced class IPRewriterPattern
|-AccessSpecDecl 0x559ea9d36578 <col:27, col:33> col:27 public
|-CXXConstructorDecl 0x559ea9d36ae8 <line:14:5, line:17:27> line:14:5 IPRewriterPattern 'void (const IPAddress &, int, const IPAddress &, int, bool, bool, bool, uint32_t)'
| |-ParmVarDecl 0x559ea9d365b0 <col:23, col:40> col:40 saddr 'const IPAddress &'
| |-ParmVarDecl 0x559ea9d36630 <col:47, col:51> col:51 sport 'int'
| |-ParmVarDecl 0x559ea9d366a8 <line:15:9, col:26> col:26 daddr 'const IPAddress &'
| |-ParmVarDecl 0x559ea9d36728 <col:33, col:37> col:37 dport 'int'
| |-ParmVarDecl 0x559ea9d367a0 <line:16:9, col:14> col:14 is_napt 'bool'
| |-ParmVarDecl 0x559ea9d36818 <col:23, col:28> col:28 sequential 'bool'
| |-ParmVarDecl 0x559ea9d36890 <col:40, col:45> col:45 same_first 'bool'
| `-ParmVarDecl 0x559ea9d36908 <line:17:9, col:18> col:18 variation 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9d36fc8 <line:18:5, line:19:45> line:18:17 parse 'bool (const Vector<String> &, IPRewriterPattern **, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x559ea9d36ce0 <col:23, col:45> col:45 words 'const Vector<String> &'
| |-ParmVarDecl 0x559ea9d36d90 <col:52, col:72> col:72 result 'IPRewriterPattern **'
| |-ParmVarDecl 0x559ea9d36e08 <line:19:9, col:18> col:18 context 'Element *'
| `-ParmVarDecl 0x559ea9d36e80 <col:27, col:41> col:41 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9d37948 <line:20:5, line:21:42> line:20:17 parse_ports 'bool (const Vector<String> &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x559ea9d37170 <col:29, col:51> col:51 words 'const Vector<String> &'
| |-ParmVarDecl 0x559ea9d37218 <col:58, col:75> col:75 input 'IPRewriterInput *'
| |-ParmVarDecl 0x559ea9d37290 <line:21:8, col:17> col:17 model 'Element *'
| `-ParmVarDecl 0x559ea9d37800 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9d37c78 <line:22:5, line:23:42> line:22:17 parse_with_ports 'bool (const String &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x559ea9d37a18 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x559ea9d37a90 <col:53, col:70> col:70 input 'IPRewriterInput *'
| |-ParmVarDecl 0x559ea9d37b08 <line:23:6, col:15> col:15 context 'Element *'
| `-ParmVarDecl 0x559ea9d37b80 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9d37d58 <line:25:5, line:27:5> line:25:10 use 'void ()'
| `-CompoundStmt 0x559ea9d390b0 <col:16, line:27:5>
|   `-UnaryOperator 0x559ea9d39098 <line:26:2, col:11> 'int' postfix '++'
|     `-MemberExpr 0x559ea9d39068 <col:2> 'int' lvalue ->_refcount 0x559ea9d38c98
|       `-CXXThisExpr 0x559ea9d39058 <col:2> 'IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x559ea9d37e18 <line:28:5, line:31:5> line:28:10 unuse 'void ()'
| `-CompoundStmt 0x559ea9d392a8 <col:18, line:31:5>
|   `-IfStmt 0x559ea9d39290 <line:29:2, line:30:13>
|     |-BinaryOperator 0x559ea9d39158 <line:29:6, col:21> 'bool' '<='
|     | |-ImplicitCastExpr 0x559ea9d39140 <col:6, col:8> 'int' <LValueToRValue>
|     | | `-UnaryOperator 0x559ea9d39108 <col:6, col:8> 'int' lvalue prefix '--'
|     | |   `-MemberExpr 0x559ea9d390d8 <col:8> 'int' lvalue ->_refcount 0x559ea9d38c98
|     | |     `-CXXThisExpr 0x559ea9d390c8 <col:8> 'IPRewriterPattern *' implicit this
|     | `-IntegerLiteral 0x559ea9d39120 <col:21> 'int' 0
|     `-CXXDeleteExpr 0x559ea9d39270 <line:30:6, col:13> 'void' Function 0x559ea98748a8 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x559ea9d39178 <col:13> 'IPRewriterPattern *' this
|-CXXConversionDecl 0x559ea9d37f18 <line:33:5, line:35:5> line:33:5 operator bool 'bool () const'
| `-CompoundStmt 0x559ea9d39590 <col:27, line:35:5>
|   `-ReturnStmt 0x559ea9d39580 <line:34:2, col:39>
|     `-BinaryOperator 0x559ea9d39560 <col:9, col:39> 'bool' '||'
|       |-BinaryOperator 0x559ea9d394d0 <col:9, col:29> 'bool' '||'
|       | |-BinaryOperator 0x559ea9d393f0 <col:9, col:19> 'bool' '||'
|       | | |-ImplicitCastExpr 0x559ea9d393a8 <col:9> 'bool' <IntegralToBoolean>
|       | | | `-ImplicitCastExpr 0x559ea9d39390 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | | |   `-CXXMemberCallExpr 0x559ea9d39370 <col:9> 'uint32_t':'unsigned int'
|       | | |     `-MemberExpr 0x559ea9d39340 <col:9> '<bound member function type>' .operator unsigned int 0x559ea9a90798
|       | | |       `-MemberExpr 0x559ea9d392d0 <col:9> 'const IPAddress' lvalue ->_saddr 0x559ea9d38920
|       | | |         `-CXXThisExpr 0x559ea9d392c0 <col:9> 'const IPRewriterPattern *' implicit this
|       | | `-ImplicitCastExpr 0x559ea9d393d8 <col:19> 'bool' <IntegralToBoolean>
|       | |   `-ImplicitCastExpr 0x559ea9d393c0 <col:19> 'int' <LValueToRValue>
|       | |     `-MemberExpr 0x559ea9d39310 <col:19> 'const int' lvalue ->_sport 0x559ea9d38988
|       | |       `-CXXThisExpr 0x559ea9d39300 <col:19> 'const IPRewriterPattern *' implicit this
|       | `-ImplicitCastExpr 0x559ea9d394b8 <col:29> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x559ea9d394a0 <col:29> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x559ea9d39480 <col:29> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x559ea9d39450 <col:29> '<bound member function type>' .operator unsigned int 0x559ea9a90798
|       |         `-MemberExpr 0x559ea9d39420 <col:29> 'const IPAddress' lvalue ->_daddr 0x559ea9d389e8
|       |           `-CXXThisExpr 0x559ea9d39410 <col:29> 'const IPRewriterPattern *' implicit this
|       `-ImplicitCastExpr 0x559ea9d39548 <col:39> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x559ea9d39530 <col:39> 'int' <LValueToRValue>
|           `-MemberExpr 0x559ea9d39500 <col:39> 'const int' lvalue ->_dport 0x559ea9d38a50
|             `-CXXThisExpr 0x559ea9d394f0 <col:39> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x559ea9d37fe8 <line:36:5, line:38:5> line:36:15 daddr 'IPAddress () const'
| `-CompoundStmt 0x559ea9d39628 <col:29, line:38:5>
|   `-ReturnStmt 0x559ea9d39618 <line:37:2, col:9>
|     `-CXXConstructExpr 0x559ea9d395e8 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x559ea9d395b8 <col:9> 'const IPAddress' lvalue ->_daddr 0x559ea9d389e8
|         `-CXXThisExpr 0x559ea9d395a8 <col:9> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x559ea9d386b0 <line:40:5, line:41:57> line:40:9 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, const HashContainer<IPRewriterEntry> &)'
| |-ParmVarDecl 0x559ea9d38098 <col:24, col:40> col:40 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x559ea9d38138 <col:48, col:58> col:58 rewritten_flowid 'IPFlowID &'
| `-ParmVarDecl 0x559ea9d38580 <line:41:10, col:48> col:48 reply_map 'const HashContainer<IPRewriterEntry> &'
|-CXXMethodDecl 0x559ea9d38788 <line:43:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x559ea9d38848 <line:45:5, line:47:5> line:45:21 get_flow_id 'IPFlowID () const' inline
| `-CompoundStmt 0x559ea9d398d0 <col:41, line:47:5>
|   `-ReturnStmt 0x559ea9d398c0 <line:46:9, col:55>
|     `-ExprWithCleanups 0x559ea9d398a8 <col:16, col:55> 'IPFlowID'
|       `-CXXConstructExpr 0x559ea9d39878 <col:16, col:55> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559ea9d39860 <col:16, col:55> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x559ea9d39810 <col:16, col:55> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x559ea9d39750 <col:25> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x559ea9d39660 <col:25> 'const IPAddress' lvalue ->_saddr 0x559ea9d38920
|             |   `-CXXThisExpr 0x559ea9d39650 <col:25> 'const IPRewriterPattern *' implicit this
|             |-ImplicitCastExpr 0x559ea9d39798 <col:33> 'uint16_t':'unsigned short' <IntegralCast>
|             | `-ImplicitCastExpr 0x559ea9d39780 <col:33> 'int' <LValueToRValue>
|             |   `-MemberExpr 0x559ea9d396a0 <col:33> 'const int' lvalue ->_sport 0x559ea9d38988
|             |     `-CXXThisExpr 0x559ea9d39690 <col:33> 'const IPRewriterPattern *' implicit this
|             |-CXXConstructExpr 0x559ea9d397b0 <col:41> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x559ea9d396e0 <col:41> 'const IPAddress' lvalue ->_daddr 0x559ea9d389e8
|             |   `-CXXThisExpr 0x559ea9d396d0 <col:41> 'const IPRewriterPattern *' implicit this
|             `-ImplicitCastExpr 0x559ea9d397f8 <col:49> 'uint16_t':'unsigned short' <IntegralCast>
|               `-ImplicitCastExpr 0x559ea9d397e0 <col:49> 'int' <LValueToRValue>
|                 `-MemberExpr 0x559ea9d39720 <col:49> 'const int' lvalue ->_dport 0x559ea9d38a50
|                   `-CXXThisExpr 0x559ea9d39710 <col:49> 'const IPRewriterPattern *' implicit this
|-AccessSpecDecl 0x559ea9d388e8 <line:49:1, col:8> col:1 private
|-FieldDecl 0x559ea9d38920 <line:51:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x559ea9d38988 <line:52:5, col:9> col:9 referenced _sport 'int'
|-FieldDecl 0x559ea9d389e8 <line:53:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x559ea9d38a50 <line:54:5, col:9> col:9 referenced _dport 'int'
|-FieldDecl 0x559ea9d38ab0 <line:56:5, col:14> col:14 _variation_top 'uint32_t':'unsigned int'
|-FieldDecl 0x559ea9d38b10 <line:57:5, col:14> col:14 _next_variation 'uint32_t':'unsigned int'
|-FieldDecl 0x559ea9d38b70 <line:59:5, col:10> col:10 _is_napt 'bool'
|-FieldDecl 0x559ea9d38bd0 <line:60:5, col:10> col:10 _sequential 'bool'
|-FieldDecl 0x559ea9d38c30 <line:61:5, col:10> col:10 _same_first 'bool'
|-FieldDecl 0x559ea9d38c98 <line:63:5, col:9> col:9 referenced _refcount 'int'
|-CXXConstructorDecl 0x559ea9d38de8 <line:65:5, col:47> col:5 IPRewriterPattern 'void (const IPRewriterPattern &)'
| `-ParmVarDecl 0x559ea9d38d28 <col:23, col:46> col:47 'const IPRewriterPattern &'
|-CXXMethodDecl 0x559ea9d38f98 <line:66:5, col:58> col:24 operator= 'IPRewriterPattern &(const IPRewriterPattern &)'
| `-ParmVarDecl 0x559ea9d38ea8 <col:34, col:57> col:58 'const IPRewriterPattern &'
`-CXXDestructorDecl 0x559ea9d39188 <line:12:7> col:7 implicit ~IPRewriterPattern 'void ()' inline default trivial noexcept-unevaluated 0x559ea9d39188

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPMapper
         0 |   (IPMapper vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9d82620 prev 0x559ea9d54700 <../elements/ip/iprewriterbase.hh:185:1, line:197:1> line:185:7 class IPMapper definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559ea9d82718 <col:1, col:7> col:7 implicit referenced class IPMapper
|-AccessSpecDecl 0x559ea9d827a8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x559ea9d82808 <line:187:5, col:18> col:5 IPMapper 'void ()'
| `-CompoundStmt 0x559ea9d83228 <col:16, col:18>
|-CXXDestructorDecl 0x559ea9d828f8 <line:188:5, col:27> col:13 ~IPMapper 'void () noexcept' virtual
| `-CompoundStmt 0x559ea9d83238 <col:25, col:27>
|-CXXMethodDecl 0x559ea9d82bc8 <line:190:5, line:191:24> line:190:18 notify_rewriter 'void (IPRewriterBase *, IPRewriterInput *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x559ea9d829f0 <col:34, col:50> col:50 user 'IPRewriterBase *'
| |-ParmVarDecl 0x559ea9d82a68 <col:56, col:73> col:73 input 'IPRewriterInput *'
| `-ParmVarDecl 0x559ea9d82ae0 <line:191:6, col:20> col:20 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9d82f80 <line:192:5, line:195:31> line:192:17 rewrite_flowid 'int (IPRewriterInput *, const IPFlowID &, IPFlowID &, Packet *, int)' virtual
| |-ParmVarDecl 0x559ea9d82c90 <col:32, col:49> col:49 input 'IPRewriterInput *'
| |-ParmVarDecl 0x559ea9d82d08 <line:193:11, col:27> col:27 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x559ea9d82d80 <line:194:11, col:21> col:21 rewritten_flowid 'IPFlowID &'
| |-ParmVarDecl 0x559ea9d82df8 <line:195:11, col:19> col:19 p 'Packet *'
| `-ParmVarDecl 0x559ea9d82e78 <col:22, col:26> col:26 mapid 'int'
`-CXXMethodDecl 0x559ea9d830a8 <line:185:7> col:7 implicit operator= 'IPMapper &(const IPMapper &)' inline default noexcept-unevaluated 0x559ea9d830a8
  `-ParmVarDecl 0x559ea9d831b8 <col:7> col:7 'const IPMapper &'

Layout: <CGRecordLayout
  LLVMType:%class.IPMapper = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.IPMapper = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9d54f88 <../elements/ip/iprewriterbase.hh:23:5, line:26:5> line:23:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x559ea9d550b8 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
|-FieldDecl 0x559ea9d55148 <line:25:2, col:12> col:12 mapper 'IPMapper *'
|-CXXConstructorDecl 0x559ea9d55c08 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x559ea9d56038 <col:5>
|-CXXConstructorDecl 0x559ea9d55d08 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x559ea9d55d08
| `-ParmVarDecl 0x559ea9d55e18 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
`-CXXConstructorDecl 0x559ea9d55eb8 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x559ea9d55eb8
  `-ParmVarDecl 0x559ea9d55fc8 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon.3 = type { %class.IPRewriterPattern* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9d54840 prev 0x559ea9d39ae0 <../elements/ip/iprewriterbase.hh:11:1, line:40:1> line:11:7 referenced class IPRewriterInput definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x559ea9d54938 <col:1, col:7> col:7 implicit referenced class IPRewriterInput
|-AccessSpecDecl 0x559ea9d549c8 <col:25, col:31> col:25 public
|-EnumDecl 0x559ea9d549f0 <line:12:5, line:14:5> line:12:5
| |-EnumConstantDecl 0x559ea9d54ab0 <line:13:2> col:2 referenced i_drop 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x559ea9d54b00 <col:10> col:10 i_nochange 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x559ea9d54b50 <col:22> col:22 i_keep 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x559ea9d54ba0 <col:30> col:30 i_pattern 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| `-EnumConstantDecl 0x559ea9d54bf0 <col:41> col:41 i_mapper 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
|-FieldDecl 0x559ea9d54c78 <line:15:5, col:21> col:21 owner 'IPRewriterBase *'
|-FieldDecl 0x559ea9d54ce0 <line:16:5, col:9> col:9 owner_input 'int'
|-FieldDecl 0x559ea9d54d48 <line:17:5, col:9> col:9 kind 'int'
|-FieldDecl 0x559ea9d54db0 <line:18:5, col:9> col:9 foutput 'int'
|-FieldDecl 0x559ea9d54e10 <line:19:5, col:21> col:21 referenced reply_element 'IPRewriterBase *'
|-FieldDecl 0x559ea9d54e78 <line:20:5, col:9> col:9 routput 'int'
|-FieldDecl 0x559ea9d54ed8 <line:21:5, col:14> col:14 count 'uint32_t':'unsigned int'
|-FieldDecl 0x559ea9d54f38 <line:22:5, col:14> col:14 failures 'uint32_t':'unsigned int'
|-CXXRecordDecl 0x559ea9d54f88 <line:23:5, line:26:5> line:23:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x559ea9d550b8 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
| |-FieldDecl 0x559ea9d55148 <line:25:2, col:12> col:12 mapper 'IPMapper *'
| |-CXXConstructorDecl 0x559ea9d55c08 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x559ea9d56038 <col:5>
| |-CXXConstructorDecl 0x559ea9d55d08 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x559ea9d55d08
| | `-ParmVarDecl 0x559ea9d55e18 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
| `-CXXConstructorDecl 0x559ea9d55eb8 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x559ea9d55eb8
|   `-ParmVarDecl 0x559ea9d55fc8 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'
|-FieldDecl 0x559ea9d55208 <col:5, line:26:7> col:7 referenced u 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
|-CXXConstructorDecl 0x559ea9d552a8 <line:28:5, line:31:5> line:28:5 IPRewriterInput 'void ()'
| |-CXXCtorInitializer Field 0x559ea9d54d48 'kind' 'int'
| | `-ImplicitCastExpr 0x559ea9d559b0 <line:29:9> 'int' <IntegralCast>
| |   `-DeclRefExpr 0x559ea9d55970 <col:9> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)' EnumConstant 0x559ea9d54ab0 'i_drop' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-CXXCtorInitializer Field 0x559ea9d54db0 'foutput' 'int'
| | `-UnaryOperator 0x559ea9d55a10 <col:26, col:27> 'int' prefix '-'
| |   `-IntegerLiteral 0x559ea9d559f0 <col:27> 'int' 1
| |-CXXCtorInitializer Field 0x559ea9d54e78 'routput' 'int'
| | `-UnaryOperator 0x559ea9d55a90 <col:39, col:40> 'int' prefix '-'
| |   `-IntegerLiteral 0x559ea9d55a70 <col:40> 'int' 1
| |-CXXCtorInitializer Field 0x559ea9d54ed8 'count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559ea9d55b30 <col:50> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559ea9d55af0 <col:50> 'int' 0
| |-CXXCtorInitializer Field 0x559ea9d54f38 'failures' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x559ea9d55bb0 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559ea9d55b70 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x559ea9d55208 'u' 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
| | `-CXXConstructExpr 0x559ea9d56048 <line:28:5> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' 'void () noexcept'
| `-CompoundStmt 0x559ea9d56190 <line:29:66, line:31:5>
|   `-BinaryOperator 0x559ea9d56170 <line:30:2, col:14> 'IPRewriterPattern *' lvalue '='
|     |-MemberExpr 0x559ea9d56108 <col:2, col:4> 'IPRewriterPattern *' lvalue .pattern 0x559ea9d550b8
|     | `-MemberExpr 0x559ea9d560d8 <col:2> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' lvalue ->u 0x559ea9d55208
|     |   `-CXXThisExpr 0x559ea9d560c8 <col:2> 'IPRewriterInput *' implicit this
|     `-ImplicitCastExpr 0x559ea9d56158 <col:14> 'IPRewriterPattern *' <NullToPointer>
|       `-IntegerLiteral 0x559ea9d56138 <col:14> 'int' 0
|-EnumDecl 0x559ea9d55350 <line:33:5, line:35:5> line:33:5
| |-EnumConstantDecl 0x559ea9d55450 <line:34:2, col:18> col:2 referenced mapid_default 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
| | `-ImplicitCastExpr 0x559ea9d55530 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9d55430 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x559ea9d55410 <col:18> 'int' 0
| `-EnumConstantDecl 0x559ea9d554e0 <col:21, col:44> col:21 mapid_iprewriter_udp 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   `-ImplicitCastExpr 0x559ea9d55548 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9d554c0 <col:44> 'int' Int: 1
|       `-IntegerLiteral 0x559ea9d554a0 <col:44> 'int' 1
`-CXXMethodDecl 0x559ea9d557e0 <line:37:5, line:39:46> line:37:44 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
  |-ParmVarDecl 0x559ea9d55570 <col:59, col:75> col:75 flowid 'const IPFlowID &'
  |-ParmVarDecl 0x559ea9d555e8 <line:38:10, col:20> col:20 rewritten_flowid 'IPFlowID &'
  |-ParmVarDecl 0x559ea9d55660 <line:39:10, col:18> col:18 p 'Packet *'
  |-ParmVarDecl 0x559ea9d556e0 <col:21, col:33> col:25 mapid 'int' cinit
  | `-ImplicitCastExpr 0x559ea9d55958 <col:33> 'int' <IntegralCast>
  |   `-DeclRefExpr 0x559ea9d55938 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x559ea9d55450 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
  |-NoInlineAttr 0x559ea9d558a0 <line:37:20>
  `-OptimizeNoneAttr 0x559ea9d558f8 <col:30>

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.3 }
  NonVirtualBaseLLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9d3c420 prev 0x559ea9d399a0 <../elements/ip/iprwmapping.hh:68:1, line:174:1> line:68:7 referenced class IPRewriterFlow definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9d3c518 <col:1, col:7> col:7 implicit referenced class IPRewriterFlow
|-AccessSpecDecl 0x559ea9d3c5a8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x559ea9d3c9c8 <line:70:5, line:72:61> line:70:5 used IPRewriterFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| |-ParmVarDecl 0x559ea9d3c5e0 <col:20, col:37> col:37 owner 'IPRewriterInput *'
| |-ParmVarDecl 0x559ea9d3c658 <col:44, col:60> col:60 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x559ea9d3c6d0 <line:71:6, col:22> col:22 rewritten_flowid 'const IPFlowID &'
| |-ParmVarDecl 0x559ea9d3c748 <line:72:6, col:14> col:14 ip_p 'uint8_t':'unsigned char'
| |-ParmVarDecl 0x559ea9d3c7c0 <col:20, col:25> col:25 guaranteed 'bool'
| `-ParmVarDecl 0x559ea9d3c838 <col:37, col:53> col:53 expiry_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x559ea9d3cba8 <line:74:5, line:76:5> line:74:22 used entry 'IPRewriterEntry &(bool)'
| |-ParmVarDecl 0x559ea9d3cab0 <col:28, col:33> col:33 used direction 'bool'
| `-CompoundStmt 0x559ea9d42380 <col:44, line:76:5>
|   `-ReturnStmt 0x559ea9d42370 <line:75:2, col:21>
|     `-ArraySubscriptExpr 0x559ea9d42350 <col:9, col:21> 'IPRewriterEntry' lvalue
|       |-ImplicitCastExpr 0x559ea9d42320 <col:9> 'IPRewriterEntry *' <ArrayToPointerDecay>
|       | `-MemberExpr 0x559ea9d422d0 <col:9> 'IPRewriterEntry [2]' lvalue ->_e 0x559ea9d3f178
|       |   `-CXXThisExpr 0x559ea9d422c0 <col:9> 'IPRewriterFlow *' implicit this
|       `-ImplicitCastExpr 0x559ea9d42338 <col:12> 'bool' <LValueToRValue>
|         `-DeclRefExpr 0x559ea9d42300 <col:12> 'bool' lvalue ParmVar 0x559ea9d3cab0 'direction' 'bool'
|-CXXMethodDecl 0x559ea9d3cd58 <line:77:5, line:79:5> line:77:28 entry 'const IPRewriterEntry &(bool) const'
| |-ParmVarDecl 0x559ea9d3cc60 <col:34, col:39> col:39 used direction 'bool'
| `-CompoundStmt 0x559ea9d42498 <col:56, line:79:5>
|   `-ReturnStmt 0x559ea9d42488 <line:78:2, col:21>
|     `-ArraySubscriptExpr 0x559ea9d42468 <col:9, col:21> 'const IPRewriterEntry' lvalue
|       |-ImplicitCastExpr 0x559ea9d42438 <col:9> 'const IPRewriterEntry *' <ArrayToPointerDecay>
|       | `-MemberExpr 0x559ea9d423a8 <col:9> 'IPRewriterEntry const[2]' lvalue ->_e 0x559ea9d3f178
|       |   `-CXXThisExpr 0x559ea9d42398 <col:9> 'const IPRewriterFlow *' implicit this
|       `-ImplicitCastExpr 0x559ea9d42450 <col:12> 'bool' <LValueToRValue>
|         `-DeclRefExpr 0x559ea9d423d8 <col:12> 'bool' lvalue ParmVar 0x559ea9d3cc60 'direction' 'bool'
|-CXXMethodDecl 0x559ea9d3ce20 <line:83:5, line:85:5> line:83:21 used expiry 'click_jiffies_t () const'
| `-CompoundStmt 0x559ea9d42518 <col:36, line:85:5>
|   `-ReturnStmt 0x559ea9d42508 <line:84:2, col:9>
|     `-ImplicitCastExpr 0x559ea9d424f0 <col:9> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x559ea9d424c0 <col:9> 'const click_jiffies_t':'const unsigned int' lvalue ->_expiry_j 0x559ea9d3f298
|         `-CXXThisExpr 0x559ea9d424b0 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x559ea9d3cfc8 <line:89:5, line:91:5> line:89:10 expired 'bool (click_jiffies_t) const'
| |-ParmVarDecl 0x559ea9d3ced0 <col:18, col:34> col:34 used now_j 'click_jiffies_t':'unsigned int'
| `-CompoundStmt 0x559ea9d42738 <col:47, line:91:5>
|   `-ReturnStmt 0x559ea9d42728 <line:90:2, col:67>
|     `-UnaryOperator 0x559ea9d42710 <col:9, col:67> 'bool' prefix '!' cannot overflow
|       `-ParenExpr 0x559ea9d426f0 <col:10, col:67> 'bool'
|         `-BinaryOperator 0x559ea9d426d0 <col:11, col:66> 'bool' '<'
|           |-CStyleCastExpr 0x559ea9d42688 <col:11, col:62> 'click_jiffies_difference_t':'int' <NoOp>
|           | `-ImplicitCastExpr 0x559ea9d42670 <col:40, col:62> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|           |   `-ParenExpr 0x559ea9d42650 <col:40, col:62> 'unsigned int'
|           |     `-BinaryOperator 0x559ea9d42600 <col:41, col:61> 'unsigned int' '-'
|           |       |-ImplicitCastExpr 0x559ea9d425d0 <col:41, col:47> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |       | `-ParenExpr 0x559ea9d42550 <col:41, col:47> 'click_jiffies_t':'unsigned int' lvalue
|           |       |   `-DeclRefExpr 0x559ea9d42530 <col:42> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x559ea9d3ced0 'now_j' 'click_jiffies_t':'unsigned int'
|           |       `-ImplicitCastExpr 0x559ea9d425e8 <col:51, col:61> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |         `-ParenExpr 0x559ea9d425b0 <col:51, col:61> 'const click_jiffies_t':'const unsigned int' lvalue
|           |           `-MemberExpr 0x559ea9d42580 <col:52> 'const click_jiffies_t':'const unsigned int' lvalue ->_expiry_j 0x559ea9d3f298
|           |             `-CXXThisExpr 0x559ea9d42570 <col:52> 'const IPRewriterFlow *' implicit this
|           `-IntegerLiteral 0x559ea9d426b0 <col:66> 'int' 0
|-CXXMethodDecl 0x559ea9d3d090 <line:94:5, line:96:5> line:94:10 guaranteed 'bool () const'
| `-CompoundStmt 0x559ea9d427b8 <col:29, line:96:5>
|   `-ReturnStmt 0x559ea9d427a8 <line:95:2, col:9>
|     `-ImplicitCastExpr 0x559ea9d42790 <col:9> 'bool' <LValueToRValue>
|       `-MemberExpr 0x559ea9d42760 <col:9> 'const bool' lvalue ->_guaranteed 0x559ea9d3f458
|         `-CXXThisExpr 0x559ea9d42750 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x559ea9d3d378 <line:102:5, line:103:34> line:102:10 used change_expiry 'void (IPRewriterHeap *, bool, click_jiffies_t)'
| |-ParmVarDecl 0x559ea9d3d168 <col:24, col:40> col:40 h 'IPRewriterHeap *'
| |-ParmVarDecl 0x559ea9d3d1e0 <col:43, col:48> col:48 guaranteed 'bool'
| `-ParmVarDecl 0x559ea9d3d258 <line:103:10, col:26> col:26 expiry_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x559ea9d3d718 <line:114:5, line:118:5> line:114:10 change_expiry_by_timeout 'void (IPRewriterHeap *, click_jiffies_t, const uint32_t *)'
| |-ParmVarDecl 0x559ea9d3d440 <col:35, col:51> col:51 used h 'IPRewriterHeap *'
| |-ParmVarDecl 0x559ea9d3d4b8 <col:54, col:70> col:70 used now_j 'click_jiffies_t':'unsigned int'
| |-ParmVarDecl 0x559ea9d3d5f0 <line:115:7, col:32> col:22 used timeouts 'const uint32_t *':'const uint32_t *'
| `-CompoundStmt 0x559ea9d42c58 <col:35, line:118:5>
|   |-DeclStmt 0x559ea9d42a28 <line:116:2, col:60>
|   | `-VarDecl 0x559ea9d427e0 <col:2, col:59> col:11 used timeout 'uint32_t':'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x559ea9d42a10 <col:21, col:59> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     `-ConditionalOperator 0x559ea9d429e0 <col:21, col:59> 'const uint32_t':'const unsigned int' lvalue
|   |       |-ImplicitCastExpr 0x559ea9d429c8 <col:21, col:31> 'bool' <IntegralToBoolean>
|   |       | `-ImplicitCastExpr 0x559ea9d429b0 <col:21, col:31> 'uint32_t':'unsigned int' <LValueToRValue>
|   |       |   `-ArraySubscriptExpr 0x559ea9d428a0 <col:21, col:31> 'const uint32_t':'const unsigned int' lvalue
|   |       |     |-ImplicitCastExpr 0x559ea9d42888 <col:21> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x559ea9d42848 <col:21> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x559ea9d3d5f0 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |       |     `-IntegerLiteral 0x559ea9d42868 <col:30> 'int' 1
|   |       |-ArraySubscriptExpr 0x559ea9d42918 <col:35, col:45> 'const uint32_t':'const unsigned int' lvalue
|   |       | |-ImplicitCastExpr 0x559ea9d42900 <col:35> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x559ea9d428c0 <col:35> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x559ea9d3d5f0 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |       | `-IntegerLiteral 0x559ea9d428e0 <col:44> 'int' 1
|   |       `-ArraySubscriptExpr 0x559ea9d42990 <col:49, col:59> 'const uint32_t':'const unsigned int' lvalue
|   |         |-ImplicitCastExpr 0x559ea9d42978 <col:49> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x559ea9d42938 <col:49> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x559ea9d3d5f0 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |         `-IntegerLiteral 0x559ea9d42958 <col:58> 'int' 0
|   `-CXXMemberCallExpr 0x559ea9d42c08 <line:117:2, col:49> 'void'
|     |-MemberExpr 0x559ea9d42a50 <col:2> '<bound member function type>' ->change_expiry 0x559ea9d3d378
|     | `-CXXThisExpr 0x559ea9d42a40 <col:2> 'IPRewriterFlow *' implicit this
|     |-ImplicitCastExpr 0x559ea9d42c40 <col:16> 'IPRewriterHeap *' <LValueToRValue>
|     | `-DeclRefExpr 0x559ea9d42a80 <col:16> 'IPRewriterHeap *' lvalue ParmVar 0x559ea9d3d440 'h' 'IPRewriterHeap *'
|     |-UnaryOperator 0x559ea9d42b60 <col:19, col:31> 'bool' prefix '!' cannot overflow
|     | `-UnaryOperator 0x559ea9d42b48 <col:20, col:31> 'bool' prefix '!' cannot overflow
|     |   `-ImplicitCastExpr 0x559ea9d42b30 <col:21, col:31> 'bool' <IntegralToBoolean>
|     |     `-ImplicitCastExpr 0x559ea9d42b18 <col:21, col:31> 'uint32_t':'unsigned int' <LValueToRValue>
|     |       `-ArraySubscriptExpr 0x559ea9d42af8 <col:21, col:31> 'const uint32_t':'const unsigned int' lvalue
|     |         |-ImplicitCastExpr 0x559ea9d42ae0 <col:21> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|     |         | `-DeclRefExpr 0x559ea9d42aa0 <col:21> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x559ea9d3d5f0 'timeouts' 'const uint32_t *':'const uint32_t *'
|     |         `-IntegerLiteral 0x559ea9d42ac0 <col:30> 'int' 1
|     `-BinaryOperator 0x559ea9d42be8 <col:34, col:42> 'unsigned int' '+'
|       |-ImplicitCastExpr 0x559ea9d42bb8 <col:34> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x559ea9d42b78 <col:34> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x559ea9d3d4b8 'now_j' 'click_jiffies_t':'unsigned int'
|       `-ImplicitCastExpr 0x559ea9d42bd0 <col:42> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559ea9d42b98 <col:42> 'uint32_t':'unsigned int' lvalue Var 0x559ea9d427e0 'timeout' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9d3d848 <line:120:5, line:122:5> line:120:13 ip_p 'uint8_t () const'
| `-CompoundStmt 0x559ea9d42ce0 <col:26, line:122:5>
|   `-ReturnStmt 0x559ea9d42cd0 <line:121:2, col:9>
|     `-ImplicitCastExpr 0x559ea9d42cb8 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-MemberExpr 0x559ea9d42c88 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_ip_p 0x559ea9d3f398
|         `-CXXThisExpr 0x559ea9d42c78 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x559ea9d3d938 <line:124:5, line:126:5> line:124:22 used owner 'IPRewriterInput *() const'
| `-CompoundStmt 0x559ea9d42d60 <col:36, line:126:5>
|   `-ReturnStmt 0x559ea9d42d50 <line:125:2, col:9>
|     `-ImplicitCastExpr 0x559ea9d42d38 <col:9> 'IPRewriterInput *' <LValueToRValue>
|       `-MemberExpr 0x559ea9d42d08 <col:9> 'IPRewriterInput *const' lvalue ->_owner 0x559ea9d3f518
|         `-CXXThisExpr 0x559ea9d42cf8 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x559ea9d3d9f8 <line:128:5, line:130:5> line:128:13 reply_anno 'uint8_t () const'
| `-CompoundStmt 0x559ea9d42de0 <col:32, line:130:5>
|   `-ReturnStmt 0x559ea9d42dd0 <line:129:2, col:9>
|     `-ImplicitCastExpr 0x559ea9d42db8 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-MemberExpr 0x559ea9d42d88 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_reply_anno 0x559ea9d3f4b8
|         `-CXXThisExpr 0x559ea9d42d78 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x559ea9d3db68 <line:131:5, line:133:5> line:131:10 set_reply_anno 'void (uint8_t)'
| |-ParmVarDecl 0x559ea9d3daa8 <col:25, col:33> col:33 used reply_anno 'uint8_t':'unsigned char'
| `-CompoundStmt 0x559ea9d42e90 <col:45, line:133:5>
|   `-BinaryOperator 0x559ea9d42e70 <line:132:2, col:16> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x559ea9d42e08 <col:2> 'uint8_t':'unsigned char' lvalue ->_reply_anno 0x559ea9d3f4b8
|     | `-CXXThisExpr 0x559ea9d42df8 <col:2> 'IPRewriterFlow *' implicit this
|     `-ImplicitCastExpr 0x559ea9d42e58 <col:16> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9d42e38 <col:16> 'uint8_t':'unsigned char' lvalue ParmVar 0x559ea9d3daa8 'reply_anno' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x559ea9d3de38 <line:135:5, line:136:27> line:135:24 used update_csum 'void (uint16_t *, bool, uint16_t)' static inline
| |-ParmVarDecl 0x559ea9d3dc20 <col:36, col:46> col:46 csum 'uint16_t *'
| |-ParmVarDecl 0x559ea9d3dc98 <col:52, col:57> col:57 direction 'bool'
| `-ParmVarDecl 0x559ea9d3dd10 <line:136:8, col:17> col:17 csum_delta 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x559ea9d3e0d8 <line:138:5, col:65> col:10 apply 'void (WritablePacket *, bool, unsigned int)'
| |-ParmVarDecl 0x559ea9d3df00 <col:16, col:32> col:32 p 'WritablePacket *'
| |-ParmVarDecl 0x559ea9d3df78 <col:35, col:40> col:40 direction 'bool'
| `-ParmVarDecl 0x559ea9d3dff8 <col:51, col:60> col:60 annos 'unsigned int'
|-CXXMethodDecl 0x559ea9d3e3b8 <line:140:5, col:72> col:10 unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x559ea9d3e1a0 <col:18, col:31> col:31 sa 'StringAccum &'
| |-ParmVarDecl 0x559ea9d3e218 <col:35, col:40> col:40 direction 'bool'
| `-ParmVarDecl 0x559ea9d3e290 <col:51, col:67> col:67 now 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x559ea9d3e610 <line:141:5, col:78> col:10 unparse_ports 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x559ea9d3e480 <col:24, col:37> col:37 sa 'StringAccum &'
| |-ParmVarDecl 0x559ea9d3e4f8 <col:41, col:46> col:46 direction 'bool'
| `-ParmVarDecl 0x559ea9d3e570 <col:57, col:73> col:73 now 'click_jiffies_t':'unsigned int'
|-CXXRecordDecl 0x559ea9d3e6c8 <line:143:5, line:147:5> line:143:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x559ea9d3e7e8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x559ea9d3ea08 <line:144:2, line:146:2> line:144:14 operator() 'bool (IPRewriterFlow *, IPRewriterFlow *)' inline
|   |-ParmVarDecl 0x559ea9d3e888 <col:25, col:41> col:41 used a 'IPRewriterFlow *'
|   |-ParmVarDecl 0x559ea9d3e900 <col:44, col:60> col:60 used b 'IPRewriterFlow *'
|   `-CompoundStmt 0x559ea9d43148 <col:63, line:146:2>
|     `-ReturnStmt 0x559ea9d43138 <line:145:6, col:78>
|       `-ParenExpr 0x559ea9d43118 <col:13, col:78> 'bool'
|         `-BinaryOperator 0x559ea9d430f8 <col:14, col:77> 'bool' '<'
|           |-CStyleCastExpr 0x559ea9d430b0 <col:14, col:73> 'click_jiffies_difference_t':'int' <NoOp>
|           | `-ImplicitCastExpr 0x559ea9d43098 <col:43, col:73> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|           |   `-ParenExpr 0x559ea9d43078 <col:43, col:73> 'unsigned int'
|           |     `-BinaryOperator 0x559ea9d43028 <col:44, col:72> 'unsigned int' '-'
|           |       |-ParenExpr 0x559ea9d42f48 <col:44, col:56> 'click_jiffies_t':'unsigned int'
|           |       | `-CXXMemberCallExpr 0x559ea9d42f10 <col:45, col:55> 'click_jiffies_t':'unsigned int'
|           |       |   `-MemberExpr 0x559ea9d42ee0 <col:45, col:48> '<bound member function type>' ->expiry 0x559ea9d3ce20
|           |       |     `-ImplicitCastExpr 0x559ea9d42f30 <col:45> 'const IPRewriterFlow *' <NoOp>
|           |       |       `-ImplicitCastExpr 0x559ea9d42ec8 <col:45> 'IPRewriterFlow *' <LValueToRValue>
|           |       |         `-DeclRefExpr 0x559ea9d42ea8 <col:45> 'IPRewriterFlow *' lvalue ParmVar 0x559ea9d3e888 'a' 'IPRewriterFlow *'
|           |       `-ParenExpr 0x559ea9d43008 <col:60, col:72> 'click_jiffies_t':'unsigned int'
|           |         `-CXXMemberCallExpr 0x559ea9d42fd0 <col:61, col:71> 'click_jiffies_t':'unsigned int'
|           |           `-MemberExpr 0x559ea9d42fa0 <col:61, col:64> '<bound member function type>' ->expiry 0x559ea9d3ce20
|           |             `-ImplicitCastExpr 0x559ea9d42ff0 <col:61> 'const IPRewriterFlow *' <NoOp>
|           |               `-ImplicitCastExpr 0x559ea9d42f88 <col:61> 'IPRewriterFlow *' <LValueToRValue>
|           |                 `-DeclRefExpr 0x559ea9d42f68 <col:61> 'IPRewriterFlow *' lvalue ParmVar 0x559ea9d3e900 'b' 'IPRewriterFlow *'
|           `-IntegerLiteral 0x559ea9d430d8 <col:77> 'int' 0
|-CXXRecordDecl 0x559ea9d3ead0 <line:148:5, line:152:5> line:148:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x559ea9d3ebe8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x559ea9d3ee48 <line:149:2, line:151:2> line:149:14 operator() 'void (IPRewriterFlow **, IPRewriterFlow **)' inline
|   |-ParmVarDecl 0x559ea9d3ecc0 <col:25, col:42> col:42 used begin 'IPRewriterFlow **'
|   |-ParmVarDecl 0x559ea9d3ed40 <col:49, col:66> col:66 used it 'IPRewriterFlow **'
|   `-CompoundStmt 0x559ea9d432e0 <col:70, line:151:2>
|     `-BinaryOperator 0x559ea9d432c0 <line:150:6, col:27> 'size_t':'unsigned long' lvalue bitfield '='
|       |-MemberExpr 0x559ea9d431e8 <col:6, col:13> 'size_t':'unsigned long' lvalue bitfield ->_place 0x559ea9d3f338
|       | `-ImplicitCastExpr 0x559ea9d431d0 <col:6, col:10> 'IPRewriterFlow *' <LValueToRValue>
|       |   `-ParenExpr 0x559ea9d431b0 <col:6, col:10> 'IPRewriterFlow *' lvalue
|       |     `-UnaryOperator 0x559ea9d43198 <col:7, col:8> 'IPRewriterFlow *' lvalue prefix '*' cannot overflow
|       |       `-ImplicitCastExpr 0x559ea9d43180 <col:8> 'IPRewriterFlow **' <LValueToRValue>
|       |         `-DeclRefExpr 0x559ea9d43160 <col:8> 'IPRewriterFlow **' lvalue ParmVar 0x559ea9d3ed40 'it' 'IPRewriterFlow **'
|       `-ImplicitCastExpr 0x559ea9d432a8 <col:22, col:27> 'size_t':'unsigned long' <IntegralCast>
|         `-BinaryOperator 0x559ea9d43288 <col:22, col:27> 'long' '-'
|           |-ImplicitCastExpr 0x559ea9d43258 <col:22> 'IPRewriterFlow **' <LValueToRValue>
|           | `-DeclRefExpr 0x559ea9d43218 <col:22> 'IPRewriterFlow **' lvalue ParmVar 0x559ea9d3ed40 'it' 'IPRewriterFlow **'
|           `-ImplicitCastExpr 0x559ea9d43270 <col:27> 'IPRewriterFlow **' <LValueToRValue>
|             `-DeclRefExpr 0x559ea9d43238 <col:27> 'IPRewriterFlow **' lvalue ParmVar 0x559ea9d3ecc0 'begin' 'IPRewriterFlow **'
|-AccessSpecDecl 0x559ea9d3ef10 <line:154:3, col:12> col:3 protected
|-FieldDecl 0x559ea9d3f178 <line:156:5, col:25> col:21 referenced _e 'IPRewriterEntry [2]'
|-FieldDecl 0x559ea9d3f1d8 <line:157:5, col:14> col:14 referenced _ip_csum_delta 'uint16_t':'unsigned short'
|-FieldDecl 0x559ea9d3f238 <line:158:5, col:14> col:14 referenced _udp_csum_delta 'uint16_t':'unsigned short'
|-FieldDecl 0x559ea9d3f298 <line:159:5, col:21> col:21 referenced _expiry_j 'click_jiffies_t':'unsigned int'
|-FieldDecl 0x559ea9d3f338 <line:160:5, col:21> col:12 referenced _place 'size_t':'unsigned long'
| `-ConstantExpr 0x559ea9d3f318 <col:21> 'int' Int: 32
|   `-IntegerLiteral 0x559ea9d3f2e8 <col:21> 'int' 32
|-FieldDecl 0x559ea9d3f398 <line:161:5, col:13> col:13 referenced _ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x559ea9d3f3f8 <line:162:5, col:13> col:13 referenced _tflags 'uint8_t':'unsigned char'
|-FieldDecl 0x559ea9d3f458 <line:163:5, col:10> col:10 referenced _guaranteed 'bool'
|-FieldDecl 0x559ea9d3f4b8 <line:164:5, col:13> col:13 referenced _reply_anno 'uint8_t':'unsigned char'
|-FieldDecl 0x559ea9d3f518 <line:165:5, col:22> col:22 referenced _owner 'IPRewriterInput *'
|-FriendDecl 0x559ea9d3f5c0 <line:167:5, col:18> col:12 'class IPRewriterBase':'IPRewriterBase'
|-FriendDecl 0x559ea9d3f650 <line:168:5, col:18> col:12 'class IPRewriterEntry':'IPRewriterEntry'
|-AccessSpecDecl 0x559ea9d3f690 <line:170:3, col:10> col:3 private
|-CXXMethodDecl 0x559ea9d42200 <line:172:5, col:38> col:10 destroy 'void (IPRewriterHeap *)'
| `-ParmVarDecl 0x559ea9d3f6c8 <col:18, col:34> col:34 heap 'IPRewriterHeap *'
|-CXXConstructorDecl 0x559ea9d91268 <line:68:7> col:7 implicit constexpr IPRewriterFlow 'void (const IPRewriterFlow &)' inline default trivial noexcept-unevaluated 0x559ea9d91268
| `-ParmVarDecl 0x559ea9d91378 <col:7> col:7 'const IPRewriterFlow &'
|-CXXConstructorDecl 0x559ea9d914f8 <col:7> col:7 implicit constexpr IPRewriterFlow 'void (IPRewriterFlow &&)' inline default trivial noexcept-unevaluated 0x559ea9d914f8
| `-ParmVarDecl 0x559ea9d91608 <col:7> col:7 'IPRewriterFlow &&'
`-CXXDestructorDecl 0x559ea9d92150 <col:7> col:7 implicit referenced ~IPRewriterFlow 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterFlow = type { [2 x %class.IPRewriterEntry], i16, i16, i32, i32, i8, i8, i8, i8, %class.IPRewriterInput* }
  NonVirtualBaseLLVMType:%class.IPRewriterFlow = type { [2 x %class.IPRewriterEntry], i16, i16, i32, i32, i8, i8, i8, i8, %class.IPRewriterInput* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:32 IsSigned:0 StorageSize:32 StorageOffset:56>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9d8de70 <../elements/tcpudp/udprewriter.hh:165:5, line:180:5> line:165:11 referenced class UDPFlow definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'IPRewriterFlow'
|-CXXRecordDecl 0x559ea9d8dfc8 <col:5, col:11> col:11 implicit referenced class UDPFlow
|-AccessSpecDecl 0x559ea9d8e058 <col:45, col:51> col:45 public
|-CXXConstructorDecl 0x559ea9d8e4a8 <line:167:2, line:172:2> line:167:2 UDPFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, int, bool, click_jiffies_t)'
| |-ParmVarDecl 0x559ea9d8e090 <col:10, col:27> col:27 used owner 'IPRewriterInput *'
| |-ParmVarDecl 0x559ea9d8e108 <col:34, col:50> col:50 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x559ea9d8e180 <line:168:3, col:19> col:19 used rewritten_flowid 'const IPFlowID &'
| |-ParmVarDecl 0x559ea9d8e200 <col:37, col:41> col:41 used ip_p 'int'
| |-ParmVarDecl 0x559ea9d8e278 <line:169:3, col:8> col:8 used guaranteed 'bool'
| |-ParmVarDecl 0x559ea9d8e2f0 <col:20, col:36> col:36 used expiry_j 'click_jiffies_t':'unsigned int'
| |-CXXCtorInitializer 'IPRewriterFlow'
| | `-CXXConstructExpr 0x559ea9d916f0 <line:170:8, line:171:35> 'IPRewriterFlow' 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| |   |-ImplicitCastExpr 0x559ea9d91678 <line:170:23> 'IPRewriterInput *' <LValueToRValue>
| |   | `-DeclRefExpr 0x559ea9d90df8 <col:23> 'IPRewriterInput *' lvalue ParmVar 0x559ea9d8e090 'owner' 'IPRewriterInput *'
| |   |-DeclRefExpr 0x559ea9d90e18 <col:30> 'const IPFlowID' lvalue ParmVar 0x559ea9d8e108 'flowid' 'const IPFlowID &'
| |   |-DeclRefExpr 0x559ea9d90e38 <col:38> 'const IPFlowID' lvalue ParmVar 0x559ea9d8e180 'rewritten_flowid' 'const IPFlowID &'
| |   |-ImplicitCastExpr 0x559ea9d916a8 <line:171:9> 'uint8_t':'unsigned char' <IntegralCast>
| |   | `-ImplicitCastExpr 0x559ea9d91690 <col:9> 'int' <LValueToRValue>
| |   |   `-DeclRefExpr 0x559ea9d90e58 <col:9> 'int' lvalue ParmVar 0x559ea9d8e200 'ip_p' 'int'
| |   |-ImplicitCastExpr 0x559ea9d916c0 <col:15> 'bool' <LValueToRValue>
| |   | `-DeclRefExpr 0x559ea9d90e78 <col:15> 'bool' lvalue ParmVar 0x559ea9d8e278 'guaranteed' 'bool'
| |   `-ImplicitCastExpr 0x559ea9d916d8 <col:27> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |     `-DeclRefExpr 0x559ea9d90e98 <col:27> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x559ea9d8e2f0 'expiry_j' 'click_jiffies_t':'unsigned int'
| `-CompoundStmt 0x559ea9d91778 <col:37, line:172:2>
|-CXXMethodDecl 0x559ea9d8e5c8 <line:174:2, line:176:2> line:174:7 used streaming 'bool () const'
| `-CompoundStmt 0x559ea9d91868 <col:25, line:176:2>
|   `-ReturnStmt 0x559ea9d91858 <line:175:6, col:23>
|     `-BinaryOperator 0x559ea9d91838 <col:13, col:23> 'bool' '>'
|       |-ImplicitCastExpr 0x559ea9d91820 <col:13> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x559ea9d91808 <col:13> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   `-MemberExpr 0x559ea9d917b8 <col:13> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x559ea9d3f3f8
|       |     `-ImplicitCastExpr 0x559ea9d91798 <col:13> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
|       |       `-CXXThisExpr 0x559ea9d91788 <col:13> 'const UDPRewriter::UDPFlow *' implicit this
|       `-IntegerLiteral 0x559ea9d917e8 <col:23> 'int' 6
`-CXXMethodDecl 0x559ea9d8e810 <line:178:2, col:62> col:7 apply 'void (WritablePacket *, bool, unsigned int)'
  |-ParmVarDecl 0x559ea9d8e678 <col:13, col:29> col:29 p 'WritablePacket *'
  |-ParmVarDecl 0x559ea9d8e6f0 <col:32, col:37> col:37 direction 'bool'
  `-ParmVarDecl 0x559ea9d8e770 <col:48, col:57> col:57 annos 'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%"class.UDPRewriter::UDPFlow" = type { %class.IPRewriterFlow }
  NonVirtualBaseLLVMType:%"class.UDPRewriter::UDPFlow" = type { %class.IPRewriterFlow }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea99dfb40 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea99dfc58 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x559ea99dfce8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x559ea99dfdb8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x559ea99dfea0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x559ea99e00b8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x559ea99dff60 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea99e0268 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x559ea99e0170 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x559ea99e03b0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x559ea99e0320 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x559ea99e0ed0 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x559ea99e0e40 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea99e1018 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x559ea99e0f88 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea99e10e0 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x559ea99e1228 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x559ea99e1198 <col:28> col:31 'int'
|-CXXMethodDecl 0x559ea99e12f0 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x559ea99e1438 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x559ea99e13a8 <col:28> col:31 'int'
|-CXXMethodDecl 0x559ea99e15b8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x559ea99e14f0 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea99e1700 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x559ea99e1670 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea99e17c8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x559ea99e1988 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x559ea99e1878 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x559ea99e18f0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea99e1bd8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x559ea99e1a48 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559ea99e1ac0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559ea99e1c88 <col:86> "" ""
|-CXXMethodDecl 0x559ea99e1ef8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x559ea99e1d68 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x559ea99e1de0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea99e20a8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x559ea99e1fb8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x559ea99e2258 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x559ea99e2160 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x559ea99e2528 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x559ea99e2310 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x559ea99e2388 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x559ea99e2400 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea99e2808 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x559ea99e25f0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x559ea99e2668 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559ea99e26e0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559ea99e28c0 <col:115> "" ""
|-AccessSpecDecl 0x559ea99e2930 <line:84:3, col:10> col:3 private
|-FieldDecl 0x559ea99e2968 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea99e3070 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x559ea99e3070
| `-ParmVarDecl 0x559ea99e3178 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x559ea99e3218 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x559ea99e3218
| `-ParmVarDecl 0x559ea99e3328 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x559ea9a81c18 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x559ea9c77510 <col:7>
|-CXXConstructorDecl 0x559ea9a81cf0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x559ea9a81cf0
| `-ParmVarDecl 0x559ea9a81e08 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x559ea9a81e78 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x559ea9a81e78
| `-ParmVarDecl 0x559ea9a81f88 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x559ea9c79e80 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9c62598 prev 0x559ea9c54ac0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9c62690 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x559ea9c62780 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x559ea9c628a8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x559ea9c62a28 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x559ea9c62ba8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x559ea9c62d28 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x559ea9c77678 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x559ea9c77ee8 <col:11>
|-CXXDestructorDecl 0x559ea9c77750 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x559ea9c77888 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x559ea9c77888
| `-ParmVarDecl 0x559ea9c77998 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x559ea9c77a38 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x559ea9c77a38
| `-ParmVarDecl 0x559ea9c77b48 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x559ea9c7a878 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9c7a988 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x559ea9c7ac08 <col:11>
|   `-ReturnStmt 0x559ea9c7abf8 <col:11>
|     `-UnaryOperator 0x559ea9c7abe0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559ea9c7abd0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x559ea9c7a9f8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x559ea9c7a9f8
  `-ParmVarDecl 0x559ea9c7ab08 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9c62d90 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9c62ea8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x559ea9c62f48 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x559ea9c62fb0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x559ea9c63018 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x559ea9c63080 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x559ea9c630e0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x559ea9c631a0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x559ea9c63200 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x559ea9c63260 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x559ea9c77588 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x559ea9c62f48 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x559ea9c77ef8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x559ea9c77f50 <col:12>
|-CXXConstructorDecl 0x559ea9c77bb8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x559ea9c77bb8
| `-ParmVarDecl 0x559ea9c77cc8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x559ea9c77d68 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x559ea9c77d68
| `-ParmVarDecl 0x559ea9c77e78 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x559ea9c79f60 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9c4e190 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559ea9c4e318 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x559ea9c4e3a8 <col:16, col:22> col:16 public
|-EnumDecl 0x559ea9c4e3d0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x559ea9c4e4d0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x559ea9c4e5b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c4e4b0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x559ea9c4e490 <col:21> 'int' 28
| `-EnumConstantDecl 0x559ea9c4e560 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x559ea9c4e5c8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9c4e540 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x559ea9c4e520 <col:22> 'int' 64
|-CXXMethodDecl 0x559ea9c4e908 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x559ea9c4e5f0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559ea9c4e670 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x559ea9c4e6e8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559ea9c4e760 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559ea9c4e9c8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x559ea9c4ebc8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x559ea9c4ea40 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x559ea9c4eab8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559ea9c4ec78 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x559ea9c4edd8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x559ea9c4ece8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559ea9c4ee80 <col:72> warn_unused_result ""
|-TypedefDecl 0x559ea9c4f1b0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x559ea9c4f140 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x559ea9c4f0e0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x559ea9c4f0a0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x559ea971d2d0 'void'
|       |-PointerType 0x559ea99ca4d0 'unsigned char *'
|       | `-BuiltinType 0x559ea971d3d0 'unsigned char'
|       |-TypedefType 0x559ea97c6740 'size_t' sugar
|       | |-Typedef 0x559ea978db20 'size_t'
|       | `-BuiltinType 0x559ea971d430 'unsigned long'
|       `-PointerType 0x559ea971dad0 'void *'
|         `-BuiltinType 0x559ea971d2d0 'void'
|-CXXMethodDecl 0x559ea9c4f628 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x559ea9c4f220 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x559ea9c4f298 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559ea9c4f330 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x559ea9c4f3b0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x559ea9c6dae0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x559ea9c6dac8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x559ea9c6da90 <col:58> 'int' 0
| |-ParmVarDecl 0x559ea9c4f430 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x559ea9c6db08 <col:76> 'int' 0
| |-ParmVarDecl 0x559ea9c4f4b0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x559ea9c6db28 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x559ea9c4f6f8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x559ea9c4f778 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x559ea9c4f838 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x559ea9c4f8d8 <col:20>
| `-OptimizeNoneAttr 0x559ea9c4f930 <col:30>
|-CXXMethodDecl 0x559ea9c4f9a8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x559ea9c4fa48 <col:20>
| `-OptimizeNoneAttr 0x559ea9c4faa0 <col:30>
|-CXXMethodDecl 0x559ea9c4fb18 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x559ea9c4fbb8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x559ea9c4fc68 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x559ea9c4fd08 <col:20>
| |-OptimizeNoneAttr 0x559ea9c4fd60 <col:30>
| `-WarnUnusedResultAttr 0x559ea9c4fd88 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x559ea9c4fde0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x559ea9c4fe80 <col:20>
| `-OptimizeNoneAttr 0x559ea9c4fed8 <col:30>
|-CXXMethodDecl 0x559ea9c4ff28 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x559ea9c4ffc8 <col:20>
| `-OptimizeNoneAttr 0x559ea9c50020 <col:30>
|-CXXMethodDecl 0x559ea9c50068 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x559ea9c50108 <col:20>
| `-OptimizeNoneAttr 0x559ea9c50160 <col:30>
|-CXXMethodDecl 0x559ea9c501a8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x559ea9c50268 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x559ea9c50330 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x559ea9c503f8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x559ea9c504b8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x559ea9c505d8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x559ea9c6dbf0 <col:54, line:99:5>
|   `-ReturnStmt 0x559ea9c6dbe0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x559ea9c6dbc8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x559ea9c6db98 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x559ea9c6c988
|         `-CXXThisExpr 0x559ea9c6db88 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x559ea9c50778 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x559ea9c50688 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x559ea9c6dca0 <col:67, line:103:5>
|   `-BinaryOperator 0x559ea9c6dc80 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x559ea9c6dc18 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x559ea9c6c988
|     | `-CXXThisExpr 0x559ea9c6dc08 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x559ea9c6dc68 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9c6dc48 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x559ea9c50688 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x559ea9c50870 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x559ea9c6dd20 <col:33, line:107:5>
|   `-ReturnStmt 0x559ea9c6dd10 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x559ea9c6dcf8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x559ea9c6dcc8 <col:16> 'void *' lvalue ->_destructor_argument 0x559ea9c6c9f0
|         `-CXXThisExpr 0x559ea9c6dcb8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x559ea9c50930 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x559ea9c6e350 <col:25, line:113:5>
|   |-ParenExpr 0x559ea9c6e098 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x559ea9c6e068 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9c6ddd8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x559ea9c6ddb0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x559ea9c6dd78 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x559ea9c6dd48 <col:24> '<bound member function type>' ->shared 0x559ea9c4f9a8
|   |   |       `-ImplicitCastExpr 0x559ea9c6dd98 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x559ea9c6dd38 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x559ea9c6de38 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9c6de18 <col:42> 'int' 0
|   |   `-CallExpr 0x559ea9c6dfc8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x559ea9c6dfb0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c6df90 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9c6e008 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c6dea8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x559ea9c6e020 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c6ded0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559ea9c6e038 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9c6df08 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x559ea9c6e050 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9c6df78 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9c6df60 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9c6df28 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x559ea9c6e298 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x559ea9c6e0c8 <col:2> 'unsigned char *' lvalue ->_head 0x559ea9c633a0
|   | | `-CXXThisExpr 0x559ea9c6e0b8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x559ea9c6e280 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x559ea9c6e260 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x559ea9c6e108 <col:10> 'unsigned char *' lvalue ->_data 0x559ea9c63408
|   |     | `-CXXThisExpr 0x559ea9c6e0f8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x559ea9c6e248 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x559ea9c6e228 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x559ea9c6e148 <col:18> 'unsigned char *' lvalue ->_tail 0x559ea9c6c860
|   |         | `-CXXThisExpr 0x559ea9c6e138 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x559ea9c6e210 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x559ea9c6e1f0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x559ea9c6e188 <col:26> 'unsigned char *' lvalue ->_end 0x559ea9c6c8c8
|   |             | `-CXXThisExpr 0x559ea9c6e178 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x559ea9c6e1d8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x559ea9c6e1b8 <col:33> 'int' 0
|   `-BinaryOperator 0x559ea9c6e330 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x559ea9c6e2c8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x559ea9c6c988
|     | `-CXXThisExpr 0x559ea9c6e2b8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x559ea9c6e318 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x559ea9c6e2f8 <col:16> 'int' 0
|-CXXMethodDecl 0x559ea9c50a70 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x559ea9c509e0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559ea9c50b18 <col:20>
| |-OptimizeNoneAttr 0x559ea9c50b70 <col:30>
| `-WarnUnusedResultAttr 0x559ea9c50b98 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x559ea9c50c68 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x559ea9c50bd8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559ea9c50d10 <col:20>
| |-OptimizeNoneAttr 0x559ea9c50d68 <col:30>
| `-WarnUnusedResultAttr 0x559ea9c50d90 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x559ea9c50ec8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x559ea9c50dd0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559ea9c50f70 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x559ea9c51070 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x559ea9c50fe0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559ea9c51118 <col:20>
| `-OptimizeNoneAttr 0x559ea9c51170 <col:30>
|-CXXMethodDecl 0x559ea9c51238 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x559ea9c511a8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559ea9c512e0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x559ea9c513e0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x559ea9c51350 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559ea9c51488 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x559ea9c51588 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x559ea9c514f8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559ea9c51630 <col:20>
| `-OptimizeNoneAttr 0x559ea9c51688 <col:30>
|-CXXMethodDecl 0x559ea9c51818 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x559ea9c516c8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x559ea9c51740 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x559ea9c6db48 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x559ea9c518c8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x559ea9c51ac8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c51940 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x559ea9c519b8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c51cd8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c51b88 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x559ea9c51c00 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c51ee8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x559ea9c51d98 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x559ea9c51e18 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x559ea9c6db58 <col:39> 'int' 0
|-CXXMethodDecl 0x559ea9c51fb8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x559ea9c52080 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x559ea9c52148 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x559ea9c52208 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x559ea9c522e8 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x559ea9c52430 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x559ea9c523a0 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x559ea9c52600 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c524f0 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x559ea9c52568 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c526d0 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x559ea9c52790 <line:288:5, col:66> col:45 used has_network_header 'bool () const'
| |-NoInlineAttr 0x559ea9c52830 <col:20>
| `-OptimizeNoneAttr 0x559ea9c52888 <col:30>
|-CXXMethodDecl 0x559ea9c528d8 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x559ea9c52978 <col:20>
| `-OptimizeNoneAttr 0x559ea9c529d0 <col:30>
|-CXXMethodDecl 0x559ea9c52a20 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x559ea9c52ae0 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x559ea9c52ba8 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x559ea9c52c48 <col:20>
| `-OptimizeNoneAttr 0x559ea9c52ca0 <col:30>
|-CXXMethodDecl 0x559ea9c52df0 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c52ce0 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x559ea9c52d58 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c52f40 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x559ea9c52eb0 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c53008 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x559ea9c530c8 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x559ea9c53168 <col:20>
| `-OptimizeNoneAttr 0x559ea9c531c0 <col:30>
|-CXXMethodDecl 0x559ea9c53210 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x559ea9c532b0 <col:20>
| `-OptimizeNoneAttr 0x559ea9c53308 <col:30>
|-CXXMethodDecl 0x559ea9c53358 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x559ea9c53420 <line:300:5, col:63> col:44 used transport_length 'int () const'
| |-NoInlineAttr 0x559ea9c534c0 <col:20>
| `-OptimizeNoneAttr 0x559ea9c53518 <col:30>
|-CXXMethodDecl 0x559ea9c53560 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x559ea9c53678 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x559ea9c537e8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x559ea9c53728 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x559ea9c538d8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x559ea9c53978 <col:20>
| `-OptimizeNoneAttr 0x559ea9c539d0 <col:30>
|-CXXMethodDecl 0x559ea9c53a20 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x559ea9c53ae0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x559ea9c53d18 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x559ea9c53b90 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x559ea9c53c08 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559ea9c53dc8 <col:20>
| `-OptimizeNoneAttr 0x559ea9c53e20 <col:30>
|-CXXMethodDecl 0x559ea9c53ec8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x559ea9c53f68 <col:20>
| `-OptimizeNoneAttr 0x559ea9c53fc0 <col:30>
|-CXXMethodDecl 0x559ea9c54010 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x559ea9c540b0 <col:20>
| `-OptimizeNoneAttr 0x559ea9c54108 <col:30>
|-CXXMethodDecl 0x559ea9c54150 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x559ea9c541f0 <col:20>
| `-OptimizeNoneAttr 0x559ea9c54248 <col:30>
|-CXXMethodDecl 0x559ea9c54348 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x559ea9c54280 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x559ea9c543f0 <col:20>
| `-OptimizeNoneAttr 0x559ea9c54448 <col:30>
|-CXXMethodDecl 0x559ea9c54608 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x559ea9c54480 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x559ea9c544f8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559ea9c546b8 <col:20>
| `-OptimizeNoneAttr 0x559ea9c54710 <col:30>
|-CXXMethodDecl 0x559ea9c547b8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x559ea9c548d8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x559ea9c549f8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x559ea9c54a98 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x559ea9c54ac0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x559ea9c54be8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x559ea9c54c88 <col:20>
| `-OptimizeNoneAttr 0x559ea9c54ce0 <col:30>
|-CXXMethodDecl 0x559ea9c54d88 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x559ea9c54e28 <col:20>
| `-OptimizeNoneAttr 0x559ea9c54e80 <col:30>
|-AccessSpecDecl 0x559ea9c54ea8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x559ea9c54ed0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x559ea9c54fd0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x559ea9c55020 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9c54fb0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x559ea9c54f90 <col:14> 'int' 48
|-CXXMethodDecl 0x559ea9c55088 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x559ea9c55128 <col:20>
| `-OptimizeNoneAttr 0x559ea9c55180 <col:30>
|-CXXMethodDecl 0x559ea9c551f8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x559ea9c55298 <col:20>
| `-OptimizeNoneAttr 0x559ea9c552f0 <col:30>
|-CXXMethodDecl 0x559ea9c553b8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x559ea9c55328 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x559ea9c55558 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x559ea9c556f8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x559ea9c55608 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x559ea9c557a0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x559ea9c558a0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559ea9c55c50 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c55880 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x559ea9c55860 <col:9> 'int' 0
| |-EnumConstantDecl 0x559ea9c55930 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559ea9c55c68 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c55910 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x559ea9c558f0 <col:14> 'int' 1
| |-EnumConstantDecl 0x559ea9c559c0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559ea9c55c80 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c559a0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x559ea9c55980 <col:14> 'int' 2
| |-EnumConstantDecl 0x559ea9c55a50 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559ea9c55c98 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c55a30 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x559ea9c55a10 <col:14> 'int' 3
| |-EnumConstantDecl 0x559ea9c55ae0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559ea9c55cb0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c55ac0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x559ea9c55aa0 <col:13> 'int' 4
| |-EnumConstantDecl 0x559ea9c55b70 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559ea9c55cc8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c55b50 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x559ea9c55b30 <col:13> 'int' 5
| `-EnumConstantDecl 0x559ea9c55c00 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x559ea9c55ce0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9c55be0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x559ea9c55bc0 <col:14> 'int' 6
|-CXXMethodDecl 0x559ea9c55d48 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x559ea9c55de8 <col:20>
| `-OptimizeNoneAttr 0x559ea9c55e40 <col:30>
|-CXXMethodDecl 0x559ea9c55f38 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x559ea9c55e78 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x559ea9c55fe0 <col:20>
| `-OptimizeNoneAttr 0x559ea9c56038 <col:30>
|-CXXMethodDecl 0x559ea9c560a8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x559ea9c561d0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x559ea9c56398 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x559ea9c562d0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x559ea9c56460 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x559ea9c56528 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x559ea9c56668 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x559ea9c565d8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x559ea9c56710 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x559ea9c56810 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x559ea9c56a10 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c567f0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x559ea9c567d0 <col:23> 'int' 0
| |-EnumConstantDecl 0x559ea9c568a0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x559ea9c56a28 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c56880 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x559ea9c56860 <col:45> 'int' 4
| |-EnumConstantDecl 0x559ea9c56930 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x559ea9c56a40 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c56910 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x559ea9c568f0 <col:24> 'int' 0
| `-EnumConstantDecl 0x559ea9c569c0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x559ea9c56a58 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9c569a0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x559ea9c56980 <col:47> 'int' 16
|-CXXMethodDecl 0x559ea9c56ab8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x559ea9c56c28 <line:436:5, col:75> col:45 used set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x559ea9c56b68 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x559ea9c56cd0 <col:20>
| `-OptimizeNoneAttr 0x559ea9c56d28 <col:30>
|-CXXMethodDecl 0x559ea9c56d78 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x559ea9c6e470 <col:18, col:36>
|   `-ReturnStmt 0x559ea9c6e460 <col:20, col:33>
|     `-ImplicitCastExpr 0x559ea9c6e448 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x559ea9c6e428 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x559ea9c6e3f8 <col:27> '<bound member function type>' ->xanno 0x559ea9c54d88
|           `-CXXThisExpr 0x559ea9c6e3e8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x559ea9c56e70 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x559ea9c6e580 <col:30, col:48>
|   `-ReturnStmt 0x559ea9c6e570 <col:32, col:45>
|     `-ImplicitCastExpr 0x559ea9c6e558 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x559ea9c6e538 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x559ea9c6e508 <col:39> '<bound member function type>' ->xanno 0x559ea9c54be8
|           `-CXXThisExpr 0x559ea9c6e4f8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x559ea9c56f58 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x559ea9c6e718 <col:24, col:50>
|   `-ReturnStmt 0x559ea9c6e708 <col:26, col:47>
|     `-UnaryOperator 0x559ea9c6e6f0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x559ea9c6e6d0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x559ea9c6e6b8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559ea9c6e668 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x559ea9c628a8
|         |   `-CXXMemberCallExpr 0x559ea9c6e648 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x559ea9c6e618 <col:34> '<bound member function type>' ->xanno 0x559ea9c54d88
|         |       `-CXXThisExpr 0x559ea9c6e608 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x559ea9c6e698 <col:46> 'int' 0
|-CXXMethodDecl 0x559ea9c57048 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x559ea9c6e8e8 <col:36, col:62>
|   `-ReturnStmt 0x559ea9c6e8d8 <col:38, col:59>
|     `-UnaryOperator 0x559ea9c6e8c0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x559ea9c6e8a0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x559ea9c6e888 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559ea9c6e800 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x559ea9c628a8
|         |   `-CXXMemberCallExpr 0x559ea9c6e7e0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x559ea9c6e7b0 <col:46> '<bound member function type>' ->xanno 0x559ea9c54be8
|         |       `-CXXThisExpr 0x559ea9c6e7a0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x559ea9c6e830 <col:58> 'int' 0
|-CXXMethodDecl 0x559ea9c57168 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x559ea9c6ea80 <col:26, col:53>
|   `-ReturnStmt 0x559ea9c6ea70 <col:28, col:50>
|     `-UnaryOperator 0x559ea9c6ea58 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x559ea9c6ea38 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x559ea9c6ea20 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559ea9c6e9d0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x559ea9c62ba8
|         |   `-CXXMemberCallExpr 0x559ea9c6e9b0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x559ea9c6e980 <col:36> '<bound member function type>' ->xanno 0x559ea9c54d88
|         |       `-CXXThisExpr 0x559ea9c6e970 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x559ea9c6ea00 <col:49> 'int' 0
|-CXXMethodDecl 0x559ea9c57288 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x559ea9c6ec58 <col:38, col:65>
|   `-ReturnStmt 0x559ea9c6ec48 <col:40, col:62>
|     `-UnaryOperator 0x559ea9c6ec30 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x559ea9c6ec10 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x559ea9c6ebf8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559ea9c6eb68 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x559ea9c62ba8
|         |   `-CXXMemberCallExpr 0x559ea9c6eb48 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x559ea9c6eb18 <col:48> '<bound member function type>' ->xanno 0x559ea9c54be8
|         |       `-CXXThisExpr 0x559ea9c6eb08 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x559ea9c6eb98 <col:61> 'int' 0
|-CXXMethodDecl 0x559ea9c57438 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x559ea9c57340 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x559ea9c6f328 <col:34, line:463:5>
|   |-ParenExpr 0x559ea9c6f170 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x559ea9c6f140 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9c6eda8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9c6ed78 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559ea9c6ecc8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559ea9c6ecb0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559ea9c6ec70 <col:23> 'int' lvalue ParmVar 0x559ea9c57340 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559ea9c6ec90 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559ea9c6ed58 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559ea9c6ed28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559ea9c6ece8 <col:33> 'int' lvalue ParmVar 0x559ea9c57340 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x559ea9c6ed40 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x559ea9c6ed08 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559ea9c54fd0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x559ea9c6ee08 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9c6ede8 <col:56> 'int' 0
|   |   `-CallExpr 0x559ea9c6f0a0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x559ea9c6f088 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c6f068 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9c6f0e0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c6eef8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x559ea9c6f0f8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c6ef28 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559ea9c6f110 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9c6ef60 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x559ea9c6f128 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9c6f050 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9c6f038 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9c6eff8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x559ea9c6f318 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x559ea9c6f300 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x559ea9c6f2e0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x559ea9c6f2b0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559ea9c6f260 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x559ea9c628a8
|         |   `-CXXMemberCallExpr 0x559ea9c6f240 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x559ea9c6f210 <col:9> '<bound member function type>' ->xanno 0x559ea9c54be8
|         |       `-CXXThisExpr 0x559ea9c6f200 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x559ea9c6f2c8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x559ea9c6f290 <col:21> 'int' lvalue ParmVar 0x559ea9c57340 'i' 'int'
|-CXXMethodDecl 0x559ea9c57688 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x559ea9c574f8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x559ea9c57570 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x559ea9c6f9b8 <col:40, line:472:5>
|   |-ParenExpr 0x559ea9c6f7d0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x559ea9c6f7a0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9c6f480 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9c6f450 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559ea9c6f3a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559ea9c6f388 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559ea9c6f348 <col:23> 'int' lvalue ParmVar 0x559ea9c574f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559ea9c6f368 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559ea9c6f430 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559ea9c6f400 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559ea9c6f3c0 <col:33> 'int' lvalue ParmVar 0x559ea9c574f8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x559ea9c6f418 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x559ea9c6f3e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559ea9c54fd0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x559ea9c6f4e0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9c6f4c0 <col:56> 'int' 0
|   |   `-CallExpr 0x559ea9c6f700 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x559ea9c6f6e8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c6f6c8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9c6f740 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c6f550 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x559ea9c6f758 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c6f580 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559ea9c6f770 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9c6f5b8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x559ea9c6f788 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9c6f6b0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9c6f698 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9c6f658 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x559ea9c6f998 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x559ea9c6f940 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x559ea9c6f910 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x559ea9c6f8c0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x559ea9c628a8
|     | |   `-CXXMemberCallExpr 0x559ea9c6f8a0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x559ea9c6f870 <col:2> '<bound member function type>' ->xanno 0x559ea9c54d88
|     | |       `-CXXThisExpr 0x559ea9c6f860 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x559ea9c6f928 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x559ea9c6f8f0 <col:14> 'int' lvalue ParmVar 0x559ea9c574f8 'i' 'int'
|     `-ImplicitCastExpr 0x559ea9c6f980 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9c6f960 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x559ea9c57570 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x559ea9c57848 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x559ea9c57750 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x559ea9c70138 <col:36, line:485:5>
|   |-ParenExpr 0x559ea9c6fea0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x559ea9c6fe70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9c6fb50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9c6fb20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559ea9c6fa30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559ea9c6fa18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559ea9c6f9d8 <col:23> 'int' lvalue ParmVar 0x559ea9c57750 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559ea9c6f9f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559ea9c6fb00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559ea9c6fae8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559ea9c6fa50 <col:33> 'int' lvalue ParmVar 0x559ea9c57750 'i' 'int'
|   |   |     `-BinaryOperator 0x559ea9c6fac8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559ea9c6fab0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559ea9c6fa70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559ea9c54fd0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559ea9c6fa90 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559ea9c6fbb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9c6fb90 <col:60> 'int' 0
|   |   `-CallExpr 0x559ea9c6fdd0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559ea9c6fdb8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c6fd98 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9c6fe10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c6fc20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x559ea9c6fe28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c6fc58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559ea9c6fe40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9c6fc90 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x559ea9c6fe58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9c6fd80 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9c6fd68 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9c6fd28 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x559ea9c70128 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x559ea9c70110 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x559ea9c700f8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559ea9c700c8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x559ea9c70068 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x559ea9c70038 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559ea9c6ffb0 <col:61, col:70> 'char const[48]' lvalue ->c 0x559ea9c62780
|             |   `-CXXMemberCallExpr 0x559ea9c6ff90 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559ea9c6ff60 <col:61> '<bound member function type>' ->xanno 0x559ea9c54be8
|             |       `-CXXThisExpr 0x559ea9c6ff50 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559ea9c70050 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559ea9c6ffe0 <col:74> 'int' lvalue ParmVar 0x559ea9c57750 'i' 'int'
|-CXXMethodDecl 0x559ea9c57a98 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x559ea9c57908 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559ea9c57980 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x559ea9c708a8 <col:42, line:500:5>
|   |-ParenExpr 0x559ea9c70620 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x559ea9c705f0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9c702d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9c702a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559ea9c701b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559ea9c70198 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559ea9c70158 <col:23> 'int' lvalue ParmVar 0x559ea9c57908 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559ea9c70178 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559ea9c70280 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559ea9c70268 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559ea9c701d0 <col:33> 'int' lvalue ParmVar 0x559ea9c57908 'i' 'int'
|   |   |     `-BinaryOperator 0x559ea9c70248 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559ea9c70230 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559ea9c701f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559ea9c54fd0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559ea9c70210 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559ea9c70330 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9c70310 <col:60> 'int' 0
|   |   `-CallExpr 0x559ea9c70550 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559ea9c70538 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c70518 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9c70590 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c703a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x559ea9c705a8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c703d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559ea9c705c0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9c70410 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x559ea9c705d8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9c70500 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9c704e8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9c704a8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x559ea9c70888 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x559ea9c70818 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559ea9c707e8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x559ea9c70790 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559ea9c70760 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559ea9c70710 <col:48, col:57> 'char [48]' lvalue ->c 0x559ea9c62780
|     |     |   `-CXXMemberCallExpr 0x559ea9c706f0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559ea9c706c0 <col:48> '<bound member function type>' ->xanno 0x559ea9c54d88
|     |     |       `-CXXThisExpr 0x559ea9c706b0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559ea9c70778 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559ea9c70740 <col:61> 'int' lvalue ParmVar 0x559ea9c57908 'i' 'int'
|     `-ImplicitCastExpr 0x559ea9c70870 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9c70830 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x559ea9c57980 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x559ea9c57c58 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x559ea9c57b60 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x559ea9c71008 <col:35, line:513:5>
|   |-ParenExpr 0x559ea9c70d18 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x559ea9c70ce8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9c70a40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9c70a10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559ea9c70920 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559ea9c70908 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559ea9c708c8 <col:23> 'int' lvalue ParmVar 0x559ea9c57b60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559ea9c708e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559ea9c709f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559ea9c709d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559ea9c70940 <col:33> 'int' lvalue ParmVar 0x559ea9c57b60 'i' 'int'
|   |   |     `-BinaryOperator 0x559ea9c709b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559ea9c709a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559ea9c70960 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559ea9c54fd0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559ea9c70980 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559ea9c70aa0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9c70a80 <col:60> 'int' 0
|   |   `-CallExpr 0x559ea9c70c48 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559ea9c70c30 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c70c10 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9c70c88 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c70b10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x559ea9c70ca0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c70b48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559ea9c70cb8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9c70b80 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x559ea9c70cd0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9c70bf8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9c70be0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9c70ba0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x559ea9c70ff8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x559ea9c70fe0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x559ea9c70fc8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559ea9c70f98 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x559ea9c70f10 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x559ea9c70ee0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559ea9c70e90 <col:60, col:69> 'char const[48]' lvalue ->c 0x559ea9c62780
|             |   `-CXXMemberCallExpr 0x559ea9c70e70 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559ea9c70e40 <col:60> '<bound member function type>' ->xanno 0x559ea9c54be8
|             |       `-CXXThisExpr 0x559ea9c70e30 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559ea9c70ef8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559ea9c70ec0 <col:73> 'int' lvalue ParmVar 0x559ea9c57b60 'i' 'int'
|-CXXMethodDecl 0x559ea9c57ea8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x559ea9c57d18 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559ea9c57d90 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x559ea9c71718 <col:41, line:528:5>
|   |-ParenExpr 0x559ea9c714b0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x559ea9c71480 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9c711a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9c71170 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559ea9c71080 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559ea9c71068 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559ea9c71028 <col:23> 'int' lvalue ParmVar 0x559ea9c57d18 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559ea9c71048 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559ea9c71150 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559ea9c71138 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559ea9c710a0 <col:33> 'int' lvalue ParmVar 0x559ea9c57d18 'i' 'int'
|   |   |     `-BinaryOperator 0x559ea9c71118 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559ea9c71100 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559ea9c710c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559ea9c54fd0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559ea9c710e0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559ea9c71200 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9c711e0 <col:60> 'int' 0
|   |   `-CallExpr 0x559ea9c713e0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559ea9c713c8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c713a8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9c71420 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c71270 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x559ea9c71438 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c712a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559ea9c71450 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9c712e0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x559ea9c71468 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9c71390 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9c71378 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9c71338 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x559ea9c716f8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x559ea9c716a8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559ea9c71678 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x559ea9c71620 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559ea9c715f0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559ea9c715a0 <col:47, col:56> 'char [48]' lvalue ->c 0x559ea9c62780
|     |     |   `-CXXMemberCallExpr 0x559ea9c71580 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559ea9c71550 <col:47> '<bound member function type>' ->xanno 0x559ea9c54d88
|     |     |       `-CXXThisExpr 0x559ea9c71540 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559ea9c71608 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559ea9c715d0 <col:60> 'int' lvalue ParmVar 0x559ea9c57d18 'i' 'int'
|     `-ImplicitCastExpr 0x559ea9c716e0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9c716c0 <col:65> 'int16_t':'short' lvalue ParmVar 0x559ea9c57d90 'x' 'int16_t':'short'
|-CXXMethodDecl 0x559ea9c58068 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x559ea9c57f70 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x559ea9c71de8 <col:36, line:541:5>
|   |-ParenExpr 0x559ea9c71b88 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x559ea9c71b58 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9c718b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9c71880 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559ea9c71790 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559ea9c71778 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559ea9c71738 <col:23> 'int' lvalue ParmVar 0x559ea9c57f70 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559ea9c71758 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559ea9c71860 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559ea9c71848 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559ea9c717b0 <col:33> 'int' lvalue ParmVar 0x559ea9c57f70 'i' 'int'
|   |   |     `-BinaryOperator 0x559ea9c71828 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559ea9c71810 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559ea9c717d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559ea9c54fd0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559ea9c717f0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x559ea9c71910 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9c718f0 <col:60> 'int' 0
|   |   `-CallExpr 0x559ea9c71ab8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559ea9c71aa0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c71a80 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9c71af8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c71980 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x559ea9c71b10 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c719b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559ea9c71b28 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9c719f0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x559ea9c71b40 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9c71a68 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9c71a50 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9c71a10 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x559ea9c71dd8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x559ea9c71dc0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x559ea9c71da8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559ea9c71d78 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x559ea9c71d20 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x559ea9c71cf0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559ea9c71ca0 <col:61, col:70> 'char const[48]' lvalue ->c 0x559ea9c62780
|             |   `-CXXMemberCallExpr 0x559ea9c71c80 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559ea9c71c50 <col:61> '<bound member function type>' ->xanno 0x559ea9c54be8
|             |       `-CXXThisExpr 0x559ea9c71c40 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559ea9c71d08 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559ea9c71cd0 <col:74> 'int' lvalue ParmVar 0x559ea9c57f70 'i' 'int'
|-CXXMethodDecl 0x559ea9c58238 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x559ea9c58128 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x559ea9c581a0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559ea9c582e8 <col:20>
| `-OptimizeNoneAttr 0x559ea9c58340 <col:30>
|-CXXMethodDecl 0x559ea9c58478 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x559ea9c58380 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x559ea9c724b8 <col:35, line:562:5>
|   |-ParenExpr 0x559ea9c72258 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x559ea9c72228 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9c71f80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9c71f50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559ea9c71e60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559ea9c71e48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559ea9c71e08 <col:23> 'int' lvalue ParmVar 0x559ea9c58380 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559ea9c71e28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559ea9c71f30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559ea9c71f18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559ea9c71e80 <col:33> 'int' lvalue ParmVar 0x559ea9c58380 'i' 'int'
|   |   |     `-BinaryOperator 0x559ea9c71ef8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559ea9c71ee0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559ea9c71ea0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559ea9c54fd0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559ea9c71ec0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x559ea9c71fe0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9c71fc0 <col:60> 'int' 0
|   |   `-CallExpr 0x559ea9c72188 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559ea9c72170 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c72150 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9c721c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c72050 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x559ea9c721e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c72088 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559ea9c721f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9c720c0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x559ea9c72210 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9c72138 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9c72120 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9c720e0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x559ea9c724a8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x559ea9c72490 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x559ea9c72478 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559ea9c72448 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x559ea9c723f0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x559ea9c723c0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559ea9c72370 <col:60, col:69> 'char const[48]' lvalue ->c 0x559ea9c62780
|             |   `-CXXMemberCallExpr 0x559ea9c72350 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559ea9c72320 <col:60> '<bound member function type>' ->xanno 0x559ea9c54be8
|             |       `-CXXThisExpr 0x559ea9c72310 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559ea9c723d8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559ea9c723a0 <col:73> 'int' lvalue ParmVar 0x559ea9c58380 'i' 'int'
|-CXXMethodDecl 0x559ea9c58688 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x559ea9c58538 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559ea9c585b0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x559ea9c72b98 <col:41, line:577:5>
|   |-ParenExpr 0x559ea9c72928 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x559ea9c728f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9c72650 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9c72620 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559ea9c72530 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559ea9c72518 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559ea9c724d8 <col:23> 'int' lvalue ParmVar 0x559ea9c58538 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559ea9c724f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559ea9c72600 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559ea9c725e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559ea9c72550 <col:33> 'int' lvalue ParmVar 0x559ea9c58538 'i' 'int'
|   |   |     `-BinaryOperator 0x559ea9c725c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559ea9c725b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559ea9c72570 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559ea9c54fd0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559ea9c72590 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x559ea9c726b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9c72690 <col:60> 'int' 0
|   |   `-CallExpr 0x559ea9c72858 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559ea9c72840 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c72820 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9c72898 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c72720 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x559ea9c728b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c72758 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559ea9c728c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9c72790 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x559ea9c728e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9c72808 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9c727f0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9c727b0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x559ea9c72b78 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x559ea9c72b28 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559ea9c72af8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x559ea9c72a98 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559ea9c72a68 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559ea9c72a18 <col:47, col:56> 'char [48]' lvalue ->c 0x559ea9c62780
|     |     |   `-CXXMemberCallExpr 0x559ea9c729f8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559ea9c729c8 <col:47> '<bound member function type>' ->xanno 0x559ea9c54d88
|     |     |       `-CXXThisExpr 0x559ea9c729b8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559ea9c72a80 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559ea9c72a48 <col:60> 'int' lvalue ParmVar 0x559ea9c58538 'i' 'int'
|     `-ImplicitCastExpr 0x559ea9c72b60 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9c72b40 <col:65> 'int32_t':'int' lvalue ParmVar 0x559ea9c585b0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x559ea9c58848 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x559ea9c58750 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x559ea9c732c8 <col:36, line:591:5>
|   |-ParenExpr 0x559ea9c73008 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x559ea9c72fd8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9c72d30 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9c72d00 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559ea9c72c10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559ea9c72bf8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559ea9c72bb8 <col:23> 'int' lvalue ParmVar 0x559ea9c58750 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559ea9c72bd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559ea9c72ce0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559ea9c72cc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559ea9c72c30 <col:33> 'int' lvalue ParmVar 0x559ea9c58750 'i' 'int'
|   |   |     `-BinaryOperator 0x559ea9c72ca8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559ea9c72c90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559ea9c72c50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559ea9c54fd0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559ea9c72c70 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x559ea9c72d90 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9c72d70 <col:60> 'int' 0
|   |   `-CallExpr 0x559ea9c72f38 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559ea9c72f20 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c72f00 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9c72f78 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c72e00 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x559ea9c72f90 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c72e38 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559ea9c72fa8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9c72e70 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x559ea9c72fc0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9c72ee8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9c72ed0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9c72e90 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x559ea9c732b8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x559ea9c732a0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x559ea9c73288 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559ea9c73258 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x559ea9c731d0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x559ea9c731a0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559ea9c73150 <col:61, col:70> 'char const[48]' lvalue ->c 0x559ea9c62780
|             |   `-CXXMemberCallExpr 0x559ea9c73130 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559ea9c73100 <col:61> '<bound member function type>' ->xanno 0x559ea9c54be8
|             |       `-CXXThisExpr 0x559ea9c730f0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559ea9c731b8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559ea9c73180 <col:74> 'int' lvalue ParmVar 0x559ea9c58750 'i' 'int'
|-CXXMethodDecl 0x559ea9c58a98 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x559ea9c58908 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559ea9c58980 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x559ea9c739a8 <col:42, line:606:5>
|   |-ParenExpr 0x559ea9c73738 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x559ea9c73708 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9c73460 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9c73430 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559ea9c73340 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559ea9c73328 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559ea9c732e8 <col:23> 'int' lvalue ParmVar 0x559ea9c58908 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559ea9c73308 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559ea9c73410 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559ea9c733f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559ea9c73360 <col:33> 'int' lvalue ParmVar 0x559ea9c58908 'i' 'int'
|   |   |     `-BinaryOperator 0x559ea9c733d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559ea9c733c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559ea9c73380 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559ea9c54fd0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559ea9c733a0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x559ea9c734c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9c734a0 <col:60> 'int' 0
|   |   `-CallExpr 0x559ea9c73668 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559ea9c73650 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c73630 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9c736a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c73530 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x559ea9c736c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c73568 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559ea9c736d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9c735a0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x559ea9c736f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9c73618 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9c73600 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9c735c0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x559ea9c73988 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x559ea9c73938 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559ea9c73908 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x559ea9c738a8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559ea9c73878 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559ea9c73828 <col:48, col:57> 'char [48]' lvalue ->c 0x559ea9c62780
|     |     |   `-CXXMemberCallExpr 0x559ea9c73808 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559ea9c737d8 <col:48> '<bound member function type>' ->xanno 0x559ea9c54d88
|     |     |       `-CXXThisExpr 0x559ea9c737c8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559ea9c73890 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559ea9c73858 <col:61> 'int' lvalue ParmVar 0x559ea9c58908 'i' 'int'
|     `-ImplicitCastExpr 0x559ea9c73970 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9c73950 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x559ea9c58980 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x559ea9c58c30 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x559ea9c58b60 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x559ea9c74218 <col:33, line:620:5>
|   |-ParenExpr 0x559ea9c73f90 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x559ea9c73f60 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9c73bb0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9c73b80 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559ea9c73a20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559ea9c73a08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559ea9c739c8 <col:23> 'int' lvalue ParmVar 0x559ea9c58b60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559ea9c739e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559ea9c73b60 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x559ea9c73b48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559ea9c73a40 <col:33> 'int' lvalue ParmVar 0x559ea9c58b60 'i' 'int'
|   |   |     `-BinaryOperator 0x559ea9c73b28 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559ea9c73b10 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559ea9c73a60 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559ea9c54fd0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x559ea9c73ae8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x559ea9c73ad0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x559ea9c73a98 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x559ea9c73c10 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9c73bf0 <col:79> 'int' 0
|   |   `-CallExpr 0x559ea9c73ec0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x559ea9c73ea8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c73e88 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9c73f00 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c73cf8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x559ea9c73f18 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c73d40 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559ea9c73f30 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9c73d78 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x559ea9c73f48 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9c73e70 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9c73e58 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9c73e18 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x559ea9c74208 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x559ea9c741f0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x559ea9c741d8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559ea9c741a8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x559ea9c74120 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x559ea9c740f0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559ea9c740a0 <col:67, col:76> 'char const[48]' lvalue ->c 0x559ea9c62780
|             |   `-CXXMemberCallExpr 0x559ea9c74080 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559ea9c74050 <col:67> '<bound member function type>' ->xanno 0x559ea9c54be8
|             |       `-CXXThisExpr 0x559ea9c74040 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559ea9c74108 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559ea9c740d0 <col:80> 'int' lvalue ParmVar 0x559ea9c58b60 'i' 'int'
|-CXXMethodDecl 0x559ea9c58e48 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x559ea9c58cf0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559ea9c58d70 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x559ea9c77470 <col:45, line:635:5>
|   |-ParenExpr 0x559ea9c74788 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x559ea9c74758 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9c74420 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9c743f0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559ea9c74290 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559ea9c74278 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559ea9c74238 <col:23> 'int' lvalue ParmVar 0x559ea9c58cf0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559ea9c74258 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559ea9c743d0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x559ea9c743b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559ea9c742b0 <col:33> 'int' lvalue ParmVar 0x559ea9c58cf0 'i' 'int'
|   |   |     `-BinaryOperator 0x559ea9c74398 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559ea9c74380 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559ea9c742d0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559ea9c54fd0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x559ea9c74358 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x559ea9c74340 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x559ea9c74308 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x559ea9c74480 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9c74460 <col:79> 'int' 0
|   |   `-CallExpr 0x559ea9c746b8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x559ea9c746a0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9c74680 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9c746f8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c744f0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x559ea9c74710 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9c74538 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559ea9c74728 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9c74570 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x559ea9c74740 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9c74668 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9c74650 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9c74608 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x559ea9c77450 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x559ea9c773b8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559ea9c77388 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x559ea9c77330 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559ea9c77300 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559ea9c772b0 <col:54, col:63> 'char [48]' lvalue ->c 0x559ea9c62780
|     |     |   `-CXXMemberCallExpr 0x559ea9c77290 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559ea9c74828 <col:54> '<bound member function type>' ->xanno 0x559ea9c54d88
|     |     |       `-CXXThisExpr 0x559ea9c74818 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559ea9c77318 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559ea9c772e0 <col:67> 'int' lvalue ParmVar 0x559ea9c58cf0 'i' 'int'
|     `-CXXConstCastExpr 0x559ea9c77420 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x559ea9c77408 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x559ea9c773d0 <col:91> 'const void *' lvalue ParmVar 0x559ea9c58d70 'x' 'const void *'
|-CXXMethodDecl 0x559ea9c58f18 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x559ea9c774f8 <col:34, line:640:5>
|   `-ReturnStmt 0x559ea9c774e8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x559ea9c774d0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x559ea9c774a0 <col:16> 'Packet *' lvalue ->_data_packet 0x559ea9c63338
|         `-CXXThisExpr 0x559ea9c77490 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x559ea9c59058 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x559ea9c58fc8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559ea9c6db78 <col:46> 'bool' true
|-CXXMethodDecl 0x559ea9c591d8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x559ea9c59110 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x559ea9c59280 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x559ea9c59a30 <line:660:22> "" ""
| |-EnumConstantDecl 0x559ea9c59380 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559ea9c59aa0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c59360 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x559ea9c59340 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x559ea9c4e4d0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x559ea9c59410 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559ea9c59ab8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c593f0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x559ea9c593d0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x559ea9c4e560 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x559ea9c594a0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559ea9c59ad0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c59480 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x559ea9c59460 <col:21> 'int' 0
| |-EnumConstantDecl 0x559ea9c59530 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559ea9c59ae8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c59510 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x559ea9c594f0 <col:19> 'int' 16
| |-EnumConstantDecl 0x559ea9c595c0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559ea9c59b00 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c595a0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x559ea9c59580 <col:21> 'int' 16
| |-EnumConstantDecl 0x559ea9c59650 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559ea9c59b18 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c59630 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x559ea9c59610 <col:19> 'int' 32
| |-EnumConstantDecl 0x559ea9c596e0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559ea9c59b30 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c596c0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x559ea9c596a0 <col:19> 'int' EnumConstant 0x559ea9c59530 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x559ea9c59770 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559ea9c59b48 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c59750 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x559ea9c59730 <col:19> 'int' EnumConstant 0x559ea9c59650 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x559ea9c59840 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559ea9c59b60 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c59820 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x559ea9c59800 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x559ea9c597c0 <col:23> 'int' EnumConstant 0x559ea9c59770 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x559ea9c597e0 <col:40> 'int' 2
| |-EnumConstantDecl 0x559ea9c59910 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559ea9c59b78 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c598f0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x559ea9c598d0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x559ea9c59890 <col:23> 'int' EnumConstant 0x559ea9c59770 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x559ea9c598b0 <col:40> 'int' 4
| `-EnumConstantDecl 0x559ea9c599e0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x559ea9c59b90 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9c599c0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x559ea9c599a0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x559ea9c59960 <col:23> 'int' EnumConstant 0x559ea9c59770 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x559ea9c59980 <col:40> 'int' 8
|-CXXMethodDecl 0x559ea9c59bd0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x559ea9c59c70 <col:68> "" ""
|-CXXMethodDecl 0x559ea9c59d08 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x559ea9c59da8 <col:45> "" ""
|-CXXMethodDecl 0x559ea9c59e40 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x559ea9c59ee0 <col:57> "" ""
|-CXXMethodDecl 0x559ea9c59f78 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x559ea9c5a018 <col:45> "" ""
|-CXXMethodDecl 0x559ea9c5a0b0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x559ea9c5a150 <col:57> "" ""
|-CXXMethodDecl 0x559ea9c5a1e0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x559ea9c5a280 <col:51> "" ""
|-CXXMethodDecl 0x559ea9c5f4f0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x559ea9c5f590 <col:63> "" ""
|-CXXMethodDecl 0x559ea9c5f620 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x559ea9c5f6c0 <col:53> "" ""
|-CXXMethodDecl 0x559ea9c5f750 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x559ea9c5f7f0 <col:65> "" ""
|-CXXMethodDecl 0x559ea9c5f908 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x559ea9c5f878 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x559ea9c5f9b0 <col:61> "" ""
|-CXXMethodDecl 0x559ea9c5fb48 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x559ea9c5fa38 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x559ea9c5fab0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x559ea9c5fbf8 <col:67> "" ""
|-CXXMethodDecl 0x559ea9c5fd10 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x559ea9c5fc80 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x559ea9c5fdb8 <col:63> "" ""
|-CXXMethodDecl 0x559ea9c5ff50 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x559ea9c5fe40 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x559ea9c5feb8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x559ea9c60000 <col:69> "" ""
|-CXXMethodDecl 0x559ea9c60118 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x559ea9c60088 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x559ea9c601c0 <col:63> "" ""
|-CXXMethodDecl 0x559ea9c60358 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c60248 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x559ea9c602c0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559ea9c60408 <col:69> "" ""
|-CXXMethodDecl 0x559ea9c60520 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x559ea9c60490 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x559ea9c605c8 <col:62> "" ""
|-CXXMethodDecl 0x559ea9c60760 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x559ea9c60650 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x559ea9c606c8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x559ea9c60810 <col:68> "" ""
|-CXXMethodDecl 0x559ea9c60928 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x559ea9c60898 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x559ea9c609d0 <col:63> "" ""
|-CXXMethodDecl 0x559ea9c60b68 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x559ea9c60a58 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x559ea9c60ad0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x559ea9c60c18 <col:69> "" ""
|-CXXMethodDecl 0x559ea9c60ca8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x559ea9c60d48 <col:64> "" ""
|-CXXMethodDecl 0x559ea9c60dd8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x559ea9c60e78 <col:52> "" ""
|-CXXMethodDecl 0x559ea9c60f08 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x559ea9c60fa8 <col:67> "" ""
|-CXXMethodDecl 0x559ea9c61038 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x559ea9c610d8 <col:55> "" ""
|-CXXMethodDecl 0x559ea9c611f0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x559ea9c61160 <col:32> col:35 'int'
| `-DeprecatedAttr 0x559ea9c61298 <col:58> "" ""
|-CXXMethodDecl 0x559ea9c61430 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x559ea9c61320 <col:33> col:36 'int'
| |-ParmVarDecl 0x559ea9c61398 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x559ea9c614e0 <col:62> "" ""
|-CXXMethodDecl 0x559ea9c615f8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x559ea9c61568 <col:32> col:35 'int'
| `-DeprecatedAttr 0x559ea9c616a0 <col:58> "" ""
|-CXXMethodDecl 0x559ea9c61838 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x559ea9c61728 <col:33> col:36 'int'
| |-ParmVarDecl 0x559ea9c617a0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x559ea9c618e8 <col:62> "" ""
|-CXXMethodDecl 0x559ea9c61a00 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x559ea9c61970 <col:34> col:37 'int'
| `-DeprecatedAttr 0x559ea9c61aa8 <col:60> "" ""
|-CXXMethodDecl 0x559ea9c61c40 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x559ea9c61b30 <col:34> col:37 'int'
| |-ParmVarDecl 0x559ea9c61ba8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x559ea9c61cf0 <col:64> "" ""
|-CXXMethodDecl 0x559ea9c61e08 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x559ea9c61d78 <col:32> col:35 'int'
| `-DeprecatedAttr 0x559ea9c61eb0 <col:58> "" ""
|-CXXMethodDecl 0x559ea9c62048 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x559ea9c61f38 <col:33> col:36 'int'
| |-ParmVarDecl 0x559ea9c61fb0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x559ea9c620f8 <col:62> "" ""
|-CXXMethodDecl 0x559ea9c62210 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x559ea9c62180 <col:33> col:36 'int'
| `-DeprecatedAttr 0x559ea9c622b8 <col:59> "" ""
|-CXXMethodDecl 0x559ea9c62450 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x559ea9c62340 <col:33> col:36 'int'
| |-ParmVarDecl 0x559ea9c623b8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559ea9c62500 <col:63> "" ""
|-AccessSpecDecl 0x559ea9c62570 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x559ea9c62598 prev 0x559ea9c54ac0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559ea9c62690 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x559ea9c62780 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x559ea9c628a8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x559ea9c62a28 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x559ea9c62ba8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x559ea9c62d28 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x559ea9c77678 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x559ea9c77ee8 <col:11>
| |-CXXDestructorDecl 0x559ea9c77750 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x559ea9c77888 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x559ea9c77888
| | `-ParmVarDecl 0x559ea9c77998 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x559ea9c77a38 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x559ea9c77a38
| | `-ParmVarDecl 0x559ea9c77b48 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x559ea9c7a878 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x559ea9c7a988 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x559ea9c7ac08 <col:11>
| |   `-ReturnStmt 0x559ea9c7abf8 <col:11>
| |     `-UnaryOperator 0x559ea9c7abe0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x559ea9c7abd0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x559ea9c7a9f8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x559ea9c7a9f8
|   `-ParmVarDecl 0x559ea9c7ab08 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x559ea9c62d90 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559ea9c62ea8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x559ea9c62f48 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x559ea9c62fb0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x559ea9c63018 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x559ea9c63080 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x559ea9c630e0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x559ea9c631a0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x559ea9c63200 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x559ea9c63260 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x559ea9c77588 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x559ea9c62f48 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x559ea9c77ef8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x559ea9c77f50 <col:12>
| |-CXXConstructorDecl 0x559ea9c77bb8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x559ea9c77bb8
| | `-ParmVarDecl 0x559ea9c77cc8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x559ea9c77d68 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x559ea9c77d68
| | `-ParmVarDecl 0x559ea9c77e78 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x559ea9c79f60 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x559ea9c632d8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x559ea9c63338 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x559ea9c633a0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x559ea9c63408 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x559ea9c6c860 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x559ea9c6c8c8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x559ea9c6c928 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x559ea9c6c988 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x559ea9c6c9f0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x559ea9c6ca78 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x559ea9c632d8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x559ea9c77520 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x559ea9c6c928 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x559ea9c77f60 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x559ea9c77fc0 <col:21, line:755:5>
|-CXXConstructorDecl 0x559ea9c6cc18 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x559ea9c6cb58 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x559ea9c6cd10 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x559ea9c6cef8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x559ea9c6ce00 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x559ea9c6d1c8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x559ea9c6cfb0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559ea9c6d028 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x559ea9c6d0a0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c6d3e8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x559ea9c6d298 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x559ea9c6d310 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x559ea9c6d6b8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x559ea9c6d4a8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x559ea9c6d520 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x559ea9c6d598 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x559ea9c6d810 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x559ea9c6d780 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c6d958 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x559ea9c6d8c8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x559ea9c6da50 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9c77fd0 prev 0x559ea9c4e0e0 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x559ea9c78108 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x559ea9c78198 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x559ea9c78240 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x559ea9c782e0 <col:20>
| `-OptimizeNoneAttr 0x559ea9c78338 <col:30>
|-CXXMethodDecl 0x559ea9c78388 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x559ea9c78428 <col:20>
| `-OptimizeNoneAttr 0x559ea9c78480 <col:30>
|-CXXMethodDecl 0x559ea9c784d0 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x559ea9c78598 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x559ea9c78660 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x559ea9c78778 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x559ea9c78840 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x559ea9c788e0 <col:20>
| `-OptimizeNoneAttr 0x559ea9c78938 <col:30>
|-CXXMethodDecl 0x559ea9c789a8 <line:787:5, col:62> col:50 used ip_header 'click_ip *() const'
| |-NoInlineAttr 0x559ea9c78a48 <col:20>
| `-OptimizeNoneAttr 0x559ea9c78aa0 <col:30>
|-CXXMethodDecl 0x559ea9c78b48 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x559ea9c78be8 <col:20>
| `-OptimizeNoneAttr 0x559ea9c78c40 <col:30>
|-CXXMethodDecl 0x559ea9c78c90 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x559ea9c78da8 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x559ea9c78ec8 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x559ea9c78fe8 <line:792:5, col:36> col:23 used udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x559ea9c790b0 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x559ea9c79150 <col:62> "" ""
|-AccessSpecDecl 0x559ea9c791c0 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x559ea9c79220 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x559ea9c79e18 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x559ea9c7a040 <col:29, col:31>
|-CXXMethodDecl 0x559ea9c792e8 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x559ea9c79428 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x559ea9c79398 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x559ea9c79520 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x559ea9c7a050 <col:23, col:25>
|-CXXMethodDecl 0x559ea9c796d8 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x559ea9c79610 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x559ea9c799a8 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x559ea9c79790 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559ea9c79808 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x559ea9c79880 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9c79b38 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x559ea9c79a70 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x559ea9c79c30 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x559ea9c79c98 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x559ea9c79c98
  `-ParmVarDecl 0x559ea9c79da8 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea99b8978 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea99b8a98 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x559ea99b8b60 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x559ea9a92860 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x559ea9a956b8 <col:8>
|-CXXConstructorDecl 0x559ea9a92968 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x559ea9a92968
| `-ParmVarDecl 0x559ea9a92a78 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x559ea9a92b18 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9a92c28 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x559ea99b8b60 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x559ea9a958d0 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x559ea9a958a0 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x559ea99b8b60
| |     `-CXXStaticCastExpr 0x559ea9a95870 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9a95840 <col:8> 'in_addr' lvalue ParmVar 0x559ea9a92c28 '' 'in_addr &&'
| `-CompoundStmt 0x559ea9a95918 <col:8>
|-CXXDestructorDecl 0x559ea9a95b50 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x559ea9e7be50 <col:8> col:8 implicit constexpr operator= 'in_addr &(const in_addr &)' inline default trivial noexcept-unevaluated 0x559ea9e7be50
| `-ParmVarDecl 0x559ea9e7bf58 <col:8> col:8 'const in_addr &'
`-CXXMethodDecl 0x559ea9e7bfc8 <col:8> col:8 implicit used constexpr operator= 'in_addr &(in_addr &&) noexcept' inline default trivial
  |-ParmVarDecl 0x559ea9e7c0d8 <col:8> col:8 used 'in_addr &&'
  `-CompoundStmt 0x559ea9e7c390 <col:8>
    |-BinaryOperator 0x559ea9e7c338 <col:8> 'in_addr_t':'unsigned int' lvalue '='
    | |-MemberExpr 0x559ea9e7c2f0 <col:8> 'in_addr_t':'unsigned int' lvalue ->s_addr 0x559ea99b8b60
    | | `-CXXThisExpr 0x559ea9e7c2e0 <col:8> 'in_addr *' this
    | `-ImplicitCastExpr 0x559ea9e7c320 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x559ea9e7c2b0 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x559ea99b8b60
    |     `-CXXStaticCastExpr 0x559ea9e7c280 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
    |       `-DeclRefExpr 0x559ea9e7c250 <col:8> 'in_addr' lvalue ParmVar 0x559ea9e7c0d8 '' 'in_addr &&'
    `-ReturnStmt 0x559ea9e7c380 <col:8>
      `-UnaryOperator 0x559ea9e7c368 <col:8> 'in_addr' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x559ea9e7c358 <col:8> 'in_addr *' this

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9a87408 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x559ea9a87528 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x559ea9a87610 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x559ea9a875f0 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x559ea9a875b8 <col:22> 'int' 4
|-FieldDecl 0x559ea9a876b8 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x559ea9a87698 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x559ea9a87660 <col:21> 'int' 4
|-FieldDecl 0x559ea9a87718 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x559ea9a87778 <line:40:5, col:14> col:14 ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x559ea9a877d8 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x559ea9a87838 <line:42:5, col:14> col:14 referenced ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x559ea9a87898 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x559ea9a878f8 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x559ea9a87958 <line:49:5, col:14> col:14 referenced ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x559ea9a879c8 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x559ea9a87a38 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping AST Record Layout
         0 | struct click_udp
         0 |   uint16_t uh_sport
         2 |   uint16_t uh_dport
         4 |   uint16_t uh_ulen
         6 |   uint16_t uh_sum
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9e7afc8 prev 0x559ea9c4df80 <../dummy_inc/clicknet/udp.h:11:1, line:16:1> line:11:8 referenced struct click_udp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x559ea9e7b0c0 <col:1, col:8> col:8 implicit struct click_udp
|-FieldDecl 0x559ea9e7b160 <line:12:5, col:14> col:14 referenced uh_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x559ea9e7b1c0 <line:13:5, col:14> col:14 referenced uh_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x559ea9e7b220 <line:14:5, col:14> col:14 uh_ulen 'uint16_t':'unsigned short'
`-FieldDecl 0x559ea9e7b280 <line:15:5, col:14> col:14 referenced uh_sum 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9e7a9b0 prev 0x559ea9c4ded0 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 referenced struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x559ea9e7aaa8 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x559ea9e7ab48 <line:25:5, col:14> col:14 th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x559ea9e7aba8 <line:26:5, col:14> col:14 th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x559ea9e7ac30 <line:27:5, col:15> col:15 th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x559ea9e7ac90 <line:28:5, col:15> col:15 th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x559ea9e7ad38 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x559ea9e7ad18 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x559ea9e7ace0 <col:26> 'int' 4
|-FieldDecl 0x559ea9e7ade0 <line:31:5, col:23> col:14 th_off 'unsigned int'
| `-ConstantExpr 0x559ea9e7adc0 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x559ea9e7ad88 <col:23> 'int' 4
|-FieldDecl 0x559ea9e7ae40 <line:39:5, col:13> col:13 th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x559ea9e7aea0 <line:48:5, col:14> col:14 th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x559ea9e7af00 <line:49:5, col:14> col:14 referenced th_sum 'uint16_t':'unsigned short'
`-FieldDecl 0x559ea9e7af60 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | class HashAllocator
         0 |   struct HashAllocator::link * _free
         8 |   struct HashAllocator::buffer * _buffer
        16 |   size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class SizedHashAllocator<72>
         0 |   class HashAllocator (base)
         0 |     struct HashAllocator::link * _free
         8 |     struct HashAllocator::buffer * _buffer
        16 |     size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class UDPRewriter
         0 |   class IPRewriterBase (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |     class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |       class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |         class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |         class IPRewriterEntry ** buckets
       120 |         uint32_t nbuckets
       124 |         uint32_t first_bucket
       128 |         size_t size
       136 |         struct libdivide_u32_t bucket_divider
       136 |           uint32_t magic
       140 |           uint8_t more
       144 |     class Vector<class IPRewriterInput> _input_specs
       144 |       class vector_memory<class sized_array_memory<56> > vm_
       144 |         vector_memory<class sized_array_memory<56> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       160 |     class IPRewriterHeap * _heap
       168 |     uint32_t [2] _timeouts
       176 |     uint32_t _gc_interval_sec
       184 |     class Timer _gc_timer
       184 |       int _schedpos1
       192 |       class Timestamp _expiry_s
       192 |         union Timestamp::rep_t _t
       192 |           int64_t x
       200 |       union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |         TimerCallback callback
       208 |       void * _thunk
       216 |       class Element * _owner
       224 |       class RouterThread * _thread
       232 |   class SizedHashAllocator<72> _allocator
       232 |     class HashAllocator (base)
       232 |       struct HashAllocator::link * _free
       240 |       struct HashAllocator::buffer * _buffer
       248 |       size_t _size
       256 |   unsigned int _annos
       260 |   uint32_t _udp_streaming_timeout
           | [sizeof=264, dsize=264, align=8,
           |  nvsize=264, nvalign=8]

*** Dumping AST Record Layout
         0 | struct HashAllocator::link
         0 |   struct HashAllocator::link * next
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9cf9f48 <../dummy_inc/click/hashallocator.hh:26:5, line:28:5> line:26:12 referenced struct link definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x559ea9cfa068 <col:5, col:12> col:12 implicit referenced struct link
`-FieldDecl 0x559ea9cfa138 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashAllocator::buffer
         0 |   struct HashAllocator::buffer * next
         8 |   size_t pos
        16 |   size_t maxpos
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9cfa1a0 <../dummy_inc/click/hashallocator.hh:30:5, line:34:5> line:30:12 referenced struct buffer definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x559ea9cfa2b8 <col:5, col:12> col:12 implicit referenced struct buffer
|-FieldDecl 0x559ea9cfa388 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
|-FieldDecl 0x559ea9cfa3e8 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
`-FieldDecl 0x559ea9cfa448 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9cf9560 <../dummy_inc/click/hashallocator.hh:9:1, line:55:1> line:9:7 referenced class HashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559ea9cf9678 <col:1, col:7> col:7 implicit referenced class HashAllocator
|-AccessSpecDecl 0x559ea9cf9708 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x559ea9cf9848 <line:11:5, col:30> col:5 referenced HashAllocator 'void (size_t)'
| `-ParmVarDecl 0x559ea9cf9740 <col:19, col:26> col:26 size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x559ea9cf9940 <line:12:5, col:20> col:5 used ~HashAllocator 'void () noexcept'
|-CXXMethodDecl 0x559ea9cf9ac0 <line:14:5, line:17:5> line:14:17 increase_size 'void (size_t)' inline
| |-ParmVarDecl 0x559ea9cf9a30 <col:31, col:38> col:38 used new_size 'size_t':'unsigned long'
| `-CompoundStmt 0x559ea9cfc6d0 <col:48, line:17:5>
|   |-ParenExpr 0x559ea9cfc618 <line:15:2, col:212> 'void'
|   | `-ConditionalOperator 0x559ea9cfc5e8 <col:3, col:211> 'void'
|   |   |-CXXStaticCastExpr 0x559ea9cfae80 <col:3, col:62> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559ea9cfae50 <col:23, col:57> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559ea9cfad80 <col:23, col:34> 'bool' '&&'
|   |   |   | |-UnaryOperator 0x559ea9cface0 <col:23, col:24> 'bool' prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x559ea9cfacc8 <col:24> 'bool' <PointerToBoolean>
|   |   |   | |   `-ImplicitCastExpr 0x559ea9cfacb0 <col:24> 'HashAllocator::link *' <LValueToRValue>
|   |   |   | |     `-MemberExpr 0x559ea9cfac80 <col:24> 'HashAllocator::link *' lvalue ->_free 0x559ea9cfa778
|   |   |   | |       `-CXXThisExpr 0x559ea9cfac70 <col:24> 'HashAllocator *' implicit this
|   |   |   | `-UnaryOperator 0x559ea9cfad68 <col:33, col:34> 'bool' prefix '!' cannot overflow
|   |   |   |   `-ImplicitCastExpr 0x559ea9cfad50 <col:34> 'bool' <PointerToBoolean>
|   |   |   |     `-ImplicitCastExpr 0x559ea9cfad38 <col:34> 'HashAllocator::buffer *' <LValueToRValue>
|   |   |   |       `-MemberExpr 0x559ea9cfad08 <col:34> 'HashAllocator::buffer *' lvalue ->_buffer 0x559ea9cfa7d8
|   |   |   |         `-CXXThisExpr 0x559ea9cfacf8 <col:34> 'HashAllocator *' implicit this
|   |   |   `-BinaryOperator 0x559ea9cfae30 <col:45, col:57> 'bool' '>='
|   |   |     |-ImplicitCastExpr 0x559ea9cfae00 <col:45> 'size_t':'unsigned long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559ea9cfada0 <col:45> 'size_t':'unsigned long' lvalue ParmVar 0x559ea9cf9a30 'new_size' 'size_t':'unsigned long'
|   |   |     `-ImplicitCastExpr 0x559ea9cfae18 <col:57> 'size_t':'unsigned long' <LValueToRValue>
|   |   |       `-MemberExpr 0x559ea9cfadd0 <col:57> 'size_t':'unsigned long' lvalue ->_size 0x559ea9cfa838
|   |   |         `-CXXThisExpr 0x559ea9cfadc0 <col:57> 'HashAllocator *' implicit this
|   |   |-CXXFunctionalCastExpr 0x559ea9cfc310 <col:66, col:73> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559ea9cfc2f0 <col:72> 'int' 0
|   |   `-CallExpr 0x559ea9cfc548 <col:77, col:211> 'void'
|   |     |-ImplicitCastExpr 0x559ea9cfc530 <col:77> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559ea9cfc510 <col:77> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559ea9cfc588 <col:92> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9cfc380 <col:92> 'const char [40]' lvalue "!_free && !_buffer && new_size >= _size"
|   |     |-ImplicitCastExpr 0x559ea9cfc5a0 <col:135> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559ea9cfc3c0 <col:135> 'const char [36]' lvalue "../dummy_inc/click/hashallocator.hh"
|   |     |-ImplicitCastExpr 0x559ea9cfc5b8 <col:174> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559ea9cfc400 <col:174> 'int' 15
|   |     `-ImplicitCastExpr 0x559ea9cfc5d0 <col:178, col:192> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559ea9cfc4f8 <col:178, col:192> 'const char [42]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559ea9cfc4e0 <col:192> 'const char [42]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559ea9cfc498 <col:192> 'const char [42]' lvalue "void HashAllocator::increase_size(size_t)"
|   `-BinaryOperator 0x559ea9cfc6b0 <line:16:2, col:10> 'size_t':'unsigned long' lvalue '='
|     |-MemberExpr 0x559ea9cfc648 <col:2> 'size_t':'unsigned long' lvalue ->_size 0x559ea9cfa838
|     | `-CXXThisExpr 0x559ea9cfc638 <col:2> 'HashAllocator *' implicit this
|     `-ImplicitCastExpr 0x559ea9cfc698 <col:10> 'size_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9cfc678 <col:10> 'size_t':'unsigned long' lvalue ParmVar 0x559ea9cf9a30 'new_size' 'size_t':'unsigned long'
|-CXXMethodDecl 0x559ea9cf9b90 <line:19:5, col:27> col:18 allocate 'void *()' inline
|-CXXMethodDecl 0x559ea9cf9cd8 <line:20:5, col:35> col:17 used deallocate 'void (void *)' inline
| `-ParmVarDecl 0x559ea9cf9c48 <col:28, col:34> col:34 p 'void *'
|-CXXMethodDecl 0x559ea9cf9e78 <line:22:5, col:31> col:10 swap 'void (HashAllocator &)'
| `-ParmVarDecl 0x559ea9cf9db8 <col:15, col:30> col:30 x 'HashAllocator &'
|-AccessSpecDecl 0x559ea9cf9f20 <line:24:3, col:10> col:3 private
|-CXXRecordDecl 0x559ea9cf9f48 <line:26:5, line:28:5> line:26:12 referenced struct link definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x559ea9cfa068 <col:5, col:12> col:12 implicit referenced struct link
| `-FieldDecl 0x559ea9cfa138 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'
|-CXXRecordDecl 0x559ea9cfa1a0 <line:30:5, line:34:5> line:30:12 referenced struct buffer definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x559ea9cfa2b8 <col:5, col:12> col:12 implicit referenced struct buffer
| |-FieldDecl 0x559ea9cfa388 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
| |-FieldDecl 0x559ea9cfa3e8 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
| `-FieldDecl 0x559ea9cfa448 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'
|-EnumDecl 0x559ea9cfa4b0 <line:36:5, line:44:5> line:36:5
| |-EnumConstantDecl 0x559ea9cfa5b0 <line:37:2, col:20> col:2 min_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x559ea9cfa720 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9cfa590 <col:20> 'int' Int: 1024
| |     `-IntegerLiteral 0x559ea9cfa570 <col:20> 'int' 1024
| |-EnumConstantDecl 0x559ea9cfa640 <line:41:2, col:20> col:2 max_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x559ea9cfa738 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9cfa620 <col:20> 'int' Int: 1048576
| |     `-IntegerLiteral 0x559ea9cfa600 <col:20> 'int' 1048576
| `-EnumConstantDecl 0x559ea9cfa6d0 <line:43:2, col:18> col:2 min_nelements 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
|   `-ImplicitCastExpr 0x559ea9cfa750 <col:18> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9cfa6b0 <col:18> 'int' Int: 8
|       `-IntegerLiteral 0x559ea9cfa690 <col:18> 'int' 8
|-FieldDecl 0x559ea9cfa778 <line:46:5, col:11> col:11 referenced _free 'HashAllocator::link *'
|-FieldDecl 0x559ea9cfa7d8 <line:47:5, col:13> col:13 referenced _buffer 'HashAllocator::buffer *'
|-FieldDecl 0x559ea9cfa838 <line:48:5, col:12> col:12 referenced _size 'size_t':'unsigned long'
|-CXXMethodDecl 0x559ea9cfa8b0 <line:50:5, col:25> col:11 used hard_allocate 'void *()'
|-CXXConstructorDecl 0x559ea9cfaa48 <line:52:5, col:41> col:5 HashAllocator 'void (const HashAllocator &)'
| `-ParmVarDecl 0x559ea9cfa988 <col:19, col:40> col:40 x 'const HashAllocator &'
`-CXXMethodDecl 0x559ea9cfabc8 <line:53:5, col:52> col:20 operator= 'HashAllocator &(const HashAllocator &)'
  `-ParmVarDecl 0x559ea9cfab08 <col:30, col:51> col:51 x 'const HashAllocator &'

Layout: <CGRecordLayout
  LLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  NonVirtualBaseLLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9d8fae8 <../dummy_inc/click/hashallocator.hh:58:1, line:65:1> line:59:7 class SizedHashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'HashAllocator'
|-TemplateArgument integral 72
|-CXXRecordDecl 0x559ea9d8fd28 prev 0x559ea9d8fae8 <col:1, col:7> col:7 implicit class SizedHashAllocator
|-AccessSpecDecl 0x559ea9d8fdb8 <col:51, col:57> col:51 public
|-CXXConstructorDecl 0x559ea9d8fe18 <line:61:5, line:63:5> line:61:5 used SizedHashAllocator 'void ()'
|-CXXConstructorDecl 0x559ea9d8fef8 <line:59:7> col:7 implicit SizedHashAllocator 'void (const SizedHashAllocator<72> &)' inline default_delete noexcept-unevaluated 0x559ea9d8fef8
| `-ParmVarDecl 0x559ea9d90008 <col:7> col:7 'const SizedHashAllocator<72> &'
|-CXXConstructorDecl 0x559ea9d900a8 <col:7> col:7 implicit SizedHashAllocator 'void (SizedHashAllocator<72> &&)' inline default_delete noexcept-unevaluated 0x559ea9d900a8
| `-ParmVarDecl 0x559ea9d901b8 <col:7> col:7 'SizedHashAllocator<72> &&'
|-CXXMethodDecl 0x559ea9d90258 <col:7> col:7 implicit operator= 'SizedHashAllocator<72> &(SizedHashAllocator<72> &&)' inline default_delete noexcept-unevaluated 0x559ea9d90258
| `-ParmVarDecl 0x559ea9d90368 <col:7> col:7 'SizedHashAllocator<72> &&'
`-CXXDestructorDecl 0x559ea9d903f0 <col:7> col:7 implicit used ~SizedHashAllocator 'void () noexcept' inline default
  `-CompoundStmt 0x559ea9e89278 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  NonVirtualBaseLLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9d8dc60 <../elements/tcpudp/udprewriter.hh:163:1, line:218:1> line:163:7 class UDPRewriter definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'IPRewriterBase'
|-CXXRecordDecl 0x559ea9d8ddb8 <col:1, col:7> col:7 implicit referenced class UDPRewriter
|-AccessSpecDecl 0x559ea9d8de48 <col:45, col:51> col:45 public
|-CXXRecordDecl 0x559ea9d8de70 <line:165:5, line:180:5> line:165:11 referenced class UDPFlow definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-public 'IPRewriterFlow'
| |-CXXRecordDecl 0x559ea9d8dfc8 <col:5, col:11> col:11 implicit referenced class UDPFlow
| |-AccessSpecDecl 0x559ea9d8e058 <col:45, col:51> col:45 public
| |-CXXConstructorDecl 0x559ea9d8e4a8 <line:167:2, line:172:2> line:167:2 UDPFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, int, bool, click_jiffies_t)'
| | |-ParmVarDecl 0x559ea9d8e090 <col:10, col:27> col:27 used owner 'IPRewriterInput *'
| | |-ParmVarDecl 0x559ea9d8e108 <col:34, col:50> col:50 used flowid 'const IPFlowID &'
| | |-ParmVarDecl 0x559ea9d8e180 <line:168:3, col:19> col:19 used rewritten_flowid 'const IPFlowID &'
| | |-ParmVarDecl 0x559ea9d8e200 <col:37, col:41> col:41 used ip_p 'int'
| | |-ParmVarDecl 0x559ea9d8e278 <line:169:3, col:8> col:8 used guaranteed 'bool'
| | |-ParmVarDecl 0x559ea9d8e2f0 <col:20, col:36> col:36 used expiry_j 'click_jiffies_t':'unsigned int'
| | |-CXXCtorInitializer 'IPRewriterFlow'
| | | `-CXXConstructExpr 0x559ea9d916f0 <line:170:8, line:171:35> 'IPRewriterFlow' 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| | |   |-ImplicitCastExpr 0x559ea9d91678 <line:170:23> 'IPRewriterInput *' <LValueToRValue>
| | |   | `-DeclRefExpr 0x559ea9d90df8 <col:23> 'IPRewriterInput *' lvalue ParmVar 0x559ea9d8e090 'owner' 'IPRewriterInput *'
| | |   |-DeclRefExpr 0x559ea9d90e18 <col:30> 'const IPFlowID' lvalue ParmVar 0x559ea9d8e108 'flowid' 'const IPFlowID &'
| | |   |-DeclRefExpr 0x559ea9d90e38 <col:38> 'const IPFlowID' lvalue ParmVar 0x559ea9d8e180 'rewritten_flowid' 'const IPFlowID &'
| | |   |-ImplicitCastExpr 0x559ea9d916a8 <line:171:9> 'uint8_t':'unsigned char' <IntegralCast>
| | |   | `-ImplicitCastExpr 0x559ea9d91690 <col:9> 'int' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x559ea9d90e58 <col:9> 'int' lvalue ParmVar 0x559ea9d8e200 'ip_p' 'int'
| | |   |-ImplicitCastExpr 0x559ea9d916c0 <col:15> 'bool' <LValueToRValue>
| | |   | `-DeclRefExpr 0x559ea9d90e78 <col:15> 'bool' lvalue ParmVar 0x559ea9d8e278 'guaranteed' 'bool'
| | |   `-ImplicitCastExpr 0x559ea9d916d8 <col:27> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| | |     `-DeclRefExpr 0x559ea9d90e98 <col:27> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x559ea9d8e2f0 'expiry_j' 'click_jiffies_t':'unsigned int'
| | `-CompoundStmt 0x559ea9d91778 <col:37, line:172:2>
| |-CXXMethodDecl 0x559ea9d8e5c8 <line:174:2, line:176:2> line:174:7 used streaming 'bool () const'
| | `-CompoundStmt 0x559ea9d91868 <col:25, line:176:2>
| |   `-ReturnStmt 0x559ea9d91858 <line:175:6, col:23>
| |     `-BinaryOperator 0x559ea9d91838 <col:13, col:23> 'bool' '>'
| |       |-ImplicitCastExpr 0x559ea9d91820 <col:13> 'int' <IntegralCast>
| |       | `-ImplicitCastExpr 0x559ea9d91808 <col:13> 'uint8_t':'unsigned char' <LValueToRValue>
| |       |   `-MemberExpr 0x559ea9d917b8 <col:13> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x559ea9d3f3f8
| |       |     `-ImplicitCastExpr 0x559ea9d91798 <col:13> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
| |       |       `-CXXThisExpr 0x559ea9d91788 <col:13> 'const UDPRewriter::UDPFlow *' implicit this
| |       `-IntegerLiteral 0x559ea9d917e8 <col:23> 'int' 6
| `-CXXMethodDecl 0x559ea9d8e810 <line:178:2, col:62> col:7 apply 'void (WritablePacket *, bool, unsigned int)'
|   |-ParmVarDecl 0x559ea9d8e678 <col:13, col:29> col:29 p 'WritablePacket *'
|   |-ParmVarDecl 0x559ea9d8e6f0 <col:32, col:37> col:37 direction 'bool'
|   `-ParmVarDecl 0x559ea9d8e770 <col:48, col:57> col:57 annos 'unsigned int'
|-CXXConstructorDecl 0x559ea9d8e940 <line:182:5, col:17> col:5 UDPRewriter 'void ()'
|-CXXDestructorDecl 0x559ea9d8ea30 <line:183:5, col:18> col:5 ~UDPRewriter 'void ()' noexcept-unevaluated 0x559ea9d8ea30
| `-Overrides: [ 0x559ea9d68d08 IPRewriterBase::~IPRewriterBase 'void () noexcept' ]
|-CXXMethodDecl 0x559ea9d8eb60 <line:185:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x559ea9c8f048 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x559ea9d918d0 <col:36, col:60>
|   `-ReturnStmt 0x559ea9d918c0 <col:38, col:45>
|     `-ImplicitCastExpr 0x559ea9d918a8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x559ea9d91880 <col:45> 'const char [12]' lvalue "UDPRewriter"
|-CXXMethodDecl 0x559ea9d8ecb0 <line:186:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x559ea9c8fd40 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x559ea9d8ec18 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x559ea9d8ef90 <line:188:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x559ea9d696b0 IPRewriterBase::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x559ea9d8ee40 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x559ea9d8eeb8 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9d8f270 <line:190:5, line:191:53> line:190:22 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)'
| |-Overrides: [ 0x559ea9d6a828 IPRewriterBase::add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' ]
| |-ParmVarDecl 0x559ea9d8f058 <col:31, col:35> col:35 ip_p 'int'
| |-ParmVarDecl 0x559ea9d8f0d0 <col:41, col:57> col:57 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x559ea9d8f148 <line:191:10, col:26> col:26 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x559ea9d8f1c8 <col:44, col:48> col:48 input 'int'
|-CXXMethodDecl 0x559ea9d8f3d0 <line:192:5, col:43> col:10 destroy_flow 'void (IPRewriterFlow *)'
| |-Overrides: [ 0x559ea9d6a988 IPRewriterBase::destroy_flow 'void (IPRewriterFlow *)' ]
| `-ParmVarDecl 0x559ea9d8f340 <col:23, col:39> col:39 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x559ea9d8f518 <line:193:5, line:195:5> line:193:21 best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)'
| |-Overrides: [ 0x559ea9d6ab38 IPRewriterBase::best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' ]
| |-ParmVarDecl 0x559ea9d8f488 <col:40, col:62> col:62 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x559ea9d91ba8 <col:68, line:195:5>
|   `-ReturnStmt 0x559ea9d91b98 <line:194:2, col:92>
|     `-BinaryOperator 0x559ea9d91b78 <col:9, col:92> 'unsigned int' '-'
|       |-BinaryOperator 0x559ea9d91a88 <col:9, col:77> 'unsigned int' '+'
|       | |-CXXMemberCallExpr 0x559ea9d91950 <col:9, col:22> 'click_jiffies_t':'unsigned int'
|       | | `-MemberExpr 0x559ea9d91920 <col:9, col:15> '<bound member function type>' ->expiry 0x559ea9d3ce20
|       | |   `-ImplicitCastExpr 0x559ea9d91908 <col:9> 'const IPRewriterFlow *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x559ea9d918e8 <col:9> 'const IPRewriterFlow *' lvalue ParmVar 0x559ea9d8f488 'flow' 'const IPRewriterFlow *'
|       | `-ImplicitCastExpr 0x559ea9d91a70 <col:26, col:77> 'unsigned int' <IntegralCast>
|       |   `-CXXMemberCallExpr 0x559ea9d91a30 <col:26, col:77> 'int'
|       |     |-MemberExpr 0x559ea9d91980 <col:26> '<bound member function type>' ->udp_flow_timeout 0x559ea9d906c0
|       |     | `-ImplicitCastExpr 0x559ea9d91a58 <col:26> 'const UDPRewriter *' <NoOp>
|       |     |   `-CXXThisExpr 0x559ea9d91970 <col:26> 'UDPRewriter *' implicit this
|       |     `-CXXStaticCastExpr 0x559ea9d919f8 <col:43, col:76> 'const UDPRewriter::UDPFlow *' static_cast<const class UDPRewriter::UDPFlow *> <BaseToDerived (IPRewriterFlow)>
|       |       `-ImplicitCastExpr 0x559ea9d919e0 <col:72> 'const IPRewriterFlow *' <LValueToRValue> part_of_explicit_cast
|       |         `-DeclRefExpr 0x559ea9d919b0 <col:72> 'const IPRewriterFlow *' lvalue ParmVar 0x559ea9d8f488 'flow' 'const IPRewriterFlow *'
|       `-ImplicitCastExpr 0x559ea9d91b60 <col:81, col:92> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-ArraySubscriptExpr 0x559ea9d91b40 <col:81, col:92> 'uint32_t':'unsigned int' lvalue
|           |-ImplicitCastExpr 0x559ea9d91b28 <col:81> 'uint32_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x559ea9d91ad8 <col:81> 'uint32_t [2]' lvalue ->_timeouts 0x559ea9d7ef18
|           |   `-ImplicitCastExpr 0x559ea9d91ab8 <col:81> 'IPRewriterBase *' <UncheckedDerivedToBase (IPRewriterBase)>
|           |     `-CXXThisExpr 0x559ea9d91aa8 <col:81> 'UDPRewriter *' implicit this
|           `-IntegerLiteral 0x559ea9d91b08 <col:91> 'int' 1
|-CXXMethodDecl 0x559ea9d8f6e8 <line:197:5, col:28> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x559ea9c8deb8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x559ea9d8f5d8 <col:15> col:18 'int'
| `-ParmVarDecl 0x559ea9d8f650 <col:20, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x559ea9d8f7b8 <line:199:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x559ea9c909e0 Element::add_handlers 'void ()' ]
|-AccessSpecDecl 0x559ea9d8f858 <line:201:3, col:10> col:3 private
|-FieldDecl 0x559ea9d904d0 <line:203:5, col:41> col:41 referenced _allocator 'SizedHashAllocator<sizeof(UDPRewriter::UDPFlow)>':'SizedHashAllocator<72>'
|-FieldDecl 0x559ea9d90538 <line:204:5, col:14> col:14 _annos 'unsigned int'
|-FieldDecl 0x559ea9d90598 <line:205:5, col:14> col:14 referenced _udp_streaming_timeout 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559ea9d906c0 <line:207:5, line:212:5> line:207:9 used udp_flow_timeout 'int (const UDPRewriter::UDPFlow *) const'
| |-ParmVarDecl 0x559ea9d905f8 <col:26, col:41> col:41 used mf 'const UDPRewriter::UDPFlow *'
| `-CompoundStmt 0x559ea9d91de8 <col:51, line:212:5>
|   `-IfStmt 0x559ea9d91dc0 <line:208:2, line:211:24> has_else
|     |-CXXMemberCallExpr 0x559ea9d91c28 <line:208:6, col:20> 'bool'
|     | `-MemberExpr 0x559ea9d91bf8 <col:6, col:10> '<bound member function type>' ->streaming 0x559ea9d8e5c8
|     |   `-ImplicitCastExpr 0x559ea9d91be0 <col:6> 'const UDPRewriter::UDPFlow *' <LValueToRValue>
|     |     `-DeclRefExpr 0x559ea9d91bc0 <col:6> 'const UDPRewriter::UDPFlow *' lvalue ParmVar 0x559ea9d905f8 'mf' 'const UDPRewriter::UDPFlow *'
|     |-ReturnStmt 0x559ea9d91cb8 <line:209:6, col:13>
|     | `-ImplicitCastExpr 0x559ea9d91ca0 <col:13> 'int' <IntegralCast>
|     |   `-ImplicitCastExpr 0x559ea9d91c88 <col:13> 'uint32_t':'unsigned int' <LValueToRValue>
|     |     `-MemberExpr 0x559ea9d91c58 <col:13> 'const uint32_t':'const unsigned int' lvalue ->_udp_streaming_timeout 0x559ea9d90598
|     |       `-CXXThisExpr 0x559ea9d91c48 <col:13> 'const UDPRewriter *' implicit this
|     `-ReturnStmt 0x559ea9d91db0 <line:211:6, col:24>
|       `-ImplicitCastExpr 0x559ea9d91d98 <col:13, col:24> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x559ea9d91d80 <col:13, col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-ArraySubscriptExpr 0x559ea9d91d60 <col:13, col:24> 'const uint32_t':'const unsigned int' lvalue
|             |-ImplicitCastExpr 0x559ea9d91d48 <col:13> 'const uint32_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559ea9d91cf8 <col:13> 'uint32_t const[2]' lvalue ->_timeouts 0x559ea9d7ef18
|             |   `-ImplicitCastExpr 0x559ea9d91cd8 <col:13> 'IPRewriterBase *' <UncheckedDerivedToBase (IPRewriterBase)>
|             |     `-CXXThisExpr 0x559ea9d91cc8 <col:13> 'const UDPRewriter *' implicit this
|             `-IntegerLiteral 0x559ea9d91d28 <col:23> 'int' 0
|-CXXMethodDecl 0x559ea9d90890 <line:214:5, col:58> col:19 dump_mappings_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x559ea9d90778 <col:41, col:49> col:50 'Element *'
| `-ParmVarDecl 0x559ea9d907f8 <col:52, col:57> col:58 'void *'
|-FriendDecl 0x559ea9d90a58 <line:216:5, col:18> col:12 'class IPRewriter':'IPRewriter'
|-CXXConstructorDecl 0x559ea9d90ac8 <line:163:7> col:7 implicit UDPRewriter 'void (const UDPRewriter &)' inline default_delete noexcept-unevaluated 0x559ea9d90ac8
| `-ParmVarDecl 0x559ea9d90bd8 <col:7> col:7 'const UDPRewriter &'
`-CXXMethodDecl 0x559ea9d90c78 <col:7> col:7 implicit operator= 'UDPRewriter &(const UDPRewriter &)' inline default_delete noexcept-unevaluated 0x559ea9d90c78
  `-ParmVarDecl 0x559ea9d90d88 <col:7> col:7 'const UDPRewriter &'

Layout: <CGRecordLayout
  LLVMType:%class.UDPRewriter = type { %class.IPRewriterBase, %class.SizedHashAllocator, i32, i32 }
  NonVirtualBaseLLVMType:%class.UDPRewriter = type { %class.IPRewriterBase, %class.SizedHashAllocator, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9a5f840 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x559ea9a5f958 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x559ea9a5f9f8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x559ea9a5fa58 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x559ea9a5fab8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x559ea9a5fb68 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9a5fe70 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9a5ff88 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x559ea9a60030 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x559ea9a60098 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x559ea9a60128 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x559ea9a647c0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x559ea9a64bf8 <col:12>
|-CXXConstructorDecl 0x559ea9a648c8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9a649d8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x559ea9a60030 'data' 'const char *'
| | `-ImplicitCastExpr 0x559ea9a68040 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x559ea9a68010 <col:12> 'const char *const' lvalue .data 0x559ea9a60030
| |     `-DeclRefExpr 0x559ea9a67ff0 <col:12> 'const String::rep_t' lvalue ParmVar 0x559ea9a649d8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x559ea9a60098 'length' 'int'
| | `-ImplicitCastExpr 0x559ea9a680d0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x559ea9a680a0 <col:12> 'const int' lvalue .length 0x559ea9a60098
| |     `-DeclRefExpr 0x559ea9a68080 <col:12> 'const String::rep_t' lvalue ParmVar 0x559ea9a649d8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x559ea9a60128 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x559ea9a68160 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x559ea9a68130 <col:12> 'String::memo_t *const' lvalue .memo 0x559ea9a60128
| |     `-DeclRefExpr 0x559ea9a68110 <col:12> 'const String::rep_t' lvalue ParmVar 0x559ea9a649d8 '' 'const String::rep_t &'
| `-CompoundStmt 0x559ea9a681b8 <col:12>
|-CXXConstructorDecl 0x559ea9a64a78 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x559ea9a64a78
| `-ParmVarDecl 0x559ea9a64b88 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x559ea9a6aee0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x559ea9a74568 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9a74678 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x559ea9a74b90 <col:12>
|   |-BinaryOperator 0x559ea9a749a8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x559ea9a74960 <col:12> 'const char *' lvalue ->data 0x559ea9a60030
|   | | `-CXXThisExpr 0x559ea9a74950 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x559ea9a74990 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x559ea9a74920 <col:12> 'const char *const' lvalue .data 0x559ea9a60030
|   |     `-DeclRefExpr 0x559ea9a74900 <col:12> 'const String::rep_t' lvalue ParmVar 0x559ea9a74678 '' 'const String::rep_t &'
|   |-BinaryOperator 0x559ea9a74a70 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x559ea9a74a28 <col:12> 'int' lvalue ->length 0x559ea9a60098
|   | | `-CXXThisExpr 0x559ea9a74a18 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x559ea9a74a58 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x559ea9a749e8 <col:12> 'const int' lvalue .length 0x559ea9a60098
|   |     `-DeclRefExpr 0x559ea9a749c8 <col:12> 'const String::rep_t' lvalue ParmVar 0x559ea9a74678 '' 'const String::rep_t &'
|   |-BinaryOperator 0x559ea9a74b38 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x559ea9a74af0 <col:12> 'String::memo_t *' lvalue ->memo 0x559ea9a60128
|   | | `-CXXThisExpr 0x559ea9a74ae0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x559ea9a74b20 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x559ea9a74ab0 <col:12> 'String::memo_t *const' lvalue .memo 0x559ea9a60128
|   |     `-DeclRefExpr 0x559ea9a74a90 <col:12> 'const String::rep_t' lvalue ParmVar 0x559ea9a74678 '' 'const String::rep_t &'
|   `-ReturnStmt 0x559ea9a74b80 <col:12>
|     `-UnaryOperator 0x559ea9a74b68 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559ea9a74b58 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x559ea9a746e8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x559ea9a746e8
  `-ParmVarDecl 0x559ea9a747f8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9a55db0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559ea9a55ec8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x559ea9a55f58 <col:16, col:22> col:16 public
|-TypedefDecl 0x559ea9a55f98 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x559ea971ddc0 'const char *'
|   `-QualType 0x559ea971d311 'const char' const
|     `-BuiltinType 0x559ea971d310 'char'
|-TypedefDecl 0x559ea9a56020 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x559ea9a55ff0 'String::const_iterator' sugar
|   |-Typedef 0x559ea9a55f98 'const_iterator'
|   `-PointerType 0x559ea971ddc0 'const char *'
|     `-QualType 0x559ea971d311 'const char' const
|       `-BuiltinType 0x559ea971d310 'char'
|-TypedefDecl 0x559ea9a56190 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x559ea9a56100 'int (String::*)() const'
|   |-RecordType 0x559ea9a55e40 'String'
|   | `-CXXRecord 0x559ea9a55db0 'String'
|   `-ParenType 0x559ea9a560a0 'int () const' sugar
|     `-FunctionProtoType 0x559ea9a387d0 'int () const' const cdecl
|       `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9a561f8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x559ea9876cf0 'int64_t' sugar
|   |-Typedef 0x559ea97862d0 'int64_t'
|   `-TypedefType 0x559ea975f4d0 '__int64_t' sugar
|     |-Typedef 0x559ea975f0a8 '__int64_t'
|     `-BuiltinType 0x559ea971d390 'long'
|-TypedefDecl 0x559ea9a56260 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x559ea9876c10 'uint64_t' sugar
|   |-Typedef 0x559ea9786470 'uint64_t'
|   `-TypedefType 0x559ea975f560 '__uint64_t' sugar
|     |-Typedef 0x559ea975f118 '__uint64_t'
|     `-BuiltinType 0x559ea971d430 'unsigned long'
|-TypedefDecl 0x559ea9a562f0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x559ea9a562c0 'String::intmax_t' sugar
|   |-Typedef 0x559ea9a561f8 'intmax_t'
|   `-TypedefType 0x559ea9876cf0 'int64_t' sugar
|     |-Typedef 0x559ea97862d0 'int64_t'
|     `-TypedefType 0x559ea975f4d0 '__int64_t' sugar
|       |-Typedef 0x559ea975f0a8 '__int64_t'
|       `-BuiltinType 0x559ea971d390 'long'
|-TypedefDecl 0x559ea9a56380 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x559ea9a56350 'String::uintmax_t' sugar
|   |-Typedef 0x559ea9a56260 'uintmax_t'
|   `-TypedefType 0x559ea9876c10 'uint64_t' sugar
|     |-Typedef 0x559ea9786470 'uint64_t'
|     `-TypedefType 0x559ea975f560 '__uint64_t' sugar
|       |-Typedef 0x559ea975f118 '__uint64_t'
|       `-BuiltinType 0x559ea971d430 'unsigned long'
|-CXXConstructorDecl 0x559ea9a56440 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x559ea9a565e8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x559ea9a56528 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x559ea9a56798 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x559ea9a566d8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x559ea9a568f0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x559ea9a56860 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x559ea9a56b08 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x559ea9a569b8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x559ea9a56a38 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x559ea9a56d28 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x559ea9a56bd8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x559ea9a56c58 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x559ea9a56f48 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x559ea9a56df8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x559ea9a56e78 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x559ea9a57168 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x559ea9a57018 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x559ea9a57098 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x559ea9a572f8 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x559ea9a57230 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x559ea9a57478 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x559ea9a573b8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x559ea9a57608 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x559ea9a57540 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x559ea9a57760 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x559ea9a576d0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x559ea9a578e8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x559ea9a57828 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x559ea9a57a40 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x559ea9a579b0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x559ea9a57bc8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x559ea9a57b08 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x559ea9a57d58 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x559ea9a57c90 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x559ea9a57ee8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x559ea9a57e20 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x559ea9a58078 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x559ea9a57fb0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x559ea9a58170 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x559ea9a58298 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x559ea9a58418 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x559ea9a58350 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x559ea9a58568 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x559ea9a584d8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x559ea9a58610 <col:63> "" ""
|-CXXMethodDecl 0x559ea9a58758 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x559ea9a58698 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x559ea9a58968 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x559ea9a58818 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x559ea9a58898 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x559ea9a58b88 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x559ea9a58a30 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x559ea9a58ab0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x559ea9a58e68 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x559ea9a58c48 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x559ea9a58cc8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x559ea9a64290 <col:55> 'int' 10
| `-ParmVarDecl 0x559ea9a58d40 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559ea9a642b0 <col:76> 'bool' true
|-CXXMethodDecl 0x559ea9a59148 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x559ea9a58f30 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x559ea9a58fb0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x559ea9a642c0 <col:56> 'int' 10
| `-ParmVarDecl 0x559ea9a59028 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559ea9a642e0 <col:77> 'bool' true
|-CXXMethodDecl 0x559ea9a59250 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x559ea9a59318 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x559ea9a593e0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x559ea9a59480 <col:20>
| `-OptimizeNoneAttr 0x559ea9a594d8 <col:30>
|-CXXConversionDecl 0x559ea9a595c8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x559ea9a59698 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x559ea9a59758 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x559ea9a59848 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x559ea9a59908 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x559ea9a59a88 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x559ea9a599c0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x559ea9a59bd8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x559ea9a59b48 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x559ea9a59cc8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x559ea9a59d88 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x559ea9a59fd8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x559ea9a59e40 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x559ea9a59ec0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x559ea9a5a238 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x559ea9a5a0a0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x559ea9a5a120 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x559ea9a5a308 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x559ea9a5a518 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x559ea9a5a3c0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x559ea9a5a440 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x559ea9a5a738 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x559ea9a5a5e0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x559ea9a5a660 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x559ea9a5a8c8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x559ea9a5a800 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x559ea9a5a9b8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x559ea9a5ab28 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x559ea9a5aa68 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x559ea9a5ad38 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x559ea9a5abe8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x559ea9a5ac68 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x559ea9a5af50 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x559ea9a5adf8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x559ea9a5ae70 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x559ea9a5b0e0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x559ea9a5b010 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x559ea9a5b300 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x559ea9a5b1a0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x559ea9a5b220 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x559ea9a5b450 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x559ea9a5b3c0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x559ea9a5b628 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x559ea9a5b510 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x559ea9a5b590 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x559ea9a5b778 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x559ea9a5b6e8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x559ea9a5c9c0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x559ea9a5b830 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x559ea9a5c8e0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x559ea9a642f0 <col:39> 'int' 0
|-CXXMethodDecl 0x559ea9a5cbe0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x559ea9a5ca80 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x559ea9a5cb00 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x559ea9a64310 <col:48> 'int' 0
|-CXXMethodDecl 0x559ea9a5cdc0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x559ea9a5cca0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x559ea9a5cd20 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x559ea9a64330 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x559ea9a5ce90 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x559ea9a5cf50 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x559ea9a5d010 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x559ea9a5d0d0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x559ea9a5d190 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x559ea9a5d338 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x559ea9a5d240 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x559ea9a5d4b8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x559ea9a5d3f0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x559ea9a5d638 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x559ea9a5d578 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x559ea9a5d7b8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x559ea9a5d6f0 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x559ea9a5d900 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x559ea9a5d870 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x559ea9a5da50 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x559ea9a5d9c0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x559ea9a5dc28 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x559ea9a5db10 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x559ea9a5db90 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x559ea9a5de08 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x559ea9a5dcf0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x559ea9a5dd70 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x559ea9a5df58 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x559ea9a5dec8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x559ea9a5e168 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x559ea9a5e018 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x559ea9a5e098 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x559ea9a5e2c8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x559ea9a5e230 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x559ea9a5e420 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x559ea9a5e388 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x559ea9a5e4c8 <col:57> "" ""
|-CXXMethodDecl 0x559ea9a5e5d8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x559ea9a5e548 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x559ea9a5e728 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x559ea9a5e698 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x559ea9a5e8a8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x559ea9a5e7e0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x559ea9a5e970 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x559ea9a5ea30 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x559ea9a5eaf0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x559ea9a5eb90 <col:49> "" ""
|-CXXMethodDecl 0x559ea9a5ec20 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x559ea9a5ece0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x559ea9a5edd0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x559ea9a5ee98 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x559ea9a5ef58 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x559ea9a5f018 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x559ea9a5f110 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x559ea9a5f1d8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x559ea9a5f2a0 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x559ea9a5f478 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x559ea9a5f358 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x559ea9a5f3d8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x559ea9a5f6a0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x559ea9a5f540 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x559ea9a5f5c0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x559ea9a5f7b0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x559ea9a5f818 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x559ea9a5f840 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x559ea9a5f958 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x559ea9a5f9f8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x559ea9a5fa58 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x559ea9a5fab8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x559ea9a5fb68 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x559ea9a5fbd0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x559ea9a5fe08 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x559ea9a5fe58 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9a5fde8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x559ea9a5fcf8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x559ea9a5fca0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x559ea9a5fce0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x559ea9a5fcc0 <col:32> 'int' 8
|-CXXRecordDecl 0x559ea9a5fe70 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559ea9a5ff88 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x559ea9a60030 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x559ea9a60098 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x559ea9a60128 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x559ea9a647c0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x559ea9a64bf8 <col:12>
| |-CXXConstructorDecl 0x559ea9a648c8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x559ea9a649d8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x559ea9a60030 'data' 'const char *'
| | | `-ImplicitCastExpr 0x559ea9a68040 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x559ea9a68010 <col:12> 'const char *const' lvalue .data 0x559ea9a60030
| | |     `-DeclRefExpr 0x559ea9a67ff0 <col:12> 'const String::rep_t' lvalue ParmVar 0x559ea9a649d8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x559ea9a60098 'length' 'int'
| | | `-ImplicitCastExpr 0x559ea9a680d0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x559ea9a680a0 <col:12> 'const int' lvalue .length 0x559ea9a60098
| | |     `-DeclRefExpr 0x559ea9a68080 <col:12> 'const String::rep_t' lvalue ParmVar 0x559ea9a649d8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x559ea9a60128 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x559ea9a68160 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x559ea9a68130 <col:12> 'String::memo_t *const' lvalue .memo 0x559ea9a60128
| | |     `-DeclRefExpr 0x559ea9a68110 <col:12> 'const String::rep_t' lvalue ParmVar 0x559ea9a649d8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x559ea9a681b8 <col:12>
| |-CXXConstructorDecl 0x559ea9a64a78 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x559ea9a64a78
| | `-ParmVarDecl 0x559ea9a64b88 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x559ea9a6aee0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x559ea9a74568 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x559ea9a74678 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x559ea9a74b90 <col:12>
| |   |-BinaryOperator 0x559ea9a749a8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x559ea9a74960 <col:12> 'const char *' lvalue ->data 0x559ea9a60030
| |   | | `-CXXThisExpr 0x559ea9a74950 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x559ea9a74990 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x559ea9a74920 <col:12> 'const char *const' lvalue .data 0x559ea9a60030
| |   |     `-DeclRefExpr 0x559ea9a74900 <col:12> 'const String::rep_t' lvalue ParmVar 0x559ea9a74678 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x559ea9a74a70 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x559ea9a74a28 <col:12> 'int' lvalue ->length 0x559ea9a60098
| |   | | `-CXXThisExpr 0x559ea9a74a18 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x559ea9a74a58 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x559ea9a749e8 <col:12> 'const int' lvalue .length 0x559ea9a60098
| |   |     `-DeclRefExpr 0x559ea9a749c8 <col:12> 'const String::rep_t' lvalue ParmVar 0x559ea9a74678 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x559ea9a74b38 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x559ea9a74af0 <col:12> 'String::memo_t *' lvalue ->memo 0x559ea9a60128
| |   | | `-CXXThisExpr 0x559ea9a74ae0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x559ea9a74b20 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x559ea9a74ab0 <col:12> 'String::memo_t *const' lvalue .memo 0x559ea9a60128
| |   |     `-DeclRefExpr 0x559ea9a74a90 <col:12> 'const String::rep_t' lvalue ParmVar 0x559ea9a74678 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x559ea9a74b80 <col:12>
| |     `-UnaryOperator 0x559ea9a74b68 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x559ea9a74b58 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x559ea9a746e8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x559ea9a746e8
|   `-ParmVarDecl 0x559ea9a747f8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x559ea9a601a0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x559ea9a603e8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x559ea9a60208 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x559ea9a60288 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x559ea9a60300 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x559ea9a64780 <col:79, line:261:5>
|   |-BinaryOperator 0x559ea9a643f8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x559ea9a64390 <col:2, col:5> 'const char *' lvalue .data 0x559ea9a60030
|   | | `-MemberExpr 0x559ea9a64360 <col:2> 'String::rep_t' lvalue ->_r 0x559ea9a601a0
|   | |   `-CXXThisExpr 0x559ea9a64350 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x559ea9a643e0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ea9a643c0 <col:12> 'const char *' lvalue ParmVar 0x559ea9a60208 'data' 'const char *'
|   |-BinaryOperator 0x559ea9a644c0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x559ea9a64458 <col:2, col:5> 'int' lvalue .length 0x559ea9a60098
|   | | `-MemberExpr 0x559ea9a64428 <col:2> 'String::rep_t' lvalue ->_r 0x559ea9a601a0
|   | |   `-CXXThisExpr 0x559ea9a64418 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x559ea9a644a8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559ea9a64488 <col:14> 'int' lvalue ParmVar 0x559ea9a60288 'length' 'int'
|   `-IfStmt 0x559ea9a64768 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x559ea9a645e0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x559ea9a645c8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x559ea9a645a8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x559ea9a64588 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x559ea9a64520 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x559ea9a60128
|     |       | `-MemberExpr 0x559ea9a644f0 <col:7> 'String::rep_t' lvalue ->_r 0x559ea9a601a0
|     |       |   `-CXXThisExpr 0x559ea9a644e0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x559ea9a64570 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x559ea9a64550 <col:17> 'String::memo_t *' lvalue ParmVar 0x559ea9a60300 'memo' 'String::memo_t *'
|     `-CallExpr 0x559ea9a64740 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x559ea9a64728 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x559ea9a64630 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x559ea99e40d8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x559ea9a64698 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x559ea9a5f9f8
|         `-ImplicitCastExpr 0x559ea9a64680 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x559ea9a64660 <col:27> 'String::memo_t *' lvalue ParmVar 0x559ea9a60300 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x559ea9a60698 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x559ea9a604b8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x559ea9a60538 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x559ea9a605b0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x559ea9a601a0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x559ea9a64c08 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x559ea9a64d98 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x559ea9a64d00 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x559ea9a64c70 <col:2> '<bound member function type>' ->assign_memo 0x559ea9a603e8
|     | `-ImplicitCastExpr 0x559ea9a64d38 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x559ea9a64c60 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x559ea9a64d50 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x559ea9a64ca0 <col:14> 'const char *' lvalue ParmVar 0x559ea9a604b8 'data' 'const char *'
|     |-ImplicitCastExpr 0x559ea9a64d68 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x559ea9a64cc0 <col:20> 'int' lvalue ParmVar 0x559ea9a60538 'length' 'int'
|     `-ImplicitCastExpr 0x559ea9a64d80 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9a64ce0 <col:28> 'String::memo_t *' lvalue ParmVar 0x559ea9a605b0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x559ea9a60828 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x559ea9a60768 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x559ea9a64ff0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x559ea9a64f70 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x559ea9a64dc0 <col:2> '<bound member function type>' ->assign_memo 0x559ea9a603e8
|     | `-CXXThisExpr 0x559ea9a64db0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x559ea9a64fa8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x559ea9a64e40 <col:14, col:19> 'const char *' lvalue .data 0x559ea9a60030
|     |   `-MemberExpr 0x559ea9a64e10 <col:14, col:16> 'String::rep_t' lvalue ._r 0x559ea9a601a0
|     |     `-DeclRefExpr 0x559ea9a64df0 <col:14> 'const String' lvalue ParmVar 0x559ea9a60768 'x' 'const String &'
|     |-ImplicitCastExpr 0x559ea9a64fc0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x559ea9a64ec0 <col:25, col:30> 'int' lvalue .length 0x559ea9a60098
|     |   `-MemberExpr 0x559ea9a64e90 <col:25, col:27> 'String::rep_t' lvalue ._r 0x559ea9a601a0
|     |     `-DeclRefExpr 0x559ea9a64e70 <col:25> 'const String' lvalue ParmVar 0x559ea9a60768 'x' 'const String &'
|     `-ImplicitCastExpr 0x559ea9a64fd8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x559ea9a64f40 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x559ea9a60128
|         `-MemberExpr 0x559ea9a64f10 <col:38, col:40> 'String::rep_t' lvalue ._r 0x559ea9a601a0
|           `-DeclRefExpr 0x559ea9a64ef0 <col:38> 'const String' lvalue ParmVar 0x559ea9a60768 'x' 'const String &'
|-CXXMethodDecl 0x559ea9a629f0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x559ea9a659b0 <col:31, line:278:5>
|   `-IfStmt 0x559ea9a65998 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x559ea9a65090 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x559ea9a65078 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x559ea9a65048 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x559ea9a60128
|     |     `-MemberExpr 0x559ea9a65018 <col:6> 'String::rep_t' lvalue ->_r 0x559ea9a601a0
|     |       `-CXXThisExpr 0x559ea9a65008 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x559ea9a65970 <col:15, line:277:2>
|       |-ParenExpr 0x559ea9a65540 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x559ea9a65510 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x559ea9a651a0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x559ea9a65188 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x559ea9a65170 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x559ea9a65130 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x559ea9a5f9f8
|       |   |       `-ImplicitCastExpr 0x559ea9a65118 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x559ea9a650e8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x559ea9a60128
|       |   |           `-MemberExpr 0x559ea9a650b8 <col:27> 'String::rep_t' lvalue ->_r 0x559ea9a601a0
|       |   |             `-CXXThisExpr 0x559ea9a650a8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x559ea9a65200 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x559ea9a651e0 <col:54> 'int' 0
|       |   `-CallExpr 0x559ea9a65470 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x559ea9a65458 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x559ea9a653d8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559ea97bd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x559ea9a654b0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x559ea9a652e8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x559ea9a654c8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x559ea9a65318 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x559ea9a654e0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x559ea9a65350 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x559ea9a654f8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x559ea9a653c0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x559ea9a653a8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x559ea9a65370 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x559ea9a65890 <line:274:6, line:275:22>
|       | |-CallExpr 0x559ea9a65750 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x559ea9a65738 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x559ea9a656b0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x559ea99e68c0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x559ea9a65680 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x559ea9a5f9f8
|       | |   `-ImplicitCastExpr 0x559ea9a65668 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x559ea9a65638 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x559ea9a60128
|       | |       `-MemberExpr 0x559ea9a65608 <col:40> 'String::rep_t' lvalue ->_r 0x559ea9a601a0
|       | |         `-CXXThisExpr 0x559ea9a655f8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x559ea9a65850 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x559ea9a65838 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x559ea9a65778 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x559ea9a636c8 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x559ea9a65878 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x559ea9a657d8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x559ea9a60128
|       |       `-MemberExpr 0x559ea9a657a8 <col:15> 'String::rep_t' lvalue ->_r 0x559ea9a601a0
|       |         `-CXXThisExpr 0x559ea9a65798 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x559ea9a65950 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x559ea9a658e8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x559ea9a60128
|         | `-MemberExpr 0x559ea9a658b8 <col:6> 'String::rep_t' lvalue ->_r 0x559ea9a601a0
|         |   `-CXXThisExpr 0x559ea9a658a8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x559ea9a65938 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x559ea9a65918 <col:16> 'int' 0
|-CXXMethodDecl 0x559ea9a62c88 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x559ea9a62aa8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x559ea9a62b28 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x559ea9a62ba0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x559ea9a62d60 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x559ea9a62fb0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x559ea9a62e18 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x559ea9a62e98 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x559ea9a62f10 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x559ea9a63198 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x559ea9a63080 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x559ea9a63100 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x559ea9a63298 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x559ea9a65a88 <col:41, line:286:5>
|   `-ReturnStmt 0x559ea9a65a78 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x559ea9a65a48 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x559ea9a65a10 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x559ea9a659f8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x559ea9a659d8 <col:46> 'int' 1
|-CXXMethodDecl 0x559ea9a63538 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x559ea9a63350 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x559ea9a633d0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x559ea9a63450 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x559ea9a636c8 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x559ea9a63600 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x559ea9a63798 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x559ea9a63968 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x559ea9a63850 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x559ea9a638d0 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x559ea9a63a28 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x559ea9a63af0 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x559ea9a63bf8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x559ea9a63c70 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x559ea9a63ce8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x559ea9a63d50 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x559ea9a63e50 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x559ea9a63ea0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9a63e30 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x559ea9a63e10 <col:22> 'int' 14
|-CXXMethodDecl 0x559ea9a640b8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x559ea9a63ed0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x559ea9a63f50 <col:38> col:41 'int'
| `-ParmVarDecl 0x559ea9a63fd0 <col:43> col:46 'int'
|-FriendDecl 0x559ea9a641c0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x559ea9a64250 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9dbc7d0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x559ea9dbc9a8 prev 0x559ea9dbc7d0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x559ea9dbca38 <col:46, col:52> col:46 public
|-TypedefDecl 0x559ea9dbca60 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9dbe3c0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x559ea9dbe370 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x559ea9dbe350 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x559ea9dbcc78 'type'
|     `-SubstTemplateTypeParmType 0x559ea9dbcc40 'String' sugar
|       |-TemplateTypeParmType 0x559ea9a265b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a26560 'T'
|       `-RecordType 0x559ea9a55e40 'String'
|         `-CXXRecord 0x559ea9a55db0 'String'
|-TypedefDecl 0x559ea9dbe478 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x559ea9dbe440 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x559ea9dbe420 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x559ea9dbe3c0 'type'
|     `-ElaboratedType 0x559ea9dbe370 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x559ea9dbe350 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x559ea9dbcc78 'type'
|         `-SubstTemplateTypeParmType 0x559ea9dbcc40 'String' sugar
|           |-TemplateTypeParmType 0x559ea9a265b0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x559ea9a26560 'T'
|           `-RecordType 0x559ea9a55e40 'String'
|             `-CXXRecord 0x559ea9a55db0 'String'
|-CXXMethodDecl 0x559ea9dbe5f8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x559ea9dbe508 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x559ea9dbe6e8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x559ea9dbe7c8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x559ea9dbe7c8
|-CXXMethodDecl 0x559ea9dbea98 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x559ea9dbe9a0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x559ea9dbecd8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x559ea9dbeb50 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x559ea9dbebc8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x559ea9dc1310 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x559ea9dbed98 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x559ea9dbee10 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x559ea9dc1468 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x559ea9dc1538 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x559ea9dc1788 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x559ea9dc15f8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x559ea9dc1670 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x559ea9dc19e8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x559ea9dc1858 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x559ea9dc18d0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x559ea9dc1ba8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x559ea9dc1ab8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x559ea9dc1d68 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x559ea9dc1c70 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x559ea9dc1e20 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x559ea9dc1ed0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x559ea9dc2108 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x559ea9dc1f80 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x559ea9dc1ff8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x559ea9dc23a8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x559ea9dc22b0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x559ea9dc2470 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x559ea9dc24c0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x559ea9dc2510 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9c90580 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x559ea9dbb478 prev 0x559ea9c90580 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x559ea9dbc740 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x559ea9dbc6f0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x559ea9dbc6d0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x559ea9dbc580 'type'
|     `-SubstTemplateTypeParmType 0x559ea9dbc410 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x559ea99ff1d0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x559ea99ff178 'F'
|       `-RecordType 0x559ea9dbc070 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x559ea9dbbf90 'typed_array_memory'
|-FieldDecl 0x559ea9dc2560 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x559ea9dc25b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x559ea9dc25e8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x559ea9dbb510 'String' sugar
|   |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x559ea9a35978 'T'
|   `-RecordType 0x559ea9a55e40 'String'
|     `-CXXRecord 0x559ea9a55db0 'String'
|-TypedefDecl 0x559ea9dc2678 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x559ea9dc2640 'String &'
|   `-SubstTemplateTypeParmType 0x559ea9dbb510 'String' sugar
|     |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x559ea9a35978 'T'
|     `-RecordType 0x559ea9a55e40 'String'
|       `-CXXRecord 0x559ea9a55db0 'String'
|-TypedefDecl 0x559ea9dc2708 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x559ea9dc26d0 'const String &'
|   `-QualType 0x559ea9dbb511 'const String' const
|     `-SubstTemplateTypeParmType 0x559ea9dbb510 'String' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-RecordType 0x559ea9a55e40 'String'
|         `-CXXRecord 0x559ea9a55db0 'String'
|-TypedefDecl 0x559ea9dc2798 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x559ea9dc2760 'String *'
|   `-SubstTemplateTypeParmType 0x559ea9dbb510 'String' sugar
|     |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x559ea9a35978 'T'
|     `-RecordType 0x559ea9a55e40 'String'
|       `-CXXRecord 0x559ea9a55db0 'String'
|-TypedefDecl 0x559ea9dc2828 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x559ea9dc27f0 'const String *'
|   `-QualType 0x559ea9dbb511 'const String' const
|     `-SubstTemplateTypeParmType 0x559ea9dbb510 'String' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-RecordType 0x559ea9a55e40 'String'
|         `-CXXRecord 0x559ea9a55db0 'String'
|-TypedefDecl 0x559ea9dc3480 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x559ea9dc3430 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x559ea9dc3410 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x559ea9dc3348 'type'
|     `-LValueReferenceType 0x559ea9dc3310 'const String &'
|       `-QualType 0x559ea9dc30b1 'const String' const
|         `-SubstTemplateTypeParmType 0x559ea9dc30b0 'String' sugar
|           |-TemplateTypeParmType 0x559ea9a072e0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x559ea9a07288 'T'
|           `-RecordType 0x559ea9a55e40 'String'
|             `-CXXRecord 0x559ea9a55db0 'String'
|-TypedefDecl 0x559ea9dc34e8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x559ea9dc26d0 'const String &'
|   `-QualType 0x559ea9dbb511 'const String' const
|     `-SubstTemplateTypeParmType 0x559ea9dbb510 'String' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-RecordType 0x559ea9a55e40 'String'
|         `-CXXRecord 0x559ea9a55db0 'String'
|-TypedefDecl 0x559ea9dc3540 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9dc35a8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x559ea9dc2760 'String *'
|   `-SubstTemplateTypeParmType 0x559ea9dbb510 'String' sugar
|     |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x559ea9a35978 'T'
|     `-RecordType 0x559ea9a55e40 'String'
|       `-CXXRecord 0x559ea9a55db0 'String'
|-TypedefDecl 0x559ea9dc3610 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x559ea9dc27f0 'const String *'
|   `-QualType 0x559ea9dbb511 'const String' const
|     `-SubstTemplateTypeParmType 0x559ea9dbb510 'String' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-RecordType 0x559ea9a55e40 'String'
|         `-CXXRecord 0x559ea9a55db0 'String'
|-EnumDecl 0x559ea9dc3668 <line:134:5> col:5
| `-EnumConstantDecl 0x559ea9dc3760 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x559ea9dc3740 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x559ea9a36b98 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x559ea9a36b70 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x559ea9a36b50 <col:40> 'int' 1
|-CXXConstructorDecl 0x559ea9dc37e8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x559ea9dc3a78 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9dc38a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x559ea9dc3940 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x559ea9dc3d08 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x559ea9dc3bf0 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x559ea9dc3fc8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x559ea9dc3eb0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x559ea9dc42e0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x559ea9dc41c0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x559ea9dc45f0 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x559ea9dc44d0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x559ea9dc48e0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9dc4728 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x559ea9dc47a0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x559ea9dc4a08 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x559ea9dc4ab8 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9dc4b10 <col:30> Inherited
|-CXXMethodDecl 0x559ea9dc4b58 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x559ea9dc4c08 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9dc4c60 <col:30> Inherited
|-CXXMethodDecl 0x559ea9dc4d28 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x559ea9dc4dd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9dc4e30 <col:30> Inherited
|-CXXMethodDecl 0x559ea9dc4e78 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x559ea9dc4f28 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9dc4f80 <col:30> Inherited
|-CXXMethodDecl 0x559ea9dc4fc8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x559ea9dc5078 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9dc50d0 <col:30> Inherited
|-CXXMethodDecl 0x559ea9dc5118 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x559ea9dc51c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9dc5220 <col:30> Inherited
|-CXXMethodDecl 0x559ea9dc5248 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x559ea9dc52f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x559ea9dc53a8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x559ea9dc5568 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9dc5458 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x559ea9dc54d0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x559ea9dc56b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x559ea9dc5628 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9dc5868 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x559ea9dc5770 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x559ea9dc5920 <col:20>
| `-OptimizeNoneAttr 0x559ea9dc5978 <col:30>
|-CXXMethodDecl 0x559ea9dc5a98 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x559ea9dc59a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x559ea9dc5b50 <col:20>
| `-OptimizeNoneAttr 0x559ea9dc5ba8 <col:30>
|-CXXMethodDecl 0x559ea9dc5c60 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x559ea9dc5bd0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9dc5da8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x559ea9dc5d18 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9dc5ed8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x559ea9dc5fd8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x559ea9dc60a8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x559ea9dc6178 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x559ea9dc62b8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x559ea9dc6228 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9dc6400 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x559ea9dc6370 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9dc6548 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x559ea9dc64b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x559ea9dc6600 <col:48> Inherited "" ""
|-CXXMethodDecl 0x559ea9dc6700 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x559ea9dc6670 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x559ea9dc67b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x559ea9dc6878 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x559ea9dc6978 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x559ea9dc6af8 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x559ea9dc6a38 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x559ea9dc7288 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x559ea9dc6bb0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x559ea9dc71e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x559ea9dc70e8 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x559ea9dc7368 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x559ea9dc74b8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x559ea9dc7428 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x559ea9dc7570 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x559ea9dc77b8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9dc7630 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x559ea9dc76a8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x559ea9dc7948 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x559ea9dc7888 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x559ea9dc7b58 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x559ea9dc7a10 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x559ea9dc7a88 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x559ea9dc7c18 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x559ea9dc7e78 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x559ea9dc7d80 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x559ea9dc7f48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x559ea9dc7f48

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9e67a88 prev 0x559ea9ddd738 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559ea9e67b80 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x559ea9e67c10 <col:22, col:28> col:22 public
|-EnumDecl 0x559ea9e67c38 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x559ea9e67d58 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x559ea9e67d38 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x559ea9e67d20 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x559ea9e67d00 <col:14> 'int' 999
| |-EnumConstantDecl 0x559ea9e67e00 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x559ea9e67de0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x559ea9e67dc8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x559ea9e67da8 <col:14> 'int' 1
| |-EnumConstantDecl 0x559ea9e67e90 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x559ea9e67e70 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x559ea9e67e50 <col:17> 'int' 0
| |-EnumConstantDecl 0x559ea9e67f20 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x559ea9e67f00 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x559ea9e67ee0 <col:13> 'int' 1
| |-EnumConstantDecl 0x559ea9e67fb0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x559ea9e67f90 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x559ea9e67f70 <col:16> 'int' 2
| |-EnumConstantDecl 0x559ea9e68040 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x559ea9e68020 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x559ea9e68000 <col:13> 'int' 3
| |-EnumConstantDecl 0x559ea9e680d0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x559ea9e680b0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x559ea9e68090 <col:15> 'int' 4
| |-EnumConstantDecl 0x559ea9e68160 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x559ea9e68140 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x559ea9e68120 <col:14> 'int' 5
| |-EnumConstantDecl 0x559ea9e681f0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x559ea9e681d0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x559ea9e681b0 <col:12> 'int' 6
| `-EnumConstantDecl 0x559ea9e68280 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x559ea9e68260 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x559ea9e68240 <col:13> 'int' 7
|-VarDecl 0x559ea9e682f0 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x559ea9e68378 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x559ea9e68400 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x559ea9e68488 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x559ea9e68510 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x559ea9e68598 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x559ea9e68620 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x559ea9e686a8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x559ea9e68730 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x559ea9e687b8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x559ea9e68840 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x559ea9e68940 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x559ea9e6dcc8 '_nerrors' 'int'
| | `-IntegerLiteral 0x559ea9e6e458 <line:128:13> 'int' 0
| `-CompoundStmt 0x559ea9e6e4c8 <col:16, line:129:5>
|-CXXDestructorDecl 0x559ea9e68a30 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x559ea9e6e4d8 <col:29, line:132:5>
|-CXXMethodDecl 0x559ea9e68be8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x559ea9e68b20 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9e68cb0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x559ea9e68d98 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x559ea9e6e530 <col:44, line:161:5>
|   `-ReturnStmt 0x559ea9e6e520 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x559ea9e6e508 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9e6e4e8 <col:9> 'ErrorHandler *' lvalue Var 0x559ea9e6dd28 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9e68ed8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x559ea9e68e48 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559ea9e68fa0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x559ea9e6e590 <col:43, line:173:5>
|   `-ReturnStmt 0x559ea9e6e580 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x559ea9e6e568 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9e6e548 <col:9> 'ErrorHandler *' lvalue Var 0x559ea9e6dda0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x559ea9e69058 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x559ea9e690d8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x559ea9e691e8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x559ea9e69158 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x559ea9e69338 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x559ea9e692a8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x559ea9e69490 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x559ea9e693f8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x559ea9e695e8 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x559ea9e69550 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x559ea9e69740 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x559ea9e696a8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x559ea9e69950 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x559ea9e697f8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x559ea9e69878 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x559ea9e69b28 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x559ea9e69a10 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x559ea9e69a90 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x559ea9e69d48 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x559ea9e69be8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x559ea9e69c68 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x559ea9e69f28 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x559ea9e69e08 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x559ea9e69e88 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x559ea9e6a108 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x559ea9e69fe8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x559ea9e6a068 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x559ea9e6a290 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x559ea9e6a1c8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x559ea9e6a460 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x559ea9e6a348 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x559ea9e6a3c0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x559ea9e6e7e8 <col:57, line:234:5>
|   `-ReturnStmt 0x559ea9e6e7d8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x559ea9e6e7c0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x559ea9e6e768 <col:9, col:41> 'int'
|         |-MemberExpr 0x559ea9e6e738 <col:9> '<bound member function type>' ->xmessage 0x559ea9e6a290
|         | `-CXXThisExpr 0x559ea9e6e728 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x559ea9e6e7a8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x559ea9e6e790 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x559ea9e6e708 <col:18, col:40> 'String' (CXXTemporary 0x559ea9e6e708)
|               `-CallExpr 0x559ea9e6e6d0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x559ea9e6e6b8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x559ea9e6e630 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x559ea9e6c4f0 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x559ea9e6e650 <col:31> 'const String' lvalue ParmVar 0x559ea9e6a3c0 'str' 'const String &'
|                 `-DeclRefExpr 0x559ea9e6e670 <col:36> 'const String' lvalue ParmVar 0x559ea9e6a348 'anno' 'const String &'
|-CXXMethodDecl 0x559ea9e6a740 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x559ea9e6a520 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x559ea9e6a5a0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x559ea9e6a618 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x559ea9e6ea78 <col:68, line:243:5>
|   `-ReturnStmt 0x559ea9e6ea68 <line:242:2, col:41>
|     `-ExprWithCleanups 0x559ea9e6ea50 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x559ea9e6e9f0 <col:9, col:41> 'int'
|         |-MemberExpr 0x559ea9e6e9c0 <col:9> '<bound member function type>' ->xmessage 0x559ea9e6a460
|         | `-CXXThisExpr 0x559ea9e6e9b0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x559ea9e6e888 <col:18> 'const String' lvalue ParmVar 0x559ea9e6a520 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x559ea9e6ea38 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x559ea9e6ea20 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x559ea9e6e990 <col:24, col:40> 'String' (CXXTemporary 0x559ea9e6e990)
|               `-CXXMemberCallExpr 0x559ea9e6e928 <col:24, col:40> 'String'
|                 |-MemberExpr 0x559ea9e6e8b8 <col:24> '<bound member function type>' ->vformat 0x559ea9e6b920
|                 | `-CXXThisExpr 0x559ea9e6e8a8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x559ea9e6e958 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x559ea9e6e8e8 <col:32> 'const char *' lvalue ParmVar 0x559ea9e6a5a0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x559ea9e6e970 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x559ea9e6e908 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x559ea9e6a618 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x559ea9e6a9e0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x559ea9e6a808 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x559ea9e6a880 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x559ea9e6a8f8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x559ea9e6edb8 <col:23, line:254:5>
|   `-ReturnStmt 0x559ea9e6eda8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x559ea9e6ed90 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x559ea9e6ed30 <col:9, col:71> 'int'
|         |-MemberExpr 0x559ea9e6ed00 <col:9> '<bound member function type>' ->xmessage 0x559ea9e6a460
|         | `-CXXThisExpr 0x559ea9e6ecf0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x559ea9e6ed78 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x559ea9e6ed60 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x559ea9e6ecb0 <col:18, col:65> 'String' (CXXTemporary 0x559ea9e6ecb0)
|         |     `-CallExpr 0x559ea9e6ec48 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x559ea9e6ec30 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x559ea9e6eb18 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x559ea9e6c4f0 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x559ea9e6eb38 <col:31> 'const String' lvalue ParmVar 0x559ea9e6a880 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x559ea9e6ec90 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x559ea9e6ec78 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x559ea9e6ec10 <col:37, col:64> 'String' (CXXTemporary 0x559ea9e6ec10)
|         |             `-CallExpr 0x559ea9e6ebe0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x559ea9e6ebc8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x559ea9e6eb58 <col:37> 'String (const String &)' lvalue CXXMethod 0x559ea9e6cb48 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x559ea9e6eb78 <col:56> 'const String' lvalue ParmVar 0x559ea9e6a808 'landmark' 'const String &'
|         `-DeclRefExpr 0x559ea9e6ecd0 <col:68> 'const String' lvalue ParmVar 0x559ea9e6a8f8 'str' 'const String &'
|-CXXMethodDecl 0x559ea9e6ad60 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x559ea9e6aaa8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x559ea9e6ab20 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x559ea9e6aba0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x559ea9e6ac18 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x559ea9e6f070 <col:34, line:267:5>
|   `-ReturnStmt 0x559ea9e6f060 <line:266:2, col:51>
|     `-ExprWithCleanups 0x559ea9e6f048 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x559ea9e6efe0 <col:9, col:51> 'int'
|         |-MemberExpr 0x559ea9e6efb0 <col:9> '<bound member function type>' ->xmessage 0x559ea9e6a9e0
|         | `-CXXThisExpr 0x559ea9e6efa0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x559ea9e6ee58 <col:18> 'const String' lvalue ParmVar 0x559ea9e6aaa8 'landmark' 'const String &'
|         |-DeclRefExpr 0x559ea9e6ee78 <col:28> 'const String' lvalue ParmVar 0x559ea9e6ab20 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x559ea9e6f030 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x559ea9e6f018 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x559ea9e6ef80 <col:34, col:50> 'String' (CXXTemporary 0x559ea9e6ef80)
|               `-CXXMemberCallExpr 0x559ea9e6ef18 <col:34, col:50> 'String'
|                 |-MemberExpr 0x559ea9e6eea8 <col:34> '<bound member function type>' ->vformat 0x559ea9e6b920
|                 | `-CXXThisExpr 0x559ea9e6ee98 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x559ea9e6ef48 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x559ea9e6eed8 <col:42> 'const char *' lvalue ParmVar 0x559ea9e6aba0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x559ea9e6ef60 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x559ea9e6eef8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x559ea9e6ac18 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x559ea9e6ae70 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x559ea9e6f0f0 <col:25, line:288:5>
|   `-ReturnStmt 0x559ea9e6f0e0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x559ea9e6f0c8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x559ea9e6f098 <col:9> 'const int' lvalue ->_nerrors 0x559ea9e6dcc8
|         `-CXXThisExpr 0x559ea9e6f088 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x559ea9e6b080 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x559ea9e6af28 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x559ea9e6afa8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x559ea9e6b368 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x559ea9e6b148 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x559ea9e6b1c8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x559ea9e6b240 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x559ea9e6b500 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x559ea9e6b438 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x559ea9e6b748 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x559ea9e6b5c0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x559ea9e6b638 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x559ea9e6f350 <col:58, line:357:5>
|   `-ReturnStmt 0x559ea9e6f340 <line:356:2, col:29>
|     `-ExprWithCleanups 0x559ea9e6f328 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x559ea9e6f2f8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x559ea9e6f2e0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x559ea9e6f2c0 <col:9, col:29> 'String' (CXXTemporary 0x559ea9e6f2c0)
|             `-CallExpr 0x559ea9e6f250 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x559ea9e6f238 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x559ea9e6f1b8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x559ea9e6b368 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x559ea9e6f158 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x559ea9e6f288 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x559ea9e6f178 <col:21> 'const char *' lvalue ParmVar 0x559ea9e6b5c0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x559ea9e6f2a0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x559ea9e6f198 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x559ea9e6b638 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x559ea9e6b920 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x559ea9e6b810 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x559ea9e6b888 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x559ea9e6ba78 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x559ea9e6b9e8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x559ea9e6bbc0 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x559ea9e6bb30 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x559ea9e6be60 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x559ea9e6bc78 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x559ea9e6bcf8 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x559ea9e6bd70 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x559ea9e6bfc0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x559ea9e6bf30 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x559ea9e6f468 <col:37, line:441:5>
|   `-IfStmt 0x559ea9e6f450 <line:439:2, line:440:8>
|     |-BinaryOperator 0x559ea9e6f3d8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x559ea9e6f3a8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x559ea9e6f368 <col:6> 'int' lvalue ParmVar 0x559ea9e6bf30 'level' 'int'
|     | `-ImplicitCastExpr 0x559ea9e6f3c0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x559ea9e6f388 <col:15> 'ErrorHandler::Level' EnumConstant 0x559ea9e68040 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x559ea9e6f438 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x559ea9e6f408 <col:8> 'int' lvalue ->_nerrors 0x559ea9e6dcc8
|         `-CXXThisExpr 0x559ea9e6f3f8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x559ea9e6c088 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x559ea9e6f500 <col:26, line:448:5>
|   `-BinaryOperator 0x559ea9e6f4e0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x559ea9e6f490 <col:2> 'int' lvalue ->_nerrors 0x559ea9e6dcc8
|     | `-CXXThisExpr 0x559ea9e6f480 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x559ea9e6f4c0 <col:13> 'int' 0
|-CXXMethodDecl 0x559ea9e6c250 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x559ea9e6c140 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x559ea9e6c1b8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x559ea9e6c4f0 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x559ea9e6c310 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x559ea9e6c388 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x559ea9e6c7a8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x559ea9e6c5b0 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x559ea9e6c630 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x559ea9e6c6b0 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x559ea9e6c860 <col:59> 0 0
|-CXXMethodDecl 0x559ea9e6c9f8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x559ea9e6c8d8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x559ea9e6c958 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x559ea9e6fb70 <col:70, line:534:5>
|   |-DeclStmt 0x559ea9e6f670 <line:528:2, col:20>
|   | |-VarDecl 0x559ea9e6f528 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x559ea9e6f590 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x559ea9e6f5c8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x559ea9e6f630 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x559ea9e6f740 <line:529:2, col:23>
|   | `-VarDecl 0x559ea9e6f6a0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x559ea9e6f728 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x559ea9e6f708 <col:18> 'const char *' lvalue ParmVar 0x559ea9e6c8d8 'begin' 'const char *'
|   |-DoStmt 0x559ea9e6fb08 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x559ea9e6fa38 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x559ea9e6fa20 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x559ea9e6fa00 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x559ea9e6f758 <col:6> 'const char *' lvalue Var 0x559ea9e6f6a0 'x' 'const char *'
|   | |     `-CallExpr 0x559ea9e6f950 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x559ea9e6f938 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x559ea9e6f8f0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x559ea9e6e1a0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x559ea9e6f9b8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x559ea9e6f9a0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x559ea9e6f810 <col:20, col:27> 'String' (CXXTemporary 0x559ea9e6f810)
|   | |       |     `-CXXTemporaryObjectExpr 0x559ea9e6f7d8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x559ea9e6f9d0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x559ea9e6f830 <col:30> 'const char *' lvalue Var 0x559ea9e6f6a0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x559ea9e6f9e8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x559ea9e6f850 <col:33> 'const char *' lvalue ParmVar 0x559ea9e6c958 'end' 'const char *'
|   | |       |-UnaryOperator 0x559ea9e6f890 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x559ea9e6f870 <col:39> 'String' lvalue Var 0x559ea9e6f528 'name' 'String'
|   | |       |-UnaryOperator 0x559ea9e6f8c8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x559ea9e6f8a8 <col:46> 'String' lvalue Var 0x559ea9e6f5c8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x559ea9e6f8e0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x559ea9e6faf0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x559ea9e6fad8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x559ea9e6fab8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x559ea9e6fa88 <col:11> '<bound member function type>' .operator int (String::*)() const 0x559ea9a595c8
|   |         `-ImplicitCastExpr 0x559ea9e6fa70 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x559ea9e6fa50 <col:11> 'String' lvalue Var 0x559ea9e6f528 'name' 'String'
|   `-ReturnStmt 0x559ea9e6fb60 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x559ea9e6fb48 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x559ea9e6fb28 <col:9> 'const char *' lvalue Var 0x559ea9e6f6a0 'x' 'const char *'
|-CXXMethodDecl 0x559ea9e6cb48 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x559ea9e6cab8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x559ea9e70178 <col:55, line:550:5>
|   `-IfStmt 0x559ea9e70150 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x559ea9e6fdb0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x559ea9e6fd98 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x559ea9e6fd80 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x559ea9e6fd60 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x559ea9e6fd30 <col:6> '<bound member function type>' .operator int (String::*)() const 0x559ea9a595c8
|     | |       `-DeclRefExpr 0x559ea9e6fbd0 <col:6> 'const String' lvalue ParmVar 0x559ea9e6cab8 'x' 'const String &'
|     | `-BinaryOperator 0x559ea9e6fd10 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x559ea9e6fce0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x559ea9e6fc90 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x559ea9e6fc78 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x559ea9e6fc30 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x559ea9a70cd0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x559ea9e6fbf0 <col:11> 'const String' lvalue ParmVar 0x559ea9e6cab8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x559ea9e6fc10 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x559ea9e6fcf8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x559ea9e6fcc8 <col:19> 'char' 123
|     |-ReturnStmt 0x559ea9e6fe20 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x559ea9e6fdf0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x559ea9e6fdd0 <col:13> 'const String' lvalue ParmVar 0x559ea9e6cab8 'x' 'const String &'
|     `-IfStmt 0x559ea9e70128 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x559ea9e6feb8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x559ea9e6fea0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x559ea9e6fe80 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x559ea9e6fe50 <col:11> '<bound member function type>' .operator int (String::*)() const 0x559ea9a595c8
|       |       `-DeclRefExpr 0x559ea9e6fe30 <col:11> 'const String' lvalue ParmVar 0x559ea9e6cab8 'x' 'const String &'
|       |-ReturnStmt 0x559ea9e70040 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x559ea9e70028 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x559ea9e6fff8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x559ea9e6ffe0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x559ea9e6ffc0 <col:13, col:29> 'String' (CXXTemporary 0x559ea9e6ffc0)
|       |         `-CallExpr 0x559ea9e6ff70 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x559ea9e6ff58 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x559ea9e6fed0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x559ea9e6c250 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x559ea9e6ffa0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x559ea9e6fef0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x559ea9e6ff10 <col:28> 'const String' lvalue ParmVar 0x559ea9e6cab8 'x' 'const String &'
|       `-ReturnStmt 0x559ea9e70118 <line:549:6, col:20>
|         `-ExprWithCleanups 0x559ea9e70100 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x559ea9e700d0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x559ea9e700b8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x559ea9e70098 <col:13, col:20> 'String' (CXXTemporary 0x559ea9e70098)
|                 `-CXXTemporaryObjectExpr 0x559ea9e70060 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x559ea9e6cd10 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x559ea9e6cc00 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x559ea9e6cc78 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559ea9e6e448 <col:71> 'bool' false
|-CXXRecordDecl 0x559ea9e6cdc0 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x559ea9e6d0b8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x559ea9e6d050 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x559ea9e6cff0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x559ea9e6cfb0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x559ea9a55e40 'String'
|       | `-CXXRecord 0x559ea9a55db0 'String'
|       |-BuiltinType 0x559ea971d370 'int'
|       `-DecayedType 0x559ea9dde780 '__va_list_tag *' sugar
|         |-TypedefType 0x559ea9dde750 'va_list' sugar
|         | |-Typedef 0x559ea993fc20 'va_list'
|         | `-TypedefType 0x559ea993fbd0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x559ea98777e8 '__gnuc_va_list'
|         |   `-TypedefType 0x559ea9877750 '__builtin_va_list' sugar
|         |     |-Typedef 0x559ea975ebd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x559ea975eb80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x559ea971e0c0 '__va_list_tag'
|         |         `-CXXRecord 0x559ea971e028 '__va_list_tag'
|         `-PointerType 0x559ea9945d20 '__va_list_tag *'
|           `-RecordType 0x559ea971e0c0 '__va_list_tag'
|             `-CXXRecord 0x559ea971e028 '__va_list_tag'
|-EnumDecl 0x559ea9e6d110 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x559ea9e6d210 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559ea9e6d770 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9e6d1f0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x559ea9e6d1d0 <col:16> 'int' 1
| |-EnumConstantDecl 0x559ea9e6d2a0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559ea9e6d788 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9e6d280 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x559ea9e6d260 <col:21> 'int' 2
| |-EnumConstantDecl 0x559ea9e6d330 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559ea9e6d7a0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9e6d310 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x559ea9e6d2f0 <col:22> 'int' 4
| |-EnumConstantDecl 0x559ea9e6d3c0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559ea9e6d7b8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9e6d3a0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x559ea9e6d380 <col:17> 'int' 8
| |-EnumConstantDecl 0x559ea9e6d450 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559ea9e6d7d0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9e6d430 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x559ea9e6d410 <col:22> 'int' 16
| |-EnumConstantDecl 0x559ea9e6d4e0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559ea9e6d7e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9e6d4c0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x559ea9e6d4a0 <col:19> 'int' 32
| |-EnumConstantDecl 0x559ea9e6d570 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559ea9e6d800 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9e6d550 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x559ea9e6d530 <col:17> 'int' 64
| |-EnumConstantDecl 0x559ea9e6d600 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559ea9e6d818 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9e6d5e0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x559ea9e6d5c0 <col:14> 'int' 128
| |-EnumConstantDecl 0x559ea9e6d690 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x559ea9e6d830 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9e6d670 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x559ea9e6d650 <col:16> 'int' 256
| `-EnumConstantDecl 0x559ea9e6d720 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x559ea9e6d848 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9e6d700 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x559ea9e6d6e0 <col:12> 'int' 1024
|-CXXMethodDecl 0x559ea9e6da58 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x559ea9e6d870 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x559ea9e6d910 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x559ea9e6dbe0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x559ea9e6db18 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x559ea9e6dc88 <line:580:3, col:10> col:3 private
|-FieldDecl 0x559ea9e6dcc8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x559ea9e6dd28 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x559ea9e6dda0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x559ea9e6e1a0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x559ea9e6de18 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x559ea9e6de98 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x559ea9e6df18 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x559ea9e6df90 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x559ea9e6e008 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x559ea9e6e080 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x559ea9e6e2c8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x559ea9e6e2c8
| `-ParmVarDecl 0x559ea9e6e3d8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x559ea9e704d8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x559ea9e704d8
  `-ParmVarDecl 0x559ea9e705e8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9ddd7c8 prev 0x559ea9c4c8c8 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9ddd8c0 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x559ea9ddd950 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x559ea9ddda88 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x559ea9ddd988 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x559ea9ddeeb0 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x559ea9ddee90 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x559ea9ddea28 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x559ea9ddef40 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x559ea9ddef00 <col:17> 'ErrorHandler *' lvalue ParmVar 0x559ea9ddd988 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x559ea9ddea90 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x559ea9ddefc0 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x559ea9ddef80 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x559ea9ddeaf0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x559ea9ddf000 <col:54> 'bool' false
| `-CompoundStmt 0x559ea9ddf108 <col:61, line:38:5>
|   `-BinaryOperator 0x559ea9ddf0e8 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x559ea9ddf080 <col:9> 'const Element *' lvalue ->_context 0x559ea9dde9c8
|     | `-CXXThisExpr 0x559ea9ddf070 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x559ea9ddf0d0 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x559ea9ddf0b0 <col:20> 'int' 0
|-CXXConstructorDecl 0x559ea9dddc98 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x559ea9dddb48 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x559ea9dddbc0 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x559ea9ddeee8 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x559ea9ddeec8 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x559ea9dde9c8 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x559ea9ddf160 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x559ea9ddf120 <col:20> 'const Element *' lvalue ParmVar 0x559ea9dddb48 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x559ea9ddea28 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x559ea9ddf1e0 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x559ea9ddf1a0 <col:36> 'ErrorHandler *' lvalue ParmVar 0x559ea9dddbc0 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x559ea9ddea90 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x559ea9ddf260 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x559ea9ddf220 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x559ea9ddeaf0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x559ea9ddf2a0 <col:73> 'bool' false
| `-CompoundStmt 0x559ea9ddf318 <col:80, line:46:5>
|-CXXMethodDecl 0x559ea9ddddc8 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x559ea9ddf390 <col:36, line:51:5>
|   `-ReturnStmt 0x559ea9ddf380 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x559ea9ddf368 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x559ea9ddf338 <col:16> 'const Element *const' lvalue ->_context 0x559ea9dde9c8
|         `-CXXThisExpr 0x559ea9ddf328 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x559ea9dddeb8 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x559ea9ddf410 <col:32, line:57:5>
|   `-ReturnStmt 0x559ea9ddf400 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x559ea9ddf3e8 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x559ea9ddf3b8 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x559ea9ddea28
|         `-CXXThisExpr 0x559ea9ddf3a8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x559ea9dddf78 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x559ea9dde100 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x559ea9dde030 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x559ea9dde250 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x559ea9dde1c0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x559ea9dde3a0 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x559ea9dde310 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x559ea9dde5a8 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x559ea9dde458 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x559ea9dde4d0 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x559ea9dde8d8 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x559ea9dde668 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x559ea9dde6e8 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x559ea9dde7b0 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x559ea9dde990 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x559ea9dde9c8 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x559ea9ddea28 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x559ea9ddea90 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x559ea9ddeaf0 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x559ea9ddeb40 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x559ea9ddeb40
| `-ParmVarDecl 0x559ea9ddec58 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x559ea9ddecf8 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x559ea9ddecf8
| `-ParmVarDecl 0x559ea9ddee08 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x559ea9e8aaa8 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9e04390 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x559ea9e04568 prev 0x559ea9e04390 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x559ea9e045f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x559ea9e04620 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9e061f0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x559ea9e061a0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x559ea9e04ad0 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x559ea9e049d0 'type'
|     `-TemplateSpecializationType 0x559ea9e04960 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x559ea9e04840 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x559ea9e04820 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x559ea9e04800 <col:24> 'unsigned long' 4
|       `-RecordType 0x559ea9e04940 'char_array<4>'
|         `-ClassTemplateSpecialization 0x559ea9e04860 'char_array'
|-TypedefDecl 0x559ea9e062a8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x559ea9e06270 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x559ea9e06250 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x559ea9e061f0 'type'
|     `-ElaboratedType 0x559ea9e061a0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x559ea9e04ad0 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x559ea9e049d0 'type'
|         `-TemplateSpecializationType 0x559ea9e04960 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x559ea9e04840 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x559ea9e04820 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x559ea9e04800 <col:24> 'unsigned long' 4
|           `-RecordType 0x559ea9e04940 'char_array<4>'
|             `-ClassTemplateSpecialization 0x559ea9e04860 'char_array'
|-CXXMethodDecl 0x559ea9e06428 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x559ea9e06338 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x559ea9e06518 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x559ea9e065f8 <line:23:5, col:20> col:5 ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x559ea9e068c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x559ea9e067d0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x559ea9e06b08 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x559ea9e06980 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x559ea9e069f8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x559ea9e06cd8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x559ea9e06bc8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x559ea9e06c40 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x559ea9e06e38 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x559ea9e06f08 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x559ea9e07158 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x559ea9e06fc8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x559ea9e07040 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x559ea9e073b8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x559ea9e07228 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x559ea9e072a0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x559ea9e07578 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x559ea9e07488 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x559ea9e07738 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x559ea9e07640 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x559ea9e077f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x559ea9e078a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x559ea9e0ee38 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x559ea9e07950 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x559ea9e079c8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x559ea9e0f0d8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x559ea9e0efe0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x559ea9e0f1a0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x559ea9e0f1f0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x559ea9e0f240 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %struct.char_array.8*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %struct.char_array.8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9e02fa8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x559ea9e031b8 prev 0x559ea9e02fa8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x559ea9e04300 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x559ea9e042b0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x559ea9e04290 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x559ea9e04140 'type'
|     `-SubstTemplateTypeParmType 0x559ea9e03f60 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x559ea99fe7d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea99fe778 'T'
|       `-RecordType 0x559ea9e03ab0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x559ea9e039c8 'sized_array_memory'
|-FieldDecl 0x559ea9e0f290 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x559ea9e0f2e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x559ea9e0f318 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x559ea9e03250 'int' sugar
|   |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x559ea9a35978 'T'
|   `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9e0f3a8 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x559ea9e0f370 'int &'
|   `-SubstTemplateTypeParmType 0x559ea9e03250 'int' sugar
|     |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x559ea9a35978 'T'
|     `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9e0f438 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x559ea9e0f400 'const int &'
|   `-QualType 0x559ea9e03251 'const int' const
|     `-SubstTemplateTypeParmType 0x559ea9e03250 'int' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9e0f4c8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x559ea9e0f490 'int *'
|   `-SubstTemplateTypeParmType 0x559ea9e03250 'int' sugar
|     |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x559ea9a35978 'T'
|     `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9e0f558 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x559ea9e0f520 'const int *'
|   `-QualType 0x559ea9e03251 'const int' const
|     `-SubstTemplateTypeParmType 0x559ea9e03250 'int' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9e10140 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x559ea9e100f0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x559ea9e100d0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x559ea9e10060 'type'
|     `-SubstTemplateTypeParmType 0x559ea9e0fe20 'int' sugar
|       |-TemplateTypeParmType 0x559ea9a07a10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a079c0 'T'
|       `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9e101a8 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x559ea9e0f400 'const int &'
|   `-QualType 0x559ea9e03251 'const int' const
|     `-SubstTemplateTypeParmType 0x559ea9e03250 'int' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9e10200 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9e10268 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x559ea9e0f490 'int *'
|   `-SubstTemplateTypeParmType 0x559ea9e03250 'int' sugar
|     |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x559ea9a35978 'T'
|     `-BuiltinType 0x559ea971d370 'int'
|-TypedefDecl 0x559ea9e102d0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x559ea9e0f520 'const int *'
|   `-QualType 0x559ea9e03251 'const int' const
|     `-SubstTemplateTypeParmType 0x559ea9e03250 'int' sugar
|       |-TemplateTypeParmType 0x559ea9a359d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x559ea9a35978 'T'
|       `-BuiltinType 0x559ea971d370 'int'
|-EnumDecl 0x559ea9e10328 <line:134:5> col:5
| `-EnumConstantDecl 0x559ea9e10420 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x559ea9e10400 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x559ea9a36b98 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x559ea9a36b70 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x559ea9a36b50 <col:40> 'int' 1
|-CXXConstructorDecl 0x559ea9e104a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x559ea9e106f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9e10560 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x559ea9e10600 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x559ea9e109b8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x559ea9e108a0 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x559ea9e10c78 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x559ea9e10b60 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x559ea9e10fc0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x559ea9e10ea0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x559ea9e112d0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x559ea9e111b0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x559ea9e115c0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9e11408 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x559ea9e11480 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x559ea9e116e8 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x559ea9e117c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9e11820 <col:30> Inherited
|-CXXMethodDecl 0x559ea9e11868 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x559ea9e11918 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9e11970 <col:30> Inherited
|-CXXMethodDecl 0x559ea9e11a38 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x559ea9e11ae8 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9e11b40 <col:30> Inherited
|-CXXMethodDecl 0x559ea9e11b88 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x559ea9e11c38 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9e11c90 <col:30> Inherited
|-CXXMethodDecl 0x559ea9e11cd8 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x559ea9e11d88 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9e11de0 <col:30> Inherited
|-CXXMethodDecl 0x559ea9e11e28 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x559ea9e11ed8 <col:20> Inherited
| `-OptimizeNoneAttr 0x559ea9e11f30 <col:30> Inherited
|-CXXMethodDecl 0x559ea9e11f58 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x559ea9e12008 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x559ea9e120b8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x559ea9e12278 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9e12168 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x559ea9e121e0 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x559ea9e123c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x559ea9e12338 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9e12578 <line:163:5, col:65> col:43 operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x559ea9e12480 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x559ea9e12630 <col:20>
| `-OptimizeNoneAttr 0x559ea9e12688 <col:30>
|-CXXMethodDecl 0x559ea9e127a8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x559ea9e126b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x559ea9e12860 <col:20>
| `-OptimizeNoneAttr 0x559ea9e128b8 <col:30>
|-CXXMethodDecl 0x559ea9e12970 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x559ea9e128e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9e12ab8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x559ea9e12a28 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9e12be8 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x559ea9e12d18 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x559ea9e12de8 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x559ea9e12eb8 <line:170:5, col:28> col:21 back 'const int &() const' inline
|-CXXMethodDecl 0x559ea9e12ff8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x559ea9e12f68 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9e13140 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x559ea9e130b0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x559ea9e13288 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x559ea9e131f8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x559ea9e13340 <col:48> Inherited "" ""
|-CXXMethodDecl 0x559ea9e13440 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x559ea9e133b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x559ea9e134f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x559ea9e135b8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x559ea9e136b8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x559ea9e13838 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x559ea9e13778 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x559ea9e13ff8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x559ea9e138f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x559ea9e13f58 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x559ea9e13e58 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x559ea9e140d8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x559ea9e14228 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x559ea9e14198 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x559ea9e142e0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x559ea9e14528 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x559ea9e143a0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x559ea9e14418 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x559ea9e146e8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x559ea9e145f8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x559ea9e14938 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x559ea9e147b0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x559ea9e14828 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x559ea9e149f8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x559ea9e14c58 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x559ea9e14b60 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x559ea9e14d28 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9e01118 prev 0x559ea9de4358 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559ea9e01210 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x559ea9e01300 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x559ea9e26b00 <col:16, line:828:9>
|-CXXDestructorDecl 0x559ea9e013f0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x559ea9e26b10 <col:25, line:830:9>
|-CXXMethodDecl 0x559ea9e014f0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x559ea9e015a0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x559ea9e01648 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x559ea9e01648
| `-ParmVarDecl 0x559ea9e01758 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x559ea9e01f18 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x559ea9e01f18
  `-ParmVarDecl 0x559ea9e02028 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9de4170 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x559ea9de42c8 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x559ea9de4358 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x559ea9de4410 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x559ea9de4518 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x559ea9de4448 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x559ea9e162e8 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x559ea9e162c8 <col:31> 'int' 0
|-CXXConstructorDecl 0x559ea9de4838 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x559ea9de46b0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x559ea9de4728 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x559ea9e16320 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x559ea9e16300 <col:59> 'int' 0
|-CXXConstructorDecl 0x559ea9de4a10 <line:265:5, col:56> col:5 used Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x559ea9de4900 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x559ea9de4978 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x559ea9e16358 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x559ea9e16338 <col:55> 'int' 0
|-CXXConstructorDecl 0x559ea9de4dc8 <line:271:5, line:272:32> line:271:5 Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x559ea9de4bb0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x559ea9de4c28 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x559ea9de4ca0 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x559ea9e16390 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x559ea9e16370 <col:31> 'int' 0
|-CXXConstructorDecl 0x559ea9de4f88 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x559ea9de4ec8 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x559ea9de5080 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x559ea9de5268 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x559ea9de5170 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x559ea9de5358 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x559ea9e16740 <col:24, line:291:5>
|   `-ReturnStmt 0x559ea9e16730 <line:290:9, col:79>
|     `-BinaryOperator 0x559ea9e16710 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x559ea9e165e8 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x559ea9e16540 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x559ea9e16520 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x559ea9e16418 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x559ea9e16400 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x559ea9e163e8 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x559ea9e163b8 <col:18> 'Vector<String> *const' lvalue ->_conf 0x559ea9e02f40
|       | |   |       `-CXXThisExpr 0x559ea9e163a8 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x559ea9e16508 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x559ea9e164f0 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x559ea9e164b8 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x559ea9e16488 <col:28, col:35> '<bound member function type>' ->size 0x559ea9dc5248
|       | |           `-ImplicitCastExpr 0x559ea9e164d8 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x559ea9e16470 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x559ea9e16440 <col:28> 'Vector<String> *const' lvalue ->_conf 0x559ea9e02f40
|       | |                 `-CXXThisExpr 0x559ea9e16430 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x559ea9e165d0 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x559ea9e165b8 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x559ea9e165a0 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x559ea9e16570 <col:47> 'Args::Slot *const' lvalue ->_slots 0x559ea9e14e70
|       |         `-CXXThisExpr 0x559ea9e16560 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x559ea9e166f0 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x559ea9e166d8 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x559ea9e166c0 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x559ea9e16680 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x559ea9e16668 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x559ea9e16618 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x559ea9e14f20
|         |     |   `-CXXThisExpr 0x559ea9e16608 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x559ea9e16648 <col:73> 'int' 0
|         `-IntegerLiteral 0x559ea9e166a0 <col:79> 'int' 0
|-CXXMethodDecl 0x559ea9de5418 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x559ea9e16918 <col:32, line:296:5>
|   `-ReturnStmt 0x559ea9e16908 <line:295:9, col:49>
|     `-BinaryOperator 0x559ea9e168e8 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x559ea9e167c8 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x559ea9e167b0 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x559ea9e16798 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x559ea9e16768 <col:17> 'Args::Slot *const' lvalue ->_slots 0x559ea9e14e70
|       |       `-CXXThisExpr 0x559ea9e16758 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x559ea9e168c8 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x559ea9e168b0 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x559ea9e16898 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x559ea9e16858 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x559ea9e16840 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x559ea9e167f0 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x559ea9e14f20
|         |     |   `-CXXThisExpr 0x559ea9e167e0 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x559ea9e16820 <col:43> 'int' 0
|         `-IntegerLiteral 0x559ea9e16878 <col:49> 'int' 0
|-CXXMethodDecl 0x559ea9de5508 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x559ea9e16b28 <col:19, line:306:5>
|   |-IfStmt 0x559ea9e16a48 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x559ea9e16988 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x559ea9e16970 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x559ea9e16940 <col:13> 'Vector<String> *' lvalue ->_conf 0x559ea9e02f40
|   | |     `-CXXThisExpr 0x559ea9e16930 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x559ea9e16a28 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x559ea9e169f8 <col:13, col:20> '<bound member function type>' ->clear 0x559ea9dc7c18
|   |     `-ImplicitCastExpr 0x559ea9e169e0 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x559ea9e169b0 <col:13> 'Vector<String> *' lvalue ->_conf 0x559ea9e02f40
|   |         `-CXXThisExpr 0x559ea9e169a0 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x559ea9e16ad0 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x559ea9e16aa0 <col:9, col:16> '<bound member function type>' .clear 0x559ea9e149f8
|   |   `-MemberExpr 0x559ea9e16a70 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x559ea9e14e10
|   |     `-CXXThisExpr 0x559ea9e16a60 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x559ea9e16b18 <line:305:9, col:17>
|     `-UnaryOperator 0x559ea9e16b00 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559ea9e16af0 <col:17> 'Args *' this
|-CXXMethodDecl 0x559ea9de5788 <line:313:5, col:36> col:11 used bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x559ea9de5690 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x559ea9de5908 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x559ea9de5840 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x559ea9de5c88 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x559ea9de59b0 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x559ea9de5be8 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x559ea9de5a58 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x559ea9de5ad0 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x559ea9e18778 <col:67, line:327:5>
|     |-WhileStmt 0x559ea9e18728 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x559ea9e16c38 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x559ea9e16b90 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x559ea9d4f5c0 0x559ea9d35128 0x559ea9d2cb48 0x559ea9cf92e8 0x559ea9cc19e8 0x559ea9c44df8 0x559ea9a94f38 0x559ea9a94c10 0x559ea9a82770 0x559ea9a82420 0x559ea9a81b10 0x559ea99eb370 0x559ea99dad90
|     | | |-DeclRefExpr 0x559ea9e16b50 <col:16> 'Iter' lvalue ParmVar 0x559ea9de5a58 'begin' 'Iter'
|     | | `-DeclRefExpr 0x559ea9e16b70 <col:25> 'Iter' lvalue ParmVar 0x559ea9de5ad0 'end' 'Iter'
|     | `-CompoundStmt 0x559ea9e18708 <col:30, line:325:9>
|     |   |-CallExpr 0x559ea9e16da0 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x559ea9e16c80 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x559ea9e16d70 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x559ea9e16d00 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x559ea9c49ef8 0x559ea9c49b18 0x559ea9c49748 0x559ea9c49368 0x559ea9c48f88 0x559ea9c48bb8
|     |   |   `-DeclRefExpr 0x559ea9e16ce0 <col:24> 'Iter' lvalue ParmVar 0x559ea9de5a58 'begin' 'Iter'
|     |   `-UnaryOperator 0x559ea9e186f0 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x559ea9e186d0 <col:15> 'Iter' lvalue ParmVar 0x559ea9de5a58 'begin' 'Iter'
|     `-ReturnStmt 0x559ea9e18768 <line:326:9, col:17>
|       `-UnaryOperator 0x559ea9e18750 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x559ea9e18740 <col:17> 'Args *' this
|-CXXMethodDecl 0x559ea9de5d90 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x559ea9de5d00 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x559ea9de5ed8 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x559ea9de5e48 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x559ea9de5fa0 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x559ea9e18858 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x559ea9e187f8 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x559ea9e187a8 <col:9> '<bound member function type>' ->reset_from 0x559ea9e15298
|   | | `-CXXThisExpr 0x559ea9e18798 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x559ea9e187d8 <col:20> 'int' 0
|   `-ReturnStmt 0x559ea9e18848 <line:352:9, col:17>
|     `-UnaryOperator 0x559ea9e18830 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559ea9e18820 <col:17> 'Args *' this
|-VarDecl 0x559ea9de6058 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x559ea9de60c0 <col:38> 'int' 1
|-VarDecl 0x559ea9de6150 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x559ea9de61b8 <col:39> 'int' 2
|-VarDecl 0x559ea9de6248 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x559ea9de62b0 <col:39> 'int' 4
|-VarDecl 0x559ea9de6340 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x559ea9de63a8 <col:39> 'int' 8
|-FunctionTemplateDecl 0x559ea9de6728 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x559ea9de6420 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x559ea9de6688 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x559ea9de64d0 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x559ea9de6578 <col:37, col:40> col:40 referenced x 'T &'
| | `-CompoundStmt 0x559ea9e189b0 <col:43, line:371:5>
| |   `-ReturnStmt 0x559ea9e189a0 <line:370:9, col:34>
| |     `-CallExpr 0x559ea9e18968 <col:16, col:34> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x559ea9e18888 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x559ea9e18908 <col:21> 'const char *' lvalue ParmVar 0x559ea9de64d0 'keyword' 'const char *'
| |       |-IntegerLiteral 0x559ea9e18928 <col:30> 'int' 0
| |       `-DeclRefExpr 0x559ea9e18948 <col:33> 'T' lvalue ParmVar 0x559ea9de6578 'x' 'T &'
| `-CXXMethodDecl 0x559ea9e8afa8 <line:369:5, line:371:5> line:369:11 used read 'Args &(const char *, bool &)'
|   |-TemplateArgument type 'bool'
|   |-ParmVarDecl 0x559ea9e8adc0 <col:16, col:28> col:28 keyword 'const char *'
|   `-ParmVarDecl 0x559ea9e8ae98 <col:37, col:40> col:40 x 'bool &'
|-FunctionTemplateDecl 0x559ea9de6a58 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x559ea9de6790 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x559ea9de69b8 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x559ea9de6840 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9de68e8 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e18b00 <col:45, line:375:5>
|     `-ReturnStmt 0x559ea9e18af0 <line:374:9, col:42>
|       `-CallExpr 0x559ea9e18ab8 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e189d8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e18a58 <col:21> 'const char *' lvalue ParmVar 0x559ea9de6840 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e18a78 <col:30> 'const int' lvalue Var 0x559ea9de6058 'mandatory' 'const int'
|         `-DeclRefExpr 0x559ea9e18a98 <col:41> 'T' lvalue ParmVar 0x559ea9de68e8 'x' 'T &'
|-FunctionTemplateDecl 0x559ea9de6d88 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x559ea9de6ac0 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x559ea9de6ce8 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x559ea9de6b70 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9de6c18 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e18c50 <col:45, line:379:5>
|     `-ReturnStmt 0x559ea9e18c40 <line:378:9, col:43>
|       `-CallExpr 0x559ea9e18c08 <col:16, col:43> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e18b28 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e18ba8 <col:21> 'const char *' lvalue ParmVar 0x559ea9de6b70 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e18bc8 <col:30> 'const int' lvalue Var 0x559ea9de6150 'positional' 'const int'
|         `-DeclRefExpr 0x559ea9e18be8 <col:42> 'T' lvalue ParmVar 0x559ea9de6c18 'x' 'T &'
|-FunctionTemplateDecl 0x559ea9de70b8 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x559ea9de6df0 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x559ea9de7018 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x559ea9de6ea0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9de6f48 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e18e50 <col:46, line:383:5>
|     `-ReturnStmt 0x559ea9e18e40 <line:382:9, col:55>
|       `-CallExpr 0x559ea9e18e08 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e18c78 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e18cf8 <col:21> 'const char *' lvalue ParmVar 0x559ea9de6ea0 'keyword' 'const char *'
|         |-BinaryOperator 0x559ea9e18dc8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x559ea9e18d78 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x559ea9e18d58 <col:30> 'const int' lvalue Var 0x559ea9de6058 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x559ea9e18db0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x559ea9e18d90 <col:42> 'const int' lvalue Var 0x559ea9de6150 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x559ea9e18de8 <col:54> 'T' lvalue ParmVar 0x559ea9de6f48 'x' 'T &'
|-FunctionTemplateDecl 0x559ea9de74b8 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x559ea9de7120 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x559ea9de7418 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x559ea9de71d0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9de7250 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9de72f8 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e18f90 <col:54, line:388:5>
|     |-CallExpr 0x559ea9e18f18 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x559ea9e18e68 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x559ea9e18ea8 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x559ea9e18eb8 <col:30> 'const char *' lvalue ParmVar 0x559ea9de71d0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x559ea9e18ed8 <col:39> 'int' lvalue ParmVar 0x559ea9de7250 'flags' 'int'
|     | `-DeclRefExpr 0x559ea9e18ef8 <col:46> 'T' lvalue ParmVar 0x559ea9de72f8 'x' 'T &'
|     `-ReturnStmt 0x559ea9e18f80 <line:387:9, col:17>
|       `-UnaryOperator 0x559ea9e18f68 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x559ea9e18f58 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x559ea9de7968 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x559ea9de7528 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x559ea9de75a8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x559ea9de78c8 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x559ea9de7668 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9de7708 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x559ea9de77a8 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x559ea9e19100 <col:74, line:403:5>
|     `-ReturnStmt 0x559ea9e190f0 <line:402:9, col:56>
|       `-CallExpr 0x559ea9e190b0 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e18fc0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e19030 <col:28> 'const char *' lvalue ParmVar 0x559ea9de7668 'keyword' 'const char *'
|         |-IntegerLiteral 0x559ea9e19050 <col:37> 'int' 0
|         |-DeclRefExpr 0x559ea9e19070 <col:40> 'T' lvalue ParmVar 0x559ea9de7708 'x' 'T &'
|         `-DeclRefExpr 0x559ea9e19090 <col:43> 'const V' lvalue ParmVar 0x559ea9de77a8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x559ea9de7dd8 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x559ea9de79d8 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x559ea9de7a58 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x559ea9de7d38 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x559ea9de7b18 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9de7bb8 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x559ea9de7c58 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x559ea9e19268 <col:76, line:407:5>
|     `-ReturnStmt 0x559ea9e19258 <line:406:9, col:65>
|       `-CallExpr 0x559ea9e19218 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e19128 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e19198 <col:28> 'const char *' lvalue ParmVar 0x559ea9de7b18 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e191b8 <col:37> 'const int' lvalue Var 0x559ea9de6150 'positional' 'const int'
|         |-DeclRefExpr 0x559ea9e191d8 <col:49> 'T' lvalue ParmVar 0x559ea9de7bb8 'x' 'T &'
|         `-DeclRefExpr 0x559ea9e191f8 <col:52> 'const V' lvalue ParmVar 0x559ea9de7c58 'default_value' 'const V &'
|-FunctionTemplateDecl 0x559ea9de8328 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x559ea9de7e48 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x559ea9de7ec8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x559ea9de8288 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x559ea9de7f88 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9de8008 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9de80a8 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x559ea9de8148 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x559ea9e193d0 <col:85, line:412:5>
|     |-CallExpr 0x559ea9e19350 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x559ea9e19280 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x559ea9e192c0 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x559ea9e192d0 <col:37> 'const char *' lvalue ParmVar 0x559ea9de7f88 'keyword' 'const char *'
|     | |-DeclRefExpr 0x559ea9e192f0 <col:46> 'int' lvalue ParmVar 0x559ea9de8008 'flags' 'int'
|     | |-DeclRefExpr 0x559ea9e19310 <col:53> 'T' lvalue ParmVar 0x559ea9de80a8 'x' 'T &'
|     | `-DeclRefExpr 0x559ea9e19330 <col:56> 'const V' lvalue ParmVar 0x559ea9de8148 'default_value' 'const V &'
|     `-ReturnStmt 0x559ea9e193c0 <line:411:9, col:17>
|       `-UnaryOperator 0x559ea9e193a8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x559ea9e19398 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x559ea9de87b8 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x559ea9de83a0 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9de8418 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x559ea9de8718 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x559ea9de84d8 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x559ea9de8550 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x559ea9de85f8 <col:47, col:50> col:50 referenced x 'T &'
| | `-CompoundStmt 0x559ea9e19550 <col:53, line:425:5>
| |   `-ReturnStmt 0x559ea9e19540 <line:424:9, col:42>
| |     `-CallExpr 0x559ea9e19500 <col:16, col:42> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x559ea9e19400 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x559ea9e19480 <col:21> 'const char *' lvalue ParmVar 0x559ea9de84d8 'keyword' 'const char *'
| |       |-IntegerLiteral 0x559ea9e194a0 <col:30> 'int' 0
| |       |-DeclRefExpr 0x559ea9e194c0 <col:33> 'P' lvalue ParmVar 0x559ea9de8550 'parser' 'P'
| |       `-DeclRefExpr 0x559ea9e194e0 <col:41> 'T' lvalue ParmVar 0x559ea9de85f8 'x' 'T &'
| |-CXXMethodDecl 0x559ea9e8ba68 <line:423:5, line:425:5> line:423:11 used read 'Args &(const char *, AnnoArg, int &)'
| | |-TemplateArgument type 'AnnoArg'
| | |-TemplateArgument type 'int'
| | |-ParmVarDecl 0x559ea9e8b7d8 <col:16, col:28> col:28 keyword 'const char *'
| | |-ParmVarDecl 0x559ea9e8b878 <col:37, col:39> col:39 parser 'AnnoArg':'AnnoArg'
| | `-ParmVarDecl 0x559ea9e8b948 <col:47, col:50> col:50 x 'int &'
| `-CXXMethodDecl 0x559ea9e8c798 <col:5, line:425:5> line:423:11 used read 'Args &(const char *, SecondsArg, unsigned int &)'
|   |-TemplateArgument type 'SecondsArg'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x559ea9e8c508 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x559ea9e8c5a8 <col:37, col:39> col:39 parser 'SecondsArg':'SecondsArg'
|   `-ParmVarDecl 0x559ea9e8c678 <col:47, col:50> col:50 x 'unsigned int &'
|-FunctionTemplateDecl 0x559ea9de8c08 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x559ea9de8828 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9de88a8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9de8b68 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x559ea9de8968 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9de89e0 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9de8a88 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e196c8 <col:55, line:429:5>
|     `-ReturnStmt 0x559ea9e196b8 <line:428:9, col:50>
|       `-CallExpr 0x559ea9e19678 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e19578 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e195f8 <col:21> 'const char *' lvalue ParmVar 0x559ea9de8968 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e19618 <col:30> 'const int' lvalue Var 0x559ea9de6058 'mandatory' 'const int'
|         |-DeclRefExpr 0x559ea9e19638 <col:41> 'P' lvalue ParmVar 0x559ea9de89e0 'parser' 'P'
|         `-DeclRefExpr 0x559ea9e19658 <col:49> 'T' lvalue ParmVar 0x559ea9de8a88 'x' 'T &'
|-FunctionTemplateDecl 0x559ea9de9058 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x559ea9de8c78 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9de8cf8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9de8fb8 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x559ea9de8db8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9de8e30 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9de8ed8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e19840 <col:55, line:433:5>
|     `-ReturnStmt 0x559ea9e19830 <line:432:9, col:51>
|       `-CallExpr 0x559ea9e197f0 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e196f0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e19770 <col:21> 'const char *' lvalue ParmVar 0x559ea9de8db8 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e19790 <col:30> 'const int' lvalue Var 0x559ea9de6150 'positional' 'const int'
|         |-DeclRefExpr 0x559ea9e197b0 <col:42> 'P' lvalue ParmVar 0x559ea9de8e30 'parser' 'P'
|         `-DeclRefExpr 0x559ea9e197d0 <col:50> 'T' lvalue ParmVar 0x559ea9de8ed8 'x' 'T &'
|-FunctionTemplateDecl 0x559ea9de94a8 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x559ea9de90c8 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9de9148 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9de9408 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x559ea9de9208 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9de9280 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9de9328 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e19a68 <col:56, line:437:5>
|     `-ReturnStmt 0x559ea9e19a58 <line:436:9, col:63>
|       `-CallExpr 0x559ea9e19a18 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e19868 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e198e8 <col:21> 'const char *' lvalue ParmVar 0x559ea9de9208 'keyword' 'const char *'
|         |-BinaryOperator 0x559ea9e199b8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x559ea9e19968 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x559ea9e19948 <col:30> 'const int' lvalue Var 0x559ea9de6058 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x559ea9e199a0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x559ea9e19980 <col:42> 'const int' lvalue Var 0x559ea9de6150 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x559ea9e199d8 <col:54> 'P' lvalue ParmVar 0x559ea9de9280 'parser' 'P'
|         `-DeclRefExpr 0x559ea9e199f8 <col:62> 'T' lvalue ParmVar 0x559ea9de9328 'x' 'T &'
|-FunctionTemplateDecl 0x559ea9de99d8 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x559ea9de9518 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9de9598 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9de9938 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x559ea9de9658 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9de96d8 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9de9750 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9de97f8 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e19bd0 <col:64, line:442:5>
|     |-CallExpr 0x559ea9e19b50 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x559ea9e19a80 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x559ea9e19ac0 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x559ea9e19ad0 <col:30> 'const char *' lvalue ParmVar 0x559ea9de9658 'keyword' 'const char *'
|     | |-DeclRefExpr 0x559ea9e19af0 <col:39> 'int' lvalue ParmVar 0x559ea9de96d8 'flags' 'int'
|     | |-DeclRefExpr 0x559ea9e19b10 <col:46> 'P' lvalue ParmVar 0x559ea9de9750 'parser' 'P'
|     | `-DeclRefExpr 0x559ea9e19b30 <col:54> 'T' lvalue ParmVar 0x559ea9de97f8 'x' 'T &'
|     `-ReturnStmt 0x559ea9e19bc0 <line:441:9, col:17>
|       `-UnaryOperator 0x559ea9e19ba8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x559ea9e19b98 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x559ea9de9fd8 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x559ea9de9a50 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9de9ac8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x559ea9de9b48 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x559ea9de9f38 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x559ea9de9c10 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9de9c88 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9de9d28 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x559ea9de9df8 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x559ea9e19d68 <col:84, line:458:5>
|     `-ReturnStmt 0x559ea9e19d58 <line:457:9, col:64>
|       `-CallExpr 0x559ea9e19d10 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e19c00 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e19c70 <col:28> 'const char *' lvalue ParmVar 0x559ea9de9c10 'keyword' 'const char *'
|         |-IntegerLiteral 0x559ea9e19c90 <col:37> 'int' 0
|         |-DeclRefExpr 0x559ea9e19cb0 <col:40> 'P' lvalue ParmVar 0x559ea9de9c88 'parser' 'P'
|         |-DeclRefExpr 0x559ea9e19cd0 <col:48> 'T' lvalue ParmVar 0x559ea9de9d28 'x' 'T &'
|         `-DeclRefExpr 0x559ea9e19cf0 <col:51> 'const V' lvalue ParmVar 0x559ea9de9df8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x559ea9dea558 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x559ea9dea050 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9dea0c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x559ea9dea148 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x559ea9dea4b8 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x559ea9dea210 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9dea288 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9dea328 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x559ea9dea3c8 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x559ea9e19ef8 <col:86, line:462:5>
|     `-ReturnStmt 0x559ea9e19ee8 <line:461:9, col:73>
|       `-CallExpr 0x559ea9e19ea0 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e19d90 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e19e00 <col:28> 'const char *' lvalue ParmVar 0x559ea9dea210 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e19e20 <col:37> 'const int' lvalue Var 0x559ea9de6150 'positional' 'const int'
|         |-DeclRefExpr 0x559ea9e19e40 <col:49> 'P' lvalue ParmVar 0x559ea9dea288 'parser' 'P'
|         |-DeclRefExpr 0x559ea9e19e60 <col:57> 'T' lvalue ParmVar 0x559ea9dea328 'x' 'T &'
|         `-DeclRefExpr 0x559ea9e19e80 <col:60> 'const V' lvalue ParmVar 0x559ea9dea3c8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x559ea9deabb8 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x559ea9dea5d0 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9dea648 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x559ea9dea6c8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x559ea9deab18 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x559ea9dea790 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9dea810 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9dea888 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9dea928 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x559ea9dea9c8 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x559ea9e1a088 <col:95, line:467:5>
|     |-CallExpr 0x559ea9e1a000 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x559ea9e19f10 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x559ea9e19f50 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x559ea9e19f60 <col:37> 'const char *' lvalue ParmVar 0x559ea9dea790 'keyword' 'const char *'
|     | |-DeclRefExpr 0x559ea9e19f80 <col:46> 'int' lvalue ParmVar 0x559ea9dea810 'flags' 'int'
|     | |-DeclRefExpr 0x559ea9e19fa0 <col:53> 'P' lvalue ParmVar 0x559ea9dea888 'parser' 'P'
|     | |-DeclRefExpr 0x559ea9e19fc0 <col:61> 'T' lvalue ParmVar 0x559ea9dea928 'x' 'T &'
|     | `-DeclRefExpr 0x559ea9e19fe0 <col:64> 'const V' lvalue ParmVar 0x559ea9dea9c8 'default_value' 'const V &'
|     `-ReturnStmt 0x559ea9e1a078 <line:466:9, col:17>
|       `-UnaryOperator 0x559ea9e1a060 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x559ea9e1a050 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x559ea9deb198 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x559ea9deac38 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9deacb8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x559ea9dead38 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x559ea9deb0f8 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x559ea9deae00 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9deae78 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9deaf18 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x559ea9deafb8 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x559ea9e1a230 <col:63, line:481:5>
|     `-ReturnStmt 0x559ea9e1a220 <line:480:9, col:47>
|       `-CallExpr 0x559ea9e1a1d8 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1a0b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1a138 <col:21> 'const char *' lvalue ParmVar 0x559ea9deae00 'keyword' 'const char *'
|         |-IntegerLiteral 0x559ea9e1a158 <col:30> 'int' 0
|         |-DeclRefExpr 0x559ea9e1a178 <col:33> 'P' lvalue ParmVar 0x559ea9deae78 'parser' 'P'
|         |-DeclRefExpr 0x559ea9e1a198 <col:41> 'T1' lvalue ParmVar 0x559ea9deaf18 'x1' 'T1 &'
|         `-DeclRefExpr 0x559ea9e1a1b8 <col:45> 'T2' lvalue ParmVar 0x559ea9deafb8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x559ea9deb718 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x559ea9deb210 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9deb288 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x559ea9deb308 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x559ea9deb678 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x559ea9deb3d0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9deb448 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9deb4e8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x559ea9deb588 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x559ea9e1a3d0 <col:65, line:485:5>
|     `-ReturnStmt 0x559ea9e1a3c0 <line:484:9, col:55>
|       `-CallExpr 0x559ea9e1a378 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1a258 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1a2d8 <col:21> 'const char *' lvalue ParmVar 0x559ea9deb3d0 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e1a2f8 <col:30> 'const int' lvalue Var 0x559ea9de6058 'mandatory' 'const int'
|         |-DeclRefExpr 0x559ea9e1a318 <col:41> 'P' lvalue ParmVar 0x559ea9deb448 'parser' 'P'
|         |-DeclRefExpr 0x559ea9e1a338 <col:49> 'T1' lvalue ParmVar 0x559ea9deb4e8 'x1' 'T1 &'
|         `-DeclRefExpr 0x559ea9e1a358 <col:53> 'T2' lvalue ParmVar 0x559ea9deb588 'x2' 'T2 &'
|-FunctionTemplateDecl 0x559ea9debc98 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x559ea9deb790 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9deb808 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x559ea9deb888 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x559ea9debbf8 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x559ea9deb950 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9deb9c8 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9deba68 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x559ea9debb08 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x559ea9e1a570 <col:65, line:489:5>
|     `-ReturnStmt 0x559ea9e1a560 <line:488:9, col:56>
|       `-CallExpr 0x559ea9e1a518 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1a3f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1a478 <col:21> 'const char *' lvalue ParmVar 0x559ea9deb950 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e1a498 <col:30> 'const int' lvalue Var 0x559ea9de6150 'positional' 'const int'
|         |-DeclRefExpr 0x559ea9e1a4b8 <col:42> 'P' lvalue ParmVar 0x559ea9deb9c8 'parser' 'P'
|         |-DeclRefExpr 0x559ea9e1a4d8 <col:50> 'T1' lvalue ParmVar 0x559ea9deba68 'x1' 'T1 &'
|         `-DeclRefExpr 0x559ea9e1a4f8 <col:54> 'T2' lvalue ParmVar 0x559ea9debb08 'x2' 'T2 &'
|-FunctionTemplateDecl 0x559ea9df0108 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x559ea9debd10 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9debd88 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x559ea9debe08 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x559ea9df0068 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x559ea9debed0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9defe30 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9defed8 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x559ea9deff78 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x559ea9e1a7c0 <col:66, line:493:5>
|     `-ReturnStmt 0x559ea9e1a7b0 <line:492:9, col:68>
|       `-CallExpr 0x559ea9e1a768 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1a598 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1a618 <col:21> 'const char *' lvalue ParmVar 0x559ea9debed0 'keyword' 'const char *'
|         |-BinaryOperator 0x559ea9e1a6e8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x559ea9e1a698 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x559ea9e1a678 <col:30> 'const int' lvalue Var 0x559ea9de6058 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x559ea9e1a6d0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x559ea9e1a6b0 <col:42> 'const int' lvalue Var 0x559ea9de6150 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x559ea9e1a708 <col:54> 'P' lvalue ParmVar 0x559ea9defe30 'parser' 'P'
|         |-DeclRefExpr 0x559ea9e1a728 <col:62> 'T1' lvalue ParmVar 0x559ea9defed8 'x1' 'T1 &'
|         `-DeclRefExpr 0x559ea9e1a748 <col:66> 'T2' lvalue ParmVar 0x559ea9deff78 'x2' 'T2 &'
|-FunctionTemplateDecl 0x559ea9df0768 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x559ea9df0180 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9df01f8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x559ea9df0278 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x559ea9df06c8 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x559ea9df0340 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df03c0 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9df0438 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9df04d8 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x559ea9df0578 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x559ea9e1a950 <col:74, line:498:5>
|     |-CallExpr 0x559ea9e1a8c8 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x559ea9e1a7d8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x559ea9e1a818 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x559ea9e1a828 <col:30> 'const char *' lvalue ParmVar 0x559ea9df0340 'keyword' 'const char *'
|     | |-DeclRefExpr 0x559ea9e1a848 <col:39> 'int' lvalue ParmVar 0x559ea9df03c0 'flags' 'int'
|     | |-DeclRefExpr 0x559ea9e1a868 <col:46> 'P' lvalue ParmVar 0x559ea9df0438 'parser' 'P'
|     | |-DeclRefExpr 0x559ea9e1a888 <col:54> 'T1' lvalue ParmVar 0x559ea9df04d8 'x1' 'T1 &'
|     | `-DeclRefExpr 0x559ea9e1a8a8 <col:58> 'T2' lvalue ParmVar 0x559ea9df0578 'x2' 'T2 &'
|     `-ReturnStmt 0x559ea9e1a940 <line:497:9, col:17>
|       `-UnaryOperator 0x559ea9e1a928 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x559ea9e1a918 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x559ea9df0ac8 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x559ea9df07e8 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x559ea9df0a28 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x559ea9df08a0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df0918 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x559ea9e1aa98 <col:52, line:509:5>
|     `-ReturnStmt 0x559ea9e1aa88 <line:508:9, col:44>
|       `-CallExpr 0x559ea9e1aa50 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1a980 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1a9f0 <col:26> 'const char *' lvalue ParmVar 0x559ea9df08a0 'keyword' 'const char *'
|         |-IntegerLiteral 0x559ea9e1aa10 <col:35> 'int' 0
|         `-DeclRefExpr 0x559ea9e1aa30 <col:38> 'P' lvalue ParmVar 0x559ea9df0918 'parser' 'P'
|-FunctionTemplateDecl 0x559ea9df0dc8 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x559ea9df0b30 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x559ea9df0d28 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x559ea9df0be0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df0c58 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x559ea9e1abd8 <col:54, line:513:5>
|     `-ReturnStmt 0x559ea9e1abc8 <line:512:9, col:52>
|       `-CallExpr 0x559ea9e1ab90 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1aac0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1ab30 <col:26> 'const char *' lvalue ParmVar 0x559ea9df0be0 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e1ab50 <col:35> 'const int' lvalue Var 0x559ea9de6058 'mandatory' 'const int'
|         `-DeclRefExpr 0x559ea9e1ab70 <col:46> 'P' lvalue ParmVar 0x559ea9df0c58 'parser' 'P'
|-FunctionTemplateDecl 0x559ea9df10c8 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x559ea9df0e30 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x559ea9df1028 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x559ea9df0ee0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df0f58 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x559ea9e1ad18 <col:54, line:517:5>
|     `-ReturnStmt 0x559ea9e1ad08 <line:516:9, col:53>
|       `-CallExpr 0x559ea9e1acd0 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1ac00 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1ac70 <col:26> 'const char *' lvalue ParmVar 0x559ea9df0ee0 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e1ac90 <col:35> 'const int' lvalue Var 0x559ea9de6150 'positional' 'const int'
|         `-DeclRefExpr 0x559ea9e1acb0 <col:47> 'P' lvalue ParmVar 0x559ea9df0f58 'parser' 'P'
|-FunctionTemplateDecl 0x559ea9df13c8 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x559ea9df1130 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x559ea9df1328 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x559ea9df11e0 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df1258 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x559ea9e1af08 <col:55, line:521:5>
|     `-ReturnStmt 0x559ea9e1aef8 <line:520:9, col:65>
|       `-CallExpr 0x559ea9e1aec0 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1ad40 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1adb0 <col:26> 'const char *' lvalue ParmVar 0x559ea9df11e0 'keyword' 'const char *'
|         |-BinaryOperator 0x559ea9e1ae80 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x559ea9e1ae30 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x559ea9e1ae10 <col:35> 'const int' lvalue Var 0x559ea9de6058 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x559ea9e1ae68 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x559ea9e1ae48 <col:47> 'const int' lvalue Var 0x559ea9de6150 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x559ea9e1aea0 <col:59> 'P' lvalue ParmVar 0x559ea9df1258 'parser' 'P'
|-FunctionTemplateDecl 0x559ea9df1798 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x559ea9df1430 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x559ea9df16f8 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x559ea9df14e0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df1560 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9df15d8 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x559ea9e1b048 <col:63, line:526:5>
|     |-CallExpr 0x559ea9e1afd0 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x559ea9e1af20 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x559ea9e1af60 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x559ea9e1af70 <col:35> 'const char *' lvalue ParmVar 0x559ea9df14e0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x559ea9e1af90 <col:44> 'int' lvalue ParmVar 0x559ea9df1560 'flags' 'int'
|     | `-DeclRefExpr 0x559ea9e1afb0 <col:51> 'P' lvalue ParmVar 0x559ea9df15d8 'parser' 'P'
|     `-ReturnStmt 0x559ea9e1b038 <line:525:9, col:17>
|       `-UnaryOperator 0x559ea9e1b020 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x559ea9e1b010 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x559ea9df1be8 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x559ea9df1808 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9df1888 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9df1b48 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x559ea9df1948 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df19c0 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9df1a68 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e1b1a0 <col:58, line:541:5>
|     `-ReturnStmt 0x559ea9e1b190 <line:540:9, col:39>
|       `-CallExpr 0x559ea9e1b158 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1b078 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1b0f8 <col:21> 'const char *' lvalue ParmVar 0x559ea9df1948 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e1b118 <col:30> 'P' lvalue ParmVar 0x559ea9df19c0 'parser' 'P'
|         `-DeclRefExpr 0x559ea9e1b138 <col:38> 'T' lvalue ParmVar 0x559ea9df1a68 'x' 'T &'
|-FunctionTemplateDecl 0x559ea9df2038 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x559ea9df1c58 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9df1cd8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9df1f98 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x559ea9df1d98 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df1e10 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9df1eb8 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e1b2d8 <col:60, line:545:5>
|     `-ReturnStmt 0x559ea9e1b2c8 <line:544:9, col:41>
|       `-CallExpr 0x559ea9e1b290 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1b1c8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1b230 <col:23> 'const char *' lvalue ParmVar 0x559ea9df1d98 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e1b250 <col:32> 'P' lvalue ParmVar 0x559ea9df1e10 'parser' 'P'
|         `-DeclRefExpr 0x559ea9e1b270 <col:40> 'T' lvalue ParmVar 0x559ea9df1eb8 'x' 'T &'
|-FunctionTemplateDecl 0x559ea9df2488 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x559ea9df20a8 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9df2128 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9df23e8 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x559ea9df21e8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df2260 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9df2308 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e1b410 <col:60, line:549:5>
|     `-ReturnStmt 0x559ea9e1b400 <line:548:9, col:41>
|       `-CallExpr 0x559ea9e1b3c8 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1b300 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1b368 <col:23> 'const char *' lvalue ParmVar 0x559ea9df21e8 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e1b388 <col:32> 'P' lvalue ParmVar 0x559ea9df2260 'parser' 'P'
|         `-DeclRefExpr 0x559ea9e1b3a8 <col:40> 'T' lvalue ParmVar 0x559ea9df2308 'x' 'T &'
|-FunctionTemplateDecl 0x559ea9df28d8 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x559ea9df24f8 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9df2578 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9df2838 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x559ea9df2638 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df26b0 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9df2758 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e1b548 <col:61, line:553:5>
|     `-ReturnStmt 0x559ea9e1b538 <line:552:9, col:42>
|       `-CallExpr 0x559ea9e1b500 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1b438 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1b4a0 <col:24> 'const char *' lvalue ParmVar 0x559ea9df2638 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e1b4c0 <col:33> 'P' lvalue ParmVar 0x559ea9df26b0 'parser' 'P'
|         `-DeclRefExpr 0x559ea9e1b4e0 <col:41> 'T' lvalue ParmVar 0x559ea9df2758 'x' 'T &'
|-FunctionTemplateDecl 0x559ea9df2db8 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x559ea9df2948 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9df29c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9df2d18 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x559ea9df2a88 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df2b08 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9df2b80 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9df2c28 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e1b6c0 <col:69, line:557:5>
|     `-ReturnStmt 0x559ea9e1b6b0 <line:556:9, col:46>
|       `-CallExpr 0x559ea9e1b670 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1b570 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1b5f0 <col:21> 'const char *' lvalue ParmVar 0x559ea9df2a88 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e1b610 <col:30> 'int' lvalue ParmVar 0x559ea9df2b08 'flags' 'int'
|         |-DeclRefExpr 0x559ea9e1b630 <col:37> 'P' lvalue ParmVar 0x559ea9df2b80 'parser' 'P'
|         `-DeclRefExpr 0x559ea9e1b650 <col:45> 'T' lvalue ParmVar 0x559ea9df2c28 'x' 'T &'
|-FunctionTemplateDecl 0x559ea9df30c8 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x559ea9df2e30 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x559ea9df3028 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x559ea9df2ee0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df2f58 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x559ea9e1b800 <col:56, line:571:5>
|     `-ReturnStmt 0x559ea9e1b7f0 <line:570:9, col:48>
|       `-CallExpr 0x559ea9e1b7b8 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1b6e8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1b758 <col:30> 'const char *' lvalue ParmVar 0x559ea9df2ee0 'keyword' 'const char *'
|         |-IntegerLiteral 0x559ea9e1b778 <col:39> 'int' 0
|         `-DeclRefExpr 0x559ea9e1b798 <col:42> 'P' lvalue ParmVar 0x559ea9df2f58 'parser' 'P'
|-FunctionTemplateDecl 0x559ea9df3458 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x559ea9df3130 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x559ea9df33b8 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x559ea9df31e0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df3260 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9df32d8 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x559ea9e1b9d0 <col:67, line:576:5>
|     |-CallExpr 0x559ea9e1b958 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x559ea9e1b818 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x559ea9e1b858 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x559ea9e1b868 <col:39> 'const char *' lvalue ParmVar 0x559ea9df31e0 'keyword' 'const char *'
|     | |-BinaryOperator 0x559ea9e1b918 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x559ea9e1b8c8 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x559ea9e1b888 <col:48> 'int' lvalue ParmVar 0x559ea9df3260 'flags' 'int'
|     | | `-ImplicitCastExpr 0x559ea9e1b900 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x559ea9e1b8e0 <col:56> 'const int' lvalue Var 0x559ea9de6340 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x559ea9e1b938 <col:68> 'P' lvalue ParmVar 0x559ea9df32d8 'parser' 'P'
|     `-ReturnStmt 0x559ea9e1b9c0 <line:575:9, col:17>
|       `-UnaryOperator 0x559ea9e1b9a8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x559ea9e1b998 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x559ea9df38a8 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x559ea9df34c8 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9df3548 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9df3808 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x559ea9df3608 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df3680 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9df3728 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e1bb40 <col:62, line:592:5>
|     `-ReturnStmt 0x559ea9e1bb30 <line:591:9, col:51>
|       `-CallExpr 0x559ea9e1baf0 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1ba00 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1ba70 <col:30> 'const char *' lvalue ParmVar 0x559ea9df3608 'keyword' 'const char *'
|         |-IntegerLiteral 0x559ea9e1ba90 <col:39> 'int' 0
|         |-DeclRefExpr 0x559ea9e1bab0 <col:42> 'P' lvalue ParmVar 0x559ea9df3680 'parser' 'P'
|         `-DeclRefExpr 0x559ea9e1bad0 <col:50> 'T' lvalue ParmVar 0x559ea9df3728 'x' 'T &'
|-FunctionTemplateDecl 0x559ea9df3d88 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x559ea9df3918 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9df3998 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9df3ce8 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x559ea9df3a58 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df3ad8 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9df3b50 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9df3bf8 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e1bd38 <col:73, line:597:5>
|     |-CallExpr 0x559ea9e1bcb8 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x559ea9e1bb58 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x559ea9e1bb98 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x559ea9e1bba8 <col:39> 'const char *' lvalue ParmVar 0x559ea9df3a58 'keyword' 'const char *'
|     | |-BinaryOperator 0x559ea9e1bc58 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x559ea9e1bc08 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x559ea9e1bbc8 <col:48> 'int' lvalue ParmVar 0x559ea9df3ad8 'flags' 'int'
|     | | `-ImplicitCastExpr 0x559ea9e1bc40 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x559ea9e1bc20 <col:56> 'const int' lvalue Var 0x559ea9de6340 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x559ea9e1bc78 <col:68> 'P' lvalue ParmVar 0x559ea9df3b50 'parser' 'P'
|     | `-DeclRefExpr 0x559ea9e1bc98 <col:76> 'T' lvalue ParmVar 0x559ea9df3bf8 'x' 'T &'
|     `-ReturnStmt 0x559ea9e1bd28 <line:596:9, col:17>
|       `-UnaryOperator 0x559ea9e1bd10 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x559ea9e1bd00 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x559ea9df4338 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x559ea9df3e00 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9df3e78 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9df4298 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x559ea9df3f38 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df3fb0 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9df4170 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x559ea9e1bea8 <col:65, line:614:5>
|     `-ReturnStmt 0x559ea9e1be98 <line:613:9, col:46>
|       `-CallExpr 0x559ea9e1be58 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1bd68 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1bdd8 <col:25> 'const char *' lvalue ParmVar 0x559ea9df3f38 'keyword' 'const char *'
|         |-IntegerLiteral 0x559ea9e1bdf8 <col:34> 'int' 0
|         |-DeclRefExpr 0x559ea9e1be18 <col:37> 'P' lvalue ParmVar 0x559ea9df3fb0 'parser' 'P'
|         `-DeclRefExpr 0x559ea9e1be38 <col:45> 'Vector<T>' lvalue ParmVar 0x559ea9df4170 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x559ea9df4768 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x559ea9df43a8 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x559ea9df46c8 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x559ea9df4460 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df45b0 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x559ea9e1c0c0 <col:55, line:618:5>
|     `-ReturnStmt 0x559ea9e1c0b0 <line:617:9, col:55>
|       `-CallExpr 0x559ea9e1c070 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1bed0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1bf40 <col:25> 'const char *' lvalue ParmVar 0x559ea9df4460 'keyword' 'const char *'
|         |-IntegerLiteral 0x559ea9e1bf60 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x559ea9e1c030 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x559ea9e1c050 <col:54> 'Vector<T>' lvalue ParmVar 0x559ea9df45b0 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x559ea9df4d38 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x559ea9df47d0 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9df4848 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9df4c98 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x559ea9df4908 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df4988 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9df4a00 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9df4b50 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x559ea9e1c2b8 <col:76, line:623:5>
|     |-CallExpr 0x559ea9e1c238 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x559ea9e1c0d8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x559ea9e1c118 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x559ea9e1c128 <col:34> 'const char *' lvalue ParmVar 0x559ea9df4908 'keyword' 'const char *'
|     | |-BinaryOperator 0x559ea9e1c1d8 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x559ea9e1c188 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x559ea9e1c148 <col:43> 'int' lvalue ParmVar 0x559ea9df4988 'flags' 'int'
|     | | `-ImplicitCastExpr 0x559ea9e1c1c0 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x559ea9e1c1a0 <col:51> 'const int' lvalue Var 0x559ea9de6340 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x559ea9e1c1f8 <col:63> 'P' lvalue ParmVar 0x559ea9df4a00 'parser' 'P'
|     | `-DeclRefExpr 0x559ea9e1c218 <col:71> 'Vector<T>' lvalue ParmVar 0x559ea9df4b50 'x' 'Vector<T> &'
|     `-ReturnStmt 0x559ea9e1c2a8 <line:622:9, col:17>
|       `-UnaryOperator 0x559ea9e1c290 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x559ea9e1c280 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x559ea9df5278 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x559ea9df4db0 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9df4e28 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9df51d8 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x559ea9df4ee8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df4f68 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9df50b0 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x559ea9e1c520 <col:66, line:627:5>
|     `-ReturnStmt 0x559ea9e1c510 <line:626:9, col:59>
|       `-CallExpr 0x559ea9e1c4d0 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x559ea9e1c2e8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x559ea9e1c358 <col:25> 'const char *' lvalue ParmVar 0x559ea9df4ee8 'keyword' 'const char *'
|         |-DeclRefExpr 0x559ea9e1c378 <col:34> 'int' lvalue ParmVar 0x559ea9df4f68 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x559ea9e1c490 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x559ea9e1c4b0 <col:58> 'Vector<T>' lvalue ParmVar 0x559ea9df50b0 'x' 'Vector<T> &'
|-CXXMethodDecl 0x559ea9df5308 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x559ea9e1c5a0 <col:25, line:633:5>
|   `-ReturnStmt 0x559ea9e1c590 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x559ea9e1c578 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x559ea9e1c548 <col:16> 'const bool' lvalue ->_status 0x559ea9e02da8
|         `-CXXThisExpr 0x559ea9e1c538 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x559ea9df5488 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x559ea9df53c0 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x559ea9e1c688 <col:27, line:639:5>
|   |-BinaryOperator 0x559ea9e1c630 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x559ea9e1c5b8 <col:9> 'bool' lvalue ParmVar 0x559ea9df53c0 'x' 'bool &'
|   | `-ImplicitCastExpr 0x559ea9e1c618 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x559ea9e1c5e8 <col:13> 'bool' lvalue ->_status 0x559ea9e02da8
|   |     `-CXXThisExpr 0x559ea9e1c5d8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x559ea9e1c678 <line:638:9, col:17>
|     `-UnaryOperator 0x559ea9e1c660 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559ea9e1c650 <col:17> 'Args *' this
|-CXXMethodDecl 0x559ea9df5608 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x559ea9df5548 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x559ea9e1c778 <col:39, line:644:5>
|   |-BinaryOperator 0x559ea9e1c720 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x559ea9e1c6a8 <col:9> 'bool' lvalue ParmVar 0x559ea9df5548 'x' 'bool &'
|   | `-ImplicitCastExpr 0x559ea9e1c708 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x559ea9e1c6d8 <col:13> 'const bool' lvalue ->_status 0x559ea9e02da8
|   |     `-CXXThisExpr 0x559ea9e1c6c8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x559ea9e1c768 <line:643:9, col:17>
|     `-UnaryOperator 0x559ea9e1c750 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559ea9e1c740 <col:17> 'const Args *' this
|-CXXMethodDecl 0x559ea9df56d0 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x559ea9e1c820 <col:30, line:651:5>
|   `-ReturnStmt 0x559ea9e1c810 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x559ea9e1c7f8 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x559ea9e1c7c8 <col:16> 'bool' lvalue ->_read_status 0x559ea9ddeaf0
|         `-ImplicitCastExpr 0x559ea9e1c7a8 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x559ea9e1c798 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x559ea9df5818 <line:655:5, line:658:5> line:655:11 used read_status 'Args &(bool &)'
| |-ParmVarDecl 0x559ea9df5788 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x559ea9e1c928 <col:32, line:658:5>
|   |-BinaryOperator 0x559ea9e1c8d0 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x559ea9e1c838 <col:9> 'bool' lvalue ParmVar 0x559ea9df5788 'x' 'bool &'
|   | `-ImplicitCastExpr 0x559ea9e1c8b8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x559ea9e1c888 <col:13> 'bool' lvalue ->_read_status 0x559ea9ddeaf0
|   |     `-ImplicitCastExpr 0x559ea9e1c868 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x559ea9e1c858 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x559ea9e1c918 <line:657:9, col:17>
|     `-UnaryOperator 0x559ea9e1c900 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559ea9e1c8f0 <col:17> 'Args *' this
|-CXXMethodDecl 0x559ea9df5968 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x559ea9df58d8 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x559ea9e1ca38 <col:44, line:663:5>
|   |-BinaryOperator 0x559ea9e1c9e0 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x559ea9e1c948 <col:9> 'bool' lvalue ParmVar 0x559ea9df58d8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x559ea9e1c9c8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x559ea9e1c998 <col:13> 'bool' lvalue ->_read_status 0x559ea9ddeaf0
|   |     `-ImplicitCastExpr 0x559ea9e1c978 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x559ea9e1c968 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x559ea9e1ca28 <line:662:9, col:17>
|     `-UnaryOperator 0x559ea9e1ca10 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559ea9e1ca00 <col:17> 'const Args *' this
|-CXXMethodDecl 0x559ea9df5a30 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x559ea9df5af8 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x559ea9df5bc0 <line:684:5, col:17> col:9 used consume 'int ()'
|-CXXMethodDecl 0x559ea9df5c88 <line:693:5, col:18> col:9 complete 'int ()'
|-FunctionTemplateDecl 0x559ea9df5f98 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x559ea9df5d28 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x559ea9df5ef8 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x559ea9df5e08 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e1cdf8 <col:19, line:706:5>
|     `-IfStmt 0x559ea9e1cdd0 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x559ea9e1cb38 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x559ea9e1cd00 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x559ea9e1ccd0 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x559ea9e1cc90 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x559ea9e1cb90 <col:42> '<bound member function type>' ->simple_slot 0x559ea9e15f50
|       |     | `-CXXThisExpr 0x559ea9e1cb80 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x559ea9e1cc30 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x559ea9e1cbe0 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x559ea9d50360 0x559ea9a96c48
|       |     | `-DeclRefExpr 0x559ea9e1cbc0 <col:55> 'T' lvalue ParmVar 0x559ea9df5e08 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x559ea9e1cc70 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x559ea9e1cdc0 <line:705:13, col:34>
|         `-CallExpr 0x559ea9e1cd98 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x559ea9e1cd20 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x559ea9e1cd78 <col:33> 'T' lvalue ParmVar 0x559ea9df5e08 'x' 'T &'
|-FunctionTemplateDecl 0x559ea9df6268 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x559ea9df5ff8 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x559ea9df61c8 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x559ea9df60d8 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x559ea9e1d1d0 <col:31, line:717:5>
|     |-DeclStmt 0x559ea9e1cf38 <line:713:9, col:23>
|     | `-VarDecl 0x559ea9e1ce20 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x559ea9e1cf10 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x559ea9e1ce98 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x559ea9e1cef0 <col:21> 'T' lvalue ParmVar 0x559ea9df60d8 'x' 'T &'
|     |-IfStmt 0x559ea9e1d180 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x559ea9e1d028 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x559ea9e1d160 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x559ea9e1d100 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x559ea9e1d090 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x559ea9c49ef8 0x559ea9c49b18 0x559ea9c49748 0x559ea9c49368 0x559ea9c48f88 0x559ea9c48bb8
|     |   | `-DeclRefExpr 0x559ea9e1d070 <col:14> 'T *' lvalue Var 0x559ea9e1ce20 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x559ea9e1d140 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x559ea9e1d1b8 <line:716:9, col:16>
|       `-DeclRefExpr 0x559ea9e1d198 <col:16> 'T *' lvalue Var 0x559ea9e1ce20 's' 'T *'
|-FunctionTemplateDecl 0x559ea9df6678 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x559ea9df62c8 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x559ea9df6348 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x559ea9df65d8 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x559ea9df6428 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x559ea9df64c8 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x559ea9e1d4e0 <col:37, line:726:5>
|     |-IfStmt 0x559ea9e1d470 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x559ea9e1d490 <line:723:13, col:26>
|     | | `-VarDecl 0x559ea9e1d238 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x559ea9e1d328 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x559ea9e1d2b0 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x559ea9e1d308 <col:25> 'T' lvalue ParmVar 0x559ea9df6428 'x' 'T &'
|     | |-DeclRefExpr 0x559ea9e1d350 <col:16> 'T *' lvalue Var 0x559ea9e1d238 's' 'T *'
|     | `-BinaryOperator 0x559ea9e1d450 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x559ea9e1d400 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x559ea9e1d390 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x559ea9c49ef8 0x559ea9c49b18 0x559ea9c49748 0x559ea9c49368 0x559ea9c48f88 0x559ea9c48bb8
|     |   | `-DeclRefExpr 0x559ea9e1d370 <col:14> 'T *' lvalue Var 0x559ea9e1d238 's' 'T *'
|     |   `-DeclRefExpr 0x559ea9e1d430 <col:18> 'const V' lvalue ParmVar 0x559ea9df64c8 'value' 'const V &'
|     `-ReturnStmt 0x559ea9e1d4d0 <line:725:9, col:17>
|       `-UnaryOperator 0x559ea9e1d4b8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x559ea9e1d4a8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x559ea9df6a78 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x559ea9df66e0 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x559ea9df69d8 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x559ea9df6790 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df6810 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9df68b8 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x559ea9e1e300 <col:65, line:737:5>
|     |-DeclStmt 0x559ea9e1d578 <line:732:9, col:26>
|     | `-VarDecl 0x559ea9e1d510 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x559ea9e1e2c8 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x559ea9e1e2e8 <line:733:13, col:58>
|       | `-VarDecl 0x559ea9e1d5a0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x559ea9e1d780 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x559ea9e1d750 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x559ea9e1d738 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x559ea9e1d718 <col:26, col:58> 'String' (CXXTemporary 0x559ea9e1d718)
|       |           `-CXXMemberCallExpr 0x559ea9e1d6a8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x559ea9e1d618 <col:26> '<bound member function type>' ->find 0x559ea9e15568
|       |             | `-CXXThisExpr 0x559ea9e1d608 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x559ea9e1d6e0 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x559ea9e1d648 <col:31> 'const char *' lvalue ParmVar 0x559ea9df6790 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x559ea9e1d6f8 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x559ea9e1d668 <col:40> 'int' lvalue ParmVar 0x559ea9df6810 'flags' 'int'
|       |             `-DeclRefExpr 0x559ea9e1d688 <col:47> 'Args::Slot *' lvalue Var 0x559ea9e1d510 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x559ea9e1d838 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x559ea9e1d820 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x559ea9e1d800 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x559ea9e1d7d0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x559ea9a595c8
|       |       `-ImplicitCastExpr 0x559ea9e1d7b8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x559ea9e1d798 <col:20> 'String' lvalue Var 0x559ea9e1d5a0 'str' 'String'
|       `-CompoundStmt 0x559ea9e1e2a8 <col:61, line:736:9>
|         |-DeclStmt 0x559ea9e1dcf0 <line:734:13, col:76>
|         | `-VarDecl 0x559ea9e1d888 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x559ea9e1dcc0 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x559ea9e1dc30 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x559ea9e1dc78 <col:60> 'T' lvalue ParmVar 0x559ea9df68b8 'variable' 'T &'
|         |     `-UnaryOperator 0x559ea9e1dca8 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x559ea9e1dc98 <col:71> 'Args *' this
|         `-CallExpr 0x559ea9e1e278 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x559ea9e1dd18 <col:13> '<bound member function type>' ->postparse 0x559ea9e15778
|           | `-CXXThisExpr 0x559ea9e1dd08 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x559ea9e1e238 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x559ea9e1dd48 <col:23> 'T *' lvalue Var 0x559ea9e1d888 's' 'T *'
|           | `-CallExpr 0x559ea9e1e1f8 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x559ea9e1dfd0 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x559ea9e1e0d0 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x559ea9e1e0f0 <col:86> 'String' lvalue Var 0x559ea9e1d5a0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x559ea9e1e1a0 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x559ea9e1e130 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x559ea9c49ef8 0x559ea9c49b18 0x559ea9c49748 0x559ea9c49368 0x559ea9c48f88 0x559ea9c48bb8
|           |   | `-DeclRefExpr 0x559ea9e1e110 <col:92> 'T *' lvalue Var 0x559ea9e1d888 's' 'T *'
|           |   `-UnaryOperator 0x559ea9e1e1e0 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x559ea9e1e1d0 <col:96> 'Args *' this
|           `-DeclRefExpr 0x559ea9e1e258 <col:103> 'Args::Slot *' lvalue Var 0x559ea9e1d510 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x559ea9df6fc8 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x559ea9df6ae8 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x559ea9df6b68 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x559ea9df6f28 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x559ea9df6c28 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df6ca8 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9df6d48 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x559ea9df6de8 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x559ea9e1f1a0 <col:88, line:745:5>
|     |-DeclStmt 0x559ea9e1e398 <line:741:9, col:26>
|     | `-VarDecl 0x559ea9e1e330 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x559ea9e1e5b8 <line:742:9, col:55>
|     | `-VarDecl 0x559ea9e1e3c0 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x559ea9e1e5a0 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x559ea9e1e570 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x559ea9e1e558 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x559ea9e1e538 <col:22, col:54> 'String' (CXXTemporary 0x559ea9e1e538)
|     |           `-CXXMemberCallExpr 0x559ea9e1e4c8 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x559ea9e1e438 <col:22> '<bound member function type>' ->find 0x559ea9e15568
|     |             | `-CXXThisExpr 0x559ea9e1e428 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x559ea9e1e500 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x559ea9e1e468 <col:27> 'const char *' lvalue ParmVar 0x559ea9df6c28 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x559ea9e1e518 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x559ea9e1e488 <col:36> 'int' lvalue ParmVar 0x559ea9df6ca8 'flags' 'int'
|     |             `-DeclRefExpr 0x559ea9e1e4a8 <col:43> 'Args::Slot *' lvalue Var 0x559ea9e1e330 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x559ea9e1e990 <line:743:9, col:72>
|     | `-VarDecl 0x559ea9e1e608 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x559ea9e1e960 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x559ea9e1e8d0 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x559ea9e1e918 <col:56> 'T' lvalue ParmVar 0x559ea9df6d48 'variable' 'T &'
|     |     `-UnaryOperator 0x559ea9e1e948 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x559ea9e1e938 <col:67> 'Args *' this
|     `-CallExpr 0x559ea9e1f170 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x559ea9e1e9b8 <col:9> '<bound member function type>' ->postparse 0x559ea9e15778
|       | `-CXXThisExpr 0x559ea9e1e9a8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x559ea9e1f130 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x559ea9e1e9e8 <col:19> 'T *' lvalue Var 0x559ea9e1e608 's' 'T *'
|       | `-ParenExpr 0x559ea9e1f110 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x559ea9e1f0e0 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x559ea9e1f0c8 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x559ea9e1f0b0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x559ea9e1f090 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x559ea9e1f060 <col:25> '<bound member function type>' .operator int (String::*)() const 0x559ea9a595c8
|       |     |       `-ImplicitCastExpr 0x559ea9e1f048 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x559ea9e1ea08 <col:25> 'String' lvalue Var 0x559ea9e1e3c0 'str' 'String'
|       |     |-CallExpr 0x559ea9e1eeb8 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x559ea9e1ec90 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x559ea9e1ed90 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x559ea9e1edb0 <col:89> 'String' lvalue Var 0x559ea9e1e3c0 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x559ea9e1ee60 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x559ea9e1edf0 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x559ea9c49ef8 0x559ea9c49b18 0x559ea9c49748 0x559ea9c49368 0x559ea9c48f88 0x559ea9c48bb8
|       |     | | `-DeclRefExpr 0x559ea9e1edd0 <col:95> 'T *' lvalue Var 0x559ea9e1e608 's' 'T *'
|       |     | `-UnaryOperator 0x559ea9e1eea0 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x559ea9e1ee90 <col:99> 'Args *' this
|       |     `-ParenExpr 0x559ea9e1f028 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x559ea9e1f008 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x559ea9e1efd8 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x559ea9e1ef88 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x559ea9e1ef18 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x559ea9c49ef8 0x559ea9c49b18 0x559ea9c49748 0x559ea9c49368 0x559ea9c48f88 0x559ea9c48bb8
|       |         | | `-DeclRefExpr 0x559ea9e1eef8 <col:109> 'T *' lvalue Var 0x559ea9e1e608 's' 'T *'
|       |         | `-DeclRefExpr 0x559ea9e1efb8 <col:113> 'const V' lvalue ParmVar 0x559ea9df6de8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x559ea9e1eff8 <col:120> 'bool' true
|       `-DeclRefExpr 0x559ea9e1f150 <col:128> 'Args::Slot *' lvalue Var 0x559ea9e1e330 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x559ea9df74f8 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x559ea9df7040 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9df70b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9df7458 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x559ea9df7178 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df71f8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9df7270 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9df7318 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x559ea9e1fd98 <col:75, line:754:5>
|     |-DeclStmt 0x559ea9e1f248 <line:749:9, col:26>
|     | `-VarDecl 0x559ea9e1f1e0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x559ea9e1fd60 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x559ea9e1fd80 <line:750:13, col:58>
|       | `-VarDecl 0x559ea9e1f270 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x559ea9e1f450 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x559ea9e1f420 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x559ea9e1f408 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x559ea9e1f3e8 <col:26, col:58> 'String' (CXXTemporary 0x559ea9e1f3e8)
|       |           `-CXXMemberCallExpr 0x559ea9e1f378 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x559ea9e1f2e8 <col:26> '<bound member function type>' ->find 0x559ea9e15568
|       |             | `-CXXThisExpr 0x559ea9e1f2d8 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x559ea9e1f3b0 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x559ea9e1f318 <col:31> 'const char *' lvalue ParmVar 0x559ea9df7178 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x559ea9e1f3c8 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x559ea9e1f338 <col:40> 'int' lvalue ParmVar 0x559ea9df71f8 'flags' 'int'
|       |             `-DeclRefExpr 0x559ea9e1f358 <col:47> 'Args::Slot *' lvalue Var 0x559ea9e1f1e0 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x559ea9e1f508 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x559ea9e1f4f0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x559ea9e1f4d0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x559ea9e1f4a0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x559ea9a595c8
|       |       `-ImplicitCastExpr 0x559ea9e1f488 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x559ea9e1f468 <col:20> 'String' lvalue Var 0x559ea9e1f270 'str' 'String'
|       `-CompoundStmt 0x559ea9e1fd40 <col:61, line:753:9>
|         |-DeclStmt 0x559ea9e1f8e0 <line:751:13, col:63>
|         | `-VarDecl 0x559ea9e1f558 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x559ea9e1f8b0 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x559ea9e1f820 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x559ea9e1f868 <col:47> 'T' lvalue ParmVar 0x559ea9df7318 'variable' 'T &'
|         |     `-UnaryOperator 0x559ea9e1f898 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x559ea9e1f888 <col:58> 'Args *' this
|         `-CallExpr 0x559ea9e1fd10 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x559ea9e1f908 <col:13> '<bound member function type>' ->postparse 0x559ea9e15778
|           | `-CXXThisExpr 0x559ea9e1f8f8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x559ea9e1fcd0 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x559ea9e1f938 <col:23> 'T *' lvalue Var 0x559ea9e1f558 's' 'T *'
|           | `-CallExpr 0x559ea9e1fc90 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x559ea9e1fb20 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x559ea9e1fb68 <col:56> 'P' lvalue ParmVar 0x559ea9df7270 'parser' 'P'
|           |   |-DeclRefExpr 0x559ea9e1fb88 <col:64> 'String' lvalue Var 0x559ea9e1f270 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x559ea9e1fc38 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x559ea9e1fbc8 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x559ea9c49ef8 0x559ea9c49b18 0x559ea9c49748 0x559ea9c49368 0x559ea9c48f88 0x559ea9c48bb8
|           |   | `-DeclRefExpr 0x559ea9e1fba8 <col:70> 'T *' lvalue Var 0x559ea9e1f558 's' 'T *'
|           |   `-UnaryOperator 0x559ea9e1fc78 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x559ea9e1fc68 <col:74> 'Args *' this
|           `-DeclRefExpr 0x559ea9e1fcf0 <col:81> 'Args::Slot *' lvalue Var 0x559ea9e1f1e0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x559ea9df7b58 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x559ea9df7570 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x559ea9df75e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x559ea9df7668 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x559ea9df7ab8 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x559ea9df7730 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9df77b0 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9df7828 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9df78c8 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x559ea9df7968 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x559ea9e22ec8 <col:98, line:762:5>
|     |-DeclStmt 0x559ea9e1fe30 <line:758:9, col:26>
|     | `-VarDecl 0x559ea9e1fdc8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x559ea9e20050 <line:759:9, col:55>
|     | `-VarDecl 0x559ea9e1fe58 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x559ea9e20038 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x559ea9e20008 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x559ea9e1fff0 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x559ea9e1ffd0 <col:22, col:54> 'String' (CXXTemporary 0x559ea9e1ffd0)
|     |           `-CXXMemberCallExpr 0x559ea9e1ff60 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x559ea9e1fed0 <col:22> '<bound member function type>' ->find 0x559ea9e15568
|     |             | `-CXXThisExpr 0x559ea9e1fec0 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x559ea9e1ff98 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x559ea9e1ff00 <col:27> 'const char *' lvalue ParmVar 0x559ea9df7730 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x559ea9e1ffb0 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x559ea9e1ff20 <col:36> 'int' lvalue ParmVar 0x559ea9df77b0 'flags' 'int'
|     |             `-DeclRefExpr 0x559ea9e1ff40 <col:43> 'Args::Slot *' lvalue Var 0x559ea9e1fdc8 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x559ea9e20470 <line:760:9, col:59>
|     | `-VarDecl 0x559ea9e200a8 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x559ea9e20440 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x559ea9e203b0 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x559ea9e203f8 <col:43> 'T' lvalue ParmVar 0x559ea9df78c8 'variable' 'T &'
|     |     `-UnaryOperator 0x559ea9e20428 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x559ea9e20418 <col:54> 'Args *' this
|     `-CallExpr 0x559ea9e22e98 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x559ea9e20498 <col:9> '<bound member function type>' ->postparse 0x559ea9e15778
|       | `-CXXThisExpr 0x559ea9e20488 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x559ea9e22e58 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x559ea9e204c8 <col:19> 'T *' lvalue Var 0x559ea9e200a8 's' 'T *'
|       | `-ParenExpr 0x559ea9e22e38 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x559ea9e22e08 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x559ea9e22df0 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x559ea9e22dd8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x559ea9e22db8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x559ea9e22d88 <col:25> '<bound member function type>' .operator int (String::*)() const 0x559ea9a595c8
|       |     |       `-ImplicitCastExpr 0x559ea9e22d70 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x559ea9e204e8 <col:25> 'String' lvalue Var 0x559ea9e1fe58 'str' 'String'
|       |     |-CallExpr 0x559ea9e22be0 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x559ea9e22a70 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x559ea9e22ab8 <col:59> 'P' lvalue ParmVar 0x559ea9df7828 'parser' 'P'
|       |     | |-DeclRefExpr 0x559ea9e22ad8 <col:67> 'String' lvalue Var 0x559ea9e1fe58 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x559ea9e22b88 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x559ea9e22b18 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x559ea9c49ef8 0x559ea9c49b18 0x559ea9c49748 0x559ea9c49368 0x559ea9c48f88 0x559ea9c48bb8
|       |     | | `-DeclRefExpr 0x559ea9e22af8 <col:73> 'T *' lvalue Var 0x559ea9e200a8 's' 'T *'
|       |     | `-UnaryOperator 0x559ea9e22bc8 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x559ea9e22bb8 <col:77> 'Args *' this
|       |     `-ParenExpr 0x559ea9e22d50 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x559ea9e22d30 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x559ea9e22d00 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x559ea9e22cb0 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x559ea9e22c40 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x559ea9c49ef8 0x559ea9c49b18 0x559ea9c49748 0x559ea9c49368 0x559ea9c48f88 0x559ea9c48bb8
|       |         | | `-DeclRefExpr 0x559ea9e22c20 <col:87> 'T *' lvalue Var 0x559ea9e200a8 's' 'T *'
|       |         | `-DeclRefExpr 0x559ea9e22ce0 <col:91> 'const V' lvalue ParmVar 0x559ea9df7968 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x559ea9e22d20 <col:98> 'bool' true
|       `-DeclRefExpr 0x559ea9e22e78 <col:106> 'Args::Slot *' lvalue Var 0x559ea9e1fdc8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x559ea9dffe28 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x559ea9df7bd8 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9df7c58 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x559ea9df7cd8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x559ea9dffd88 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x559ea9df7da0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9dffa80 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9dffaf8 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9dffb98 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x559ea9dffc38 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x559ea9e23ea8 <col:60, line:773:5>
|     |-DeclStmt 0x559ea9e22f70 <line:767:9, col:26>
|     | `-VarDecl 0x559ea9e22f08 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x559ea9e23e70 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x559ea9e23e90 <line:768:13, col:58>
|       | `-VarDecl 0x559ea9e22f98 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x559ea9e23178 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x559ea9e23148 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x559ea9e23130 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x559ea9e23110 <col:26, col:58> 'String' (CXXTemporary 0x559ea9e23110)
|       |           `-CXXMemberCallExpr 0x559ea9e230a0 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x559ea9e23010 <col:26> '<bound member function type>' ->find 0x559ea9e15568
|       |             | `-CXXThisExpr 0x559ea9e23000 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x559ea9e230d8 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x559ea9e23040 <col:31> 'const char *' lvalue ParmVar 0x559ea9df7da0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x559ea9e230f0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x559ea9e23060 <col:40> 'int' lvalue ParmVar 0x559ea9dffa80 'flags' 'int'
|       |             `-DeclRefExpr 0x559ea9e23080 <col:47> 'Args::Slot *' lvalue Var 0x559ea9e22f08 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x559ea9e23230 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x559ea9e23218 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x559ea9e231f8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x559ea9e231c8 <col:20> '<bound member function type>' .operator int (String::*)() const 0x559ea9a595c8
|       |       `-ImplicitCastExpr 0x559ea9e231b0 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x559ea9e23190 <col:20> 'String' lvalue Var 0x559ea9e22f98 'str' 'String'
|       `-CompoundStmt 0x559ea9e23e48 <col:61, line:772:9>
|         |-DeclStmt 0x559ea9e23570 <line:769:13, col:66>
|         | `-VarDecl 0x559ea9e23288 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x559ea9e23540 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x559ea9e234b0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x559ea9e234f8 <col:49> 'T1' lvalue ParmVar 0x559ea9dffb98 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x559ea9e23528 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x559ea9e23518 <col:61> 'Args *' this
|         |-DeclStmt 0x559ea9e238e0 <line:770:13, col:66>
|         | `-VarDecl 0x559ea9e235f8 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x559ea9e238b0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x559ea9e23820 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x559ea9e23868 <col:49> 'T2' lvalue ParmVar 0x559ea9dffc38 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x559ea9e23898 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x559ea9e23888 <col:61> 'Args *' this
|         `-CallExpr 0x559ea9e23e18 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x559ea9e23908 <col:13> '<bound member function type>' ->postparse 0x559ea9e15778
|           | `-CXXThisExpr 0x559ea9e238f8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x559ea9e23dd8 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x559ea9e23978 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x559ea9e23938 <col:23> 'T1 *' lvalue Var 0x559ea9e23288 's1' 'T1 *'
|           | | `-DeclRefExpr 0x559ea9e23958 <col:29> 'T2 *' lvalue Var 0x559ea9e235f8 's2' 'T2 *'
|           | `-CallExpr 0x559ea9e23d90 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x559ea9e23b60 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x559ea9e23ba8 <col:63> 'P' lvalue ParmVar 0x559ea9dffaf8 'parser' 'P'
|           |   |-DeclRefExpr 0x559ea9e23bc8 <col:71> 'String' lvalue Var 0x559ea9e22f98 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x559ea9e23c78 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x559ea9e23c08 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x559ea9c49ef8 0x559ea9c49b18 0x559ea9c49748 0x559ea9c49368 0x559ea9c48f88 0x559ea9c48bb8
|           |   | `-DeclRefExpr 0x559ea9e23be8 <col:77> 'T1 *' lvalue Var 0x559ea9e23288 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x559ea9e23d38 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x559ea9e23cc8 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x559ea9c49ef8 0x559ea9c49b18 0x559ea9c49748 0x559ea9c49368 0x559ea9c48f88 0x559ea9c48bb8
|           |   | `-DeclRefExpr 0x559ea9e23ca8 <col:82> 'T2 *' lvalue Var 0x559ea9e235f8 's2' 'T2 *'
|           |   `-UnaryOperator 0x559ea9e23d78 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x559ea9e23d68 <col:87> 'Args *' this
|           `-DeclRefExpr 0x559ea9e23df8 <col:94> 'Args::Slot *' lvalue Var 0x559ea9e22f08 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x559ea9e00218 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x559ea9dffea8 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x559ea9e00178 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x559ea9dfff60 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9dfffe0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9e00058 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x559ea9e243c0 <col:67, line:780:5>
|     |-DeclStmt 0x559ea9e23f40 <line:777:9, col:26>
|     | `-VarDecl 0x559ea9e23ed8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x559ea9e24388 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x559ea9e243a8 <line:778:13, col:58>
|       | `-VarDecl 0x559ea9e23f68 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x559ea9e24148 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x559ea9e24118 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x559ea9e24100 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x559ea9e240e0 <col:26, col:58> 'String' (CXXTemporary 0x559ea9e240e0)
|       |           `-CXXMemberCallExpr 0x559ea9e24070 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x559ea9e23fe0 <col:26> '<bound member function type>' ->find 0x559ea9e15568
|       |             | `-CXXThisExpr 0x559ea9e23fd0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x559ea9e240a8 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x559ea9e24010 <col:31> 'const char *' lvalue ParmVar 0x559ea9dfff60 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x559ea9e240c0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x559ea9e24030 <col:40> 'int' lvalue ParmVar 0x559ea9dfffe0 'flags' 'int'
|       |             `-DeclRefExpr 0x559ea9e24050 <col:47> 'Args::Slot *' lvalue Var 0x559ea9e23ed8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x559ea9e24200 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x559ea9e241e8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x559ea9e241c8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x559ea9e24198 <col:20> '<bound member function type>' .operator int (String::*)() const 0x559ea9a595c8
|       |       `-ImplicitCastExpr 0x559ea9e24180 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x559ea9e24160 <col:20> 'String' lvalue Var 0x559ea9e23f68 'str' 'String'
|       `-CallExpr 0x559ea9e24358 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x559ea9e24228 <col:13> '<bound member function type>' ->postparse 0x559ea9e15778
|         | `-CXXThisExpr 0x559ea9e24218 <col:13> 'Args *' implicit this
|         |-CallExpr 0x559ea9e24308 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x559ea9e24278 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x559ea9e24258 <col:23> 'P' lvalue ParmVar 0x559ea9e00058 'parser' 'P'
|         | |-DeclRefExpr 0x559ea9e242c0 <col:36> 'String' lvalue Var 0x559ea9e23f68 'str' 'String'
|         | `-UnaryOperator 0x559ea9e242f0 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x559ea9e242e0 <col:42> 'Args *' this
|         `-DeclRefExpr 0x559ea9e24338 <col:49> 'Args::Slot *' lvalue Var 0x559ea9e23ed8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x559ea9e005b8 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x559ea9e00288 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x559ea9e00518 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x559ea9e00340 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9e003c0 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9e00438 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x559ea9e24d30 <col:71, line:792:5>
|     |-DeclStmt 0x559ea9e24458 <line:784:9, col:26>
|     | `-VarDecl 0x559ea9e243f0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x559ea9e24528 <line:785:9, col:29>
|     | `-VarDecl 0x559ea9e24488 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x559ea9e24510 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x559ea9e244f0 <col:28> 'int' 1
|     |-WhileStmt 0x559ea9e24be0 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x559ea9e24c00 <line:786:16, col:61>
|     | | `-VarDecl 0x559ea9e24550 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x559ea9e24730 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x559ea9e24700 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x559ea9e246e8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x559ea9e246c8 <col:29, col:61> 'String' (CXXTemporary 0x559ea9e246c8)
|     | |           `-CXXMemberCallExpr 0x559ea9e24658 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x559ea9e245c8 <col:29> '<bound member function type>' ->find 0x559ea9e15568
|     | |             | `-CXXThisExpr 0x559ea9e245b8 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x559ea9e24690 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x559ea9e245f8 <col:34> 'const char *' lvalue ParmVar 0x559ea9e00340 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x559ea9e246a8 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x559ea9e24618 <col:43> 'int' lvalue ParmVar 0x559ea9e003c0 'flags' 'int'
|     | |             `-DeclRefExpr 0x559ea9e24638 <col:50> 'Args::Slot *' lvalue Var 0x559ea9e243f0 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x559ea9e247e8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x559ea9e247d0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x559ea9e247b0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x559ea9e24780 <col:23> '<bound member function type>' .operator int (String::*)() const 0x559ea9a595c8
|     | |       `-ImplicitCastExpr 0x559ea9e24768 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x559ea9e24748 <col:23> 'String' lvalue Var 0x559ea9e24550 'str' 'String'
|     | `-CompoundStmt 0x559ea9e24bb8 <col:64, line:790:9>
|     |   |-CallExpr 0x559ea9e24940 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x559ea9e24810 <col:13> '<bound member function type>' ->postparse 0x559ea9e15778
|     |   | | `-CXXThisExpr 0x559ea9e24800 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x559ea9e248f0 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x559ea9e24860 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x559ea9e24840 <col:23> 'P' lvalue ParmVar 0x559ea9e00438 'parser' 'P'
|     |   | | |-DeclRefExpr 0x559ea9e248a8 <col:36> 'String' lvalue Var 0x559ea9e24550 'str' 'String'
|     |   | | `-UnaryOperator 0x559ea9e248d8 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x559ea9e248c8 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x559ea9e24920 <col:49> 'Args::Slot *' lvalue Var 0x559ea9e243f0 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x559ea9e24ad8 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x559ea9e24970 <col:13> 'int' lvalue Var 0x559ea9e24488 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x559ea9e24ac0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x559ea9e24aa0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x559ea9e24a08 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x559ea9e249e8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x559ea9e249d0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x559ea9e24990 <col:28> 'int' lvalue Var 0x559ea9e24488 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x559ea9e249b0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x559ea9e24a88 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x559ea9e24a58 <col:49> 'bool' lvalue ->_read_status 0x559ea9ddeaf0
|     |   |         `-ImplicitCastExpr 0x559ea9e24a38 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x559ea9e24a28 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x559ea9e24b88 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x559ea9e24af8 <col:13> 'int' lvalue ParmVar 0x559ea9e003c0 'flags' 'int'
|     |     `-UnaryOperator 0x559ea9e24b70 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x559ea9e24b58 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x559ea9e24b38 <col:23> 'const int' lvalue Var 0x559ea9de6058 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x559ea9e24d10 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x559ea9e24c48 <col:9> 'bool' lvalue ->_read_status 0x559ea9ddeaf0
|       | `-ImplicitCastExpr 0x559ea9e24c28 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x559ea9e24c18 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x559ea9e24cf0 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x559ea9e24cd0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x559ea9e24cb8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x559ea9e24c78 <col:25> 'int' lvalue Var 0x559ea9e24488 'read_status' 'int'
|           `-IntegerLiteral 0x559ea9e24c98 <col:40> 'int' 1
|-FunctionTemplateDecl 0x559ea9e00a98 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x559ea9e00628 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9e006a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9e009f8 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x559ea9e00768 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9e007e8 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9e00860 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9e00908 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x559ea9e25cc0 <col:84, line:805:5>
|     |-DeclStmt 0x559ea9e24dd8 <line:796:9, col:26>
|     | `-VarDecl 0x559ea9e24d70 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x559ea9e24ea8 <line:797:9, col:29>
|     | `-VarDecl 0x559ea9e24e08 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x559ea9e24e90 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x559ea9e24e70 <col:28> 'int' 1
|     |-DeclStmt 0x559ea9e251e0 <line:798:9, col:71>
|     | `-VarDecl 0x559ea9e24ef8 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x559ea9e251b0 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x559ea9e25120 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x559ea9e25168 <col:55> 'T' lvalue ParmVar 0x559ea9e00908 'variable' 'T &'
|     |     `-UnaryOperator 0x559ea9e25198 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x559ea9e25188 <col:66> 'Args *' this
|     |-WhileStmt 0x559ea9e25b70 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x559ea9e25b90 <line:799:16, col:61>
|     | | `-VarDecl 0x559ea9e25208 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x559ea9e253e8 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x559ea9e253b8 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x559ea9e253a0 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x559ea9e25380 <col:29, col:61> 'String' (CXXTemporary 0x559ea9e25380)
|     | |           `-CXXMemberCallExpr 0x559ea9e25310 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x559ea9e25280 <col:29> '<bound member function type>' ->find 0x559ea9e15568
|     | |             | `-CXXThisExpr 0x559ea9e25270 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x559ea9e25348 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x559ea9e252b0 <col:34> 'const char *' lvalue ParmVar 0x559ea9e00768 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x559ea9e25360 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x559ea9e252d0 <col:43> 'int' lvalue ParmVar 0x559ea9e007e8 'flags' 'int'
|     | |             `-DeclRefExpr 0x559ea9e252f0 <col:50> 'Args::Slot *' lvalue Var 0x559ea9e24d70 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x559ea9e254a0 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x559ea9e25488 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x559ea9e25468 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x559ea9e25438 <col:23> '<bound member function type>' .operator int (String::*)() const 0x559ea9a595c8
|     | |       `-ImplicitCastExpr 0x559ea9e25420 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x559ea9e25400 <col:23> 'String' lvalue Var 0x559ea9e25208 'str' 'String'
|     | `-CompoundStmt 0x559ea9e25b48 <col:64, line:803:9>
|     |   |-CallExpr 0x559ea9e258d0 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x559ea9e254c8 <col:13> '<bound member function type>' ->postparse 0x559ea9e15778
|     |   | | `-CXXThisExpr 0x559ea9e254b8 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x559ea9e25890 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x559ea9e254f8 <col:23> 'T *' lvalue Var 0x559ea9e24ef8 's' 'T *'
|     |   | | `-CallExpr 0x559ea9e25850 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x559ea9e256e0 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x559ea9e25728 <col:56> 'P' lvalue ParmVar 0x559ea9e00860 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x559ea9e25748 <col:64> 'String' lvalue Var 0x559ea9e25208 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x559ea9e257f8 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x559ea9e25788 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x559ea9c49ef8 0x559ea9c49b18 0x559ea9c49748 0x559ea9c49368 0x559ea9c48f88 0x559ea9c48bb8
|     |   | |   | `-DeclRefExpr 0x559ea9e25768 <col:70> 'T *' lvalue Var 0x559ea9e24ef8 's' 'T *'
|     |   | |   `-UnaryOperator 0x559ea9e25838 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x559ea9e25828 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x559ea9e258b0 <col:81> 'Args::Slot *' lvalue Var 0x559ea9e24d70 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x559ea9e25a68 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x559ea9e25900 <col:13> 'int' lvalue Var 0x559ea9e24e08 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x559ea9e25a50 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x559ea9e25a30 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x559ea9e25998 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x559ea9e25978 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x559ea9e25960 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x559ea9e25920 <col:28> 'int' lvalue Var 0x559ea9e24e08 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x559ea9e25940 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x559ea9e25a18 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x559ea9e259e8 <col:49> 'bool' lvalue ->_read_status 0x559ea9ddeaf0
|     |   |         `-ImplicitCastExpr 0x559ea9e259c8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x559ea9e259b8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x559ea9e25b18 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x559ea9e25a88 <col:13> 'int' lvalue ParmVar 0x559ea9e007e8 'flags' 'int'
|     |     `-UnaryOperator 0x559ea9e25b00 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x559ea9e25ae8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x559ea9e25ac8 <col:23> 'const int' lvalue Var 0x559ea9de6058 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x559ea9e25ca0 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x559ea9e25bd8 <col:9> 'bool' lvalue ->_read_status 0x559ea9ddeaf0
|       | `-ImplicitCastExpr 0x559ea9e25bb8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x559ea9e25ba8 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x559ea9e25c80 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x559ea9e25c60 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x559ea9e25c48 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x559ea9e25c08 <col:25> 'int' lvalue Var 0x559ea9e24e08 'read_status' 'int'
|           `-IntegerLiteral 0x559ea9e25c28 <col:40> 'int' 1
|-FunctionTemplateDecl 0x559ea9e01078 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x559ea9e00b10 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x559ea9e00b88 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x559ea9e00fd8 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x559ea9e00c48 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x559ea9e00cc8 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x559ea9e00d40 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x559ea9e00e90 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x559ea9e26ac8 <col:87, line:821:5>
|     |-DeclStmt 0x559ea9e25d70 <line:809:9, col:26>
|     | `-VarDecl 0x559ea9e25d08 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x559ea9e25e40 <line:810:9, col:29>
|     | `-VarDecl 0x559ea9e25da0 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x559ea9e25e28 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x559ea9e25e08 <col:28> 'int' 1
|     |-DeclStmt 0x559ea9e26088 <line:811:9, col:38>
|     | `-VarDecl 0x559ea9e25f70 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x559ea9e26060 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x559ea9e25fe8 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x559ea9e26040 <col:29> 'Vector<T>' lvalue ParmVar 0x559ea9e00e90 'variable' 'Vector<T> &'
|     |-WhileStmt 0x559ea9e26978 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x559ea9e26998 <line:812:16, col:61>
|     | | `-VarDecl 0x559ea9e260b0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x559ea9e26290 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x559ea9e26260 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x559ea9e26248 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x559ea9e26228 <col:29, col:61> 'String' (CXXTemporary 0x559ea9e26228)
|     | |           `-CXXMemberCallExpr 0x559ea9e261b8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x559ea9e26128 <col:29> '<bound member function type>' ->find 0x559ea9e15568
|     | |             | `-CXXThisExpr 0x559ea9e26118 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x559ea9e261f0 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x559ea9e26158 <col:34> 'const char *' lvalue ParmVar 0x559ea9e00c48 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x559ea9e26208 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x559ea9e26178 <col:43> 'int' lvalue ParmVar 0x559ea9e00cc8 'flags' 'int'
|     | |             `-DeclRefExpr 0x559ea9e26198 <col:50> 'Args::Slot *' lvalue Var 0x559ea9e25d08 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x559ea9e26348 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x559ea9e26330 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x559ea9e26310 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x559ea9e262e0 <col:23> '<bound member function type>' .operator int (String::*)() const 0x559ea9a595c8
|     | |       `-ImplicitCastExpr 0x559ea9e262c8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x559ea9e262a8 <col:23> 'String' lvalue Var 0x559ea9e260b0 'str' 'String'
|     | `-CompoundStmt 0x559ea9e26940 <col:64, line:819:9>
|     |   |-DeclStmt 0x559ea9e26408 <line:813:13, col:23>
|     |   | `-VarDecl 0x559ea9e26370 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x559ea9e263e8 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x559ea9e26588 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x559ea9e26430 <col:13> '<bound member function type>' ->postparse 0x559ea9e15778
|     |   | | `-CXXThisExpr 0x559ea9e26420 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x559ea9e26530 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x559ea9e26480 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x559ea9e26460 <col:23> 'P' lvalue ParmVar 0x559ea9e00d40 'parser' 'P'
|     |   | | |-DeclRefExpr 0x559ea9e264c8 <col:36> 'String' lvalue Var 0x559ea9e260b0 'str' 'String'
|     |   | | |-DeclRefExpr 0x559ea9e264e8 <col:41> 'T' lvalue Var 0x559ea9e26370 'sx' 'T'
|     |   | | `-UnaryOperator 0x559ea9e26518 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x559ea9e26508 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x559ea9e26568 <col:53> 'Args::Slot *' lvalue Var 0x559ea9e25d08 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x559ea9e266e0 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x559ea9e26618 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x559ea9e265e8 <col:17> 'bool' lvalue ->_read_status 0x559ea9ddeaf0
|     |   | |   `-ImplicitCastExpr 0x559ea9e265c8 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x559ea9e265b8 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x559ea9e266b8 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x559ea9e26650 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x559ea9e26630 <col:17> 'Vector<T> *' lvalue Var 0x559ea9e25f70 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x559ea9e26698 <col:30> 'T' lvalue Var 0x559ea9e26370 'sx' 'T'
|     |   |-BinaryOperator 0x559ea9e26860 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x559ea9e266f8 <col:13> 'int' lvalue Var 0x559ea9e25da0 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x559ea9e26848 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x559ea9e26828 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x559ea9e26790 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x559ea9e26770 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x559ea9e26758 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x559ea9e26718 <col:28> 'int' lvalue Var 0x559ea9e25da0 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x559ea9e26738 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x559ea9e26810 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x559ea9e267e0 <col:49> 'bool' lvalue ->_read_status 0x559ea9ddeaf0
|     |   |         `-ImplicitCastExpr 0x559ea9e267c0 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x559ea9e267b0 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x559ea9e26910 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x559ea9e26880 <col:13> 'int' lvalue ParmVar 0x559ea9e00cc8 'flags' 'int'
|     |     `-UnaryOperator 0x559ea9e268f8 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x559ea9e268e0 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x559ea9e268c0 <col:23> 'const int' lvalue Var 0x559ea9de6058 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x559ea9e26aa8 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x559ea9e269e0 <col:9> 'bool' lvalue ->_read_status 0x559ea9ddeaf0
|       | `-ImplicitCastExpr 0x559ea9e269c0 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x559ea9e269b0 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x559ea9e26a88 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x559ea9e26a68 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x559ea9e26a50 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x559ea9e26a10 <col:25> 'int' lvalue Var 0x559ea9e25da0 'read_status' 'int'
|           `-IntegerLiteral 0x559ea9e26a30 <col:40> 'int' 1
|-AccessSpecDecl 0x559ea9e010f0 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x559ea9e01118 prev 0x559ea9de4358 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x559ea9e01210 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x559ea9e01300 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x559ea9e26b00 <col:16, line:828:9>
| |-CXXDestructorDecl 0x559ea9e013f0 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x559ea9e26b10 <col:25, line:830:9>
| |-CXXMethodDecl 0x559ea9e014f0 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x559ea9e015a0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x559ea9e01648 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x559ea9e01648
| | `-ParmVarDecl 0x559ea9e01758 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x559ea9e01f18 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x559ea9e01f18
|   `-ParmVarDecl 0x559ea9e02028 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x559ea9e017c8 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x559ea9e01928 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x559ea9e01b20 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x559ea9e019d0 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x559ea9e01a48 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x559ea9e26cf0 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x559ea9e01dd8 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x559ea9e26b60 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x559ea9e26b20 <col:20> 'void *' lvalue ParmVar 0x559ea9e019d0 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x559ea9e01e40 '_slot' 'char *'
| | | `-CXXNewExpr 0x559ea9e26be8 <col:32, col:45> 'char *' array Function 0x559ea98746f8 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x559ea9e26bd0 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x559ea9e26ba0 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x559ea9e01a48 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x559ea9e01ea0 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x559ea9e26cb0 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x559ea9e26c70 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x559ea9e01a48 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x559ea9e26d70 <col:61, line:838:9>
| |-CXXDestructorDecl 0x559ea9e01c20 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x559ea9e013f0 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x559ea9e26df8 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x559ea9e26dd8 <line:840:13, col:22> 'void' array Function 0x559ea9874a58 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x559ea9e26dc0 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x559ea9e26d90 <col:22> 'char *' lvalue ->_slot 0x559ea9e01e40
| |         `-CXXThisExpr 0x559ea9e26d80 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x559ea9e01d20 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x559ea9e014f0 Slot::store 'void ()' ]
| | `-CompoundStmt 0x559ea9e26fe8 <col:22, line:844:9>
| |   `-CallExpr 0x559ea9e26f50 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x559ea9e26f38 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x559ea9e26f18 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x559ea99818a8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x559ea9e26f88 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x559ea9e26e68 <col:20> 'void *' lvalue ->_ptr 0x559ea9e01dd8
| |     |   `-CXXThisExpr 0x559ea9e26e58 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x559ea9e26fb8 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x559ea9e26fa0 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x559ea9e26ea8 <col:26> 'char *' lvalue ->_slot 0x559ea9e01e40
| |     |     `-CXXThisExpr 0x559ea9e26e98 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x559ea9e26fd0 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x559ea9e26ee8 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x559ea9e01ea0
| |         `-CXXThisExpr 0x559ea9e26ed8 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x559ea9e01dd8 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x559ea9e01e40 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x559ea9e01ea0 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x559ea9e02098 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x559ea9e02098
| | `-ParmVarDecl 0x559ea9e021a8 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x559ea9e02248 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x559ea9e02248
|   `-ParmVarDecl 0x559ea9e02358 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x559ea9e024f8 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x559ea9e023c8 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x559ea9e02468 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x559ea9e02790 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x559ea9e02988 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x559ea9e02858 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x559ea9e02b08 '_ptr' 'T *'
|   | | `-ParenListExpr 0x559ea9e27020 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x559ea9e27000 <col:20> 'T *' lvalue ParmVar 0x559ea9e02858 'ptr' 'T *'
|   | `-CompoundStmt 0x559ea9e27070 <col:25, line:854:9>
|   |-CXXMethodDecl 0x559ea9e02a58 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x559ea9e014f0 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x559ea9e27230 <col:22, line:857:9>
|   |   `-CallExpr 0x559ea9e27200 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x559ea9e27080 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x559ea9d51388 0x559ea9d2da38 0x559ea9a4cf98 0x559ea99fb398
|   |     |-CXXOperatorCallExpr 0x559ea9e27190 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x559ea9e27120 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x559ea9c49ef8 0x559ea9c49b18 0x559ea9c49748 0x559ea9c49368 0x559ea9c48f88 0x559ea9c48bb8
|   |     | `-MemberExpr 0x559ea9e270f0 <col:29> 'T *' lvalue ->_ptr 0x559ea9e02b08
|   |     |   `-CXXThisExpr 0x559ea9e270e0 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x559ea9e271d0 <col:35> 'T' lvalue ->_slot 0x559ea9e02b68
|   |       `-CXXThisExpr 0x559ea9e271c0 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x559ea9e02b08 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x559ea9e02b68 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x559ea9e02bd0 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x559ea9e02cd0 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x559ea9e02d20 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9e02cb0 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x559ea9e02c90 <col:31> 'int' 48
|-FieldDecl 0x559ea9e02d48 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x559ea9e02da8 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x559ea9e02e08 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x559ea9e02f40 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x559ea9e14e10 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x559ea9e14e70 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x559ea9e14f20 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x559ea9e15148 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x559ea9e15050 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x559ea9e15298 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x559ea9e15208 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x559ea9e15568 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x559ea9e15358 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x559ea9e153d8 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x559ea9e15480 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x559ea9e15778 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x559ea9e15630 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x559ea9e156a8 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x559ea9e15848 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x559ea9e15998 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x559ea9e15900 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x559ea9e15d28 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x559ea9e15a58 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x559ea9e15ad8 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x559ea9e15b80 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x559ea9e15c38 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x559ea9e15f50 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x559ea9e15e00 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x559ea9e15e78 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x559ea9e16268 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x559ea9e16000 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x559ea9e161c8 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x559ea9e160d8 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.4*, %class.Vector.6, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.4*, %class.Vector.6, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class AnnoArg
         0 |   int size
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9e48e00 <../dummy_inc/click/args.hh:1294:1, line:1301:1> line:1294:7 referenced class AnnoArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9e48f18 <col:1, col:7> col:7 implicit referenced class AnnoArg
|-AccessSpecDecl 0x559ea9e48fa8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x559ea9e490b8 <line:1295:5, line:1297:5> line:1295:5 used AnnoArg 'void (int)'
| |-ParmVarDecl 0x559ea9e48fe8 <col:13, col:17> col:17 used s 'int'
| |-CXXCtorInitializer Field 0x559ea9e49408 'size' 'int'
| | `-ImplicitCastExpr 0x559ea9e494d0 <line:1296:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x559ea9e49490 <col:16> 'int' lvalue ParmVar 0x559ea9e48fe8 's' 'int'
| `-CompoundStmt 0x559ea9e49518 <col:19, line:1297:5>
|-CXXMethodDecl 0x559ea9e49310 <line:1298:5, col:83> col:10 parse 'bool (const String &, int &, const ArgContext &)'
| |-ParmVarDecl 0x559ea9e49178 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x559ea9e491f8 <col:35, col:40> col:40 result 'int &'
| `-ParmVarDecl 0x559ea9e49270 <col:48, col:73> col:66 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x559ea9e49470 <col:73> 'const ArgContext' lvalue Var 0x559ea9e27258 'blank_args' 'const ArgContext'
|-AccessSpecDecl 0x559ea9e493c8 <line:1299:3, col:10> col:3 private
|-FieldDecl 0x559ea9e49408 <line:1300:5, col:9> col:9 referenced size 'int'
|-CXXConstructorDecl 0x559ea9e8b248 <line:1294:7> col:7 implicit constexpr AnnoArg 'void (const AnnoArg &)' inline default trivial noexcept-unevaluated 0x559ea9e8b248
| `-ParmVarDecl 0x559ea9e8b358 <col:7> col:7 'const AnnoArg &'
|-CXXConstructorDecl 0x559ea9e8b3f8 <col:7> col:7 implicit used constexpr AnnoArg 'void (AnnoArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9e8b508 <col:7> col:7 used 'AnnoArg &&'
| |-CXXCtorInitializer Field 0x559ea9e49408 'size' 'int'
| | `-ImplicitCastExpr 0x559ea9e8bd18 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x559ea9e8bcd0 <col:7> 'int' xvalue .size 0x559ea9e49408
| |     `-CXXStaticCastExpr 0x559ea9e8bca0 <col:7> 'AnnoArg' xvalue static_cast<class AnnoArg &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9e8bc70 <col:7> 'AnnoArg' lvalue ParmVar 0x559ea9e8b508 '' 'AnnoArg &&'
| `-CompoundStmt 0x559ea9e8bd60 <col:7>
`-CXXDestructorDecl 0x559ea9e8b5a8 <col:7> col:7 implicit referenced ~AnnoArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.AnnoArg = type { i32 }
  NonVirtualBaseLLVMType:%class.AnnoArg = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class SecondsArg
         0 |   class NumArg (base) (empty)
         0 |   int fraction_digits
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9c3f1e0 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9c3f2f8 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x559ea9c3f388 <col:16, col:22> col:16 public
|-EnumDecl 0x559ea9c3f3b0 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x559ea9c3f4b0 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x559ea9c3f700 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c3f490 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x559ea9c3f470 <col:21> 'int' 0
| |-EnumConstantDecl 0x559ea9c3f540 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x559ea9c3f718 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c3f520 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x559ea9c3f500 <col:24> 'int' 22
| |-EnumConstantDecl 0x559ea9c3f5d0 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x559ea9c3f730 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c3f5b0 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x559ea9c3f590 <col:24> 'int' 34
| |-EnumConstantDecl 0x559ea9c3f660 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x559ea9c3f748 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559ea9c3f640 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x559ea9c3f620 <col:25> 'int' 95
| `-EnumConstantDecl 0x559ea9c3f6b0 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x559ea9c410c0 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x559ea9c414f8 <col:7>
|-CXXConstructorDecl 0x559ea9c411c8 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x559ea9c411c8
| `-ParmVarDecl 0x559ea9c412d8 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x559ea9c41378 <col:7> col:7 implicit used constexpr NumArg 'void (NumArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9c41488 <col:7> col:7 'NumArg &&'
| `-CompoundStmt 0x559ea9e8ca50 <col:7>
`-CXXDestructorDecl 0x559ea9e3d9e8 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9e49528 <../dummy_inc/click/args.hh:1310:1, line:1321:1> line:1310:7 referenced class SecondsArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x559ea9e49688 <col:1, col:7> col:7 implicit referenced class SecondsArg
|-AccessSpecDecl 0x559ea9e49718 <col:36, col:42> col:36 public
|-CXXConstructorDecl 0x559ea9e49828 <line:1311:5, line:1313:5> line:1311:5 used SecondsArg 'void (int)'
| |-ParmVarDecl 0x559ea9e49758 <col:16, col:24> col:20 used d 'int' cinit
| | `-IntegerLiteral 0x559ea9e4a0d0 <col:24> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x559ea9e4a1d0 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x559ea9e4a000 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x559ea9e4a190 <line:1312:27> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x559ea9e4a150 <col:27> 'int' lvalue ParmVar 0x559ea9e49758 'd' 'int'
| `-CompoundStmt 0x559ea9e4a240 <col:30, line:1313:5>
|-CXXMethodDecl 0x559ea9e49a78 <line:1314:5, col:99> col:10 parse_saturating 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x559ea9e498e8 <col:27, col:41> col:41 str 'const String &'
| |-ParmVarDecl 0x559ea9e49960 <col:46, col:56> col:56 result 'uint32_t &'
| `-ParmVarDecl 0x559ea9e499d8 <col:64, col:89> col:82 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x559ea9e4a0f0 <col:89> 'const ArgContext' lvalue Var 0x559ea9e27258 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x559ea9e49cd0 <line:1315:5, col:88> col:10 parse 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x559ea9e49b40 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x559ea9e49bb8 <col:35, col:45> col:45 result 'uint32_t &'
| `-ParmVarDecl 0x559ea9e49c30 <col:53, col:78> col:71 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x559ea9e4a110 <col:78> 'const ArgContext' lvalue Var 0x559ea9e27258 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x559ea9e49f30 <line:1317:5, col:86> col:10 parse 'bool (const String &, double &, const ArgContext &)'
| |-ParmVarDecl 0x559ea9e49d98 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x559ea9e49e18 <col:35, col:43> col:43 result 'double &'
| `-ParmVarDecl 0x559ea9e49e90 <col:51, col:76> col:69 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x559ea9e4a130 <col:76> 'const ArgContext' lvalue Var 0x559ea9e27258 'blank_args' 'const ArgContext'
|-FieldDecl 0x559ea9e4a000 <line:1319:5, col:9> col:9 referenced fraction_digits 'int'
|-FieldDecl 0x559ea9e4a068 <line:1320:5, col:9> col:9 referenced status 'int'
|-CXXConstructorDecl 0x559ea9e8bf68 <line:1310:7> col:7 implicit constexpr SecondsArg 'void (const SecondsArg &)' inline default trivial noexcept-unevaluated 0x559ea9e8bf68
| `-ParmVarDecl 0x559ea9e8c078 <col:7> col:7 'const SecondsArg &'
|-CXXConstructorDecl 0x559ea9e8c118 <col:7> col:7 implicit used constexpr SecondsArg 'void (SecondsArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9e8c228 <col:7> col:7 used 'SecondsArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x559ea9e8ca60 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x559ea9e8ca30 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x559ea9e8ca00 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9e8c9d0 <col:7> 'SecondsArg' lvalue ParmVar 0x559ea9e8c228 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x559ea9e4a000 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x559ea9e8cb58 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x559ea9e8cb28 <col:7> 'int' xvalue .fraction_digits 0x559ea9e4a000
| |     `-CXXStaticCastExpr 0x559ea9e8caf8 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9e8cac8 <col:7> 'SecondsArg' lvalue ParmVar 0x559ea9e8c228 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x559ea9e4a068 'status' 'int'
| | `-ImplicitCastExpr 0x559ea9e8cc28 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x559ea9e8cbf8 <col:7> 'int' xvalue .status 0x559ea9e4a068
| |     `-CXXStaticCastExpr 0x559ea9e8cbc8 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9e8cb98 <col:7> 'SecondsArg' lvalue ParmVar 0x559ea9e8c228 '' 'SecondsArg &&'
| `-CompoundStmt 0x559ea9e8cc80 <col:7>
`-CXXDestructorDecl 0x559ea9e8c2f0 <col:7> col:7 implicit referenced ~SecondsArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.SecondsArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.SecondsArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea98766c8 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea98767e8 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x559ea9a92cb0 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x559ea9a92d90 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x559ea9a92d90
| `-ParmVarDecl 0x559ea9a92e78 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x559ea9a92f18 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x559ea9a92f18
| `-ParmVarDecl 0x559ea9a93028 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x559ea9c2ca80 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9e53550 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9e53668 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x559ea9e53710 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x559ea9e53778 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x559ea9e537e0 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x559ea9e53890 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x559ea9e53710 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x559ea9e54790 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x559ea9e54748 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x559ea9e54710 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x559ea9e546f8 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x559ea9e54698 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x559ea9a7e950 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x559ea9e53778 'len' 'int'
| | `-IntegerLiteral 0x559ea9e54808 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x559ea9e537e0 'cap' 'int'
| | `-IntegerLiteral 0x559ea9e54870 <col:20> 'int' 0
| `-CompoundStmt 0x559ea9e548f0 <col:23, line:119:2>
|-CXXConstructorDecl 0x559ea9e53a08 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x559ea9e53948 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x559ea9e54900 <col:37, line:121:2>
|-CXXConstructorDecl 0x559ea9e56b18 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9e56c28 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x559ea9e53710 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x559ea9e58560 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x559ea9e58530 <col:12> 'unsigned char *const' lvalue .s 0x559ea9e53710
| |     `-DeclRefExpr 0x559ea9e58510 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x559ea9e56c28 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x559ea9e53778 'len' 'int'
| | `-ImplicitCastExpr 0x559ea9e585f0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x559ea9e585c0 <col:12> 'const int' lvalue .len 0x559ea9e53778
| |     `-DeclRefExpr 0x559ea9e585a0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x559ea9e56c28 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x559ea9e537e0 'cap' 'int'
| | `-ImplicitCastExpr 0x559ea9e58680 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x559ea9e58650 <col:12> 'const int' lvalue .cap 0x559ea9e537e0
| |     `-DeclRefExpr 0x559ea9e58630 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x559ea9e56c28 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x559ea9e586d8 <col:12>
|-CXXConstructorDecl 0x559ea9e56cc8 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x559ea9e56cc8
| `-ParmVarDecl 0x559ea9e56dd8 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x559ea9e58990 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9e4ecf8 prev 0x559ea9d92560 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559ea9e4edf0 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x559ea9e4ee80 <col:21, col:27> col:21 public
|-TypedefDecl 0x559ea9e4eec0 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x559ea971ddc0 'const char *'
|   `-QualType 0x559ea971d311 'const char' const
|     `-BuiltinType 0x559ea971d310 'char'
|-TypedefDecl 0x559ea9e4ef30 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x559ea971df90 'char *'
|   `-BuiltinType 0x559ea971d310 'char'
|-TypedefDecl 0x559ea9e4f070 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x559ea9e4efe0 'int (StringAccum::*)() const'
|   |-RecordType 0x559ea99df280 'StringAccum'
|   | `-CXXRecord 0x559ea9e4ecf8 'StringAccum'
|   `-ParenType 0x559ea9a560a0 'int () const' sugar
|     `-FunctionProtoType 0x559ea9a387d0 'int () const' const cdecl
|       `-BuiltinType 0x559ea971d370 'int'
|-CXXConstructorDecl 0x559ea9e4f130 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x559ea9e4f280 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x559ea9e4f1f0 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x559ea9e4f3d0 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x559ea9e4f340 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x559ea9e4f578 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x559ea9e4f4b8 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x559ea9e4f728 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x559ea9e4f668 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x559ea9e4f820 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x559ea9e4f9d8 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x559ea9e4f910 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x559ea9e4fb58 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x559ea9e4fa90 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x559ea9e4fc50 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x559ea9e4fd18 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x559ea9e4fde0 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x559ea9e4fea8 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x559ea9e4ff70 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x559ea9e500d8 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x559ea9e501a8 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x559ea9e50268 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x559ea9e50378 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x559ea9e50488 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x559ea9e50548 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x559ea9e50608 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x559ea9e50750 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x559ea9e506c0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x559ea9e508e0 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x559ea9e50810 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x559ea9e509a8 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x559ea9e50aa0 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x559ea9e50b60 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x559ea9e50c28 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x559ea9e50ce8 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x559ea9e50da8 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x559ea9e50e68 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x559ea9e50fb8 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x559ea9e50f20 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x559ea9e51108 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x559ea9e51078 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x559ea9e51260 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x559ea9e511c8 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x559ea9e513b0 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x559ea9e51320 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x559ea9e515d0 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x559ea9e51470 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x559ea9e514f0 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x559ea9e545c0 <col:53> 'int' 0
|-CXXMethodDecl 0x559ea9e51728 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x559ea9e51698 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x559ea9e545e0 <col:34> 'int' 1
|-CXXMethodDecl 0x559ea9e51870 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x559ea9e517e0 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x559ea9e519c0 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x559ea9e51930 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x559ea9e51b10 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x559ea9e51a80 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x559ea9e51c60 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x559ea9e51bd0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x559ea9e51e38 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x559ea9e51d20 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x559ea9e51da0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x559ea9e52018 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x559ea9e51f00 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x559ea9e51f80 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x559ea9e521f8 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x559ea9e520e0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x559ea9e52160 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x559ea9e523d8 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x559ea9e522c0 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x559ea9e52340 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x559ea9e525b8 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x559ea9e524a0 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x559ea9e52520 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x559ea9e52918 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x559ea9e52700 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x559ea9e52780 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x559ea9e54600 <col:56> 'int' 10
| `-ParmVarDecl 0x559ea9e527f8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559ea9e54620 <col:77> 'bool' true
|-CXXMethodDecl 0x559ea9e52c78 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x559ea9e52a60 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x559ea9e52ae0 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x559ea9e54630 <col:57> 'int' 10
| `-ParmVarDecl 0x559ea9e52b58 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559ea9e54650 <col:78> 'bool' true
|-CXXMethodDecl 0x559ea9e52ea0 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x559ea9e52d48 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x559ea9e52dc8 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x559ea9e52f98 <line:98:5, col:24> col:12 used take_string 'String ()'
|-CXXMethodDecl 0x559ea9e53108 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x559ea9e53048 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x559ea9e53258 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x559ea9e531c8 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x559ea9e53300 <col:51> "" ""
|-AccessSpecDecl 0x559ea9e53370 <line:106:3, col:10> col:3 private
|-EnumDecl 0x559ea9e53398 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x559ea9e534e8 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x559ea9e53538 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559ea9e534c8 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x559ea9e53498 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x559ea9a5fe08 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x559ea9e53550 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559ea9e53668 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x559ea9e53710 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x559ea9e53778 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x559ea9e537e0 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x559ea9e53890 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x559ea9e53710 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x559ea9e54790 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x559ea9e54748 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x559ea9e54710 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x559ea9e546f8 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x559ea9e54698 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x559ea9a7e950 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x559ea9e53778 'len' 'int'
| | | `-IntegerLiteral 0x559ea9e54808 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x559ea9e537e0 'cap' 'int'
| | | `-IntegerLiteral 0x559ea9e54870 <col:20> 'int' 0
| | `-CompoundStmt 0x559ea9e548f0 <col:23, line:119:2>
| |-CXXConstructorDecl 0x559ea9e53a08 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x559ea9e53948 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x559ea9e54900 <col:37, line:121:2>
| |-CXXConstructorDecl 0x559ea9e56b18 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x559ea9e56c28 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x559ea9e53710 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x559ea9e58560 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x559ea9e58530 <col:12> 'unsigned char *const' lvalue .s 0x559ea9e53710
| | |     `-DeclRefExpr 0x559ea9e58510 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x559ea9e56c28 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x559ea9e53778 'len' 'int'
| | | `-ImplicitCastExpr 0x559ea9e585f0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x559ea9e585c0 <col:12> 'const int' lvalue .len 0x559ea9e53778
| | |     `-DeclRefExpr 0x559ea9e585a0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x559ea9e56c28 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x559ea9e537e0 'cap' 'int'
| | | `-ImplicitCastExpr 0x559ea9e58680 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x559ea9e58650 <col:12> 'const int' lvalue .cap 0x559ea9e537e0
| | |     `-DeclRefExpr 0x559ea9e58630 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x559ea9e56c28 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x559ea9e586d8 <col:12>
| |-CXXConstructorDecl 0x559ea9e56cc8 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x559ea9e56cc8
| | `-ParmVarDecl 0x559ea9e56dd8 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x559ea9e58990 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x559ea9e53ae0 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x559ea9e53be0 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x559ea9e53b48 <col:16> col:19 'int'
|-CXXMethodDecl 0x559ea9e53dc0 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x559ea9e53ca0 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x559ea9e53d20 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x559ea9e53fa0 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x559ea9e53e88 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x559ea9e53f08 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x559ea9e540f8 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x559ea9e54068 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x559ea9e54248 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x559ea9e541b8 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x559ea9e54580 <line:132:5, col:70> col:25
  `-FunctionDecl 0x559ea9e544c0 parent 0x559ea971d278 <col:5, col:70> col:25 operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x559ea9e54300 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x559ea9e54378 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9d6c7a0 <../dummy_inc/click/hashcontainer.hh:14:1, col:69> line:302:7 class HashContainer_const_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x559ea9d881e8 prev 0x559ea9d6c7a0 <col:1, col:7> col:7 implicit class HashContainer_const_iterator
|-AccessSpecDecl 0x559ea9d88278 <col:38, col:44> col:38 public
|-TypedefDecl 0x559ea9d88440 <line:304:5, col:53> col:53 size_type 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type':'unsigned long'
| `-ElaboratedType 0x559ea9d883f0 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type' sugar
|   `-TypedefType 0x559ea9d6c310 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type' sugar
|     |-Typedef 0x559ea9d6bad0 'size_type'
|     `-TypedefType 0x559ea97c6740 'size_t' sugar
|       |-Typedef 0x559ea978db20 'size_t'
|       `-BuiltinType 0x559ea971d430 'unsigned long'
|-TypedefDecl 0x559ea9d885e0 <line:305:5, col:61> col:61 referenced bucket_count_type 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| `-ElaboratedType 0x559ea9d88590 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type' sugar
|   `-TypedefType 0x559ea9d6c4b0 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type' sugar
|     |-Typedef 0x559ea9d6bb28 'bucket_count_type'
|     `-TypedefType 0x559ea9876a50 'uint32_t' sugar
|       |-Typedef 0x559ea9786408 'uint32_t'
|       `-TypedefType 0x559ea975f440 '__uint32_t' sugar
|         |-Typedef 0x559ea975f038 '__uint32_t'
|         `-BuiltinType 0x559ea971d410 'unsigned int'
|-CXXConstructorDecl 0x559ea9d88670 <line:308:5, line:309:5> line:308:5 HashContainer_const_iterator 'void ()'
|-CXXMethodDecl 0x559ea9d887d8 <line:312:5, line:314:5> line:312:8 used get 'IPRewriterEntry *() const'
|-CXXMethodDecl 0x559ea9d888a8 <line:317:5, line:319:5> line:317:8 used operator-> 'IPRewriterEntry *() const'
|-CXXMethodDecl 0x559ea9d88a08 <line:323:5, line:325:5> line:323:8 operator* 'IPRewriterEntry &() const'
|-CXXMethodDecl 0x559ea9d88ab8 <line:328:5, line:330:5> line:328:17 used live 'bool () const' inline
|-TypedefDecl 0x559ea9d88c48 <line:332:5, col:73> col:48 unspecified_bool_type 'IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const'
| `-MemberPointerType 0x559ea9d88be0 'IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const'
|   |-RecordType 0x559ea9d6c8a0 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|   | `-ClassTemplateSpecialization 0x559ea9d6c7a0 'HashContainer_const_iterator'
|   `-ParenType 0x559ea9d88b70 'IPRewriterEntry *() const' sugar
|     `-FunctionProtoType 0x559ea9d88790 'IPRewriterEntry *() const' const cdecl
|       `-PointerType 0x559ea9d88730 'IPRewriterEntry *'
|         `-SubstTemplateTypeParmType 0x559ea9d882a0 'IPRewriterEntry' sugar
|           |-TemplateTypeParmType 0x559ea9cdc8f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x559ea9cdc898 'T'
|           `-RecordType 0x559ea9d36300 'IPRewriterEntry'
|             `-CXXRecord 0x559ea9d39b70 'IPRewriterEntry'
|-CXXConversionDecl 0x559ea9d88d60 <line:334:5, line:336:5> line:334:12 operator IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x559ea9d88fb8 <line:339:5, line:341:5> line:339:32 hashcontainer 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *() const'
|-CXXMethodDecl 0x559ea9d890d8 <line:344:5, line:346:5> line:344:23 bucket 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type () const'
|-CXXMethodDecl 0x559ea9d89188 <line:349:5, line:361:5> line:349:10 used operator++ 'void ()'
|-CXXMethodDecl 0x559ea9d892c8 <line:364:5, line:366:5> line:364:10 operator++ 'void (int)'
| `-ParmVarDecl 0x559ea9d89238 <col:21> col:24 'int'
|-AccessSpecDecl 0x559ea9d89380 <line:368:3, col:10> col:3 private
|-FieldDecl 0x559ea9d893b8 <line:370:5, col:8> col:8 referenced _element 'IPRewriterEntry *'
|-FieldDecl 0x559ea9d89450 <line:371:5, col:9> col:9 referenced _pprev 'IPRewriterEntry **'
|-FieldDecl 0x559ea9d894b0 <line:372:5, col:23> col:23 referenced _bucket 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
|-FieldDecl 0x559ea9d895f8 <line:373:5, col:32> col:32 referenced _hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x559ea9d89858 <line:375:5, line:385:5> line:375:12 HashContainer_const_iterator 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *)' inline
| `-ParmVarDecl 0x559ea9d89748 <col:41, col:68> col:68 hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x559ea9d89ce8 <line:387:5, line:390:5> line:387:12 HashContainer_const_iterator 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *, HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type, IPRewriterEntry **, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x559ea9d89a18 <col:41, col:68> col:68 hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| |-ParmVarDecl 0x559ea9d89a90 <col:72, col:90> col:90 b 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x559ea9d89b10 <col:93, col:97> col:97 pprev 'IPRewriterEntry **'
| `-ParmVarDecl 0x559ea9d89b88 <col:104, col:107> col:107 element 'IPRewriterEntry *'
|-FriendDecl 0x559ea9d89ec8 <line:392:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x559ea9d8a018 <line:393:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXDestructorDecl 0x559ea9d8b110 <line:302:7> col:7 implicit ~HashContainer_const_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x559ea9d8b248 <col:7> col:7 implicit constexpr HashContainer_const_iterator 'void (const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x559ea9d8b248
| `-ParmVarDecl 0x559ea9d8b358 <col:7> col:7 'const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXConstructorDecl 0x559ea9d8b3f8 <col:7> col:7 implicit used constexpr HashContainer_const_iterator 'void (HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9d8b508 <col:7> col:7 used 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x559ea9d893b8 '_element' 'IPRewriterEntry *'
| | `-ImplicitCastExpr 0x559ea9d8baa8 <col:7> 'IPRewriterEntry *' <LValueToRValue>
| |   `-MemberExpr 0x559ea9d8ba60 <col:7> 'IPRewriterEntry *' xvalue ._element 0x559ea9d893b8
| |     `-CXXStaticCastExpr 0x559ea9d8ba30 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9d8ba00 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x559ea9d8b508 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x559ea9d89450 '_pprev' 'IPRewriterEntry **'
| | `-ImplicitCastExpr 0x559ea9d8bb90 <col:7> 'IPRewriterEntry **' <LValueToRValue>
| |   `-MemberExpr 0x559ea9d8bb48 <col:7> 'IPRewriterEntry **' xvalue ._pprev 0x559ea9d89450
| |     `-CXXStaticCastExpr 0x559ea9d8bb18 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9d8bae8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x559ea9d8b508 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x559ea9d894b0 '_bucket' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| | `-ImplicitCastExpr 0x559ea9d8bc78 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x559ea9d8bc30 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x559ea9d894b0
| |     `-CXXStaticCastExpr 0x559ea9d8bc00 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9d8bbd0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x559ea9d8b508 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x559ea9d895f8 '_hc' 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| | `-ImplicitCastExpr 0x559ea9d8bd60 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' <LValueToRValue>
| |   `-MemberExpr 0x559ea9d8bd18 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' xvalue ._hc 0x559ea9d895f8
| |     `-CXXStaticCastExpr 0x559ea9d8bce8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9d8bcb8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x559ea9d8b508 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| `-CompoundStmt 0x559ea9d8bdc0 <col:7>
|-CXXMethodDecl 0x559ea9d8c808 <col:7> col:7 implicit operator= 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x559ea9d8c808
| `-ParmVarDecl 0x559ea9d8c918 <col:7> col:7 'const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x559ea9d8c988 <col:7> col:7 implicit used operator= 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x559ea9d8ca98 <col:7> col:7 used 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
  `-CompoundStmt 0x559ea9d8d790 <col:7>
    |-BinaryOperator 0x559ea9d8d420 <col:7> 'IPRewriterEntry *' lvalue '='
    | |-MemberExpr 0x559ea9d8d3d8 <col:7> 'IPRewriterEntry *' lvalue ->_element 0x559ea9d893b8
    | | `-CXXThisExpr 0x559ea9d8d3c8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x559ea9d8d408 <col:7> 'IPRewriterEntry *' <LValueToRValue>
    |   `-MemberExpr 0x559ea9d8d398 <col:7> 'IPRewriterEntry *' xvalue ._element 0x559ea9d893b8
    |     `-CXXStaticCastExpr 0x559ea9d8d368 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x559ea9d8d338 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x559ea9d8ca98 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x559ea9d8d528 <col:7> 'IPRewriterEntry **' lvalue '='
    | |-MemberExpr 0x559ea9d8d4e0 <col:7> 'IPRewriterEntry **' lvalue ->_pprev 0x559ea9d89450
    | | `-CXXThisExpr 0x559ea9d8d4d0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x559ea9d8d510 <col:7> 'IPRewriterEntry **' <LValueToRValue>
    |   `-MemberExpr 0x559ea9d8d4a0 <col:7> 'IPRewriterEntry **' xvalue ._pprev 0x559ea9d89450
    |     `-CXXStaticCastExpr 0x559ea9d8d470 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x559ea9d8d440 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x559ea9d8ca98 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x559ea9d8d630 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' lvalue '='
    | |-MemberExpr 0x559ea9d8d5e8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' lvalue ->_bucket 0x559ea9d894b0
    | | `-CXXThisExpr 0x559ea9d8d5d8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x559ea9d8d618 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x559ea9d8d5a8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x559ea9d894b0
    |     `-CXXStaticCastExpr 0x559ea9d8d578 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x559ea9d8d548 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x559ea9d8ca98 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x559ea9d8d738 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' lvalue '='
    | |-MemberExpr 0x559ea9d8d6f0 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' lvalue ->_hc 0x559ea9d895f8
    | | `-CXXThisExpr 0x559ea9d8d6e0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x559ea9d8d720 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' <LValueToRValue>
    |   `-MemberExpr 0x559ea9d8d6b0 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' xvalue ._hc 0x559ea9d895f8
    |     `-CXXStaticCastExpr 0x559ea9d8d680 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x559ea9d8d650 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x559ea9d8ca98 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    `-ReturnStmt 0x559ea9d8d780 <col:7>
      `-UnaryOperator 0x559ea9d8d768 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x559ea9d8d758 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_const_iterator = type { %class.IPRewriterEntry*, %class.IPRewriterEntry**, i32, %class.HashContainer* }
  NonVirtualBaseLLVMType:%class.HashContainer_const_iterator = type { %class.IPRewriterEntry*, %class.IPRewriterEntry**, i32, %class.HashContainer* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9d6c9d8 <../dummy_inc/click/hashcontainer.hh:15:1, col:69> line:400:7 class HashContainer_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x559ea9d8a0a0 prev 0x559ea9d6c9d8 <col:1, col:7> col:7 implicit class HashContainer_iterator
|-AccessSpecDecl 0x559ea9d8a130 <col:76, col:82> col:76 public
|-TypedefDecl 0x559ea9d8a220 <line:402:5, col:48> col:48 inherited 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x559ea9d8a180 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x559ea9d6c8a0 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x559ea9d6c7a0 'HashContainer_const_iterator'
|-CXXConstructorDecl 0x559ea9d8a2b0 <line:405:5, line:406:5> line:405:5 HashContainer_iterator 'void ()'
|-CXXMethodDecl 0x559ea9d8a368 <line:414:5, line:416:5> line:414:10 can_insert 'bool () const'
|-CXXMethodDecl 0x559ea9d8a588 <line:419:5, line:421:5> line:419:26 hashcontainer 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *() const'
|-AccessSpecDecl 0x559ea9d8a638 <line:423:3, col:10> col:3 private
|-CXXConstructorDecl 0x559ea9d8a868 <line:425:5, line:427:5> line:425:12 HashContainer_iterator 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *)' inline
| `-ParmVarDecl 0x559ea9d8a758 <col:35, col:56> col:56 hc 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x559ea9d8adf8 <line:429:5, line:431:5> line:429:12 HashContainer_iterator 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *, typename inherited::bucket_count_type, IPRewriterEntry **, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x559ea9d8aa28 <col:35, col:56> col:56 hc 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| |-ParmVarDecl 0x559ea9d8ab40 <col:60, col:98> col:98 b 'typename inherited::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x559ea9d8ac20 <col:101, col:105> col:105 pprev 'IPRewriterEntry **'
| `-ParmVarDecl 0x559ea9d8ac98 <col:112, col:115> col:115 element 'IPRewriterEntry *'
|-FriendDecl 0x559ea9d8afd8 <line:433:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXDestructorDecl 0x559ea9d8b030 <line:400:7> col:7 implicit referenced ~HashContainer_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x559ea9d8b578 <col:7> col:7 implicit constexpr HashContainer_iterator 'void (const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x559ea9d8b578
| `-ParmVarDecl 0x559ea9d8b688 <col:7> col:7 'const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXConstructorDecl 0x559ea9d8b728 <col:7> col:7 implicit used constexpr HashContainer_iterator 'void (HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9d8b838 <col:7> col:7 used 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| | `-CXXConstructExpr 0x559ea9d8bdd0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' 'void (HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept'
| |   `-ImplicitCastExpr 0x559ea9d8b9e0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
| |     `-CXXStaticCastExpr 0x559ea9d8b9b0 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9d8b980 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x559ea9d8b838 '' 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| `-CompoundStmt 0x559ea9d8be98 <col:7>
|-CXXMethodDecl 0x559ea9d8c658 <col:7> col:7 implicit operator= 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x559ea9d8c658
| `-ParmVarDecl 0x559ea9d8c768 <col:7> col:7 'const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x559ea9d8cb08 <col:7> col:7 implicit used operator= 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x559ea9d8cc18 <col:7> col:7 used 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
  `-CompoundStmt 0x559ea9d8d828 <col:7>
    |-CXXMemberCallExpr 0x559ea9d8d7c8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue
    | |-MemberExpr 0x559ea9d8d2c0 <col:7> '<bound member function type>' .operator= 0x559ea9d8c988
    | | `-ImplicitCastExpr 0x559ea9d8d1f0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
    | |   `-UnaryOperator 0x559ea9d8d1d8 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
    | |     `-CXXThisExpr 0x559ea9d8d1c8 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x559ea9d8d2a0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
    |   `-DeclRefExpr 0x559ea9d8d280 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x559ea9d8cc18 '' 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    `-ReturnStmt 0x559ea9d8d818 <col:7>
      `-UnaryOperator 0x559ea9d8d800 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x559ea9d8d7f0 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  NonVirtualBaseLLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<8>
         0 |   char [8] x
           | [sizeof=8, dsize=8, align=1,
           |  nvsize=8, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9d581d0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 8
|-PackedAttr 0x559ea9eda1b0 <line:167:18>
|-CXXRecordDecl 0x559ea9eda270 prev 0x559ea9d581d0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x559ea9eda380 <line:166:5, col:13> col:10 x 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.2 = type { [8 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.2 = type { [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<_Bool>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   _Bool * _ptr
        24 |   _Bool _slot
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   int * _ptr
        24 |   int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<unsigned int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   unsigned int * _ptr
        24 |   unsigned int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct char_array<56>
         0 |   char [56] x
           | [sizeof=56, dsize=56, align=1,
           |  nvsize=56, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9d740b0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 56
|-PackedAttr 0x559ea9f33378 <line:167:18>
|-CXXRecordDecl 0x559ea9f33438 prev 0x559ea9d740b0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x559ea9f33548 <line:166:5, col:13> col:10 x 'char [56]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [56 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [56 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class BoolArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<_Bool> (empty)
         0 |   class BoolArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559ea9e471e0 <../dummy_inc/click/args.hh:1257:1, line:1262:1> line:1257:7 referenced class BoolArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559ea9e472f8 <col:1, col:7> col:7 implicit class BoolArg
|-AccessSpecDecl 0x559ea9e47388 <col:17, col:23> col:17 public
|-CXXMethodDecl 0x559ea9e475c8 <line:1258:5, col:91> col:17 used parse 'bool (const String &, bool &, const ArgContext &)' static
| |-ParmVarDecl 0x559ea9e473c0 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x559ea9e47440 <col:42, col:48> col:48 result 'bool &'
| `-ParmVarDecl 0x559ea9e474b8 <col:56, col:81> col:74 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x559ea9e477e0 <col:81> 'const ArgContext' lvalue Var 0x559ea9e27258 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x559ea9e47720 <line:1259:5, line:1261:5> line:1259:19 unparse 'String (bool)' static
| |-ParmVarDecl 0x559ea9e47690 <col:27, col:32> col:32 used x 'bool'
| `-CompoundStmt 0x559ea9e47938 <col:35, line:1261:5>
|   `-ReturnStmt 0x559ea9e47928 <line:1260:9, col:24>
|     `-ExprWithCleanups 0x559ea9e47910 <col:16, col:24> 'String'
|       `-CXXConstructExpr 0x559ea9e478e0 <col:16, col:24> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x559ea9e478c8 <col:16, col:24> 'String' xvalue
|           `-CXXFunctionalCastExpr 0x559ea9e478a0 <col:16, col:24> 'String' functional cast to class String <ConstructorConversion>
|             `-CXXBindTemporaryExpr 0x559ea9e47880 <col:16, col:24> 'String' (CXXTemporary 0x559ea9e47880)
|               `-CXXConstructExpr 0x559ea9e47848 <col:16, col:24> 'String' 'void (bool)'
|                 `-ImplicitCastExpr 0x559ea9e47830 <col:23> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x559ea9e47810 <col:23> 'bool' lvalue ParmVar 0x559ea9e47690 'x' 'bool'
|-CXXConstructorDecl 0x559ea9f16088 <line:1257:7> col:7 implicit constexpr BoolArg 'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x559ea9f16160 <col:7> col:7 implicit ~BoolArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x559ea9f16298 <col:7> col:7 implicit constexpr BoolArg 'void (const BoolArg &)' inline default trivial noexcept-unevaluated 0x559ea9f16298
| `-ParmVarDecl 0x559ea9f163a8 <col:7> col:7 'const BoolArg &'
`-CXXConstructorDecl 0x559ea9f16448 <col:7> col:7 implicit used constexpr BoolArg 'void (BoolArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x559ea9f16558 <col:7> col:7 'BoolArg &&'
  `-CompoundStmt 0x559ea9f171b0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.BoolArg = type { i8 }
  NonVirtualBaseLLVMType:%class.BoolArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x559ea9e47978 <../dummy_inc/click/args.hh:1264:1, col:54> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'BoolArg'
|-TemplateArgument type 'bool'
|-CXXRecordDecl 0x559ea9e47bd8 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x559ea9f15f98 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x559ea9f165c8 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<bool> &)' inline default trivial noexcept-unevaluated 0x559ea9f165c8
| `-ParmVarDecl 0x559ea9f166d8 <col:19> col:19 'const DefaultArg<bool> &'
|-CXXConstructorDecl 0x559ea9f16778 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<bool> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559ea9f16888 <col:19> col:19 used 'DefaultArg<bool> &&'
| |-CXXCtorInitializer 'BoolArg'
| | `-CXXConstructExpr 0x559ea9f171c0 <col:19> 'BoolArg' 'void (BoolArg &&) noexcept'
| |   `-ImplicitCastExpr 0x559ea9f17190 <col:19> 'BoolArg' xvalue <UncheckedDerivedToBase (BoolArg)>
| |     `-CXXStaticCastExpr 0x559ea9f17160 <col:19> 'DefaultArg<bool>' xvalue static_cast<struct DefaultArg<_Bool> &&> <NoOp>
| |       `-DeclRefExpr 0x559ea9f17130 <col:19> 'DefaultArg<bool>' lvalue ParmVar 0x559ea9f16888 '' 'DefaultArg<bool> &&'
| `-CompoundStmt 0x559ea9f17230 <col:19>
`-CXXDestructorDecl 0x559ea9f16928 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>
