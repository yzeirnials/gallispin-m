
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct libdivide_u32_t
         0 |   uint32_t magic
         4 |   uint8_t more
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPFlowID
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   class IPAddress _daddr
         4 |     uint32_t _addr
         8 |   uint16_t _sport
        10 |   uint16_t _dport
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPRewriterEntry
         0 |   class IPFlowID _flowid
         0 |     class IPAddress _saddr
         0 |       uint32_t _addr
         4 |     class IPAddress _daddr
         4 |       uint32_t _addr
         8 |     uint16_t _sport
        10 |     uint16_t _dport
   12:0-23 |   uint32_t _output
        15 |   uint8_t _direction
        16 |   class IPRewriterEntry * _hashnext
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterFlow *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5)
         0 |   class IPRewriterPattern * pattern
         0 |   class IPMapper * mapper
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterInput
         0 |   class IPRewriterBase * owner
         8 |   int owner_input
        12 |   int kind
        16 |   int foutput
        24 |   class IPRewriterBase * reply_element
        32 |   int routput
        36 |   uint32_t count
        40 |   uint32_t failures
        48 |   union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5) u
        48 |     class IPRewriterPattern * pattern
        48 |     class IPMapper * mapper
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class IPRewriterEntry * _element
         8 |   class IPRewriterEntry ** _pprev
        16 |   HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |   const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > (base)
         0 |     class IPRewriterEntry * _element
         8 |     class IPRewriterEntry ** _pprev
        16 |     HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |     const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterFlow
         0 |   class IPRewriterEntry [2] _e
        48 |   uint16_t _ip_csum_delta
        50 |   uint16_t _udp_csum_delta
        52 |   click_jiffies_t _expiry_j
   56:0-31 |   size_t _place
        60 |   uint8_t _ip_p
        61 |   uint8_t _tflags
        62 |   _Bool _guaranteed
        63 |   uint8_t _reply_anno
        64 |   class IPRewriterInput * _owner
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | class TCPRewriter::TCPFlow
         0 |   class IPRewriterFlow (base)
         0 |     class IPRewriterEntry [2] _e
        48 |     uint16_t _ip_csum_delta
        50 |     uint16_t _udp_csum_delta
        52 |     click_jiffies_t _expiry_j
   56:0-31 |     size_t _place
        60 |     uint8_t _ip_p
        61 |     uint8_t _tflags
        62 |     _Bool _guaranteed
        63 |     uint8_t _reply_anno
        64 |     class IPRewriterInput * _owner
        72 |   struct TCPRewriter::TCPFlow::delta_transition * _dt
           | [sizeof=80, dsize=80, align=8,
           |  nvsize=80, nvalign=8]

*** Dumping AST Record Layout
         0 | class UDPRewriter::UDPFlow
         0 |   class IPRewriterFlow (base)
         0 |     class IPRewriterEntry [2] _e
        48 |     uint16_t _ip_csum_delta
        50 |     uint16_t _udp_csum_delta
        52 |     click_jiffies_t _expiry_j
   56:0-31 |     size_t _place
        60 |     uint8_t _ip_p
        61 |     uint8_t _tflags
        62 |     _Bool _guaranteed
        63 |     uint8_t _reply_anno
        64 |     class IPRewriterInput * _owner
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | class MyRewriterPattern
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   int _sport
         8 |   class IPAddress _daddr
         8 |     uint32_t _addr
        12 |   int _dport
        16 |   uint32_t _variation_top
        20 |   _Bool _sequential
           | [sizeof=24, dsize=21, align=4,
           |  nvsize=21, nvalign=4]

*** Dumping AST Record Layout
         0 | class MyInputSpec
         0 |   int kind
         4 |   int foutput
         8 |   int doutput
        12 |   class MyRewriterPattern pattern
        12 |     class IPAddress _saddr
        12 |       uint32_t _addr
        16 |     int _sport
        20 |     class IPAddress _daddr
        20 |       uint32_t _addr
        24 |     int _dport
        28 |     uint32_t _variation_top
        32 |     _Bool _sequential
        36 |   int __placeholder
           | [sizeof=40, dsize=40, align=4,
           |  nvsize=40, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71deb1598 prev 0x55b71dea8d08 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71deb1690 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55b71deb1720 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55b71deb1798 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55b71deb1858 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55b71deb1920 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55b71deb1a98 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55b71deb19d0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55b71deb1b40 <col:24>
| `-OptimizeNoneAttr 0x55b71deb1b98 <col:34>
|-CXXMethodDecl 0x55b71deb1be0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55b71deb1e98 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55b71deb1c90 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55b71deb1d08 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55b71deb1d88 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55b71deb1f60 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55b71deb1f98 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55b71deb2000 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55b71deb2088 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55b71deb23a8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55b71deb2140 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55b71deb21b8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55b71deb2230 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55b71deb22b0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55b71deb24c0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55b71de20a68 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55b71de20a68
| `-ParmVarDecl 0x55b71de20b78 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55b71de20c18 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55b71de20c18
| `-ParmVarDecl 0x55b71de20d28 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55b71e1eeaf0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dbf63a0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71dbf64b8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55b71dbf6548 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55b71dbf6618 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55b71dbf6700 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55b71dbf6918 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55b71dbf67c0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71dbf6ac8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55b71dbf69d0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55b71dbf6c10 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55b71dbf6b80 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55b71dbf76f0 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55b71dbf7660 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71dbf7838 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55b71dbf77a8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71dbf7900 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55b71dbf7a48 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x55b71dbf79b8 <col:28> col:31 'int'
|-CXXMethodDecl 0x55b71dbf7b10 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55b71dbf7c58 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55b71dbf7bc8 <col:28> col:31 'int'
|-CXXMethodDecl 0x55b71dbf7dd8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55b71dbf7d10 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71dbf7f20 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55b71dbf7e90 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71dbf7fe8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55b71dbf81a8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55b71dbf8098 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b71dbf8110 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71dbf83f8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55b71dbf8268 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b71dbf82e0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b71dbf84a8 <col:86> "" ""
|-CXXMethodDecl 0x55b71dbf8718 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55b71dbf8588 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55b71dbf8600 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71dbf88c8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55b71dbf87d8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55b71dbf8a78 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55b71dbf8980 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55b71dbf8d48 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55b71dbf8b30 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55b71dbf8ba8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b71dbf8c20 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71dbf9028 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55b71dbf8e10 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55b71dbf8e88 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b71dbf8f00 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b71dbf90e0 <col:115> "" ""
|-AccessSpecDecl 0x55b71dbf9150 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55b71dbf9188 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71dbf9890 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55b71dbf9890
| `-ParmVarDecl 0x55b71dbf9998 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55b71dbf9a38 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55b71dbf9a38
| `-ParmVarDecl 0x55b71dbf9b48 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55b71dc98558 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b71de8e150 <col:7>
|-CXXConstructorDecl 0x55b71dc98630 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55b71dc98630
| `-ParmVarDecl 0x55b71dc98748 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55b71dc987b8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55b71dc987b8
| `-ParmVarDecl 0x55b71dc988c8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55b71de90ac0 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71df6d610 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55b71df6d7e8 prev 0x55b71df6d610 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55b71df6d878 <col:46, col:52> col:46 public
|-TypedefDecl 0x55b71df6d8a0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71df6f470 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55b71df6f420 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55b71df6dd50 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55b71df6dc50 'type'
|     `-TemplateSpecializationType 0x55b71df6dbe0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55b71df6dac0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55b71df6daa0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55b71df6da80 <col:24> 'unsigned long' 8
|       `-RecordType 0x55b71df6dbc0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55b71df6dae0 'char_array'
|-TypedefDecl 0x55b71df6f528 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55b71df6f4f0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55b71df6f4d0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55b71df6f470 'type'
|     `-ElaboratedType 0x55b71df6f420 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55b71df6dd50 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55b71df6dc50 'type'
|         `-TemplateSpecializationType 0x55b71df6dbe0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55b71df6dac0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55b71df6daa0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55b71df6da80 <col:24> 'unsigned long' 8
|           `-RecordType 0x55b71df6dbc0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55b71df6dae0 'char_array'
|-CXXMethodDecl 0x55b71df6f6a8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55b71df6f5b8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55b71df6f798 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55b71df6f878 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55b71df6fb48 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55b71df6fa50 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55b71df6fd88 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55b71df6fc00 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71df6fc78 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55b71df6ff58 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55b71df6fe48 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71df6fec0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55b71df700b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55b71df70188 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55b71df703d8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55b71df70248 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55b71df702c0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55b71df70638 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55b71df704a8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55b71df70520 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55b71df707f8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55b71df70708 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55b71df709b8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55b71df708c0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55b71df70a70 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71df74440 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71df74678 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55b71df744f0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71df74568 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55b71df74918 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55b71df74820 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55b71df749e0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55b71df74a30 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55b71df74a80 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e198288 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x55b71e1a2bc8 prev 0x55b71e198288 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b71e1a3be0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55b71e1a3b90 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x55b71e1a3b70 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x55b71e1a3a20 'type'
|     `-SubstTemplateTypeParmType 0x55b71df6d1e0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55b71dc16000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc15fa8 'T'
|       `-RecordType 0x55b71df6cd30 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55b71df6cc48 'sized_array_memory'
|-FieldDecl 0x55b71e1a3ce0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55b71e1a3d30 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b71e1a3d68 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x55b71e1a2c60 'Element *' sugar
|   |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dc4c168 'T'
|   `-PointerType 0x55b71de9ab10 'Element *'
|     `-RecordType 0x55b71de9a890 'Element'
|       `-CXXRecord 0x55b71dea4550 'Element'
|-TypedefDecl 0x55b71e1a3df8 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x55b71e1a3dc0 'Element *&'
|   `-SubstTemplateTypeParmType 0x55b71e1a2c60 'Element *' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-PointerType 0x55b71de9ab10 'Element *'
|       `-RecordType 0x55b71de9a890 'Element'
|         `-CXXRecord 0x55b71dea4550 'Element'
|-TypedefDecl 0x55b71e1a3eb8 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x55b71e1a3e80 'Element *const &'
|   `-QualType 0x55b71e1a2c61 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55b71e1a2c60 'Element *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71de9ab10 'Element *'
|         `-RecordType 0x55b71de9a890 'Element'
|           `-CXXRecord 0x55b71dea4550 'Element'
|-TypedefDecl 0x55b71e1a3f48 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x55b71e1a3f10 'Element **'
|   `-SubstTemplateTypeParmType 0x55b71e1a2c60 'Element *' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-PointerType 0x55b71de9ab10 'Element *'
|       `-RecordType 0x55b71de9a890 'Element'
|         `-CXXRecord 0x55b71dea4550 'Element'
|-TypedefDecl 0x55b71e1a4008 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x55b71e1a3fd0 'Element *const *'
|   `-QualType 0x55b71e1a2c61 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55b71e1a2c60 'Element *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71de9ab10 'Element *'
|         `-RecordType 0x55b71de9a890 'Element'
|           `-CXXRecord 0x55b71dea4550 'Element'
|-TypedefDecl 0x55b71e1a4be0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x55b71e1a4b90 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x55b71e1a4b70 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x55b71e1a4b00 'type'
|     `-SubstTemplateTypeParmType 0x55b71e1a48c0 'Element *' sugar
|       |-TemplateTypeParmType 0x55b71dc1e200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc1e1b0 'T'
|       `-PointerType 0x55b71de9ab10 'Element *'
|         `-RecordType 0x55b71de9a890 'Element'
|           `-CXXRecord 0x55b71dea4550 'Element'
|-TypedefDecl 0x55b71e1a4c48 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x55b71e1a3e80 'Element *const &'
|   `-QualType 0x55b71e1a2c61 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55b71e1a2c60 'Element *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71de9ab10 'Element *'
|         `-RecordType 0x55b71de9a890 'Element'
|           `-CXXRecord 0x55b71dea4550 'Element'
|-TypedefDecl 0x55b71e1a4ca0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e1aa9e0 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x55b71e1a3f10 'Element **'
|   `-SubstTemplateTypeParmType 0x55b71e1a2c60 'Element *' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-PointerType 0x55b71de9ab10 'Element *'
|       `-RecordType 0x55b71de9a890 'Element'
|         `-CXXRecord 0x55b71dea4550 'Element'
|-TypedefDecl 0x55b71e1aaa48 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x55b71e1a3fd0 'Element *const *'
|   `-QualType 0x55b71e1a2c61 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55b71e1a2c60 'Element *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71de9ab10 'Element *'
|         `-RecordType 0x55b71de9a890 'Element'
|           `-CXXRecord 0x55b71dea4550 'Element'
|-EnumDecl 0x55b71e1aaaa0 <line:134:5> col:5
| `-EnumConstantDecl 0x55b71e1aab90 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b71e1aab70 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b71dc4d388 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b71dc4d360 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b71dc4d340 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b71e1aac18 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b71e1aaea8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1aacd0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1aad70 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x55b71e1ab138 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55b71e1ab020 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x55b71e1ab3f8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55b71e1ab2e0 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55b71e1ab710 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55b71e1ab5f0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x55b71e1aba20 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55b71e1ab900 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55b71e1abd10 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1abb58 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1abbd0 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55b71e1abe68 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55b71e1abf48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1abfa0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1abfe8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55b71e1ac098 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1ac0f0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1ac1b8 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1ac268 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1ac2c0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1ac308 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1ac3b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1ac410 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1ac458 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1ac508 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1ac560 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1ac5a8 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1ac658 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1ac6b0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1ac6d8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e1ac788 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e1ac838 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b71e1ac9f8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1ac8e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1ac960 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55b71e1acb48 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1acab8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1accf8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x55b71e1acc00 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e1acdb0 <col:20>
| `-OptimizeNoneAttr 0x55b71e1ace08 <col:30>
|-CXXMethodDecl 0x55b71e1acf28 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55b71e1ace30 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e1acfe0 <col:20>
| `-OptimizeNoneAttr 0x55b71e1ad038 <col:30>
|-CXXMethodDecl 0x55b71e1ad0f0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1ad060 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1ad238 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e1ad1a8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1ad368 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x55b71e1ad498 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x55b71e1ad568 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x55b71e1ad638 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x55b71e1ad778 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1ad6e8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1ad8c0 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e1ad830 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1ada08 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55b71e1ad978 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e1adac0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b71e1adbc0 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b71e1adb30 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e1adc78 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b71e1add38 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x55b71e1ade38 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x55b71e1adfb8 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e1adef8 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x55b71e1ae778 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b71e1ae070 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x55b71e1ae6d8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x55b71e1ae5d8 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x55b71e1ae858 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e1ae9a8 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e1ae918 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55b71e1aea60 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b71e1aeca8 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1aeb20 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55b71e1aeb98 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55b71e1aee68 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x55b71e1aed78 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55b71e1af0b8 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x55b71e1aef30 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55b71e1aefa8 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55b71e1af178 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e1af3d8 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x55b71e1af2e0 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x55b71e1af4a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b71e1af4a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dc76030 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b71dc76148 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55b71dc761e8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55b71dc76248 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55b71dc762a8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55b71dc76358 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dc76660 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71dc76778 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55b71dc76820 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55b71dc76888 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55b71dc76918 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55b71dc7b100 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b71dc7b538 <col:12>
|-CXXConstructorDecl 0x55b71dc7b208 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71dc7b318 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55b71dc76820 'data' 'const char *'
| | `-ImplicitCastExpr 0x55b71dc7e980 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55b71dc7e950 <col:12> 'const char *const' lvalue .data 0x55b71dc76820
| |     `-DeclRefExpr 0x55b71dc7e930 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b71dc7b318 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55b71dc76888 'length' 'int'
| | `-ImplicitCastExpr 0x55b71dc7ea10 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55b71dc7e9e0 <col:12> 'const int' lvalue .length 0x55b71dc76888
| |     `-DeclRefExpr 0x55b71dc7e9c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b71dc7b318 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55b71dc76918 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55b71dc7eaa0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55b71dc7ea70 <col:12> 'String::memo_t *const' lvalue .memo 0x55b71dc76918
| |     `-DeclRefExpr 0x55b71dc7ea50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b71dc7b318 '' 'const String::rep_t &'
| `-CompoundStmt 0x55b71dc7eaf8 <col:12>
|-CXXConstructorDecl 0x55b71dc7b3b8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b71dc7b3b8
| `-ParmVarDecl 0x55b71dc7b4c8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55b71dc81820 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b71dc8aea8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71dc8afb8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55b71dc8b4d0 <col:12>
|   |-BinaryOperator 0x55b71dc8b2e8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55b71dc8b2a0 <col:12> 'const char *' lvalue ->data 0x55b71dc76820
|   | | `-CXXThisExpr 0x55b71dc8b290 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55b71dc8b2d0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55b71dc8b260 <col:12> 'const char *const' lvalue .data 0x55b71dc76820
|   |     `-DeclRefExpr 0x55b71dc8b240 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b71dc8afb8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55b71dc8b3b0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55b71dc8b368 <col:12> 'int' lvalue ->length 0x55b71dc76888
|   | | `-CXXThisExpr 0x55b71dc8b358 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55b71dc8b398 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55b71dc8b328 <col:12> 'const int' lvalue .length 0x55b71dc76888
|   |     `-DeclRefExpr 0x55b71dc8b308 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b71dc8afb8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55b71dc8b478 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55b71dc8b430 <col:12> 'String::memo_t *' lvalue ->memo 0x55b71dc76918
|   | | `-CXXThisExpr 0x55b71dc8b420 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55b71dc8b460 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55b71dc8b3f0 <col:12> 'String::memo_t *const' lvalue .memo 0x55b71dc76918
|   |     `-DeclRefExpr 0x55b71dc8b3d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b71dc8afb8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55b71dc8b4c0 <col:12>
|     `-UnaryOperator 0x55b71dc8b4a8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b71dc8b498 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55b71dc8b028 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b71dc8b028
  `-ParmVarDecl 0x55b71dc8b138 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dc6c5a0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71dc6c6b8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55b71dc6c748 <col:16, col:22> col:16 public
|-TypedefDecl 0x55b71dc6c788 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55b71d92ffd0 'const char *'
|   `-QualType 0x55b71d92f521 'const char' const
|     `-BuiltinType 0x55b71d92f520 'char'
|-TypedefDecl 0x55b71dc6c810 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55b71dc6c7e0 'String::const_iterator' sugar
|   |-Typedef 0x55b71dc6c788 'const_iterator'
|   `-PointerType 0x55b71d92ffd0 'const char *'
|     `-QualType 0x55b71d92f521 'const char' const
|       `-BuiltinType 0x55b71d92f520 'char'
|-TypedefDecl 0x55b71dc6c980 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55b71dc6c8f0 'int (String::*)() const'
|   |-RecordType 0x55b71dc6c630 'String'
|   | `-CXXRecord 0x55b71dc6c5a0 'String'
|   `-ParenType 0x55b71dc6c890 'int () const' sugar
|     `-FunctionProtoType 0x55b71dc4efc0 'int () const' const cdecl
|       `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71dc6c9e8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55b71da8d500 'int64_t' sugar
|   |-Typedef 0x55b71d998390 'int64_t'
|   `-TypedefType 0x55b71d971630 '__int64_t' sugar
|     |-Typedef 0x55b71d971208 '__int64_t'
|     `-BuiltinType 0x55b71d92f5a0 'long'
|-TypedefDecl 0x55b71dc6ca50 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55b71da8d420 'uint64_t' sugar
|   |-Typedef 0x55b71d998530 'uint64_t'
|   `-TypedefType 0x55b71d9716c0 '__uint64_t' sugar
|     |-Typedef 0x55b71d971278 '__uint64_t'
|     `-BuiltinType 0x55b71d92f640 'unsigned long'
|-TypedefDecl 0x55b71dc6cae0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55b71dc6cab0 'String::intmax_t' sugar
|   |-Typedef 0x55b71dc6c9e8 'intmax_t'
|   `-TypedefType 0x55b71da8d500 'int64_t' sugar
|     |-Typedef 0x55b71d998390 'int64_t'
|     `-TypedefType 0x55b71d971630 '__int64_t' sugar
|       |-Typedef 0x55b71d971208 '__int64_t'
|       `-BuiltinType 0x55b71d92f5a0 'long'
|-TypedefDecl 0x55b71dc6cb70 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55b71dc6cb40 'String::uintmax_t' sugar
|   |-Typedef 0x55b71dc6ca50 'uintmax_t'
|   `-TypedefType 0x55b71da8d420 'uint64_t' sugar
|     |-Typedef 0x55b71d998530 'uint64_t'
|     `-TypedefType 0x55b71d9716c0 '__uint64_t' sugar
|       |-Typedef 0x55b71d971278 '__uint64_t'
|       `-BuiltinType 0x55b71d92f640 'unsigned long'
|-CXXConstructorDecl 0x55b71dc6cc30 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55b71dc6cdd8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55b71dc6cd18 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55b71dc6cf88 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55b71dc6cec8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55b71dc6d0e0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55b71dc6d050 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55b71dc6d2f8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55b71dc6d1a8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55b71dc6d228 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55b71dc6d518 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55b71dc6d3c8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55b71dc6d448 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55b71dc6d738 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55b71dc6d5e8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55b71dc6d668 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55b71dc6d958 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55b71dc6d808 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55b71dc6d888 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55b71dc6dae8 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55b71dc6da20 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55b71dc6dc68 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55b71dc6dba8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55b71dc6ddf8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55b71dc6dd30 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55b71dc6df50 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55b71dc6dec0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55b71dc6e0d8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55b71dc6e018 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55b71dc6e230 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55b71dc6e1a0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55b71dc6e3b8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55b71dc6e2f8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55b71dc6e548 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55b71dc6e480 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55b71dc6e6d8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55b71dc6e610 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55b71dc6e868 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55b71dc6e7a0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55b71dc6e960 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55b71dc6ea88 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55b71dc6ec08 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55b71dc6eb40 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55b71dc6ed58 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55b71dc6ecc8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55b71dc6ee00 <col:63> "" ""
|-CXXMethodDecl 0x55b71dc6ef48 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55b71dc6ee88 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55b71dc6f158 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55b71dc6f008 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55b71dc6f088 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55b71dc6f378 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55b71dc6f220 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55b71dc6f2a0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55b71dc6f658 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55b71dc6f438 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55b71dc6f4b8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55b71dc7abd0 <col:55> 'int' 10
| `-ParmVarDecl 0x55b71dc6f530 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b71dc7abf0 <col:76> 'bool' true
|-CXXMethodDecl 0x55b71dc6f938 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55b71dc6f720 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55b71dc6f7a0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55b71dc7ac00 <col:56> 'int' 10
| `-ParmVarDecl 0x55b71dc6f818 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b71dc7ac20 <col:77> 'bool' true
|-CXXMethodDecl 0x55b71dc6fa40 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55b71dc6fb08 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55b71dc6fbd0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55b71dc6fc70 <col:20>
| `-OptimizeNoneAttr 0x55b71dc6fcc8 <col:30>
|-CXXConversionDecl 0x55b71dc6fdb8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55b71dc6fe88 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55b71dc6ff48 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55b71dc70038 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55b71dc700f8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55b71dc70278 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55b71dc701b0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55b71dc703c8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55b71dc70338 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55b71dc704b8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55b71dc70578 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55b71dc707c8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55b71dc70630 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55b71dc706b0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55b71dc70a28 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55b71dc70890 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55b71dc70910 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55b71dc70af8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55b71dc70d08 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55b71dc70bb0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55b71dc70c30 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55b71dc70f28 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55b71dc70dd0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55b71dc70e50 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55b71dc710b8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55b71dc70ff0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55b71dc711a8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55b71dc71318 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55b71dc71258 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55b71dc71528 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55b71dc713d8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55b71dc71458 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55b71dc71740 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55b71dc715e8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55b71dc71660 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55b71dc718d0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55b71dc71800 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55b71dc71af0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55b71dc71990 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55b71dc71a10 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55b71dc71c40 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55b71dc71bb0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55b71dc71e18 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55b71dc71d00 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55b71dc71d80 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55b71dc71f68 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55b71dc71ed8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55b71dc731b0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55b71dc72020 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55b71dc730d0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55b71dc7ac30 <col:39> 'int' 0
|-CXXMethodDecl 0x55b71dc733d0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55b71dc73270 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55b71dc732f0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55b71dc7ac50 <col:48> 'int' 0
|-CXXMethodDecl 0x55b71dc735b0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55b71dc73490 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55b71dc73510 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55b71dc7ac70 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55b71dc73680 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55b71dc73740 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55b71dc73800 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55b71dc738c0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55b71dc73980 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55b71dc73b28 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55b71dc73a30 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55b71dc73ca8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55b71dc73be0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55b71dc73e28 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55b71dc73d68 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55b71dc73fa8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55b71dc73ee0 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55b71dc740f0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55b71dc74060 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55b71dc74240 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55b71dc741b0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55b71dc74418 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55b71dc74300 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55b71dc74380 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55b71dc745f8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55b71dc744e0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55b71dc74560 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55b71dc74748 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55b71dc746b8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55b71dc74958 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55b71dc74808 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55b71dc74888 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55b71dc74ab8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55b71dc74a20 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55b71dc74c10 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55b71dc74b78 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55b71dc74cb8 <col:57> "" ""
|-CXXMethodDecl 0x55b71dc74dc8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55b71dc74d38 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55b71dc74f18 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55b71dc74e88 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55b71dc75098 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55b71dc74fd0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55b71dc75160 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55b71dc75220 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55b71dc752e0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55b71dc75380 <col:49> "" ""
|-CXXMethodDecl 0x55b71dc75410 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55b71dc754d0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55b71dc755c0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55b71dc75688 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55b71dc75748 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55b71dc75808 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55b71dc75900 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55b71dc759c8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55b71dc75a90 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55b71dc75c68 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55b71dc75b48 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55b71dc75bc8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55b71dc75e90 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55b71dc75d30 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55b71dc75db0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55b71dc75fa0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55b71dc76008 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55b71dc76030 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b71dc76148 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55b71dc761e8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55b71dc76248 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55b71dc762a8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55b71dc76358 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55b71dc763c0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55b71dc765f8 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55b71dc76648 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71dc765d8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55b71dc764e8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55b71dc76490 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55b71dc764d0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55b71dc764b0 <col:32> 'int' 8
|-CXXRecordDecl 0x55b71dc76660 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b71dc76778 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55b71dc76820 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55b71dc76888 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55b71dc76918 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55b71dc7b100 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55b71dc7b538 <col:12>
| |-CXXConstructorDecl 0x55b71dc7b208 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b71dc7b318 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55b71dc76820 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55b71dc7e980 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55b71dc7e950 <col:12> 'const char *const' lvalue .data 0x55b71dc76820
| | |     `-DeclRefExpr 0x55b71dc7e930 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b71dc7b318 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55b71dc76888 'length' 'int'
| | | `-ImplicitCastExpr 0x55b71dc7ea10 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55b71dc7e9e0 <col:12> 'const int' lvalue .length 0x55b71dc76888
| | |     `-DeclRefExpr 0x55b71dc7e9c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b71dc7b318 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55b71dc76918 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55b71dc7eaa0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55b71dc7ea70 <col:12> 'String::memo_t *const' lvalue .memo 0x55b71dc76918
| | |     `-DeclRefExpr 0x55b71dc7ea50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b71dc7b318 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55b71dc7eaf8 <col:12>
| |-CXXConstructorDecl 0x55b71dc7b3b8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b71dc7b3b8
| | `-ParmVarDecl 0x55b71dc7b4c8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55b71dc81820 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55b71dc8aea8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b71dc8afb8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55b71dc8b4d0 <col:12>
| |   |-BinaryOperator 0x55b71dc8b2e8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55b71dc8b2a0 <col:12> 'const char *' lvalue ->data 0x55b71dc76820
| |   | | `-CXXThisExpr 0x55b71dc8b290 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55b71dc8b2d0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55b71dc8b260 <col:12> 'const char *const' lvalue .data 0x55b71dc76820
| |   |     `-DeclRefExpr 0x55b71dc8b240 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b71dc8afb8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55b71dc8b3b0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55b71dc8b368 <col:12> 'int' lvalue ->length 0x55b71dc76888
| |   | | `-CXXThisExpr 0x55b71dc8b358 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55b71dc8b398 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55b71dc8b328 <col:12> 'const int' lvalue .length 0x55b71dc76888
| |   |     `-DeclRefExpr 0x55b71dc8b308 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b71dc8afb8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55b71dc8b478 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55b71dc8b430 <col:12> 'String::memo_t *' lvalue ->memo 0x55b71dc76918
| |   | | `-CXXThisExpr 0x55b71dc8b420 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55b71dc8b460 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55b71dc8b3f0 <col:12> 'String::memo_t *const' lvalue .memo 0x55b71dc76918
| |   |     `-DeclRefExpr 0x55b71dc8b3d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b71dc8afb8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55b71dc8b4c0 <col:12>
| |     `-UnaryOperator 0x55b71dc8b4a8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55b71dc8b498 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55b71dc8b028 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b71dc8b028
|   `-ParmVarDecl 0x55b71dc8b138 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55b71dc76990 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55b71dc76bd8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55b71dc769f8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55b71dc76a78 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55b71dc76af0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55b71dc7b0c0 <col:79, line:261:5>
|   |-BinaryOperator 0x55b71dc7ad38 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55b71dc7acd0 <col:2, col:5> 'const char *' lvalue .data 0x55b71dc76820
|   | | `-MemberExpr 0x55b71dc7aca0 <col:2> 'String::rep_t' lvalue ->_r 0x55b71dc76990
|   | |   `-CXXThisExpr 0x55b71dc7ac90 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55b71dc7ad20 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b71dc7ad00 <col:12> 'const char *' lvalue ParmVar 0x55b71dc769f8 'data' 'const char *'
|   |-BinaryOperator 0x55b71dc7ae00 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55b71dc7ad98 <col:2, col:5> 'int' lvalue .length 0x55b71dc76888
|   | | `-MemberExpr 0x55b71dc7ad68 <col:2> 'String::rep_t' lvalue ->_r 0x55b71dc76990
|   | |   `-CXXThisExpr 0x55b71dc7ad58 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55b71dc7ade8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b71dc7adc8 <col:14> 'int' lvalue ParmVar 0x55b71dc76a78 'length' 'int'
|   `-IfStmt 0x55b71dc7b0a8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55b71dc7af20 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55b71dc7af08 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55b71dc7aee8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55b71dc7aec8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55b71dc7ae60 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55b71dc76918
|     |       | `-MemberExpr 0x55b71dc7ae30 <col:7> 'String::rep_t' lvalue ->_r 0x55b71dc76990
|     |       |   `-CXXThisExpr 0x55b71dc7ae20 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55b71dc7aeb0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55b71dc7ae90 <col:17> 'String::memo_t *' lvalue ParmVar 0x55b71dc76af0 'memo' 'String::memo_t *'
|     `-CallExpr 0x55b71dc7b080 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55b71dc7b068 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b71dc7af70 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55b71dbfa8f8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55b71dc7afd8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55b71dc761e8
|         `-ImplicitCastExpr 0x55b71dc7afc0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55b71dc7afa0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55b71dc76af0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55b71dc76e88 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55b71dc76ca8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55b71dc76d28 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55b71dc76da0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55b71dc76990 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55b71dc7b548 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b71dc7b6d8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55b71dc7b640 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55b71dc7b5b0 <col:2> '<bound member function type>' ->assign_memo 0x55b71dc76bd8
|     | `-ImplicitCastExpr 0x55b71dc7b678 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55b71dc7b5a0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55b71dc7b690 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b71dc7b5e0 <col:14> 'const char *' lvalue ParmVar 0x55b71dc76ca8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55b71dc7b6a8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55b71dc7b600 <col:20> 'int' lvalue ParmVar 0x55b71dc76d28 'length' 'int'
|     `-ImplicitCastExpr 0x55b71dc7b6c0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55b71dc7b620 <col:28> 'String::memo_t *' lvalue ParmVar 0x55b71dc76da0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55b71dc77018 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55b71dc76f58 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55b71dc7b930 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55b71dc7b8b0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55b71dc7b700 <col:2> '<bound member function type>' ->assign_memo 0x55b71dc76bd8
|     | `-CXXThisExpr 0x55b71dc7b6f0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55b71dc7b8e8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55b71dc7b780 <col:14, col:19> 'const char *' lvalue .data 0x55b71dc76820
|     |   `-MemberExpr 0x55b71dc7b750 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55b71dc76990
|     |     `-DeclRefExpr 0x55b71dc7b730 <col:14> 'const String' lvalue ParmVar 0x55b71dc76f58 'x' 'const String &'
|     |-ImplicitCastExpr 0x55b71dc7b900 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55b71dc7b800 <col:25, col:30> 'int' lvalue .length 0x55b71dc76888
|     |   `-MemberExpr 0x55b71dc7b7d0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55b71dc76990
|     |     `-DeclRefExpr 0x55b71dc7b7b0 <col:25> 'const String' lvalue ParmVar 0x55b71dc76f58 'x' 'const String &'
|     `-ImplicitCastExpr 0x55b71dc7b918 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55b71dc7b880 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55b71dc76918
|         `-MemberExpr 0x55b71dc7b850 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55b71dc76990
|           `-DeclRefExpr 0x55b71dc7b830 <col:38> 'const String' lvalue ParmVar 0x55b71dc76f58 'x' 'const String &'
|-CXXMethodDecl 0x55b71dc79330 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55b71dc7c2f0 <col:31, line:278:5>
|   `-IfStmt 0x55b71dc7c2d8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55b71dc7b9d0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55b71dc7b9b8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55b71dc7b988 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55b71dc76918
|     |     `-MemberExpr 0x55b71dc7b958 <col:6> 'String::rep_t' lvalue ->_r 0x55b71dc76990
|     |       `-CXXThisExpr 0x55b71dc7b948 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55b71dc7c2b0 <col:15, line:277:2>
|       |-ParenExpr 0x55b71dc7be80 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55b71dc7be50 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55b71dc7bae0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55b71dc7bac8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55b71dc7bab0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55b71dc7ba70 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55b71dc761e8
|       |   |       `-ImplicitCastExpr 0x55b71dc7ba58 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55b71dc7ba28 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55b71dc76918
|       |   |           `-MemberExpr 0x55b71dc7b9f8 <col:27> 'String::rep_t' lvalue ->_r 0x55b71dc76990
|       |   |             `-CXXThisExpr 0x55b71dc7b9e8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55b71dc7bb40 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55b71dc7bb20 <col:54> 'int' 0
|       |   `-CallExpr 0x55b71dc7bdb0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55b71dc7bd98 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55b71dc7bd18 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55b71dc7bdf0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55b71dc7bc28 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55b71dc7be08 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55b71dc7bc58 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55b71dc7be20 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55b71dc7bc90 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55b71dc7be38 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55b71dc7bd00 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55b71dc7bce8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55b71dc7bcb0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55b71dc7c1d0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55b71dc7c090 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55b71dc7c078 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55b71dc7bff0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55b71dbfd0e0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55b71dc7bfc0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55b71dc761e8
|       | |   `-ImplicitCastExpr 0x55b71dc7bfa8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55b71dc7bf78 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55b71dc76918
|       | |       `-MemberExpr 0x55b71dc7bf48 <col:40> 'String::rep_t' lvalue ->_r 0x55b71dc76990
|       | |         `-CXXThisExpr 0x55b71dc7bf38 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55b71dc7c190 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55b71dc7c178 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55b71dc7c0b8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55b71dc7a008 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55b71dc7c1b8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55b71dc7c118 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55b71dc76918
|       |       `-MemberExpr 0x55b71dc7c0e8 <col:15> 'String::rep_t' lvalue ->_r 0x55b71dc76990
|       |         `-CXXThisExpr 0x55b71dc7c0d8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55b71dc7c290 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55b71dc7c228 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55b71dc76918
|         | `-MemberExpr 0x55b71dc7c1f8 <col:6> 'String::rep_t' lvalue ->_r 0x55b71dc76990
|         |   `-CXXThisExpr 0x55b71dc7c1e8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55b71dc7c278 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55b71dc7c258 <col:16> 'int' 0
|-CXXMethodDecl 0x55b71dc795c8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55b71dc793e8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55b71dc79468 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55b71dc794e0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55b71dc796a0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55b71dc798f0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55b71dc79758 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55b71dc797d8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55b71dc79850 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55b71dc79ad8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55b71dc799c0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55b71dc79a40 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55b71dc79bd8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55b71dc7c3c8 <col:41, line:286:5>
|   `-ReturnStmt 0x55b71dc7c3b8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55b71dc7c388 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55b71dc7c350 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55b71dc7c338 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55b71dc7c318 <col:46> 'int' 1
|-CXXMethodDecl 0x55b71dc79e78 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55b71dc79c90 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55b71dc79d10 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55b71dc79d90 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55b71dc7a008 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55b71dc79f40 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55b71dc7a0d8 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55b71dc7a2a8 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55b71dc7a190 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55b71dc7a210 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55b71dc7a368 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55b71dc7a430 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55b71dc7a538 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55b71dc7a5b0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55b71dc7a628 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55b71dc7a690 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55b71dc7a790 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55b71dc7a7e0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71dc7a770 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55b71dc7a750 <col:22> 'int' 14
|-CXXMethodDecl 0x55b71dc7a9f8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55b71dc7a810 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55b71dc7a890 <col:38> col:41 'int'
| `-ParmVarDecl 0x55b71dc7a910 <col:43> col:46 'int'
|-FriendDecl 0x55b71dc7ab00 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55b71dc7ab90 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e05d550 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55b71e05d728 prev 0x55b71e05d550 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55b71e05d7b8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55b71e05d7e0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e05f140 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55b71e05f0f0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55b71e05f0d0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55b71e05d9f8 'type'
|     `-SubstTemplateTypeParmType 0x55b71e05d9c0 'String' sugar
|       |-TemplateTypeParmType 0x55b71dc3c9f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc3c9a0 'T'
|       `-RecordType 0x55b71dc6c630 'String'
|         `-CXXRecord 0x55b71dc6c5a0 'String'
|-TypedefDecl 0x55b71e05f1f8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55b71e05f1c0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55b71e05f1a0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55b71e05f140 'type'
|     `-ElaboratedType 0x55b71e05f0f0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55b71e05f0d0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55b71e05d9f8 'type'
|         `-SubstTemplateTypeParmType 0x55b71e05d9c0 'String' sugar
|           |-TemplateTypeParmType 0x55b71dc3c9f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b71dc3c9a0 'T'
|           `-RecordType 0x55b71dc6c630 'String'
|             `-CXXRecord 0x55b71dc6c5a0 'String'
|-CXXMethodDecl 0x55b71e05f378 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55b71e05f288 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55b71e05f468 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55b71e05f548 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55b71e05f548
|-CXXMethodDecl 0x55b71e05f818 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55b71e05f720 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55b71e05fa58 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55b71e05f8d0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e05f948 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b71e05fc28 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55b71e05fb18 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e05fb90 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b71e05fd88 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55b71e05fe58 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55b71e0600a8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55b71e05ff18 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55b71e05ff90 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b71e060308 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55b71e060178 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55b71e0601f0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b71e0604c8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55b71e0603d8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b71e060688 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55b71e060590 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b71e060740 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e0607f0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e060a28 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55b71e0608a0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e060918 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55b71e060cc8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55b71e060bd0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55b71e060d90 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55b71e060de0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55b71e060e30 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71dea71c0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55b71e05c1f8 prev 0x55b71dea71c0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b71e05d4c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55b71e05d470 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55b71e05d450 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55b71e05d300 'type'
|     `-SubstTemplateTypeParmType 0x55b71e05d190 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55b71dc167f0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55b71dc16798 'F'
|       `-RecordType 0x55b71e05cdf0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55b71e05cd10 'typed_array_memory'
|-FieldDecl 0x55b71e060e80 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55b71e060ed0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b71e060f08 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55b71e05c290 'String' sugar
|   |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dc4c168 'T'
|   `-RecordType 0x55b71dc6c630 'String'
|     `-CXXRecord 0x55b71dc6c5a0 'String'
|-TypedefDecl 0x55b71e060f98 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55b71e060f60 'String &'
|   `-SubstTemplateTypeParmType 0x55b71e05c290 'String' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71dc6c630 'String'
|       `-CXXRecord 0x55b71dc6c5a0 'String'
|-TypedefDecl 0x55b71e061028 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55b71e060ff0 'const String &'
|   `-QualType 0x55b71e05c291 'const String' const
|     `-SubstTemplateTypeParmType 0x55b71e05c290 'String' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71dc6c630 'String'
|         `-CXXRecord 0x55b71dc6c5a0 'String'
|-TypedefDecl 0x55b71e0610b8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55b71e061080 'String *'
|   `-SubstTemplateTypeParmType 0x55b71e05c290 'String' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71dc6c630 'String'
|       `-CXXRecord 0x55b71dc6c5a0 'String'
|-TypedefDecl 0x55b71e061148 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55b71e061110 'const String *'
|   `-QualType 0x55b71e05c291 'const String' const
|     `-SubstTemplateTypeParmType 0x55b71e05c290 'String' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71dc6c630 'String'
|         `-CXXRecord 0x55b71dc6c5a0 'String'
|-TypedefDecl 0x55b71e061da0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55b71e061d50 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55b71e061d30 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55b71e061c68 'type'
|     `-LValueReferenceType 0x55b71e061c30 'const String &'
|       `-QualType 0x55b71e0619d1 'const String' const
|         `-SubstTemplateTypeParmType 0x55b71e0619d0 'String' sugar
|           |-TemplateTypeParmType 0x55b71dc1dad0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b71dc1da78 'T'
|           `-RecordType 0x55b71dc6c630 'String'
|             `-CXXRecord 0x55b71dc6c5a0 'String'
|-TypedefDecl 0x55b71e061e08 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55b71e060ff0 'const String &'
|   `-QualType 0x55b71e05c291 'const String' const
|     `-SubstTemplateTypeParmType 0x55b71e05c290 'String' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71dc6c630 'String'
|         `-CXXRecord 0x55b71dc6c5a0 'String'
|-TypedefDecl 0x55b71e061e60 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e061ec8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55b71e061080 'String *'
|   `-SubstTemplateTypeParmType 0x55b71e05c290 'String' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71dc6c630 'String'
|       `-CXXRecord 0x55b71dc6c5a0 'String'
|-TypedefDecl 0x55b71e061f30 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55b71e061110 'const String *'
|   `-QualType 0x55b71e05c291 'const String' const
|     `-SubstTemplateTypeParmType 0x55b71e05c290 'String' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71dc6c630 'String'
|         `-CXXRecord 0x55b71dc6c5a0 'String'
|-EnumDecl 0x55b71e061f88 <line:134:5> col:5
| `-EnumConstantDecl 0x55b71e062080 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b71e062060 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b71dc4d388 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b71dc4d360 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b71dc4d340 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b71e062108 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b71e062398 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e0621c0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e062260 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55b71e062628 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55b71e062510 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55b71e0628e8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55b71e0627d0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55b71e062c00 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55b71e062ae0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55b71e062f10 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55b71e062df0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55b71e063210 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e063048 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e0630c0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55b71e063338 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55b71e0633e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e063440 <col:30> Inherited
|-CXXMethodDecl 0x55b71e063488 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55b71e063538 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e063590 <col:30> Inherited
|-CXXMethodDecl 0x55b71e063658 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55b71e063708 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e063760 <col:30> Inherited
|-CXXMethodDecl 0x55b71e0637a8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55b71e063858 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e0638b0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e0638f8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55b71e0639a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e063a00 <col:30> Inherited
|-CXXMethodDecl 0x55b71e063a48 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55b71e063af8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e063b50 <col:30> Inherited
|-CXXMethodDecl 0x55b71e063b78 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e063c28 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e063cd8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b71e063e98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e063d88 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e063e00 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55b71e063fe8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e063f58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e064198 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55b71e0640a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e064250 <col:20>
| `-OptimizeNoneAttr 0x55b71e0642a8 <col:30>
|-CXXMethodDecl 0x55b71e0643c8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55b71e0642d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e064480 <col:20>
| `-OptimizeNoneAttr 0x55b71e0644d8 <col:30>
|-CXXMethodDecl 0x55b71e064590 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e064500 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e0646d8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e064648 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e064808 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55b71e064908 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55b71e0649d8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55b71e064aa8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55b71e064be8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e064b58 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e064d30 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e064ca0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e064e78 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b71e064de8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e064f30 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b71e065030 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b71e064fa0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e0650e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b71e0651a8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55b71e0652a8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55b71e065428 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e065368 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55b71e065bb8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b71e0654e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55b71e065b18 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55b71e065a18 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55b71e065c98 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e065de8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e065d58 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55b71e065ea0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b71e0660e8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e065f60 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55b71e065fd8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55b71e066278 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55b71e0661b8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55b71e066488 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55b71e066340 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55b71e0663b8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55b71e066548 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55b71e0667a8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55b71e0666b0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55b71e066878 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b71e066878

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e0aafd0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55b71e0ab1a8 prev 0x55b71e0aafd0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55b71e0ab238 <col:46, col:52> col:46 public
|-TypedefDecl 0x55b71e0ab260 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e0ace30 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55b71e0acde0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55b71e0ab710 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55b71e0ab610 'type'
|     `-TemplateSpecializationType 0x55b71e0ab5a0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55b71e0ab480 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55b71e0ab460 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55b71e0ab440 <col:24> 'unsigned long' 4
|       `-RecordType 0x55b71e0ab580 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55b71e0ab4a0 'char_array'
|-TypedefDecl 0x55b71e0acee8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55b71e0aceb0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55b71e0ace90 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55b71e0ace30 'type'
|     `-ElaboratedType 0x55b71e0acde0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55b71e0ab710 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55b71e0ab610 'type'
|         `-TemplateSpecializationType 0x55b71e0ab5a0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55b71e0ab480 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55b71e0ab460 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55b71e0ab440 <col:24> 'unsigned long' 4
|           `-RecordType 0x55b71e0ab580 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55b71e0ab4a0 'char_array'
|-CXXMethodDecl 0x55b71e0ad068 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55b71e0acf78 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55b71e0ad158 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55b71e0ad238 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55b71e0ad238
|-CXXMethodDecl 0x55b71e0ad508 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55b71e0ad410 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55b71e0ad748 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55b71e0ad5c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e0ad638 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55b71e0ad918 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55b71e0ad808 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e0ad880 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55b71e0ada78 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55b71e0adb48 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55b71e0add98 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55b71e0adc08 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55b71e0adc80 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55b71e0adff8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55b71e0ade68 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55b71e0adee0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55b71e0ae1b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55b71e0ae0c8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55b71e0ae378 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55b71e0ae280 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55b71e0ae430 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e0ae4e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e0ae718 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55b71e0ae590 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e0ae608 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55b71e0ae9b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55b71e0ae8c0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55b71e0aea80 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55b71e0aead0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55b71e0aeb20 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e1af7f0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55b71e1af9f8 prev 0x55b71e1af7f0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b71e1b0a10 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55b71e1b09c0 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x55b71e1b09a0 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x55b71e1b0850 'type'
|     `-SubstTemplateTypeParmType 0x55b71e0aaba0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55b71dc16000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc15fa8 'T'
|       `-RecordType 0x55b71e0aa6f0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55b71e0aa608 'sized_array_memory'
|-FieldDecl 0x55b71e1b0b10 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55b71e1b0b60 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b71e1b0b98 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55b71e1afa90 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dc4c168 'T'
|   `-BuiltinType 0x55b71d92f620 'unsigned int'
|-TypedefDecl 0x55b71e1b0c28 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x55b71e1b0bf0 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x55b71e1afa90 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-BuiltinType 0x55b71d92f620 'unsigned int'
|-TypedefDecl 0x55b71e1b0cb8 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x55b71e1b0c80 'const unsigned int &'
|   `-QualType 0x55b71e1afa91 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55b71e1afa90 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-BuiltinType 0x55b71d92f620 'unsigned int'
|-TypedefDecl 0x55b71e1b0d48 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x55b71e1b0d10 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55b71e1afa90 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-BuiltinType 0x55b71d92f620 'unsigned int'
|-TypedefDecl 0x55b71e1b0dd8 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x55b71e1b0da0 'const unsigned int *'
|   `-QualType 0x55b71e1afa91 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55b71e1afa90 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-BuiltinType 0x55b71d92f620 'unsigned int'
|-TypedefDecl 0x55b71e1b19c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x55b71e1b1970 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x55b71e1b1950 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x55b71e1b18e0 'type'
|     `-SubstTemplateTypeParmType 0x55b71e1b16a0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55b71dc1e200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc1e1b0 'T'
|       `-BuiltinType 0x55b71d92f620 'unsigned int'
|-TypedefDecl 0x55b71e1b1a28 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x55b71e1b0c80 'const unsigned int &'
|   `-QualType 0x55b71e1afa91 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55b71e1afa90 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-BuiltinType 0x55b71d92f620 'unsigned int'
|-TypedefDecl 0x55b71e1b1a80 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e1b1ae8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x55b71e1b0d10 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55b71e1afa90 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-BuiltinType 0x55b71d92f620 'unsigned int'
|-TypedefDecl 0x55b71e1b1b50 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x55b71e1b0da0 'const unsigned int *'
|   `-QualType 0x55b71e1afa91 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55b71e1afa90 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-BuiltinType 0x55b71d92f620 'unsigned int'
|-EnumDecl 0x55b71e1b1ba8 <line:134:5> col:5
| `-EnumConstantDecl 0x55b71e1b1ca0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b71e1b1c80 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b71dc4d388 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b71dc4d360 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b71dc4d340 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b71e1b1d28 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b71e1b1f78 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1b1de0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1b1e80 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x55b71e1b2238 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55b71e1b2120 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x55b71e1b24f8 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55b71e1b23e0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55b71e1b2840 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55b71e1b2720 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x55b71e1bac20 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55b71e1bab00 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55b71e1baf10 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1bad58 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1badd0 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55b71e1bb038 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55b71e1bb118 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1bb170 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1bb1b8 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55b71e1bb268 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1bb2c0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1bb358 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1bb408 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1bb460 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1bb4a8 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1bb558 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1bb5b0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1bb5f8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1bb6a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1bb700 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1bb748 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1bb7f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1bb850 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1bb878 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e1bb928 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e1bb9d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b71e1bbb98 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1bba88 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1bbb00 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55b71e1bbce8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1bbc58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1bbe98 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x55b71e1bbda0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e1bbf50 <col:20>
| `-OptimizeNoneAttr 0x55b71e1bbfa8 <col:30>
|-CXXMethodDecl 0x55b71e1bc0c8 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x55b71e1bbfd0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e1bc180 <col:20>
| `-OptimizeNoneAttr 0x55b71e1bc1d8 <col:30>
|-CXXMethodDecl 0x55b71e1bc290 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1bc200 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1bc3d8 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e1bc348 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1bc508 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x55b71e1bc638 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55b71e1bc708 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x55b71e1bc7d8 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55b71e1bc918 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1bc888 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1bca60 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e1bc9d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1bcba8 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b71e1bcb18 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e1bcc60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b71e1bcd60 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b71e1bccd0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e1bce18 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b71e1bced8 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x55b71e1bcfd8 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x55b71e1bd158 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e1bd098 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x55b71e1bd918 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b71e1bd210 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x55b71e1bd878 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x55b71e1bd778 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x55b71e1bd9f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e1bdb48 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e1bdab8 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55b71e1bdc00 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b71e1bde48 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1bdcc0 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55b71e1bdd38 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55b71e1be008 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x55b71e1bdf18 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55b71e1be258 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x55b71e1be0d0 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55b71e1be148 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55b71e1be318 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e1be578 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55b71e1be480 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x55b71e1be648 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b71e1be648

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e0a9bf0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55b71e0a9df8 prev 0x55b71e0a9bf0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b71e0aaf40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55b71e0aaef0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55b71e0aaed0 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55b71e0aad80 'type'
|     `-SubstTemplateTypeParmType 0x55b71e0aaba0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55b71dc16000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc15fa8 'T'
|       `-RecordType 0x55b71e0aa6f0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55b71e0aa608 'sized_array_memory'
|-FieldDecl 0x55b71e0aeb70 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55b71e0aebc0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b71e0aebf8 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55b71e0a9e90 'int' sugar
|   |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dc4c168 'T'
|   `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e0aec88 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55b71e0aec50 'int &'
|   `-SubstTemplateTypeParmType 0x55b71e0a9e90 'int' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e0aed18 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55b71e0aece0 'const int &'
|   `-QualType 0x55b71e0a9e91 'const int' const
|     `-SubstTemplateTypeParmType 0x55b71e0a9e90 'int' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e0aeda8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55b71e0aed70 'int *'
|   `-SubstTemplateTypeParmType 0x55b71e0a9e90 'int' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e0aee38 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55b71e0aee00 'const int *'
|   `-QualType 0x55b71e0a9e91 'const int' const
|     `-SubstTemplateTypeParmType 0x55b71e0a9e90 'int' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e0afa20 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55b71e0af9d0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55b71e0af9b0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55b71e0af940 'type'
|     `-SubstTemplateTypeParmType 0x55b71e0af700 'int' sugar
|       |-TemplateTypeParmType 0x55b71dc1e200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc1e1b0 'T'
|       `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e0afa88 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55b71e0aece0 'const int &'
|   `-QualType 0x55b71e0a9e91 'const int' const
|     `-SubstTemplateTypeParmType 0x55b71e0a9e90 'int' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e0afae0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e0afb48 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55b71e0aed70 'int *'
|   `-SubstTemplateTypeParmType 0x55b71e0a9e90 'int' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e0afbb0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55b71e0aee00 'const int *'
|   `-QualType 0x55b71e0a9e91 'const int' const
|     `-SubstTemplateTypeParmType 0x55b71e0a9e90 'int' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-BuiltinType 0x55b71d92f580 'int'
|-EnumDecl 0x55b71e0afc08 <line:134:5> col:5
| `-EnumConstantDecl 0x55b71e0afd00 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b71e0afce0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b71dc4d388 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b71dc4d360 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b71dc4d340 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b71e0afd88 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b71e0affd8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e0afe40 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e0afee0 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55b71e0b0298 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55b71e0b0180 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55b71e0b0558 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55b71e0b0440 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55b71e0b08a0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55b71e0b0780 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55b71e0b0bb0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55b71e0b0a90 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55b71e0b0ea0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e0b0ce8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e0b0d60 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55b71e0b0fc8 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55b71e0b10a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e0b1100 <col:30> Inherited
|-CXXMethodDecl 0x55b71e0b1148 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55b71e0b11f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e0b1250 <col:30> Inherited
|-CXXMethodDecl 0x55b71e0b1318 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55b71e0b13c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e0b1420 <col:30> Inherited
|-CXXMethodDecl 0x55b71e0b1468 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55b71e0b1518 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e0b1570 <col:30> Inherited
|-CXXMethodDecl 0x55b71e0b15b8 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55b71e0b1668 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e0b16c0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e0b1708 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55b71e0b17b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e0b1810 <col:30> Inherited
|-CXXMethodDecl 0x55b71e0b1838 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e0b18e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e0b1998 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b71e0b3190 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e0b1a48 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e0b1ac0 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55b71e0b32e0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e0b3250 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e0b3488 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55b71e0b3398 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e0b3540 <col:20>
| `-OptimizeNoneAttr 0x55b71e0b3598 <col:30>
|-CXXMethodDecl 0x55b71e0b36b8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55b71e0b35c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e0b3770 <col:20>
| `-OptimizeNoneAttr 0x55b71e0b37c8 <col:30>
|-CXXMethodDecl 0x55b71e0b3880 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e0b37f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e0b39c8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e0b3938 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e0b3af8 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55b71e0b3c28 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55b71e0b3cf8 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55b71e0b3dc8 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x55b71e0b3f08 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e0b3e78 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e0b4050 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e0b3fc0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e0b4198 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b71e0b4108 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e0b4250 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b71e0b4350 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b71e0b42c0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e0b4408 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b71e0b44c8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55b71e0b45c8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55b71e0b4748 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e0b4688 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55b71e0b4f08 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b71e0b4800 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55b71e0b4e68 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55b71e0b4d68 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55b71e0b4fe8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e0b5138 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e0b50a8 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55b71e0b51f0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b71e0b5438 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e0b52b0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55b71e0b5328 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55b71e0b55f8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55b71e0b5508 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55b71e0b5848 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55b71e0b56c0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55b71e0b5738 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55b71e0b5908 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55b71e0b5b68 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55b71e0b5a70 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55b71e0b5c38 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b71e0b5c38

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e1be890 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55b71e1be9a8 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x55b71e1bea48 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55b71e1beaa8 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x55b71e1beb40 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55b71e1beb40
| `-ParmVarDecl 0x55b71e1bec58 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55b71e1becf8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55b71e1becf8
| `-ParmVarDecl 0x55b71e1bee08 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55b71e1beea8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55b71e1beea8
| `-ParmVarDecl 0x55b71e1befb8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55b71e1bf028 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55b71e1bf028
| `-ParmVarDecl 0x55b71e1bf138 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x55b71e1bf1c0 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55b71e1bf1c0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e1c0750 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x55b71e1c0928 prev 0x55b71e1c0750 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55b71e1c09b8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55b71e1c09e0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e1c23a0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x55b71e1c2350 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55b71e1c2330 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x55b71e1c0bf8 'type'
|     `-SubstTemplateTypeParmType 0x55b71e1c0bc0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55b71dc3c9f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc3c9a0 'T'
|       `-RecordType 0x55b71e1be920 'Router::element_landmark_t'
|         `-CXXRecord 0x55b71e1be890 'element_landmark_t'
|-TypedefDecl 0x55b71e1c2458 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x55b71e1c2420 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x55b71e1c2400 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55b71e1c23a0 'type'
|     `-ElaboratedType 0x55b71e1c2350 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x55b71e1c2330 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x55b71e1c0bf8 'type'
|         `-SubstTemplateTypeParmType 0x55b71e1c0bc0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55b71dc3c9f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b71dc3c9a0 'T'
|           `-RecordType 0x55b71e1be920 'Router::element_landmark_t'
|             `-CXXRecord 0x55b71e1be890 'element_landmark_t'
|-CXXMethodDecl 0x55b71e1c25d8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x55b71e1c24e8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x55b71e1c26c8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55b71e1c27a8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55b71e1c27a8
|-CXXMethodDecl 0x55b71e1c2ab0 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55b71e1c2980 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x55b71e1c2cf8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55b71e1c2b68 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e1c2be0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55b71e1c2ec8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55b71e1c2db8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e1c2e30 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55b71e1c3028 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55b71e1c30f8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55b71e1c3348 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55b71e1c31b8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55b71e1c3230 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55b71e1c35a8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x55b71e1c3418 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55b71e1c3490 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55b71e1c3768 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55b71e1c3678 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55b71e1c3928 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55b71e1c3830 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55b71e1c39e0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e1c3a90 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e1c3cc8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55b71e1c3b40 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e1c3bb8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55b71e1c3f68 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55b71e1c3e70 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x55b71e1c4030 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x55b71e1c4080 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55b71e1c40d0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e1bf2b0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x55b71e1bf4b8 prev 0x55b71e1bf2b0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b71e1c06c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x55b71e1c0670 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55b71e1c0650 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55b71e1c0500 'type'
|     `-SubstTemplateTypeParmType 0x55b71e1c0390 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x55b71dc167f0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55b71dc16798 'F'
|       `-RecordType 0x55b71e1bfff0 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x55b71e1bff10 'typed_array_memory'
|-FieldDecl 0x55b71e1c4120 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x55b71e1c4170 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b71e1c41a8 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x55b71e1bf550 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dc4c168 'T'
|   `-RecordType 0x55b71e1be920 'Router::element_landmark_t'
|     `-CXXRecord 0x55b71e1be890 'element_landmark_t'
|-TypedefDecl 0x55b71e1c4238 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x55b71e1c4200 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x55b71e1bf550 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71e1be920 'Router::element_landmark_t'
|       `-CXXRecord 0x55b71e1be890 'element_landmark_t'
|-TypedefDecl 0x55b71e1c42c8 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55b71e1c4290 'const Router::element_landmark_t &'
|   `-QualType 0x55b71e1bf551 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55b71e1bf550 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e1be920 'Router::element_landmark_t'
|         `-CXXRecord 0x55b71e1be890 'element_landmark_t'
|-TypedefDecl 0x55b71e1c4358 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x55b71e1c4320 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55b71e1bf550 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71e1be920 'Router::element_landmark_t'
|       `-CXXRecord 0x55b71e1be890 'element_landmark_t'
|-TypedefDecl 0x55b71e1c43e8 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x55b71e1c43b0 'const Router::element_landmark_t *'
|   `-QualType 0x55b71e1bf551 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55b71e1bf550 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e1be920 'Router::element_landmark_t'
|         `-CXXRecord 0x55b71e1be890 'element_landmark_t'
|-TypedefDecl 0x55b71e1c5040 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x55b71e1c4ff0 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x55b71e1c4fd0 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x55b71e1c4f08 'type'
|     `-LValueReferenceType 0x55b71e1c4ed0 'const Router::element_landmark_t &'
|       `-QualType 0x55b71e1c4c71 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x55b71e1c4c70 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55b71dc1dad0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b71dc1da78 'T'
|           `-RecordType 0x55b71e1be920 'Router::element_landmark_t'
|             `-CXXRecord 0x55b71e1be890 'element_landmark_t'
|-TypedefDecl 0x55b71e1c50a8 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55b71e1c4290 'const Router::element_landmark_t &'
|   `-QualType 0x55b71e1bf551 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55b71e1bf550 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e1be920 'Router::element_landmark_t'
|         `-CXXRecord 0x55b71e1be890 'element_landmark_t'
|-TypedefDecl 0x55b71e1c5100 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e1c5168 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x55b71e1c4320 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55b71e1bf550 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71e1be920 'Router::element_landmark_t'
|       `-CXXRecord 0x55b71e1be890 'element_landmark_t'
|-TypedefDecl 0x55b71e1c51d0 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x55b71e1c43b0 'const Router::element_landmark_t *'
|   `-QualType 0x55b71e1bf551 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55b71e1bf550 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e1be920 'Router::element_landmark_t'
|         `-CXXRecord 0x55b71e1be890 'element_landmark_t'
|-EnumDecl 0x55b71e1c5228 <line:134:5> col:5
| `-EnumConstantDecl 0x55b71e1c5320 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b71e1c5300 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b71dc4d388 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b71dc4d360 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b71dc4d340 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b71e1c53a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b71e1c5638 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1c5460 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1c5500 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55b71e1c58f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55b71e1c57e0 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x55b71e1c5bb8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55b71e1c5aa0 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55b71e1c5f00 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55b71e1c5de0 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x55b71e1c6210 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55b71e1c60f0 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55b71e1c6500 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1c6348 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1c63c0 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55b71e1c6628 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55b71e1c6708 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1c6760 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1c67a8 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55b71e1c6858 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1c68b0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1c6978 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1c6a28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1c6a80 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1c6ac8 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1c6b78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1c6bd0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1c6c18 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1c6cc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1c6d20 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1c6d68 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1c6e18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1c6e70 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1c6e98 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e1c6f48 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e1c6ff8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b71e1c71b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1c70a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1c7120 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55b71e1c7308 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1c7278 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1c74b8 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x55b71e1c73c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e1c7570 <col:20>
| `-OptimizeNoneAttr 0x55b71e1c75c8 <col:30>
|-CXXMethodDecl 0x55b71e1c76e8 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x55b71e1c75f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e1c77a0 <col:20>
| `-OptimizeNoneAttr 0x55b71e1c77f8 <col:30>
|-CXXMethodDecl 0x55b71e1c78b0 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1c7820 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1c79f8 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e1c7968 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1c7b28 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55b71e1c7c58 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55b71e1c7d28 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55b71e1c7df8 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55b71e1c7f38 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1c7ea8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1c8080 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e1c7ff0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1c81c8 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b71e1c8138 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e1c8280 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b71e1c8380 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b71e1c82f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e1c8438 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b71e1c84f8 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x55b71e1c85f8 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x55b71e1c8778 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e1c86b8 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x55b71e1c8f08 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b71e1c8830 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x55b71e1c8e68 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x55b71e1c8d68 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55b71e1c8fe8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e1c9138 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e1c90a8 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55b71e1c91f0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b71e1c9438 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1c92b0 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55b71e1c9328 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55b71e1c95c8 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x55b71e1c9508 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55b71e1c97d8 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x55b71e1c9690 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55b71e1c9708 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55b71e1c9898 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e1c9af8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55b71e1c9a00 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x55b71e1c9bc8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b71e1c9bc8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e11e720 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55b71e11e8f8 prev 0x55b71e11e720 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55b71e11e988 <col:46, col:52> col:46 public
|-TypedefDecl 0x55b71e11e9b0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e120580 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55b71e120530 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55b71e11ee60 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55b71e11ed60 'type'
|     `-TemplateSpecializationType 0x55b71e11ecf0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55b71e11ebd0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55b71e11ebb0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55b71e11eb90 <col:24> 'unsigned long' 16
|       `-RecordType 0x55b71e11ecd0 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55b71e11ebf0 'char_array'
|-TypedefDecl 0x55b71e120638 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55b71e120600 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55b71e1205e0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55b71e120580 'type'
|     `-ElaboratedType 0x55b71e120530 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55b71e11ee60 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55b71e11ed60 'type'
|         `-TemplateSpecializationType 0x55b71e11ecf0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55b71e11ebd0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55b71e11ebb0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55b71e11eb90 <col:24> 'unsigned long' 16
|           `-RecordType 0x55b71e11ecd0 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55b71e11ebf0 'char_array'
|-CXXMethodDecl 0x55b71e1207b8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55b71e1206c8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55b71e1208a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55b71e120988 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55b71e120988
|-CXXMethodDecl 0x55b71e120c58 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55b71e120b60 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55b71e120e98 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55b71e120d10 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e120d88 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55b71e121068 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55b71e120f58 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e120fd0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55b71e1211c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55b71e121298 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55b71e1214e8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55b71e121358 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55b71e1213d0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55b71e121748 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55b71e1215b8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55b71e121630 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55b71e121908 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55b71e121818 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55b71e121ac8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55b71e1219d0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55b71e121b80 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e121c30 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e121e68 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55b71e121ce0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e121d58 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55b71e122108 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55b71e122010 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55b71e1221d0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55b71e122220 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55b71e122270 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e1ca2e0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x55b71e1ca4e8 prev 0x55b71e1ca2e0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b71e1ce730 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55b71e1ce6e0 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x55b71e1ce6c0 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x55b71e1ce570 'type'
|     `-SubstTemplateTypeParmType 0x55b71e11e2f0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55b71dc16000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc15fa8 'T'
|       `-RecordType 0x55b71e11de40 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55b71e11dd58 'sized_array_memory'
|-FieldDecl 0x55b71e1ce830 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55b71e1ce880 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b71e1ce8b8 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x55b71e1ca580 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dc4c168 'T'
|   `-RecordType 0x55b71e1a1260 'Router::Connection'
|     `-CXXRecord 0x55b71e1a11d0 'Connection'
|-TypedefDecl 0x55b71e1ce978 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x55b71e1ce940 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x55b71e1ca580 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71e1a1260 'Router::Connection'
|       `-CXXRecord 0x55b71e1a11d0 'Connection'
|-TypedefDecl 0x55b71e1cea08 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x55b71e1ce9d0 'const Router::Connection &'
|   `-QualType 0x55b71e1ca581 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55b71e1ca580 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e1a1260 'Router::Connection'
|         `-CXXRecord 0x55b71e1a11d0 'Connection'
|-TypedefDecl 0x55b71e1cea98 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x55b71e1cea60 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55b71e1ca580 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71e1a1260 'Router::Connection'
|       `-CXXRecord 0x55b71e1a11d0 'Connection'
|-TypedefDecl 0x55b71e1ceb28 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x55b71e1ceaf0 'const Router::Connection *'
|   `-QualType 0x55b71e1ca581 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55b71e1ca580 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e1a1260 'Router::Connection'
|         `-CXXRecord 0x55b71e1a11d0 'Connection'
|-TypedefDecl 0x55b71e1cf780 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x55b71e1cf730 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x55b71e1cf710 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x55b71e1cf648 'type'
|     `-LValueReferenceType 0x55b71e1cf610 'const Router::Connection &'
|       `-QualType 0x55b71e1cf3b1 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x55b71e1cf3b0 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x55b71dc1dad0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b71dc1da78 'T'
|           `-RecordType 0x55b71e1a1260 'Router::Connection'
|             `-CXXRecord 0x55b71e1a11d0 'Connection'
|-TypedefDecl 0x55b71e1cf7e8 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x55b71e1ce9d0 'const Router::Connection &'
|   `-QualType 0x55b71e1ca581 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55b71e1ca580 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e1a1260 'Router::Connection'
|         `-CXXRecord 0x55b71e1a11d0 'Connection'
|-TypedefDecl 0x55b71e1cf840 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e1cf8a8 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x55b71e1cea60 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55b71e1ca580 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71e1a1260 'Router::Connection'
|       `-CXXRecord 0x55b71e1a11d0 'Connection'
|-TypedefDecl 0x55b71e1cf910 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x55b71e1ceaf0 'const Router::Connection *'
|   `-QualType 0x55b71e1ca581 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55b71e1ca580 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e1a1260 'Router::Connection'
|         `-CXXRecord 0x55b71e1a11d0 'Connection'
|-EnumDecl 0x55b71e1cf968 <line:134:5> col:5
| `-EnumConstantDecl 0x55b71e1cfa60 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b71e1cfa40 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b71dc4d388 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b71dc4d360 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b71dc4d340 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b71e1cfae8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b71e1cfd78 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1cfba0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1cfc40 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x55b71e1d0038 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55b71e1cff20 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x55b71e1d02f8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55b71e1d01e0 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55b71e1d0640 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55b71e1d0520 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x55b71e1d0950 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55b71e1d0830 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55b71e1d0c40 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1d0a88 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1d0b00 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55b71e1d0d98 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55b71e1d0e78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1d0ed0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1d0f18 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55b71e1d0fc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1d1020 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1d10e8 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1d1198 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1d11f0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1d1238 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1d12e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1d1340 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1d1388 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1d1438 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1d1490 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1d14d8 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1d1588 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1d15e0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1d1608 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e1d16b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e1d1768 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b71e1d1928 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1d1818 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1d1890 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55b71e1d1a78 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1d19e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1d1c28 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x55b71e1d1b30 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e1d1ce0 <col:20>
| `-OptimizeNoneAttr 0x55b71e1d1d38 <col:30>
|-CXXMethodDecl 0x55b71e1d1e58 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x55b71e1d1d60 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e1d1f10 <col:20>
| `-OptimizeNoneAttr 0x55b71e1d1f68 <col:30>
|-CXXMethodDecl 0x55b71e1d2020 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1d1f90 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1d2168 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e1d20d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1d2298 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x55b71e1d23c8 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55b71e1d2498 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x55b71e1d2568 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55b71e1d26a8 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1d2618 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1d27f0 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e1d2760 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1d2938 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b71e1d28a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e1d29f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b71e1d2af0 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b71e1d2a60 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e1d2ba8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b71e1d2c68 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x55b71e1d2d68 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x55b71e1d2f18 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e1d2e28 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x55b71e1d36d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b71e1d2fd0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x55b71e1d3638 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x55b71e1d3538 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x55b71e1d37b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e1d3908 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e1d3878 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55b71e1d39c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b71e1d3c08 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1d3a80 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55b71e1d3af8 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55b71e1d3dc8 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x55b71e1d3cd8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55b71e1d4018 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x55b71e1d3e90 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55b71e1d3f08 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55b71e1d40d8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e1d4338 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55b71e1d4240 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x55b71e1d4408 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b71e1d4408

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e102ef0 prev 0x55b71e071798 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71e102fe8 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55b71e103078 <col:22, col:28> col:22 public
|-EnumDecl 0x55b71e1030a0 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55b71e1031b8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b71e103198 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55b71e103180 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b71e103160 <col:14> 'int' 999
| |-EnumConstantDecl 0x55b71e103260 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b71e103240 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55b71e103228 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b71e103208 <col:14> 'int' 1
| |-EnumConstantDecl 0x55b71e1032f0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b71e1032d0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55b71e1032b0 <col:17> 'int' 0
| |-EnumConstantDecl 0x55b71e103380 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b71e103360 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55b71e103340 <col:13> 'int' 1
| |-EnumConstantDecl 0x55b71e103410 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b71e1033f0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55b71e1033d0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55b71e1034a0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b71e103480 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55b71e103460 <col:13> 'int' 3
| |-EnumConstantDecl 0x55b71e103530 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b71e103510 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55b71e1034f0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55b71e1035c0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b71e1035a0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55b71e103580 <col:14> 'int' 5
| |-EnumConstantDecl 0x55b71e103650 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55b71e103630 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55b71e103610 <col:12> 'int' 6
| `-EnumConstantDecl 0x55b71e1036e0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55b71e1036c0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55b71e1036a0 <col:13> 'int' 7
|-VarDecl 0x55b71e103750 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55b71e1037d8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55b71e103860 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55b71e1038e8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55b71e103970 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55b71e1039f8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55b71e103a80 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55b71e103b08 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55b71e103b90 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55b71e103c18 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55b71e103ca0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55b71e103da0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55b71e109088 '_nerrors' 'int'
| | `-IntegerLiteral 0x55b71e109818 <line:128:13> 'int' 0
| `-CompoundStmt 0x55b71e109888 <col:16, line:129:5>
|-CXXDestructorDecl 0x55b71e103e90 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55b71e109898 <col:29, line:132:5>
|-CXXMethodDecl 0x55b71e104048 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55b71e103f80 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71e104110 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55b71e1041f8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55b71e1098f0 <col:44, line:161:5>
|   `-ReturnStmt 0x55b71e1098e0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55b71e1098c8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55b71e1098a8 <col:9> 'ErrorHandler *' lvalue Var 0x55b71e1090e8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55b71e104338 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55b71e1042a8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71e104400 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55b71e109950 <col:43, line:173:5>
|   `-ReturnStmt 0x55b71e109940 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55b71e109928 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55b71e109908 <col:9> 'ErrorHandler *' lvalue Var 0x55b71e109160 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55b71e1044b8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55b71e104538 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55b71e104648 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55b71e1045b8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55b71e104798 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55b71e104708 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55b71e1048f0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55b71e104858 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55b71e104a48 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55b71e1049b0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55b71e104ba0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55b71e104b08 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55b71e104db0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55b71e104c58 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55b71e104cd8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55b71e104f88 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55b71e104e70 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55b71e104ef0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55b71e1051a8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55b71e105048 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55b71e1050c8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55b71e105388 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55b71e105268 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55b71e1052e8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55b71e105568 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55b71e105448 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55b71e1054c8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55b71e1056f0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55b71e105628 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55b71e1058c0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55b71e1057a8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55b71e105820 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55b71e109ba8 <col:57, line:234:5>
|   `-ReturnStmt 0x55b71e109b98 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55b71e109b80 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55b71e109b28 <col:9, col:41> 'int'
|         |-MemberExpr 0x55b71e109af8 <col:9> '<bound member function type>' ->xmessage 0x55b71e1056f0
|         | `-CXXThisExpr 0x55b71e109ae8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55b71e109b68 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55b71e109b50 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55b71e109ac8 <col:18, col:40> 'String' (CXXTemporary 0x55b71e109ac8)
|               `-CallExpr 0x55b71e109a90 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55b71e109a78 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55b71e1099f0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55b71e1078b8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55b71e109a10 <col:31> 'const String' lvalue ParmVar 0x55b71e105820 'str' 'const String &'
|                 `-DeclRefExpr 0x55b71e109a30 <col:36> 'const String' lvalue ParmVar 0x55b71e1057a8 'anno' 'const String &'
|-CXXMethodDecl 0x55b71e105ba0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55b71e105980 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55b71e105a00 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55b71e105a78 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55b71e109e38 <col:68, line:243:5>
|   `-ReturnStmt 0x55b71e109e28 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55b71e109e10 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55b71e109db0 <col:9, col:41> 'int'
|         |-MemberExpr 0x55b71e109d80 <col:9> '<bound member function type>' ->xmessage 0x55b71e1058c0
|         | `-CXXThisExpr 0x55b71e109d70 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55b71e109c48 <col:18> 'const String' lvalue ParmVar 0x55b71e105980 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55b71e109df8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55b71e109de0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55b71e109d50 <col:24, col:40> 'String' (CXXTemporary 0x55b71e109d50)
|               `-CXXMemberCallExpr 0x55b71e109ce8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55b71e109c78 <col:24> '<bound member function type>' ->vformat 0x55b71e106d80
|                 | `-CXXThisExpr 0x55b71e109c68 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55b71e109d18 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55b71e109ca8 <col:32> 'const char *' lvalue ParmVar 0x55b71e105a00 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55b71e109d30 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55b71e109cc8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55b71e105a78 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55b71e105e40 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55b71e105c68 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55b71e105ce0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55b71e105d58 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55b71e10a178 <col:23, line:254:5>
|   `-ReturnStmt 0x55b71e10a168 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55b71e10a150 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55b71e10a0f0 <col:9, col:71> 'int'
|         |-MemberExpr 0x55b71e10a0c0 <col:9> '<bound member function type>' ->xmessage 0x55b71e1058c0
|         | `-CXXThisExpr 0x55b71e10a0b0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55b71e10a138 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55b71e10a120 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55b71e10a070 <col:18, col:65> 'String' (CXXTemporary 0x55b71e10a070)
|         |     `-CallExpr 0x55b71e10a008 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55b71e109ff0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55b71e109ed8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55b71e1078b8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55b71e109ef8 <col:31> 'const String' lvalue ParmVar 0x55b71e105ce0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55b71e10a050 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55b71e10a038 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55b71e109fd0 <col:37, col:64> 'String' (CXXTemporary 0x55b71e109fd0)
|         |             `-CallExpr 0x55b71e109fa0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55b71e109f88 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55b71e109f18 <col:37> 'String (const String &)' lvalue CXXMethod 0x55b71e107f08 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55b71e109f38 <col:56> 'const String' lvalue ParmVar 0x55b71e105c68 'landmark' 'const String &'
|         `-DeclRefExpr 0x55b71e10a090 <col:68> 'const String' lvalue ParmVar 0x55b71e105d58 'str' 'const String &'
|-CXXMethodDecl 0x55b71e1061c0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55b71e105f08 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55b71e105f80 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55b71e106000 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55b71e106078 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55b71e10a430 <col:34, line:267:5>
|   `-ReturnStmt 0x55b71e10a420 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55b71e10a408 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55b71e10a3a0 <col:9, col:51> 'int'
|         |-MemberExpr 0x55b71e10a370 <col:9> '<bound member function type>' ->xmessage 0x55b71e105e40
|         | `-CXXThisExpr 0x55b71e10a360 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55b71e10a218 <col:18> 'const String' lvalue ParmVar 0x55b71e105f08 'landmark' 'const String &'
|         |-DeclRefExpr 0x55b71e10a238 <col:28> 'const String' lvalue ParmVar 0x55b71e105f80 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55b71e10a3f0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55b71e10a3d8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55b71e10a340 <col:34, col:50> 'String' (CXXTemporary 0x55b71e10a340)
|               `-CXXMemberCallExpr 0x55b71e10a2d8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55b71e10a268 <col:34> '<bound member function type>' ->vformat 0x55b71e106d80
|                 | `-CXXThisExpr 0x55b71e10a258 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55b71e10a308 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55b71e10a298 <col:42> 'const char *' lvalue ParmVar 0x55b71e106000 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55b71e10a320 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55b71e10a2b8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55b71e106078 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55b71e1062d0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55b71e10a4b0 <col:25, line:288:5>
|   `-ReturnStmt 0x55b71e10a4a0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55b71e10a488 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55b71e10a458 <col:9> 'const int' lvalue ->_nerrors 0x55b71e109088
|         `-CXXThisExpr 0x55b71e10a448 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55b71e1064e0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55b71e106388 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55b71e106408 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55b71e1067c8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55b71e1065a8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55b71e106628 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55b71e1066a0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55b71e106960 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55b71e106898 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55b71e106ba8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55b71e106a20 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55b71e106a98 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55b71e10a710 <col:58, line:357:5>
|   `-ReturnStmt 0x55b71e10a700 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55b71e10a6e8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55b71e10a6b8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55b71e10a6a0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55b71e10a680 <col:9, col:29> 'String' (CXXTemporary 0x55b71e10a680)
|             `-CallExpr 0x55b71e10a610 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55b71e10a5f8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55b71e10a578 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55b71e1067c8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55b71e10a518 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55b71e10a648 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55b71e10a538 <col:21> 'const char *' lvalue ParmVar 0x55b71e106a20 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55b71e10a660 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55b71e10a558 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55b71e106a98 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55b71e106d80 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55b71e106c70 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55b71e106ce8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55b71e106ed8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55b71e106e48 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55b71e107020 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55b71e106f90 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55b71e1072c0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55b71e1070d8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55b71e107158 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55b71e1071d0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55b71e107420 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55b71e107390 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55b71e10a828 <col:37, line:441:5>
|   `-IfStmt 0x55b71e10a810 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55b71e10a798 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55b71e10a768 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55b71e10a728 <col:6> 'int' lvalue ParmVar 0x55b71e107390 'level' 'int'
|     | `-ImplicitCastExpr 0x55b71e10a780 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55b71e10a748 <col:15> 'ErrorHandler::Level' EnumConstant 0x55b71e1034a0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55b71e10a7f8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55b71e10a7c8 <col:8> 'int' lvalue ->_nerrors 0x55b71e109088
|         `-CXXThisExpr 0x55b71e10a7b8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55b71e1074e8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55b71e10a8c0 <col:26, line:448:5>
|   `-BinaryOperator 0x55b71e10a8a0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55b71e10a850 <col:2> 'int' lvalue ->_nerrors 0x55b71e109088
|     | `-CXXThisExpr 0x55b71e10a840 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55b71e10a880 <col:13> 'int' 0
|-CXXMethodDecl 0x55b71e1076b0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55b71e1075a0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55b71e107618 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55b71e1078b8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55b71e107770 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55b71e1077e8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55b71e107b68 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55b71e107978 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55b71e1079f8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55b71e107a78 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55b71e107c20 <col:59> 0 0
|-CXXMethodDecl 0x55b71e107db8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55b71e107c98 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55b71e107d18 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55b71e10af40 <col:70, line:534:5>
|   |-DeclStmt 0x55b71e10aa30 <line:528:2, col:20>
|   | |-VarDecl 0x55b71e10a8e8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55b71e10a950 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55b71e10a988 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55b71e10a9f0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55b71e10ab00 <line:529:2, col:23>
|   | `-VarDecl 0x55b71e10aa60 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55b71e10aae8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55b71e10aac8 <col:18> 'const char *' lvalue ParmVar 0x55b71e107c98 'begin' 'const char *'
|   |-DoStmt 0x55b71e10aed8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55b71e10adf8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55b71e10ade0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55b71e10adc0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55b71e10ab18 <col:6> 'const char *' lvalue Var 0x55b71e10aa60 'x' 'const char *'
|   | |     `-CallExpr 0x55b71e10ad10 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55b71e10acf8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55b71e10acb0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55b71e109560 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55b71e10ad78 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55b71e10ad60 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55b71e10abd0 <col:20, col:27> 'String' (CXXTemporary 0x55b71e10abd0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55b71e10ab98 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55b71e10ad90 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55b71e10abf0 <col:30> 'const char *' lvalue Var 0x55b71e10aa60 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55b71e10ada8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55b71e10ac10 <col:33> 'const char *' lvalue ParmVar 0x55b71e107d18 'end' 'const char *'
|   | |       |-UnaryOperator 0x55b71e10ac50 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55b71e10ac30 <col:39> 'String' lvalue Var 0x55b71e10a8e8 'name' 'String'
|   | |       |-UnaryOperator 0x55b71e10ac88 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55b71e10ac68 <col:46> 'String' lvalue Var 0x55b71e10a988 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55b71e10aca0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55b71e10aec0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55b71e10aea8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55b71e10ae88 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55b71e10ae58 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55b71dc6fdb8
|   |         `-ImplicitCastExpr 0x55b71e10ae40 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55b71e10ae10 <col:11> 'String' lvalue Var 0x55b71e10a8e8 'name' 'String'
|   `-ReturnStmt 0x55b71e10af30 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55b71e10af18 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55b71e10aef8 <col:9> 'const char *' lvalue Var 0x55b71e10aa60 'x' 'const char *'
|-CXXMethodDecl 0x55b71e107f08 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55b71e107e78 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55b71e10b548 <col:55, line:550:5>
|   `-IfStmt 0x55b71e10b520 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55b71e10b180 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55b71e10b168 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55b71e10b150 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55b71e10b130 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55b71e10b100 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55b71dc6fdb8
|     | |       `-DeclRefExpr 0x55b71e10afa0 <col:6> 'const String' lvalue ParmVar 0x55b71e107e78 'x' 'const String &'
|     | `-BinaryOperator 0x55b71e10b0e0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55b71e10b0b0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55b71e10b060 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55b71e10b048 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55b71e10b000 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55b71dc87610 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55b71e10afc0 <col:11> 'const String' lvalue ParmVar 0x55b71e107e78 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55b71e10afe0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55b71e10b0c8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55b71e10b098 <col:19> 'char' 123
|     |-ReturnStmt 0x55b71e10b1f0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55b71e10b1c0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55b71e10b1a0 <col:13> 'const String' lvalue ParmVar 0x55b71e107e78 'x' 'const String &'
|     `-IfStmt 0x55b71e10b4f8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55b71e10b288 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55b71e10b270 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55b71e10b250 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55b71e10b220 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55b71dc6fdb8
|       |       `-DeclRefExpr 0x55b71e10b200 <col:11> 'const String' lvalue ParmVar 0x55b71e107e78 'x' 'const String &'
|       |-ReturnStmt 0x55b71e10b410 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55b71e10b3f8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55b71e10b3c8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55b71e10b3b0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55b71e10b390 <col:13, col:29> 'String' (CXXTemporary 0x55b71e10b390)
|       |         `-CallExpr 0x55b71e10b340 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55b71e10b328 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55b71e10b2a0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55b71e1076b0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55b71e10b370 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55b71e10b2c0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55b71e10b2e0 <col:28> 'const String' lvalue ParmVar 0x55b71e107e78 'x' 'const String &'
|       `-ReturnStmt 0x55b71e10b4e8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55b71e10b4d0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55b71e10b4a0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55b71e10b488 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55b71e10b468 <col:13, col:20> 'String' (CXXTemporary 0x55b71e10b468)
|                 `-CXXTemporaryObjectExpr 0x55b71e10b430 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55b71e1080d0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55b71e107fc0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55b71e108038 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b71e109808 <col:71> 'bool' false
|-CXXRecordDecl 0x55b71e108180 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55b71e108478 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55b71e108410 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55b71e1083b0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55b71e108370 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55b71dc6c630 'String'
|       | `-CXXRecord 0x55b71dc6c5a0 'String'
|       |-BuiltinType 0x55b71d92f580 'int'
|       `-DecayedType 0x55b71e0727e0 '__va_list_tag *' sugar
|         |-TypedefType 0x55b71e0727b0 'va_list' sugar
|         | |-Typedef 0x55b71db56430 'va_list'
|         | `-TypedefType 0x55b71db563e0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55b71da8dff8 '__gnuc_va_list'
|         |   `-TypedefType 0x55b71da8df60 '__builtin_va_list' sugar
|         |     |-Typedef 0x55b71d970d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55b71d970ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55b71d9302d0 '__va_list_tag'
|         |         `-CXXRecord 0x55b71d930238 '__va_list_tag'
|         `-PointerType 0x55b71db5c530 '__va_list_tag *'
|           `-RecordType 0x55b71d9302d0 '__va_list_tag'
|             `-CXXRecord 0x55b71d930238 '__va_list_tag'
|-EnumDecl 0x55b71e1084d0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55b71e1085d0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b71e108b30 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e1085b0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55b71e108590 <col:16> 'int' 1
| |-EnumConstantDecl 0x55b71e108660 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b71e108b48 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e108640 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55b71e108620 <col:21> 'int' 2
| |-EnumConstantDecl 0x55b71e1086f0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b71e108b60 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e1086d0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55b71e1086b0 <col:22> 'int' 4
| |-EnumConstantDecl 0x55b71e108780 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b71e108b78 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e108760 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55b71e108740 <col:17> 'int' 8
| |-EnumConstantDecl 0x55b71e108810 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b71e108b90 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e1087f0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55b71e1087d0 <col:22> 'int' 16
| |-EnumConstantDecl 0x55b71e1088a0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b71e108ba8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e108880 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55b71e108860 <col:19> 'int' 32
| |-EnumConstantDecl 0x55b71e108930 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b71e108bc0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e108910 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55b71e1088f0 <col:17> 'int' 64
| |-EnumConstantDecl 0x55b71e1089c0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b71e108bd8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e1089a0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55b71e108980 <col:14> 'int' 128
| |-EnumConstantDecl 0x55b71e108a50 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55b71e108bf0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e108a30 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55b71e108a10 <col:16> 'int' 256
| `-EnumConstantDecl 0x55b71e108ae0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55b71e108c08 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71e108ac0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55b71e108aa0 <col:12> 'int' 1024
|-CXXMethodDecl 0x55b71e108e18 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55b71e108c30 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55b71e108cd0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55b71e108fa0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55b71e108ed8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55b71e109048 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55b71e109088 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55b71e1090e8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55b71e109160 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55b71e109560 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55b71e1091d8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55b71e109258 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55b71e1092d8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55b71e109350 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55b71e1093c8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55b71e109440 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55b71e109688 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55b71e109688
| `-ParmVarDecl 0x55b71e109798 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55b71e10b8a8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55b71e10b8a8
  `-ParmVarDecl 0x55b71e10b9b8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71de9fad0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55b71de9fc20 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55b71de9fca0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x55b71dea0a98 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55b71dea0a98
| `-ParmVarDecl 0x55b71dea0ba8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x55b71dea0c48 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55b71dea0c48
| `-ParmVarDecl 0x55b71dea0d58 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x55b71dea0dc8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55b71dea0dc8
|-CXXMethodDecl 0x55b71dea1698 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55b71dea1698
| `-ParmVarDecl 0x55b71dea17a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x55b71dea1818 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55b71dea1818
| `-ParmVarDecl 0x55b71dea1928 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x55b71e1ee0f8 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55b71e1ee1d0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71de9fdd0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55b71de9fef8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55b71de9ff80 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x55b71dea0ef8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55b71dea0ef8
| `-ParmVarDecl 0x55b71dea1008 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x55b71dea10a8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55b71dea10a8
| `-ParmVarDecl 0x55b71dea11b8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x55b71dea1228 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55b71dea1228
|-CXXMethodDecl 0x55b71dea19c8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55b71dea19c8
| `-ParmVarDecl 0x55b71dea1ad8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x55b71dea1b48 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55b71dea1b48
| `-ParmVarDecl 0x55b71dea1c58 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x55b71e1ee230 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55b71e1ee310 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71de9b458 prev 0x55b71de9a960 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 referenced class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55b71de9b550 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x55b71de9b5e0 <col:17, col:23> col:17 public
|-EnumDecl 0x55b71de9b608 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x55b71de9b710 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c460 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9b6f0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x55b71de9b6d0 <col:11> 'int' 1
| |-EnumConstantDecl 0x55b71de9b7a0 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c478 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9b780 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x55b71de9b760 <col:12> 'int' 2
| |-EnumConstantDecl 0x55b71de9b830 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c490 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9b810 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x55b71de9b7f0 <col:17> 'int' 4
| |-EnumConstantDecl 0x55b71de9b8c0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c4a8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9b8a0 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x55b71de9b880 <col:16> 'int' 0
| |-EnumConstantDecl 0x55b71de9b950 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c4c0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9b930 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55b71de9b910 <col:19> 'int' 32
| |-EnumConstantDecl 0x55b71de9b9e0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c4d8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9b9c0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x55b71de9b9a0 <col:10> 'int' 64
| |-EnumConstantDecl 0x55b71de9ba70 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c4f0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9ba50 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x55b71de9ba30 <col:19> 'int' 128
| |-EnumConstantDecl 0x55b71de9bb00 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c508 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9bae0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x55b71de9bac0 <col:20> 'int' 256
| |-EnumConstantDecl 0x55b71de9bb90 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c520 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9bb70 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x55b71de9bb50 <col:17> 'int' 512
| |-EnumConstantDecl 0x55b71de9bc20 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c538 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9bc00 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x55b71de9bbe0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x55b71de9bcb0 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c550 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9bc90 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x55b71de9bc70 <col:11> 'int' 2048
| |-EnumConstantDecl 0x55b71de9bd40 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c568 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9bd20 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x55b71de9bd00 <col:16> 'int' 4096
| |-EnumConstantDecl 0x55b71de9bdd0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c580 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9bdb0 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x55b71de9bd90 <col:13> 'int' 8192
| |-EnumConstantDecl 0x55b71de9be60 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c598 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9be40 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x55b71de9be20 <col:15> 'int' 16384
| |-EnumConstantDecl 0x55b71de9bf30 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x55b71de9bf10 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x55b71de9bef0 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55b71de9beb0 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x55b71de9bed0 <col:20> 'int' 26
| |-EnumConstantDecl 0x55b71de9c000 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x55b71de9bfe0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x55b71de9bfc0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55b71de9bf80 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x55b71de9bfa0 <col:27> 'int' 27
| |-EnumConstantDecl 0x55b71de9c090 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c5b0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9c070 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x55b71de9c050 <col:17> 'int' 28
| |-EnumConstantDecl 0x55b71de9c160 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x55b71de9c140 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x55b71de9c120 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55b71de9c0e0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x55b71de9c100 <col:18> 'int' EnumConstant 0x55b71de9c090 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9c1f0 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c5c8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9c1d0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x55b71de9c1b0 <col:25> 'int' 8
| |-EnumConstantDecl 0x55b71de9c280 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55b71de9c5e0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9c260 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x55b71de9c240 <col:26> 'int' 16
| `-EnumConstantDecl 0x55b71de9c410 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x55b71de9c5f8 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71de9c3f0 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x55b71de9c3d0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x55b71de9c390 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x55b71de9c350 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x55b71de9c310 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x55b71de9c2d0 <col:14> 'int' EnumConstant 0x55b71de9b710 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x55b71de9c2f0 <col:23> 'int' EnumConstant 0x55b71de9b7a0 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x55b71de9c330 <col:33> 'int' EnumConstant 0x55b71de9b830 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x55b71de9c370 <col:48> 'int' EnumConstant 0x55b71de9c1f0 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x55b71de9c3b0 <col:71> 'int' EnumConstant 0x55b71de9c280 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x55b71de9c658 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x55b71dea2088 <col:39, line:64:5>
|   `-ReturnStmt 0x55b71dea2078 <line:63:2, col:9>
|     `-MemberExpr 0x55b71dea2048 <col:9> 'const String' lvalue ->_name 0x55b71de9fa80
|       `-CXXThisExpr 0x55b71dea2038 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55b71de9c718 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x55b71dea2108 <col:35, line:71:5>
|   `-ReturnStmt 0x55b71dea20f8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x55b71dea20e0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55b71dea20b0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b71dea0190
|         `-CXXThisExpr 0x55b71dea20a0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55b71de9c868 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x55b71de9c7d0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x55b71dea2288 <col:42, line:77:5>
|   `-ReturnStmt 0x55b71dea2278 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x55b71dea2260 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x55b71dea2230 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x55b71dea2190 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x55b71dea2160 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55b71dea2120 <col:9> 'int' lvalue ParmVar 0x55b71de9c7d0 'op' 'int'
|         | `-ImplicitCastExpr 0x55b71dea2178 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55b71dea2140 <col:15> 'Handler::Flags' EnumConstant 0x55b71de9b7a0 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x55b71dea21c0 <col:25> 'void *const' lvalue ->_write_user_data 0x55b71dea0130
|         | `-CXXThisExpr 0x55b71dea21b0 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x55b71dea2200 <col:44> 'void *const' lvalue ->_read_user_data 0x55b71dea00c8
|           `-CXXThisExpr 0x55b71dea21f0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x55b71de9c938 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x55b71dea2308 <col:41, line:82:5>
|   `-ReturnStmt 0x55b71dea22f8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x55b71dea22e0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55b71dea22b0 <col:9> 'void *const' lvalue ->_read_user_data 0x55b71dea00c8
|         `-CXXThisExpr 0x55b71dea22a0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55b71de9ca00 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x55b71dea2388 <col:42, line:87:5>
|   `-ReturnStmt 0x55b71dea2378 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x55b71dea2360 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55b71dea2330 <col:9> 'void *const' lvalue ->_write_user_data 0x55b71dea0130
|         `-CXXThisExpr 0x55b71dea2320 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55b71de9cac8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x55b71de9cb68 <col:52> "" ""
|-CXXMethodDecl 0x55b71de9cc00 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x55b71de9cca0 <col:52> "" ""
|-CXXMethodDecl 0x55b71de9cd30 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x55b71dea2478 <col:34, line:98:5>
|   `-ReturnStmt 0x55b71dea2468 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x55b71dea2450 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55b71dea2430 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55b71dea2400 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55b71dea23b0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b71dea0190
|         |   `-CXXThisExpr 0x55b71dea23a0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55b71dea2418 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55b71dea23e0 <col:18> 'Handler::Flags' EnumConstant 0x55b71de9b710 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55b71de9cdf0 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x55b71dea2568 <col:36, line:104:5>
|   `-ReturnStmt 0x55b71dea2558 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x55b71dea2540 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55b71dea2520 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55b71dea24f0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55b71dea24a0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b71dea0190
|         |   `-CXXThisExpr 0x55b71dea2490 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55b71dea2508 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55b71dea24d0 <col:18> 'Handler::Flags' EnumConstant 0x55b71de9b830 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x55b71de9ceb0 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x55b71dea2748 <col:38, line:113:5>
|   `-ReturnStmt 0x55b71dea2738 <line:112:2, col:49>
|     `-BinaryOperator 0x55b71dea2718 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x55b71dea26c0 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x55b71dea26a0 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55b71dea2670 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55b71dea2590 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b71dea0190
|       |   |   `-CXXThisExpr 0x55b71dea2580 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55b71dea2688 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55b71dea2650 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x55b71dea2630 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x55b71dea2600 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55b71dea25c0 <col:20> 'Handler::Flags' EnumConstant 0x55b71de9b710 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55b71dea2618 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55b71dea25e0 <col:29> 'Handler::Flags' EnumConstant 0x55b71de9ba70 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55b71dea2700 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55b71dea26e0 <col:49> 'Handler::Flags' EnumConstant 0x55b71de9b710 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55b71de9cf70 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x55b71dea2838 <col:34, line:118:5>
|   `-ReturnStmt 0x55b71dea2828 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x55b71dea2810 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55b71dea27f0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55b71dea27c0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55b71dea2770 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b71dea0190
|         |   `-CXXThisExpr 0x55b71dea2760 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55b71dea27d8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55b71dea27a0 <col:18> 'Handler::Flags' EnumConstant 0x55b71de9b7a0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55b71de9d030 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x55b71dea2a18 <col:39, line:127:5>
|   `-ReturnStmt 0x55b71dea2a08 <line:126:2, col:51>
|     `-BinaryOperator 0x55b71dea29e8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x55b71dea2990 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x55b71dea2970 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55b71dea2940 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55b71dea2860 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b71dea0190
|       |   |   `-CXXThisExpr 0x55b71dea2850 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55b71dea2958 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55b71dea2920 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x55b71dea2900 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x55b71dea28d0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55b71dea2890 <col:20> 'Handler::Flags' EnumConstant 0x55b71de9b7a0 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55b71dea28e8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55b71dea28b0 <col:30> 'Handler::Flags' EnumConstant 0x55b71de9bb00 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55b71dea29d0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55b71dea29b0 <col:51> 'Handler::Flags' EnumConstant 0x55b71de9b7a0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55b71de9d0f0 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x55b71dea2b20 <col:33, line:132:5>
|   `-ReturnStmt 0x55b71dea2b10 <line:131:2, col:41>
|     `-BinaryOperator 0x55b71dea2af0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x55b71dea2a70 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x55b71dea2a40 <col:9> '<bound member function type>' ->read_visible 0x55b71de9ceb0
|       |   `-CXXThisExpr 0x55b71dea2a30 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x55b71dea2ad0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x55b71dea2aa0 <col:27> '<bound member function type>' ->write_visible 0x55b71de9d030
|           `-CXXThisExpr 0x55b71dea2a90 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x55b71de9d1b0 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x55b71dea2c30 <col:51, line:138:5>
|   `-ReturnStmt 0x55b71dea2c20 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x55b71dea2c08 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55b71dea2be8 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55b71dea2bc8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55b71dea2b98 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55b71dea2b48 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b71dea0190
|           |   `-CXXThisExpr 0x55b71dea2b38 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55b71dea2bb0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55b71dea2b78 <col:26> 'Handler::Flags' EnumConstant 0x55b71de9b950 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55b71de9d270 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x55b71dea2d40 <col:50, line:144:5>
|   `-ReturnStmt 0x55b71dea2d30 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x55b71dea2d18 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55b71dea2cf8 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55b71dea2cd8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55b71dea2ca8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55b71dea2c58 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b71dea0190
|           |   `-CXXThisExpr 0x55b71dea2c48 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55b71dea2cc0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55b71dea2c88 <col:26> 'Handler::Flags' EnumConstant 0x55b71de9b950 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55b71de9d330 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x55b71dea2e30 <col:29, line:166:5>
|   `-ReturnStmt 0x55b71dea2e20 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x55b71dea2e08 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55b71dea2de8 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55b71dea2db8 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55b71dea2d68 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b71dea0190
|         |   `-CXXThisExpr 0x55b71dea2d58 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55b71dea2dd0 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55b71dea2d98 <col:18> 'Handler::Flags' EnumConstant 0x55b71de9b9e0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x55b71de9d5b8 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55b71de9d3e0 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x55b71de9d458 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x55b71de9d4d0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71de9d7c8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55b71de9d680 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x55b71de9d6f8 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55b71dea1f70 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55b71dea1f50 <col:62> 'int' 0
| `-CompoundStmt 0x55b71dea30d0 <col:71, line:188:5>
|   `-ReturnStmt 0x55b71dea30c0 <line:187:2, col:36>
|     `-ExprWithCleanups 0x55b71dea30a8 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x55b71dea3078 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55b71dea3060 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55b71dea3040 <col:9, col:36> 'String' (CXXTemporary 0x55b71dea3040)
|             `-CXXMemberCallExpr 0x55b71dea2fa0 <col:9, col:36> 'String'
|               |-MemberExpr 0x55b71dea2f70 <col:9> '<bound member function type>' ->call_read 0x55b71de9d5b8
|               | `-CXXThisExpr 0x55b71dea2f60 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55b71dea2fd8 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55b71dea2eb8 <col:19> 'Element *' lvalue ParmVar 0x55b71de9d680 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x55b71dea3008 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x55b71dea2ff0 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x55b71dea2f20 <col:22, col:29> 'String' (CXXTemporary 0x55b71dea2f20)
|               |     `-CXXTemporaryObjectExpr 0x55b71dea2ee8 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x55b71dea3020 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x55b71dea2f40 <col:32> 'ErrorHandler *' lvalue ParmVar 0x55b71de9d6f8 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x55b71de9da60 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55b71de9d888 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x55b71de9d900 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55b71de9d978 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71de9dbe8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x55b71de9db28 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x55b71de9de18 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x55b71de9dca0 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55b71de9dd18 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x55b71de9df30 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x55b71dea3130 <col:50, line:225:5>
|   `-ReturnStmt 0x55b71dea3120 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x55b71dea3108 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x55b71dea30e8 <col:9> 'const Handler *' lvalue Var 0x55b71dea02c0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x55b71de9dfd0 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x55b71de9e0d0 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ec60 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e0b0 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55b71de9e090 <col:11> 'Handler::Flags' EnumConstant 0x55b71de9b710 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e160 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ec78 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e140 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55b71de9e120 <col:12> 'Handler::Flags' EnumConstant 0x55b71de9b7a0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e1f0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ec90 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e1d0 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55b71de9e1b0 <col:17> 'Handler::Flags' EnumConstant 0x55b71de9b830 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e280 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9eca8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e260 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55b71de9e240 <col:16> 'Handler::Flags' EnumConstant 0x55b71de9b8c0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e310 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ecc0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e2f0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x55b71de9e2d0 <col:19> 'Handler::Flags' EnumConstant 0x55b71de9b950 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e3a0 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ecd8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e380 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55b71de9e360 <col:10> 'Handler::Flags' EnumConstant 0x55b71de9b9e0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e430 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ecf0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e410 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x55b71de9e3f0 <col:19> 'Handler::Flags' EnumConstant 0x55b71de9ba70 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e4c0 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ed08 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e4a0 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x55b71de9e480 <col:20> 'Handler::Flags' EnumConstant 0x55b71de9bb00 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e550 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ed20 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e530 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x55b71de9e510 <col:17> 'Handler::Flags' EnumConstant 0x55b71de9bb90 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e5e0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ed38 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e5c0 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x55b71de9e5a0 <col:15> 'Handler::Flags' EnumConstant 0x55b71de9bc20 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e670 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ed50 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e650 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55b71de9e630 <col:11> 'Handler::Flags' EnumConstant 0x55b71de9bcb0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e700 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ed68 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e6e0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55b71de9e6c0 <col:16> 'Handler::Flags' EnumConstant 0x55b71de9bd40 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e790 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ed80 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e770 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55b71de9e750 <col:13> 'Handler::Flags' EnumConstant 0x55b71de9bdd0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e820 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ed98 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e800 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55b71de9e7e0 <col:15> 'Handler::Flags' EnumConstant 0x55b71de9be60 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e8b0 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9edb0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e890 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x55b71de9e870 <col:20> 'Handler::Flags' EnumConstant 0x55b71de9bf30 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e940 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9edc8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e920 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x55b71de9e900 <col:27> 'Handler::Flags' EnumConstant 0x55b71de9c000 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9e9d0 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ede0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9e9b0 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55b71de9e990 <col:22> 'Handler::Flags' EnumConstant 0x55b71de9c090 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9ea60 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9edf8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9ea40 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x55b71de9ea20 <col:18> 'Handler::Flags' EnumConstant 0x55b71de9c160 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9eaf0 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ee10 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9ead0 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x55b71de9eab0 <col:25> 'Handler::Flags' EnumConstant 0x55b71de9c1f0 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9eb80 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55b71de9ee28 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9eb60 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x55b71de9eb40 <col:26> 'Handler::Flags' EnumConstant 0x55b71de9c280 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x55b71de9ec10 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x55b71de9ee40 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71de9ebf0 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x55b71de9ebd0 <col:20> 'Handler::Flags' EnumConstant 0x55b71de9c410 'f_special' 'Handler::Flags'
|-EnumDecl 0x55b71de9ee58 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x55b71de9ef60 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b71de9f4c0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9ef40 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55b71de9ef20 <col:12> 'Handler::Flags' EnumConstant 0x55b71de9b710 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9eff0 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b71de9f4d8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9efd0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55b71de9efb0 <col:13> 'Handler::Flags' EnumConstant 0x55b71de9b7a0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9f080 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b71de9f4f0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9f060 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55b71de9f040 <col:15> 'Handler::Flags' EnumConstant 0x55b71de9b830 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9f110 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b71de9f508 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9f0f0 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55b71de9f0d0 <col:8> 'Handler::Flags' EnumConstant 0x55b71de9b9e0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9f1a0 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b71de9f520 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9f180 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55b71de9f160 <col:9> 'Handler::Flags' EnumConstant 0x55b71de9bcb0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9f230 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b71de9f538 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9f210 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55b71de9f1f0 <col:14> 'Handler::Flags' EnumConstant 0x55b71de9bd40 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9f2c0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b71de9f550 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9f2a0 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55b71de9f280 <col:11> 'Handler::Flags' EnumConstant 0x55b71de9bdd0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9f350 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b71de9f568 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9f330 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55b71de9f310 <col:13> 'Handler::Flags' EnumConstant 0x55b71de9be60 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55b71de9f3e0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55b71de9f580 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9f3c0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55b71de9f3a0 <col:20> 'Handler::Flags' EnumConstant 0x55b71de9c090 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x55b71de9f470 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x55b71de9f598 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71de9f450 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x55b71de9f430 <col:16> 'Handler::Flags' EnumConstant 0x55b71de9c160 'f_user0' 'Handler::Flags'
|-EnumDecl 0x55b71de9f5b0 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x55b71de9f670 <col:25> "" ""
| |-EnumConstantDecl 0x55b71de9f720 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x55b71de9f800 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de9f700 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55b71de9f6e0 <col:14> 'Handler::Flags' EnumConstant 0x55b71de9b8c0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x55b71de9f7b0 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x55b71de9f818 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71de9f790 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x55b71de9f770 <col:17> 'Handler::Flags' EnumConstant 0x55b71de9b950 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55b71de9f998 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x55b71de9f840 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x55b71de9f8c0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x55b71dea37f0 <col:70, line:284:5>
|   |-ParenExpr 0x55b71dea3610 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x55b71dea35e0 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x55b71dea3310 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71dea32e0 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x55b71dea3288 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x55b71dea3268 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x55b71dea3238 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x55b71dea3158 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55b71dea0190
|   |   |   |   |   `-CXXThisExpr 0x55b71dea3148 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x55b71dea3250 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x55b71dea3218 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x55b71dea31f8 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x55b71dea31c8 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x55b71dea3188 <col:34> 'Handler::Flags' EnumConstant 0x55b71de9b710 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x55b71dea31e0 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x55b71dea31a8 <col:43> 'Handler::Flags' EnumConstant 0x55b71de9c1f0 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x55b71dea32c8 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x55b71dea32a8 <col:69> 'Handler::Flags' EnumConstant 0x55b71de9b710 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x55b71dea3370 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71dea3350 <col:85> 'int' 0
|   |   `-CallExpr 0x55b71dea3540 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x55b71dea3528 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71dea3508 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71dea3580 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71dea33e0 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x55b71dea3598 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71dea3430 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x55b71dea35b0 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71dea3468 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x55b71dea35c8 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71dea34f0 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71dea34d8 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71dea3488 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x55b71dea37e0 <line:283:2, col:38>
|     `-ExprWithCleanups 0x55b71dea37c8 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x55b71dea3798 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55b71dea3780 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55b71dea3760 <col:9, col:38> 'String' (CXXTemporary 0x55b71dea3760)
|             `-CallExpr 0x55b71dea36f8 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x55b71dea36e0 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x55b71dea3670 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x55b71de9fca0
|               |   `-MemberExpr 0x55b71dea3640 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x55b71de9fd68
|               |     `-CXXThisExpr 0x55b71dea3630 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55b71dea3728 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55b71dea36a0 <col:22> 'Element *' lvalue ParmVar 0x55b71de9f840 'e' 'Element *'
|               `-ImplicitCastExpr 0x55b71dea3740 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x55b71dea36c0 <col:25> 'void *' lvalue ParmVar 0x55b71de9f8c0 'new_user_data' 'void *'
|-AccessSpecDecl 0x55b71de9fa48 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55b71de9fa80 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x55b71de9fad0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55b71de9fc20 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55b71de9fca0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x55b71dea0a98 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55b71dea0a98
| | `-ParmVarDecl 0x55b71dea0ba8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x55b71dea0c48 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55b71dea0c48
| | `-ParmVarDecl 0x55b71dea0d58 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x55b71dea0dc8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55b71dea0dc8
| |-CXXMethodDecl 0x55b71dea1698 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55b71dea1698
| | `-ParmVarDecl 0x55b71dea17a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x55b71dea1818 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55b71dea1818
| | `-ParmVarDecl 0x55b71dea1928 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x55b71e1ee0f8 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55b71e1ee1d0 <col:5>
|-FieldDecl 0x55b71de9fd68 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x55b71de9fdd0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55b71de9fef8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55b71de9ff80 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x55b71dea0ef8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55b71dea0ef8
| | `-ParmVarDecl 0x55b71dea1008 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x55b71dea10a8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55b71dea10a8
| | `-ParmVarDecl 0x55b71dea11b8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x55b71dea1228 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55b71dea1228
| |-CXXMethodDecl 0x55b71dea19c8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55b71dea19c8
| | `-ParmVarDecl 0x55b71dea1ad8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x55b71dea1b48 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55b71dea1b48
| | `-ParmVarDecl 0x55b71dea1c58 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x55b71e1ee230 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55b71e1ee310 <col:5>
|-FieldDecl 0x55b71dea0048 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x55b71dea00c8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x55b71dea0130 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x55b71dea0190 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x55b71dea01f8 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x55b71dea0260 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x55b71dea02c0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x55b71dea03e0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x55b71dea0338 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x55b71dea2020 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55b71dea2008 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x55b71dea1ff0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55b71dea1fd0 <col:30, col:37> 'String' (CXXTemporary 0x55b71dea1fd0)
|           `-CXXTemporaryObjectExpr 0x55b71dea1f98 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x55b71dea0588 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x55b71dea04c8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x55b71dea0708 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x55b71dea0640 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x55b71dea08c8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x55b71dea0908 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x55b71dea0908
| `-ParmVarDecl 0x55b71dea09e8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x55b71dea1338 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x55b71dea1338
| `-ParmVarDecl 0x55b71dea1448 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x55b71dea14e8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x55b71dea14e8
| `-ParmVarDecl 0x55b71dea15f8 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x55b71dea1cc8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x55b71dea1cc8
| `-ParmVarDecl 0x55b71dea1dd8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x55b71dea1e60 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x55b71dea1e60

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e1d4f78 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x55b71e1d5188 prev 0x55b71e1d4f78 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b71e1d6270 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55b71e1d6220 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x55b71e1d6200 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x55b71e1d60b0 'type'
|     `-SubstTemplateTypeParmType 0x55b71df6d1e0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55b71dc16000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc15fa8 'T'
|       `-RecordType 0x55b71df6cd30 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55b71df6cc48 'sized_array_memory'
|-FieldDecl 0x55b71e1d6370 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55b71e1d63c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b71e1d63f8 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x55b71e1d5220 'void *' sugar
|   |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dc4c168 'T'
|   `-PointerType 0x55b71d92fce0 'void *'
|     `-BuiltinType 0x55b71d92f4e0 'void'
|-TypedefDecl 0x55b71e1d6488 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x55b71e1d6450 'void *&'
|   `-SubstTemplateTypeParmType 0x55b71e1d5220 'void *' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-PointerType 0x55b71d92fce0 'void *'
|       `-BuiltinType 0x55b71d92f4e0 'void'
|-TypedefDecl 0x55b71e1d6548 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x55b71e1d6510 'void *const &'
|   `-QualType 0x55b71e1d5221 'void *const' const
|     `-SubstTemplateTypeParmType 0x55b71e1d5220 'void *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71d92fce0 'void *'
|         `-BuiltinType 0x55b71d92f4e0 'void'
|-TypedefDecl 0x55b71e1d65d8 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x55b71e1d65a0 'void **'
|   `-SubstTemplateTypeParmType 0x55b71e1d5220 'void *' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-PointerType 0x55b71d92fce0 'void *'
|       `-BuiltinType 0x55b71d92f4e0 'void'
|-TypedefDecl 0x55b71e1d6668 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x55b71e1d6630 'void *const *'
|   `-QualType 0x55b71e1d5221 'void *const' const
|     `-SubstTemplateTypeParmType 0x55b71e1d5220 'void *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71d92fce0 'void *'
|         `-BuiltinType 0x55b71d92f4e0 'void'
|-TypedefDecl 0x55b71e1d7250 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x55b71e1d7200 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x55b71e1d71e0 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x55b71e1d7170 'type'
|     `-SubstTemplateTypeParmType 0x55b71e1d6f30 'void *' sugar
|       |-TemplateTypeParmType 0x55b71dc1e200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc1e1b0 'T'
|       `-PointerType 0x55b71d92fce0 'void *'
|         `-BuiltinType 0x55b71d92f4e0 'void'
|-TypedefDecl 0x55b71e1d72b8 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x55b71e1d6510 'void *const &'
|   `-QualType 0x55b71e1d5221 'void *const' const
|     `-SubstTemplateTypeParmType 0x55b71e1d5220 'void *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71d92fce0 'void *'
|         `-BuiltinType 0x55b71d92f4e0 'void'
|-TypedefDecl 0x55b71e1d7310 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e1d7378 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x55b71e1d65a0 'void **'
|   `-SubstTemplateTypeParmType 0x55b71e1d5220 'void *' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-PointerType 0x55b71d92fce0 'void *'
|       `-BuiltinType 0x55b71d92f4e0 'void'
|-TypedefDecl 0x55b71e1d73e0 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x55b71e1d6630 'void *const *'
|   `-QualType 0x55b71e1d5221 'void *const' const
|     `-SubstTemplateTypeParmType 0x55b71e1d5220 'void *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71d92fce0 'void *'
|         `-BuiltinType 0x55b71d92f4e0 'void'
|-EnumDecl 0x55b71e1d7438 <line:134:5> col:5
| `-EnumConstantDecl 0x55b71e1d7530 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b71e1d7510 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b71dc4d388 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b71dc4d360 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b71dc4d340 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b71e1d75b8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b71e1d7808 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1d7670 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1d7710 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x55b71e1d7ac8 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x55b71e1d79b0 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x55b71e1d7d88 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x55b71e1d7c70 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55b71e1d80d0 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x55b71e1d7fb0 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x55b71e1d83e0 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x55b71e1d82c0 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55b71e1d86d0 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1d8518 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1d8590 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55b71e1d8828 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55b71e1d8908 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1d8960 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1d89a8 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55b71e1d8a58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1d8ab0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1d8b78 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1d8c28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1d8c80 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1d8cc8 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1d8d78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1d8dd0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1d8e18 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1d8ec8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1d8f20 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1d8f68 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1d9018 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1d9070 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1d9098 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e1d9148 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e1d91f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b71e1d93b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1d92a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1d9320 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55b71e1d9508 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1d9478 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1d96b8 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x55b71e1d95c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e1d9770 <col:20>
| `-OptimizeNoneAttr 0x55b71e1d97c8 <col:30>
|-CXXMethodDecl 0x55b71e1d98e8 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55b71e1d97f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e1d99a0 <col:20>
| `-OptimizeNoneAttr 0x55b71e1d99f8 <col:30>
|-CXXMethodDecl 0x55b71e1d9ab0 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1d9a20 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1d9bf8 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e1d9b68 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1d9d28 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x55b71e1d9e58 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x55b71e1d9f28 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x55b71e1d9ff8 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x55b71e1da138 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1da0a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1da280 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e1da1f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1da3c8 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55b71e1da338 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e1da480 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b71e1da580 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b71e1da4f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e1da638 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b71e1da6f8 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x55b71e1da7f8 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x55b71e1da978 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e1da8b8 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x55b71e1db138 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b71e1daa30 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x55b71e1db098 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x55b71e1daf98 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x55b71e1db218 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e1db368 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e1db2d8 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55b71e1db420 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b71e1db668 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1db4e0 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55b71e1db558 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55b71e1db828 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x55b71e1db738 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55b71e1dba78 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x55b71e1db8f0 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55b71e1db968 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55b71e1dbb38 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e1dbd98 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x55b71e1dbca0 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x55b71e1dbe68 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b71e1dbe68

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e1dc060 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55b71e1dc178 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x55b71e1dc208 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x55b71e1dc310 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x55b71e1dc360 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71e1dc2f0 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x55b71e1dc2d0 <col:27> 'int' 4096
|-FieldDecl 0x55b71e1dc388 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x55b71e1dc3f0 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x55b71e1dc5e8 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x55b71e1dc678 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x55b71e1dc838 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x55b71e1dc6d8 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x55b71e1dc750 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x55b71e1dc388 'name' 'String'
| | `-CXXConstructExpr 0x55b71e1e8f98 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55b71e1e8f58 <col:20> 'const String' lvalue ParmVar 0x55b71e1dc6d8 'n' 'const String &'
| |-CXXCtorInitializer Field 0x55b71e1dc3f0 'nsig' 'int'
| | `-IntegerLiteral 0x55b71e1e8ff0 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x55b71e1dc5e8 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x55b71e1e90d8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55b71e1dc678 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x55b71e1e9098 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x55b71e1e9058 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55b71e1dc750 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x55b71e1e9368 <col:42, line:289:9>
|   `-CallExpr 0x55b71e1e9318 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x55b71e1e9300 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55b71e1e92e0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55b71db98be8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55b71e1e9350 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x55b71e1e9228 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x55b71e1e9208 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x55b71e1e91f0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b71e1e91a0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55b71e1dc5e8
|     |     |   `-CXXThisExpr 0x55b71e1e9190 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x55b71e1e91d0 <col:25> 'int' 0
|     |-IntegerLiteral 0x55b71e1e9240 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55b71e1e92c0 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x55b71e1e92a0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x55b71e1e9270 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55b71e1dc5e8 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55b71e1e9260 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x55b71e1dc918 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55b71e1dc918
| `-ParmVarDecl 0x55b71e1dca28 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x55b71e1dcac8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55b71e1dcac8
| `-ParmVarDecl 0x55b71e1dcbd8 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x55b71e1dcc78 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55b71e1dcc78
| `-ParmVarDecl 0x55b71e1dcd88 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x55b71e1dcdf8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55b71e1dcdf8
| `-ParmVarDecl 0x55b71e1dcf08 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x55b71e1dcf90 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55b71e1dcf90

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashMap_ArenaFactory
         0 |   (HashMap_ArenaFactory vtable pointer)
         8 |   class HashMap_Arena **[2] _arenas
        24 |   int [2] _narenas
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashMap_Arena
         0 |   struct HashMap_Arena::Link * _free
         8 |   char * _cur_buffer
        16 |   int _buffer_pos
        20 |   uint32_t _element_size
        24 |   char ** _buffers
        32 |   int _nbuffers
        36 |   int _buffers_cap
        40 |   uint32_t _refcount
        44 |   _Bool _detached
           | [sizeof=48, dsize=45, align=8,
           |  nvsize=45, nvalign=8]

*** Dumping AST Record Layout
         0 | struct HashMap_Arena::Link
         0 |   struct HashMap_Arena::Link * next
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dfee548 <../dummy_inc/click/bighashmap_arena.hh:21:5, line:23:5> line:21:12 referenced struct Link definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b71dfee668 <col:5, col:12> col:12 implicit referenced struct Link
`-FieldDecl 0x55b71dfee738 <line:22:2, col:8> col:8 referenced next 'HashMap_Arena::Link *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap_Arena::Link" = type { %"struct.HashMap_Arena::Link"* }
  NonVirtualBaseLLVMType:%"struct.HashMap_Arena::Link" = type { %"struct.HashMap_Arena::Link"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dfedcc0 prev 0x55b71dfbb298 <../dummy_inc/click/bighashmap_arena.hh:6:1, line:48:1> line:6:7 referenced class HashMap_Arena definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71dfeddb8 <col:1, col:7> col:7 implicit referenced class HashMap_Arena
|-AccessSpecDecl 0x55b71dfede48 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x55b71dfedf28 <line:8:5, col:40> col:5 HashMap_Arena 'void (uint32_t)'
| `-ParmVarDecl 0x55b71dfede80 <col:19, col:28> col:28 element_size 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71dfedff8 <line:10:5, col:31> col:10 referenced use 'void ()'
| `-CompoundStmt 0x55b71dfef2c8 <col:16, col:31>
|   `-UnaryOperator 0x55b71dfef2b0 <col:18, col:27> 'uint32_t':'unsigned int' postfix '++'
|     `-MemberExpr 0x55b71dfef280 <col:18> 'uint32_t':'unsigned int' lvalue ->_refcount 0x55b71dfeebe0
|       `-CXXThisExpr 0x55b71dfef270 <col:18> 'HashMap_Arena *' implicit this
|-CXXMethodDecl 0x55b71dfee0b8 <line:11:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55b71dfee1a8 <line:13:5, col:47> col:10 detached 'bool () const'
| `-CompoundStmt 0x55b71dfef348 <col:27, col:47>
|   `-ReturnStmt 0x55b71dfef338 <col:29, col:36>
|     `-ImplicitCastExpr 0x55b71dfef320 <col:36> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55b71dfef2f0 <col:36> 'const bool' lvalue ->_detached 0x55b71dfeec40
|         `-CXXThisExpr 0x55b71dfef2e0 <col:36> 'const HashMap_Arena *' implicit this
|-CXXMethodDecl 0x55b71dfee268 <line:14:5, col:39> col:10 detach 'void ()'
| `-CompoundStmt 0x55b71dfef3d0 <col:19, col:39>
|   `-BinaryOperator 0x55b71dfef3b0 <col:21, col:33> 'bool' lvalue '='
|     |-MemberExpr 0x55b71dfef370 <col:21> 'bool' lvalue ->_detached 0x55b71dfeec40
|     | `-CXXThisExpr 0x55b71dfef360 <col:21> 'HashMap_Arena *' implicit this
|     `-CXXBoolLiteralExpr 0x55b71dfef3a0 <col:33> 'bool' true
|-CXXMethodDecl 0x55b71dfee330 <line:16:5, col:17> col:11 alloc 'void *()'
|-CXXMethodDecl 0x55b71dfee478 <line:17:5, col:21> col:10 free 'void (void *)'
| `-ParmVarDecl 0x55b71dfee3e8 <col:15, col:20> col:21 'void *'
|-AccessSpecDecl 0x55b71dfee520 <line:19:3, col:10> col:3 private
|-CXXRecordDecl 0x55b71dfee548 <line:21:5, line:23:5> line:21:12 referenced struct Link definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b71dfee668 <col:5, col:12> col:12 implicit referenced struct Link
| `-FieldDecl 0x55b71dfee738 <line:22:2, col:8> col:8 referenced next 'HashMap_Arena::Link *'
|-FieldDecl 0x55b71dfee7b0 <line:24:5, col:11> col:11 referenced _free 'HashMap_Arena::Link *'
|-EnumDecl 0x55b71dfee800 <line:26:5, col:28> col:5
| `-EnumConstantDecl 0x55b71dfee900 <col:12, col:24> col:12 NELEMENTS 'HashMap_Arena::(anonymous enum at ../dummy_inc/click/bighashmap_arena.hh:26:5)'
|   `-ImplicitCastExpr 0x55b71dfee950 <col:24> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71dfee8e0 <col:24> 'int' Int: 127
|       `-IntegerLiteral 0x55b71dfee8c0 <col:24> 'int' 127
|-FieldDecl 0x55b71dfee980 <line:28:5, col:11> col:11 referenced _cur_buffer 'char *'
|-FieldDecl 0x55b71dfee9e8 <line:29:5, col:9> col:9 referenced _buffer_pos 'int'
|-FieldDecl 0x55b71dfeea48 <line:31:5, col:14> col:14 referenced _element_size 'uint32_t':'unsigned int'
|-FieldDecl 0x55b71dfeeab0 <line:33:5, col:12> col:12 _buffers 'char **'
|-FieldDecl 0x55b71dfeeb18 <line:34:5, col:9> col:9 _nbuffers 'int'
|-FieldDecl 0x55b71dfeeb80 <line:35:5, col:9> col:9 _buffers_cap 'int'
|-FieldDecl 0x55b71dfeebe0 <line:37:5, col:14> col:14 referenced _refcount 'uint32_t':'unsigned int'
|-FieldDecl 0x55b71dfeec40 <line:38:5, col:10> col:10 referenced _detached 'bool'
|-CXXConstructorDecl 0x55b71dfeed88 <line:40:5, col:40> col:5 HashMap_Arena 'void (const HashMap_Arena &)'
| `-ParmVarDecl 0x55b71dfeecc8 <col:19, col:39> col:40 'const HashMap_Arena &'
|-CXXDestructorDecl 0x55b71dfeee80 <line:41:5, col:20> col:5 used ~HashMap_Arena 'void () noexcept'
|-CXXMethodDecl 0x55b71dfef068 <line:42:5, col:51> col:20 operator= 'HashMap_Arena &(const HashMap_Arena &)'
| `-ParmVarDecl 0x55b71dfeef70 <col:30, col:50> col:51 'const HashMap_Arena &'
|-CXXMethodDecl 0x55b71dfef138 <line:44:5, col:22> col:11 used hard_alloc 'void *()'
`-FriendDecl 0x55b71dfef230 <line:46:5, col:19> col:12 'struct Link':'HashMap_Arena::Link'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap_Arena = type <{ %"struct.HashMap_Arena::Link"*, i8*, i32, i32, i8**, i32, i32, i32, i8, [3 x i8] }>
  NonVirtualBaseLLVMType:%class.HashMap_Arena.base = type <{ %"struct.HashMap_Arena::Link"*, i8*, i32, i32, i8**, i32, i32, i32, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dfef3e8 prev 0x55b71dfbb350 <../dummy_inc/click/bighashmap_arena.hh:50:1, line:68:1> line:50:7 referenced class HashMap_ArenaFactory definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71dfef4e0 <col:1, col:7> col:7 implicit referenced class HashMap_ArenaFactory
|-AccessSpecDecl 0x55b71dfef570 <col:30, col:36> col:30 public
|-CXXConstructorDecl 0x55b71dfef5d0 <line:52:5, col:26> col:5 HashMap_ArenaFactory 'void ()'
|-CXXDestructorDecl 0x55b71dfef6c0 <line:53:5, col:35> col:13 ~HashMap_ArenaFactory 'void ()' virtual noexcept-unevaluated 0x55b71dfef6c0
|-CXXMethodDecl 0x55b71dfef7c0 <line:55:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55b71dfef880 <line:56:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55b71dfefab8 <line:58:5, col:72> col:27 referenced get_arena 'HashMap_Arena *(uint32_t, HashMap_ArenaFactory *)' static
| |-ParmVarDecl 0x55b71dfef930 <col:37> col:45 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b71dfef9a8 <col:47, col:71> col:70 'HashMap_ArenaFactory *' cinit
|   `-ImplicitCastExpr 0x55b71dff0188 <col:71> 'HashMap_ArenaFactory *' <NullToPointer>
|     `-IntegerLiteral 0x55b71dff0168 <col:71> 'int' 0
|-CXXMethodDecl 0x55b71dfefc68 <line:59:5, col:51> col:28 get_arena_func 'HashMap_Arena *(uint32_t)' virtual
| `-ParmVarDecl 0x55b71dfefb78 <col:43> col:51 'uint32_t':'unsigned int'
|-AccessSpecDecl 0x55b71dfefd10 <line:61:3, col:10> col:3 private
|-FieldDecl 0x55b71dfefe10 <line:63:5, col:30> col:21 _arenas 'HashMap_Arena **[2]'
|-FieldDecl 0x55b71dfefec8 <line:64:5, col:19> col:9 _narenas 'int [2]'
|-VarDecl 0x55b71dfeff28 <line:66:5, col:34> col:34 the_factory 'HashMap_ArenaFactory *' static
`-CXXMethodDecl 0x55b71dfeffe8 <line:50:7> col:7 implicit operator= 'HashMap_ArenaFactory &(const HashMap_ArenaFactory &)' inline default noexcept-unevaluated 0x55b71dfeffe8
  `-ParmVarDecl 0x55b71dff00f8 <col:7> col:7 'const HashMap_ArenaFactory &'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap_ArenaFactory = type { i32 (...)**, [2 x %class.HashMap_Arena**], [2 x i32] }
  NonVirtualBaseLLVMType:%class.HashMap_ArenaFactory = type { i32 (...)**, [2 x %class.HashMap_Arena**], [2 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e1967d8 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71e1968f8 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x55b71e196988 <col:21, col:27> col:21 public
|-EnumDecl 0x55b71e1969b0 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x55b71e196ac8 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x55b71e196aa8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55b71e196a90 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b71e196a70 <col:32> 'int' 1
| `-EnumConstantDecl 0x55b71e196b70 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x55b71e196b50 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55b71e196b38 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55b71e196b18 <col:53> 'int' 1000
|-CXXConstructorDecl 0x55b71e196c20 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x55b71e197158 <col:19, col:21>
|-CXXDestructorDecl 0x55b71e196d10 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x55b71e197168 <col:28, col:30>
|-CXXMethodDecl 0x55b71e196ed0 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x55b71e196e00 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x55b71e196fd8 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x55b71e196fd8
  `-ParmVarDecl 0x55b71e1970e8 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e1976f0 prev 0x55b71dd56f00 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55b71e1977e8 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x55b71e197878 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x55b71e1978e8 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55b71e1979a8 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x55b71e197a68 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x55b71e197b28 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x55b71e197be8 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x55b71e197c88 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x55b71e197de8 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x55b71e197dc8 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x55b71e197da8 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x55b71e197d70 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x55b71e197d50 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x55b71e197d88 <col:42> 'int' 1
|-CXXMethodDecl 0x55b71e197e58 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x55b71e197fc8 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55b71e197f08 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x55b71e198110 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55b71e198080 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x55b71e1981d8 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x55b71e198500 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x55b71e1985c8 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x55b71e198748 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x55b71e198680 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55b71e198810 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x55b71e198a18 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x55b71e1988c0 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x55b71e198940 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x55b71e198b70 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x55b71e198ae0 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x55b71e198cc0 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x55b71e198c30 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x55b71e198e10 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x55b71e198d80 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x55b71e198f60 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x55b71e198ed0 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x55b71e199130 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x55b71e199020 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x55b71e199098 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x55b71e199338 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55b71e1991f0 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x55b71e199268 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55b71e1e5940 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55b71e1e5920 <col:60> 'int' 0
|-CXXMethodDecl 0x55b71e1995c8 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x55b71e1993f8 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55b71e199470 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x55b71e1994e8 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55b71e1e5978 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55b71e1e5958 <col:76> 'int' 0
|-CXXMethodDecl 0x55b71e199868 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55b71e199690 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55b71e199708 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x55b71e199780 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55b71e1e59b0 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55b71e1e5990 <col:84> 'int' 0
|-CXXMethodDecl 0x55b71e199bc0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55b71e199930 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x55b71e1999a8 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x55b71e199a28 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x55b71e199ac8 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55b71e199e70 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55b71e199c90 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x55b71e199d10 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x55b71e199d88 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55b71e19a0d8 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55b71e199f38 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x55b71e199fb8 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x55b71e19a030 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55b71e19a590 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55b71e19a1a0 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55b71e19a220 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x55b71e19a2c8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x55b71e19a440 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55b71e19a650 <col:115> "" ""
|-CXXMethodDecl 0x55b71e19aa10 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55b71e19a6d0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55b71e19a750 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x55b71e19a7c8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x55b71e19a910 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55b71e19aad0 <col:113> "" ""
|-CXXMethodDecl 0x55b71e19ac20 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x55b71e19ab58 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x55b71e19adf0 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x55b71e19ace0 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x55b71e19ad58 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x55b71e19aff8 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x55b71e19aeb0 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x55b71e19af28 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x55b71e19b3f8 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55b71e19b0b8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55b71e19b130 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55b71e19b1a8 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55b71e19b228 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x55b71e19b2a0 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b71e1e59e8 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b71e1e59c8 <col:137> 'int' 0
|-CXXMethodDecl 0x55b71e19b808 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55b71e19b4d0 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x55b71e19b548 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x55b71e19b5c0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55b71e19b640 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x55b71e19b6b8 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b71e1e5a20 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b71e1e5a00 <col:139> 'int' 0
|-CXXMethodDecl 0x55b71e19bcb8 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x55b71e19b8e0 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x55b71e19b958 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x55b71e19b9d0 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b71e19ba48 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55b71e19bac8 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x55b71e1e5a58 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x55b71e1e5a38 <col:133> 'int' 0
| `-ParmVarDecl 0x55b71e19bb48 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x55b71e1e5a90 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55b71e1e5a70 <col:160> 'int' 0
|-CXXMethodDecl 0x55b71e19c050 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55b71e19bd98 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55b71e19be10 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55b71e19be88 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b71e19bf00 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b71e1e5ac8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b71e1e5aa8 <col:116> 'int' 0
|-EnumDecl 0x55b71e19c110 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x55b71e19c210 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x55b71e19c260 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71e19c1f0 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x55b71e19c1d0 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x55b71e19c3e0 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x55b71e19c288 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x55b71e19c300 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x55b71e19ce28 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x55b71e19c4a0 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x55b71e19cd58 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x55b71e19d158 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x55b71e19cee8 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x55b71e19d040 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x55b71e19d2e0 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x55b71e19d218 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x55b71e19d460 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x55b71e19d398 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x55b71e19d670 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x55b71e19d518 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x55b71e19d598 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x55b71e19d7f8 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x55b71e19d730 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x55b71e19d8e8 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x55b71e19d9d8 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x55b71e19db48 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x55b71e19da88 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x55b71e19dcd0 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x55b71e19dc00 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x55b71e19ded8 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x55b71e19dd88 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x55b71e19de08 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x55b71e19e008 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x55b71e19e0f8 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x55b71e19e1b8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x55b71e19e3b8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55b71e19e268 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x55b71e19e2e0 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55b71e1e5b78 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55b71e1e5b60 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x55b71e1e5b48 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55b71e1e5b28 <col:58, col:65> 'String' (CXXTemporary 0x55b71e1e5b28)
|           `-CXXTemporaryObjectExpr 0x55b71e1e5af0 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x55b71e19e588 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55b71e19e478 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55b71e19e4f0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55b71e1e5c28 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55b71e1e5c10 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55b71e1e5bf8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55b71e1e5bd8 <col:71, col:78> 'String' (CXXTemporary 0x55b71e1e5bd8)
|           `-CXXTemporaryObjectExpr 0x55b71e1e5ba0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55b71e19e758 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55b71e19e648 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55b71e19e6c0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55b71e1e5cd8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55b71e1e5cc0 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55b71e1e5ca8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55b71e1e5c88 <col:71, col:78> 'String' (CXXTemporary 0x55b71e1e5c88)
|           `-CXXTemporaryObjectExpr 0x55b71e1e5c50 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55b71e19e928 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55b71e19e818 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x55b71e19e890 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55b71e1e5d88 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55b71e1e5d70 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x55b71e1e5d58 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55b71e1e5d38 <col:70, col:77> 'String' (CXXTemporary 0x55b71e1e5d38)
|           `-CXXTemporaryObjectExpr 0x55b71e1e5d00 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x55b71e19eaa8 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x55b71e19e9e8 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x55b71e19ecc8 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x55b71e19eb60 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x55b71e19ebd8 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x55b71e19edc8 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x55b71e19edc8
|-CXXMethodDecl 0x55b71e19eed0 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55b71e19ef90 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55b71e19f050 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x55b71e19f110 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55b71e19f308 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x55b71e19f1c0 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x55b71e19f238 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x55b71e19f6c0 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x55b71e19f3c8 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x55b71e19f440 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x55b71e19f4b8 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x55b71e19f530 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x55b71e19f5b0 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x55b71e19fa20 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x55b71e19f7a0 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x55b71e19f820 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x55b71e19f8a0 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x55b71e19f920 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x55b71e19fb00 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x55b71e19fc40 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x55b71e19fbb0 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x55b71e19fd90 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55b71e19fcf8 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71e19ff98 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x55b71e19fe48 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x55b71e19fec0 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71e1a00e8 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x55b71e1a0058 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71e1a0230 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x55b71e1a01a0 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x55b71e1a0470 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x55b71e1a02f0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55b71e1a0398 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x55b71e1a05f8 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x55b71e1a0530 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x55b71e1a06a0 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b71e1a07b8 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x55b71e1a0860 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x55b71e1a08c8 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x55b71e1a0980 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x55b71e1e5db0 <col:16, line:150:9>
| |-CXXConstructorDecl 0x55b71e1a0b58 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x55b71e1a0a40 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x55b71e1a0ac0 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x55b71e1a0860 'idx' 'int'
| | | `-ImplicitCastExpr 0x55b71e1e5e00 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55b71e1e5dc0 <col:19> 'int' lvalue ParmVar 0x55b71e1a0a40 'i' 'int'
| | |-CXXCtorInitializer Field 0x55b71e1a08c8 'port' 'int'
| | | `-ImplicitCastExpr 0x55b71e1e5e80 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55b71e1e5e40 <col:28> 'int' lvalue ParmVar 0x55b71e1a0ac0 'p' 'int'
| | `-CompoundStmt 0x55b71e1e5ed0 <col:31, line:153:9>
| |-CXXMethodDecl 0x55b71e1a0d38 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55b71e1a0c48 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55b71e1e60d0 <col:46, line:157:9>
| |   `-ReturnStmt 0x55b71e1e60c0 <line:156:13, col:46>
| |     `-BinaryOperator 0x55b71e1e60a0 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x55b71e1e5fa0 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55b71e1e5f70 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55b71e1e5ef0 <col:20> 'const int' lvalue ->idx 0x55b71e1a0860
| |       | |   `-CXXThisExpr 0x55b71e1e5ee0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55b71e1e5f88 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55b71e1e5f40 <col:27, col:29> 'const int' lvalue .idx 0x55b71e1a0860
| |       |     `-DeclRefExpr 0x55b71e1e5f20 <col:27> 'const Router::Port' lvalue ParmVar 0x55b71e1a0c48 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55b71e1e6080 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x55b71e1e6050 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55b71e1e5fd0 <col:36> 'const int' lvalue ->port 0x55b71e1a08c8
| |         |   `-CXXThisExpr 0x55b71e1e5fc0 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55b71e1e6068 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55b71e1e6020 <col:44, col:46> 'const int' lvalue .port 0x55b71e1a08c8
| |             `-DeclRefExpr 0x55b71e1e6000 <col:44> 'const Router::Port' lvalue ParmVar 0x55b71e1a0c48 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55b71e1a0e80 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55b71e1a0df0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55b71e1e62d8 <col:46, line:160:9>
| |   `-ReturnStmt 0x55b71e1e62c8 <line:159:13, col:46>
| |     `-BinaryOperator 0x55b71e1e62a8 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x55b71e1e61a8 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x55b71e1e6178 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55b71e1e60f8 <col:20> 'const int' lvalue ->idx 0x55b71e1a0860
| |       | |   `-CXXThisExpr 0x55b71e1e60e8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55b71e1e6190 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55b71e1e6148 <col:27, col:29> 'const int' lvalue .idx 0x55b71e1a0860
| |       |     `-DeclRefExpr 0x55b71e1e6128 <col:27> 'const Router::Port' lvalue ParmVar 0x55b71e1a0df0 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55b71e1e6288 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x55b71e1e6258 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55b71e1e61d8 <col:36> 'const int' lvalue ->port 0x55b71e1a08c8
| |         |   `-CXXThisExpr 0x55b71e1e61c8 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55b71e1e6270 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55b71e1e6228 <col:44, col:46> 'const int' lvalue .port 0x55b71e1a08c8
| |             `-DeclRefExpr 0x55b71e1e6208 <col:44> 'const Router::Port' lvalue ParmVar 0x55b71e1a0df0 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55b71e1a0fc8 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55b71e1a0f38 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x55b71e1e6600 <col:45, line:163:9>
| |   `-ReturnStmt 0x55b71e1e65f0 <line:162:13, col:65>
| |     `-BinaryOperator 0x55b71e1e65d0 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x55b71e1e63b0 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55b71e1e6380 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55b71e1e6300 <col:20> 'const int' lvalue ->idx 0x55b71e1a0860
| |       | |   `-CXXThisExpr 0x55b71e1e62f0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55b71e1e6398 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55b71e1e6350 <col:26, col:28> 'const int' lvalue .idx 0x55b71e1a0860
| |       |     `-DeclRefExpr 0x55b71e1e6330 <col:26> 'const Router::Port' lvalue ParmVar 0x55b71e1a0f38 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55b71e1e65b0 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x55b71e1e6590 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x55b71e1e6490 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55b71e1e6460 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55b71e1e63e0 <col:36> 'const int' lvalue ->idx 0x55b71e1a0860
| |           | |   `-CXXThisExpr 0x55b71e1e63d0 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55b71e1e6478 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55b71e1e6430 <col:43, col:45> 'const int' lvalue .idx 0x55b71e1a0860
| |           |     `-DeclRefExpr 0x55b71e1e6410 <col:43> 'const Router::Port' lvalue ParmVar 0x55b71e1a0f38 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55b71e1e6570 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x55b71e1e6540 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55b71e1e64c0 <col:52> 'const int' lvalue ->port 0x55b71e1a08c8
| |             |   `-CXXThisExpr 0x55b71e1e64b0 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55b71e1e6558 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55b71e1e6510 <col:59, col:61> 'const int' lvalue .port 0x55b71e1a08c8
| |                 `-DeclRefExpr 0x55b71e1e64f0 <col:59> 'const Router::Port' lvalue ParmVar 0x55b71e1a0f38 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55b71e1a1110 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55b71e1a1080 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55b71e1e6928 <col:46, line:166:9>
| |   `-ReturnStmt 0x55b71e1e6918 <line:165:13, col:66>
| |     `-BinaryOperator 0x55b71e1e68f8 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x55b71e1e66d8 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55b71e1e66a8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55b71e1e6628 <col:20> 'const int' lvalue ->idx 0x55b71e1a0860
| |       | |   `-CXXThisExpr 0x55b71e1e6618 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55b71e1e66c0 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55b71e1e6678 <col:26, col:28> 'const int' lvalue .idx 0x55b71e1a0860
| |       |     `-DeclRefExpr 0x55b71e1e6658 <col:26> 'const Router::Port' lvalue ParmVar 0x55b71e1a1080 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55b71e1e68d8 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x55b71e1e68b8 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x55b71e1e67b8 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55b71e1e6788 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55b71e1e6708 <col:36> 'const int' lvalue ->idx 0x55b71e1a0860
| |           | |   `-CXXThisExpr 0x55b71e1e66f8 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55b71e1e67a0 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55b71e1e6758 <col:43, col:45> 'const int' lvalue .idx 0x55b71e1a0860
| |           |     `-DeclRefExpr 0x55b71e1e6738 <col:43> 'const Router::Port' lvalue ParmVar 0x55b71e1a1080 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55b71e1e6898 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x55b71e1e6868 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55b71e1e67e8 <col:52> 'const int' lvalue ->port 0x55b71e1a08c8
| |             |   `-CXXThisExpr 0x55b71e1e67d8 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55b71e1e6880 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55b71e1e6838 <col:60, col:62> 'const int' lvalue .port 0x55b71e1a08c8
| |                 `-DeclRefExpr 0x55b71e1e6818 <col:60> 'const Router::Port' lvalue ParmVar 0x55b71e1a1080 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x55b71e1e6940 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x55b71e1e6940
| | `-ParmVarDecl 0x55b71e1e6a58 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x55b71e1e6af8 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x55b71e1e6af8
| | `-ParmVarDecl 0x55b71e1e6c08 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x55b71e1e6ca0 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55b71e1e6f70 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x55b71e1e6f70
| | `-ParmVarDecl 0x55b71e1e7078 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x55b71e1e70e8 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55b71e1e71f8 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x55b71e1e7518 <col:12>
|     |-BinaryOperator 0x55b71e1e73b8 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55b71e1e7370 <col:12> 'int' lvalue ->idx 0x55b71e1a0860
|     | | `-CXXThisExpr 0x55b71e1e7360 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55b71e1e73a0 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55b71e1e7330 <col:12> 'int' xvalue .idx 0x55b71e1a0860
|     |     `-CXXStaticCastExpr 0x55b71e1e7300 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55b71e1e72d0 <col:12> 'Router::Port' lvalue ParmVar 0x55b71e1e71f8 '' 'Router::Port &&'
|     |-BinaryOperator 0x55b71e1e74c0 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55b71e1e7478 <col:12> 'int' lvalue ->port 0x55b71e1a08c8
|     | | `-CXXThisExpr 0x55b71e1e7468 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55b71e1e74a8 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55b71e1e7438 <col:12> 'int' xvalue .port 0x55b71e1a08c8
|     |     `-CXXStaticCastExpr 0x55b71e1e7408 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55b71e1e73d8 <col:12> 'Router::Port' lvalue ParmVar 0x55b71e1e71f8 '' 'Router::Port &&'
|     `-ReturnStmt 0x55b71e1e7508 <col:12>
|       `-UnaryOperator 0x55b71e1e74f0 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b71e1e74e0 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x55b71e1a11d0 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b71e1a12e8 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x55b71e1a14d8 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x55b71e1a1590 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x55b71e1a14d8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55b71e1e6c78 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55b71e1e6db0 <col:22, line:173:9>
| |-CXXConstructorDecl 0x55b71e1a18c8 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x55b71e1a1650 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x55b71e1a16d0 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x55b71e1a1750 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x55b71e1a17d0 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x55b71e1a14d8 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55b71e1e6dc0 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55b71e1e77f8 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x55b71e1e75e8 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x55b71e1e75b0 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x55b71e1e7598 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x55b71e1e7280 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55b71e1e70e8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x55b71e1e6e90 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x55b71e1e6e78 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x55b71e1e6e28 <col:13> 'Router::Port [2]' lvalue ->p 0x55b71e1a14d8
| |   |   | |   `-CXXThisExpr 0x55b71e1e6e18 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x55b71e1e6e58 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x55b71e1e7268 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x55b71e1e6f30 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x55b71e1e6f00 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x55b71e1e6ec0 <col:25> 'int' lvalue ParmVar 0x55b71e1a1750 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x55b71e1e6f18 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x55b71e1e6ee0 <col:33> 'int' lvalue ParmVar 0x55b71e1a17d0 'to_port' 'int'
| |   `-ExprWithCleanups 0x55b71e1e77e0 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x55b71e1e77a8 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55b71e1e7790 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x55b71e1e7770 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55b71e1e70e8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x55b71e1e7678 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x55b71e1e7660 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x55b71e1e7610 <col:13> 'Router::Port [2]' lvalue ->p 0x55b71e1a14d8
| |       | |   `-CXXThisExpr 0x55b71e1e7600 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x55b71e1e7640 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x55b71e1e7758 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x55b71e1e7718 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x55b71e1e76e8 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x55b71e1e76a8 <col:25> 'int' lvalue ParmVar 0x55b71e1a1650 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x55b71e1e7700 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x55b71e1e76c8 <col:35> 'int' lvalue ParmVar 0x55b71e1a16d0 'from_port' 'int'
| |-CXXMethodDecl 0x55b71e1a1a98 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x55b71e1a19a8 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x55b71e1e7db8 <col:45, line:182:9>
| |   |-ParenExpr 0x55b71e1e7c98 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55b71e1e7c68 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55b71e1e7938 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55b71e1e7908 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55b71e1e7870 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55b71e1e7858 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55b71e1e7818 <col:34> 'int' lvalue ParmVar 0x55b71e1a19a8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55b71e1e7838 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55b71e1e78e8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55b71e1e78d0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55b71e1e7890 <col:44> 'int' lvalue ParmVar 0x55b71e1a19a8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55b71e1e78b0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55b71e1e7998 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55b71e1e7978 <col:59> 'int' 0
| |   |   `-CallExpr 0x55b71e1e7bc8 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55b71e1e7bb0 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55b71e1e7b90 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55b71e1e7c08 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55b71e1e7a08 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55b71e1e7c20 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55b71e1e7a30 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55b71e1e7c38 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55b71e1e7a68 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x55b71e1e7c50 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55b71e1e7b78 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55b71e1e7b60 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55b71e1e7b08 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x55b71e1e7da8 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x55b71e1e7d88 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55b71e1e7d58 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55b71e1e7cc8 <col:20> 'Router::Port const[2]' lvalue ->p 0x55b71e1a14d8
| |       |   `-CXXThisExpr 0x55b71e1e7cb8 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55b71e1e7d70 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55b71e1e7cf8 <col:22> 'int' lvalue ParmVar 0x55b71e1a19a8 'i' 'int'
| |-CXXMethodDecl 0x55b71e1a1c48 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x55b71e1a1b58 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x55b71e1e8330 <col:33, line:186:9>
| |   |-ParenExpr 0x55b71e1e8250 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55b71e1e8220 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55b71e1e7ef8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55b71e1e7ec8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55b71e1e7e30 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55b71e1e7e18 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55b71e1e7dd8 <col:34> 'int' lvalue ParmVar 0x55b71e1a1b58 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55b71e1e7df8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55b71e1e7ea8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55b71e1e7e90 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55b71e1e7e50 <col:44> 'int' lvalue ParmVar 0x55b71e1a1b58 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55b71e1e7e70 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55b71e1e7f58 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55b71e1e7f38 <col:59> 'int' 0
| |   |   `-CallExpr 0x55b71e1e8180 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55b71e1e8168 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55b71e1e8148 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55b71e1e81c0 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55b71e1e7fc8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55b71e1e81d8 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55b71e1e7ff0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55b71e1e81f0 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55b71e1e8028 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x55b71e1e8208 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55b71e1e8130 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55b71e1e8118 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55b71e1e80c8 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x55b71e1e8320 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x55b71e1e8300 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55b71e1e82d0 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55b71e1e8280 <col:20> 'Router::Port [2]' lvalue ->p 0x55b71e1a14d8
| |       |   `-CXXThisExpr 0x55b71e1e8270 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55b71e1e82e8 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55b71e1e82b0 <col:22> 'int' lvalue ParmVar 0x55b71e1a1b58 'i' 'int'
| |-CXXMethodDecl 0x55b71e1a1de8 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x55b71e1a1d28 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x55b71e1e8888 <col:52, line:190:9>
| |   `-ReturnStmt 0x55b71e1e8878 <line:189:13, col:51>
| |     `-BinaryOperator 0x55b71e1e8858 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x55b71e1e85b0 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x55b71e1e8598 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x55b71e1e8550 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55b71e1a0d38 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x55b71e1e83c8 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x55b71e1e83b0 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x55b71e1e8360 <col:20> 'Router::Port const[2]' lvalue ->p 0x55b71e1a14d8
| |       | | |   `-CXXThisExpr 0x55b71e1e8350 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x55b71e1e8390 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x55b71e1e8470 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x55b71e1e8458 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x55b71e1e8408 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x55b71e1a14d8
| |       |   |   `-DeclRefExpr 0x55b71e1e83e8 <col:28> 'const Router::Connection' lvalue ParmVar 0x55b71e1a1d28 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x55b71e1e8438 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x55b71e1e8820 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x55b71e1e8808 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x55b71e1e87e8 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55b71e1a0d38 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x55b71e1e8660 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x55b71e1e8648 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x55b71e1e85f8 <col:38> 'Router::Port const[2]' lvalue ->p 0x55b71e1a14d8
| |         | |   `-CXXThisExpr 0x55b71e1e85e8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x55b71e1e8628 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x55b71e1e8708 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x55b71e1e86f0 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x55b71e1e86a0 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55b71e1a14d8
| |           |   `-DeclRefExpr 0x55b71e1e8680 <col:46> 'const Router::Connection' lvalue ParmVar 0x55b71e1a1d28 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x55b71e1e86d0 <col:50> 'int' 1
| `-CXXMethodDecl 0x55b71e1a1f30 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x55b71e1a1ea0 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x55b71e1e8f40 <col:51, line:193:9>
|     `-ReturnStmt 0x55b71e1e8f30 <line:192:13, col:69>
|       `-BinaryOperator 0x55b71e1e8f10 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x55b71e1e8a48 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x55b71e1e8a30 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x55b71e1e8a10 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55b71e1a0fc8 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x55b71e1e8918 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x55b71e1e8900 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x55b71e1e88b0 <col:20> 'Router::Port const[2]' lvalue ->p 0x55b71e1a14d8
|         | | |   `-CXXThisExpr 0x55b71e1e88a0 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x55b71e1e88e0 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x55b71e1e89c0 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x55b71e1e89a8 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x55b71e1e8958 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x55b71e1a14d8
|         |   |   `-DeclRefExpr 0x55b71e1e8938 <col:27> 'const Router::Connection' lvalue ParmVar 0x55b71e1a1ea0 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x55b71e1e8988 <col:31> 'int' 0
|         `-ParenExpr 0x55b71e1e8ef0 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x55b71e1e8ed0 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x55b71e1e8cb8 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x55b71e1e8ca0 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x55b71e1e8c80 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55b71e1a0d38 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x55b71e1e8af8 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x55b71e1e8ae0 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x55b71e1e8a90 <col:38> 'Router::Port const[2]' lvalue ->p 0x55b71e1a14d8
|             | | |   `-CXXThisExpr 0x55b71e1e8a80 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x55b71e1e8ac0 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x55b71e1e8ba0 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x55b71e1e8b88 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x55b71e1e8b38 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55b71e1a14d8
|             |   |   `-DeclRefExpr 0x55b71e1e8b18 <col:46> 'const Router::Connection' lvalue ParmVar 0x55b71e1a1ea0 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x55b71e1e8b68 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x55b71e1e8e98 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x55b71e1e8e80 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55b71e1e8e60 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55b71e1a0fc8 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x55b71e1e8d68 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x55b71e1e8d50 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x55b71e1e8d00 <col:56> 'Router::Port const[2]' lvalue ->p 0x55b71e1a14d8
|               | |   `-CXXThisExpr 0x55b71e1e8cf0 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x55b71e1e8d30 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x55b71e1e8e10 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x55b71e1e8df8 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x55b71e1e8da8 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x55b71e1a14d8
|                 |   `-DeclRefExpr 0x55b71e1e8d88 <col:63> 'const Router::Connection' lvalue ParmVar 0x55b71e1a1ea0 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x55b71e1e8dd8 <col:67> 'int' 1
|-AccessSpecDecl 0x55b71e1a1ff0 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x55b71e1a2018 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x55b71e1a20d0 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x55b71e1a2190 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55b71e1a21e0 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55b71e1a2230 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55b71e1a2280 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x55b71e1a22d0 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x55b71e1a2320 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x55b71e1a2438 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55b71e1a2418 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x55b71e1a2400 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b71e1a23e0 <col:25> 'int' 2
| |-EnumConstantDecl 0x55b71e1a24e0 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55b71e1a24c0 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x55b71e1a24a8 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b71e1a2488 <col:48> 'int' 1
| |-EnumConstantDecl 0x55b71e1a2570 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55b71e1a2550 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x55b71e1a2530 <col:71> 'int' 0
| |-EnumConstantDecl 0x55b71e1a2600 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55b71e1a25e0 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x55b71e1a25c0 <col:30> 'int' 1
| `-EnumConstantDecl 0x55b71e1a2690 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x55b71e1a2670 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x55b71e1a2650 <col:50> 'int' 2
|-FieldDecl 0x55b71e1a26f0 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x55b71e1a2750 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x55b71e1a27b8 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x55b71e1a2858 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x55b71e1a2838 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x55b71e1a2808 <col:30> 'int' 1
|-FieldDecl 0x55b71e1a28f8 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x55b71e1a28d8 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x55b71e1a28a8 <col:33> 'int' 1
|-FieldDecl 0x55b71e1a2998 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x55b71e1a2978 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x55b71e1a2948 <col:32> 'int' 1
|-FieldDecl 0x55b71e1a2a00 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x55b71e1a2a60 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x55b71e1af590 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x55b71e1af690 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55b71e1af790 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55b71e1be730 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x55b71e1be840 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x55b71e1be890 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55b71e1be9a8 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x55b71e1bea48 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x55b71e1beaa8 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x55b71e1beb40 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55b71e1beb40
| | `-ParmVarDecl 0x55b71e1bec58 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x55b71e1becf8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55b71e1becf8
| | `-ParmVarDecl 0x55b71e1bee08 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x55b71e1beea8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55b71e1beea8
| | `-ParmVarDecl 0x55b71e1befb8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x55b71e1bf028 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55b71e1bf028
| | `-ParmVarDecl 0x55b71e1bf138 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x55b71e1bf1c0 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55b71e1bf1c0
|-FieldDecl 0x55b71e1c9cb0 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x55b71e1c9d10 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55b71e1c9e20 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55b71e1ca178 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x55b71e1ca280 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55b71e1d44f0 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x55b71e1d4600 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55b71e1d4700 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55b71e1d4810 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55b71e1d4920 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55b71e1d4a30 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55b71e1d4b40 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x55b71e1d4b90 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x55b71e1d4c90 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x55b71e1d4ce0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71e1d4c70 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x55b71e1d4c50 <col:29> 'int' 256
|-FieldDecl 0x55b71e1d4d40 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x55b71e1d4da8 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x55b71e1d4e10 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x55b71e1d4f10 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55b71e1dbf50 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x55b71e1dbfb0 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x55b71e1dc010 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x55b71e1dc060 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55b71e1dc178 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x55b71e1dc208 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x55b71e1dc310 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x55b71e1dc360 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55b71e1dc2f0 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x55b71e1dc2d0 <col:27> 'int' 4096
| |-FieldDecl 0x55b71e1dc388 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x55b71e1dc3f0 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x55b71e1dc5e8 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x55b71e1dc678 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x55b71e1dc838 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x55b71e1dc6d8 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x55b71e1dc750 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x55b71e1dc388 'name' 'String'
| | | `-CXXConstructExpr 0x55b71e1e8f98 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x55b71e1e8f58 <col:20> 'const String' lvalue ParmVar 0x55b71e1dc6d8 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x55b71e1dc3f0 'nsig' 'int'
| | | `-IntegerLiteral 0x55b71e1e8ff0 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x55b71e1dc5e8 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x55b71e1e90d8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x55b71e1dc678 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x55b71e1e9098 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55b71e1e9058 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55b71e1dc750 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x55b71e1e9368 <col:42, line:289:9>
| |   `-CallExpr 0x55b71e1e9318 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55b71e1e9300 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55b71e1e92e0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55b71db98be8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55b71e1e9350 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x55b71e1e9228 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x55b71e1e9208 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x55b71e1e91f0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x55b71e1e91a0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55b71e1dc5e8
| |     |     |   `-CXXThisExpr 0x55b71e1e9190 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x55b71e1e91d0 <col:25> 'int' 0
| |     |-IntegerLiteral 0x55b71e1e9240 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55b71e1e92c0 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x55b71e1e92a0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x55b71e1e9270 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55b71e1dc5e8 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x55b71e1e9260 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x55b71e1dc918 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55b71e1dc918
| | `-ParmVarDecl 0x55b71e1dca28 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x55b71e1dcac8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55b71e1dcac8
| | `-ParmVarDecl 0x55b71e1dcbd8 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x55b71e1dcc78 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55b71e1dcc78
| | `-ParmVarDecl 0x55b71e1dcd88 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x55b71e1dcdf8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55b71e1dcdf8
| | `-ParmVarDecl 0x55b71e1dcf08 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x55b71e1dcf90 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55b71e1dcf90
|-FieldDecl 0x55b71e1dd080 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x55b71e1dd0e0 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x55b71e1dd140 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x55b71e1dd1a0 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x55b71e1dd200 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x55b71e1dd310 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55b71e1dd410 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55b71e1dd470 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x55b71e1dd5b8 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x55b71e1dd4f8 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x55b71e1dd768 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x55b71e1dd678 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x55b71e1dd8b0 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x55b71e1dd820 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x55b71e1e2d60 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x55b71e1dd968 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x55b71e1dd9e0 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x55b71e1dda60 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x55b71e1ddad8 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x55b71e1ddb50 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b71e1e5da0 <col:57> 'bool' false
|-CXXMethodDecl 0x55b71e1e2ed0 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55b71e1e2e38 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55b71e1e3020 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55b71e1e2f88 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x55b71e1e3170 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55b71e1e30d8 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x55b71e1e32c8 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x55b71e1e3230 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x55b71e1e35f0 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x55b71e1e3380 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x55b71e1e33f8 <col:50> col:54 'bool'
| |-ParmVarDecl 0x55b71e1e3478 <col:56> col:59 'int'
| `-ParmVarDecl 0x55b71e1e34f0 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x55b71e1e3758 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55b71e1e36c0 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x55b71e1e3820 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x55b71e1e38e0 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x55b71e1e3ae0 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x55b71e1e3990 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x55b71e1e3a08 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x55b71e1e3bb0 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x55b71e1e3cf8 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x55b71e1e3c60 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x55b71e1e95a0 <col:42, line:326:5>
|   `-ReturnStmt 0x55b71e1e9590 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x55b71e1e9578 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x55b71e1e9558 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x55b71e1e9528 <col:16, col:45> '<bound member function type>' .back 0x55b71e0b3dc8
|           `-ArraySubscriptExpr 0x55b71e1e94a8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x55b71e1e9478 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b71e1e9390 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x55b71e1ca178
|             |   `-CXXThisExpr 0x55b71e1e9380 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x55b71e1e9490 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x55b71e1e93c0 <col:38> 'bool' lvalue ParmVar 0x55b71e1e3c60 'isout' 'bool'
|-CXXMethodDecl 0x55b71e1e3ec8 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x55b71e1e3db0 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x55b71e1e3e28 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x55b71e1e4020 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x55b71e1e3f88 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x55b71e1e42c8 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x55b71e1e40d8 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x55b71e1e4150 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x55b71e1e41d0 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x55b71e1e44a0 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x55b71e1e4390 <col:30> col:34 'bool'
| `-ParmVarDecl 0x55b71e1e4408 <col:36> col:40 'bool'
|-CXXMethodDecl 0x55b71e1e4628 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x55b71e1e4568 <col:30> col:33 'int'
|-CXXMethodDecl 0x55b71e1e48c0 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x55b71e1e46e8 <col:23> col:26 'int'
| |-ParmVarDecl 0x55b71e1e4760 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x55b71e1e47d8 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x55b71e1e4ad8 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x55b71e1e4988 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x55b71e1e4a00 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x55b71e1e4ce8 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x55b71e1e4ba0 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x55b71e1e4c18 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x55b71e1e4e68 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x55b71e1e4da8 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x55b71e1e5068 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x55b71e1e4f20 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x55b71e1e4f98 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x55b71e1e5240 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b71e1e5128 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x55b71e1e51a8 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x55b71e1e5520 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b71e1e5300 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x55b71e1e5378 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55b71e1e53f8 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x55b71e1e5470 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x55b71e1e5600 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55b71e1e5660 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x55b71e1e58e0 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x55b71e1e57e0 parent 0x55b71dea4550 prev 0x55b71deb31b8 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x55b71e1e56c0 <col:36> col:39 'int'
    `-ParmVarDecl 0x55b71e1e5740 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dea4550 prev 0x55b71dea42d0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71dea4648 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55b71dea46d8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55b71dea4738 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x55b71dea4828 <line:32:5, col:22> col:13 ~Element 'void () noexcept' virtual
|-VarDecl 0x55b71dea4928 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55b71dea4af8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55b71dea49a8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55b71dea4a20 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55b71dea4c88 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55b71dea4bc0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55b71dea4d30 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55b71dea4e68 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55b71dea4da0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55b71dea5008 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55b71dea4f48 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55b71dea51a8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55b71dea50e8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55b71dea5250 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55b71dea5350 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55b71dea5430 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71dea5330 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55b71dea5310 <col:26> 'int' 1
| `-EnumConstantDecl 0x55b71dea53e0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55b71dea5448 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71dea53c0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55b71dea53a0 <col:44> 'int' 2
|-CXXMethodDecl 0x55b71dea5590 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55b71dea5478 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55b71dea54f8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55b71dea56e8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55b71dea5658 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55b71dea5928 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55b71dea57a8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55b71dea5820 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55b71dea59d8 <col:20>
| `-OptimizeNoneAttr 0x55b71dea5a30 <col:30>
|-CXXMethodDecl 0x55b71dea5b38 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55b71dea5a70 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55b71dea5be0 <col:20>
| `-OptimizeNoneAttr 0x55b71dea5c38 <col:30>
|-CXXMethodDecl 0x55b71dea5c88 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55b71dea5d50 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55b71dea5e68 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55b71dea5f30 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55b71dea5fb8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55b71dea6040 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55b71dea60c8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55b71dea6158 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55b71dea6218 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55b71dea62a0 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x55b71dea6328 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55b71dea63b0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55b71dea6438 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55b71dea64c0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55b71dea6550 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55b71dea6610 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55b71dea66a0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55b71dea67f0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55b71dea6758 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55b71dea6980 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55b71dea68b0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55b71dea6c20 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55b71dea6a38 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55b71dea6ab8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55b71dea6b38 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55b71dea6cd8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55b71dea6de0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b71dea7070 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71dea6dc0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55b71dea6da0 <col:33> 'int' 0
| |-EnumConstantDecl 0x55b71dea6e70 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b71dea7088 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71dea6e50 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55b71dea6e30 <col:32> 'int' 20
| |-EnumConstantDecl 0x55b71dea6f00 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b71dea70a0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71dea6ee0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55b71dea6ec0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55b71dea6f90 <line:83:9, col:35> col:9 referenced CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b71dea70b8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71dea6f70 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55b71dea6f50 <col:35> 'int' 100
| `-EnumConstantDecl 0x55b71dea7020 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55b71dea70d0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71dea7000 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55b71dea6fe0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55b71dea7110 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55b71dea7550 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55b71dea73c0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55b71dea7438 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71dea7620 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55b71dea77a0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55b71dea76d0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71dea79a8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55b71dea7858 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55b71dea78d0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71dea7aa8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55b71dea7b48 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55b71dea7c10 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b71dea7ca0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55b71dea7ed0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71dea7c80 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55b71dea7c60 <col:36> 'int' EnumConstant 0x55b71dea7c10 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b71dea7cf0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b71dea7d40 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b71dea7d90 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b71dea7de0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b71dea7e30 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55b71dea7e80 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55b71dea7fb8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55b71dea7ef8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55b71dea8080 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55b71dea8140 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55b71dea8200 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55b71dea82c0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55b71dea83d8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55b71dea84a0 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x55b71dea8620 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55b71dea8550 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55b71dea8748 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55b71dea8948 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55b71dea87f8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55b71dea8878 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55b71deb52a8 <col:54, line:127:5>
|   |-ParenExpr 0x55b71deb5158 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55b71deb5128 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55b71deb4e18 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55b71deb4df0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55b71deb4dd8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55b71deb4dc0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55b71deb4d90 <col:31> 'Router *' lvalue ->_router 0x55b71deb2c70
|   |   |         `-CXXThisExpr 0x55b71deb4d80 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55b71deb4e78 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71deb4e58 <col:48> 'int' 0
|   |   `-CallExpr 0x55b71deb5088 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55b71deb5070 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71deb5050 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71deb50c8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71deb4ee8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55b71deb50e0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71deb4f08 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55b71deb50f8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71deb4f40 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55b71deb5110 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71deb5038 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71deb5020 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71deb4fd8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55b71deb51f0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55b71deb5188 <col:9> 'Router *' lvalue ->_router 0x55b71deb2c70
|   | | `-CXXThisExpr 0x55b71deb5178 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55b71deb51d8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b71deb51b8 <col:19> 'Router *' lvalue ParmVar 0x55b71dea87f8 'r' 'Router *'
|   `-BinaryOperator 0x55b71deb5288 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55b71deb5220 <col:9> 'int' lvalue ->_eindex 0x55b71deb2cd8
|     | `-CXXThisExpr 0x55b71deb5210 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55b71deb5270 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55b71deb5250 <col:19> 'int' lvalue ParmVar 0x55b71dea8878 'eindex' 'int'
|-CXXMethodDecl 0x55b71dea8ad0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55b71dea8a08 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55b71dea8ba0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55b71dea8c68 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55b71dea8d08 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55b71dea8f58 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55b71dea8dd0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55b71dea8e50 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55b71dea9008 <col:20>
| `-OptimizeNoneAttr 0x55b71dea9060 <col:30>
|-CXXMethodDecl 0x55b71dea9168 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55b71dea90a0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55b71dea9210 <col:20>
| `-OptimizeNoneAttr 0x55b71dea9268 <col:30>
|-CXXMethodDecl 0x55b71dea9338 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55b71dea92a8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55b71dea93e0 <col:20>
| `-OptimizeNoneAttr 0x55b71dea9438 <col:30>
|-CXXMethodDecl 0x55b71dea95c8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55b71dea9470 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55b71dea94f0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55b71dea9758 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55b71dea9690 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55b71dea98a8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55b71dea9818 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55b71dea99f8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55b71dea9968 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55b71dea9b48 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55b71dea9ab8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55b71dea9e08 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55b71dea9c00 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55b71dea9c80 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55b71dea9d28 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55b71dea9f40 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55b71deaa000 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55b71deaa2d0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55b71deaa180 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55b71deaa1f8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55b71deaa3f8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55b71deaa5d0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55b71deaa4b0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55b71deaa530 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55b71deaa7b8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55b71deaa698 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55b71deaa718 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55b71deaab28 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55b71deaa878 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55b71deaa8f0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55b71deaa970 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55b71deb4890 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55b71deb4870 <col:106> 'int' 0
| `-ParmVarDecl 0x55b71deaa9e8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b71deb48c8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b71deb48a8 <col:126> 'int' 0
|-CXXMethodDecl 0x55b71deaaea8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b71deaabf8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55b71deaac70 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55b71deaacf0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55b71deaad68 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b71deb4900 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b71deb48e0 <col:114> 'int' 0
|-CXXMethodDecl 0x55b71deab238 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b71deaaf80 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55b71deaaff8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55b71deab078 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55b71deb4918 <col:96> 'int' 0
| `-ParmVarDecl 0x55b71deab0f0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b71deb4958 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b71deb4938 <col:116> 'int' 0
|-CXXMethodDecl 0x55b71deab5b8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55b71deab308 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55b71deab380 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55b71deab400 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55b71deb4990 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55b71deb4970 <col:109> 'int' 0
| `-ParmVarDecl 0x55b71deab478 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b71deb49c8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b71deb49a8 <col:129> 'int' 0
|-CXXMethodDecl 0x55b71deab938 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b71deab688 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55b71deab700 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55b71deab780 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55b71deab7f8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b71deb4a00 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b71deb49e0 <col:117> 'int' 0
|-CXXMethodDecl 0x55b71deabcc8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b71deaba10 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71deaba88 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55b71deabb08 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55b71deb4a18 <col:99> 'int' 0
| `-ParmVarDecl 0x55b71deabb80 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b71deb4a58 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b71deb4a38 <col:119> 'int' 0
|-CXXMethodDecl 0x55b71deac0e8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55b71deabd98 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55b71deabe18 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55b71deabe90 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55b71deabf10 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55b71deb4a90 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55b71deb4a70 <col:108> 'int' 0
| `-ParmVarDecl 0x55b71deabf90 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55b71deb4ac8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55b71deb4aa8 <col:141> 'int' 0
|-CXXMethodDecl 0x55b71deac508 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55b71deac1c0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55b71deac240 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55b71deac2b8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55b71deac338 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55b71deac3b8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55b71deb4ae0 <col:121> 'int' 0
|-CXXMethodDecl 0x55b71deac938 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55b71deac5e8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55b71deac668 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55b71deac6e0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55b71deac760 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55b71deb4b00 <col:98> 'int' 0
| `-ParmVarDecl 0x55b71deac7e0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55b71deb4b20 <col:123> 'int' 0
|-CXXMethodDecl 0x55b71deacc00 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55b71deaca10 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55b71deaca90 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55b71deacb10 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55b71deb4b40 <col:80> 'int' 0
|-EnumDecl 0x55b71deaccb8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55b71deacdc0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b71dead050 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71deacda0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55b71deacd80 <col:42> 'int' 1
| |-EnumConstantDecl 0x55b71deace50 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b71dead068 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71deace30 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55b71deace10 <col:40> 'int' 2
| |-EnumConstantDecl 0x55b71deacee0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b71dead080 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71deacec0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55b71deacea0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55b71deacf70 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b71dead098 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71deacf50 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55b71deacf30 <col:36> 'int' 7
| `-EnumConstantDecl 0x55b71dead000 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55b71dead0b0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71deacfe0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55b71deacfc0 <col:34> 'int' 6
|-CXXMethodDecl 0x55b71dead368 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55b71dead0d8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55b71dead178 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55b71dead1f8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55b71dead270 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55b71deb4bf8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55b71deb4be0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55b71deb4bc8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55b71deb4ba8 <col:98, col:105> 'String' (CXXTemporary 0x55b71deb4ba8)
|           `-CXXTemporaryObjectExpr 0x55b71deb4b70 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55b71dead608 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55b71dead438 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55b71dead4b0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55b71dead528 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55b71deb4ca8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55b71deb4c90 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55b71deb4c78 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55b71deb4c58 <col:94, col:101> 'String' (CXXTemporary 0x55b71deb4c58)
| |         `-CXXTemporaryObjectExpr 0x55b71deb4c20 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55b71deb5490 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55b71deb5408 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55b71deb53d8 <col:9> '<bound member function type>' ->add_task_handlers 0x55b71dead368
|     | `-CXXThisExpr 0x55b71deb53c8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55b71deb5448 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b71deb5348 <col:27> 'Task *' lvalue ParmVar 0x55b71dead438 'task' 'Task *'
|     |-ImplicitCastExpr 0x55b71deb5460 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b71deb5368 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55b71dead4b0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55b71deb5478 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55b71deb5388 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55b71dead000 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55b71deb53a8 <col:62> 'const String' lvalue ParmVar 0x55b71dead528 'prefix' 'const String &'
|-CXXMethodDecl 0x55b71dead818 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55b71dead6d0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55b71dead748 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55b71deb4d58 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55b71deb4d40 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55b71deb4d28 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55b71deb4d08 <col:70, col:77> 'String' (CXXTemporary 0x55b71deb4d08)
| |         `-CXXTemporaryObjectExpr 0x55b71deb4cd0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55b71deb5668 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55b71deb55e0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55b71deb55b0 <col:9> '<bound member function type>' ->add_task_handlers 0x55b71dead368
|     | `-CXXThisExpr 0x55b71deb55a0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55b71deb5620 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b71deb5520 <col:27> 'Task *' lvalue ParmVar 0x55b71dead6d0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55b71deb5638 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55b71deb5540 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55b71deb5650 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55b71deb5560 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55b71dead000 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55b71deb5580 <col:57> 'const String' lvalue ParmVar 0x55b71dead748 'prefix' 'const String &'
|-CXXMethodDecl 0x55b71deadaf8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55b71dead8e0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71dead960 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b71dead9d8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55b71deadda8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55b71deadbc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71deadc48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b71deadcc8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55b71deae0e8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55b71deade78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71deadf50 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b71deadfc8 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55b71deae398 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55b71deae1b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71deae238 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b71deae2b8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55b71deae648 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55b71deae468 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71deae4e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b71deae568 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55b71deae8f8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55b71deae718 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71deae798 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b71deae810 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55b71deaeba8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55b71deae9c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71deaea48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b71deaeac8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55b71deaee58 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55b71deaec78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71deaecf8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b71deaed78 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55b71deaf138 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55b71deaef28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71deaefa8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b71deaf050 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55b71deaf418 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55b71deaf208 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71deaf288 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b71deaf330 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55b71deaf680 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55b71deaf4e8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55b71deaf568 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55b71deaf5e0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55b71deaf928 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55b71deaf750 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55b71deaf7d0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55b71deaf848 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55b71deafbd8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55b71deaf9f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71deafa78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b71deafaf8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55b71deafe88 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55b71deafca8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71deafd28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b71deafda0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55b71deb0138 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55b71deaff58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71deaffd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b71deb0050 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55b71deb0408 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55b71deb0208 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71deb0288 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b71deb0328 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55b71deb0738 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55b71deb04d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b71deb0558 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55b71deb05d0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55b71deb0648 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b71deb4d70 <col:93> 'bool' false
|-CXXMethodDecl 0x55b71deb0920 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b71deb0808 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55b71deb0888 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55b71deb0af8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b71deb09e0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55b71deb0a60 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55b71deb0dd8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b71deb0bb8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55b71deb0c30 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55b71deb0cb0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55b71deb0d28 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55b71deb10c8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b71deb0ea8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55b71deb0f20 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55b71deb0fa0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55b71deb1018 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55b71deb1300 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55b71deb11a0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55b71deb1220 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55b71deb14e8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55b71deb13c8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55b71deb1448 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55b71deb1598 prev 0x55b71dea8d08 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b71deb1690 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55b71deb1720 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55b71deb1798 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55b71deb1858 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55b71deb1920 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55b71deb1a98 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55b71deb19d0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55b71deb1b40 <col:24>
| | `-OptimizeNoneAttr 0x55b71deb1b98 <col:34>
| |-CXXMethodDecl 0x55b71deb1be0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55b71deb1e98 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55b71deb1c90 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55b71deb1d08 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55b71deb1d88 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55b71deb1f60 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55b71deb1f98 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55b71deb2000 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55b71deb2088 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55b71deb23a8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55b71deb2140 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55b71deb21b8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55b71deb2230 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55b71deb22b0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55b71deb24c0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55b71de20a68 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55b71de20a68
| | `-ParmVarDecl 0x55b71de20b78 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55b71de20c18 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55b71de20c18
| | `-ParmVarDecl 0x55b71de20d28 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55b71e1eeaf0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b71deb2538 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55b71deb25d8 <col:38> "" ""
|-CXXMethodDecl 0x55b71deb2668 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55b71deb2708 <col:44> "" ""
|-AccessSpecDecl 0x55b71deb2778 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55b71deb27a0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55b71deb28a0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55b71deb28f0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71deb2880 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55b71deb2860 <col:27> 'int' 4
|-FieldDecl 0x55b71deb29a8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55b71deb2b58 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55b71deb2c10 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55b71deb2c70 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55b71deb2cd8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55b71deb2e28 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55b71deb2d68 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55b71deb2fd8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55b71deb2ee8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55b71deb31b8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55b71deb3098 <col:20> col:23 'int'
| `-ParmVarDecl 0x55b71deb3118 <col:25> col:28 'int'
|-CXXMethodDecl 0x55b71deb3460 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55b71deb3280 <col:23> col:26 'int'
| |-ParmVarDecl 0x55b71deb3300 <col:28> col:31 'int'
| `-ParmVarDecl 0x55b71deb3378 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55b71deb3518 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55b71deb35e0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55b71deb3630 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55b71deb3680 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55b71deb3860 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55b71deb3710 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55b71deb3788 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71deb3b08 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55b71deb3928 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55b71deb39a8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55b71deb3a20 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55b71deb3d28 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55b71deb3bd8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55b71deb3c58 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55b71deb4060 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55b71deb3de8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55b71deb3e68 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55b71deb3ee0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55b71deb3f60 <col:57> col:60 'int'
|-CXXMethodDecl 0x55b71deb4248 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b71deb4130 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55b71deb41b0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55b71deb4398 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55b71deb4308 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55b71deb4718 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55b71deb4458 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55b71deb44d8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55b71deb4550 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55b71deb45d0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55b71deb4830 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashContainer_adapter<class IPRewriterEntry> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |   class IPRewriterEntry ** buckets
         8 |   uint32_t nbuckets
        12 |   uint32_t first_bucket
        16 |   size_t size
        24 |   struct libdivide_u32_t bucket_divider
        24 |     uint32_t magic
        28 |     uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
         0 |     class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
         0 |     class IPRewriterEntry ** buckets
         8 |     uint32_t nbuckets
        12 |     uint32_t first_bucket
        16 |     size_t size
        24 |     struct libdivide_u32_t bucket_divider
        24 |       uint32_t magic
        28 |       uint8_t more
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<56> >
         0 |   vector_memory<class sized_array_memory<56> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterInput>
         0 |   class vector_memory<class sized_array_memory<56> > vm_
         0 |     vector_memory<class sized_array_memory<56> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterBase
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |     class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |       class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |       class IPRewriterEntry ** buckets
       120 |       uint32_t nbuckets
       124 |       uint32_t first_bucket
       128 |       size_t size
       136 |       struct libdivide_u32_t bucket_divider
       136 |         uint32_t magic
       140 |         uint8_t more
       144 |   class Vector<class IPRewriterInput> _input_specs
       144 |     class vector_memory<class sized_array_memory<56> > vm_
       144 |       vector_memory<class sized_array_memory<56> >::type * l_
       152 |       vector_memory::size_type n_
       156 |       vector_memory::size_type capacity_
       160 |   class IPRewriterHeap * _heap
       168 |   uint32_t [2] _timeouts
       176 |   uint32_t _gc_interval_sec
       184 |   class Timer _gc_timer
       184 |     int _schedpos1
       192 |     class Timestamp _expiry_s
       192 |       union Timestamp::rep_t _t
       192 |         int64_t x
       200 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |       TimerCallback callback
       208 |     void * _thunk
       216 |     class Element * _owner
       224 |     class RouterThread * _thread
           | [sizeof=232, dsize=232, align=8,
           |  nvsize=232, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71df4e1f8 <../dummy_inc/click/hashcontainer.hh:13:1, col:29> line:33:7 class HashContainer_adapter definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IPRewriterEntry'
|-CXXRecordDecl 0x55b71df817f8 prev 0x55b71df4e1f8 <col:1, col:7> col:7 implicit class HashContainer_adapter
|-AccessSpecDecl 0x55b71df81888 <col:31, col:37> col:31 public
|-TypedefDecl 0x55b71df81980 <line:34:5, col:34> col:34 referenced key_type 'typename IPRewriterEntry::key_type':'IPFlowID'
| `-ElaboratedType 0x55b71df81930 'typename IPRewriterEntry::key_type' sugar
|   `-TypedefType 0x55b71df81910 'IPRewriterEntry::key_type' sugar
|     |-Typedef 0x55b71df4fd40 'key_type'
|     `-RecordType 0x55b71df448e0 'IPFlowID'
|       `-CXXRecord 0x55b71df44850 'IPFlowID'
|-TypedefDecl 0x55b71df81a50 <line:35:5, col:45> col:45 key_const_reference 'typename IPRewriterEntry::key_const_reference':'const IPFlowID &'
| `-ElaboratedType 0x55b71df81a00 'typename IPRewriterEntry::key_const_reference' sugar
|   `-TypedefType 0x55b71df50780 'IPRewriterEntry::key_const_reference' sugar
|     |-Typedef 0x55b71df4fda8 'key_const_reference'
|     `-LValueReferenceType 0x55b71df46d70 'const IPFlowID &'
|       `-QualType 0x55b71df448e1 'const IPFlowID' const
|         `-RecordType 0x55b71df448e0 'IPFlowID'
|           `-CXXRecord 0x55b71df44850 'IPFlowID'
|-CXXMethodDecl 0x55b71df81c40 <line:36:5, line:38:5> line:36:16 hashnext 'IPRewriterEntry *&(IPRewriterEntry *)' static
| `-ParmVarDecl 0x55b71df81b48 <col:25, col:28> col:28 e 'IPRewriterEntry *'
|-CXXMethodDecl 0x55b71df81e48 <line:39:5, line:41:5> line:39:32 hashkey 'HashContainer_adapter<IPRewriterEntry>::key_const_reference (const IPRewriterEntry *)' static
| `-ParmVarDecl 0x55b71df81d58 <col:40, col:49> col:49 e 'const IPRewriterEntry *'
|-CXXMethodDecl 0x55b71df820a8 <line:42:5, line:44:5> line:42:17 hashkeyeq 'bool (const HashContainer_adapter<IPRewriterEntry>::key_type &, const HashContainer_adapter<IPRewriterEntry>::key_type &)' static
| |-ParmVarDecl 0x55b71df81f58 <col:27, col:43> col:43 a 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
| `-ParmVarDecl 0x55b71df81fd0 <col:46, col:62> col:62 b 'const HashContainer_adapter<IPRewriterEntry>::key_type &'
|-CXXConstructorDecl 0x55b71df86128 <line:33:7> col:7 implicit constexpr HashContainer_adapter 'void (const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x55b71df86128
| `-ParmVarDecl 0x55b71df86238 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
|-CXXConstructorDecl 0x55b71df862d8 <col:7> col:7 implicit constexpr HashContainer_adapter 'void (HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x55b71df862d8
| `-ParmVarDecl 0x55b71df863e8 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'
|-CXXDestructorDecl 0x55b71df865f8 <col:7> col:7 implicit ~HashContainer_adapter 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b71df86738 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(const HashContainer_adapter<IPRewriterEntry> &)' inline default trivial noexcept-unevaluated 0x55b71df86738
| `-ParmVarDecl 0x55b71df86848 <col:7> col:7 'const HashContainer_adapter<IPRewriterEntry> &'
`-CXXMethodDecl 0x55b71df868b8 <col:7> col:7 implicit constexpr operator= 'HashContainer_adapter<IPRewriterEntry> &(HashContainer_adapter<IPRewriterEntry> &&)' inline default trivial noexcept-unevaluated 0x55b71df868b8
  `-ParmVarDecl 0x55b71df869c8 <col:7> col:7 'HashContainer_adapter<IPRewriterEntry> &&'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_adapter = type { i8 }
  NonVirtualBaseLLVMType:%class.HashContainer_adapter = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dca0c70 prev 0x55b71dc173d8 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71dca0d68 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x55b71dca0df8 <col:19, col:25> col:19 public
|-TypedefDecl 0x55b71dca0e30 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55b71da8cf70 'uninitialized_type'
|   `-CXXRecord 0x55b71da8ced8 'uninitialized_type'
|-CXXConstructorDecl 0x55b71dca0ef0 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x55b71dca87b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b71dca8858 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b71dca8818 <col:10> 'int' 0
| `-CompoundStmt 0x55b71dca88a0 <col:13, line:22:5>
|-CXXConstructorDecl 0x55b71dca1040 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x55b71dca0fb0 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x55b71dca87b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b71dca88f0 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x55b71dca88b0 <col:10> 'unsigned int' lvalue ParmVar 0x55b71dca0fb0 'x' 'unsigned int'
| `-CompoundStmt 0x55b71dca8938 <col:13, line:27:5>
|-CXXConstructorDecl 0x55b71dca1198 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x55b71dca1108 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x55b71dca87b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b71dca89a0 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55b71dca8988 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x55b71dca8948 <col:10> 'int' lvalue ParmVar 0x55b71dca1108 'x' 'int'
| `-CompoundStmt 0x55b71dca89e8 <col:13, line:31:5>
|-CXXConstructorDecl 0x55b71dca12f0 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x55b71dca1260 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x55b71dca87b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b71dca8a50 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55b71dca8a38 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x55b71dca89f8 <col:10> 'unsigned long' lvalue ParmVar 0x55b71dca1260 'x' 'unsigned long'
| `-CompoundStmt 0x55b71dca8a98 <col:13, line:35:5>
|-CXXConstructorDecl 0x55b71dca1448 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x55b71dca13b8 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x55b71dca87b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b71dca8b00 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55b71dca8ae8 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x55b71dca8aa8 <col:10> 'long' lvalue ParmVar 0x55b71dca13b8 'x' 'long'
| `-CompoundStmt 0x55b71dca8b48 <col:13, line:39:5>
|-CXXConstructorDecl 0x55b71dca1608 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x55b71dca1518 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x55b71dca87b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b71dca8bc8 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55b71dca8b78 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x55b71dbcf370
| |     `-DeclRefExpr 0x55b71dca8b58 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x55b71dca1518 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x55b71dca8c10 <col:20, line:44:5>
|-CXXConstructorDecl 0x55b71dca68e0 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x55b71dca16d0 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x55b71dca8d78 <col:51, line:56:5>
|   `-BinaryOperator 0x55b71dca8d58 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55b71dca8c30 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x55b71dca87b0
|     | `-CXXThisExpr 0x55b71dca8c20 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x55b71dca8d40 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55b71dca8d28 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x55b71dca8d08 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x55b71dca8cd8 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x55b71dca8cc0 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x55b71dca8c60 <col:47> 'const unsigned char *' lvalue ParmVar 0x55b71dca16d0 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x55b71dca6a30 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x55b71dca69a0 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x55b71dca6bd8 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55b71dca6b18 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x55b71dca8de8 <col:56, line:68:5>
|   `-CStyleCastExpr 0x55b71dca8dc0 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55b71dca8d90 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55b71dca6b18 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x55b71dca6d68 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x55b71dca6ca0 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x55b71dca6e58 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x55b71dca9da8 <col:46, line:83:5>
|   `-ReturnStmt 0x55b71dca9d98 <line:82:2, col:29>
|     `-ExprWithCleanups 0x55b71dca9d80 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x55b71dca9d50 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b71dca9c08 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x55b71dca9af0 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x55b71dca99d8 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x55b71dca8e10 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x55b71dca6f48 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x55b71dca9e58 <col:31, line:88:5>
|   `-ReturnStmt 0x55b71dca9e48 <line:87:2, col:10>
|     `-UnaryOperator 0x55b71dca9e30 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x55b71dca9e18 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55b71dca9e00 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x55b71dca9dd0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55b71dca87b0
|             `-CXXThisExpr 0x55b71dca9dc0 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55b71dca7008 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x55b71dca9ed8 <col:34, line:93:5>
|   `-ReturnStmt 0x55b71dca9ec8 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x55b71dca9eb0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55b71dca9e80 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55b71dca87b0
|         `-CXXThisExpr 0x55b71dca9e70 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x55b71dca70d8 <line:99:5, line:101:5> line:99:12 used operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x55b71dca9f58 <col:38, line:101:5>
|   `-ReturnStmt 0x55b71dca9f48 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x55b71dca9f30 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55b71dca9f00 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55b71dca87b0
|         `-CXXThisExpr 0x55b71dca9ef0 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55b71dca71a8 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x55b71dcaa228 <col:38, line:108:5>
|   `-ReturnStmt 0x55b71dcaa218 <line:107:2, col:58>
|     `-BinaryOperator 0x55b71dcaa1f8 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x55b71dcaa110 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x55b71dcaa0f0 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55b71dcaa0d8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55b71dca9f80 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55b71dca87b0
|       |   |   `-CXXThisExpr 0x55b71dca9f70 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55b71dcaa0b0 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55b71dcaa098 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55b71dcaa018 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55b71dbdc858 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55b71dca9ff8 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x55b71dcaa1d0 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55b71dcaa1b8 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55b71dcaa198 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x55b71dbdc858 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55b71dcaa178 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x55b71dca7268 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x55b71dcaa498 <col:39, line:112:5>
|   `-ReturnStmt 0x55b71dcaa488 <line:111:2, col:56>
|     `-BinaryOperator 0x55b71dcaa468 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x55b71dcaa380 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x55b71dcaa360 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55b71dcaa348 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55b71dcaa250 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55b71dca87b0
|       |   |   `-CXXThisExpr 0x55b71dcaa240 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55b71dcaa320 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55b71dcaa308 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55b71dcaa2e8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55b71dbdc858 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55b71dcaa2c8 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x55b71dcaa440 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55b71dcaa428 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55b71dcaa408 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x55b71dbdc858 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55b71dcaa3e8 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x55b71dca7398 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x55b71dca74a0 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x55b71dca75b0 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x55b71dca76a0 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55b71dca7760 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55b71dca7828 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x55b71dca7a28 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x55b71dca78d8 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x55b71dca7950 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x55b71dca7ba8 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55b71dca7ae8 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x55b71dca7cf0 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55b71dca7c60 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x55b71dca7e98 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55b71dca7da8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55b71dca7fe0 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55b71dca7f50 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55b71dca8128 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55b71dca8098 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55b71dca81f0 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x55b71dca82b0 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x55b71dca8428 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x55b71dca8360 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x55b71dca84f0 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x55b71dca85d8 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55b71dca8680 <col:51> "" ""
|-TypedefDecl 0x55b71dca8720 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x55b71dc17470 'IPAddress'
|   `-CXXRecord 0x55b71dca0c70 'IPAddress'
|-AccessSpecDecl 0x55b71dca8778 <line:150:3, col:10> col:3 private
|-FieldDecl 0x55b71dca87b0 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b71dca8e58 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71dca8f68 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x55b71dca87b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b71df472a8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55b71df47260 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x55b71dca87b0
| |     `-DeclRefExpr 0x55b71df47240 <col:7> 'const IPAddress' lvalue ParmVar 0x55b71dca8f68 '' 'const IPAddress &'
| `-CompoundStmt 0x55b71df472f0 <col:7>
|-CXXConstructorDecl 0x55b71dca9008 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71dca9118 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x55b71dca87b0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b71dca9cf8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55b71dca9cb0 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x55b71dca87b0
| |     `-CXXStaticCastExpr 0x55b71dca9c80 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x55b71dca9c50 <col:7> 'IPAddress' lvalue ParmVar 0x55b71dca9118 '' 'IPAddress &&'
| `-CompoundStmt 0x55b71dca9d40 <col:7>
|-CXXDestructorDecl 0x55b71dca9a08 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b71df47b98 <col:7> col:7 implicit used operator= 'IPAddress &(const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71df47ca8 <col:7> col:7 used 'const IPAddress &'
| `-CompoundStmt 0x55b71df48000 <col:7>
|   |-BinaryOperator 0x55b71df47fa8 <col:7> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x55b71df47f60 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x55b71dca87b0
|   | | `-CXXThisExpr 0x55b71df47f50 <col:7> 'IPAddress *' this
|   | `-ImplicitCastExpr 0x55b71df47f90 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x55b71df47f20 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x55b71dca87b0
|   |     `-DeclRefExpr 0x55b71df47f00 <col:7> 'const IPAddress' lvalue ParmVar 0x55b71df47ca8 '' 'const IPAddress &'
|   `-ReturnStmt 0x55b71df47ff0 <col:7>
|     `-UnaryOperator 0x55b71df47fd8 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b71df47fc8 <col:7> 'IPAddress *' this
`-CXXMethodDecl 0x55b71df47d18 <col:7> col:7 implicit operator= 'IPAddress &(IPAddress &&)' inline default trivial noexcept-unevaluated 0x55b71df47d18
  `-ParmVarDecl 0x55b71df47e28 <col:7> col:7 'IPAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71df44850 <../dummy_inc/click/ipflowid.hh:9:1, line:143:1> line:9:7 referenced class IPFlowID definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71df44968 <col:1, col:7> col:7 implicit referenced class IPFlowID
|-AccessSpecDecl 0x55b71df449f8 <col:18, col:24> col:18 public
|-TypedefDecl 0x55b71df44a30 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55b71da8cf70 'uninitialized_type'
|   `-CXXRecord 0x55b71da8ced8 'uninitialized_type'
|-CXXConstructorDecl 0x55b71df44af0 <line:17:5, line:19:5> line:17:5 used IPFlowID 'void ()'
| |-CXXCtorInitializer Field 0x55b71df469f8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55b71df46fc8 <line:18:4, col:11> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55b71df46a58 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55b71df47030 <col:14, col:21> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55b71df46ab8 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55b71df470c0 <col:31> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x55b71df47080 <col:31> 'int' 0
| |-CXXCtorInitializer Field 0x55b71df46b18 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55b71df47140 <col:42> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x55b71df47100 <col:42> 'int' 0
| `-CompoundStmt 0x55b71df471a0 <col:45, line:19:5>
|-CXXConstructorDecl 0x55b71df44e58 <line:26:5, line:28:5> line:26:5 used IPFlowID 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x55b71df44ba8 <col:14, col:24> col:24 used saddr 'IPAddress'
| |-ParmVarDecl 0x55b71df44c20 <col:31, col:40> col:40 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x55b71df44c98 <col:47, col:57> col:57 used daddr 'IPAddress'
| |-ParmVarDecl 0x55b71df44d10 <col:64, col:73> col:73 used dport 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x55b71df469f8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55b71df47300 <line:27:4, col:16> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x55b71df471f0 <col:11> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x55b71df471b0 <col:11> 'IPAddress' lvalue ParmVar 0x55b71df44ba8 'saddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x55b71df46a58 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55b71df473b0 <col:19, col:31> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x55b71df47398 <col:26> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x55b71df47358 <col:26> 'IPAddress' lvalue ParmVar 0x55b71df44c98 'daddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x55b71df46ab8 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55b71df47448 <col:41> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x55b71df47408 <col:41> 'uint16_t':'unsigned short' lvalue ParmVar 0x55b71df44c20 'sport' 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x55b71df46b18 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55b71df474c8 <col:56> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x55b71df47488 <col:56> 'uint16_t':'unsigned short' lvalue ParmVar 0x55b71df44d10 'dport' 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55b71df47528 <col:63, line:28:5>
|-CXXConstructorDecl 0x55b71df45078 <line:37:5, col:60> col:14 IPFlowID 'void (const Packet *, bool)'
| |-ParmVarDecl 0x55b71df44f30 <col:23, col:37> col:37 p 'const Packet *'
| `-ParmVarDecl 0x55b71df44fa8 <col:40, col:55> col:45 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b71df46f90 <col:55> 'bool' false
|-CXXConstructorDecl 0x55b71df45288 <line:47:5, col:64> col:14 IPFlowID 'void (const click_ip *, bool)'
| |-ParmVarDecl 0x55b71df45140 <col:23, col:39> col:39 iph 'const click_ip *'
| `-ParmVarDecl 0x55b71df451b8 <col:44, col:59> col:49 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b71df46fa0 <col:59> 'bool' false
|-CXXConstructorDecl 0x55b71df453e0 <line:50:5, line:52:5> line:50:12 IPFlowID 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55b71df45350 <col:21, col:47> col:47 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x55b71df469f8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55b71df47538 <col:12> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55b71df46a58 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55b71df47588 <col:12> 'IPAddress' 'void ()'
| `-CompoundStmt 0x55b71df47640 <col:55, line:52:5>
|   `-CStyleCastExpr 0x55b71df47618 <line:51:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55b71df475e8 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55b71df45350 'unused' 'const uninitialized_type &'
|-TypedefDecl 0x55b71df45598 <line:55:5, col:60> col:35 referenced unspecified_bool_type 'IPAddress (IPFlowID::*)() const'
| `-MemberPointerType 0x55b71df45510 'IPAddress (IPFlowID::*)() const'
|   |-RecordType 0x55b71df448e0 'IPFlowID'
|   | `-CXXRecord 0x55b71df44850 'IPFlowID'
|   `-ParenType 0x55b71df454b0 'IPAddress () const' sugar
|     `-FunctionProtoType 0x55b71de6d5d0 'IPAddress () const' const cdecl
|       `-RecordType 0x55b71dc17470 'IPAddress'
|         `-CXXRecord 0x55b71dca0c70 'IPAddress'
|-CXXConversionDecl 0x55b71df456d8 <line:57:5, line:59:5> line:57:5 operator IPAddress (IPFlowID::*)() const 'IPFlowID::unspecified_bool_type () const'
| `-CompoundStmt 0x55b71df478f0 <col:44, line:59:5>
|   `-ReturnStmt 0x55b71df478e0 <line:58:2, col:47>
|     `-ConditionalOperator 0x55b71df478b0 <col:9, col:47> 'IPAddress (IPFlowID::*)() const'
|       |-BinaryOperator 0x55b71df477d8 <col:9, col:19> 'bool' '||'
|       | |-ImplicitCastExpr 0x55b71df477a8 <col:9> 'bool' <IntegralToBoolean>
|       | | `-ImplicitCastExpr 0x55b71df47728 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | |   `-CXXMemberCallExpr 0x55b71df47708 <col:9> 'uint32_t':'unsigned int'
|       | |     `-MemberExpr 0x55b71df476d8 <col:9> '<bound member function type>' .operator unsigned int 0x55b71dca70d8
|       | |       `-MemberExpr 0x55b71df47668 <col:9> 'const IPAddress' lvalue ->_saddr 0x55b71df469f8
|       | |         `-CXXThisExpr 0x55b71df47658 <col:9> 'const IPFlowID *' implicit this
|       | `-ImplicitCastExpr 0x55b71df477c0 <col:19> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55b71df47790 <col:19> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x55b71df47770 <col:19> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x55b71df47740 <col:19> '<bound member function type>' .operator unsigned int 0x55b71dca70d8
|       |         `-MemberExpr 0x55b71df476a8 <col:19> 'const IPAddress' lvalue ->_daddr 0x55b71df46a58
|       |           `-CXXThisExpr 0x55b71df47698 <col:19> 'const IPFlowID *' implicit this
|       |-UnaryOperator 0x55b71df47860 <col:28, col:39> 'IPAddress (IPFlowID::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55b71df47830 <col:29, col:39> 'IPAddress () const' CXXMethod 0x55b71df45800 'saddr' 'IPAddress () const'
|       `-ImplicitCastExpr 0x55b71df47898 <col:47> 'IPAddress (IPFlowID::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x55b71df47878 <col:47> 'int' 0
|-CXXMethodDecl 0x55b71df45800 <line:63:5, line:65:5> line:63:15 used saddr 'IPAddress () const'
| `-CompoundStmt 0x55b71df47988 <col:29, line:65:5>
|   `-ReturnStmt 0x55b71df47978 <line:64:2, col:9>
|     `-CXXConstructExpr 0x55b71df47948 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55b71df47918 <col:9> 'const IPAddress' lvalue ->_saddr 0x55b71df469f8
|         `-CXXThisExpr 0x55b71df47908 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55b71df45918 <line:67:5, line:69:5> line:67:14 used sport 'uint16_t () const'
| `-CompoundStmt 0x55b71df47a08 <col:28, line:69:5>
|   `-ReturnStmt 0x55b71df479f8 <line:68:2, col:9>
|     `-ImplicitCastExpr 0x55b71df479e0 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x55b71df479b0 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x55b71df46ab8
|         `-CXXThisExpr 0x55b71df479a0 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55b71df459d8 <line:71:5, line:73:5> line:71:15 used daddr 'IPAddress () const'
| `-CompoundStmt 0x55b71df47aa0 <col:29, line:73:5>
|   `-ReturnStmt 0x55b71df47a90 <line:72:2, col:9>
|     `-CXXConstructExpr 0x55b71df47a60 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55b71df47a30 <col:9> 'const IPAddress' lvalue ->_daddr 0x55b71df46a58
|         `-CXXThisExpr 0x55b71df47a20 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55b71df45a98 <line:75:5, line:77:5> line:75:14 used dport 'uint16_t () const'
| `-CompoundStmt 0x55b71df47b20 <col:28, line:77:5>
|   `-ReturnStmt 0x55b71df47b10 <line:76:2, col:9>
|     `-ImplicitCastExpr 0x55b71df47af8 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x55b71df47ac8 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x55b71df46b18
|         `-CXXThisExpr 0x55b71df47ab8 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55b71df45bd8 <line:80:5, line:82:5> line:80:10 set_saddr 'void (IPAddress)'
| |-ParmVarDecl 0x55b71df45b48 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x55b71df480c8 <col:33, line:82:5>
|   `-CXXOperatorCallExpr 0x55b71df48090 <line:81:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x55b71df48078 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55b71df47eb0 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55b71df47b98 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x55b71df47b48 <col:2> 'IPAddress' lvalue ->_saddr 0x55b71df469f8
|     | `-CXXThisExpr 0x55b71df47b38 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55b71df47e98 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x55b71df47b78 <col:11> 'IPAddress' lvalue ParmVar 0x55b71df45b48 'a' 'IPAddress'
|-CXXMethodDecl 0x55b71df45d88 <line:85:5, line:87:5> line:85:10 set_sport 'void (uint16_t)'
| |-ParmVarDecl 0x55b71df45c90 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55b71df48178 <col:32, line:87:5>
|   `-BinaryOperator 0x55b71df48158 <line:86:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55b71df480f0 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x55b71df46ab8
|     | `-CXXThisExpr 0x55b71df480e0 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55b71df48140 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55b71df48120 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55b71df45c90 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55b71df45ed0 <line:89:5, line:91:5> line:89:10 set_daddr 'void (IPAddress)'
| |-ParmVarDecl 0x55b71df45e40 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x55b71df48278 <col:33, line:91:5>
|   `-CXXOperatorCallExpr 0x55b71df48240 <line:90:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x55b71df48228 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55b71df48208 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55b71df47b98 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x55b71df481a0 <col:2> 'IPAddress' lvalue ->_daddr 0x55b71df46a58
|     | `-CXXThisExpr 0x55b71df48190 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55b71df481f0 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x55b71df481d0 <col:11> 'IPAddress' lvalue ParmVar 0x55b71df45e40 'a' 'IPAddress'
|-CXXMethodDecl 0x55b71df46018 <line:94:5, line:96:5> line:94:10 set_dport 'void (uint16_t)'
| |-ParmVarDecl 0x55b71df45f88 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55b71df48328 <col:32, line:96:5>
|   `-BinaryOperator 0x55b71df48308 <line:95:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55b71df482a0 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x55b71df46b18
|     | `-CXXThisExpr 0x55b71df48290 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55b71df482f0 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55b71df482d0 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55b71df45f88 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55b71df462e0 <line:103:5, line:108:5> line:103:10 assign 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x55b71df460d0 <col:17, col:27> col:27 used saddr 'IPAddress'
| |-ParmVarDecl 0x55b71df46148 <col:34, col:43> col:43 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x55b71df461c0 <col:50, col:60> col:60 used daddr 'IPAddress'
| |-ParmVarDecl 0x55b71df46238 <col:67, col:76> col:76 used dport 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55b71df48640 <col:83, line:108:5>
|   |-CXXOperatorCallExpr 0x55b71df483f0 <line:104:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x55b71df483d8 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55b71df483b8 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55b71df47b98 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x55b71df48350 <col:2> 'IPAddress' lvalue ->_saddr 0x55b71df469f8
|   | | `-CXXThisExpr 0x55b71df48340 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55b71df483a0 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x55b71df48380 <col:11> 'IPAddress' lvalue ParmVar 0x55b71df460d0 'saddr' 'IPAddress'
|   |-CXXOperatorCallExpr 0x55b71df484d8 <line:105:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x55b71df484c0 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55b71df484a0 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x55b71df47b98 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x55b71df48438 <col:2> 'IPAddress' lvalue ->_daddr 0x55b71df46a58
|   | | `-CXXThisExpr 0x55b71df48428 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55b71df48488 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x55b71df48468 <col:11> 'IPAddress' lvalue ParmVar 0x55b71df461c0 'daddr' 'IPAddress'
|   |-BinaryOperator 0x55b71df48588 <line:106:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55b71df48520 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x55b71df46ab8
|   | | `-CXXThisExpr 0x55b71df48510 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x55b71df48570 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b71df48550 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55b71df46148 'sport' 'uint16_t':'unsigned short'
|   `-BinaryOperator 0x55b71df48620 <line:107:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x55b71df485b8 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x55b71df46b18
|     | `-CXXThisExpr 0x55b71df485a8 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x55b71df48608 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55b71df485e8 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x55b71df46238 'dport' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55b71df463e8 <line:113:5, line:115:5> line:113:14 used reverse 'IPFlowID () const'
| `-CompoundStmt 0x55b71df49178 <col:30, line:115:5>
|   `-ReturnStmt 0x55b71df49168 <line:114:2, col:48>
|     `-ExprWithCleanups 0x55b71df49150 <col:9, col:48> 'IPFlowID'
|       `-CXXConstructExpr 0x55b71df49120 <col:9, col:48> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b71df48cd8 <col:9, col:48> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x55b71df48b48 <col:9, col:48> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x55b71df48ab8 <col:18> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55b71df48690 <col:18> 'const IPAddress' lvalue ->_daddr 0x55b71df46a58
|             |   `-CXXThisExpr 0x55b71df48680 <col:18> 'const IPFlowID *' implicit this
|             |-ImplicitCastExpr 0x55b71df48ae8 <col:26> 'uint16_t':'unsigned short' <LValueToRValue>
|             | `-MemberExpr 0x55b71df486d0 <col:26> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x55b71df46b18
|             |   `-CXXThisExpr 0x55b71df486c0 <col:26> 'const IPFlowID *' implicit this
|             |-CXXConstructExpr 0x55b71df48b00 <col:34> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55b71df48710 <col:34> 'const IPAddress' lvalue ->_saddr 0x55b71df469f8
|             |   `-CXXThisExpr 0x55b71df48700 <col:34> 'const IPFlowID *' implicit this
|             `-ImplicitCastExpr 0x55b71df48b30 <col:42> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-MemberExpr 0x55b71df48750 <col:42> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x55b71df46ab8
|                 `-CXXThisExpr 0x55b71df48740 <col:42> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x55b71df464a8 <line:116:5, col:59> col:21 rev 'IPFlowID () const' inline
| `-DeprecatedAttr 0x55b71df46548 <col:48> "" ""
|-CXXMethodDecl 0x55b71df465d8 <line:122:5, col:34> col:23 hashcode 'hashcode_t () const' inline
|-CXXMethodDecl 0x55b71df46698 <line:127:5, col:22> col:12 used unparse 'String () const'
|-CXXConversionDecl 0x55b71df46768 <line:129:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55b71df46810 <col:51> "" ""
|-CXXMethodDecl 0x55b71df468b0 <line:130:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x55b71df46950 <col:44> "" ""
|-AccessSpecDecl 0x55b71df469c0 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x55b71df469f8 <line:135:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x55b71df46a58 <line:136:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x55b71df46ab8 <line:137:5, col:14> col:14 referenced _sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55b71df46b18 <line:138:5, col:14> col:14 referenced _dport 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55b71df46c50 <line:140:5, col:26> col:9 unparse 'int (char *) const'
| `-ParmVarDecl 0x55b71df46b80 <col:17, col:23> col:23 s 'char *'
|-FriendDecl 0x55b71df46f38 <line:141:5, col:76> col:25
| `-FunctionDecl 0x55b71df46e78 parent 0x55b71d92f488 <col:5, col:76> col:25 operator<< 'StringAccum &(StringAccum &, const IPFlowID &)'
|   |-ParmVarDecl 0x55b71df46d08 <col:36, col:49> col:49 sa 'StringAccum &'
|   `-ParmVarDecl 0x55b71df46da8 <col:53, col:69> col:69 flow_id 'const IPFlowID &'
|-CXXConstructorDecl 0x55b71df48780 <line:9:7> col:7 implicit constexpr IPFlowID 'void (const IPFlowID &)' inline default trivial noexcept-unevaluated 0x55b71df48780
| `-ParmVarDecl 0x55b71df48898 <col:7> col:7 'const IPFlowID &'
|-CXXConstructorDecl 0x55b71df48938 <col:7> col:7 implicit used constexpr IPFlowID 'void (IPFlowID &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71df48a48 <col:7> col:7 used 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55b71df469f8 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55b71df48dc8 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x55b71df48d80 <col:7> 'IPAddress' xvalue ._saddr 0x55b71df469f8
| |     `-CXXStaticCastExpr 0x55b71df48d50 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55b71df48d20 <col:7> 'IPFlowID' lvalue ParmVar 0x55b71df48a48 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55b71df46a58 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55b71df48ec8 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x55b71df48e80 <col:7> 'IPAddress' xvalue ._daddr 0x55b71df46a58
| |     `-CXXStaticCastExpr 0x55b71df48e50 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55b71df48e20 <col:7> 'IPFlowID' lvalue ParmVar 0x55b71df48a48 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55b71df46ab8 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55b71df48fc8 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x55b71df48f80 <col:7> 'uint16_t':'unsigned short' xvalue ._sport 0x55b71df46ab8
| |     `-CXXStaticCastExpr 0x55b71df48f50 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55b71df48f20 <col:7> 'IPFlowID' lvalue ParmVar 0x55b71df48a48 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x55b71df46b18 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x55b71df490b0 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x55b71df49068 <col:7> 'uint16_t':'unsigned short' xvalue ._dport 0x55b71df46b18
| |     `-CXXStaticCastExpr 0x55b71df49038 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x55b71df49008 <col:7> 'IPFlowID' lvalue ParmVar 0x55b71df48a48 '' 'IPFlowID &&'
| `-CompoundStmt 0x55b71df49110 <col:7>
|-CXXDestructorDecl 0x55b71df48b98 <col:7> col:7 implicit referenced ~IPFlowID 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b71df510c0 <col:7> col:7 implicit used operator= 'IPFlowID &(const IPFlowID &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71df511c8 <col:7> col:7 used 'const IPFlowID &'
| `-CompoundStmt 0x55b71df51d28 <col:7>
|   |-CXXMemberCallExpr 0x55b71df519b8 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55b71df51970 <col:7> '<bound member function type>' .operator= 0x55b71df47b98
|   | | `-MemberExpr 0x55b71df51880 <col:7> 'IPAddress' lvalue ->_saddr 0x55b71df469f8
|   | |   `-CXXThisExpr 0x55b71df51870 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x55b71df51940 <col:7> 'const IPAddress' lvalue ._saddr 0x55b71df469f8
|   |   `-DeclRefExpr 0x55b71df51920 <col:7> 'const IPFlowID' lvalue ParmVar 0x55b71df511c8 '' 'const IPFlowID &'
|   |-CXXMemberCallExpr 0x55b71df51b38 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55b71df51af0 <col:7> '<bound member function type>' .operator= 0x55b71df47b98
|   | | `-MemberExpr 0x55b71df51a00 <col:7> 'IPAddress' lvalue ->_daddr 0x55b71df46a58
|   | |   `-CXXThisExpr 0x55b71df519f0 <col:7> 'IPFlowID *' this
|   | `-MemberExpr 0x55b71df51ac0 <col:7> 'const IPAddress' lvalue ._daddr 0x55b71df46a58
|   |   `-DeclRefExpr 0x55b71df51aa0 <col:7> 'const IPFlowID' lvalue ParmVar 0x55b71df511c8 '' 'const IPFlowID &'
|   |-BinaryOperator 0x55b71df51c08 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55b71df51bc0 <col:7> 'uint16_t':'unsigned short' lvalue ->_sport 0x55b71df46ab8
|   | | `-CXXThisExpr 0x55b71df51bb0 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x55b71df51bf0 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x55b71df51b80 <col:7> 'const uint16_t':'const unsigned short' lvalue ._sport 0x55b71df46ab8
|   |     `-DeclRefExpr 0x55b71df51b60 <col:7> 'const IPFlowID' lvalue ParmVar 0x55b71df511c8 '' 'const IPFlowID &'
|   |-BinaryOperator 0x55b71df51cd0 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x55b71df51c88 <col:7> 'uint16_t':'unsigned short' lvalue ->_dport 0x55b71df46b18
|   | | `-CXXThisExpr 0x55b71df51c78 <col:7> 'IPFlowID *' this
|   | `-ImplicitCastExpr 0x55b71df51cb8 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x55b71df51c48 <col:7> 'const uint16_t':'const unsigned short' lvalue ._dport 0x55b71df46b18
|   |     `-DeclRefExpr 0x55b71df51c28 <col:7> 'const IPFlowID' lvalue ParmVar 0x55b71df511c8 '' 'const IPFlowID &'
|   `-ReturnStmt 0x55b71df51d18 <col:7>
|     `-UnaryOperator 0x55b71df51d00 <col:7> 'IPFlowID' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b71df51cf0 <col:7> 'IPFlowID *' this
`-CXXMethodDecl 0x55b71df51238 <col:7> col:7 implicit operator= 'IPFlowID &(IPFlowID &&)' inline default trivial noexcept-unevaluated 0x55b71df51238
  `-ParmVarDecl 0x55b71df51348 <col:7> col:7 'IPFlowID &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  NonVirtualBaseLLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71df4fb80 prev 0x55b71df4c750 <../elements/ip/iprwmapping.hh:16:1, line:65:1> line:16:7 referenced class IPRewriterEntry definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71df4fc78 <col:1, col:7> col:7 implicit referenced class IPRewriterEntry
|-AccessSpecDecl 0x55b71df4fd08 <col:25, col:31> col:25 public
|-TypedefDecl 0x55b71df4fd40 <line:18:5, col:22> col:22 referenced key_type 'IPFlowID'
| `-RecordType 0x55b71df448e0 'IPFlowID'
|   `-CXXRecord 0x55b71df44850 'IPFlowID'
|-TypedefDecl 0x55b71df4fda8 <line:19:5, col:29> col:29 referenced key_const_reference 'const IPFlowID &'
| `-LValueReferenceType 0x55b71df46d70 'const IPFlowID &'
|   `-QualType 0x55b71df448e1 'const IPFlowID' const
|     `-RecordType 0x55b71df448e0 'IPFlowID'
|       `-CXXRecord 0x55b71df44850 'IPFlowID'
|-CXXConstructorDecl 0x55b71df4fe60 <line:21:5, line:22:5> line:21:5 IPRewriterEntry 'void ()'
| |-CXXCtorInitializer Field 0x55b71df508c0 '_flowid' 'IPFlowID'
| | `-CXXConstructExpr 0x55b71df50bc8 <col:5> 'IPFlowID' 'void ()'
| `-CompoundStmt 0x55b71df50c20 <col:23, line:22:5>
|-CXXMethodDecl 0x55b71df50128 <line:24:5, line:30:5> line:24:10 initialize 'void (const IPFlowID &, uint32_t, bool)'
| |-ParmVarDecl 0x55b71df4ff18 <col:21, col:37> col:37 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55b71df4ff90 <col:45, col:54> col:54 used output 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b71df50008 <col:62, col:67> col:67 used direction 'bool'
| `-CompoundStmt 0x55b71df51fe8 <col:78, line:30:5>
|   |-ParenExpr 0x55b71df51040 <line:25:2, col:164> 'void'
|   | `-ConditionalOperator 0x55b71df51010 <col:3, col:163> 'void'
|   |   |-CXXStaticCastExpr 0x55b71df50cd0 <col:3, col:41> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71df50ca0 <col:23, col:33> 'bool' '<='
|   |   |   |-ImplicitCastExpr 0x55b71df50c70 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x55b71df50c30 <col:23> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71df4ff90 'output' 'uint32_t':'unsigned int'
|   |   |   `-ImplicitCastExpr 0x55b71df50c88 <col:33> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x55b71df50c50 <col:33> 'int' 16777215
|   |   |-CXXFunctionalCastExpr 0x55b71df50d30 <col:45, col:52> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71df50d10 <col:51> 'int' 0
|   |   `-CallExpr 0x55b71df50f70 <col:56, col:163> 'void'
|   |     |-ImplicitCastExpr 0x55b71df50f58 <col:56> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71df50f38 <col:56> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71df50fb0 <col:71> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71df50da0 <col:71> 'const char [19]' lvalue "output <= 0xFFFFFF"
|   |     |-ImplicitCastExpr 0x55b71df50fc8 <col:93> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71df50dd0 <col:93> 'const char [30]' lvalue "../elements/ip/iprwmapping.hh"
|   |     |-ImplicitCastExpr 0x55b71df50fe0 <col:126> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71df50e08 <col:126> 'int' 25
|   |     `-ImplicitCastExpr 0x55b71df50ff8 <col:130, col:144> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71df50f20 <col:130, col:144> 'const char [67]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71df50f08 <col:144> 'const char [67]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71df50ea8 <col:144> 'const char [67]' lvalue "void IPRewriterEntry::initialize(const IPFlowID &, uint32_t, bool)"
|   |-CXXOperatorCallExpr 0x55b71df51dd0 <line:26:2, col:12> 'IPFlowID' lvalue
|   | |-ImplicitCastExpr 0x55b71df51db8 <col:10> 'IPFlowID &(*)(const IPFlowID &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55b71df51808 <col:10> 'IPFlowID &(const IPFlowID &) noexcept' lvalue CXXMethod 0x55b71df510c0 'operator=' 'IPFlowID &(const IPFlowID &) noexcept'
|   | |-MemberExpr 0x55b71df51070 <col:2> 'IPFlowID' lvalue ->_flowid 0x55b71df508c0
|   | | `-CXXThisExpr 0x55b71df51060 <col:2> 'IPRewriterEntry *' implicit this
|   | `-DeclRefExpr 0x55b71df510a0 <col:12> 'const IPFlowID' lvalue ParmVar 0x55b71df4ff18 'flowid' 'const IPFlowID &'
|   |-BinaryOperator 0x55b71df51e80 <line:27:2, col:12> 'uint32_t':'unsigned int' lvalue bitfield '='
|   | |-MemberExpr 0x55b71df51e18 <col:2> 'uint32_t':'unsigned int' lvalue bitfield ->_output 0x55b71df50960
|   | | `-CXXThisExpr 0x55b71df51e08 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x55b71df51e68 <col:12> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b71df51e48 <col:12> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71df4ff90 'output' 'uint32_t':'unsigned int'
|   |-BinaryOperator 0x55b71df51f30 <line:28:2, col:15> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55b71df51eb0 <col:2> 'uint8_t':'unsigned char' lvalue ->_direction 0x55b71df509c0
|   | | `-CXXThisExpr 0x55b71df51ea0 <col:2> 'IPRewriterEntry *' implicit this
|   | `-ImplicitCastExpr 0x55b71df51f18 <col:15> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x55b71df51f00 <col:15> 'bool' <LValueToRValue>
|   |     `-DeclRefExpr 0x55b71df51ee0 <col:15> 'bool' lvalue ParmVar 0x55b71df50008 'direction' 'bool'
|   `-BinaryOperator 0x55b71df51fc8 <line:29:2, col:14> 'IPRewriterEntry *' lvalue '='
|     |-MemberExpr 0x55b71df51f60 <col:2> 'IPRewriterEntry *' lvalue ->_hashnext 0x55b71df50a20
|     | `-CXXThisExpr 0x55b71df51f50 <col:2> 'IPRewriterEntry *' implicit this
|     `-ImplicitCastExpr 0x55b71df51fb0 <col:14> 'IPRewriterEntry *' <NullToPointer>
|       `-IntegerLiteral 0x55b71df51f90 <col:14> 'int' 0
|-CXXMethodDecl 0x55b71df50258 <line:32:5, line:34:5> line:32:21 flowid 'const IPFlowID &() const'
| `-CompoundStmt 0x55b71df52070 <col:36, line:34:5>
|   `-ReturnStmt 0x55b71df52060 <line:33:2, col:9>
|     `-MemberExpr 0x55b71df52030 <col:9> 'const IPFlowID' lvalue ->_flowid 0x55b71df508c0
|       `-CXXThisExpr 0x55b71df52020 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55b71df50318 <line:35:5, col:40> col:21 rewritten_flowid 'IPFlowID () const' inline
|-CXXMethodDecl 0x55b71df503d8 <line:37:5, line:39:5> line:37:10 direction 'bool () const'
| `-CompoundStmt 0x55b71df52108 <col:28, line:39:5>
|   `-ReturnStmt 0x55b71df520f8 <line:38:2, col:9>
|     `-ImplicitCastExpr 0x55b71df520e0 <col:9> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55b71df520c8 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55b71df52098 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x55b71df509c0
|           `-CXXThisExpr 0x55b71df52088 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55b71df504a0 <line:41:5, line:43:5> line:41:9 output 'int () const'
| `-CompoundStmt 0x55b71df521a0 <col:24, line:43:5>
|   `-ReturnStmt 0x55b71df52190 <line:42:2, col:9>
|     `-ImplicitCastExpr 0x55b71df52178 <col:9> 'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55b71df52160 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-MemberExpr 0x55b71df52130 <col:9> 'const uint32_t':'const unsigned int' lvalue bitfield ->_output 0x55b71df50960
|           `-CXXThisExpr 0x55b71df52120 <col:9> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55b71df505b8 <line:45:5, line:47:5> line:45:21 flow 'IPRewriterFlow *()'
| `-CompoundStmt 0x55b71df522a8 <col:28, line:47:5>
|   `-ReturnStmt 0x55b71df52298 <line:46:2, col:61>
|     `-CXXReinterpretCastExpr 0x55b71df52268 <col:9, col:61> 'IPRewriterFlow *' reinterpret_cast<class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x55b71df52238 <col:44, col:51> 'IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x55b71df521b8 <col:44> 'IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x55b71df52220 <col:51> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55b71df52208 <col:51> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x55b71df521d8 <col:51> 'uint8_t':'unsigned char' lvalue ->_direction 0x55b71df509c0
|               `-CXXThisExpr 0x55b71df521c8 <col:51> 'IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55b71df506d8 <line:48:5, line:50:5> line:48:27 flow 'const IPRewriterFlow *() const'
| `-CompoundStmt 0x55b71df523b0 <col:40, line:50:5>
|   `-ReturnStmt 0x55b71df523a0 <line:49:2, col:67>
|     `-CXXReinterpretCastExpr 0x55b71df52370 <col:9, col:67> 'const IPRewriterFlow *' reinterpret_cast<const class IPRewriterFlow *> <BitCast>
|       `-BinaryOperator 0x55b71df52340 <col:50, col:57> 'const IPRewriterEntry *' '-'
|         |-CXXThisExpr 0x55b71df522c0 <col:50> 'const IPRewriterEntry *' this
|         `-ImplicitCastExpr 0x55b71df52328 <col:57> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55b71df52310 <col:57> 'uint8_t':'unsigned char' <LValueToRValue>
|             `-MemberExpr 0x55b71df522e0 <col:57> 'const uint8_t':'const unsigned char' lvalue ->_direction 0x55b71df509c0
|               `-CXXThisExpr 0x55b71df522d0 <col:57> 'const IPRewriterEntry *' implicit this
|-CXXMethodDecl 0x55b71df507e8 <line:52:5, line:54:5> line:52:25 used hashkey 'IPRewriterEntry::key_const_reference () const'
| `-CompoundStmt 0x55b71df52418 <col:41, line:54:5>
|   `-ReturnStmt 0x55b71df52408 <line:53:2, col:9>
|     `-MemberExpr 0x55b71df523d8 <col:9> 'const IPFlowID' lvalue ->_flowid 0x55b71df508c0
|       `-CXXThisExpr 0x55b71df523c8 <col:9> 'const IPRewriterEntry *' implicit this
|-AccessSpecDecl 0x55b71df50888 <line:56:3, col:10> col:3 private
|-FieldDecl 0x55b71df508c0 <line:58:5, col:14> col:14 referenced _flowid 'IPFlowID'
|-FieldDecl 0x55b71df50960 <line:59:5, col:24> col:14 referenced _output 'uint32_t':'unsigned int'
| `-ConstantExpr 0x55b71df50940 <col:24> 'int' Int: 24
|   `-IntegerLiteral 0x55b71df50910 <col:24> 'int' 24
|-FieldDecl 0x55b71df509c0 <line:60:5, col:13> col:13 referenced _direction 'uint8_t':'unsigned char'
|-FieldDecl 0x55b71df50a20 <line:61:5, col:22> col:22 referenced _hashnext 'IPRewriterEntry *'
|-FriendDecl 0x55b71df50b70 <line:63:5, col:55> col:12 'class HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|-CXXConstructorDecl 0x55b71dfaa9f8 <line:16:7> col:7 implicit constexpr IPRewriterEntry 'void (const IPRewriterEntry &)' inline default trivial noexcept-unevaluated 0x55b71dfaa9f8
| `-ParmVarDecl 0x55b71dfaab08 <col:7> col:7 'const IPRewriterEntry &'
|-CXXConstructorDecl 0x55b71dfaaba8 <col:7> col:7 implicit constexpr IPRewriterEntry 'void (IPRewriterEntry &&)' inline default trivial noexcept-unevaluated 0x55b71dfaaba8
| `-ParmVarDecl 0x55b71dfaacb8 <col:7> col:7 'IPRewriterEntry &&'
`-CXXDestructorDecl 0x55b71dfaaea8 <col:7> col:7 implicit ~IPRewriterEntry 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  NonVirtualBaseLLVMType:%class.IPRewriterEntry = type { %class.IPFlowID, [3 x i8], i8, %class.IPRewriterEntry* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:24 IsSigned:0 StorageSize:24 StorageOffset:12>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71deda808 <../dummy_inc/click/libdivide.h:95:1, line:98:1> line:95:8 referenced struct libdivide_u32_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71deda928 <col:1, col:8> col:8 implicit struct libdivide_u32_t
|-FieldDecl 0x55b71deda9c8 <line:96:5, col:14> col:14 referenced magic 'uint32_t':'unsigned int'
|-FieldDecl 0x55b71dedaa28 <line:97:5, col:13> col:13 referenced more 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55b71deddb10 <line:95:8> col:8 implicit used libdivide_u32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b71deddf48 <col:8>
|-CXXConstructorDecl 0x55b71deddc18 <col:8> col:8 implicit constexpr libdivide_u32_t 'void (const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55b71deddc18
| `-ParmVarDecl 0x55b71deddd28 <col:8> col:8 'const libdivide_u32_t &'
|-CXXConstructorDecl 0x55b71dedddc8 <col:8> col:8 implicit used constexpr libdivide_u32_t 'void (libdivide_u32_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71dedded8 <col:8> col:8 used 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55b71deda9c8 'magic' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b71dedfdf0 <col:8> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55b71dedfdc0 <col:8> 'uint32_t':'unsigned int' xvalue .magic 0x55b71deda9c8
| |     `-CXXStaticCastExpr 0x55b71dedfd90 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55b71dedfd60 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55b71dedded8 '' 'libdivide_u32_t &&'
| |-CXXCtorInitializer Field 0x55b71dedaa28 'more' 'uint8_t':'unsigned char'
| | `-ImplicitCastExpr 0x55b71dedfec0 <col:8> 'uint8_t':'unsigned char' <LValueToRValue>
| |   `-MemberExpr 0x55b71dedfe90 <col:8> 'uint8_t':'unsigned char' xvalue .more 0x55b71dedaa28
| |     `-CXXStaticCastExpr 0x55b71dedfe60 <col:8> 'libdivide_u32_t' xvalue static_cast<struct libdivide_u32_t &&> <NoOp>
| |       `-DeclRefExpr 0x55b71dedfe30 <col:8> 'libdivide_u32_t' lvalue ParmVar 0x55b71dedded8 '' 'libdivide_u32_t &&'
| `-CompoundStmt 0x55b71dedff10 <col:8>
|-CXXDestructorDecl 0x55b71dee0288 <col:8> col:8 implicit referenced ~libdivide_u32_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b71df86a68 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(const libdivide_u32_t &)' inline default trivial noexcept-unevaluated 0x55b71df86a68
| `-ParmVarDecl 0x55b71df86b78 <col:8> col:8 'const libdivide_u32_t &'
`-CXXMethodDecl 0x55b71df86be8 <col:8> col:8 implicit constexpr operator= 'libdivide_u32_t &(libdivide_u32_t &&)' inline default trivial noexcept-unevaluated 0x55b71df86be8
  `-ParmVarDecl 0x55b71df86cf8 <col:8> col:8 'libdivide_u32_t &&'

Layout: <CGRecordLayout
  LLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  NonVirtualBaseLLVMType:%struct.libdivide_u32_t = type { i32, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71df85740 <../dummy_inc/click/hashcontainer.hh:19:1, line:29:1> line:20:7 class HashContainer_rep definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal has_mutable_fields
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55b71df859d8 prev 0x55b71df85740 <col:1, col:7> col:7 implicit class HashContainer_rep
|-FieldDecl 0x55b71df85b40 <line:21:5, col:9> col:9 buckets 'IPRewriterEntry **'
|-FieldDecl 0x55b71df85b90 <line:22:5, col:14> col:14 nbuckets 'uint32_t':'unsigned int'
|-FieldDecl 0x55b71df85be0 <line:23:5, col:22> col:22 first_bucket 'uint32_t':'unsigned int' mutable
|-FieldDecl 0x55b71df85c30 <line:24:5, col:12> col:12 size 'size_t':'unsigned long'
|-FieldDecl 0x55b71df85c80 <line:25:5, col:21> col:21 bucket_divider 'libdivide_u32_t'
|-FriendDecl 0x55b71df85dd8 <line:26:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55b71df85f28 <line:27:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55b71df86078 <line:28:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x55b71df86470 <line:20:7> col:7 implicit constexpr HashContainer_rep 'void (const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55b71df86470
| `-ParmVarDecl 0x55b71df86588 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55b71df88240 <col:7> col:7 implicit constexpr operator= 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55b71df88240
| `-ParmVarDecl 0x55b71df88348 <col:7> col:7 'const HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXDestructorDecl 0x55b71e1eea00 <col:7> col:7 implicit ~HashContainer_rep 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  NonVirtualBaseLLVMType:%class.HashContainer_rep = type { %class.IPRewriterEntry**, i32, i32, i64, %struct.libdivide_u32_t }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71df4e370 <../dummy_inc/click/hashcontainer.hh:81:1, line:297:1> line:82:7 class HashContainer definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55b71df81678 prev 0x55b71df4e370 <col:1, col:7> col:7 implicit class HashContainer
|-AccessSpecDecl 0x55b71df81708 <col:23, col:29> col:23 public
|-TypedefDecl 0x55b71df821d0 <line:85:5, col:34> col:34 key_type 'typename HashContainer_adapter<IPRewriterEntry>::key_type':'IPFlowID'
| `-ElaboratedType 0x55b71df82180 'typename HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|   `-TypedefType 0x55b71df81f00 'HashContainer_adapter<IPRewriterEntry>::key_type' sugar
|     |-Typedef 0x55b71df81980 'key_type'
|     `-ElaboratedType 0x55b71df81930 'typename IPRewriterEntry::key_type' sugar
|       `-TypedefType 0x55b71df81910 'IPRewriterEntry::key_type' sugar
|         |-Typedef 0x55b71df4fd40 'key_type'
|         `-RecordType 0x55b71df448e0 'IPFlowID'
|           `-CXXRecord 0x55b71df44850 'IPFlowID'
|-TypedefDecl 0x55b71df82268 <line:90:5, col:15> col:15 value_type 'IPRewriterEntry':'IPRewriterEntry'
| `-SubstTemplateTypeParmType 0x55b71df82230 'IPRewriterEntry' sugar
|   |-TemplateTypeParmType 0x55b71dee8370 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dee8318 'T'
|   `-RecordType 0x55b71df4c7e0 'IPRewriterEntry'
|     `-CXXRecord 0x55b71df4fb80 'IPRewriterEntry'
|-TypedefDecl 0x55b71df822c0 <line:93:5, col:20> col:20 referenced size_type 'size_t':'unsigned long'
| `-TypedefType 0x55b71d9dcfb0 'size_t' sugar
|   |-Typedef 0x55b71d99fbe0 'size_t'
|   `-BuiltinType 0x55b71d92f640 'unsigned long'
|-TypedefDecl 0x55b71df82318 <line:96:5, col:22> col:22 referenced bucket_count_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55b71da8d260 'uint32_t' sugar
|   |-Typedef 0x55b71d9984c8 'uint32_t'
|   `-TypedefType 0x55b71d9715a0 '__uint32_t' sugar
|     |-Typedef 0x55b71d971198 '__uint32_t'
|     `-BuiltinType 0x55b71d92f620 'unsigned int'
|-EnumDecl 0x55b71df82370 <line:98:5> col:5
| |-EnumConstantDecl 0x55b71df824a0 <line:102:2, col:42> col:2 max_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
| | `-ConstantExpr 0x55b71df82480 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' Int: 4294967295
| |   `-CStyleCastExpr 0x55b71df82458 <col:21, col:42> 'HashContainer::bucket_count_type':'unsigned int' <NoOp>
| |     `-ImplicitCastExpr 0x55b71df82440 <col:41, col:42> 'HashContainer::bucket_count_type':'unsigned int' <IntegralCast> part_of_explicit_cast
| |       `-UnaryOperator 0x55b71dee89c0 <col:41, col:42> 'int' prefix '-'
| |         `-IntegerLiteral 0x55b71dee89a0 <col:42> 'int' 1
| `-EnumConstantDecl 0x55b71df82510 <line:104:2, col:25> col:2 initial_bucket_count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::(anonymous enum at ../dummy_inc/click/hashcontainer.hh:98:5)'
|   `-ImplicitCastExpr 0x55b71df82560 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71df824f0 <col:25> 'int' Int: 63
|       `-IntegerLiteral 0x55b71dee8a78 <col:25> 'int' 63
|-CXXConstructorDecl 0x55b71df825b0 <line:108:5, col:19> col:5 HashContainer 'void ()'
|-CXXConstructorDecl 0x55b71df82718 <line:111:5, col:47> col:14 used HashContainer 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55b71df82668 <col:28, col:46> col:46 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXDestructorDecl 0x55b71df82800 <line:114:5, col:20> col:5 used ~HashContainer 'void () noexcept'
|-CXXMethodDecl 0x55b71df828f0 <line:118:5, line:120:5> line:118:22 size 'HashContainer::size_type () const' inline
|-CXXMethodDecl 0x55b71df829a0 <line:123:5, line:125:5> line:123:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b71df82a50 <line:128:5, line:130:5> line:128:30 bucket_count 'HashContainer::bucket_count_type () const' inline
|-CXXMethodDecl 0x55b71df82be8 <line:133:5, line:139:5> line:133:22 bucket_size 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55b71df82b20 <col:34, col:52> col:52 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55b71df82e08 <line:142:5, col:51> col:23 bucket 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| `-ParmVarDecl 0x55b71df82d18 <col:30, col:46> col:46 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55b71df82ec0 <line:145:5, line:147:5> line:145:17 unbalanced 'bool () const' inline
|-TypedefDecl 0x55b71df83150 <line:149:5, col:48> col:48 const_iterator 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55b71df830b0 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55b71df83090 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55b71df82f90 'HashContainer_const_iterator'
|-TypedefDecl 0x55b71df83380 <line:150:5, col:42> col:42 referenced iterator 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55b71df832e0 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55b71df832c0 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55b71df831c8 'HashContainer_iterator'
|-CXXMethodDecl 0x55b71df83478 <line:155:5, col:27> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55b71df835c8 <line:157:5, col:35> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55b71df83698 <line:161:5, col:25> col:21 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator ()' inline
|-CXXMethodDecl 0x55b71df83768 <line:163:5, col:33> col:27 end 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator () const' inline
|-CXXMethodDecl 0x55b71df83908 <line:166:5, col:46> col:21 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (HashContainer::bucket_count_type)' inline
| `-ParmVarDecl 0x55b71df83818 <col:27, col:45> col:45 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55b71df83ab8 <line:168:5, col:54> col:27 begin 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (HashContainer::bucket_count_type) const' inline
| `-ParmVarDecl 0x55b71df839c0 <col:33, col:51> col:51 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55b71df83c78 <line:171:5, col:47> col:17 contains 'bool (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55b71df83b80 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55b71df83e38 <line:173:5, col:49> col:22 count 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55b71df83d40 <col:28, col:44> col:44 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55b71df83ff8 <line:183:5, col:45> col:21 used find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55b71df83f00 <col:26, col:42> col:42 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55b71df841b8 <line:185:5, col:53> col:27 find 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::const_iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const' inline
| `-ParmVarDecl 0x55b71df840c0 <col:32, col:48> col:48 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55b71df84310 <line:191:5, col:52> col:21 find_prefer 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55b71df84280 <col:33, col:49> col:49 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55b71df844f8 <line:197:5, col:68> col:43 get 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &) const'
| |-ParmVarDecl 0x55b71df84408 <col:47, col:63> col:63 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
| |-NoInlineAttr 0x55b71df845b0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71df84608 <col:30> Inherited
|-CXXMethodDecl 0x55b71df84828 <line:219:5, col:51> col:17 insert_at 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55b71df84698 <col:27, col:37> col:37 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| `-ParmVarDecl 0x55b71df84710 <col:41, col:44> col:44 element 'IPRewriterEntry *'
|-CXXMethodDecl 0x55b71df84af8 <line:239:5, col:58> col:8 set 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &, IPRewriterEntry *, bool)'
| |-ParmVarDecl 0x55b71df848f8 <col:12, col:22> col:22 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
| |-ParmVarDecl 0x55b71df84970 <col:26, col:29> col:29 element 'IPRewriterEntry *'
| `-ParmVarDecl 0x55b71df849d8 <col:38, col:53> col:43 balance 'bool'
|-CXXMethodDecl 0x55b71df84cc8 <line:249:5, col:57> col:43 set 'IPRewriterEntry *(IPRewriterEntry *)'
| |-ParmVarDecl 0x55b71df84bd0 <col:47, col:50> col:50 element 'IPRewriterEntry *'
| |-NoInlineAttr 0x55b71df84d80 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71df84dd8 <col:30> Inherited
|-CXXMethodDecl 0x55b71df84f08 <line:256:5, col:33> col:15 used erase 'IPRewriterEntry *(HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &)' inline
| `-ParmVarDecl 0x55b71df84e10 <col:21, col:31> col:31 it 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::iterator &'
|-CXXMethodDecl 0x55b71df850c8 <line:262:5, col:40> col:15 erase 'IPRewriterEntry *(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &)' inline
| `-ParmVarDecl 0x55b71df84fd0 <col:21, col:37> col:37 key 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::key_type &'
|-CXXMethodDecl 0x55b71df85180 <line:266:5, col:16> col:10 clear 'void ()'
|-CXXMethodDecl 0x55b71df85448 <line:269:5, col:44> col:17 swap 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline
| `-ParmVarDecl 0x55b71df85358 <col:22, col:43> col:43 x 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55b71df85590 <line:277:5, col:36> col:10 rehash 'void (HashContainer::bucket_count_type)'
| `-ParmVarDecl 0x55b71df85500 <col:17, col:35> col:35 n 'HashContainer::bucket_count_type':'unsigned int'
|-CXXMethodDecl 0x55b71df85648 <line:282:5, line:285:5> line:282:17 balance 'void ()' inline
|-AccessSpecDecl 0x55b71df856f8 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55b71df883d0 <line:289:5, col:29> col:29 _rep 'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_rep<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXConstructorDecl 0x55b71df88628 <line:291:5, col:46> col:5 HashContainer 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x55b71df88518 <col:19, col:45> col:46 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXMethodDecl 0x55b71df889c8 <line:292:5, col:63> col:26 operator= 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)'
| `-ParmVarDecl 0x55b71df88898 <col:36, col:62> col:63 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-FriendDecl 0x55b71df88b88 <line:294:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
`-FriendDecl 0x55b71df88cd8 <line:295:5, col:51> col:12 'class HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  NonVirtualBaseLLVMType:%class.HashContainer = type { %class.HashContainer_rep }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71df8a310 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<56>'
|-CXXRecordDecl 0x55b71df8a4e8 prev 0x55b71df8a310 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55b71df8a578 <col:46, col:52> col:46 public
|-TypedefDecl 0x55b71df8a5a0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71df8c170 <line:13:5, col:31> col:31 type 'typename sized_array_memory<56>::type':'char_array<56>'
| `-ElaboratedType 0x55b71df8c120 'typename sized_array_memory<56>::type' sugar
|   `-TypedefType 0x55b71df8aa50 'sized_array_memory<56>::type' sugar
|     |-Typedef 0x55b71df8a950 'type'
|     `-TemplateSpecializationType 0x55b71df8a8e0 'char_array<56UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55b71df8a7c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|       |   `-SubstNonTypeTemplateParmExpr 0x55b71df8a7a0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55b71df8a780 <col:24> 'unsigned long' 56
|       `-RecordType 0x55b71df8a8c0 'char_array<56>'
|         `-ClassTemplateSpecialization 0x55b71df8a7e0 'char_array'
|-TypedefDecl 0x55b71df8c228 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<56> >::type *'
| `-PointerType 0x55b71df8c1f0 'vector_memory<sized_array_memory<56> >::type *'
|   `-TypedefType 0x55b71df8c1d0 'vector_memory<sized_array_memory<56> >::type' sugar
|     |-Typedef 0x55b71df8c170 'type'
|     `-ElaboratedType 0x55b71df8c120 'typename sized_array_memory<56>::type' sugar
|       `-TypedefType 0x55b71df8aa50 'sized_array_memory<56>::type' sugar
|         |-Typedef 0x55b71df8a950 'type'
|         `-TemplateSpecializationType 0x55b71df8a8e0 'char_array<56UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55b71df8a7c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|           |   `-SubstNonTypeTemplateParmExpr 0x55b71df8a7a0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55b71df8a780 <col:24> 'unsigned long' 56
|           `-RecordType 0x55b71df8a8c0 'char_array<56>'
|             `-ClassTemplateSpecialization 0x55b71df8a7e0 'char_array'
|-CXXMethodDecl 0x55b71df8c3a8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<56> >::type *) const' inline
| `-ParmVarDecl 0x55b71df8c2b8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXConstructorDecl 0x55b71df8c498 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55b71df8c578 <line:23:5, col:20> col:5 ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55b71df8c848 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x55b71df8c750 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<56> > &'
|-CXXMethodDecl 0x55b71df8ca88 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55b71df8c900 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71df8c978 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55b71df8cc58 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55b71df8cb48 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71df8cbc0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55b71df8cdb8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x55b71df8ce88 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x55b71df8d0d8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55b71df8cf48 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x55b71df8cfc0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55b71df8d338 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, vector_memory<sized_array_memory<56> >::iterator)'
| |-ParmVarDecl 0x55b71df8d1a8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x55b71df8d220 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55b71df8d4f8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x55b71df8d408 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55b71df8d6b8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x55b71df8d5c0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55b71df8d770 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71df8d820 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71df8da58 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x55b71df8d8d0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71df8d948 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x55b71df8dcf8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x55b71df8dc00 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<56> > &'
|-FieldDecl 0x55b71df8ddc0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<56> >::type *'
|-FieldDecl 0x55b71df8de10 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55b71df8de60 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.14 = type { %struct.char_array.15*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.14 = type { %struct.char_array.15*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71df88d78 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterInput'
|-CXXRecordDecl 0x55b71df88f88 prev 0x55b71df88d78 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b71df8a280 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterInput>::type':'sized_array_memory<56>'
| `-ElaboratedType 0x55b71df8a230 'typename array_memory<IPRewriterInput>::type' sugar
|   `-TypedefType 0x55b71df8a210 'conditional<true, sized_array_memory<56>, typed_array_memory<IPRewriterInput> >::type' sugar
|     |-Typedef 0x55b71df8a0c0 'type'
|     `-SubstTemplateTypeParmType 0x55b71df89ee0 'sized_array_memory<56>' sugar
|       |-TemplateTypeParmType 0x55b71dc16000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc15fa8 'T'
|       `-RecordType 0x55b71df89a30 'sized_array_memory<56>'
|         `-ClassTemplateSpecialization 0x55b71df89950 'sized_array_memory'
|-FieldDecl 0x55b71df8deb0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterInput>::array_memory_type>':'vector_memory<sized_array_memory<56> >' mutable
|-AccessSpecDecl 0x55b71df8df00 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b71df8df38 <line:118:5, col:15> col:15 value_type 'IPRewriterInput':'IPRewriterInput'
| `-SubstTemplateTypeParmType 0x55b71df89020 'IPRewriterInput' sugar
|   |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dc4c168 'T'
|   `-RecordType 0x55b71df4c890 'IPRewriterInput'
|     `-CXXRecord 0x55b71df6a150 'IPRewriterInput'
|-TypedefDecl 0x55b71df8dff8 <line:119:5, col:16> col:16 reference 'IPRewriterInput &'
| `-LValueReferenceType 0x55b71df8dfc0 'IPRewriterInput &'
|   `-SubstTemplateTypeParmType 0x55b71df89020 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71df4c890 'IPRewriterInput'
|       `-CXXRecord 0x55b71df6a150 'IPRewriterInput'
|-TypedefDecl 0x55b71df8e0b8 <line:120:5, col:22> col:22 const_reference 'const IPRewriterInput &'
| `-LValueReferenceType 0x55b71df8e080 'const IPRewriterInput &'
|   `-QualType 0x55b71df89021 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55b71df89020 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71df4c890 'IPRewriterInput'
|         `-CXXRecord 0x55b71df6a150 'IPRewriterInput'
|-TypedefDecl 0x55b71df8e148 <line:121:5, col:16> col:16 pointer 'IPRewriterInput *'
| `-PointerType 0x55b71df8e110 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x55b71df89020 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71df4c890 'IPRewriterInput'
|       `-CXXRecord 0x55b71df6a150 'IPRewriterInput'
|-TypedefDecl 0x55b71df8e208 <line:122:5, col:22> col:22 const_pointer 'const IPRewriterInput *'
| `-PointerType 0x55b71df8e1d0 'const IPRewriterInput *'
|   `-QualType 0x55b71df89021 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55b71df89020 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71df4c890 'IPRewriterInput'
|         `-CXXRecord 0x55b71df6a150 'IPRewriterInput'
|-TypedefDecl 0x55b71df8ee60 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterInput>::type':'const IPRewriterInput &'
| `-ElaboratedType 0x55b71df8ee10 'typename fast_argument<IPRewriterInput>::type' sugar
|   `-TypedefType 0x55b71df8edf0 'fast_argument<IPRewriterInput, true>::type' sugar
|     |-Typedef 0x55b71df8ed28 'type'
|     `-LValueReferenceType 0x55b71df8ecf0 'const IPRewriterInput &'
|       `-QualType 0x55b71df8ea91 'const IPRewriterInput' const
|         `-SubstTemplateTypeParmType 0x55b71df8ea90 'IPRewriterInput' sugar
|           |-TemplateTypeParmType 0x55b71dc1dad0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b71dc1da78 'T'
|           `-RecordType 0x55b71df4c890 'IPRewriterInput'
|             `-CXXRecord 0x55b71df6a150 'IPRewriterInput'
|-TypedefDecl 0x55b71df8eec8 <line:126:5, col:22> col:22 const_access_type 'const IPRewriterInput &'
| `-LValueReferenceType 0x55b71df8e080 'const IPRewriterInput &'
|   `-QualType 0x55b71df89021 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55b71df89020 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71df4c890 'IPRewriterInput'
|         `-CXXRecord 0x55b71df6a150 'IPRewriterInput'
|-TypedefDecl 0x55b71df8ef20 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71df8ef88 <line:130:5, col:16> col:16 iterator 'IPRewriterInput *'
| `-PointerType 0x55b71df8e110 'IPRewriterInput *'
|   `-SubstTemplateTypeParmType 0x55b71df89020 'IPRewriterInput' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71df4c890 'IPRewriterInput'
|       `-CXXRecord 0x55b71df6a150 'IPRewriterInput'
|-TypedefDecl 0x55b71df8eff0 <line:131:5, col:22> col:22 const_iterator 'const IPRewriterInput *'
| `-PointerType 0x55b71df8e1d0 'const IPRewriterInput *'
|   `-QualType 0x55b71df89021 'const IPRewriterInput' const
|     `-SubstTemplateTypeParmType 0x55b71df89020 'IPRewriterInput' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71df4c890 'IPRewriterInput'
|         `-CXXRecord 0x55b71df6a150 'IPRewriterInput'
|-EnumDecl 0x55b71df8f048 <line:134:5> col:5
| `-EnumConstantDecl 0x55b71df8f140 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterInput>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b71df8f120 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b71dc4d388 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b71dc4d360 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b71dc4d340 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b71df8f1c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b71df8f458 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71df8f280 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71df8f320 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXConstructorDecl 0x55b71df8f718 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55b71df8f600 <col:19, col:36> col:36 x 'const Vector<IPRewriterInput> &'
|-CXXConstructorDecl 0x55b71df8f9d8 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x55b71df8f8c0 <col:19, col:31> col:31 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x55b71df8fd20 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterInput> &(const Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55b71df8fc00 <col:33, col:50> col:50 x 'const Vector<IPRewriterInput> &'
|-CXXMethodDecl 0x55b71df90030 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterInput> &(Vector<IPRewriterInput> &&)' inline
| `-ParmVarDecl 0x55b71df8ff10 <col:33, col:45> col:45 x 'Vector<IPRewriterInput> &&'
|-CXXMethodDecl 0x55b71df91c50 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterInput> &(Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71df90168 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71df91b10 <col:43, col:69> col:63 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55b71df91da8 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x55b71df91e88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71df91ee0 <col:30> Inherited
|-CXXMethodDecl 0x55b71df91f28 <line:151:5, col:53> col:49 end 'Vector<IPRewriterInput>::iterator ()'
| |-NoInlineAttr 0x55b71df91fd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71df92030 <col:30> Inherited
|-CXXMethodDecl 0x55b71df920f8 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55b71df921a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71df92200 <col:30> Inherited
|-CXXMethodDecl 0x55b71df92248 <line:153:5, col:61> col:55 end 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55b71df922f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71df92350 <col:30> Inherited
|-CXXMethodDecl 0x55b71df92398 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55b71df92448 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71df924a0 <col:30> Inherited
|-CXXMethodDecl 0x55b71df924e8 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterInput>::const_iterator () const'
| |-NoInlineAttr 0x55b71df92598 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71df925f0 <col:30> Inherited
|-CXXMethodDecl 0x55b71df92618 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71df926c8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71df92778 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b71df92938 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71df92828 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71df928a0 <col:37, col:63> col:57 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55b71df92a88 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b71df929f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71df92c38 <line:163:5, col:65> col:43 operator[] 'IPRewriterInput &(Vector::size_type)'
| |-ParmVarDecl 0x55b71df92b40 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71df92cf0 <col:20>
| `-OptimizeNoneAttr 0x55b71df92d48 <col:30>
|-CXXMethodDecl 0x55b71df92e68 <line:164:5, col:73> col:49 used operator[] 'const IPRewriterInput &(Vector::size_type) const'
| |-ParmVarDecl 0x55b71df92d70 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71df92f20 <col:20>
| `-OptimizeNoneAttr 0x55b71df92f78 <col:30>
|-CXXMethodDecl 0x55b71df93030 <line:165:5, col:29> col:15 at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71df92fa0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71df93178 <line:166:5, col:37> col:21 at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71df930e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71df932a8 <line:167:5, col:21> col:15 front 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x55b71df933d8 <line:168:5, col:29> col:21 front 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x55b71df934a8 <line:169:5, col:20> col:15 back 'IPRewriterInput &()' inline
|-CXXMethodDecl 0x55b71df93578 <line:170:5, col:28> col:21 back 'const IPRewriterInput &() const' inline
|-CXXMethodDecl 0x55b71df936b8 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterInput &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71df93628 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71df93800 <line:173:5, col:47> col:21 unchecked_at 'const IPRewriterInput &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71df93770 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71df93948 <line:174:5, col:59> col:15 at_u 'IPRewriterInput &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b71df938b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71df93a00 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b71df93b00 <line:175:5, col:71> col:21 at_u 'const IPRewriterInput &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b71df93a70 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71df93bb8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b71df93c78 <line:177:5, col:20> col:15 data 'IPRewriterInput *()' inline
|-CXXMethodDecl 0x55b71df93d78 <line:178:5, col:28> col:21 data 'const IPRewriterInput *() const' inline
|-CXXMethodDecl 0x55b71df93f28 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71df93e38 <col:27, col:47> col:47 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-FunctionTemplateDecl 0x55b71df946e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b71df93fe0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterInput>':'fast_argument<IPRewriterInput, true>'
| `-CXXMethodDecl 0x55b71df94648 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterInput &&)' inline
|   `-ParmVarDecl 0x55b71df94548 <col:58, col:62> col:62 v 'IPRewriterInput &&'
|-CXXMethodDecl 0x55b71df947c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71df94918 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterInput>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71df94888 <col:28, col:48> col:48 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55b71df949d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b71df94c18 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71df94a90 <col:28, col:37> col:37 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x55b71df94b08 <col:41, col:61> col:61 v 'Vector<IPRewriterInput>::value_argument_type':'const IPRewriterInput &'
|-CXXMethodDecl 0x55b71df94dd8 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator)' inline
| `-ParmVarDecl 0x55b71df94ce8 <col:27, col:36> col:36 it 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x55b71df95028 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterInput>::iterator (Vector<IPRewriterInput>::iterator, Vector<IPRewriterInput>::iterator)' inline
| |-ParmVarDecl 0x55b71df94ea0 <col:27, col:36> col:36 a 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
| `-ParmVarDecl 0x55b71df94f18 <col:39, col:48> col:48 b 'Vector<IPRewriterInput>::iterator':'IPRewriterInput *'
|-CXXMethodDecl 0x55b71df950e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71df95348 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterInput> &)' inline
| `-ParmVarDecl 0x55b71df95250 <col:22, col:33> col:33 x 'Vector<IPRewriterInput> &'
`-CXXDestructorDecl 0x55b71df95418 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory.14 }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory.14 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterHeap
         0 |   Vector<class IPRewriterFlow *> [2] _heaps
        32 |   int32_t _capacity
        36 |   uint32_t _use_count
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71df6c000 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterFlow *'
|-CXXRecordDecl 0x55b71df6c200 prev 0x55b71df6c000 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b71df6d580 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterFlow *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55b71df6d530 'typename array_memory<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x55b71df6d510 'conditional<true, sized_array_memory<8>, typed_array_memory<IPRewriterFlow *> >::type' sugar
|     |-Typedef 0x55b71df6d3c0 'type'
|     `-SubstTemplateTypeParmType 0x55b71df6d1e0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55b71dc16000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc15fa8 'T'
|       `-RecordType 0x55b71df6cd30 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55b71df6cc48 'sized_array_memory'
|-FieldDecl 0x55b71df74ad0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterFlow *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55b71df74b20 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b71df74b58 <line:118:5, col:15> col:15 value_type 'IPRewriterFlow *':'IPRewriterFlow *'
| `-SubstTemplateTypeParmType 0x55b71df6c290 'IPRewriterFlow *' sugar
|   |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dc4c168 'T'
|   `-PointerType 0x55b71df50540 'IPRewriterFlow *'
|     `-RecordType 0x55b71df4c730 'IPRewriterFlow'
|       `-CXXRecord 0x55b71df52430 'IPRewriterFlow'
|-TypedefDecl 0x55b71df74c18 <line:119:5, col:16> col:16 reference 'IPRewriterFlow *&'
| `-LValueReferenceType 0x55b71df74be0 'IPRewriterFlow *&'
|   `-SubstTemplateTypeParmType 0x55b71df6c290 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-PointerType 0x55b71df50540 'IPRewriterFlow *'
|       `-RecordType 0x55b71df4c730 'IPRewriterFlow'
|         `-CXXRecord 0x55b71df52430 'IPRewriterFlow'
|-TypedefDecl 0x55b71df74cd8 <line:120:5, col:22> col:22 const_reference 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x55b71df74ca0 'IPRewriterFlow *const &'
|   `-QualType 0x55b71df6c291 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55b71df6c290 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71df50540 'IPRewriterFlow *'
|         `-RecordType 0x55b71df4c730 'IPRewriterFlow'
|           `-CXXRecord 0x55b71df52430 'IPRewriterFlow'
|-TypedefDecl 0x55b71df74d68 <line:121:5, col:16> col:16 pointer 'IPRewriterFlow **'
| `-PointerType 0x55b71df74d30 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x55b71df6c290 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-PointerType 0x55b71df50540 'IPRewriterFlow *'
|       `-RecordType 0x55b71df4c730 'IPRewriterFlow'
|         `-CXXRecord 0x55b71df52430 'IPRewriterFlow'
|-TypedefDecl 0x55b71df74e28 <line:122:5, col:22> col:22 const_pointer 'IPRewriterFlow *const *'
| `-PointerType 0x55b71df74df0 'IPRewriterFlow *const *'
|   `-QualType 0x55b71df6c291 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55b71df6c290 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71df50540 'IPRewriterFlow *'
|         `-RecordType 0x55b71df4c730 'IPRewriterFlow'
|           `-CXXRecord 0x55b71df52430 'IPRewriterFlow'
|-TypedefDecl 0x55b71df75c10 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterFlow *>::type':'IPRewriterFlow *'
| `-ElaboratedType 0x55b71df75bc0 'typename fast_argument<IPRewriterFlow *>::type' sugar
|   `-TypedefType 0x55b71df75ba0 'fast_argument<IPRewriterFlow *, false>::type' sugar
|     |-Typedef 0x55b71df75b30 'type'
|     `-SubstTemplateTypeParmType 0x55b71df758f0 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55b71dc1e200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc1e1b0 'T'
|       `-PointerType 0x55b71df50540 'IPRewriterFlow *'
|         `-RecordType 0x55b71df4c730 'IPRewriterFlow'
|           `-CXXRecord 0x55b71df52430 'IPRewriterFlow'
|-TypedefDecl 0x55b71df75c78 <line:126:5, col:22> col:22 const_access_type 'IPRewriterFlow *const &'
| `-LValueReferenceType 0x55b71df74ca0 'IPRewriterFlow *const &'
|   `-QualType 0x55b71df6c291 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55b71df6c290 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71df50540 'IPRewriterFlow *'
|         `-RecordType 0x55b71df4c730 'IPRewriterFlow'
|           `-CXXRecord 0x55b71df52430 'IPRewriterFlow'
|-TypedefDecl 0x55b71df75cd0 <line:128:5, col:17> col:17 referenced size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71df75d38 <line:130:5, col:16> col:16 iterator 'IPRewriterFlow **'
| `-PointerType 0x55b71df74d30 'IPRewriterFlow **'
|   `-SubstTemplateTypeParmType 0x55b71df6c290 'IPRewriterFlow *' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-PointerType 0x55b71df50540 'IPRewriterFlow *'
|       `-RecordType 0x55b71df4c730 'IPRewriterFlow'
|         `-CXXRecord 0x55b71df52430 'IPRewriterFlow'
|-TypedefDecl 0x55b71df75da0 <line:131:5, col:22> col:22 const_iterator 'IPRewriterFlow *const *'
| `-PointerType 0x55b71df74df0 'IPRewriterFlow *const *'
|   `-QualType 0x55b71df6c291 'IPRewriterFlow *const' const
|     `-SubstTemplateTypeParmType 0x55b71df6c290 'IPRewriterFlow *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71df50540 'IPRewriterFlow *'
|         `-RecordType 0x55b71df4c730 'IPRewriterFlow'
|           `-CXXRecord 0x55b71df52430 'IPRewriterFlow'
|-EnumDecl 0x55b71df75df8 <line:134:5> col:5
| `-EnumConstantDecl 0x55b71df75ef0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterFlow *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b71df75ed0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b71dc4d388 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b71dc4d360 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b71dc4d340 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b71df75f78 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55b71df76208 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71df76030 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71df760d0 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXConstructorDecl 0x55b71df764c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55b71df763b0 <col:19, col:36> col:36 x 'const Vector<IPRewriterFlow *> &'
|-CXXConstructorDecl 0x55b71df76788 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x55b71df76670 <col:19, col:31> col:31 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x55b71df76ad0 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterFlow *> &(const Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55b71df769b0 <col:33, col:50> col:50 x 'const Vector<IPRewriterFlow *> &'
|-CXXMethodDecl 0x55b71df76de0 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterFlow *> &(Vector<IPRewriterFlow *> &&)' inline
| `-ParmVarDecl 0x55b71df76cc0 <col:33, col:45> col:45 x 'Vector<IPRewriterFlow *> &&'
|-CXXMethodDecl 0x55b71df770d0 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterFlow *> &(Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71df76f18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71df76f90 <col:43, col:69> col:63 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55b71df77228 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x55b71df77308 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71df77360 <col:30> Inherited
|-CXXMethodDecl 0x55b71df773a8 <line:151:5, col:53> col:49 end 'Vector<IPRewriterFlow *>::iterator ()'
| |-NoInlineAttr 0x55b71df77458 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71df774b0 <col:30> Inherited
|-CXXMethodDecl 0x55b71df77578 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55b71df77628 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71df77680 <col:30> Inherited
|-CXXMethodDecl 0x55b71df776c8 <line:153:5, col:61> col:55 end 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55b71df77778 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71df777d0 <col:30> Inherited
|-CXXMethodDecl 0x55b71df77818 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55b71df778c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71df77920 <col:30> Inherited
|-CXXMethodDecl 0x55b71df77968 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterFlow *>::const_iterator () const'
| |-NoInlineAttr 0x55b71df77a18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71df77a70 <col:30> Inherited
|-CXXMethodDecl 0x55b71df77a98 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71df77b48 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71df77bf8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b71df77db8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71df77ca8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71df77d20 <col:37, col:63> col:57 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55b71df77f08 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b71df77e78 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71df780b8 <line:163:5, col:65> col:43 operator[] 'IPRewriterFlow *&(Vector::size_type)'
| |-ParmVarDecl 0x55b71df77fc0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71df78170 <col:20>
| `-OptimizeNoneAttr 0x55b71df781c8 <col:30>
|-CXXMethodDecl 0x55b71df782e8 <line:164:5, col:73> col:49 operator[] 'IPRewriterFlow *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55b71df781f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71df783a0 <col:20>
| `-OptimizeNoneAttr 0x55b71df783f8 <col:30>
|-CXXMethodDecl 0x55b71df784b0 <line:165:5, col:29> col:15 at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71df78420 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71df785f8 <line:166:5, col:37> col:21 at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71df78568 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71df78728 <line:167:5, col:21> col:15 front 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x55b71df78858 <line:168:5, col:29> col:21 front 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x55b71df78928 <line:169:5, col:20> col:15 back 'IPRewriterFlow *&()' inline
|-CXXMethodDecl 0x55b71df789f8 <line:170:5, col:28> col:21 back 'IPRewriterFlow *const &() const' inline
|-CXXMethodDecl 0x55b71df78b38 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterFlow *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71df78aa8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71df78c80 <line:173:5, col:47> col:21 unchecked_at 'IPRewriterFlow *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71df78bf0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71df78dc8 <line:174:5, col:59> col:15 at_u 'IPRewriterFlow *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55b71df78d38 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71df78e80 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b71df78f80 <line:175:5, col:71> col:21 at_u 'IPRewriterFlow *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b71df78ef0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71df79038 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b71df790f8 <line:177:5, col:20> col:15 data 'IPRewriterFlow **()' inline
|-CXXMethodDecl 0x55b71df791f8 <line:178:5, col:28> col:21 data 'IPRewriterFlow *const *() const' inline
|-CXXMethodDecl 0x55b71df793a8 <line:180:5, col:48> col:17 push_back 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71df792b8 <col:27, col:47> col:47 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-FunctionTemplateDecl 0x55b71df79b98 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b71df79460 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterFlow *>':'fast_argument<IPRewriterFlow *, false>'
| `-CXXMethodDecl 0x55b71df79af8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterFlow *&&)' inline
|   `-ParmVarDecl 0x55b71df799f8 <col:58, col:62> col:62 v 'IPRewriterFlow *&&'
|-CXXMethodDecl 0x55b71df79c78 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71df79dc8 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterFlow *>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71df79d38 <col:28, col:48> col:48 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55b71df79e80 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b71df7a0c8 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71df79f40 <col:28, col:37> col:37 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x55b71df79fb8 <col:41, col:61> col:61 v 'Vector<IPRewriterFlow *>::value_argument_type':'IPRewriterFlow *'
|-CXXMethodDecl 0x55b71df7a288 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator)' inline
| `-ParmVarDecl 0x55b71df7a198 <col:27, col:36> col:36 it 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x55b71df7a4d8 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterFlow *>::iterator (Vector<IPRewriterFlow *>::iterator, Vector<IPRewriterFlow *>::iterator)' inline
| |-ParmVarDecl 0x55b71df7a350 <col:27, col:36> col:36 a 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
| `-ParmVarDecl 0x55b71df7a3c8 <col:39, col:48> col:48 b 'Vector<IPRewriterFlow *>::iterator':'IPRewriterFlow **'
|-CXXMethodDecl 0x55b71df7a598 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71df7a7f8 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterFlow *> &)' inline
| `-ParmVarDecl 0x55b71df7a700 <col:22, col:33> col:33 x 'Vector<IPRewriterFlow *> &'
`-CXXDestructorDecl 0x55b71df7a8c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55b71df7b7d8 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71df6bab8 prev 0x55b71df4fa40 <../elements/ip/iprewriterbase.hh:42:1, line:79:1> line:42:7 referenced class IPRewriterHeap definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71df6bbb0 <col:1, col:7> col:7 implicit referenced class IPRewriterHeap
|-AccessSpecDecl 0x55b71df6bc40 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55b71df6bca0 <line:44:5, line:46:5> line:44:5 IPRewriterHeap 'void ()'
| |-CXXCtorInitializer Field 0x55b71df7b168 '_heaps' 'Vector<IPRewriterFlow *> [2]'
| | `-CXXConstructExpr 0x55b71df7b7b0 <col:5> 'Vector<IPRewriterFlow *> [2]' 'void ()'
| |-CXXCtorInitializer Field 0x55b71df7b1c8 '_capacity' 'int32_t':'int'
| | `-IntegerLiteral 0x55b71df7b6c8 <line:45:14> 'int' 2147483647
| |-CXXCtorInitializer Field 0x55b71df7b228 '_use_count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b71df7b770 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b71df7b730 <col:38> 'int' 1
| `-CompoundStmt 0x55b71df7b828 <col:41, line:46:5>
|-CXXDestructorDecl 0x55b71df6bd90 <line:47:5, line:49:5> line:47:5 used ~IPRewriterHeap 'void () noexcept'
| `-CompoundStmt 0x55b71df7bc68 <col:23, line:49:5>
|   `-ParenExpr 0x55b71df7bc48 <line:48:2, col:153> 'void'
|     `-ConditionalOperator 0x55b71df7bc18 <col:3, col:152> 'void'
|       |-CXXStaticCastExpr 0x55b71df7b900 <col:3, col:34> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55b71df7b8d0 <col:23, col:33> 'bool' '=='
|       |   |-CXXMemberCallExpr 0x55b71df7b878 <col:23, col:28> 'Vector<IPRewriterFlow *>::size_type':'int'
|       |   | `-MemberExpr 0x55b71df7b848 <col:23> '<bound member function type>' ->size 0x55b71df7aaa8
|       |   |   `-ImplicitCastExpr 0x55b71df7b898 <col:23> 'const IPRewriterHeap *' <NoOp>
|       |   |     `-CXXThisExpr 0x55b71df7b838 <col:23> 'IPRewriterHeap *' implicit this
|       |   `-IntegerLiteral 0x55b71df7b8b0 <col:33> 'int' 0
|       |-CXXFunctionalCastExpr 0x55b71df7b960 <col:38, col:45> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55b71df7b940 <col:44> 'int' 0
|       `-CallExpr 0x55b71df7bb78 <col:49, col:152> 'void'
|         |-ImplicitCastExpr 0x55b71df7bb60 <col:49> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55b71df7bb40 <col:49> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55b71df7bbb8 <col:64> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55b71df7b9d0 <col:64> 'const char [12]' lvalue "size() == 0"
|         |-ImplicitCastExpr 0x55b71df7bbd0 <col:79> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55b71df7ba78 <col:79> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|         |-ImplicitCastExpr 0x55b71df7bbe8 <col:115> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55b71df7bab0 <col:115> 'int' 48
|         `-ImplicitCastExpr 0x55b71df7bc00 <col:119, col:133> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55b71df7bb28 <col:119, col:133> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55b71df7bb10 <col:133> 'const char [34]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55b71df7bad0 <col:133> 'const char [34]' lvalue "IPRewriterHeap::~IPRewriterHeap()"
|-CXXMethodDecl 0x55b71df6be90 <line:51:5, line:53:5> line:51:10 use 'void ()'
| `-CompoundStmt 0x55b71df7bcd8 <col:16, line:53:5>
|   `-UnaryOperator 0x55b71df7bcc0 <line:52:2, col:4> 'uint32_t':'unsigned int' lvalue prefix '++'
|     `-MemberExpr 0x55b71df7bc90 <col:4> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55b71df7b228
|       `-CXXThisExpr 0x55b71df7bc80 <col:4> 'IPRewriterHeap *' implicit this
|-CXXMethodDecl 0x55b71df6bf50 <line:54:5, line:58:5> line:54:10 unuse 'void ()'
| `-CompoundStmt 0x55b71df7c1a0 <col:18, line:58:5>
|   |-ParenExpr 0x55b71df7c070 <line:55:2, col:159> 'void'
|   | `-ConditionalOperator 0x55b71df7c040 <col:3, col:158> 'void'
|   |   |-CXXStaticCastExpr 0x55b71df7bdb0 <col:3, col:37> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71df7bd80 <col:23, col:36> 'bool' '>'
|   |   |   |-ImplicitCastExpr 0x55b71df7bd50 <col:23> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x55b71df7bd00 <col:23> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55b71df7b228
|   |   |   |   `-CXXThisExpr 0x55b71df7bcf0 <col:23> 'IPRewriterHeap *' implicit this
|   |   |   `-ImplicitCastExpr 0x55b71df7bd68 <col:36> 'unsigned int' <IntegralCast>
|   |   |     `-IntegerLiteral 0x55b71df7bd30 <col:36> 'int' 0
|   |   |-CXXFunctionalCastExpr 0x55b71df7be10 <col:41, col:48> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71df7bdf0 <col:47> 'int' 0
|   |   `-CallExpr 0x55b71df7bfa0 <col:52, col:158> 'void'
|   |     |-ImplicitCastExpr 0x55b71df7bf88 <col:52> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71df7bf68 <col:52> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71df7bfe0 <col:67> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71df7be80 <col:67> 'const char [15]' lvalue "_use_count > 0"
|   |     |-ImplicitCastExpr 0x55b71df7bff8 <col:85> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71df7bea8 <col:85> 'const char [33]' lvalue "../elements/ip/iprewriterbase.hh"
|   |     |-ImplicitCastExpr 0x55b71df7c010 <col:121> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71df7bee0 <col:121> 'int' 55
|   |     `-ImplicitCastExpr 0x55b71df7c028 <col:125, col:139> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71df7bf50 <col:125, col:139> 'const char [29]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71df7bf38 <col:139> 'const char [29]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71df7bf00 <col:139> 'const char [29]' lvalue "void IPRewriterHeap::unuse()"
|   `-IfStmt 0x55b71df7c188 <line:56:2, line:57:13>
|     |-BinaryOperator 0x55b71df7c138 <line:56:6, col:22> 'bool' '=='
|     | |-ImplicitCastExpr 0x55b71df7c108 <col:6, col:8> 'uint32_t':'unsigned int' <LValueToRValue>
|     | | `-UnaryOperator 0x55b71df7c0d0 <col:6, col:8> 'uint32_t':'unsigned int' lvalue prefix '--'
|     | |   `-MemberExpr 0x55b71df7c0a0 <col:8> 'uint32_t':'unsigned int' lvalue ->_use_count 0x55b71df7b228
|     | |     `-CXXThisExpr 0x55b71df7c090 <col:8> 'IPRewriterHeap *' implicit this
|     | `-ImplicitCastExpr 0x55b71df7c120 <col:22> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x55b71df7c0e8 <col:22> 'int' 0
|     `-CXXDeleteExpr 0x55b71df7c168 <line:57:6, col:13> 'void' Function 0x55b71da8b0b8 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x55b71df7c158 <col:13> 'IPRewriterHeap *' this
|-CXXMethodDecl 0x55b71df7aaa8 <line:60:5, line:62:5> line:60:41 used size 'Vector<IPRewriterFlow *>::size_type () const'
| `-CompoundStmt 0x55b71df7eda0 <col:54, line:62:5>
|   `-ReturnStmt 0x55b71df7ed90 <line:61:2, col:43>
|     `-BinaryOperator 0x55b71df7ed70 <col:9, col:43> 'int' '+'
|       |-CXXMemberCallExpr 0x55b71df7c320 <col:9, col:24> 'Vector::size_type':'int'
|       | `-MemberExpr 0x55b71df7c2f0 <col:9, col:19> '<bound member function type>' .size 0x55b71df77a98
|       |   `-ArraySubscriptExpr 0x55b71df7c2d0 <col:9, col:17> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|       |     |-ImplicitCastExpr 0x55b71df7c2b8 <col:9> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x55b71df7c1d0 <col:9> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x55b71df7b168
|       |     |   `-CXXThisExpr 0x55b71df7c1c0 <col:9> 'const IPRewriterHeap *' implicit this
|       |     `-IntegerLiteral 0x55b71df7c200 <col:16> 'int' 0
|       `-CXXMemberCallExpr 0x55b71df7c408 <col:28, col:43> 'Vector::size_type':'int'
|         `-MemberExpr 0x55b71df7c3d8 <col:28, col:38> '<bound member function type>' .size 0x55b71df77a98
|           `-ArraySubscriptExpr 0x55b71df7c3b8 <col:28, col:36> 'const Vector<IPRewriterFlow *>':'const Vector<IPRewriterFlow *>' lvalue
|             |-ImplicitCastExpr 0x55b71df7c3a0 <col:28> 'const Vector<IPRewriterFlow *> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b71df7c350 <col:28> 'Vector<IPRewriterFlow *> const[2]' lvalue ->_heaps 0x55b71df7b168
|             |   `-CXXThisExpr 0x55b71df7c340 <col:28> 'const IPRewriterHeap *' implicit this
|             `-IntegerLiteral 0x55b71df7c380 <col:35> 'int' 1
|-CXXMethodDecl 0x55b71df7ab98 <line:63:5, line:65:5> line:63:13 capacity 'int32_t () const'
| `-CompoundStmt 0x55b71df7ee20 <col:30, line:65:5>
|   `-ReturnStmt 0x55b71df7ee10 <line:64:2, col:9>
|     `-ImplicitCastExpr 0x55b71df7edf8 <col:9> 'int32_t':'int' <LValueToRValue>
|       `-MemberExpr 0x55b71df7edc8 <col:9> 'const int32_t':'const int' lvalue ->_capacity 0x55b71df7b1c8
|         `-CXXThisExpr 0x55b71df7edb8 <col:9> 'const IPRewriterHeap *' implicit this
|-AccessSpecDecl 0x55b71df7ac38 <line:67:3, col:10> col:3 private
|-EnumDecl 0x55b71df7ac60 <line:69:5, line:71:5> line:69:5
| |-EnumConstantDecl 0x55b71df7ad60 <line:70:2, col:18> col:2 h_best_effort 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
| | `-ImplicitCastExpr 0x55b71df7ae40 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71df7ad40 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x55b71df7ad20 <col:18> 'int' 0
| `-EnumConstantDecl 0x55b71df7adf0 <col:21, col:35> col:21 h_guarantee 'IPRewriterHeap::(anonymous enum at ../elements/ip/iprewriterbase.hh:69:5)'
|   `-ImplicitCastExpr 0x55b71df7ae58 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71df7add0 <col:35> 'int' Int: 1
|       `-IntegerLiteral 0x55b71df7adb0 <col:35> 'int' 1
|-FieldDecl 0x55b71df7b168 <line:72:5, col:38> col:30 referenced _heaps 'Vector<IPRewriterFlow *> [2]'
|-FieldDecl 0x55b71df7b1c8 <line:73:5, col:13> col:13 referenced _capacity 'int32_t':'int'
|-FieldDecl 0x55b71df7b228 <line:74:5, col:14> col:14 referenced _use_count 'uint32_t':'unsigned int'
|-FriendDecl 0x55b71df7b298 <line:76:5, col:18> col:12 'class IPRewriterBase':'IPRewriterBase'
|-FriendDecl 0x55b71df7b330 <line:77:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x55b71df7b398 <line:42:7> col:7 implicit IPRewriterHeap 'void (const IPRewriterHeap &)' inline default noexcept-unevaluated 0x55b71df7b398
| `-ParmVarDecl 0x55b71df7b4a8 <col:7> col:7 'const IPRewriterHeap &'
`-CXXMethodDecl 0x55b71df7b548 <col:7> col:7 implicit operator= 'IPRewriterHeap &(const IPRewriterHeap &)' inline default noexcept-unevaluated 0x55b71df7b548
  `-ParmVarDecl 0x55b71df7b658 <col:7> col:7 'const IPRewriterHeap &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.16], i32, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterHeap = type { [2 x %class.Vector.16], i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71de3a000 prev 0x55b71de31490 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71de3a0f8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55b71de3a198 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55b71de40638 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b71de40a18 <col:11>
|-CXXConstructorDecl 0x55b71de40710 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71de407f8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55b71de41160 <col:11>
|-CXXConstructorDecl 0x55b71de40898 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71de409a8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55b71de429b8 <col:11>
|-CXXDestructorDecl 0x55b71de41cc8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b71db41e48 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71db41f58 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55b71db42820 <col:11>
|   `-ReturnStmt 0x55b71db42810 <col:11>
|     `-UnaryOperator 0x55b71db427f8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b71db427e8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55b71db41fc8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55b71db420d8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55b71decca80 <col:11>
    `-ReturnStmt 0x55b71decca70 <col:11>
      `-UnaryOperator 0x55b71decca58 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55b71decca48 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71de2f078 prev 0x55b71de2ed90 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71de2f170 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55b71de2f200 <col:19, col:25> col:19 public
|-TypedefDecl 0x55b71de2f238 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55b71da8d340 'int32_t' sugar
|   |-Typedef 0x55b71d998328 'int32_t'
|   `-TypedefType 0x55b71d971510 '__int32_t' sugar
|     |-Typedef 0x55b71d971128 '__int32_t'
|     `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71de2f2a0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55b71da8d500 'int64_t' sugar
|   |-Typedef 0x55b71d998390 'int64_t'
|   `-TypedefType 0x55b71d971630 '__int64_t' sugar
|     |-Typedef 0x55b71d971208 '__int64_t'
|     `-BuiltinType 0x55b71d92f5a0 'long'
|-EnumDecl 0x55b71de2f2f8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55b71de2f470 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55b71de2f450 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55b71de2f428 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55b71de2f410 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55b71de2f3e0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55b71de2f568 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55b71de2f548 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55b71de2f520 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55b71de2f508 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55b71de2f4e0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55b71de2f4c0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55b71de2f5b8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55b71de2f6c0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b71de311e0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de2f6a0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55b71de2f680 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55b71de2f750 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b71de311f8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de2f730 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55b71de2f710 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55b71de2f7e0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b71de31210 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de2f7c0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55b71de2f7a0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55b71de2f870 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b71de31228 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de2f850 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55b71de2f830 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55b71de2f900 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b71de31240 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de2f8e0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55b71de2f8c0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55b71de2f990 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b71de31258 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de2f970 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55b71de2f950 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55b71de2fa20 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b71de31270 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de2fa00 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55b71de2f9e0 <col:26> 'int' EnumConstant 0x55b71de2f6c0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55b71de2faf0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b71de31288 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de2fad0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55b71de2fab0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55b71de2fa70 <col:27> 'int' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55b71de2fa90 <col:44> 'int' EnumConstant 0x55b71de2f990 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55b71de31190 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55b71de312a0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71de2fba0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55b71de2fb80 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55b71de2fb40 <col:27> 'int' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55b71de2fb60 <col:44> 'int' EnumConstant 0x55b71de2f870 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55b71de312b8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55b71de313c0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55b71de31410 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71de313a0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55b71de31380 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55b71de31438 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55b71da8cf70 'uninitialized_type'
|   `-CXXRecord 0x55b71da8ced8 'uninitialized_type'
|-CXXRecordDecl 0x55b71de31490 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55b71de315a0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55b71de3b148 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b71de40a28 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b71de40b48 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55b71de40b00 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55b71de40a90 <col:9> '<bound member function type>' ->assign 0x55b71de38228
|     | `-CXXThisExpr 0x55b71de40a80 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55b71de40ac0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55b71de40b30 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55b71de40ae0 <col:19> 'int' 0
|-CXXConstructorDecl 0x55b71de317e8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55b71de31660 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55b71de316d8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b71de404d0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b71de404b0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55b71de3b148 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b71de40b60 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b71de40cb0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55b71de40c38 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55b71de40bc8 <col:9> '<bound member function type>' ->assign 0x55b71de38228
|     | `-CXXThisExpr 0x55b71de40bb8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b71de40c80 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55b71de40c68 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55b71de40bf8 <col:16> 'long' lvalue ParmVar 0x55b71de31660 'sec' 'long'
|     `-ImplicitCastExpr 0x55b71de40c98 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55b71de40c18 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de316d8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b71de31a48 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55b71de318b8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55b71de31930 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b71de40508 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b71de404e8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55b71de3b148 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b71de40cc8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b71de40e00 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55b71de40da0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55b71de40d30 <col:9> '<bound member function type>' ->assign 0x55b71de38228
|     | `-CXXThisExpr 0x55b71de40d20 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b71de40dd0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55b71de40d60 <col:16> 'int' lvalue ParmVar 0x55b71de318b8 'sec' 'int'
|     `-ImplicitCastExpr 0x55b71de40de8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55b71de40d80 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de31930 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b71de31ca8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55b71de31b18 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55b71de31b90 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b71de40540 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b71de40520 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55b71de3b148 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b71de40e18 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b71de40f68 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55b71de40ef0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55b71de40e80 <col:9> '<bound member function type>' ->assign 0x55b71de38228
|     | `-CXXThisExpr 0x55b71de40e70 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b71de40f38 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55b71de40f20 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55b71de40eb0 <col:16> 'unsigned long' lvalue ParmVar 0x55b71de31b18 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55b71de40f50 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55b71de40ed0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de31b90 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b71de31f08 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55b71de31d78 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55b71de31df0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b71de40578 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b71de40558 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55b71de3b148 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b71de40f80 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b71de410d0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55b71de41058 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55b71de40fe8 <col:9> '<bound member function type>' ->assign 0x55b71de38228
|     | `-CXXThisExpr 0x55b71de40fd8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b71de410a0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55b71de41088 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55b71de41018 <col:16> 'unsigned int' lvalue ParmVar 0x55b71de31d78 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55b71de410b8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55b71de41038 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de31df0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b71de32068 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55b71de31fd8 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55b71de32208 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55b71de32140 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55b71de32438 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55b71de32340 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55b71de325e8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55b71de32528 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55b71de3b148 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b71de41170 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55b71de410e8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55b71de32528 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55b71de411d0 <col:19, line:214:5>
|-CXXConstructorDecl 0x55b71de327b8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55b71de326f8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55b71de3b148 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b71de411e0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b71de41290 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55b71de41268 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55b71de41238 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55b71de326f8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55b71de329a8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55b71de32920 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55b71de2ee20 'Timestamp'
|   | `-CXXRecord 0x55b71de2f078 'Timestamp'
|   `-ParenType 0x55b71de328c0 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55b71de32890 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55b71de2f3c0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55b71de2f238 'seconds_type'
|         `-TypedefType 0x55b71da8d340 'int32_t' sugar
|           |-Typedef 0x55b71d998328 'int32_t'
|           `-TypedefType 0x55b71d971510 '__int32_t' sugar
|             |-Typedef 0x55b71d971128 '__int32_t'
|             `-BuiltinType 0x55b71d92f580 'int'
|-CXXConversionDecl 0x55b71de32ae8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55b71de32bb8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55b71de41398 <col:37, line:231:5>
|   `-ReturnStmt 0x55b71de41388 <line:227:9, col:23>
|     `-BinaryOperator 0x55b71de41368 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55b71de41338 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55b71de412e8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55b71de3a198
|       |   `-MemberExpr 0x55b71de412b8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55b71de3b148
|       |     `-CXXThisExpr 0x55b71de412a8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55b71de41350 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55b71de41318 <col:23> 'int' 0
|-CXXMethodDecl 0x55b71de32c78 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55b71de32d38 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55b71de32df8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55b71de32eb8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55b71de32f78 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55b71de330e8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55b71de33028 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55b71de33230 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55b71de331a0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de332f8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55b71de33398 <col:54> "" ""
|-CXXMethodDecl 0x55b71de33428 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55b71de334c8 <col:54> "" ""
|-CXXMethodDecl 0x55b71de33558 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55b71de335f8 <col:54> "" ""
|-CXXMethodDecl 0x55b71de336f8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55b71de337c8 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55b71de338f8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55b71de339f0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55b71de33b28 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55b71de415b0 <col:39, line:271:5>
|   `-ReturnStmt 0x55b71de415a0 <line:267:9, col:61>
|     `-CallExpr 0x55b71de41540 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55b71de41528 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b71de413b0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55b71de3b478 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55b71de41570 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55b71de41410 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55b71de3a198
|       |   `-MemberExpr 0x55b71de413e0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55b71de3b148
|       |     `-CXXThisExpr 0x55b71de413d0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55b71de41588 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55b71de414b0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55b71de41480 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55b71de41440 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55b71de41498 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55b71de41460 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2f990 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b71de33be8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55b71de41770 <col:39, line:279:5>
|   `-ReturnStmt 0x55b71de41760 <line:275:9, col:61>
|     `-CallExpr 0x55b71de41700 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55b71de416e8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b71de415c8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55b71de3b478 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55b71de41730 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55b71de41628 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55b71de3a198
|       |   `-MemberExpr 0x55b71de415f8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55b71de3b148
|       |     `-CXXThisExpr 0x55b71de415e8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55b71de41748 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55b71de416c8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55b71de41698 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55b71de41658 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55b71de416b0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55b71de41678 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2f870 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b71de33ca8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55b71de41908 <col:39, line:287:5>
|   `-ReturnStmt 0x55b71de418f8 <line:283:9, col:53>
|     `-BinaryOperator 0x55b71de418d8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55b71de418a8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55b71de417c8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55b71de3a198
|       |   `-MemberExpr 0x55b71de41798 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55b71de3b148
|       |     `-CXXThisExpr 0x55b71de41788 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55b71de418c0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55b71de41888 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55b71de41868 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55b71de41838 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b71de417f8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2f6c0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b71de41850 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b71de41818 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b71de33d98 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55b71de42ba0 <col:40, line:293:5>
|   |-DeclStmt 0x55b71de41a50 <line:291:9, col:48>
|   | `-VarDecl 0x55b71de41930 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55b71de41a30 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55b71de419d8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55b71de419a8 <col:22> '<bound member function type>' ->subsec 0x55b71de32d38
|   |     |   `-CXXThisExpr 0x55b71de41998 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55b71de41a18 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55b71de419f8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2faf0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55b71de42b90 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55b71de42b78 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55b71de42b48 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b71de42b30 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55b71de42b10 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55b71de42ae0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55b71de42878 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55b71de42860 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55b71de41a68 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55b71de41930 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55b71de42a80 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55b71de42a68 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55b71de42a38 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55b71de42890 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55b71de42800 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55b71de427e8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55b71de42798 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b71de2efc8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55b71de42738 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55b71de41a98 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55b71de41a88 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55b71de42780 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55b71de42768 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55b71de41f58 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55b71de41ac0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55b71de41b50 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55b71de41b20 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55b71de41ae0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2faf0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55b71de41b38 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55b71de41b00 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55b71de41930 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55b71de42ab0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55b71de42848 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55b71de42838 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55b71de33e58 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55b71de430f8 <col:40, line:302:5>
|   |-DeclStmt 0x55b71de42cf0 <line:297:9, col:48>
|   | `-VarDecl 0x55b71de42bd0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55b71de42cd0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55b71de42c78 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55b71de42c48 <col:22> '<bound member function type>' ->subsec 0x55b71de32d38
|   |     |   `-CXXThisExpr 0x55b71de42c38 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55b71de42cb8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55b71de42c98 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de31190 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55b71de430e8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55b71de430d0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55b71de430a0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b71de43088 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55b71de43068 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55b71de43038 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55b71de42f60 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55b71de42f48 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55b71de42d08 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55b71de42bd0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55b71de42fd8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55b71de42fc0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55b71de42f90 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55b71de42f78 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55b71de42ee8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55b71de42ed0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55b71de42eb0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b71de2efc8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55b71de42e50 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55b71de42d38 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55b71de42d28 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55b71de42e98 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55b71de42e80 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55b71de42e10 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55b71de42d60 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55b71de42df0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55b71de42dc0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55b71de42d80 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de31190 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55b71de42dd8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55b71de42da0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55b71de42bd0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55b71de43008 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55b71de42f30 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55b71de42f20 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55b71de33f18 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55b71de43180 <col:40, line:306:5>
|   `-ReturnStmt 0x55b71de43170 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55b71de43140 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55b71de43128 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b71de43118 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55b71de340b8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55b71de33fc8 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55b71de34288 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55b71de34190 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55b71de34378 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55b71de344e8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55b71de34428 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55b71de432c8 <col:56, line:320:5>
|   `-ReturnStmt 0x55b71de432b8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55b71de432a0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55b71de43270 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b71de43258 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b71de43218 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55b71de431e8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55b71de431a8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b71de34428 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55b71de43200 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55b71de431c8 <col:31> 'int' 0
|-CXXMethodDecl 0x55b71de34728 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55b71de345a0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b71de34618 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71de43498 <col:72, line:326:5>
|   `-ReturnStmt 0x55b71de43488 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55b71de43470 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55b71de43440 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b71de43428 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b71de433e8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55b71de433d0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55b71de432f0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b71de345a0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55b71de43390 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55b71de43378 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55b71de43310 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55b71de398f0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55b71de433b8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55b71de43330 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de34618 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de348d8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55b71de347e8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55b71de4d020 <col:56, line:337:5>
|   |-DeclStmt 0x55b71de43798 <line:329:9, col:51>
|   | `-VarDecl 0x55b71de434c0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55b71de43780 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55b71de43750 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55b71de43738 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55b71de43720 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55b71de436f0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55b71de436d8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55b71de436c0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55b71de435b0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55b71de4ce10 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55b71de43800 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55b71de3a198
|   | | `-MemberExpr 0x55b71de437d0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55b71de3b148
|   | |   `-DeclRefExpr 0x55b71de437b0 <col:9> 'Timestamp' lvalue Var 0x55b71de434c0 't' 'Timestamp'
|   | `-BinaryOperator 0x55b71de4cdf0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55b71de4cdc0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b71de43830 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55b71de347e8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55b71de4cdd8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55b71de438e0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55b71de438c0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55b71de43890 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55b71de43850 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55b71de438a8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55b71de43870 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2f990 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55b71de4d008 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55b71de4cfd8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55b71de4cfc0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55b71de4cfa0 <col:16> 'Timestamp' lvalue Var 0x55b71de434c0 't' 'Timestamp'
|-CXXMethodDecl 0x55b71de34aa0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55b71de34990 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b71de34a08 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71de4d1d8 <col:72, line:343:5>
|   `-ReturnStmt 0x55b71de4d1c8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55b71de4d1b0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55b71de4d180 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b71de4d168 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b71de4d128 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55b71de4d110 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55b71de4d058 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b71de34990 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55b71de4d0d0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55b71de4d0b8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55b71de4d078 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55b71de39a38 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55b71de4d0f8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55b71de4d098 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de34a08 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de34bf0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55b71de34b60 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55b71de4d620 <col:56, line:354:5>
|   |-DeclStmt 0x55b71de4d3c8 <line:346:9, col:51>
|   | `-VarDecl 0x55b71de4d200 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55b71de4d3b0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55b71de4d380 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55b71de4d368 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55b71de4d350 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55b71de4d320 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55b71de4d308 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55b71de4d2f0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55b71de4d2c0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55b71de4d580 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55b71de4d430 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55b71de3a198
|   | | `-MemberExpr 0x55b71de4d400 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55b71de3b148
|   | |   `-DeclRefExpr 0x55b71de4d3e0 <col:9> 'Timestamp' lvalue Var 0x55b71de4d200 't' 'Timestamp'
|   | `-BinaryOperator 0x55b71de4d560 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55b71de4d530 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b71de4d460 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55b71de34b60 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55b71de4d548 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55b71de4d510 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55b71de4d4f0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55b71de4d4c0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55b71de4d480 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55b71de4d4d8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55b71de4d4a0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2f870 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55b71de4d608 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55b71de4d5d8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55b71de4d5c0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55b71de4d5a0 <col:16> 'Timestamp' lvalue Var 0x55b71de4d200 't' 'Timestamp'
|-CXXMethodDecl 0x55b71de34db8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55b71de34ca8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b71de34d20 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71de4d7d8 <col:72, line:360:5>
|   `-ReturnStmt 0x55b71de4d7c8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55b71de4d7b0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55b71de4d780 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b71de4d768 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b71de4d728 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55b71de4d710 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55b71de4d658 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b71de34ca8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55b71de4d6d0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55b71de4d6b8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55b71de4d678 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55b71de39b80 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55b71de4d6f8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55b71de4d698 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de34d20 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de34f08 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55b71de34e78 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55b71de4dc48 <col:56, line:371:5>
|   |-DeclStmt 0x55b71de4d9c8 <line:363:9, col:51>
|   | `-VarDecl 0x55b71de4d800 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55b71de4d9b0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55b71de4d980 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55b71de4d968 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55b71de4d950 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55b71de4d920 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55b71de4d908 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55b71de4d8f0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55b71de4d8c0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55b71de4dba8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55b71de4da30 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55b71de3a198
|   | | `-MemberExpr 0x55b71de4da00 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55b71de3b148
|   | |   `-DeclRefExpr 0x55b71de4d9e0 <col:9> 'Timestamp' lvalue Var 0x55b71de4d800 't' 'Timestamp'
|   | `-CallExpr 0x55b71de4db48 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55b71de4db30 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55b71de4da60 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55b71de3b478 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55b71de4db78 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b71de4da80 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55b71de34e78 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55b71de4db90 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55b71de4db10 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55b71de4dae0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55b71de4daa0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2f6c0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55b71de4daf8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55b71de4dac0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55b71de4dc30 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55b71de4dc00 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55b71de4dbe8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55b71de4dbc8 <col:16> 'Timestamp' lvalue Var 0x55b71de4d800 't' 'Timestamp'
|-CXXMethodDecl 0x55b71de34ff8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55b71de4dd88 <col:39, line:377:5>
|   `-ReturnStmt 0x55b71de4dd78 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55b71de4dd60 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55b71de4dd30 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b71de4dd18 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b71de4dcd8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55b71de4dc80 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55b71de4dcc0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55b71de4dca0 <col:29> 'int' 1
|-CXXMethodDecl 0x55b71de350b8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55b71de4de68 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55b71de4de20 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55b71de4ddb0 <col:9> '<bound member function type>' ->assign 0x55b71de38228
|     | `-CXXThisExpr 0x55b71de4dda0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55b71de4dde0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55b71de4de50 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55b71de4de00 <col:19> 'int' 0
|-CXXMethodDecl 0x55b71de38228 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b71de380e0 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b71de38158 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b71de405b0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b71de40590 <col:60> 'int' 0
| `-CompoundStmt 0x55b71de4e060 <col:63, line:395:5>
|   `-BinaryOperator 0x55b71de4e040 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55b71de4dec0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55b71de3a198
|     | `-MemberExpr 0x55b71de4de90 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55b71de3b148
|     |   `-CXXThisExpr 0x55b71de4de80 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55b71de4e020 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55b71de4dfb0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55b71de4df50 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55b71de4df38 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55b71de4df20 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55b71de4def0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b71de380e0 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55b71de4df98 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55b71de4df78 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55b71de4e008 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55b71de4dff0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55b71de4dfd0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de38158 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de383f8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b71de382e8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b71de38360 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71de4e1b8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55b71de4e170 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55b71de4e088 <col:9> '<bound member function type>' ->assign 0x55b71de38228
|     | `-CXXThisExpr 0x55b71de4e078 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b71de4e1a0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55b71de4e0b8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b71de382e8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55b71de4e130 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55b71de4e118 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b71de4e0d8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55b71de39a38 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55b71de4e158 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b71de4e0f8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de38360 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de385c8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b71de384b8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b71de38530 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71de4e310 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55b71de4e2c8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55b71de4e1e0 <col:9> '<bound member function type>' ->assign 0x55b71de38228
|     | `-CXXThisExpr 0x55b71de4e1d0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b71de4e2f8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55b71de4e210 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b71de384b8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55b71de4e288 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55b71de4e270 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b71de4e230 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55b71de39b80 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55b71de4e2b0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b71de4e250 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de38530 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de38798 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b71de38688 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b71de38700 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b71de405e8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b71de405c8 <col:57> 'int' 0
| `-DeprecatedAttr 0x55b71de38848 <col:75> "" ""
|-CXXMethodDecl 0x55b71de389d8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b71de388c8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b71de38940 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b71de38a88 <col:74> "" ""
|-CXXMethodDecl 0x55b71de38c18 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b71de38b08 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b71de38b80 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b71de38cc8 <col:74> "" ""
|-CXXMethodDecl 0x55b71de38d58 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55b71de38df8 <col:42> "" ""
|-CXXMethodDecl 0x55b71de38fa0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55b71de38e80 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55b71de38f00 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55b71de39070 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b71de39130 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55b71de391d0 <col:20>
| `-OptimizeNoneAttr 0x55b71de39228 <col:30>
|-CXXMethodDecl 0x55b71de39270 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b71de39330 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55b71de393f0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b71de394b0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55b71de39570 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b71de39630 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55b71de396f0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55b71de397b0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55b71de398f0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b71de39860 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71de4e458 <col:58, line:512:5>
|   `-ReturnStmt 0x55b71de4e448 <line:511:9, col:53>
|     `-BinaryOperator 0x55b71de4e428 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55b71de4e3f8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b71de4e328 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de39860 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b71de4e410 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b71de4e3d8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55b71de4e3b8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55b71de4e388 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b71de4e348 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b71de4e3a0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b71de4e368 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2f990 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b71de39a38 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b71de399a8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71de4e5a0 <col:58, line:516:5>
|   `-ReturnStmt 0x55b71de4e590 <line:515:9, col:53>
|     `-BinaryOperator 0x55b71de4e570 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55b71de4e540 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b71de4e470 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de399a8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b71de4e558 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b71de4e520 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55b71de4e500 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55b71de4e4d0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b71de4e490 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b71de4e4e8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b71de4e4b0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2f870 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b71de39b80 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b71de39af0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71de4e6e8 <col:58, line:520:5>
|   `-ReturnStmt 0x55b71de4e6d8 <line:519:9, col:53>
|     `-BinaryOperator 0x55b71de4e6b8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55b71de4e688 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b71de4e5b8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de39af0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b71de4e6a0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b71de4e668 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55b71de4e648 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55b71de4e618 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b71de4e5d8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2f6c0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b71de4e630 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b71de4e5f8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b71de39cc8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b71de39c38 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71de4e830 <col:60, line:524:5>
|   `-ReturnStmt 0x55b71de4e820 <line:523:9, col:55>
|     `-BinaryOperator 0x55b71de4e800 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55b71de4e7d0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b71de4e700 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de39c38 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b71de4e7e8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b71de4e7b0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55b71de4e790 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55b71de4e760 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b71de4e720 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b71de4e778 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b71de4e740 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2f990 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b71de39e10 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b71de39d80 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71de4e978 <col:60, line:528:5>
|   `-ReturnStmt 0x55b71de4e968 <line:527:9, col:55>
|     `-BinaryOperator 0x55b71de4e948 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55b71de4e918 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b71de4e848 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de39d80 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b71de4e930 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b71de4e8f8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55b71de4e8d8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55b71de4e8a8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b71de4e868 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b71de4e8c0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b71de4e888 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2f870 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b71de39f58 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b71de39ec8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71de4eac0 <col:60, line:532:5>
|   `-ReturnStmt 0x55b71de4eab0 <line:531:9, col:55>
|     `-BinaryOperator 0x55b71de4ea90 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55b71de4ea60 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b71de4e990 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de39ec8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b71de4ea78 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b71de4ea40 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55b71de4ea20 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55b71de4e9f0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b71de4e9b0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2f6c0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b71de4ea08 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b71de4e9d0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b71de2fa20 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55b71de3a000 prev 0x55b71de31490 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b71de3a0f8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55b71de3a198 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55b71de40638 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55b71de40a18 <col:11>
| |-CXXConstructorDecl 0x55b71de40710 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b71de407f8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55b71de41160 <col:11>
| |-CXXConstructorDecl 0x55b71de40898 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b71de409a8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55b71de429b8 <col:11>
| |-CXXDestructorDecl 0x55b71de41cc8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55b71db41e48 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b71db41f58 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55b71db42820 <col:11>
| |   `-ReturnStmt 0x55b71db42810 <col:11>
| |     `-UnaryOperator 0x55b71db427f8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55b71db427e8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55b71db41fc8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55b71db420d8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55b71decca80 <col:11>
|     `-ReturnStmt 0x55b71decca70 <col:11>
|       `-UnaryOperator 0x55b71decca58 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b71decca48 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55b71de3a200 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55b71de3a300 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55b71de3a500 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de3a2e0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55b71de3a2c0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55b71de3a390 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55b71de3a518 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de3a370 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55b71de3a350 <col:23> 'int' 1
| |-EnumConstantDecl 0x55b71de3a420 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55b71de3a530 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de3a400 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55b71de3a3e0 <col:23> 'int' 2
| `-EnumConstantDecl 0x55b71de3a4b0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55b71de3a548 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71de3a490 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55b71de3a470 <col:27> 'int' 3
|-CXXMethodDecl 0x55b71de3a588 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55b71de3a650 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55b71de3a858 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55b71de3a700 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55b71de3a780 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55b71de40600 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55b71de3aa68 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55b71de3a918 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55b71de3a990 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55b71de3ab38 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55b71de3abf8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55b71de3ad68 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55b71de3aca8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55b71de3ae30 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b71de3aef0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55b71de3afb0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b71de3b070 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55b71de3b110 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55b71de3b148 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55b71de3b1b8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55b71de4ead8 <col:27, line:684:5>
|-CXXMethodDecl 0x55b71de3b278 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55b71de4eae8 <col:27, line:696:5>
|-CXXMethodDecl 0x55b71de3b478 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55b71de3b328 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55b71de3b3a0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71de4ec70 <col:66, line:700:5>
|   `-ReturnStmt 0x55b71de4ec60 <line:699:9, col:31>
|     `-CallExpr 0x55b71de4ec00 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55b71de4ebe8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b71de4eb98 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55b71dcbc198 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55b71de4ec30 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55b71de4eb58 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55b71de3b328 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55b71de4ec48 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b71de4eb78 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de3b3a0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de3b7e8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55b71de3b538 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55b71de3b5b0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55b71de3b628 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55b71de3b6a0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71de4efc0 <col:64, line:707:5>
|   |-DeclStmt 0x55b71de4ed00 <line:704:9, col:24>
|   | `-VarDecl 0x55b71de4ec98 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55b71de4ef10 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55b71de4ed18 <col:9> 'int32_t':'int' lvalue ParmVar 0x55b71de3b5b0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55b71de4eef8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55b71de4ee90 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55b71de4ee78 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71de4edf8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55b71dcc17e8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55b71de4eec8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55b71de4ed98 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55b71de3b628 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55b71de4eee0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55b71de4edb8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71de3b6a0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55b71de4edd8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55b71de4ec98 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55b71de4efa0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55b71de4ef30 <col:9> 'int32_t':'int' lvalue ParmVar 0x55b71de3b538 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55b71de4ef88 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55b71de4ef70 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55b71de4ef50 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55b71de4ec98 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55b71de3ba88 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55b71de3b8b8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55b71de3b930 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55b71de3b9a8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55b71de3bd28 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55b71de3bb50 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55b71de3bbc8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55b71de3bc40 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55b71de3beb8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55b71de3bdf0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55b71de3f900 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55b71de3bf70 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55b71de3bfe8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55b71de3fbc8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55b71de3fb08 parent 0x55b71d92f488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55b71de3f9c0 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55b71de3fa38 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55b71de3fde8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55b71de3fd28 parent 0x55b71d92f488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55b71de3fc18 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55b71de3fc90 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55b71de3ffb0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55b71de3fef8 parent 0x55b71d92f488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55b71de3fe38 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55b71de40238 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55b71de40178 parent 0x55b71d92f488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55b71de40028 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55b71de400a0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55b71de40458 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55b71de40398 parent 0x55b71d92f488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55b71de40288 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55b71de40300 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55b71de41b70 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71de41c58 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55b71de3b148 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b71de426c8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55b71de42680 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55b71de3b148
| |     `-DeclRefExpr 0x55b71de42660 <col:7> 'const Timestamp' lvalue ParmVar 0x55b71de41c58 '' 'const Timestamp &'
| `-CompoundStmt 0x55b71de42728 <col:7>
|-CXXConstructorDecl 0x55b71de41dd8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71de41ee8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55b71de3b148 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b71de429c8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55b71de42970 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55b71de3b148
| |     `-CXXStaticCastExpr 0x55b71de42940 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55b71de42910 <col:7> 'Timestamp' lvalue ParmVar 0x55b71de41ee8 '' 'Timestamp &&'
| `-CompoundStmt 0x55b71de42a28 <col:7>
|-CXXDestructorDecl 0x55b71de41f98 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b71db41ca0 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71db41da8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55b71db42898 <col:7>
|   |-CXXMemberCallExpr 0x55b71db42838 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55b71db42778 <col:7> '<bound member function type>' .operator= 0x55b71db41e48
|   | | `-MemberExpr 0x55b71db42688 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55b71de3b148
|   | |   `-CXXThisExpr 0x55b71db42678 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55b71db42748 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55b71de3b148
|   |   `-DeclRefExpr 0x55b71db42728 <col:7> 'const Timestamp' lvalue ParmVar 0x55b71db41da8 '' 'const Timestamp &'
|   `-ReturnStmt 0x55b71db42888 <col:7>
|     `-UnaryOperator 0x55b71db42870 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b71db42860 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55b71db42148 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55b71db42258 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55b71deccaf8 <col:7>
    |-CXXMemberCallExpr 0x55b71decca98 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55b71decca00 <col:7> '<bound member function type>' .operator= 0x55b71db41fc8
    | | `-MemberExpr 0x55b71decc8d0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55b71de3b148
    | |   `-CXXThisExpr 0x55b71decc8c0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55b71decc9d0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55b71de3b148
    |   `-CXXStaticCastExpr 0x55b71decc9a0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55b71decc970 <col:7> 'Timestamp' lvalue ParmVar 0x55b71db42258 '' 'Timestamp &&'
    `-ReturnStmt 0x55b71deccae8 <col:7>
      `-UnaryOperator 0x55b71deccad0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55b71deccac0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dec9ad8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55b71dec9c08 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55b71deca6f8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.17 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e113c90 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71e113da8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55b71e113e78 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55b71e113ed8 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55b71e113f40 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55b71e113fc8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55b71e114230 <col:16, line:46:5>
|   |-BinaryOperator 0x55b71e114178 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55b71e114098 <col:9> 'TaskLink *' lvalue ->_prev 0x55b71e113e78
|   | | `-CXXThisExpr 0x55b71e114088 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55b71e114160 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55b71e114140 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55b71e1140d8 <col:17> 'TaskLink *' lvalue ->_next 0x55b71e113ed8
|   |     | `-CXXThisExpr 0x55b71e1140c8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55b71e114128 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55b71e114108 <col:25> 'int' 0
|   `-BinaryOperator 0x55b71e114210 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55b71e1141a8 <col:9> 'unsigned int' lvalue ->_pass 0x55b71e113f40
|     | `-CXXThisExpr 0x55b71e114198 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55b71e1141f8 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55b71e1141d8 <col:17> 'int' 0
|-CXXConstructorDecl 0x55b71e189f68 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55b71e189f68
| `-ParmVarDecl 0x55b71e18a078 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55b71e18a118 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55b71e18a118
| `-ParmVarDecl 0x55b71e18a228 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55b71e18a418 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55b71e18a418
|-CXXMethodDecl 0x55b71e18ac18 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55b71e18ac18
| `-ParmVarDecl 0x55b71e18ad28 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55b71e18ad98 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55b71e18ad98
  `-ParmVarDecl 0x55b71e18aea8 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e11abc8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55b71e11d490 prev 0x55b71e11abc8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b71e11e690 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55b71e11e640 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55b71e11e620 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55b71e11e4d0 'type'
|     `-SubstTemplateTypeParmType 0x55b71e11e2f0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55b71dc16000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc15fa8 'T'
|       `-RecordType 0x55b71e11de40 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55b71e11dd58 'sized_array_memory'
|-FieldDecl 0x55b71e1222c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55b71e122310 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b71e122348 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55b71e11d520 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dc4c168 'T'
|   `-RecordType 0x55b71e119dd0 'TimerSet::heap_element'
|     `-CXXRecord 0x55b71e119d40 'heap_element'
|-TypedefDecl 0x55b71e122408 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55b71e1223d0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55b71e11d520 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71e119dd0 'TimerSet::heap_element'
|       `-CXXRecord 0x55b71e119d40 'heap_element'
|-TypedefDecl 0x55b71e122498 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55b71e122460 'const TimerSet::heap_element &'
|   `-QualType 0x55b71e11d521 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55b71e11d520 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e119dd0 'TimerSet::heap_element'
|         `-CXXRecord 0x55b71e119d40 'heap_element'
|-TypedefDecl 0x55b71e122528 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55b71e1224f0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55b71e11d520 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71e119dd0 'TimerSet::heap_element'
|       `-CXXRecord 0x55b71e119d40 'heap_element'
|-TypedefDecl 0x55b71e1225e8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55b71e1225b0 'const TimerSet::heap_element *'
|   `-QualType 0x55b71e11d521 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55b71e11d520 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e119dd0 'TimerSet::heap_element'
|         `-CXXRecord 0x55b71e119d40 'heap_element'
|-TypedefDecl 0x55b71e123240 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55b71e1231f0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55b71e1231d0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55b71e123108 'type'
|     `-LValueReferenceType 0x55b71e1230d0 'const TimerSet::heap_element &'
|       `-QualType 0x55b71e122e71 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55b71e122e70 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55b71dc1dad0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b71dc1da78 'T'
|           `-RecordType 0x55b71e119dd0 'TimerSet::heap_element'
|             `-CXXRecord 0x55b71e119d40 'heap_element'
|-TypedefDecl 0x55b71e1232a8 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55b71e122460 'const TimerSet::heap_element &'
|   `-QualType 0x55b71e11d521 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55b71e11d520 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e119dd0 'TimerSet::heap_element'
|         `-CXXRecord 0x55b71e119d40 'heap_element'
|-TypedefDecl 0x55b71e123300 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e123368 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55b71e1224f0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55b71e11d520 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71e119dd0 'TimerSet::heap_element'
|       `-CXXRecord 0x55b71e119d40 'heap_element'
|-TypedefDecl 0x55b71e1233d0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55b71e1225b0 'const TimerSet::heap_element *'
|   `-QualType 0x55b71e11d521 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55b71e11d520 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e119dd0 'TimerSet::heap_element'
|         `-CXXRecord 0x55b71e119d40 'heap_element'
|-EnumDecl 0x55b71e123428 <line:134:5> col:5
| `-EnumConstantDecl 0x55b71e123520 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b71e123500 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b71dc4d388 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b71dc4d360 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b71dc4d340 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b71e1235a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b71e123838 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e123660 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e123700 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55b71e123af8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55b71e1239e0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55b71e123db8 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55b71e123ca0 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55b71e124100 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55b71e123fe0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55b71e124410 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55b71e1242f0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55b71e124700 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e124548 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1245c0 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55b71e124858 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55b71e124938 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e124990 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1249d8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55b71e124a88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e124ae0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e124ba8 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55b71e124c58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e124cb0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e124cf8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55b71e124da8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e124e00 <col:30> Inherited
|-CXXMethodDecl 0x55b71e124e48 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55b71e124ef8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e124f50 <col:30> Inherited
|-CXXMethodDecl 0x55b71e124f98 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55b71e125048 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1250a0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1250c8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e125178 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e125228 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55b71e1253e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1252d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e125350 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55b71e126980 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1268f0 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e126b28 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55b71e126a38 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e126be0 <col:20>
| `-OptimizeNoneAttr 0x55b71e126c38 <col:30>
|-CXXMethodDecl 0x55b71e126d58 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55b71e126c60 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e126e10 <col:20>
| `-OptimizeNoneAttr 0x55b71e126e68 <col:30>
|-CXXMethodDecl 0x55b71e126f20 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e126e90 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e127068 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e126fd8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e127198 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55b71e1272c8 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55b71e127398 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55b71e127468 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55b71e1275a8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e127518 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1276f0 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e127660 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e127838 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b71e1277a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e1278f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b71e1279f0 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b71e127960 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e127aa8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b71e127b68 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55b71e127c68 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55b71e127e18 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e127d28 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55b71e1285d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b71e127ed0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55b71e128538 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55b71e128438 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55b71e1286b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e128808 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e128778 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55b71e1288c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b71e128b08 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e128980 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55b71e1289f8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55b71e128cc8 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55b71e128bd8 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55b71e128f18 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55b71e128d90 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55b71e128e08 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55b71e128fd8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e129238 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55b71e129140 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55b71e129308 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b71e129308

Layout: <CGRecordLayout
  LLVMType:%class.Vector.18 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.18 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e129450 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55b71e129658 prev 0x55b71e129450 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b71e12a670 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55b71e12a620 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55b71e12a600 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55b71e12a4b0 'type'
|     `-SubstTemplateTypeParmType 0x55b71df6d1e0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55b71dc16000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc15fa8 'T'
|       `-RecordType 0x55b71df6cd30 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55b71df6cc48 'sized_array_memory'
|-FieldDecl 0x55b71e12a770 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55b71e12a7c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b71e12a7f8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55b71e1296f0 'Timer *' sugar
|   |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dc4c168 'T'
|   `-PointerType 0x55b71dea50b0 'Timer *'
|     `-RecordType 0x55b71dea4200 'Timer'
|       `-CXXRecord 0x55b71de23fa8 'Timer'
|-TypedefDecl 0x55b71e12a8b8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55b71e12a880 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55b71e1296f0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-PointerType 0x55b71dea50b0 'Timer *'
|       `-RecordType 0x55b71dea4200 'Timer'
|         `-CXXRecord 0x55b71de23fa8 'Timer'
|-TypedefDecl 0x55b71e12a978 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55b71e12a940 'Timer *const &'
|   `-QualType 0x55b71e1296f1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55b71e1296f0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71dea50b0 'Timer *'
|         `-RecordType 0x55b71dea4200 'Timer'
|           `-CXXRecord 0x55b71de23fa8 'Timer'
|-TypedefDecl 0x55b71e12aa38 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55b71e12aa00 'Timer **'
|   `-SubstTemplateTypeParmType 0x55b71e1296f0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-PointerType 0x55b71dea50b0 'Timer *'
|       `-RecordType 0x55b71dea4200 'Timer'
|         `-CXXRecord 0x55b71de23fa8 'Timer'
|-TypedefDecl 0x55b71e12aaf8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55b71e12aac0 'Timer *const *'
|   `-QualType 0x55b71e1296f1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55b71e1296f0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71dea50b0 'Timer *'
|         `-RecordType 0x55b71dea4200 'Timer'
|           `-CXXRecord 0x55b71de23fa8 'Timer'
|-TypedefDecl 0x55b71e12b6d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55b71e12b680 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55b71e12b660 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55b71e12b5f0 'type'
|     `-SubstTemplateTypeParmType 0x55b71e12b3b0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55b71dc1e200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc1e1b0 'T'
|       `-PointerType 0x55b71dea50b0 'Timer *'
|         `-RecordType 0x55b71dea4200 'Timer'
|           `-CXXRecord 0x55b71de23fa8 'Timer'
|-TypedefDecl 0x55b71e12b738 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55b71e12a940 'Timer *const &'
|   `-QualType 0x55b71e1296f1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55b71e1296f0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71dea50b0 'Timer *'
|         `-RecordType 0x55b71dea4200 'Timer'
|           `-CXXRecord 0x55b71de23fa8 'Timer'
|-TypedefDecl 0x55b71e12b790 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e12b7f8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55b71e12aa00 'Timer **'
|   `-SubstTemplateTypeParmType 0x55b71e1296f0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-PointerType 0x55b71dea50b0 'Timer *'
|       `-RecordType 0x55b71dea4200 'Timer'
|         `-CXXRecord 0x55b71de23fa8 'Timer'
|-TypedefDecl 0x55b71e12b860 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55b71e12aac0 'Timer *const *'
|   `-QualType 0x55b71e1296f1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55b71e1296f0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-PointerType 0x55b71dea50b0 'Timer *'
|         `-RecordType 0x55b71dea4200 'Timer'
|           `-CXXRecord 0x55b71de23fa8 'Timer'
|-EnumDecl 0x55b71e12b8b8 <line:134:5> col:5
| `-EnumConstantDecl 0x55b71e12b9b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b71e12b990 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b71dc4d388 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b71dc4d360 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b71dc4d340 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b71e12ba38 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b71e12bcc8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e12baf0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e12bb90 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55b71e12bf88 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55b71e12be70 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55b71e12c248 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55b71e12c130 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55b71e12c590 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55b71e12c470 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55b71e12c8a0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55b71e12c780 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55b71e12cb90 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e12c9d8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e12ca50 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55b71e12cce8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55b71e12cdc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e12ce20 <col:30> Inherited
|-CXXMethodDecl 0x55b71e12ce68 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55b71e12cf18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e12cf70 <col:30> Inherited
|-CXXMethodDecl 0x55b71e12d038 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55b71e12d0e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e12d140 <col:30> Inherited
|-CXXMethodDecl 0x55b71e12d188 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55b71e12d238 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e12d290 <col:30> Inherited
|-CXXMethodDecl 0x55b71e12d2d8 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55b71e12d388 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e12d3e0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e12d428 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55b71e12d4d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e12d530 <col:30> Inherited
|-CXXMethodDecl 0x55b71e12d558 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e12d608 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e12d6b8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b71e12d878 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e12d768 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e12d7e0 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55b71e12d9c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e12d938 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e12db78 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55b71e12da80 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e12dc30 <col:20>
| `-OptimizeNoneAttr 0x55b71e12dc88 <col:30>
|-CXXMethodDecl 0x55b71e12dda8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55b71e12dcb0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e12de60 <col:20>
| `-OptimizeNoneAttr 0x55b71e12deb8 <col:30>
|-CXXMethodDecl 0x55b71e12df70 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e12dee0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e12e0b8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e12e028 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e12e1e8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55b71e12e318 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55b71e12e3e8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55b71e12e4b8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55b71e12e5f8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e12e568 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e12e740 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e12e6b0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e12fa60 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55b71e12e7f8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e12fb18 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b71e12fc18 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b71e12fb88 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e12fcd0 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b71e12fd88 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55b71e12fe88 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55b71e130008 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e12ff48 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55b71e1307c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b71e1300c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55b71e130728 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55b71e130628 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55b71e1308a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e1309f8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e130968 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55b71e130ab0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b71e130cf8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e130b70 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55b71e130be8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55b71e130eb8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55b71e130dc8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55b71e131108 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55b71e130f80 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55b71e130ff8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55b71e1311c8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e131428 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55b71e131330 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55b71e1314f8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b71e1314f8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.19 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.19 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dc03a40 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71dc03b58 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55b71dc03be8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55b71dc03c70 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55b71dc03d60 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55b71dc03e60 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55b71dc03f20 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55b71dc03fe0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55b71dc04108 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55b71dc04108
| `-ParmVarDecl 0x55b71dc04218 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55b71e1322a8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55b71e1322a8
  `-ParmVarDecl 0x55b71e1323b8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e118ec0 prev 0x55b71deca588 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55b71e118fb8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55b71e119048 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55b71e1190d0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55b71e1191c8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55b71e132720 <col:43, col:67>
|   `-ReturnStmt 0x55b71e132710 <col:45, col:52>
|     `-CXXConstructExpr 0x55b71e1326e0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55b71e1326b0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55b71e11a9b0
|         `-CXXThisExpr 0x55b71e1326a0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55b71e119288 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55b71e119490 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55b71e119338 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55b71e1193b0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55b71e119588 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55b71e119650 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55b71e1327a0 <col:39, col:67>
|   `-ReturnStmt 0x55b71e132790 <col:41, col:48>
|     `-ImplicitCastExpr 0x55b71e132778 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55b71e132748 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55b71e11aa98
|         `-CXXThisExpr 0x55b71e132738 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55b71e119718 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55b71e132820 <col:35, col:59>
|   `-ReturnStmt 0x55b71e132810 <col:37, col:44>
|     `-ImplicitCastExpr 0x55b71e1327f8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55b71e1327c8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55b71e11ab00
|         `-CXXThisExpr 0x55b71e1327b8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55b71e119860 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55b71e1197d0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55b71e1199a8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55b71e119918 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55b71e119ba8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55b71e119a60 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55b71e119ad8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55b71e119c78 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55b71e119d18 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55b71e119d40 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b71e119e58 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55b71e119ef8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55b71e119f58 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55b71e11a088 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55b71e119fb8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55b71e119ef8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55b71e1328f8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55b71e1328a0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55b71e132870 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55b71de25618
|   |       `-ImplicitCastExpr 0x55b71e1328c0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55b71e132858 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55b71e132838 <col:17> 'Timer *' lvalue ParmVar 0x55b71e119fb8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55b71e119f58 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55b71e132990 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b71e132950 <col:41> 'Timer *' lvalue ParmVar 0x55b71e119fb8 't_' 'Timer *'
|   `-CompoundStmt 0x55b71e1329e0 <col:45, line:44:2>
|-CXXRecordDecl 0x55b71e11a150 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b71e11a268 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55b71e11a4b8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55b71e11a338 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55b71e11a3b0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55b71e132b40 <col:71, line:49:2>
|     `-ReturnStmt 0x55b71e132b30 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55b71e132af8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55b71e132ae0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55b71e132ac0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55b71de5bc68 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55b71e132a10 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55b71e119ef8
|         | `-DeclRefExpr 0x55b71e1329f0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55b71e11a338 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55b71e132a60 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55b71e119ef8
|           `-DeclRefExpr 0x55b71e132a40 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55b71e11a3b0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55b71e11a580 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b71e11a698 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55b71e11a8b8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55b71e11a738 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55b71e11a7b0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55b71e132d48 <col:63, line:54:2>
|     `-BinaryOperator 0x55b71e132d28 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55b71e132bd8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55b71dec9a28
|       | `-ImplicitCastExpr 0x55b71e132bc0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55b71e132b90 <col:6, col:9> 'Timer *' lvalue ->t 0x55b71e119f58
|       |     `-ImplicitCastExpr 0x55b71e132b78 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55b71e132b58 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55b71e11a7b0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55b71e132d10 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55b71e132cf0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55b71e132c98 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55b71e132c78 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55b71e132c48 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55b71e132c08 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55b71e11a7b0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55b71e132c60 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55b71e132c28 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55b71e11a738 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55b71e132cd8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55b71e132cb8 <col:39> 'int' 1
|-FieldDecl 0x55b71e11a9b0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55b71e11aa20 <col:44, col:53> aligned
|   `-ConstantExpr 0x55b71e11aa00 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55b71e11a980 <col:52> 'int' 8
|-FieldDecl 0x55b71e11aa98 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55b71e11ab00 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55b71e11ab68 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55b71e1293f0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55b71e1315e0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55b71e131640 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55b71e1316a0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55b71e131700 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71e1317f0 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55b71e131760 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55b71e1318b8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55b71e1331a0 <col:29, line:81:5>
|   `-IfStmt 0x55b71e133178 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55b71e132e30 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55b71e132dd0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55b71e132da0 <col:6, col:18> '<bound member function type>' .size 0x55b71e1250c8
|     |     `-ImplicitCastExpr 0x55b71e132e18 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55b71e132d70 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55b71e1293f0
|     |         `-CXXThisExpr 0x55b71e132d60 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55b71e133020 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55b71e133008 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55b71e132fe8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55b71db41ca0 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55b71e132e58 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55b71e11a9b0
|     | | `-CXXThisExpr 0x55b71e132e48 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55b71e132fd0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55b71e132fa0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55b71e119ef8
|     |     `-CXXMemberCallExpr 0x55b71e132f78 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55b71e132f48 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55b71e1275a8
|     |       | `-MemberExpr 0x55b71e132e98 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55b71e1293f0
|     |       |   `-CXXThisExpr 0x55b71e132e88 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55b71e132f28 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55b71e133160 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55b71e133128 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55b71e133110 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55b71e1330f0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55b71db42148 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55b71e133068 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55b71e11a9b0
|         | `-CXXThisExpr 0x55b71e133058 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55b71e1330d8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b71e1330a8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55b71e1319f8 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55b71e131968 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55b71e131ac0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55b71e131b80 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55b71e131c40 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55b71e131d30 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55b71e131d98 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55b71e131d98
| `-ParmVarDecl 0x55b71e131ea8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55b71e131f48 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55b71e131f48
| `-ParmVarDecl 0x55b71e132058 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55b71e1320f8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55b71e1320f8
| `-ParmVarDecl 0x55b71e132208 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55b71e132428 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55b71e132428
| `-ParmVarDecl 0x55b71e132538 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55b71e1325c0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55b71e1325c0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.18, %class.Vector.19, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.18, %class.Vector.19, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71dd58368 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55b71dd58578 prev 0x55b71dd58368 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b71e174110 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55b71e1740c0 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55b71e1740a0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55b71e173f50 'type'
|     `-SubstTemplateTypeParmType 0x55b71df6d1e0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55b71dc16000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc15fa8 'T'
|       `-RecordType 0x55b71df6cd30 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55b71df6cc48 'sized_array_memory'
|-FieldDecl 0x55b71e174210 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55b71e174260 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b71e174298 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55b71dd58610 'pollfd' sugar
|   |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dc4c168 'T'
|   `-RecordType 0x55b71dd56420 'pollfd'
|     `-CXXRecord 0x55b71dd56390 'pollfd'
|-TypedefDecl 0x55b71e174358 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55b71e174320 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55b71dd58610 'pollfd' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71dd56420 'pollfd'
|       `-CXXRecord 0x55b71dd56390 'pollfd'
|-TypedefDecl 0x55b71e174418 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55b71e1743e0 'const pollfd &'
|   `-QualType 0x55b71dd58611 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55b71dd58610 'pollfd' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71dd56420 'pollfd'
|         `-CXXRecord 0x55b71dd56390 'pollfd'
|-TypedefDecl 0x55b71e1744a8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55b71e174470 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55b71dd58610 'pollfd' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71dd56420 'pollfd'
|       `-CXXRecord 0x55b71dd56390 'pollfd'
|-TypedefDecl 0x55b71e174568 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55b71e174530 'const pollfd *'
|   `-QualType 0x55b71dd58611 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55b71dd58610 'pollfd' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71dd56420 'pollfd'
|         `-CXXRecord 0x55b71dd56390 'pollfd'
|-TypedefDecl 0x55b71e175140 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55b71e1750f0 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55b71e1750d0 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55b71e175060 'type'
|     `-SubstTemplateTypeParmType 0x55b71e174e20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55b71dc1e200 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc1e1b0 'T'
|       `-RecordType 0x55b71dd56420 'pollfd'
|         `-CXXRecord 0x55b71dd56390 'pollfd'
|-TypedefDecl 0x55b71e1751a8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55b71e1743e0 'const pollfd &'
|   `-QualType 0x55b71dd58611 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55b71dd58610 'pollfd' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71dd56420 'pollfd'
|         `-CXXRecord 0x55b71dd56390 'pollfd'
|-TypedefDecl 0x55b71e175200 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e175268 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55b71e174470 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55b71dd58610 'pollfd' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71dd56420 'pollfd'
|       `-CXXRecord 0x55b71dd56390 'pollfd'
|-TypedefDecl 0x55b71e1752d0 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55b71e174530 'const pollfd *'
|   `-QualType 0x55b71dd58611 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55b71dd58610 'pollfd' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71dd56420 'pollfd'
|         `-CXXRecord 0x55b71dd56390 'pollfd'
|-EnumDecl 0x55b71e175328 <line:134:5> col:5
| `-EnumConstantDecl 0x55b71e175420 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b71e175400 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b71dc4d388 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b71dc4d360 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b71dc4d340 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b71e1754a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b71e175738 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e175560 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e175600 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55b71e1759f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55b71e1758e0 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55b71e175cb8 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55b71e175ba0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55b71e176000 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55b71e175ee0 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55b71e176310 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55b71e1761f0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55b71e176600 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e176448 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1764c0 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55b71e176758 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55b71e176838 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e176890 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1768d8 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55b71e176988 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1769e0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e176aa8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55b71e176b58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e176bb0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e176bf8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55b71e176ca8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e176d00 <col:30> Inherited
|-CXXMethodDecl 0x55b71e176d48 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55b71e176df8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e176e50 <col:30> Inherited
|-CXXMethodDecl 0x55b71e176e98 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55b71e176f48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e176fa0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e176fc8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e177078 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e177128 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b71e1772e8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e1771d8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e177250 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55b71e177438 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1773a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1775e8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55b71e1774f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e1776a0 <col:20>
| `-OptimizeNoneAttr 0x55b71e1776f8 <col:30>
|-CXXMethodDecl 0x55b71e177818 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55b71e177720 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e1778d0 <col:20>
| `-OptimizeNoneAttr 0x55b71e177928 <col:30>
|-CXXMethodDecl 0x55b71e1779e0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e177950 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e177b28 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e177a98 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e177c58 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55b71e177d88 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55b71e177e58 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55b71e177f28 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55b71e178068 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e177fd8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1781b0 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e178120 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1782f8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b71e178268 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e1783b0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b71e1784b0 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b71e178420 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e178568 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b71e178628 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55b71e178728 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55b71e1788d8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e1787e8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55b71e179098 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b71e178990 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55b71e178ff8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55b71e178ef8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55b71e179178 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e1792c8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e179238 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55b71e179380 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b71e1795c8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e179440 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55b71e1794b8 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55b71e179788 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55b71e179698 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55b71e1799d8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55b71e179850 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55b71e1798c8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55b71e179a98 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e179cf8 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55b71e179c00 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55b71e179dc8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b71e179dc8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.20 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.20 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e17b2b0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55b71e17b4d0 prev 0x55b71e17b2b0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55b71e17b560 <col:46, col:52> col:46 public
|-TypedefDecl 0x55b71e17b588 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e17d150 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55b71e17d100 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55b71e17ba30 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55b71e17b930 'type'
|     `-TemplateSpecializationType 0x55b71e17b8c0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55b71e17b7a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55b71e17b780 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55b71e17b760 <col:24> 'unsigned long' 24
|       `-RecordType 0x55b71e17b8a0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55b71e17b7c0 'char_array'
|-TypedefDecl 0x55b71e17d208 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55b71e17d1d0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55b71e17d1b0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55b71e17d150 'type'
|     `-ElaboratedType 0x55b71e17d100 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55b71e17ba30 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55b71e17b930 'type'
|         `-TemplateSpecializationType 0x55b71e17b8c0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55b71e17b7a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55b71e17b780 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55b71e17b760 <col:24> 'unsigned long' 24
|           `-RecordType 0x55b71e17b8a0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55b71e17b7c0 'char_array'
|-CXXMethodDecl 0x55b71e17d388 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55b71e17d298 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55b71e17d478 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55b71e17d558 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55b71e17d558
|-CXXMethodDecl 0x55b71e17d828 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55b71e17d730 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55b71e17da68 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55b71e17d8e0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e17d958 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55b71e17dc38 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55b71e17db28 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e17dba0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55b71e17dd98 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55b71e17de68 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55b71e17e0b8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55b71e17df28 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55b71e17dfa0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55b71e17e318 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55b71e17e188 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55b71e17e200 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55b71e17e4d8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55b71e17e3e8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55b71e17e698 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55b71e17e5a0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55b71e17e750 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e17e800 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e17ea38 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55b71e17e8b0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e17e928 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55b71e17ecd8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55b71e17ebe0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55b71e17eda0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55b71e17edf0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55b71e17ee40 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.22 = type { %struct.char_array.23*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.22 = type { %struct.char_array.23*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e179f10 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55b71e17a118 prev 0x55b71e179f10 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b71e17b220 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55b71e17b1d0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55b71e17b1b0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55b71e17b060 'type'
|     `-SubstTemplateTypeParmType 0x55b71e17ae80 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55b71dc16000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc15fa8 'T'
|       `-RecordType 0x55b71e05cc70 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55b71e05cb88 'sized_array_memory'
|-FieldDecl 0x55b71e17ee90 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55b71e17eee0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b71e17ef18 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55b71e17a1b0 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dc4c168 'T'
|   `-RecordType 0x55b71dd57ed0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55b71dd57e40 'SelectorInfo'
|-TypedefDecl 0x55b71e17efd8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55b71e17efa0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55b71e17a1b0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71dd57ed0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55b71dd57e40 'SelectorInfo'
|-TypedefDecl 0x55b71e17f098 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55b71e17f060 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55b71e17a1b1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55b71e17a1b0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71dd57ed0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55b71dd57e40 'SelectorInfo'
|-TypedefDecl 0x55b71e17f128 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55b71e17f0f0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55b71e17a1b0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71dd57ed0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55b71dd57e40 'SelectorInfo'
|-TypedefDecl 0x55b71e17f1e8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55b71e17f1b0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55b71e17a1b1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55b71e17a1b0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71dd57ed0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55b71dd57e40 'SelectorInfo'
|-TypedefDecl 0x55b71e17fe40 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55b71e17fdf0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55b71e17fdd0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55b71e17fd08 'type'
|     `-LValueReferenceType 0x55b71e17fcd0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55b71e17fa71 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55b71e17fa70 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55b71dc1dad0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b71dc1da78 'T'
|           `-RecordType 0x55b71dd57ed0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55b71dd57e40 'SelectorInfo'
|-TypedefDecl 0x55b71e17fea8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55b71e17f060 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55b71e17a1b1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55b71e17a1b0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71dd57ed0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55b71dd57e40 'SelectorInfo'
|-TypedefDecl 0x55b71e17ff00 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e17ff68 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55b71e17f0f0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55b71e17a1b0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71dd57ed0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55b71dd57e40 'SelectorInfo'
|-TypedefDecl 0x55b71e17ffd0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55b71e17f1b0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55b71e17a1b1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55b71e17a1b0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71dd57ed0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55b71dd57e40 'SelectorInfo'
|-EnumDecl 0x55b71e180028 <line:134:5> col:5
| `-EnumConstantDecl 0x55b71e180120 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b71e180100 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b71dc4d388 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b71dc4d360 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b71dc4d340 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b71e1801a8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55b71e180438 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e180260 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e180300 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55b71e1806f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55b71e1805e0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55b71e1809b8 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55b71e1808a0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55b71e180d00 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55b71e180be0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55b71e181010 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55b71e180ef0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55b71e181300 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e181148 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e1811c0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55b71e181458 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55b71e181538 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e181590 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1815d8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55b71e181688 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1816e0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1817a8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55b71e181858 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e1818b0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e1818f8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55b71e1819a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e181a00 <col:30> Inherited
|-CXXMethodDecl 0x55b71e181a48 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55b71e181af8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e181b50 <col:30> Inherited
|-CXXMethodDecl 0x55b71e181b98 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55b71e181c48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e181ca0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e181cc8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e181d78 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e181e28 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b71e181fe8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e181ed8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e181f50 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55b71e182138 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e1820a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e1822e8 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55b71e1821f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e1823a0 <col:20>
| `-OptimizeNoneAttr 0x55b71e1823f8 <col:30>
|-CXXMethodDecl 0x55b71e182518 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55b71e182420 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e1825d0 <col:20>
| `-OptimizeNoneAttr 0x55b71e182628 <col:30>
|-CXXMethodDecl 0x55b71e1826e0 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e182650 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e182828 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e182798 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e182958 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55b71e182a88 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55b71e182b58 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55b71e182c28 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55b71e182d68 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e182cd8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e182eb0 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e182e20 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e182ff8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b71e182f68 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e1830b0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b71e1831b0 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b71e183120 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e183268 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b71e183328 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55b71e183428 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55b71e1835f8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e183500 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55b71e183db8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b71e1836b0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55b71e183d18 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55b71e183c18 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55b71e183e98 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e183fe8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e183f58 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55b71e1840a0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b71e1842e8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e184160 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55b71e1841d8 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55b71e1844a8 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55b71e1843b8 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55b71e1846f8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55b71e184570 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55b71e1845e8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55b71e1847b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e184a18 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55b71e184920 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55b71e184ae8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55b71e184ae8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.21 = type { %class.vector_memory.22 }
  NonVirtualBaseLLVMType:%class.Vector.21 = type { %class.vector_memory.22 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dd57020 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71dd57138 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55b71dd571c8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55b71dd57250 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55b71dd57340 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55b71dd57340
|-CXXMethodDecl 0x55b71dd57440 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55b71dd576e0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55b71dd574f8 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55b71dd57570 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55b71dd575f0 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55b71dd57950 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55b71dd577b0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55b71dd57828 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55b71dd578a8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55b71dd57aa8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55b71dd57a18 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55b71dd57b70 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55b71e186198 <col:34, line:50:5>
|   |-BinaryOperator 0x55b71e185b68 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55b71e185b28 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55b71dd582f8
|   | | `-CXXThisExpr 0x55b71e185b18 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55b71e185b58 <col:23> 'bool' true
|   `-CallExpr 0x55b71e186170 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55b71e186158 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55b71e1860d8 <col:2> 'void (long)' lvalue Function 0x55b71e185fd8 'ignore_result' 'void (long)' (FunctionTemplate 0x55b71dc09ff8 'ignore_result')
|     `-CallExpr 0x55b71e185d80 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55b71e185d68 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b71e185ce8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55b71e1361c8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55b71e185db8 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55b71e185c90 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55b71e185c78 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55b71e185c28 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55b71dd58298
|       |   |   `-CXXThisExpr 0x55b71e185c18 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55b71e185c58 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55b71e185de8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55b71e185dd0 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55b71e185cb0 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55b71e185e00 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55b71e185cc8 <col:41> 'int' 1
|-CXXMethodDecl 0x55b71dd57cb0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55b71dd57c20 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55b71dd57d78 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55b71dd57e18 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55b71dd57e40 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b71dd57f58 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55b71dd57ff8 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55b71dd58058 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55b71dd580c0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55b71dd58170 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55b71dd57ff8 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55b71e1861f8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55b71e1861b8 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55b71dd58058 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55b71e186278 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55b71e186238 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55b71dd580c0 'pollfd' 'int'
|   | `-UnaryOperator 0x55b71e1862d8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55b71e1862b8 <col:35> 'int' 1
|   `-CompoundStmt 0x55b71e186350 <line:64:2, line:65:2>
|-FieldDecl 0x55b71dd58298 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55b71dd582f8 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55b71e179eb0 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55b71e184bd0 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55b71e184e08 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55b71e184c38 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55b71e184cb0 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55b71e184d28 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55b71e184ff0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55b71e184ed8 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55b71e184f58 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55b71e185238 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55b71e1850b8 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55b71e185138 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55b71e185448 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55b71e1852f8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55b71e185370 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55b71e185598 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55b71e185508 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55b71e185660 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55b71e185720 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55b71e1857e8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55b71e1857e8
| `-ParmVarDecl 0x55b71e1858f8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55b71e185998 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55b71e185998
  `-ParmVarDecl 0x55b71e185aa8 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.20, %class.Vector.21 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.20, %class.Vector.21 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dc029b0 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71dc02ac8 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55b71dc02b58 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55b71dc02be0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55b71dc02cd0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55b71dc02dd0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55b71dc02e90 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55b71dc02f50 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55b71dc03038 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55b71dc03158 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55b71dc03158
| `-ParmVarDecl 0x55b71dc03268 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55b71e18af48 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55b71e18af48
  `-ParmVarDecl 0x55b71e18b058 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e116e68 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71e116f88 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55b71e117028 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55b71e117088 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55b71e18a548 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55b71e18a548
| `-ParmVarDecl 0x55b71e18a658 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55b71e18a6f8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55b71e18a6f8
| `-ParmVarDecl 0x55b71e18a808 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55b71e18a878 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55b71e18a878
|-CXXMethodDecl 0x55b71e18b0f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55b71e18b0f8
| `-ParmVarDecl 0x55b71e18b208 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55b71e18b278 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55b71e18b278
| `-ParmVarDecl 0x55b71e18b388 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55b71e1919a8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55b71e191a80 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dc048a0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71dc049b8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55b71dc04a48 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55b71dc04ad0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55b71dc04b90 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-CXXMethodDecl 0x55b71dc04c58 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55b71dc04cf8 <col:45> always_inline
|-CXXMethodDecl 0x55b71dc04e28 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55b71dc04d60 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55b71dc04ed0 <col:49> always_inline
|-CXXConstructorDecl 0x55b71dc04fc8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55b71dc04fc8
| `-ParmVarDecl 0x55b71dc050d8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55b71dc05178 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55b71dc05178
| `-ParmVarDecl 0x55b71dc06458 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55b71e18a960 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55b71e18a960
|-CXXMethodDecl 0x55b71e18b428 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55b71e18b428
| `-ParmVarDecl 0x55b71e18b558 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55b71e18b5c8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55b71e18b5c8
  `-ParmVarDecl 0x55b71e18b6d8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e1867c0 prev 0x55b71dd56f90 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55b71e1868b8 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55b71e186948 <col:22, col:28> col:22 public
|-EnumDecl 0x55b71e186970 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55b71e186a88 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55b71e186a68 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55b71e186a50 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b71e186a30 <col:32> 'int' 1
| `-EnumConstantDecl 0x55b71e186b30 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55b71e186b10 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55b71e186af8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55b71e186ad8 <col:53> 'int' 1000
|-CXXMethodDecl 0x55b71e186bd0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55b71e186c90 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55b71e186d78 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55b71e18b798 <col:34, col:52>
|   `-ReturnStmt 0x55b71e18b788 <col:36, col:43>
|     `-MemberExpr 0x55b71e18b758 <col:43> 'TimerSet' lvalue ->_timers 0x55b71e188a48
|       `-CXXThisExpr 0x55b71e18b748 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55b71e186e68 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55b71e18b800 <col:46, col:64>
|   `-ReturnStmt 0x55b71e18b7f0 <col:48, col:55>
|     `-MemberExpr 0x55b71e18b7c0 <col:55> 'const TimerSet' lvalue ->_timers 0x55b71e188a48
|       `-CXXThisExpr 0x55b71e18b7b0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55b71e186f58 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55b71e18b868 <col:36, col:55>
|   `-ReturnStmt 0x55b71e18b858 <col:38, col:45>
|     `-MemberExpr 0x55b71e18b828 <col:45> 'SelectSet' lvalue ->_selects 0x55b71e188aa8
|       `-CXXThisExpr 0x55b71e18b818 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55b71e187048 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55b71e18b8d0 <col:48, col:67>
|   `-ReturnStmt 0x55b71e18b8c0 <col:50, col:57>
|     `-MemberExpr 0x55b71e18b890 <col:57> 'const SelectSet' lvalue ->_selects 0x55b71e188aa8
|       `-CXXThisExpr 0x55b71e18b880 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55b71e187108 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55b71e1871f8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55b71e187368 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55b71e1872a8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55b71e187430 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55b71e187878 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55b71e1874e0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55b71e187760 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55b71e187948 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55b71e187a08 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55b71e187ac8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55b71e187c08 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55b71e187b78 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55b71e187cd0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55b71e187d90 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55b71e187e50 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55b71e187f10 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55b71e188050 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55b71e187fc0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55b71e188118 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55b71e1881d8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55b71e188278 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55b71e188340 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b71e188390 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b71e1883e0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b71e188430 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b71e188480 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b71e1884d0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b71e188520 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b71e188570 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b71e1885c0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55b71e188610 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55b71e188660 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55b71e188758 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55b71e1886c8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55b71e1888a8 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55b71e188818 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55b71e188950 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55b71e188988 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55b71e1889e8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55b71e188a48 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55b71e188aa8 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55b71e188b28 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55b71e188b98 <col:40, col:50> aligned
|   `-ConstantExpr 0x55b71e188b78 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55b71e188af8 <col:48> 'int' 64
|-FieldDecl 0x55b71e188c08 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55b71e188c68 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55b71e188d60 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55b71e188e70 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55b71e188ed0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55b71e188f50 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55b71e188fc0 <col:36, col:46> aligned
|   `-ConstantExpr 0x55b71e188fa0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55b71e188f20 <col:44> 'int' 64
|-FieldDecl 0x55b71e189038 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55b71e189098 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55b71e1890e8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55b71e189128 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55b71e189190 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55b71e1891e0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55b71e189388 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55b71e189218 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55b71e189298 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55b71e189488 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55b71e189488
|-CXXMethodDecl 0x55b71e189590 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55b71e189658 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55b71e18b9c8 <col:34, line:217:5>
|   `-ReturnStmt 0x55b71e18b9b8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55b71e18b9a0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55b71e18b970 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55b71e113f40
|         `-ImplicitCastExpr 0x55b71e18b958 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55b71e18b928 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55b71e113ed8
|             `-MemberExpr 0x55b71e18b8f8 <col:16> 'const TaskLink' lvalue ->_task_link 0x55b71e188988
|               `-CXXThisExpr 0x55b71e18b8e8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55b71e189718 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55b71e1897d8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55b71e18c0f0 <col:39, line:226:5>
|   |-DeclStmt 0x55b71e18bc18 <line:223:9, col:68>
|   | `-VarDecl 0x55b71e18b9f0 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55b71e18bbd0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55b71e18bba0 <col:24, col:38> '<bound member function type>' .compare_swap 0x55b71dbfe0f0
|   |     | `-MemberExpr 0x55b71e18ba68 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55b71e188c08
|   |     |   `-CXXThisExpr 0x55b71e18ba58 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55b71e18bb58 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55b71e18bb40 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55b71e18bb18 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55b71e18baf8 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55b71e18bc00 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55b71e18bb80 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55b71e18bc60 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55b71e18bc30 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55b71e18b9f0 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55b71e18c0d0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55b71e18c0a0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55b71e18bd78 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55b71e18bd48 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55b71e18bd30 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55b71e18bc88 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55b71e18b9f0 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55b71e18bd08 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55b71e18bcf0 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55b71e18bcc8 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55b71e18bca8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55b71e18bdd8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55b71e18bdb8 <col:60> 'int' 0
|       `-CallExpr 0x55b71e18c000 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55b71e18bfe8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55b71e18bfc8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55b71e18c040 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55b71e18bec8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55b71e18c058 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55b71e18bef8 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55b71e18c070 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55b71e18bf38 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55b71e18c088 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55b71e18bfb0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55b71e18bf98 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55b71e18bf58 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55b71e189920 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55b71e189890 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55b71e1899e8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55b71e189aa8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55b71e189b68 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55b71e189c28 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55b71e189ce8 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55b71e189de0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55b71e189e40 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55b71e189ed0 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55b71e18a298 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55b71e18a298
| `-ParmVarDecl 0x55b71e18a3a8 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55b71e18aa68 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55b71e18aa68
  `-ParmVarDecl 0x55b71e18ab78 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71de23fa8 prev 0x55b71dea4170 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 referenced class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71de240a0 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55b71de24130 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55b71de24190 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55b71de24238 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55b71de24358 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55b71de244f8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55b71de24438 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55b71de24748 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55b71de245b8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55b71de24638 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55b71de248d8 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55b71de24810 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55b71de24a58 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55b71de24998 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55b71de24c08 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55b71de24b48 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55b71de24d00 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55b71deca8d0 <col:21, line:58:5>
|   `-IfStmt 0x55b71deca8b8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55b71deca820 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55b71deca7f0 <col:6> '<bound member function type>' ->scheduled 0x55b71de25558
|     |   `-ImplicitCastExpr 0x55b71deca840 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55b71deca7e0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55b71deca898 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55b71deca868 <col:6> '<bound member function type>' ->unschedule 0x55b71dec8f80
|         `-CXXThisExpr 0x55b71deca858 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55b71de24e00 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55b71decaa70 <col:26, line:65:5>
|   |-BinaryOperator 0x55b71deca990 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55b71deca928 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55b71dec9c08
|   | | `-MemberExpr 0x55b71deca8f8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55b71dec9cc8
|   | |   `-CXXThisExpr 0x55b71deca8e8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55b71deca978 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b71deca958 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55b71deca128 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55b71decaa50 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55b71deca9c0 <col:2> 'void *' lvalue ->_thunk 0x55b71dec9d48
|     | `-CXXThisExpr 0x55b71deca9b0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55b71decaa28 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55b71deca9f0 <col:20> 'int' 1
|-CXXMethodDecl 0x55b71de24f40 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55b71de24eb0 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55b71decabd0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55b71decaac0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55b71decaa90 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55b71de24eb0 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55b71decabb0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55b71decab80 <col:2> '<bound member function type>' ->assign 0x55b71de24e00
|       `-CXXThisExpr 0x55b71decab70 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55b71de25110 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55b71de24ff8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55b71de25078 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55b71decad50 <col:58, line:79:5>
|   |-BinaryOperator 0x55b71decac98 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55b71decac30 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55b71dec9c08
|   | | `-MemberExpr 0x55b71decac00 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55b71dec9cc8
|   | |   `-CXXThisExpr 0x55b71decabf0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55b71decac80 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b71decac60 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55b71de24ff8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55b71decad30 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55b71decacc8 <col:2> 'void *' lvalue ->_thunk 0x55b71dec9d48
|     | `-CXXThisExpr 0x55b71decacb8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55b71decad18 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55b71decacf8 <col:11> 'void *' lvalue ParmVar 0x55b71de25078 'user_data' 'void *'
|-CXXMethodDecl 0x55b71de25260 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55b71de251d0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55b71decaee8 <col:35, line:87:5>
|   |-BinaryOperator 0x55b71decae18 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55b71decadb0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55b71dec9c08
|   | | `-MemberExpr 0x55b71decad80 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55b71dec9cc8
|   | |   `-CXXThisExpr 0x55b71decad70 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55b71decae00 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b71decade0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55b71deca300 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55b71decaec8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55b71decae48 <col:2> 'void *' lvalue ->_thunk 0x55b71dec9d48
|     | `-CXXThisExpr 0x55b71decae38 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55b71decaeb0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55b71decae98 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55b71decae78 <col:11> 'Element *' lvalue ParmVar 0x55b71de251d0 'element' 'Element *'
|-CXXMethodDecl 0x55b71de253a8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55b71de25318 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55b71decb080 <col:29, line:94:5>
|   |-BinaryOperator 0x55b71decafb0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55b71decaf48 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55b71dec9c08
|   | | `-MemberExpr 0x55b71decaf18 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55b71dec9cc8
|   | |   `-CXXThisExpr 0x55b71decaf08 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55b71decaf98 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b71decaf78 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55b71deca4d8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55b71decb060 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55b71decafe0 <col:2> 'void *' lvalue ->_thunk 0x55b71dec9d48
|     | `-CXXThisExpr 0x55b71decafd0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55b71decb048 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55b71decb030 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55b71decb010 <col:11> 'Task *' lvalue ParmVar 0x55b71de25318 'task' 'Task *'
|-CXXMethodDecl 0x55b71de25498 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55b71decb160 <col:37, line:100:5>
|   `-ReturnStmt 0x55b71decb150 <line:99:2, col:19>
|     `-BinaryOperator 0x55b71decb130 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55b71decb100 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55b71decb0b0 <col:9> 'Element *const' lvalue ->_owner 0x55b71dec9da8
|       |   `-CXXThisExpr 0x55b71decb0a0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55b71decb118 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55b71decb0e0 <col:19> 'int' 0
|-CXXMethodDecl 0x55b71de25558 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55b71decb220 <col:35, line:105:5>
|   `-ReturnStmt 0x55b71decb210 <line:104:2, col:23>
|     `-BinaryOperator 0x55b71decb1f0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55b71decb1d8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55b71decb188 <col:9> 'const int' lvalue ->_schedpos1 0x55b71dec9a28
|       |   `-CXXThisExpr 0x55b71decb178 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55b71decb1b8 <col:23> 'int' 0
|-CXXMethodDecl 0x55b71de25618 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55b71decb288 <col:51, line:118:5>
|   `-ReturnStmt 0x55b71decb278 <line:117:2, col:9>
|     `-MemberExpr 0x55b71decb248 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55b71dec9a88
|       `-CXXThisExpr 0x55b71decb238 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55b71de256d8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55b71decb7e0 <col:37, line:136:5>
|   `-IfStmt 0x55b71decb7b8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55b71decb348 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55b71decb330 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55b71decb310 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55b71decb2e0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55b71de32ae8
|     |       `-MemberExpr 0x55b71decb2b0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55b71dec9a88
|     |         `-CXXThisExpr 0x55b71decb2a0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55b71decb728 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55b71decb710 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55b71decb6e0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55b71decb6c8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55b71decb690 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55b71decb678 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55b71decb658 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b71de5e1f0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55b71decb5f8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55b71decb5e0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55b71decb508 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55b71decb4f0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55b71decb4d0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b71de5deb0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55b71decb470 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55b71decb370 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55b71dec9a88
|     |         |     |   `-CXXThisExpr 0x55b71decb360 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55b71decb4b8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55b71decb4a0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55b71decb450 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55b71decb438 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55b71decb3d8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55b71dca3060 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55b71decb640 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55b71decb628 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55b71decb5c0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55b71decb5a8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55b71decb578 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55b71dca3d30 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55b71decb7a8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55b71decb778 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55b71decb748 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55b71dec9a88
|           `-CXXThisExpr 0x55b71decb738 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55b71de25798 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55b71decb8c8 <col:35, line:141:5>
|   `-ReturnStmt 0x55b71decb8b8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55b71decb880 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55b71decb850 <col:9, col:17> '<bound member function type>' ->router 0x55b71deb5910
|         `-ImplicitCastExpr 0x55b71decb8a0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55b71decb838 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55b71decb808 <col:9> 'Element *const' lvalue ->_owner 0x55b71dec9da8
|               `-CXXThisExpr 0x55b71decb7f8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55b71de25858 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55b71decb948 <col:37, line:146:5>
|   `-ReturnStmt 0x55b71decb938 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55b71decb920 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55b71decb8f0 <col:9> 'Element *const' lvalue ->_owner 0x55b71dec9da8
|         `-CXXThisExpr 0x55b71decb8e0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55b71de25918 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55b71decb9c8 <col:41, line:151:5>
|   `-ReturnStmt 0x55b71decb9b8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55b71decb9a0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55b71decb970 <col:9> 'RouterThread *const' lvalue ->_thread 0x55b71dec9e08
|         `-CXXThisExpr 0x55b71decb960 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55b71de259e0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55b71dec7fa0 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55b71de25a90 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55b71de25b08 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b71deca6e8 <col:50> 'bool' false
|-CXXMethodDecl 0x55b71dec8128 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55b71dec8060 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55b71dec8270 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55b71dec81e0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55b71dec83b8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55b71dec8328 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55b71dec8500 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55b71dec8470 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55b71dec8648 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55b71dec85b8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55b71dec8710 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55b71decbb30 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55b71decbb18 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55b71decbac0 <col:2, col:47> 'void'
|       |-MemberExpr 0x55b71decb9f0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55b71dec8270
|       | `-CXXThisExpr 0x55b71decb9e0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b71decbb00 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b71decbae8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55b71decbaa0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55b71decba88 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55b71decba58 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55b71dca3d30 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55b71dec8850 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55b71dec87c0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55b71dec8998 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b71dec8908 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71decbcb8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55b71decbca0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55b71decbc48 <col:2, col:40> 'void'
|       |-MemberExpr 0x55b71decbb58 <col:2> '<bound member function type>' ->schedule_after 0x55b71dec8850
|       | `-CXXThisExpr 0x55b71decbb48 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b71decbc88 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b71decbc70 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55b71decbc08 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55b71decbbd8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55b71decbb98 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71dec8908 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55b71decbbf0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55b71decbbb8 <col:38> 'int' 0
|-CXXMethodDecl 0x55b71dec8ae0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b71dec8a50 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71decbf28 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55b71decbf10 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55b71decbeb8 <col:2, col:49> 'void'
|       |-MemberExpr 0x55b71decbce0 <col:2> '<bound member function type>' ->schedule_after 0x55b71dec8850
|       | `-CXXThisExpr 0x55b71decbcd0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b71decbef8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b71decbee0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55b71decbe60 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55b71decbe48 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55b71decbdb8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55b71de348d8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55b71decbea0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55b71decbe88 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55b71decbd98 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71dec8a50 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71dec8c28 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55b71dec8b98 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55b71decc108 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55b71decc0f0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55b71decc098 <col:2, col:38> 'void'
|       |-MemberExpr 0x55b71decbf50 <col:2> '<bound member function type>' ->schedule_at_steady 0x55b71dec8270
|       | `-CXXThisExpr 0x55b71decbf40 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b71decc0d8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b71decc0c0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55b71decc060 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55b71decc048 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55b71decc028 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b71de5deb0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55b71decbff8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55b71decbfe0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55b71decbf90 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55b71dec9a88
|             |     `-CXXThisExpr 0x55b71decbf80 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55b71decbfc0 <col:33> 'const Timestamp' lvalue ParmVar 0x55b71dec8b98 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55b71dec8d70 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b71dec8ce0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71decc3e0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55b71decc3c8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55b71decc370 <col:2, col:79> 'void'
|       |-MemberExpr 0x55b71decc130 <col:2> '<bound member function type>' ->schedule_at_steady 0x55b71dec8270
|       | `-CXXThisExpr 0x55b71decc120 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b71decc3b0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b71decc398 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55b71decc330 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55b71decc268 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55b71decc250 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55b71decc1e0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55b71decc1b0 <col:31, col:41> '<bound member function type>' .sec 0x55b71dca5828
|             | |     `-ImplicitCastExpr 0x55b71decc200 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55b71decc180 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55b71dec9a88
|             | |         `-CXXThisExpr 0x55b71decc170 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55b71decc238 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55b71decc218 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71dec8ce0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55b71decc2f8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55b71decc2c8 <col:60, col:70> '<bound member function type>' .subsec 0x55b71dca5f20
|                 `-ImplicitCastExpr 0x55b71decc318 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55b71decc298 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55b71dec9a88
|                     `-CXXThisExpr 0x55b71decc288 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55b71dec8eb8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b71dec8e28 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b71decc718 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55b71decc700 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55b71decc6a8 <col:2, col:65> 'void'
|       |-MemberExpr 0x55b71decc408 <col:2> '<bound member function type>' ->schedule_at_steady 0x55b71dec8270
|       | `-CXXThisExpr 0x55b71decc3f8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b71decc6e8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b71decc6d0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55b71decc670 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55b71decc658 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55b71decc638 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b71de5deb0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55b71decc5d8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55b71decc5c0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55b71decc448 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55b71dec9a88
|             |     `-CXXThisExpr 0x55b71decc438 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55b71decc620 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55b71decc608 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55b71decc568 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55b71decc550 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55b71decc520 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55b71de348d8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55b71decc5a8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55b71decc590 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55b71decc500 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b71dec8e28 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71dec8f80 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55b71dec9040 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55b71deccbe0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55b71decc770 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55b71decc740 <col:2> '<bound member function type>' ->unschedule 0x55b71dec8f80
|   |   `-CXXThisExpr 0x55b71decc730 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55b71deccbc8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55b71deccb90 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55b71deccb78 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b71decc828 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55b71db42148 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55b71decc7a0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55b71dec9a88
|       | `-CXXThisExpr 0x55b71decc790 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b71decc810 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55b71decc7e0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55b71dec9100 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55b71deccf38 <col:42, line:310:5>
|   |-IfStmt 0x55b71deccd80 <line:306:2, line:307:23>
|   | |-CallExpr 0x55b71decccb0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55b71deccc98 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55b71deccc38 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55b71de4f9c0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55b71deccd70 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55b71deccd58 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55b71deccd28 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55b71deccd10 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55b71deccce0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55b71deccf28 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55b71deccf10 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55b71deccee0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b71deccec8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55b71decce88 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55b71decce70 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55b71decce40 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55b71de34bf0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55b71decceb0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55b71decce20 <col:30> 'int' 500
|-CXXMethodDecl 0x55b71dec9240 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b71dec91b0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b71dec92e8 <col:69> "" ""
|-CXXMethodDecl 0x55b71dec93f8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b71dec9368 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b71dec94a0 <col:70> "" ""
|-CXXMethodDecl 0x55b71dec95b0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b71dec9520 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b71dec9658 <col:71> "" ""
|-CXXMethodDecl 0x55b71dec9768 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b71dec96d8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b71dec9810 <col:72> "" ""
|-EnumDecl 0x55b71dec9880 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55b71dec9980 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55b71dec99d0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71dec9960 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55b71dec9940 <col:25> 'int' 1
|-AccessSpecDecl 0x55b71dec99e8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55b71dec9a28 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55b71dec9a88 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55b71dec9ad8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55b71dec9c08 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55b71deca6f8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55b71dec9cc8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55b71dec9d48 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55b71dec9da8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55b71dec9e08 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55b71dec9f58 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55b71dec9e68 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55b71deca128 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55b71deca010 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55b71deca090 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55b71deca300 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55b71deca1e8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55b71deca268 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55b71deca4d8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55b71deca3c0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55b71deca440 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55b71deca6a8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.17, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.17, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71df7ee38 prev 0x55b71df4f8f8 <../elements/ip/iprewriterbase.hh:81:1, line:182:1> line:81:7 referenced class IPRewriterBase definition
|-DefinitionData polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55b71df7ef70 <col:1, col:7> col:7 implicit referenced class IPRewriterBase
|-AccessSpecDecl 0x55b71df7f000 <col:41, col:47> col:41 public
|-TypedefDecl 0x55b71df7f160 <line:83:5, col:44> col:44 referenced Map 'HashContainer<IPRewriterEntry>':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55b71df7f0c0 'HashContainer<IPRewriterEntry>' sugar HashContainer
|   |-TemplateArgument type 'IPRewriterEntry'
|   `-RecordType 0x55b71df4e470 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55b71df4e370 'HashContainer'
|-EnumDecl 0x55b71df7f1b8 <line:84:5, line:86:5> line:84:5
| |-EnumConstantDecl 0x55b71df7f2d8 <line:85:2, col:13> col:2 rw_drop 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
| | `-ConstantExpr 0x55b71df7f2b8 <col:12, col:13> 'int' Int: -1
| |   `-UnaryOperator 0x55b71df7f2a0 <col:12, col:13> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b71df7f280 <col:13> 'int' 1
| `-EnumConstantDecl 0x55b71df7f380 <col:16, col:29> col:16 rw_addmap 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:84:5)'
|   `-ConstantExpr 0x55b71df7f360 <col:28, col:29> 'int' Int: -2
|     `-UnaryOperator 0x55b71df7f348 <col:28, col:29> 'int' prefix '-'
|       `-IntegerLiteral 0x55b71df7f328 <col:29> 'int' 2
|-CXXConstructorDecl 0x55b71df7f408 <line:88:5, col:20> col:5 IPRewriterBase 'void ()'
|-CXXDestructorDecl 0x55b71df7f4f8 <line:89:5, col:21> col:5 ~IPRewriterBase 'void () noexcept'
| `-Overrides: [ 0x55b71dea4828 Element::~Element 'void () noexcept' ]
|-EnumDecl 0x55b71df7f5e0 <line:91:5, line:96:5> line:91:10 ConfigurePhase
| |-EnumConstantDecl 0x55b71df7f6e0 <line:92:2, col:29> col:2 CONFIGURE_PHASE_PATTERNS 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b71df7f990 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71df7f6c0 <col:29> 'Element::ConfigurePhase' Int: 20
| |     `-DeclRefExpr 0x55b71df7f6a0 <col:29> 'Element::ConfigurePhase' EnumConstant 0x55b71dea6e70 'CONFIGURE_PHASE_INFO' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x55b71df7f770 <line:93:2, col:29> col:2 referenced CONFIGURE_PHASE_REWRITER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b71df7f9a8 <col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71df7f750 <col:29> 'Element::ConfigurePhase' Int: 100
| |     `-DeclRefExpr 0x55b71df7f730 <col:29> 'Element::ConfigurePhase' EnumConstant 0x55b71dea6f90 'CONFIGURE_PHASE_DEFAULT' 'Element::ConfigurePhase'
| |-EnumConstantDecl 0x55b71df7f858 <line:94:2, col:54> col:2 CONFIGURE_PHASE_MAPPER 'IPRewriterBase::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b71df7f9c0 <col:27, col:54> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71df7f838 <col:27, col:54> 'int' Int: 99
| |     `-BinaryOperator 0x55b71df7f818 <col:27, col:54> 'int' '-'
| |       |-ImplicitCastExpr 0x55b71df7f800 <col:27> 'int' <IntegralCast>
| |       | `-DeclRefExpr 0x55b71df7f7c0 <col:27> 'Element::ConfigurePhase' EnumConstant 0x55b71df7f770 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
| |       `-IntegerLiteral 0x55b71df7f7e0 <col:54> 'int' 1
| `-EnumConstantDecl 0x55b71df7f940 <line:95:2, col:52> col:2 CONFIGURE_PHASE_USER 'IPRewriterBase::ConfigurePhase'
|   `-ImplicitCastExpr 0x55b71df7f9d8 <col:25, col:52> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71df7f920 <col:25, col:52> 'int' Int: 101
|       `-BinaryOperator 0x55b71df7f900 <col:25, col:52> 'int' '+'
|         |-ImplicitCastExpr 0x55b71df7f8e8 <col:25> 'int' <IntegralCast>
|         | `-DeclRefExpr 0x55b71df7f8a8 <col:25> 'Element::ConfigurePhase' EnumConstant 0x55b71df7f770 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|         `-IntegerLiteral 0x55b71df7f8c8 <col:52> 'int' 1
|-CXXMethodDecl 0x55b71df7fa40 <line:98:5, col:54> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55b71dea5d50 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55b71df98240 <col:36, col:54>
|   `-ReturnStmt 0x55b71df98230 <col:38, col:45>
|     `-ImplicitCastExpr 0x55b71df98218 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55b71df981f8 <col:45> 'const char [6]' lvalue "1-/1-"
|-CXXMethodDecl 0x55b71df7fb08 <line:99:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55b71dea6158 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55b71df982a0 <col:36, col:51>
|   `-ReturnStmt 0x55b71df98290 <col:38, col:45>
|     `-ImplicitCastExpr 0x55b71df98278 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55b71df98258 <col:45> 'const char []' lvalue Var 0x55b71dea62a0 'PUSH' 'const char []'
|-CXXMethodDecl 0x55b71df7fbd0 <line:101:5, col:68> col:9 configure_phase 'int () const'
| |-Overrides: [ 0x55b71dea7110 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x55b71df98300 <col:33, col:68>
|   `-ReturnStmt 0x55b71df982f0 <col:35, col:42>
|     `-ImplicitCastExpr 0x55b71df982d8 <col:42> 'int' <IntegralCast>
|       `-DeclRefExpr 0x55b71df982b8 <col:42> 'IPRewriterBase::ConfigurePhase' EnumConstant 0x55b71df7f770 'CONFIGURE_PHASE_REWRITER' 'IPRewriterBase::ConfigurePhase'
|-CXXMethodDecl 0x55b71df7fea0 <line:102:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55b71dea7550 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55b71df7fd50 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x55b71df7fdc8 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71df7fff8 <line:103:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55b71dea77a0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55b71df7ff60 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71df80140 <line:104:5, col:54> col:10 add_rewriter_handlers 'void (bool)'
| `-ParmVarDecl 0x55b71df800b0 <col:32, col:37> col:37 writable_patterns 'bool'
|-CXXMethodDecl 0x55b71df80288 <line:105:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55b71dea7fb8 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55b71df801f8 <col:18> col:30 'Element::CleanupStage'
|-CXXMethodDecl 0x55b71df80378 <line:107:5, line:109:5> line:107:27 flow_heap 'const IPRewriterHeap *() const'
| `-CompoundStmt 0x55b71df98398 <col:45, line:109:5>
|   `-ReturnStmt 0x55b71df98388 <line:108:2, col:9>
|     `-ImplicitCastExpr 0x55b71df98370 <col:9> 'const IPRewriterHeap *' <NoOp>
|       `-ImplicitCastExpr 0x55b71df98358 <col:9> 'IPRewriterHeap *' <LValueToRValue>
|         `-MemberExpr 0x55b71df98328 <col:9> 'IPRewriterHeap *const' lvalue ->_heap 0x55b71df95560
|           `-CXXThisExpr 0x55b71df98318 <col:9> 'const IPRewriterBase *' implicit this
|-CXXMethodDecl 0x55b71df804f8 <line:110:5, line:112:5> line:110:21 reply_element 'IPRewriterBase *(int) const'
| |-ParmVarDecl 0x55b71df80430 <col:35, col:39> col:39 used input 'int'
| `-CompoundStmt 0x55b71df98570 <col:52, line:112:5>
|   `-ReturnStmt 0x55b71df98560 <line:111:2, col:29>
|     `-ImplicitCastExpr 0x55b71df98548 <col:9, col:29> 'IPRewriterBase *' <LValueToRValue>
|       `-MemberExpr 0x55b71df98518 <col:9, col:29> 'IPRewriterBase *const' lvalue .reply_element 0x55b71df6a720
|         `-CXXOperatorCallExpr 0x55b71df984e0 <col:9, col:27> 'const IPRewriterInput':'const IPRewriterInput' lvalue
|           |-ImplicitCastExpr 0x55b71df984c8 <col:21, col:27> 'const IPRewriterInput &(*)(Vector::size_type) const' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x55b71df98450 <col:21, col:27> 'const IPRewriterInput &(Vector::size_type) const' lvalue CXXMethod 0x55b71df92e68 'operator[]' 'const IPRewriterInput &(Vector::size_type) const'
|           |-MemberExpr 0x55b71df983c0 <col:9> 'const Vector<IPRewriterInput>':'const Vector<IPRewriterInput>' lvalue ->_input_specs 0x55b71df95500
|           | `-CXXThisExpr 0x55b71df983b0 <col:9> 'const IPRewriterBase *' implicit this
|           `-ImplicitCastExpr 0x55b71df98438 <col:22> 'int' <LValueToRValue>
|             `-DeclRefExpr 0x55b71df983f0 <col:22> 'int' lvalue ParmVar 0x55b71df80430 'input' 'int'
|-CXXMethodDecl 0x55b71df80830 <line:113:5, line:115:5> line:113:45 get_map 'HashContainer<IPRewriterEntry> *(int)' virtual
| |-ParmVarDecl 0x55b71df806b8 <col:53, col:57> col:57 used mapid 'int'
| `-CompoundStmt 0x55b71df988e0 <col:64, line:115:5>
|   `-ReturnStmt 0x55b71df988d0 <line:114:2, col:84>
|     `-ConditionalOperator 0x55b71df988a0 <col:9, col:84> 'IPRewriterBase::Map *'
|       |-ImplicitCastExpr 0x55b71df98870 <col:9, col:72> 'bool' <IntegralToBoolean>
|       | `-CallExpr 0x55b71df98798 <col:9, col:72> 'long'
|       |   |-ImplicitCastExpr 0x55b71df98780 <col:9> 'long (*)(long, long) noexcept' <BuiltinFnToFnPtr>
|       |   | `-DeclRefExpr 0x55b71df98588 <col:9> '<builtin fn type>' Function 0x55b71dc65258 '__builtin_expect' 'long (long, long) noexcept'
|       |   |-ImplicitCastExpr 0x55b71df987c8 <col:26, col:68> 'long' <IntegralCast>
|       |   | `-UnaryOperator 0x55b71df98748 <col:26, col:68> 'bool' prefix '!' cannot overflow
|       |   |   `-UnaryOperator 0x55b71df98730 <col:27, col:68> 'bool' prefix '!' cannot overflow
|       |   |     `-ParenExpr 0x55b71df98710 <col:28, col:68> 'bool'
|       |   |       `-BinaryOperator 0x55b71df986f0 <col:29, col:55> 'bool' '=='
|       |   |         |-ImplicitCastExpr 0x55b71df986c0 <col:29> 'int' <LValueToRValue>
|       |   |         | `-DeclRefExpr 0x55b71df985a8 <col:29> 'int' lvalue ParmVar 0x55b71df806b8 'mapid' 'int'
|       |   |         `-ImplicitCastExpr 0x55b71df986d8 <col:38, col:55> 'int' <IntegralCast>
|       |   |           `-DeclRefExpr 0x55b71df98600 <col:38, col:55> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55b71df6ad60 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|       |   `-ImplicitCastExpr 0x55b71df987e0 <col:71> 'long' <IntegralCast>
|       |     `-IntegerLiteral 0x55b71df98760 <col:71> 'int' 1
|       |-UnaryOperator 0x55b71df98838 <col:76, col:77> 'IPRewriterBase::Map *' prefix '&' cannot overflow
|       | `-MemberExpr 0x55b71df98808 <col:77> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_map 0x55b71df88d18
|       |   `-CXXThisExpr 0x55b71df987f8 <col:77> 'IPRewriterBase *' implicit this
|       `-ImplicitCastExpr 0x55b71df98888 <col:84> 'IPRewriterBase::Map *' <NullToPointer>
|         `-IntegerLiteral 0x55b71df98850 <col:84> 'int' 0
|-EnumDecl 0x55b71df808d8 <line:117:5, line:119:5> line:117:5
| |-EnumConstantDecl 0x55b71df809f8 <line:118:2, col:21> col:2 get_entry_check 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
| | `-ConstantExpr 0x55b71df809d8 <col:20, col:21> 'int' Int: -1
| |   `-UnaryOperator 0x55b71df809c0 <col:20, col:21> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b71df809a0 <col:21> 'int' 1
| `-EnumConstantDecl 0x55b71df80aa0 <col:24, col:43> col:24 get_entry_reply 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:117:5)'
|   `-ConstantExpr 0x55b71df80a80 <col:42, col:43> 'int' Int: -2
|     `-UnaryOperator 0x55b71df80a68 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x55b71df80a48 <col:43> 'int' 2
|-CXXMethodDecl 0x55b71df80ce8 <line:120:5, line:121:21> line:120:30 get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)' virtual
| |-ParmVarDecl 0x55b71df80b08 <col:40, col:44> col:44 ip_p 'int'
| |-ParmVarDecl 0x55b71df80b80 <col:50, col:66> col:66 flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55b71df80c00 <line:121:12, col:16> col:16 input 'int'
|-CXXMethodDecl 0x55b71df81018 <line:122:5, line:124:24> line:122:30 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' virtual pure
| |-ParmVarDecl 0x55b71df80db8 <col:39, col:43> col:43 ip_p 'int'
| |-ParmVarDecl 0x55b71df80e30 <col:49, col:65> col:65 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55b71df80ea8 <line:123:11, col:27> col:27 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55b71df80f28 <line:124:11, col:15> col:15 input 'int'
|-CXXMethodDecl 0x55b71df81178 <line:125:5, col:55> col:18 destroy_flow 'void (IPRewriterFlow *)' virtual pure
| `-ParmVarDecl 0x55b71df810e8 <col:31, col:47> col:47 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x55b71df81328 <line:126:5, line:128:5> line:126:29 best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' virtual
| |-ParmVarDecl 0x55b71df81230 <col:48, col:70> col:70 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x55b71df98b30 <col:76, line:128:5>
|   `-ReturnStmt 0x55b71df98b20 <line:127:2, col:52>
|     `-BinaryOperator 0x55b71df98b00 <col:9, col:52> 'unsigned int' '-'
|       |-BinaryOperator 0x55b71df98a30 <col:9, col:37> 'unsigned int' '+'
|       | |-CXXMemberCallExpr 0x55b71df98960 <col:9, col:22> 'click_jiffies_t':'unsigned int'
|       | | `-MemberExpr 0x55b71df98930 <col:9, col:15> '<bound member function type>' ->expiry 0x55b71df52e30
|       | |   `-ImplicitCastExpr 0x55b71df98918 <col:9> 'const IPRewriterFlow *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x55b71df988f8 <col:9> 'const IPRewriterFlow *' lvalue ParmVar 0x55b71df81230 'flow' 'const IPRewriterFlow *'
|       | `-ImplicitCastExpr 0x55b71df98a18 <col:26, col:37> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x55b71df989f8 <col:26, col:37> 'uint32_t':'unsigned int' lvalue
|       |     |-ImplicitCastExpr 0x55b71df989e0 <col:26> 'uint32_t *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x55b71df98990 <col:26> 'uint32_t [2]' lvalue ->_timeouts 0x55b71df95648
|       |     |   `-CXXThisExpr 0x55b71df98980 <col:26> 'IPRewriterBase *' implicit this
|       |     `-IntegerLiteral 0x55b71df989c0 <col:36> 'int' 0
|       `-ImplicitCastExpr 0x55b71df98ae8 <col:41, col:52> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-ArraySubscriptExpr 0x55b71df98ac8 <col:41, col:52> 'uint32_t':'unsigned int' lvalue
|           |-ImplicitCastExpr 0x55b71df98ab0 <col:41> 'uint32_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x55b71df98a60 <col:41> 'uint32_t [2]' lvalue ->_timeouts 0x55b71df95648
|           |   `-CXXThisExpr 0x55b71df98a50 <col:41> 'IPRewriterBase *' implicit this
|           `-IntegerLiteral 0x55b71df98a90 <col:51> 'int' 1
|-CXXMethodDecl 0x55b71df81508 <line:130:5, col:43> col:9 llrpc 'int (unsigned int, void *)'
| |-Overrides: [ 0x55b71deb1300 Element::llrpc 'int (unsigned int, void *)' ]
| |-ParmVarDecl 0x55b71df813e8 <col:15, col:24> col:24 command 'unsigned int'
| `-ParmVarDecl 0x55b71df81468 <col:33, col:39> col:39 data 'void *'
|-AccessSpecDecl 0x55b71df815b8 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x55b71df88d18 <line:134:5, col:9> col:9 referenced _map 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FieldDecl 0x55b71df95500 <line:136:5, col:29> col:29 referenced _input_specs 'Vector<IPRewriterInput>':'Vector<IPRewriterInput>'
|-FieldDecl 0x55b71df95560 <line:138:5, col:21> col:21 referenced _heap 'IPRewriterHeap *'
|-FieldDecl 0x55b71df95648 <line:139:5, col:25> col:14 referenced _timeouts 'uint32_t [2]'
|-FieldDecl 0x55b71df956a8 <line:140:5, col:14> col:14 _gc_interval_sec 'uint32_t':'unsigned int'
|-FieldDecl 0x55b71df95708 <line:141:5, col:11> col:11 _gc_timer 'Timer'
|-EnumDecl 0x55b71df95758 <line:143:5, line:147:5> line:143:5
| |-EnumConstantDecl 0x55b71df95860 <line:144:2, col:20> col:2 default_timeout 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x55b71df95a10 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71df95840 <col:20> 'int' Int: 300
| |     `-IntegerLiteral 0x55b71df95820 <col:20> 'int' 300
| |-EnumConstantDecl 0x55b71df958f0 <line:145:2, col:22> col:2 default_guarantee 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
| | `-ImplicitCastExpr 0x55b71df95a28 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71df958d0 <col:22> 'int' Int: 5
| |     `-IntegerLiteral 0x55b71df958b0 <col:22> 'int' 5
| `-EnumConstantDecl 0x55b71df959c0 <line:146:2, col:29> col:2 default_gc_interval 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:143:5)'
|   `-ImplicitCastExpr 0x55b71df95a40 <col:24, col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71df959a0 <col:24, col:29> 'int' Int: 900
|       `-BinaryOperator 0x55b71df95980 <col:24, col:29> 'int' '*'
|         |-IntegerLiteral 0x55b71df95940 <col:24> 'int' 60
|         `-IntegerLiteral 0x55b71df95960 <col:29> 'int' 15
|-CXXMethodDecl 0x55b71df95ba8 <line:149:5, line:151:5> line:149:21 relevant_timeout 'uint32_t (const uint32_t *)' static
| |-ParmVarDecl 0x55b71df95ab8 <col:38, col:63> col:53 used timeouts 'const uint32_t *':'const uint32_t *'
| `-CompoundStmt 0x55b71df98d38 <col:66, line:151:5>
|   `-ReturnStmt 0x55b71df98d28 <line:150:2, col:47>
|     `-ImplicitCastExpr 0x55b71df98d10 <col:9, col:47> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-ConditionalOperator 0x55b71df98ce0 <col:9, col:47> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55b71df98cc8 <col:9, col:19> 'bool' <IntegralToBoolean>
|         | `-ImplicitCastExpr 0x55b71df98cb0 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55b71df98ba0 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |     |-ImplicitCastExpr 0x55b71df98b88 <col:9> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         |     | `-DeclRefExpr 0x55b71df98b48 <col:9> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55b71df95ab8 'timeouts' 'const uint32_t *':'const uint32_t *'
|         |     `-IntegerLiteral 0x55b71df98b68 <col:18> 'int' 1
|         |-ArraySubscriptExpr 0x55b71df98c18 <col:23, col:33> 'const uint32_t':'const unsigned int' lvalue
|         | |-ImplicitCastExpr 0x55b71df98c00 <col:23> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|         | | `-DeclRefExpr 0x55b71df98bc0 <col:23> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55b71df95ab8 'timeouts' 'const uint32_t *':'const uint32_t *'
|         | `-IntegerLiteral 0x55b71df98be0 <col:32> 'int' 1
|         `-ArraySubscriptExpr 0x55b71df98c90 <col:37, col:47> 'const uint32_t':'const unsigned int' lvalue
|           |-ImplicitCastExpr 0x55b71df98c78 <col:37> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|           | `-DeclRefExpr 0x55b71df98c38 <col:37> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55b71df95ab8 'timeouts' 'const uint32_t *':'const uint32_t *'
|           `-IntegerLiteral 0x55b71df98c58 <col:46> 'int' 0
|-CXXMethodDecl 0x55b71df95f68 <line:153:5, line:154:37> line:153:22 store_flow 'IPRewriterEntry *(IPRewriterFlow *, int, IPRewriterBase::Map &, IPRewriterBase::Map *)'
| |-ParmVarDecl 0x55b71df95c60 <col:33, col:49> col:49 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x55b71df95ce0 <col:55, col:59> col:59 input 'int'
| |-ParmVarDecl 0x55b71df95d88 <line:154:5, col:10> col:10 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x55b71df95e28 <col:15, col:36> col:20 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x55b71df981a8 <col:36> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x55b71df98188 <col:36> 'int' 0
|-CXXMethodDecl 0x55b71df96248 <line:155:5, line:156:39> line:155:17 used unmap_flow 'void (IPRewriterFlow *, IPRewriterBase::Map &, IPRewriterBase::Map *)' inline
| |-ParmVarDecl 0x55b71df96038 <col:28, col:44> col:44 flow 'IPRewriterFlow *'
| |-ParmVarDecl 0x55b71df960b0 <line:156:7, col:12> col:12 map 'IPRewriterBase::Map &'
| `-ParmVarDecl 0x55b71df96128 <col:17, col:38> col:22 reply_map_ptr 'IPRewriterBase::Map *' cinit
|   `-ImplicitCastExpr 0x55b71df981e0 <col:38> 'IPRewriterBase::Map *' <NullToPointer>
|     `-IntegerLiteral 0x55b71df981c0 <col:38> 'int' 0
|-CXXMethodDecl 0x55b71df96428 <line:158:5, col:56> col:17 gc_timer_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55b71df96310 <col:31, col:38> col:38 t 'Timer *'
| `-ParmVarDecl 0x55b71df96390 <col:41, col:47> col:47 user_data 'void *'
|-CXXMethodDecl 0x55b71df96750 <line:160:5, line:161:41> line:160:9 parse_input_spec 'int (const String &, IPRewriterInput &, int, ErrorHandler *)'
| |-ParmVarDecl 0x55b71df964e8 <col:26, col:40> col:40 str 'const String &'
| |-ParmVarDecl 0x55b71df96560 <col:45, col:62> col:62 is 'IPRewriterInput &'
| |-ParmVarDecl 0x55b71df965e0 <line:161:5, col:9> col:9 input_number 'int'
| `-ParmVarDecl 0x55b71df96658 <col:23, col:37> col:37 errh 'ErrorHandler *'
|-EnumDecl 0x55b71df96810 <line:163:5, line:166:5> line:163:5
| |-EnumConstantDecl 0x55b71df96928 <line:164:2, col:17> col:2 h_nmappings 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55b71df96908 <col:16, col:17> 'int' Int: -1
| |   `-UnaryOperator 0x55b71df968f0 <col:16, col:17> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b71df968d0 <col:17> 'int' 1
| |-EnumConstantDecl 0x55b71df969d0 <col:20, col:42> col:20 h_mapping_failures 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55b71df969b0 <col:41, col:42> 'int' Int: -2
| |   `-UnaryOperator 0x55b71df96998 <col:41, col:42> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b71df96978 <col:42> 'int' 2
| |-EnumConstantDecl 0x55b71df96a78 <col:45, col:59> col:45 h_patterns 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55b71df96a58 <col:58, col:59> 'int' Int: -3
| |   `-UnaryOperator 0x55b71df96a40 <col:58, col:59> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b71df96a20 <col:59> 'int' 3
| |-EnumConstantDecl 0x55b71df96b20 <line:165:2, col:12> col:2 h_size 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55b71df96b00 <col:11, col:12> 'int' Int: -4
| |   `-UnaryOperator 0x55b71df96ae8 <col:11, col:12> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b71df96ac8 <col:12> 'int' 4
| |-EnumConstantDecl 0x55b71df96bc8 <col:15, col:29> col:15 h_capacity 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
| | `-ConstantExpr 0x55b71df96ba8 <col:28, col:29> 'int' Int: -5
| |   `-UnaryOperator 0x55b71df96b90 <col:28, col:29> 'int' prefix '-'
| |     `-IntegerLiteral 0x55b71df96b70 <col:29> 'int' 5
| `-EnumConstantDecl 0x55b71df96c70 <col:32, col:43> col:32 h_clear 'IPRewriterBase::(anonymous enum at ../elements/ip/iprewriterbase.hh:163:5)'
|   `-ConstantExpr 0x55b71df96c50 <col:42, col:43> 'int' Int: -6
|     `-UnaryOperator 0x55b71df96c38 <col:42, col:43> 'int' prefix '-'
|       `-IntegerLiteral 0x55b71df96c18 <col:43> 'int' 6
|-CXXMethodDecl 0x55b71df96de8 <line:167:5, col:59> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b71df96cd0 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55b71df96d50 <col:44, col:50> col:50 user_data 'void *'
|-CXXMethodDecl 0x55b71df970c8 <line:168:5, col:96> col:16 write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b71df96ea8 <col:30, col:44> col:44 str 'const String &'
| |-ParmVarDecl 0x55b71df96f20 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x55b71df96fa0 <col:61, col:67> col:67 user_data 'void *'
| `-ParmVarDecl 0x55b71df97018 <col:78, col:92> col:92 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71df973b8 <line:169:5, col:104> col:16 pattern_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b71df97198 <col:38, col:52> col:52 str 'const String &'
| |-ParmVarDecl 0x55b71df97210 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x55b71df97290 <col:69, col:75> col:75 user_data 'void *'
| `-ParmVarDecl 0x55b71df97308 <col:86, col:100> col:100 errh 'ErrorHandler *'
|-FriendDecl 0x55b71df97858 <line:171:5, line:172:52> line:171:33
| `-CXXMethodDecl 0x55b71df976c8 parent 0x55b71df6a150 prev 0x55b71df6b0f0 <col:5, line:172:52> line:171:33 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
|   |-ParmVarDecl 0x55b71df974a8 <col:48, col:64> col:64 flowid 'const IPFlowID &'
|   |-ParmVarDecl 0x55b71df97520 <line:172:4, col:14> col:14 rewritten_flowid 'IPFlowID &'
|   |-ParmVarDecl 0x55b71df97598 <col:32, col:40> col:40 p 'Packet *'
|   |-ParmVarDecl 0x55b71df97618 <col:43, col:47> col:47 mapid 'int' cinit
|   | `-ImplicitCastExpr 0x55b71df6b268 <line:39:33> 'int' <IntegralCast>
|   |   `-DeclRefExpr 0x55b71df6b248 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55b71df6ad60 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   |-NoInlineAttr 0x55b71df97808 <line:37:20> Inherited
|   `-OptimizeNoneAttr 0x55b71df97830 <col:30> Inherited
|-AccessSpecDecl 0x55b71df97898 <line:174:3, col:10> col:3 private
|-CXXMethodDecl 0x55b71df97998 <line:176:5, col:54> col:10 shift_heap_best_effort 'void (click_jiffies_t)'
| `-ParmVarDecl 0x55b71df978d0 <col:33, col:49> col:49 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55b71df97bd8 <line:177:5, col:78> col:10 shrink_heap_for_new_flow 'bool (IPRewriterFlow *, click_jiffies_t)'
| |-ParmVarDecl 0x55b71df97a50 <col:35, col:51> col:51 flow 'IPRewriterFlow *'
| `-ParmVarDecl 0x55b71df97ac8 <col:57, col:73> col:73 now_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55b71df97d28 <line:178:5, col:36> col:10 shrink_heap 'void (bool)'
| `-ParmVarDecl 0x55b71df97c98 <col:22, col:27> col:27 clear_all 'bool'
|-FriendDecl 0x55b71df97df0 <line:180:5, col:18> col:12 'class IPRewriterFlow':'IPRewriterFlow'
|-CXXConstructorDecl 0x55b71df97e58 <line:81:7> col:7 implicit IPRewriterBase 'void (const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x55b71df97e58
| `-ParmVarDecl 0x55b71df97f68 <col:7> col:7 'const IPRewriterBase &'
`-CXXMethodDecl 0x55b71df98008 <col:7> col:7 implicit operator= 'IPRewriterBase &(const IPRewriterBase &)' inline default_delete noexcept-unevaluated 0x55b71df98008
  `-ParmVarDecl 0x55b71df98118 <col:7> col:7 'const IPRewriterBase &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector.13, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  NonVirtualBaseLLVMType:%class.IPRewriterBase = type { %class.Element.base, %class.HashContainer, %class.Vector.13, %class.IPRewriterHeap*, [2 x i32], i32, %class.Timer }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashAllocator
         0 |   struct HashAllocator::link * _free
         8 |   struct HashAllocator::buffer * _buffer
        16 |   size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class SizedHashAllocator<80>
         0 |   class HashAllocator (base)
         0 |     struct HashAllocator::link * _free
         8 |     struct HashAllocator::buffer * _buffer
        16 |     size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class TCPRewriter
         0 |   class IPRewriterBase (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |     class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |       class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |         class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |         class IPRewriterEntry ** buckets
       120 |         uint32_t nbuckets
       124 |         uint32_t first_bucket
       128 |         size_t size
       136 |         struct libdivide_u32_t bucket_divider
       136 |           uint32_t magic
       140 |           uint8_t more
       144 |     class Vector<class IPRewriterInput> _input_specs
       144 |       class vector_memory<class sized_array_memory<56> > vm_
       144 |         vector_memory<class sized_array_memory<56> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       160 |     class IPRewriterHeap * _heap
       168 |     uint32_t [2] _timeouts
       176 |     uint32_t _gc_interval_sec
       184 |     class Timer _gc_timer
       184 |       int _schedpos1
       192 |       class Timestamp _expiry_s
       192 |         union Timestamp::rep_t _t
       192 |           int64_t x
       200 |       union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |         TimerCallback callback
       208 |       void * _thunk
       216 |       class Element * _owner
       224 |       class RouterThread * _thread
       232 |   class SizedHashAllocator<80> _allocator
       232 |     class HashAllocator (base)
       232 |       struct HashAllocator::link * _free
       240 |       struct HashAllocator::buffer * _buffer
       248 |       size_t _size
       256 |   unsigned int _annos
       260 |   uint32_t _tcp_data_timeout
       264 |   uint32_t _tcp_done_timeout
           | [sizeof=272, dsize=268, align=8,
           |  nvsize=268, nvalign=8]

*** Dumping AST Record Layout
         0 | struct HashAllocator::link
         0 |   struct HashAllocator::link * next
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71df10938 <../dummy_inc/click/hashallocator.hh:26:5, line:28:5> line:26:12 referenced struct link definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b71df10a58 <col:5, col:12> col:12 implicit referenced struct link
`-FieldDecl 0x55b71df10b28 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::link" = type { %"struct.HashAllocator::link"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashAllocator::buffer
         0 |   struct HashAllocator::buffer * next
         8 |   size_t pos
        16 |   size_t maxpos
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71df10b90 <../dummy_inc/click/hashallocator.hh:30:5, line:34:5> line:30:12 referenced struct buffer definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b71df10ca8 <col:5, col:12> col:12 implicit referenced struct buffer
|-FieldDecl 0x55b71df10d78 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
|-FieldDecl 0x55b71df10dd8 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
`-FieldDecl 0x55b71df10e38 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  NonVirtualBaseLLVMType:%"struct.HashAllocator::buffer" = type { %"struct.HashAllocator::buffer"*, i64, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71df0ff50 <../dummy_inc/click/hashallocator.hh:9:1, line:55:1> line:9:7 referenced class HashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71df10068 <col:1, col:7> col:7 implicit referenced class HashAllocator
|-AccessSpecDecl 0x55b71df100f8 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x55b71df10238 <line:11:5, col:30> col:5 referenced HashAllocator 'void (size_t)'
| `-ParmVarDecl 0x55b71df10130 <col:19, col:26> col:26 size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x55b71df10330 <line:12:5, col:20> col:5 used ~HashAllocator 'void () noexcept'
|-CXXMethodDecl 0x55b71df104b0 <line:14:5, line:17:5> line:14:17 increase_size 'void (size_t)' inline
| |-ParmVarDecl 0x55b71df10420 <col:31, col:38> col:38 used new_size 'size_t':'unsigned long'
| `-CompoundStmt 0x55b71df12cb0 <col:48, line:17:5>
|   |-ParenExpr 0x55b71df12bf8 <line:15:2, col:212> 'void'
|   | `-ConditionalOperator 0x55b71df12bc8 <col:3, col:211> 'void'
|   |   |-CXXStaticCastExpr 0x55b71df11870 <col:3, col:62> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71df11840 <col:23, col:57> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b71df11770 <col:23, col:34> 'bool' '&&'
|   |   |   | |-UnaryOperator 0x55b71df116d0 <col:23, col:24> 'bool' prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x55b71df116b8 <col:24> 'bool' <PointerToBoolean>
|   |   |   | |   `-ImplicitCastExpr 0x55b71df116a0 <col:24> 'HashAllocator::link *' <LValueToRValue>
|   |   |   | |     `-MemberExpr 0x55b71df11670 <col:24> 'HashAllocator::link *' lvalue ->_free 0x55b71df11168
|   |   |   | |       `-CXXThisExpr 0x55b71df11660 <col:24> 'HashAllocator *' implicit this
|   |   |   | `-UnaryOperator 0x55b71df11758 <col:33, col:34> 'bool' prefix '!' cannot overflow
|   |   |   |   `-ImplicitCastExpr 0x55b71df11740 <col:34> 'bool' <PointerToBoolean>
|   |   |   |     `-ImplicitCastExpr 0x55b71df11728 <col:34> 'HashAllocator::buffer *' <LValueToRValue>
|   |   |   |       `-MemberExpr 0x55b71df116f8 <col:34> 'HashAllocator::buffer *' lvalue ->_buffer 0x55b71df111c8
|   |   |   |         `-CXXThisExpr 0x55b71df116e8 <col:34> 'HashAllocator *' implicit this
|   |   |   `-BinaryOperator 0x55b71df11820 <col:45, col:57> 'bool' '>='
|   |   |     |-ImplicitCastExpr 0x55b71df117f0 <col:45> 'size_t':'unsigned long' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b71df11790 <col:45> 'size_t':'unsigned long' lvalue ParmVar 0x55b71df10420 'new_size' 'size_t':'unsigned long'
|   |   |     `-ImplicitCastExpr 0x55b71df11808 <col:57> 'size_t':'unsigned long' <LValueToRValue>
|   |   |       `-MemberExpr 0x55b71df117c0 <col:57> 'size_t':'unsigned long' lvalue ->_size 0x55b71df11228
|   |   |         `-CXXThisExpr 0x55b71df117b0 <col:57> 'HashAllocator *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55b71df128f0 <col:66, col:73> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71df128d0 <col:72> 'int' 0
|   |   `-CallExpr 0x55b71df12b28 <col:77, col:211> 'void'
|   |     |-ImplicitCastExpr 0x55b71df12b10 <col:77> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71df12af0 <col:77> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71df12b68 <col:92> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71df12960 <col:92> 'const char [40]' lvalue "!_free && !_buffer && new_size >= _size"
|   |     |-ImplicitCastExpr 0x55b71df12b80 <col:135> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71df129a0 <col:135> 'const char [36]' lvalue "../dummy_inc/click/hashallocator.hh"
|   |     |-ImplicitCastExpr 0x55b71df12b98 <col:174> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71df129e0 <col:174> 'int' 15
|   |     `-ImplicitCastExpr 0x55b71df12bb0 <col:178, col:192> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71df12ad8 <col:178, col:192> 'const char [42]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71df12ac0 <col:192> 'const char [42]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71df12a78 <col:192> 'const char [42]' lvalue "void HashAllocator::increase_size(size_t)"
|   `-BinaryOperator 0x55b71df12c90 <line:16:2, col:10> 'size_t':'unsigned long' lvalue '='
|     |-MemberExpr 0x55b71df12c28 <col:2> 'size_t':'unsigned long' lvalue ->_size 0x55b71df11228
|     | `-CXXThisExpr 0x55b71df12c18 <col:2> 'HashAllocator *' implicit this
|     `-ImplicitCastExpr 0x55b71df12c78 <col:10> 'size_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55b71df12c58 <col:10> 'size_t':'unsigned long' lvalue ParmVar 0x55b71df10420 'new_size' 'size_t':'unsigned long'
|-CXXMethodDecl 0x55b71df10580 <line:19:5, col:27> col:18 allocate 'void *()' inline
|-CXXMethodDecl 0x55b71df106c8 <line:20:5, col:35> col:17 used deallocate 'void (void *)' inline
| `-ParmVarDecl 0x55b71df10638 <col:28, col:34> col:34 p 'void *'
|-CXXMethodDecl 0x55b71df10868 <line:22:5, col:31> col:10 swap 'void (HashAllocator &)'
| `-ParmVarDecl 0x55b71df107a8 <col:15, col:30> col:30 x 'HashAllocator &'
|-AccessSpecDecl 0x55b71df10910 <line:24:3, col:10> col:3 private
|-CXXRecordDecl 0x55b71df10938 <line:26:5, line:28:5> line:26:12 referenced struct link definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b71df10a58 <col:5, col:12> col:12 implicit referenced struct link
| `-FieldDecl 0x55b71df10b28 <line:27:2, col:8> col:8 referenced next 'HashAllocator::link *'
|-CXXRecordDecl 0x55b71df10b90 <line:30:5, line:34:5> line:30:12 referenced struct buffer definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b71df10ca8 <col:5, col:12> col:12 implicit referenced struct buffer
| |-FieldDecl 0x55b71df10d78 <line:31:2, col:10> col:10 next 'HashAllocator::buffer *'
| |-FieldDecl 0x55b71df10dd8 <line:32:2, col:9> col:9 referenced pos 'size_t':'unsigned long'
| `-FieldDecl 0x55b71df10e38 <line:33:2, col:9> col:9 referenced maxpos 'size_t':'unsigned long'
|-EnumDecl 0x55b71df10ea0 <line:36:5, line:44:5> line:36:5
| |-EnumConstantDecl 0x55b71df10fa0 <line:37:2, col:20> col:2 min_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x55b71df11110 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71df10f80 <col:20> 'int' Int: 1024
| |     `-IntegerLiteral 0x55b71df10f60 <col:20> 'int' 1024
| |-EnumConstantDecl 0x55b71df11030 <line:41:2, col:20> col:2 max_buffer_size 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
| | `-ImplicitCastExpr 0x55b71df11128 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71df11010 <col:20> 'int' Int: 1048576
| |     `-IntegerLiteral 0x55b71df10ff0 <col:20> 'int' 1048576
| `-EnumConstantDecl 0x55b71df110c0 <line:43:2, col:18> col:2 min_nelements 'HashAllocator::(anonymous enum at ../dummy_inc/click/hashallocator.hh:36:5)'
|   `-ImplicitCastExpr 0x55b71df11140 <col:18> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71df110a0 <col:18> 'int' Int: 8
|       `-IntegerLiteral 0x55b71df11080 <col:18> 'int' 8
|-FieldDecl 0x55b71df11168 <line:46:5, col:11> col:11 referenced _free 'HashAllocator::link *'
|-FieldDecl 0x55b71df111c8 <line:47:5, col:13> col:13 referenced _buffer 'HashAllocator::buffer *'
|-FieldDecl 0x55b71df11228 <line:48:5, col:12> col:12 referenced _size 'size_t':'unsigned long'
|-CXXMethodDecl 0x55b71df112a0 <line:50:5, col:25> col:11 used hard_allocate 'void *()'
|-CXXConstructorDecl 0x55b71df11438 <line:52:5, col:41> col:5 HashAllocator 'void (const HashAllocator &)'
| `-ParmVarDecl 0x55b71df11378 <col:19, col:40> col:40 x 'const HashAllocator &'
`-CXXMethodDecl 0x55b71df115b8 <line:53:5, col:52> col:20 operator= 'HashAllocator &(const HashAllocator &)'
  `-ParmVarDecl 0x55b71df114f8 <col:30, col:51> col:51 x 'const HashAllocator &'

Layout: <CGRecordLayout
  LLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  NonVirtualBaseLLVMType:%class.HashAllocator = type { %"struct.HashAllocator::link"*, %"struct.HashAllocator::buffer"*, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71dfa9328 <../dummy_inc/click/hashallocator.hh:58:1, line:65:1> line:59:7 class SizedHashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'HashAllocator'
|-TemplateArgument integral 80
|-CXXRecordDecl 0x55b71dfa9568 prev 0x55b71dfa9328 <col:1, col:7> col:7 implicit class SizedHashAllocator
|-AccessSpecDecl 0x55b71dfa95f8 <col:51, col:57> col:51 public
|-CXXConstructorDecl 0x55b71dfa9658 <line:61:5, line:63:5> line:61:5 SizedHashAllocator 'void ()'
|-CXXConstructorDecl 0x55b71dfa9738 <line:59:7> col:7 implicit SizedHashAllocator 'void (const SizedHashAllocator<80> &)' inline default_delete noexcept-unevaluated 0x55b71dfa9738
| `-ParmVarDecl 0x55b71dfa9848 <col:7> col:7 'const SizedHashAllocator<80> &'
|-CXXConstructorDecl 0x55b71dfa98e8 <col:7> col:7 implicit SizedHashAllocator 'void (SizedHashAllocator<80> &&)' inline default_delete noexcept-unevaluated 0x55b71dfa98e8
| `-ParmVarDecl 0x55b71dfa99f8 <col:7> col:7 'SizedHashAllocator<80> &&'
|-CXXMethodDecl 0x55b71dfa9a98 <col:7> col:7 implicit operator= 'SizedHashAllocator<80> &(SizedHashAllocator<80> &&)' inline default_delete noexcept-unevaluated 0x55b71dfa9a98
| `-ParmVarDecl 0x55b71dfa9ba8 <col:7> col:7 'SizedHashAllocator<80> &&'
`-CXXDestructorDecl 0x55b71dfa9c30 <col:7> col:7 implicit ~SizedHashAllocator 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  NonVirtualBaseLLVMType:%class.SizedHashAllocator = type { %class.HashAllocator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dfa4a08 <../elements/tcpudp/tcprewriter.hh:95:1, line:195:1> line:95:7 referenced class TCPRewriter definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'IPRewriterBase'
|-CXXRecordDecl 0x55b71dfa4b68 <col:1, col:7> col:7 implicit referenced class TCPRewriter
|-AccessSpecDecl 0x55b71dfa4bf8 <col:45, col:51> col:45 public
|-CXXRecordDecl 0x55b71dfa4c20 <line:97:5, line:155:5> line:97:11 referenced class TCPFlow definition
| |-DefinitionData has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-public 'IPRewriterFlow'
| |-CXXRecordDecl 0x55b71dfa4d78 <col:5, col:11> col:11 implicit referenced class TCPFlow
| |-AccessSpecDecl 0x55b71dfa4e08 <col:45, col:51> col:45 public
| |-CXXConstructorDecl 0x55b71dfa51b8 <line:99:2, line:104:2> line:99:2 TCPFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, bool, click_jiffies_t)'
| | |-ParmVarDecl 0x55b71dfa4e40 <col:10, col:27> col:27 used owner 'IPRewriterInput *'
| | |-ParmVarDecl 0x55b71dfa4eb8 <col:34, col:50> col:50 used flowid 'const IPFlowID &'
| | |-ParmVarDecl 0x55b71dfa4f30 <line:100:3, col:19> col:19 used rewritten_flowid 'const IPFlowID &'
| | |-ParmVarDecl 0x55b71dfa4fa8 <line:101:3, col:8> col:8 used guaranteed 'bool'
| | |-ParmVarDecl 0x55b71dfa5020 <col:20, col:36> col:36 used expiry_j 'click_jiffies_t':'unsigned int'
| | |-CXXCtorInitializer 'IPRewriterFlow'
| | | `-CXXConstructExpr 0x55b71dfab198 <line:102:8, line:103:32> 'IPRewriterFlow' 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| | |   |-ImplicitCastExpr 0x55b71dfab138 <line:102:23> 'IPRewriterInput *' <LValueToRValue>
| | |   | `-DeclRefExpr 0x55b71dfaa8b8 <col:23> 'IPRewriterInput *' lvalue ParmVar 0x55b71dfa4e40 'owner' 'IPRewriterInput *'
| | |   |-DeclRefExpr 0x55b71dfaa8d8 <col:30> 'const IPFlowID' lvalue ParmVar 0x55b71dfa4eb8 'flowid' 'const IPFlowID &'
| | |   |-DeclRefExpr 0x55b71dfaa8f8 <col:38> 'const IPFlowID' lvalue ParmVar 0x55b71dfa4f30 'rewritten_flowid' 'const IPFlowID &'
| | |   |-ImplicitCastExpr 0x55b71dfab150 <line:103:9> 'uint8_t':'unsigned char' <IntegralCast>
| | |   | `-IntegerLiteral 0x55b71dfaa918 <col:9> 'int' 6
| | |   |-ImplicitCastExpr 0x55b71dfab168 <col:12> 'bool' <LValueToRValue>
| | |   | `-DeclRefExpr 0x55b71dfaa938 <col:12> 'bool' lvalue ParmVar 0x55b71dfa4fa8 'guaranteed' 'bool'
| | |   `-ImplicitCastExpr 0x55b71dfab180 <col:24> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| | |     `-DeclRefExpr 0x55b71dfaa958 <col:24> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55b71dfa5020 'expiry_j' 'click_jiffies_t':'unsigned int'
| | |-CXXCtorInitializer Field 0x55b71dfa7e88 '_dt' 'TCPRewriter::TCPFlow::delta_transition *'
| | | `-ImplicitCastExpr 0x55b71dfab258 <col:39> 'TCPRewriter::TCPFlow::delta_transition *' <NullToPointer>
| | |   `-IntegerLiteral 0x55b71dfab218 <col:39> 'int' 0
| | `-CompoundStmt 0x55b71dfab2a8 <col:42, line:104:2>
| |-CXXDestructorDecl 0x55b71dfa52d0 <line:106:2, line:111:2> line:106:2 used ~TCPFlow 'void () noexcept'
| | `-CompoundStmt 0x55b71dfab758 <col:13, line:111:2>
| |   `-WhileStmt 0x55b71dfab720 <line:107:6, line:110:6> has_var
| |     |-DeclStmt 0x55b71dfab740 <line:107:13, col:35>
| |     | `-VarDecl 0x55b71dfab3b0 <col:13, col:35> col:31 used x 'TCPRewriter::TCPFlow::delta_transition *' cinit
| |     |   `-ImplicitCastExpr 0x55b71dfab458 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |     |     `-MemberExpr 0x55b71dfab428 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55b71dfa7e88
| |     |       `-CXXThisExpr 0x55b71dfab418 <col:35> 'TCPRewriter::TCPFlow *' implicit this
| |     |-ImplicitCastExpr 0x55b71dfab4a8 <col:31> 'bool' <PointerToBoolean>
| |     | `-ImplicitCastExpr 0x55b71dfab490 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |     |   `-DeclRefExpr 0x55b71dfab470 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55b71dfab3b0 'x' 'TCPRewriter::TCPFlow::delta_transition *'
| |     `-CompoundStmt 0x55b71dfab700 <col:40, line:110:6>
| |       |-BinaryOperator 0x55b71dfab5a0 <line:108:3, col:17> 'TCPRewriter::TCPFlow::delta_transition *' lvalue '='
| |       | |-MemberExpr 0x55b71dfab4d0 <col:3> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55b71dfa7e88
| |       | | `-CXXThisExpr 0x55b71dfab4c0 <col:3> 'TCPRewriter::TCPFlow *' implicit this
| |       | `-CXXMemberCallExpr 0x55b71dfab568 <col:9, col:17> 'TCPRewriter::TCPFlow::delta_transition *'
| |       |   `-MemberExpr 0x55b71dfab538 <col:9, col:12> '<bound member function type>' ->next 0x55b71dfa7c48
| |       |     `-ImplicitCastExpr 0x55b71dfab588 <col:9> 'const TCPRewriter::TCPFlow::delta_transition *' <NoOp>
| |       |       `-ImplicitCastExpr 0x55b71dfab520 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |       |         `-DeclRefExpr 0x55b71dfab500 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55b71dfab3b0 'x' 'TCPRewriter::TCPFlow::delta_transition *'
| |       `-CXXDeleteExpr 0x55b71dfab6e0 <line:109:3, col:10> 'void' Function 0x55b71da8b0b8 'operator delete' 'void (void *) noexcept'
| |         `-ImplicitCastExpr 0x55b71dfab5e0 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
| |           `-DeclRefExpr 0x55b71dfab5c0 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55b71dfab3b0 'x' 'TCPRewriter::TCPFlow::delta_transition *'
| |-EnumDecl 0x55b71dfa53b0 <line:113:2, line:118:2> line:113:2
| | |-EnumConstantDecl 0x55b71dfa54b0 <line:114:6, col:23> col:6 referenced s_forward_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55b71dfa5890 <col:23> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55b71dfa5490 <col:23> 'int' Int: 1
| | |     `-IntegerLiteral 0x55b71dfa5470 <col:23> 'int' 1
| | |-EnumConstantDecl 0x55b71dfa5540 <col:26, col:41> col:26 referenced s_reply_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55b71dfa58a8 <col:41> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55b71dfa5520 <col:41> 'int' Int: 2
| | |     `-IntegerLiteral 0x55b71dfa5500 <col:41> 'int' 2
| | |-EnumConstantDecl 0x55b71dfa5630 <line:115:6, col:50> col:6 referenced s_both_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55b71dfa58c0 <col:20, col:50> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55b71dfa5610 <col:20, col:50> 'int' Int: 3
| | |     `-ParenExpr 0x55b71dfa55f0 <col:20, col:50> 'int'
| | |       `-BinaryOperator 0x55b71dfa55d0 <col:21, col:38> 'int' '|'
| | |         |-DeclRefExpr 0x55b71dfa5590 <col:21> 'int' EnumConstant 0x55b71dfa54b0 's_forward_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | |         `-DeclRefExpr 0x55b71dfa55b0 <col:38> 'int' EnumConstant 0x55b71dfa5540 's_reply_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | |-EnumConstantDecl 0x55b71dfa56c0 <line:116:6, col:23> col:6 referenced s_forward_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55b71dfa58d8 <col:23> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55b71dfa56a0 <col:23> 'int' Int: 4
| | |     `-IntegerLiteral 0x55b71dfa5680 <col:23> 'int' 4
| | |-EnumConstantDecl 0x55b71dfa5750 <col:26, col:41> col:26 referenced s_reply_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | | `-ImplicitCastExpr 0x55b71dfa58f0 <col:41> 'unsigned int' <IntegralCast>
| | |   `-ConstantExpr 0x55b71dfa5730 <col:41> 'int' Int: 8
| | |     `-IntegerLiteral 0x55b71dfa5710 <col:41> 'int' 8
| | `-EnumConstantDecl 0x55b71dfa5840 <line:117:6, col:50> col:6 referenced s_both_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |   `-ImplicitCastExpr 0x55b71dfa5908 <col:20, col:50> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55b71dfa5820 <col:20, col:50> 'int' Int: 12
| |       `-ParenExpr 0x55b71dfa5800 <col:20, col:50> 'int'
| |         `-BinaryOperator 0x55b71dfa57e0 <col:21, col:38> 'int' '|'
| |           |-DeclRefExpr 0x55b71dfa57a0 <col:21> 'int' EnumConstant 0x55b71dfa56c0 's_forward_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |           `-DeclRefExpr 0x55b71dfa57c0 <col:38> 'int' EnumConstant 0x55b71dfa5750 's_reply_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-CXXMethodDecl 0x55b71dfa5968 <line:119:2, line:121:2> line:119:7 used both_done 'bool () const'
| | `-CompoundStmt 0x55b71dfab970 <col:25, line:121:2>
| |   `-ReturnStmt 0x55b71dfab960 <line:120:6, col:40>
| |     `-BinaryOperator 0x55b71dfab940 <col:13, col:40> 'bool' '=='
| |       |-ParenExpr 0x55b71dfab858 <col:13, col:35> 'int'
| |       | `-BinaryOperator 0x55b71dfab838 <col:14, col:24> 'int' '&'
| |       |   |-ImplicitCastExpr 0x55b71dfab808 <col:14> 'int' <IntegralCast>
| |       |   | `-ImplicitCastExpr 0x55b71dfab7f0 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
| |       |   |   `-MemberExpr 0x55b71dfab7a0 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55b71df55408
| |       |   |     `-ImplicitCastExpr 0x55b71dfab780 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
| |       |   |       `-CXXThisExpr 0x55b71dfab770 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
| |       |   `-ImplicitCastExpr 0x55b71dfab820 <col:24> 'int' <IntegralCast>
| |       |     `-DeclRefExpr 0x55b71dfab7d0 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55b71dfa5630 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |       `-ImplicitCastExpr 0x55b71dfab928 <col:40> 'int' <IntegralCast>
| |         `-DeclRefExpr 0x55b71dfab878 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55b71dfa5630 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-CXXMethodDecl 0x55b71dfa5a28 <line:122:2, line:124:2> line:122:7 used both_data 'bool () const'
| | `-CompoundStmt 0x55b71dfabb88 <col:25, line:124:2>
| |   `-ReturnStmt 0x55b71dfabb78 <line:123:6, col:40>
| |     `-BinaryOperator 0x55b71dfabb58 <col:13, col:40> 'bool' '=='
| |       |-ParenExpr 0x55b71dfaba70 <col:13, col:35> 'int'
| |       | `-BinaryOperator 0x55b71dfaba50 <col:14, col:24> 'int' '&'
| |       |   |-ImplicitCastExpr 0x55b71dfaba20 <col:14> 'int' <IntegralCast>
| |       |   | `-ImplicitCastExpr 0x55b71dfaba08 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
| |       |   |   `-MemberExpr 0x55b71dfab9b8 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55b71df55408
| |       |   |     `-ImplicitCastExpr 0x55b71dfab998 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
| |       |   |       `-CXXThisExpr 0x55b71dfab988 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
| |       |   `-ImplicitCastExpr 0x55b71dfaba38 <col:24> 'int' <IntegralCast>
| |       |     `-DeclRefExpr 0x55b71dfab9e8 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55b71dfa5840 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |       `-ImplicitCastExpr 0x55b71dfabb40 <col:40> 'int' <IntegralCast>
| |         `-DeclRefExpr 0x55b71dfaba90 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55b71dfa5840 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-CXXMethodDecl 0x55b71dfa5cf0 <line:126:2, col:75> col:6 update_seqno_delta 'int (bool, tcp_seq_t, int32_t)'
| | |-ParmVarDecl 0x55b71dfa5ad8 <col:25, col:30> col:30 direction 'bool'
| | |-ParmVarDecl 0x55b71dfa5b50 <col:41, col:51> col:51 old_seqno 'tcp_seq_t':'unsigned int'
| | `-ParmVarDecl 0x55b71dfa5bc8 <col:62, col:70> col:70 delta 'int32_t':'int'
| |-CXXMethodDecl 0x55b71dfa5f48 <line:127:2, col:53> col:12 new_seq 'tcp_seq_t (bool, tcp_seq_t) const'
| | |-ParmVarDecl 0x55b71dfa5db8 <col:20, col:25> col:25 direction 'bool'
| | `-ParmVarDecl 0x55b71dfa5e30 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
| |-CXXMethodDecl 0x55b71dfa7138 <line:128:2, col:53> col:12 new_ack 'tcp_seq_t (bool, tcp_seq_t) const'
| | |-ParmVarDecl 0x55b71dfa6008 <col:20, col:25> col:25 direction 'bool'
| | `-ParmVarDecl 0x55b71dfa70a0 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
| |-CXXMethodDecl 0x55b71dfa7390 <line:130:2, col:62> col:7 apply 'void (WritablePacket *, bool, unsigned int)'
| | |-ParmVarDecl 0x55b71dfa71f8 <col:13, col:29> col:29 p 'WritablePacket *'
| | |-ParmVarDecl 0x55b71dfa7270 <col:32, col:37> col:37 direction 'bool'
| | `-ParmVarDecl 0x55b71dfa72f0 <col:48, col:57> col:57 annos 'unsigned int'
| |-CXXMethodDecl 0x55b71dfa75e8 <line:132:2, col:69> col:7 unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| | |-ParmVarDecl 0x55b71dfa7458 <col:15, col:28> col:28 sa 'StringAccum &'
| | |-ParmVarDecl 0x55b71dfa74d0 <col:32, col:37> col:37 direction 'bool'
| | `-ParmVarDecl 0x55b71dfa7548 <col:48, col:64> col:64 now 'click_jiffies_t':'unsigned int'
| |-AccessSpecDecl 0x55b71dfa76a0 <line:134:7, col:14> col:7 private
| |-CXXRecordDecl 0x55b71dfa76c8 <line:136:2, line:149:2> line:136:9 referenced struct delta_transition definition
| | |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | | |-DefaultConstructor exists non_trivial user_provided
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-CXXRecordDecl 0x55b71dfa77e8 <col:2, col:9> col:9 implicit referenced struct delta_transition
| | |-FieldDecl 0x55b71dfa7918 <line:137:6, col:21> col:14 referenced delta 'int32_t [2]'
| | |-FieldDecl 0x55b71dfa7a08 <line:138:6, col:25> col:16 referenced trigger 'tcp_seq_t [2]'
| | |-FieldDecl 0x55b71dfa7a68 <line:139:6, col:16> col:16 referenced nextptr 'uintptr_t':'unsigned long'
| | |-CXXConstructorDecl 0x55b71dfa7b20 <line:140:6, line:142:6> line:140:6 delta_transition 'void ()'
| | | `-CompoundStmt 0x55b71dfabcd0 <col:25, line:142:6>
| | |   `-CallExpr 0x55b71dfabc80 <line:141:3, col:43> 'void *'
| | |     |-ImplicitCastExpr 0x55b71dfabc68 <col:3> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| | |     | `-DeclRefExpr 0x55b71dfabc48 <col:3> 'void *(void *, int, size_t) throw()' lvalue Function 0x55b71db98be8 'memset' 'void *(void *, int, size_t) throw()'
| | |     |-ImplicitCastExpr 0x55b71dfabcb8 <col:10> 'void *' <BitCast>
| | |     | `-CXXThisExpr 0x55b71dfabbe8 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' this
| | |     |-IntegerLiteral 0x55b71dfabbf8 <col:16> 'int' 0
| | |     `-UnaryExprOrTypeTraitExpr 0x55b71dfabc28 <col:19, col:42> 'unsigned long' sizeof 'TCPRewriter::TCPFlow::delta_transition'
| | |-CXXMethodDecl 0x55b71dfa7c48 <line:143:6, line:145:6> line:143:24 used next 'TCPRewriter::TCPFlow::delta_transition *() const'
| | | `-CompoundStmt 0x55b71dfabe80 <col:37, line:145:6>
| | |   `-ReturnStmt 0x55b71dfabe70 <line:144:3, col:70>
| | |     `-CXXReinterpretCastExpr 0x55b71dfabe40 <col:10, col:70> 'TCPRewriter::TCPFlow::delta_transition *' reinterpret_cast<struct TCPRewriter::TCPFlow::delta_transition *> <IntegralToPointer>
| | |       `-BinaryOperator 0x55b71dfabe10 <col:47, col:69> 'unsigned long' '-'
| | |         |-ImplicitCastExpr 0x55b71dfabdf8 <col:47> 'uintptr_t':'unsigned long' <LValueToRValue>
| | |         | `-MemberExpr 0x55b71dfabcf8 <col:47> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55b71dfa7a68
| | |         |   `-CXXThisExpr 0x55b71dfabce8 <col:47> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| | |         `-ParenExpr 0x55b71dfabdd8 <col:57, col:69> 'unsigned long'
| | |           `-BinaryOperator 0x55b71dfabdb8 <col:58, col:68> 'unsigned long' '&'
| | |             |-ImplicitCastExpr 0x55b71dfabd88 <col:58> 'uintptr_t':'unsigned long' <LValueToRValue>
| | |             | `-MemberExpr 0x55b71dfabd38 <col:58> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55b71dfa7a68
| | |             |   `-CXXThisExpr 0x55b71dfabd28 <col:58> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| | |             `-ImplicitCastExpr 0x55b71dfabda0 <col:68> 'unsigned long' <IntegralCast>
| | |               `-IntegerLiteral 0x55b71dfabd68 <col:68> 'int' 3
| | |-CXXMethodDecl 0x55b71dfa7db8 <line:146:6, line:148:6> line:146:11 used has_trigger 'bool (bool) const'
| | | |-ParmVarDecl 0x55b71dfa7cf8 <col:23, col:28> col:28 used direction 'bool'
| | | `-CompoundStmt 0x55b71dfac000 <col:45, line:148:6>
| | |   `-ReturnStmt 0x55b71dfabff0 <line:147:3, col:35>
| | |     `-ImplicitCastExpr 0x55b71dfabfd8 <col:10, col:35> 'bool' <IntegralToBoolean>
| | |       `-BinaryOperator 0x55b71dfabfb8 <col:10, col:35> 'unsigned long' '&'
| | |         |-ImplicitCastExpr 0x55b71dfabf88 <col:10> 'uintptr_t':'unsigned long' <LValueToRValue>
| | |         | `-MemberExpr 0x55b71dfabea8 <col:10> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55b71dfa7a68
| | |         |   `-CXXThisExpr 0x55b71dfabe98 <col:10> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| | |         `-ImplicitCastExpr 0x55b71dfabfa0 <col:20, col:35> 'unsigned long' <IntegralCast>
| | |           `-ParenExpr 0x55b71dfabf68 <col:20, col:35> 'int'
| | |             `-BinaryOperator 0x55b71dfabf48 <col:21, col:26> 'int' '<<'
| | |               |-IntegerLiteral 0x55b71dfabed8 <col:21> 'int' 1
| | |               `-ImplicitCastExpr 0x55b71dfabf30 <col:26> 'int' <IntegralCast>
| | |                 `-ImplicitCastExpr 0x55b71dfabf18 <col:26> 'bool' <LValueToRValue>
| | |                   `-DeclRefExpr 0x55b71dfabef8 <col:26> 'bool' lvalue ParmVar 0x55b71dfa7cf8 'direction' 'bool'
| | `-CXXDestructorDecl 0x55b71dfab5f8 <line:136:9> col:9 implicit ~delta_transition 'void ()' inline default trivial noexcept-unevaluated 0x55b71dfab5f8
| |-FieldDecl 0x55b71dfa7e88 <line:151:2, col:20> col:20 referenced _dt 'TCPRewriter::TCPFlow::delta_transition *'
| `-CXXMethodDecl 0x55b71dfa80c8 <line:153:2, col:67> col:7 apply_sack 'void (bool, click_tcp *, int)'
|   |-ParmVarDecl 0x55b71dfa7ee8 <col:18, col:23> col:23 direction 'bool'
|   |-ParmVarDecl 0x55b71dfa7f60 <col:34, col:45> col:45 tcp 'click_tcp *'
|   `-ParmVarDecl 0x55b71dfa7fe0 <col:50, col:54> col:54 transport_len 'int'
|-CXXConstructorDecl 0x55b71dfa81e0 <line:157:5, col:17> col:5 used TCPRewriter 'void ()'
|-CXXDestructorDecl 0x55b71dfa82d0 <line:158:5, col:18> col:5 used ~TCPRewriter 'void () noexcept'
| `-Overrides: [ 0x55b71df7f4f8 IPRewriterBase::~IPRewriterBase 'void () noexcept' ]
|-CXXMethodDecl 0x55b71dfa8400 <line:160:5, col:60> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55b71dea5c88 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55b71dfac068 <col:36, col:60>
|   `-ReturnStmt 0x55b71dfac058 <col:38, col:45>
|     `-ImplicitCastExpr 0x55b71dfac040 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55b71dfac018 <col:45> 'const char [12]' lvalue "TCPRewriter"
|-CXXMethodDecl 0x55b71dfa8550 <line:161:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x55b71dea6980 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55b71dfa84b8 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x55b71dfa8830 <line:163:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55b71df7fea0 IPRewriterBase::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55b71dfa86e0 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55b71dfa8758 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55b71dfa8b10 <line:165:5, line:166:53> line:165:22 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)'
| |-Overrides: [ 0x55b71df81018 IPRewriterBase::add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, int)' ]
| |-ParmVarDecl 0x55b71dfa88f8 <col:31, col:35> col:35 ip_p 'int'
| |-ParmVarDecl 0x55b71dfa8970 <col:41, col:57> col:57 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55b71dfa89e8 <line:166:10, col:26> col:26 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55b71dfa8a68 <col:44, col:48> col:48 input 'int'
|-CXXMethodDecl 0x55b71dfa8c70 <line:167:5, col:43> col:10 used destroy_flow 'void (IPRewriterFlow *)'
| |-Overrides: [ 0x55b71df81178 IPRewriterBase::destroy_flow 'void (IPRewriterFlow *)' ]
| `-ParmVarDecl 0x55b71dfa8be0 <col:23, col:39> col:39 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x55b71dfa8db8 <line:168:5, line:170:5> line:168:21 used best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)'
| |-Overrides: [ 0x55b71df81328 IPRewriterBase::best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' ]
| |-ParmVarDecl 0x55b71dfa8d28 <col:40, col:62> col:62 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x55b71dfac340 <col:68, line:170:5>
|   `-ReturnStmt 0x55b71dfac330 <line:169:2, col:92>
|     `-BinaryOperator 0x55b71dfac310 <col:9, col:92> 'unsigned int' '-'
|       |-BinaryOperator 0x55b71dfac220 <col:9, col:77> 'unsigned int' '+'
|       | |-CXXMemberCallExpr 0x55b71dfac0e8 <col:9, col:22> 'click_jiffies_t':'unsigned int'
|       | | `-MemberExpr 0x55b71dfac0b8 <col:9, col:15> '<bound member function type>' ->expiry 0x55b71df52e30
|       | |   `-ImplicitCastExpr 0x55b71dfac0a0 <col:9> 'const IPRewriterFlow *' <LValueToRValue>
|       | |     `-DeclRefExpr 0x55b71dfac080 <col:9> 'const IPRewriterFlow *' lvalue ParmVar 0x55b71dfa8d28 'flow' 'const IPRewriterFlow *'
|       | `-ImplicitCastExpr 0x55b71dfac208 <col:26, col:77> 'unsigned int' <IntegralCast>
|       |   `-CXXMemberCallExpr 0x55b71dfac1c8 <col:26, col:77> 'int'
|       |     |-MemberExpr 0x55b71dfac118 <col:26> '<bound member function type>' ->tcp_flow_timeout 0x55b71dfa9f60
|       |     | `-ImplicitCastExpr 0x55b71dfac1f0 <col:26> 'const TCPRewriter *' <NoOp>
|       |     |   `-CXXThisExpr 0x55b71dfac108 <col:26> 'TCPRewriter *' implicit this
|       |     `-CXXStaticCastExpr 0x55b71dfac190 <col:43, col:76> 'const TCPRewriter::TCPFlow *' static_cast<const class TCPRewriter::TCPFlow *> <BaseToDerived (IPRewriterFlow)>
|       |       `-ImplicitCastExpr 0x55b71dfac178 <col:72> 'const IPRewriterFlow *' <LValueToRValue> part_of_explicit_cast
|       |         `-DeclRefExpr 0x55b71dfac148 <col:72> 'const IPRewriterFlow *' lvalue ParmVar 0x55b71dfa8d28 'flow' 'const IPRewriterFlow *'
|       `-ImplicitCastExpr 0x55b71dfac2f8 <col:81, col:92> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-ArraySubscriptExpr 0x55b71dfac2d8 <col:81, col:92> 'uint32_t':'unsigned int' lvalue
|           |-ImplicitCastExpr 0x55b71dfac2c0 <col:81> 'uint32_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x55b71dfac270 <col:81> 'uint32_t [2]' lvalue ->_timeouts 0x55b71df95648
|           |   `-ImplicitCastExpr 0x55b71dfac250 <col:81> 'IPRewriterBase *' <UncheckedDerivedToBase (IPRewriterBase)>
|           |     `-CXXThisExpr 0x55b71dfac240 <col:81> 'TCPRewriter *' implicit this
|           `-IntegerLiteral 0x55b71dfac2a0 <col:91> 'int' 1
|-CXXMethodDecl 0x55b71dfa8f88 <line:172:5, col:28> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55b71dea4af8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55b71dfa8e78 <col:15> col:18 'int'
| `-ParmVarDecl 0x55b71dfa8ef0 <col:20, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x55b71dfa9058 <line:174:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55b71dea7620 Element::add_handlers 'void ()' ]
|-AccessSpecDecl 0x55b71dfa90f8 <line:176:2, col:11> col:2 protected
|-FieldDecl 0x55b71dfa9d10 <line:178:5, col:41> col:41 referenced _allocator 'SizedHashAllocator<sizeof(TCPRewriter::TCPFlow)>':'SizedHashAllocator<80>'
|-FieldDecl 0x55b71dfa9d78 <line:179:5, col:14> col:14 _annos 'unsigned int'
|-FieldDecl 0x55b71dfa9dd8 <line:180:5, col:14> col:14 referenced _tcp_data_timeout 'uint32_t':'unsigned int'
|-FieldDecl 0x55b71dfa9e38 <line:181:5, col:14> col:14 referenced _tcp_done_timeout 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71dfa9f60 <line:183:5, line:190:5> line:183:9 used tcp_flow_timeout 'int (const TCPRewriter::TCPFlow *) const'
| |-ParmVarDecl 0x55b71dfa9e98 <col:26, col:41> col:41 used mf 'const TCPRewriter::TCPFlow *'
| `-CompoundStmt 0x55b71dfac6b0 <col:51, line:190:5>
|   `-IfStmt 0x55b71dfac688 <line:184:2, line:189:24> has_else
|     |-CXXMemberCallExpr 0x55b71dfac3c0 <line:184:6, col:20> 'bool'
|     | `-MemberExpr 0x55b71dfac390 <col:6, col:10> '<bound member function type>' ->both_done 0x55b71dfa5968
|     |   `-ImplicitCastExpr 0x55b71dfac378 <col:6> 'const TCPRewriter::TCPFlow *' <LValueToRValue>
|     |     `-DeclRefExpr 0x55b71dfac358 <col:6> 'const TCPRewriter::TCPFlow *' lvalue ParmVar 0x55b71dfa9e98 'mf' 'const TCPRewriter::TCPFlow *'
|     |-ReturnStmt 0x55b71dfac450 <line:185:6, col:13>
|     | `-ImplicitCastExpr 0x55b71dfac438 <col:13> 'int' <IntegralCast>
|     |   `-ImplicitCastExpr 0x55b71dfac420 <col:13> 'uint32_t':'unsigned int' <LValueToRValue>
|     |     `-MemberExpr 0x55b71dfac3f0 <col:13> 'const uint32_t':'const unsigned int' lvalue ->_tcp_done_timeout 0x55b71dfa9e38
|     |       `-CXXThisExpr 0x55b71dfac3e0 <col:13> 'const TCPRewriter *' implicit this
|     `-IfStmt 0x55b71dfac660 <line:186:7, line:189:24> has_else
|       |-CXXMemberCallExpr 0x55b71dfac4c8 <line:186:11, col:25> 'bool'
|       | `-MemberExpr 0x55b71dfac498 <col:11, col:15> '<bound member function type>' ->both_data 0x55b71dfa5a28
|       |   `-ImplicitCastExpr 0x55b71dfac480 <col:11> 'const TCPRewriter::TCPFlow *' <LValueToRValue>
|       |     `-DeclRefExpr 0x55b71dfac460 <col:11> 'const TCPRewriter::TCPFlow *' lvalue ParmVar 0x55b71dfa9e98 'mf' 'const TCPRewriter::TCPFlow *'
|       |-ReturnStmt 0x55b71dfac558 <line:187:6, col:13>
|       | `-ImplicitCastExpr 0x55b71dfac540 <col:13> 'int' <IntegralCast>
|       |   `-ImplicitCastExpr 0x55b71dfac528 <col:13> 'uint32_t':'unsigned int' <LValueToRValue>
|       |     `-MemberExpr 0x55b71dfac4f8 <col:13> 'const uint32_t':'const unsigned int' lvalue ->_tcp_data_timeout 0x55b71dfa9dd8
|       |       `-CXXThisExpr 0x55b71dfac4e8 <col:13> 'const TCPRewriter *' implicit this
|       `-ReturnStmt 0x55b71dfac650 <line:189:6, col:24>
|         `-ImplicitCastExpr 0x55b71dfac638 <col:13, col:24> 'int' <IntegralCast>
|           `-ImplicitCastExpr 0x55b71dfac620 <col:13, col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|             `-ArraySubscriptExpr 0x55b71dfac600 <col:13, col:24> 'const uint32_t':'const unsigned int' lvalue
|               |-ImplicitCastExpr 0x55b71dfac5e8 <col:13> 'const uint32_t *' <ArrayToPointerDecay>
|               | `-MemberExpr 0x55b71dfac598 <col:13> 'uint32_t const[2]' lvalue ->_timeouts 0x55b71df95648
|               |   `-ImplicitCastExpr 0x55b71dfac578 <col:13> 'IPRewriterBase *' <UncheckedDerivedToBase (IPRewriterBase)>
|               |     `-CXXThisExpr 0x55b71dfac568 <col:13> 'const TCPRewriter *' implicit this
|               `-IntegerLiteral 0x55b71dfac5c8 <col:23> 'int' 0
|-CXXMethodDecl 0x55b71dfaa130 <line:192:5, col:57> col:19 tcp_mappings_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b71dfaa018 <col:40, col:48> col:49 'Element *'
| `-ParmVarDecl 0x55b71dfaa098 <col:51, col:56> col:57 'void *'
|-CXXMethodDecl 0x55b71dfaa490 <line:193:5, col:101> col:16 tcp_lookup_handler 'int (int, String &, Element *, const Handler *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b71dfaa1f8 <col:35> col:38 'int'
| |-ParmVarDecl 0x55b71dfaa270 <col:40, col:48> col:48 str 'String &'
| |-ParmVarDecl 0x55b71dfaa2e8 <col:53, col:62> col:62 e 'Element *'
| |-ParmVarDecl 0x55b71dfaa360 <col:65, col:80> col:80 h 'const Handler *'
| `-ParmVarDecl 0x55b71dfaa3d8 <col:83, col:97> col:97 errh 'ErrorHandler *'
|-CXXConstructorDecl 0x55b71dfaa588 <line:95:7> col:7 implicit TCPRewriter 'void (const TCPRewriter &)' inline default_delete noexcept-unevaluated 0x55b71dfaa588
| `-ParmVarDecl 0x55b71dfaa698 <col:7> col:7 'const TCPRewriter &'
`-CXXMethodDecl 0x55b71dfaa738 <col:7> col:7 implicit operator= 'TCPRewriter &(const TCPRewriter &)' inline default_delete noexcept-unevaluated 0x55b71dfaa738
  `-ParmVarDecl 0x55b71dfaa848 <col:7> col:7 'const TCPRewriter &'

Layout: <CGRecordLayout
  LLVMType:%class.TCPRewriter = type <{ %class.IPRewriterBase, %class.SizedHashAllocator, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TCPRewriter.base = type <{ %class.IPRewriterBase, %class.SizedHashAllocator, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<40> >
         0 |   vector_memory<class sized_array_memory<40> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class MyInputSpec>
         0 |   class vector_memory<class sized_array_memory<40> > vm_
         0 |     vector_memory<class sized_array_memory<40> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class MyIPRewriterEntry
         0 |   class IPFlowID orig_flow
         0 |     class IPAddress _saddr
         0 |       uint32_t _addr
         4 |     class IPAddress _daddr
         4 |       uint32_t _addr
         8 |     uint16_t _sport
        10 |     uint16_t _dport
        12 |   class IPFlowID changed_flow
        12 |     class IPAddress _saddr
        12 |       uint32_t _addr
        16 |     class IPAddress _daddr
        16 |       uint32_t _addr
        20 |     uint16_t _sport
        22 |     uint16_t _dport
        24 |   int port
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | class HashMap<class IPFlowID, class MyIPRewriterEntry>
         0 |   struct HashMap<class IPFlowID, class MyIPRewriterEntry>::Elt ** _buckets
         8 |   size_t _nbuckets
        16 |   class MyIPRewriterEntry _default_value
        16 |     class IPFlowID orig_flow
        16 |       class IPAddress _saddr
        16 |         uint32_t _addr
        20 |       class IPAddress _daddr
        20 |         uint32_t _addr
        24 |       uint16_t _sport
        26 |       uint16_t _dport
        28 |     class IPFlowID changed_flow
        28 |       class IPAddress _saddr
        28 |         uint32_t _addr
        32 |       class IPAddress _daddr
        32 |         uint32_t _addr
        36 |       uint16_t _sport
        38 |       uint16_t _dport
        40 |     int port
        48 |   size_t _n
        56 |   size_t _capacity
        64 |   class HashMap_Arena * _arena
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | class SizedHashAllocator<72>
         0 |   class HashAllocator (base)
         0 |     struct HashAllocator::link * _free
         8 |     struct HashAllocator::buffer * _buffer
        16 |     size_t _size
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class MyIPRewriter
         0 |   class TCPRewriter (primary base)
         0 |     class IPRewriterBase (primary base)
         0 |       class Element (primary base)
         0 |         (Element vtable pointer)
         8 |         class Element::Port *[2] _ports
        24 |         class Element::Port [4] _inline_ports
        88 |         int [2] _nports
        96 |         class Router * _router
       104 |         int _eindex
       112 |       class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _map
       112 |         class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       112 |           class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       112 |           class IPRewriterEntry ** buckets
       120 |           uint32_t nbuckets
       124 |           uint32_t first_bucket
       128 |           size_t size
       136 |           struct libdivide_u32_t bucket_divider
       136 |             uint32_t magic
       140 |             uint8_t more
       144 |       class Vector<class IPRewriterInput> _input_specs
       144 |         class vector_memory<class sized_array_memory<56> > vm_
       144 |           vector_memory<class sized_array_memory<56> >::type * l_
       152 |           vector_memory::size_type n_
       156 |           vector_memory::size_type capacity_
       160 |       class IPRewriterHeap * _heap
       168 |       uint32_t [2] _timeouts
       176 |       uint32_t _gc_interval_sec
       184 |       class Timer _gc_timer
       184 |         int _schedpos1
       192 |         class Timestamp _expiry_s
       192 |           union Timestamp::rep_t _t
       192 |             int64_t x
       200 |         union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |           TimerCallback callback
       208 |         void * _thunk
       216 |         class Element * _owner
       224 |         class RouterThread * _thread
       232 |     class SizedHashAllocator<80> _allocator
       232 |       class HashAllocator (base)
       232 |         struct HashAllocator::link * _free
       240 |         struct HashAllocator::buffer * _buffer
       248 |         size_t _size
       256 |     unsigned int _annos
       260 |     uint32_t _tcp_data_timeout
       264 |     uint32_t _tcp_done_timeout
       272 |   class Vector<class MyInputSpec> _my_input_specs
       272 |     class vector_memory<class sized_array_memory<40> > vm_
       272 |       vector_memory<class sized_array_memory<40> >::type * l_
       280 |       vector_memory::size_type n_
       284 |       vector_memory::size_type capacity_
       288 |   class HashMap<class IPFlowID, class MyIPRewriterEntry> _map_udp
       288 |     struct HashMap<class IPFlowID, class MyIPRewriterEntry>::Elt ** _buckets
       296 |     size_t _nbuckets
       304 |     class MyIPRewriterEntry _default_value
       304 |       class IPFlowID orig_flow
       304 |         class IPAddress _saddr
       304 |           uint32_t _addr
       308 |         class IPAddress _daddr
       308 |           uint32_t _addr
       312 |         uint16_t _sport
       314 |         uint16_t _dport
       316 |       class IPFlowID changed_flow
       316 |         class IPAddress _saddr
       316 |           uint32_t _addr
       320 |         class IPAddress _daddr
       320 |           uint32_t _addr
       324 |         uint16_t _sport
       326 |         uint16_t _dport
       328 |       int port
       336 |     size_t _n
       344 |     size_t _capacity
       352 |     class HashMap_Arena * _arena
       360 |   class HashMap<class IPFlowID, class MyIPRewriterEntry> _map_tcp
       360 |     struct HashMap<class IPFlowID, class MyIPRewriterEntry>::Elt ** _buckets
       368 |     size_t _nbuckets
       376 |     class MyIPRewriterEntry _default_value
       376 |       class IPFlowID orig_flow
       376 |         class IPAddress _saddr
       376 |           uint32_t _addr
       380 |         class IPAddress _daddr
       380 |           uint32_t _addr
       384 |         uint16_t _sport
       386 |         uint16_t _dport
       388 |       class IPFlowID changed_flow
       388 |         class IPAddress _saddr
       388 |           uint32_t _addr
       392 |         class IPAddress _daddr
       392 |           uint32_t _addr
       396 |         uint16_t _sport
       398 |         uint16_t _dport
       400 |       int port
       408 |     size_t _n
       416 |     size_t _capacity
       424 |     class HashMap_Arena * _arena
       432 |   class HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _udp_map
       432 |     class HashContainer_rep<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > _rep
       432 |       class HashContainer_adapter<class IPRewriterEntry> (base) (empty)
       432 |       class IPRewriterEntry ** buckets
       440 |       uint32_t nbuckets
       444 |       uint32_t first_bucket
       448 |       size_t size
       456 |       struct libdivide_u32_t bucket_divider
       456 |         uint32_t magic
       460 |         uint8_t more
       464 |   class SizedHashAllocator<72> _udp_allocator
       464 |     class HashAllocator (base)
       464 |       struct HashAllocator::link * _free
       472 |       struct HashAllocator::buffer * _buffer
       480 |       size_t _size
       488 |   uint32_t [2] _udp_timeouts
       496 |   uint32_t _udp_streaming_timeout
           | [sizeof=504, dsize=500, align=8,
           |  nvsize=500, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e01ce20 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<40>'
|-CXXRecordDecl 0x55b71e01cff8 prev 0x55b71e01ce20 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55b71e01d088 <col:46, col:52> col:46 public
|-TypedefDecl 0x55b71e01d0b0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e021080 <line:13:5, col:31> col:31 type 'typename sized_array_memory<40>::type':'char_array<40>'
| `-ElaboratedType 0x55b71e021030 'typename sized_array_memory<40>::type' sugar
|   `-TypedefType 0x55b71e01d560 'sized_array_memory<40>::type' sugar
|     |-Typedef 0x55b71e01d460 'type'
|     `-TemplateSpecializationType 0x55b71e01d3f0 'char_array<40UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55b71e01d2d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 40
|       |   `-SubstNonTypeTemplateParmExpr 0x55b71e01d2b0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55b71e01d290 <col:24> 'unsigned long' 40
|       `-RecordType 0x55b71e01d3d0 'char_array<40>'
|         `-ClassTemplateSpecialization 0x55b71e01d2f0 'char_array'
|-TypedefDecl 0x55b71e021138 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<40> >::type *'
| `-PointerType 0x55b71e021100 'vector_memory<sized_array_memory<40> >::type *'
|   `-TypedefType 0x55b71e0210e0 'vector_memory<sized_array_memory<40> >::type' sugar
|     |-Typedef 0x55b71e021080 'type'
|     `-ElaboratedType 0x55b71e021030 'typename sized_array_memory<40>::type' sugar
|       `-TypedefType 0x55b71e01d560 'sized_array_memory<40>::type' sugar
|         |-Typedef 0x55b71e01d460 'type'
|         `-TemplateSpecializationType 0x55b71e01d3f0 'char_array<40UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55b71e01d2d0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 40
|           |   `-SubstNonTypeTemplateParmExpr 0x55b71e01d2b0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55b71e01d290 <col:24> 'unsigned long' 40
|           `-RecordType 0x55b71e01d3d0 'char_array<40>'
|             `-ClassTemplateSpecialization 0x55b71e01d2f0 'char_array'
|-CXXMethodDecl 0x55b71e0212b8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<40> >::type *) const' inline
| `-ParmVarDecl 0x55b71e0211c8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<40> >::type *'
|-CXXConstructorDecl 0x55b71e0213a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55b71e021488 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55b71e021758 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<40> > &)'
| `-ParmVarDecl 0x55b71e021660 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<40> > &'
|-CXXMethodDecl 0x55b71e021998 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<40> >::type *)'
| |-ParmVarDecl 0x55b71e021810 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e021888 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<40> >::type *'
|-CXXMethodDecl 0x55b71e021b68 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<40> >::type *)'
| |-ParmVarDecl 0x55b71e021a58 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e021ad0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<40> >::type *'
|-CXXMethodDecl 0x55b71e021cc8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<40> >::iterator ()'
|-CXXMethodDecl 0x55b71e021d98 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<40> >::iterator ()'
|-CXXMethodDecl 0x55b71e021fe8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<40> >::iterator (vector_memory<sized_array_memory<40> >::iterator, const vector_memory<sized_array_memory<40> >::type *)'
| |-ParmVarDecl 0x55b71e021e58 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<40> >::iterator':'vector_memory<sized_array_memory<40> >::type *'
| `-ParmVarDecl 0x55b71e021ed0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<40> >::type *'
|-CXXMethodDecl 0x55b71e022248 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<40> >::iterator (vector_memory<sized_array_memory<40> >::iterator, vector_memory<sized_array_memory<40> >::iterator)'
| |-ParmVarDecl 0x55b71e0220b8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<40> >::iterator':'vector_memory<sized_array_memory<40> >::type *'
| `-ParmVarDecl 0x55b71e022130 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<40> >::iterator':'vector_memory<sized_array_memory<40> >::type *'
|-CXXMethodDecl 0x55b71e022408 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<40> >::type *)' inline
| `-ParmVarDecl 0x55b71e022318 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<40> >::type *'
|-CXXMethodDecl 0x55b71e0225c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<40> >::type *)' inline
| `-ParmVarDecl 0x55b71e0224d0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<40> >::type *'
|-CXXMethodDecl 0x55b71e022680 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e022730 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e022968 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<40> >::type *)'
| |-ParmVarDecl 0x55b71e0227e0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55b71e022858 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<40> >::type *'
|-CXXMethodDecl 0x55b71e022c08 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<40> > &)'
| `-ParmVarDecl 0x55b71e022b10 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<40> > &'
|-FieldDecl 0x55b71e022cd0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<40> >::type *'
|-FieldDecl 0x55b71e022d20 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55b71e022d70 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.25 = type { %struct.char_array.26*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.25 = type { %struct.char_array.26*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e01b888 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'MyInputSpec'
|-CXXRecordDecl 0x55b71e01ba98 prev 0x55b71e01b888 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55b71e01cd90 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<MyInputSpec>::type':'sized_array_memory<40>'
| `-ElaboratedType 0x55b71e01cd40 'typename array_memory<MyInputSpec>::type' sugar
|   `-TypedefType 0x55b71e01cd20 'conditional<true, sized_array_memory<40>, typed_array_memory<MyInputSpec> >::type' sugar
|     |-Typedef 0x55b71e01cbd0 'type'
|     `-SubstTemplateTypeParmType 0x55b71e01c9f0 'sized_array_memory<40>' sugar
|       |-TemplateTypeParmType 0x55b71dc16000 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc15fa8 'T'
|       `-RecordType 0x55b71e01c540 'sized_array_memory<40>'
|         `-ClassTemplateSpecialization 0x55b71e01c460 'sized_array_memory'
|-FieldDecl 0x55b71e022dc0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<MyInputSpec>::array_memory_type>':'vector_memory<sized_array_memory<40> >' mutable
|-AccessSpecDecl 0x55b71e022e10 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55b71e022e48 <line:118:5, col:15> col:15 value_type 'MyInputSpec':'MyInputSpec'
| `-SubstTemplateTypeParmType 0x55b71e01bb30 'MyInputSpec' sugar
|   |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dc4c168 'T'
|   `-RecordType 0x55b71e0196a0 'MyInputSpec'
|     `-CXXRecord 0x55b71e019608 'MyInputSpec'
|-TypedefDecl 0x55b71e022ed8 <line:119:5, col:16> col:16 reference 'MyInputSpec &'
| `-LValueReferenceType 0x55b71e022ea0 'MyInputSpec &'
|   `-SubstTemplateTypeParmType 0x55b71e01bb30 'MyInputSpec' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71e0196a0 'MyInputSpec'
|       `-CXXRecord 0x55b71e019608 'MyInputSpec'
|-TypedefDecl 0x55b71e022f98 <line:120:5, col:22> col:22 const_reference 'const MyInputSpec &'
| `-LValueReferenceType 0x55b71e022f60 'const MyInputSpec &'
|   `-QualType 0x55b71e01bb31 'const MyInputSpec' const
|     `-SubstTemplateTypeParmType 0x55b71e01bb30 'MyInputSpec' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e0196a0 'MyInputSpec'
|         `-CXXRecord 0x55b71e019608 'MyInputSpec'
|-TypedefDecl 0x55b71e023028 <line:121:5, col:16> col:16 pointer 'MyInputSpec *'
| `-PointerType 0x55b71e022ff0 'MyInputSpec *'
|   `-SubstTemplateTypeParmType 0x55b71e01bb30 'MyInputSpec' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71e0196a0 'MyInputSpec'
|       `-CXXRecord 0x55b71e019608 'MyInputSpec'
|-TypedefDecl 0x55b71e0230e8 <line:122:5, col:22> col:22 const_pointer 'const MyInputSpec *'
| `-PointerType 0x55b71e0230b0 'const MyInputSpec *'
|   `-QualType 0x55b71e01bb31 'const MyInputSpec' const
|     `-SubstTemplateTypeParmType 0x55b71e01bb30 'MyInputSpec' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e0196a0 'MyInputSpec'
|         `-CXXRecord 0x55b71e019608 'MyInputSpec'
|-TypedefDecl 0x55b71e023d40 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<MyInputSpec>::type':'const MyInputSpec &'
| `-ElaboratedType 0x55b71e023cf0 'typename fast_argument<MyInputSpec>::type' sugar
|   `-TypedefType 0x55b71e023cd0 'fast_argument<MyInputSpec, true>::type' sugar
|     |-Typedef 0x55b71e023c08 'type'
|     `-LValueReferenceType 0x55b71e023bd0 'const MyInputSpec &'
|       `-QualType 0x55b71e023971 'const MyInputSpec' const
|         `-SubstTemplateTypeParmType 0x55b71e023970 'MyInputSpec' sugar
|           |-TemplateTypeParmType 0x55b71dc1dad0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b71dc1da78 'T'
|           `-RecordType 0x55b71e0196a0 'MyInputSpec'
|             `-CXXRecord 0x55b71e019608 'MyInputSpec'
|-TypedefDecl 0x55b71e023da8 <line:126:5, col:22> col:22 const_access_type 'const MyInputSpec &'
| `-LValueReferenceType 0x55b71e022f60 'const MyInputSpec &'
|   `-QualType 0x55b71e01bb31 'const MyInputSpec' const
|     `-SubstTemplateTypeParmType 0x55b71e01bb30 'MyInputSpec' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e0196a0 'MyInputSpec'
|         `-CXXRecord 0x55b71e019608 'MyInputSpec'
|-TypedefDecl 0x55b71e023e00 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55b71d92f580 'int'
|-TypedefDecl 0x55b71e023e68 <line:130:5, col:16> col:16 iterator 'MyInputSpec *'
| `-PointerType 0x55b71e022ff0 'MyInputSpec *'
|   `-SubstTemplateTypeParmType 0x55b71e01bb30 'MyInputSpec' sugar
|     |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55b71dc4c168 'T'
|     `-RecordType 0x55b71e0196a0 'MyInputSpec'
|       `-CXXRecord 0x55b71e019608 'MyInputSpec'
|-TypedefDecl 0x55b71e023ed0 <line:131:5, col:22> col:22 const_iterator 'const MyInputSpec *'
| `-PointerType 0x55b71e0230b0 'const MyInputSpec *'
|   `-QualType 0x55b71e01bb31 'const MyInputSpec' const
|     `-SubstTemplateTypeParmType 0x55b71e01bb30 'MyInputSpec' sugar
|       |-TemplateTypeParmType 0x55b71dc4c1c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55b71dc4c168 'T'
|       `-RecordType 0x55b71e0196a0 'MyInputSpec'
|         `-CXXRecord 0x55b71e019608 'MyInputSpec'
|-EnumDecl 0x55b71e023f28 <line:134:5> col:5
| `-EnumConstantDecl 0x55b71e024020 <col:12, col:40> col:12 RESERVE_GROW 'Vector<MyInputSpec>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55b71e024000 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55b71dc4d388 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55b71dc4d360 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55b71dc4d340 <col:40> 'int' 1
|-CXXConstructorDecl 0x55b71e0240a8 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x55b71e024338 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<MyInputSpec>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e024160 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e024200 <col:41, col:61> col:61 v 'Vector<MyInputSpec>::value_argument_type':'const MyInputSpec &'
|-CXXConstructorDecl 0x55b71e0245f8 <line:139:5, col:37> col:12 Vector 'void (const Vector<MyInputSpec> &)' inline
| `-ParmVarDecl 0x55b71e0244e0 <col:19, col:36> col:36 x 'const Vector<MyInputSpec> &'
|-CXXConstructorDecl 0x55b71e0248b8 <line:141:5, col:32> col:12 Vector 'void (Vector<MyInputSpec> &&)' inline
| `-ParmVarDecl 0x55b71e0247a0 <col:19, col:31> col:31 x 'Vector<MyInputSpec> &&'
|-CXXMethodDecl 0x55b71e024c00 <line:144:5, col:51> col:23 operator= 'Vector<MyInputSpec> &(const Vector<MyInputSpec> &)' inline
| `-ParmVarDecl 0x55b71e024ae0 <col:33, col:50> col:50 x 'const Vector<MyInputSpec> &'
|-CXXMethodDecl 0x55b71e024f10 <line:146:5, col:46> col:23 operator= 'Vector<MyInputSpec> &(Vector<MyInputSpec> &&)' inline
| `-ParmVarDecl 0x55b71e024df0 <col:33, col:45> col:45 x 'Vector<MyInputSpec> &&'
|-CXXMethodDecl 0x55b71e025200 <line:148:5, col:70> col:23 assign 'Vector<MyInputSpec> &(Vector::size_type, Vector<MyInputSpec>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e025048 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e0250c0 <col:43, col:69> col:63 v 'Vector<MyInputSpec>::value_argument_type':'const MyInputSpec &'
|-CXXMethodDecl 0x55b71e025358 <line:150:5, col:55> col:49 begin 'Vector<MyInputSpec>::iterator ()'
| |-NoInlineAttr 0x55b71e025438 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e025490 <col:30> Inherited
|-CXXMethodDecl 0x55b71e0254d8 <line:151:5, col:53> col:49 end 'Vector<MyInputSpec>::iterator ()'
| |-NoInlineAttr 0x55b71e025588 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e0255e0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e0256a8 <line:152:5, col:63> col:55 begin 'Vector<MyInputSpec>::const_iterator () const'
| |-NoInlineAttr 0x55b71e025758 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e0257b0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e0257f8 <line:153:5, col:61> col:55 end 'Vector<MyInputSpec>::const_iterator () const'
| |-NoInlineAttr 0x55b71e0258a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e025900 <col:30> Inherited
|-CXXMethodDecl 0x55b71e025948 <line:154:5, col:64> col:55 cbegin 'Vector<MyInputSpec>::const_iterator () const'
| |-NoInlineAttr 0x55b71e0259f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e025a50 <col:30> Inherited
|-CXXMethodDecl 0x55b71e025a98 <line:155:5, col:62> col:55 cend 'Vector<MyInputSpec>::const_iterator () const'
| |-NoInlineAttr 0x55b71e025b48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55b71e025ba0 <col:30> Inherited
|-CXXMethodDecl 0x55b71e025bc8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e025c78 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55b71e025d28 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b71e025ee8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<MyInputSpec>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e025dd8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55b71e025e50 <col:37, col:63> col:57 v 'Vector<MyInputSpec>::value_argument_type':'const MyInputSpec &'
|-CXXMethodDecl 0x55b71e026038 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e025fa8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e0261e8 <line:163:5, col:65> col:43 operator[] 'MyInputSpec &(Vector::size_type)'
| |-ParmVarDecl 0x55b71e0260f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e0262a0 <col:20>
| `-OptimizeNoneAttr 0x55b71e0262f8 <col:30>
|-CXXMethodDecl 0x55b71e026418 <line:164:5, col:73> col:49 operator[] 'const MyInputSpec &(Vector::size_type) const'
| |-ParmVarDecl 0x55b71e026320 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55b71e0264d0 <col:20>
| `-OptimizeNoneAttr 0x55b71e026528 <col:30>
|-CXXMethodDecl 0x55b71e0265e0 <line:165:5, col:29> col:15 at 'MyInputSpec &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e026550 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e026728 <line:166:5, col:37> col:21 at 'const MyInputSpec &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e026698 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e026858 <line:167:5, col:21> col:15 front 'MyInputSpec &()' inline
|-CXXMethodDecl 0x55b71e026988 <line:168:5, col:29> col:21 front 'const MyInputSpec &() const' inline
|-CXXMethodDecl 0x55b71e026a58 <line:169:5, col:20> col:15 back 'MyInputSpec &()' inline
|-CXXMethodDecl 0x55b71e026b28 <line:170:5, col:28> col:21 back 'const MyInputSpec &() const' inline
|-CXXMethodDecl 0x55b71e026c68 <line:172:5, col:39> col:15 unchecked_at 'MyInputSpec &(Vector::size_type)' inline
| `-ParmVarDecl 0x55b71e026bd8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e026db0 <line:173:5, col:47> col:21 unchecked_at 'const MyInputSpec &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55b71e026d20 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55b71e026ef8 <line:174:5, col:59> col:15 at_u 'MyInputSpec &(Vector::size_type)' inline
| |-ParmVarDecl 0x55b71e026e68 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e026fb0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55b71e0270b0 <line:175:5, col:71> col:21 at_u 'const MyInputSpec &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55b71e027020 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55b71e027168 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55b71e027228 <line:177:5, col:20> col:15 data 'MyInputSpec *()' inline
|-CXXMethodDecl 0x55b71e027328 <line:178:5, col:28> col:21 data 'const MyInputSpec *() const' inline
|-CXXMethodDecl 0x55b71e0274d8 <line:180:5, col:48> col:17 push_back 'void (Vector<MyInputSpec>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e0273e8 <col:27, col:47> col:47 v 'Vector<MyInputSpec>::value_argument_type':'const MyInputSpec &'
|-FunctionTemplateDecl 0x55b71e027c98 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55b71e027590 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<MyInputSpec>':'fast_argument<MyInputSpec, true>'
| `-CXXMethodDecl 0x55b71e027bf8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (MyInputSpec &&)' inline
|   `-ParmVarDecl 0x55b71e027af8 <col:58, col:62> col:62 v 'MyInputSpec &&'
|-CXXMethodDecl 0x55b71e027d78 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55b71e027ec8 <line:186:5, col:49> col:17 push_front 'void (Vector<MyInputSpec>::value_argument_type)' inline
| `-ParmVarDecl 0x55b71e027e38 <col:28, col:48> col:48 v 'Vector<MyInputSpec>::value_argument_type':'const MyInputSpec &'
|-CXXMethodDecl 0x55b71e027f80 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55b71e0281c8 <line:189:5, col:62> col:21 insert 'Vector<MyInputSpec>::iterator (Vector<MyInputSpec>::iterator, Vector<MyInputSpec>::value_argument_type)' inline
| |-ParmVarDecl 0x55b71e028040 <col:28, col:37> col:37 it 'Vector<MyInputSpec>::iterator':'MyInputSpec *'
| `-ParmVarDecl 0x55b71e0280b8 <col:41, col:61> col:61 v 'Vector<MyInputSpec>::value_argument_type':'const MyInputSpec &'
|-CXXMethodDecl 0x55b71e028388 <line:190:5, col:38> col:21 erase 'Vector<MyInputSpec>::iterator (Vector<MyInputSpec>::iterator)' inline
| `-ParmVarDecl 0x55b71e028298 <col:27, col:36> col:36 it 'Vector<MyInputSpec>::iterator':'MyInputSpec *'
|-CXXMethodDecl 0x55b71e0285d8 <line:191:5, col:49> col:21 erase 'Vector<MyInputSpec>::iterator (Vector<MyInputSpec>::iterator, Vector<MyInputSpec>::iterator)' inline
| |-ParmVarDecl 0x55b71e028450 <col:27, col:36> col:36 a 'Vector<MyInputSpec>::iterator':'MyInputSpec *'
| `-ParmVarDecl 0x55b71e0284c8 <col:39, col:48> col:48 b 'Vector<MyInputSpec>::iterator':'MyInputSpec *'
|-CXXMethodDecl 0x55b71e028698 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e0288f8 <line:195:5, col:34> col:17 swap 'void (Vector<MyInputSpec> &)' inline
| `-ParmVarDecl 0x55b71e028800 <col:22, col:33> col:33 x 'Vector<MyInputSpec> &'
`-CXXDestructorDecl 0x55b71e0289c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x55b71e1ee908 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.24 = type { %class.vector_memory.25 }
  NonVirtualBaseLLVMType:%class.Vector.24 = type { %class.vector_memory.25 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e018af8 <../elements/tcpudp/myrewriter.hh:221:1, line:226:1> line:221:7 referenced class MyIPRewriterEntry definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71e018c18 <col:1, col:7> col:7 implicit class MyIPRewriterEntry
|-AccessSpecDecl 0x55b71e018ca8 <line:222:1, col:7> col:1 public
|-FieldDecl 0x55b71e018ce0 <line:223:5, col:14> col:14 orig_flow 'IPFlowID'
|-FieldDecl 0x55b71e018d40 <line:224:5, col:14> col:14 changed_flow 'IPFlowID'
|-FieldDecl 0x55b71e018da8 <line:225:5, col:9> col:9 port 'int'
`-CXXDestructorDecl 0x55b71e1ee918 <line:221:7> col:7 implicit ~MyIPRewriterEntry 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.MyIPRewriterEntry = type { %class.IPFlowID, %class.IPFlowID, i32 }
  NonVirtualBaseLLVMType:%class.MyIPRewriterEntry = type { %class.IPFlowID, %class.IPFlowID, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e019b68 <../dummy_inc/click/hashmap.hh:25:1, line:116:1> line:26:7 class HashMap definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'IPFlowID'
|-TemplateArgument type 'MyIPRewriterEntry'
|-CXXRecordDecl 0x55b71e028cd0 prev 0x55b71e019b68 <col:1, col:7> col:7 implicit class HashMap
|-AccessSpecDecl 0x55b71e028d60 <col:17, col:23> col:17 public
|-TypedefDecl 0x55b71e028dc8 <line:28:5, col:15> col:15 key_type 'IPFlowID':'IPFlowID'
| `-SubstTemplateTypeParmType 0x55b71e028d90 'IPFlowID' sugar
|   |-TemplateTypeParmType 0x55b71dfbc020 'K' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55b71dfbbfc8 'K'
|   `-RecordType 0x55b71df448e0 'IPFlowID'
|     `-CXXRecord 0x55b71df44850 'IPFlowID'
|-TypedefDecl 0x55b71e028e58 <line:29:5, col:15> col:15 mapped_type 'MyIPRewriterEntry':'MyIPRewriterEntry'
| `-SubstTemplateTypeParmType 0x55b71e028e20 'MyIPRewriterEntry' sugar
|   |-TemplateTypeParmType 0x55b71dfbc0a0 'V' dependent depth 0 index 1
|   | `-TemplateTypeParm 0x55b71dfbc048 'V'
|   `-RecordType 0x55b71e018b90 'MyIPRewriterEntry'
|     `-CXXRecord 0x55b71e018af8 'MyIPRewriterEntry'
|-CXXRecordDecl 0x55b71e028eb0 <line:30:5, col:12> col:12 struct Pair
|-CXXConstructorDecl 0x55b71e029df8 <line:32:5, col:13> col:5 used HashMap 'void ()'
|-CXXConstructorDecl 0x55b71e02a0b8 <line:33:5, col:59> col:14 HashMap 'void (const MyIPRewriterEntry &, HashMap_ArenaFactory *)'
| |-ParmVarDecl 0x55b71e029f18 <col:22, col:30> col:31 'const MyIPRewriterEntry &'
| `-ParmVarDecl 0x55b71e029f80 <col:33, col:58> col:56 'HashMap_ArenaFactory *'
|-CXXConstructorDecl 0x55b71e02a3b8 <line:34:5, col:34> col:5 HashMap 'void (const HashMap<IPFlowID, MyIPRewriterEntry> &)'
| `-ParmVarDecl 0x55b71e02a2a8 <col:13, col:33> col:34 'const HashMap<IPFlowID, MyIPRewriterEntry> &'
|-CXXDestructorDecl 0x55b71e02a4a0 <line:35:5, col:14> col:5 used ~HashMap 'void () noexcept'
|-CXXMethodDecl 0x55b71e02a620 <line:37:3, col:40> col:8 set_arena 'void (HashMap_ArenaFactory *)'
| `-ParmVarDecl 0x55b71e02a590 <col:18, col:39> col:40 'HashMap_ArenaFactory *'
|-CXXMethodDecl 0x55b71e02a6d8 <line:39:3, col:36> col:10 size 'size_t () const'
|-CXXMethodDecl 0x55b71e02a788 <line:40:3, col:40> col:8 empty 'bool () const'
|-CXXMethodDecl 0x55b71e02a838 <line:41:3, col:47> col:10 nbuckets 'size_t () const'
|-CXXMethodDecl 0x55b71e02aa48 <line:43:3, col:30> col:9 find_pair 'HashMap<IPFlowID, MyIPRewriterEntry>::Pair *(const IPFlowID &) const'
| `-ParmVarDecl 0x55b71e02a958 <col:19, col:27> col:28 'const IPFlowID &'
|-CXXMethodDecl 0x55b71e02ac58 <line:44:3, col:58> col:41 findp 'MyIPRewriterEntry *(const IPFlowID &) const'
| |-ParmVarDecl 0x55b71e02ab68 <col:47, col:55> col:56 'const IPFlowID &'
| |-NoInlineAttr 0x55b71e02ad10 <col:18> Inherited
| `-OptimizeNoneAttr 0x55b71e02ad68 <col:28> Inherited
|-CXXMethodDecl 0x55b71e02af28 <line:45:3, col:46> col:19 find 'const MyIPRewriterEntry &(const IPFlowID &, const MyIPRewriterEntry &) const' inline
| |-ParmVarDecl 0x55b71e02ada0 <col:24, col:32> col:33 'const IPFlowID &'
| `-ParmVarDecl 0x55b71e02ae18 <col:35, col:43> col:44 'const MyIPRewriterEntry &'
|-CXXMethodDecl 0x55b71e02b0e8 <line:46:3, col:35> col:19 find 'const MyIPRewriterEntry &(const IPFlowID &) const' inline
| `-ParmVarDecl 0x55b71e02aff8 <col:24, col:32> col:33 'const IPFlowID &'
|-CXXMethodDecl 0x55b71e02b240 <line:47:3, col:41> col:19 operator[] 'const MyIPRewriterEntry &(const IPFlowID &) const' inline
| `-ParmVarDecl 0x55b71e02b1b0 <col:30, col:38> col:39 'const IPFlowID &'
|-CXXMethodDecl 0x55b71e02b498 <line:49:3, col:45> col:9 find_pair_force 'HashMap<IPFlowID, MyIPRewriterEntry>::Pair *(const IPFlowID &, const MyIPRewriterEntry &)'
| |-ParmVarDecl 0x55b71e02b308 <col:25, col:33> col:34 'const IPFlowID &'
| `-ParmVarDecl 0x55b71e02b380 <col:36, col:44> col:45 'const MyIPRewriterEntry &'
|-CXXMethodDecl 0x55b71e02b658 <line:50:3, col:82> col:9 find_pair_force 'HashMap<IPFlowID, MyIPRewriterEntry>::Pair *(const IPFlowID &)'
| `-ParmVarDecl 0x55b71e02b568 <col:25, col:34> col:34 k 'const IPFlowID &'
|-CXXMethodDecl 0x55b71e02b8a8 <line:51:3, col:114> col:6 findp_force 'MyIPRewriterEntry *(const IPFlowID &, const MyIPRewriterEntry &)'
| |-ParmVarDecl 0x55b71e02b720 <col:18, col:27> col:27 k 'const IPFlowID &'
| `-ParmVarDecl 0x55b71e02b798 <col:30, col:39> col:39 v 'const MyIPRewriterEntry &'
|-CXXMethodDecl 0x55b71e02bb68 <line:52:3, col:70> col:6 find_force 'MyIPRewriterEntry &(const IPFlowID &, const MyIPRewriterEntry &)'
| |-ParmVarDecl 0x55b71e02b9d8 <col:17, col:26> col:26 k 'const IPFlowID &'
| `-ParmVarDecl 0x55b71e02ba50 <col:29, col:38> col:38 v 'const MyIPRewriterEntry &'
|-CXXMethodDecl 0x55b71e02bd28 <line:53:3, col:71> col:6 findp_force 'MyIPRewriterEntry *(const IPFlowID &)'
| `-ParmVarDecl 0x55b71e02bc38 <col:18, col:27> col:27 k 'const IPFlowID &'
|-CXXMethodDecl 0x55b71e02bee8 <line:54:3, col:71> col:6 find_force 'MyIPRewriterEntry &(const IPFlowID &)'
| `-ParmVarDecl 0x55b71e02bdf0 <col:17, col:26> col:26 k 'const IPFlowID &'
|-CXXMethodDecl 0x55b71e02c138 <line:56:3, col:35> col:8 insert 'bool (const IPFlowID &, const MyIPRewriterEntry &)'
| |-ParmVarDecl 0x55b71e02bfb0 <col:15, col:23> col:24 'const IPFlowID &'
| `-ParmVarDecl 0x55b71e02c028 <col:26, col:34> col:35 'const MyIPRewriterEntry &'
|-CXXMethodDecl 0x55b71e02c2f8 <line:57:3, col:23> col:8 erase 'bool (const IPFlowID &)'
| `-ParmVarDecl 0x55b71e02c208 <col:14, col:22> col:23 'const IPFlowID &'
|-CXXMethodDecl 0x55b71e02c450 <line:58:3, line:60:3> line:58:8 remove 'bool (const IPFlowID &)'
| `-ParmVarDecl 0x55b71e02c3c0 <col:15, col:24> col:24 key 'const IPFlowID &'
|-CXXMethodDecl 0x55b71e02c508 <line:61:3, col:14> col:8 clear 'void ()'
|-CXXMethodDecl 0x55b71e02c7d8 <line:63:3, col:28> col:8 swap 'void (HashMap<IPFlowID, MyIPRewriterEntry> &)'
| `-ParmVarDecl 0x55b71e02c6e8 <col:13, col:27> col:28 'HashMap<IPFlowID, MyIPRewriterEntry> &'
|-TypedefDecl 0x55b71e02ca70 <line:66:3, col:41> col:41 const_iterator '_HashMap_const_iterator<IPFlowID, MyIPRewriterEntry>':'_HashMap_const_iterator<IPFlowID, MyIPRewriterEntry>'
| `-TemplateSpecializationType 0x55b71e02c9d0 '_HashMap_const_iterator<IPFlowID, MyIPRewriterEntry>' sugar _HashMap_const_iterator
|   |-TemplateArgument type 'IPFlowID':'IPFlowID'
|   |-TemplateArgument type 'MyIPRewriterEntry':'MyIPRewriterEntry'
|   `-RecordType 0x55b71e02c9b0 '_HashMap_const_iterator<IPFlowID, MyIPRewriterEntry>'
|     `-ClassTemplateSpecialization 0x55b71e02c8b0 '_HashMap_const_iterator'
|-TypedefDecl 0x55b71e02cca0 <line:67:3, col:35> col:35 iterator '_HashMap_iterator<IPFlowID, MyIPRewriterEntry>':'_HashMap_iterator<IPFlowID, MyIPRewriterEntry>'
| `-TemplateSpecializationType 0x55b71e02cc00 '_HashMap_iterator<IPFlowID, MyIPRewriterEntry>' sugar _HashMap_iterator
|   |-TemplateArgument type 'IPFlowID':'IPFlowID'
|   |-TemplateArgument type 'MyIPRewriterEntry':'MyIPRewriterEntry'
|   `-RecordType 0x55b71e02cbe0 '_HashMap_iterator<IPFlowID, MyIPRewriterEntry>'
|     `-ClassTemplateSpecialization 0x55b71e02cae8 '_HashMap_iterator'
|-CXXMethodDecl 0x55b71e02cd98 <line:68:3, col:33> col:25 begin 'HashMap<IPFlowID, MyIPRewriterEntry>::const_iterator () const' inline
|-CXXMethodDecl 0x55b71e02cee8 <line:69:3, col:25> col:19 begin 'HashMap<IPFlowID, MyIPRewriterEntry>::iterator ()' inline
|-CXXMethodDecl 0x55b71e02cfb8 <line:70:3, col:31> col:25 end 'HashMap<IPFlowID, MyIPRewriterEntry>::const_iterator () const' inline
|-CXXMethodDecl 0x55b71e02d088 <line:71:3, col:23> col:19 end 'HashMap<IPFlowID, MyIPRewriterEntry>::iterator ()' inline
|-CXXMethodDecl 0x55b71e02d1c8 <line:74:3, col:21> col:8 resize 'void (size_t)'
| `-ParmVarDecl 0x55b71e02d138 <col:15> col:21 'size_t':'unsigned long'
|-CXXMethodDecl 0x55b71e02d280 <line:75:3, col:66> col:8 dynamic_resizing 'bool () const'
|-CXXMethodDecl 0x55b71e02d3c0 <line:76:3, col:33> col:8 set_dynamic_resizing 'void (bool)'
| `-ParmVarDecl 0x55b71e02d330 <col:29> col:33 'bool'
|-CXXMethodDecl 0x55b71e02d758 <line:78:3, col:49> col:18 operator= 'HashMap<IPFlowID, MyIPRewriterEntry> &(const HashMap<IPFlowID, MyIPRewriterEntry> &)'
| `-ParmVarDecl 0x55b71e02d628 <col:28, col:48> col:49 'const HashMap<IPFlowID, MyIPRewriterEntry> &'
|-CXXRecordDecl 0x55b71e02d810 prev 0x55b71e028eb0 <line:80:3, col:10> col:10 struct Pair
|-EnumDecl 0x55b71e02d8b0 <line:85:3> col:3
| |-EnumConstantDecl 0x55b71e02d9a0 <col:10, col:25> col:10 MAX_NBUCKETS 'HashMap<IPFlowID, MyIPRewriterEntry>::(anonymous enum at ../dummy_inc/click/hashmap.hh:85:3)'
| | `-ImplicitCastExpr 0x55b71e02dad0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e02d980 <col:25> 'int' Int: 4194303
| |     `-IntegerLiteral 0x55b71dfbff30 <col:25> 'int' 4194303
| |-EnumConstantDecl 0x55b71e02da10 <line:86:3, col:30> col:3 DEFAULT_INITIAL_NBUCKETS 'HashMap<IPFlowID, MyIPRewriterEntry>::(anonymous enum at ../dummy_inc/click/hashmap.hh:85:3)'
| | `-ImplicitCastExpr 0x55b71e02dae8 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e02d9f0 <col:30> 'int' Int: 127
| |     `-IntegerLiteral 0x55b71dfbffa0 <col:30> 'int' 127
| `-EnumConstantDecl 0x55b71e02da80 <line:87:3, col:30> col:3 DEFAULT_RESIZE_THRESHOLD 'HashMap<IPFlowID, MyIPRewriterEntry>::(anonymous enum at ../dummy_inc/click/hashmap.hh:85:3)'
|   `-ImplicitCastExpr 0x55b71e02db00 <col:30> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71e02da60 <col:30> 'int' Int: 2
|       `-IntegerLiteral 0x55b71dfc0010 <col:30> 'int' 2
|-AccessSpecDecl 0x55b71e02db18 <line:89:2, col:9> col:2 private
|-CXXRecordDecl 0x55b71e02db40 <line:91:5, col:12> col:12 struct Elt
|-FieldDecl 0x55b71e02dc70 <line:99:3, col:9> col:9 _buckets 'HashMap<IPFlowID, MyIPRewriterEntry>::Elt **'
|-FieldDecl 0x55b71e02dcc0 <line:100:3, col:10> col:10 _nbuckets 'size_t':'unsigned long'
|-FieldDecl 0x55b71e02dd20 <line:101:3, col:5> col:5 _default_value 'MyIPRewriterEntry':'MyIPRewriterEntry'
|-FieldDecl 0x55b71e02dd70 <line:103:3, col:10> col:10 _n 'size_t':'unsigned long'
|-FieldDecl 0x55b71e02ddc0 <line:104:3, col:10> col:10 _capacity 'size_t':'unsigned long'
|-FieldDecl 0x55b71e02de10 <line:106:3, col:18> col:18 _arena 'HashMap_Arena *'
|-CXXMethodDecl 0x55b71e02df60 <line:108:3, col:49> col:8 initialize 'void (HashMap_ArenaFactory *, size_t)'
| |-ParmVarDecl 0x55b71e02de60 <col:19, col:40> col:41 'HashMap_ArenaFactory *'
| `-ParmVarDecl 0x55b71e02dec8 <col:43> col:49 'size_t':'unsigned long'
|-CXXMethodDecl 0x55b71e02e1d8 <line:109:3, col:39> col:8 copy_from 'void (const HashMap<IPFlowID, MyIPRewriterEntry> &)'
| `-ParmVarDecl 0x55b71e02e118 <col:18, col:38> col:39 'const HashMap<IPFlowID, MyIPRewriterEntry> &'
|-CXXMethodDecl 0x55b71e02e320 <line:110:3, col:22> col:8 resize0 'void (size_t)'
| `-ParmVarDecl 0x55b71e02e290 <col:16> col:22 'size_t':'unsigned long'
|-CXXMethodDecl 0x55b71e02e4a8 <line:111:3, col:28> col:10 bucket 'size_t (const IPFlowID &) const'
| `-ParmVarDecl 0x55b71e02e3e8 <col:17, col:25> col:26 'const IPFlowID &'
|-FriendDecl 0x55b71e02e668 <line:113:3, col:38> col:10 'class _HashMap_iterator<IPFlowID, MyIPRewriterEntry>':'_HashMap_iterator<IPFlowID, MyIPRewriterEntry>'
`-FriendDecl 0x55b71e02e7b8 <line:114:3, col:44> col:10 'class _HashMap_const_iterator<IPFlowID, MyIPRewriterEntry>':'_HashMap_const_iterator<IPFlowID, MyIPRewriterEntry>'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap = type { %"struct.HashMap<IPFlowID, MyIPRewriterEntry>::Elt"**, i64, %class.MyIPRewriterEntry, i64, i64, %class.HashMap_Arena* }
  NonVirtualBaseLLVMType:%class.HashMap = type { %"struct.HashMap<IPFlowID, MyIPRewriterEntry>::Elt"**, i64, %class.MyIPRewriterEntry, i64, i64, %class.HashMap_Arena* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71dfb9220 <../dummy_inc/click/hashallocator.hh:58:1, line:65:1> line:59:7 class SizedHashAllocator definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'HashAllocator'
|-TemplateArgument integral 72
|-CXXRecordDecl 0x55b71dfb9458 prev 0x55b71dfb9220 <col:1, col:7> col:7 implicit class SizedHashAllocator
|-AccessSpecDecl 0x55b71dfb94e8 <col:51, col:57> col:51 public
|-CXXConstructorDecl 0x55b71dfb9548 <line:61:5, line:63:5> line:61:5 used SizedHashAllocator 'void ()'
|-CXXConstructorDecl 0x55b71dfb9628 <line:59:7> col:7 implicit SizedHashAllocator 'void (const SizedHashAllocator<72> &)' inline default_delete noexcept-unevaluated 0x55b71dfb9628
| `-ParmVarDecl 0x55b71dfb9738 <col:7> col:7 'const SizedHashAllocator<72> &'
|-CXXConstructorDecl 0x55b71dfb97d8 <col:7> col:7 implicit SizedHashAllocator 'void (SizedHashAllocator<72> &&)' inline default_delete noexcept-unevaluated 0x55b71dfb97d8
| `-ParmVarDecl 0x55b71dfb98e8 <col:7> col:7 'SizedHashAllocator<72> &&'
|-CXXMethodDecl 0x55b71dfb9988 <col:7> col:7 implicit operator= 'SizedHashAllocator<72> &(SizedHashAllocator<72> &&)' inline default_delete noexcept-unevaluated 0x55b71dfb9988
| `-ParmVarDecl 0x55b71dfb9a98 <col:7> col:7 'SizedHashAllocator<72> &&'
`-CXXDestructorDecl 0x55b71dfb9b20 <col:7> col:7 implicit used ~SizedHashAllocator 'void () noexcept' inline default
  `-CompoundStmt 0x55b71e1eeae0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.SizedHashAllocator.27 = type { %class.HashAllocator }
  NonVirtualBaseLLVMType:%class.SizedHashAllocator.27 = type { %class.HashAllocator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e01a018 <../elements/tcpudp/myrewriter.hh:257:1, line:321:1> line:257:7 class MyIPRewriter definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'TCPRewriter'
|-CXXRecordDecl 0x55b71e01a178 <col:1, col:7> col:7 implicit referenced class MyIPRewriter
|-AccessSpecDecl 0x55b71e01a208 <col:43, col:49> col:43 public
|-TypedefDecl 0x55b71e01a2c0 <line:259:5, col:34> col:34 referenced UDPFlow 'UDPRewriter::UDPFlow':'UDPRewriter::UDPFlow'
| `-ElaboratedType 0x55b71e01a250 'UDPRewriter::UDPFlow' sugar
|   `-RecordType 0x55b71dfae530 'UDPRewriter::UDPFlow'
|     `-CXXRecord 0x55b71dfae4a0 'UDPFlow'
|-CXXConstructorDecl 0x55b71e01a380 <line:261:5, col:18> col:5 MyIPRewriter 'void ()'
|-CXXDestructorDecl 0x55b71e01a470 <line:262:5, col:19> col:5 ~MyIPRewriter 'void ()' noexcept-unevaluated 0x55b71e01a470
| `-Overrides: [ 0x55b71dfa82d0 TCPRewriter::~TCPRewriter 'void () noexcept' ]
|-CXXMethodDecl 0x55b71e01a5a0 <line:264:5, col:61> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55b71dfa8400 TCPRewriter::class_name 'const char *() const' ]
| `-CompoundStmt 0x55b71e02f938 <col:36, col:61>
|   `-ReturnStmt 0x55b71e02f928 <col:38, col:45>
|     `-ImplicitCastExpr 0x55b71e02f910 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55b71e02f8e8 <col:45> 'const char [13]' lvalue "MyIPRewriter"
|-CXXMethodDecl 0x55b71e01a6f0 <line:265:5, col:28> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x55b71dfa8550 TCPRewriter::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x55b71e01a658 <col:16, col:27> col:28 'const char *'
|-CXXMethodDecl 0x55b71e01a9d0 <line:267:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55b71dfa8830 TCPRewriter::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55b71e01a880 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55b71e01a8f8 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55b71e01ac30 <line:269:5, col:75> col:22 get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)'
| |-Overrides: [ 0x55b71df80ce8 IPRewriterBase::get_entry 'IPRewriterEntry *(int, const IPFlowID &, int)' ]
| |-ParmVarDecl 0x55b71e01aa98 <col:32, col:36> col:36 ip_p 'int'
| |-ParmVarDecl 0x55b71e01ab10 <col:42, col:58> col:58 flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55b71e01ab90 <col:66, col:70> col:70 input 'int'
|-CXXMethodDecl 0x55b71e01af20 <line:270:5, line:277:5> line:270:37 get_map 'HashContainer<IPRewriterEntry> *(int)'
| |-Overrides: [ 0x55b71df80830 IPRewriterBase::get_map 'HashContainer<IPRewriterEntry> *(int)' ]
| |-ParmVarDecl 0x55b71e01ae08 <col:45, col:49> col:49 used mapid 'int'
| `-CompoundStmt 0x55b71e02fe10 <col:56, line:277:5>
|   `-IfStmt 0x55b71e02fde8 <line:271:2, line:276:13> has_else
|     |-BinaryOperator 0x55b71e02fac8 <line:271:6, col:32> 'bool' '=='
|     | |-ImplicitCastExpr 0x55b71e02fa98 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55b71e02f950 <col:6> 'int' lvalue ParmVar 0x55b71e01ae08 'mapid' 'int'
|     | `-ImplicitCastExpr 0x55b71e02fab0 <col:15, col:32> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55b71e02f9a8 <col:15, col:32> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55b71df6ad60 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|     |-ReturnStmt 0x55b71e02fb68 <line:272:6, col:14>
|     | `-UnaryOperator 0x55b71e02fb50 <col:13, col:14> 'IPRewriterBase::Map *' prefix '&' cannot overflow
|     |   `-MemberExpr 0x55b71e02fb20 <col:14> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_map 0x55b71df88d18
|     |     `-ImplicitCastExpr 0x55b71e02faf8 <col:14> 'IPRewriterBase *' <UncheckedDerivedToBase (TCPRewriter -> IPRewriterBase)>
|     |       `-CXXThisExpr 0x55b71e02fae8 <col:14> 'MyIPRewriter *' implicit this
|     `-IfStmt 0x55b71e02fdc0 <line:273:7, line:276:13> has_else
|       |-BinaryOperator 0x55b71e02fcf0 <line:273:11, col:37> 'bool' '=='
|       | |-ImplicitCastExpr 0x55b71e02fcc0 <col:11> 'int' <LValueToRValue>
|       | | `-DeclRefExpr 0x55b71e02fb78 <col:11> 'int' lvalue ParmVar 0x55b71e01ae08 'mapid' 'int'
|       | `-ImplicitCastExpr 0x55b71e02fcd8 <col:20, col:37> 'int' <IntegralCast>
|       |   `-DeclRefExpr 0x55b71e02fbd0 <col:20, col:37> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55b71df6adf0 'mapid_iprewriter_udp' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|       |-ReturnStmt 0x55b71e02fd68 <line:274:6, col:14>
|       | `-UnaryOperator 0x55b71e02fd50 <col:13, col:14> 'IPRewriterBase::Map *' prefix '&' cannot overflow
|       |   `-MemberExpr 0x55b71e02fd20 <col:14> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_udp_map 0x55b71e02e9b8
|       |     `-CXXThisExpr 0x55b71e02fd10 <col:14> 'MyIPRewriter *' implicit this
|       `-ReturnStmt 0x55b71e02fdb0 <line:276:6, col:13>
|         `-ImplicitCastExpr 0x55b71e02fd98 <col:13> 'HashContainer<IPRewriterEntry> *' <NullToPointer>
|           `-IntegerLiteral 0x55b71e02fd78 <col:13> 'int' 0
|-CXXMethodDecl 0x55b71e01b268 <line:278:5, line:279:59> line:278:22 add_flow 'IPRewriterEntry *(int, const IPFlowID &, const IPFlowID &, MyInputSpec &)'
| |-ParmVarDecl 0x55b71e01afe0 <col:31, col:35> col:35 ip_p 'int'
| |-ParmVarDecl 0x55b71e01b058 <col:41, col:57> col:57 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55b71e01b0d0 <line:279:10, col:26> col:26 rewritten_flowid 'const IPFlowID &'
| `-ParmVarDecl 0x55b71e01b178 <col:44, col:57> col:57 is 'MyInputSpec &'
|-CXXMethodDecl 0x55b71e01b3c8 <line:280:5, col:43> col:10 destroy_flow 'void (IPRewriterFlow *)'
| |-Overrides: [ 0x55b71dfa8c70 TCPRewriter::destroy_flow 'void (IPRewriterFlow *)' ]
| `-ParmVarDecl 0x55b71e01b338 <col:23, col:39> col:39 flow 'IPRewriterFlow *'
|-CXXMethodDecl 0x55b71e01b510 <line:281:5, line:286:5> line:281:21 best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)'
| |-Overrides: [ 0x55b71dfa8db8 TCPRewriter::best_effort_expiry 'click_jiffies_t (const IPRewriterFlow *)' ]
| |-ParmVarDecl 0x55b71e01b480 <col:40, col:62> col:62 used flow 'const IPRewriterFlow *'
| `-CompoundStmt 0x55b71e0302f0 <col:68, line:286:5>
|   `-IfStmt 0x55b71e0302c8 <line:282:2, line:285:100> has_else
|     |-BinaryOperator 0x55b71e02fee8 <line:282:6, col:22> 'bool' '=='
|     | |-ImplicitCastExpr 0x55b71e02fed0 <col:6, col:17> 'int' <IntegralCast>
|     | | `-CXXMemberCallExpr 0x55b71e02fe90 <col:6, col:17> 'uint8_t':'unsigned char'
|     | |   `-MemberExpr 0x55b71e02fe60 <col:6, col:12> '<bound member function type>' ->ip_p 0x55b71df53858
|     | |     `-ImplicitCastExpr 0x55b71e02fe48 <col:6> 'const IPRewriterFlow *' <LValueToRValue>
|     | |       `-DeclRefExpr 0x55b71e02fe28 <col:6> 'const IPRewriterFlow *' lvalue ParmVar 0x55b71e01b480 'flow' 'const IPRewriterFlow *'
|     | `-IntegerLiteral 0x55b71e02feb0 <col:22> 'int' 6
|     |-ReturnStmt 0x55b71e030018 <line:283:6, col:49>
|     | `-CXXMemberCallExpr 0x55b71e02ffb8 <col:13, col:49> 'click_jiffies_t':'unsigned int'
|     |   |-MemberExpr 0x55b71e02ff50 <col:13, col:26> '<bound member function type>' ->best_effort_expiry 0x55b71dfa8db8
|     |   | `-ImplicitCastExpr 0x55b71e02ffe0 <col:26> 'TCPRewriter *' <UncheckedDerivedToBase (TCPRewriter)>
|     |   |   `-CXXThisExpr 0x55b71e02ff40 <col:26> 'MyIPRewriter *' implicit this
|     |   `-ImplicitCastExpr 0x55b71e030000 <col:45> 'const IPRewriterFlow *' <LValueToRValue>
|     |     `-DeclRefExpr 0x55b71e02ff98 <col:45> 'const IPRewriterFlow *' lvalue ParmVar 0x55b71e01b480 'flow' 'const IPRewriterFlow *'
|     `-ReturnStmt 0x55b71e0302b8 <line:285:6, col:100>
|       `-BinaryOperator 0x55b71e030298 <col:13, col:100> 'unsigned int' '-'
|         |-BinaryOperator 0x55b71e0301c8 <col:13, col:81> 'unsigned int' '+'
|         | |-CXXMemberCallExpr 0x55b71e030090 <col:13, col:26> 'click_jiffies_t':'unsigned int'
|         | | `-MemberExpr 0x55b71e030060 <col:13, col:19> '<bound member function type>' ->expiry 0x55b71df52e30
|         | |   `-ImplicitCastExpr 0x55b71e030048 <col:13> 'const IPRewriterFlow *' <LValueToRValue>
|         | |     `-DeclRefExpr 0x55b71e030028 <col:13> 'const IPRewriterFlow *' lvalue ParmVar 0x55b71e01b480 'flow' 'const IPRewriterFlow *'
|         | `-ImplicitCastExpr 0x55b71e0301b0 <col:30, col:81> 'unsigned int' <IntegralCast>
|         |   `-CXXMemberCallExpr 0x55b71e030170 <col:30, col:81> 'int'
|         |     |-MemberExpr 0x55b71e0300c0 <col:30> '<bound member function type>' ->udp_flow_timeout 0x55b71e02ed80
|         |     | `-ImplicitCastExpr 0x55b71e030198 <col:30> 'const MyIPRewriter *' <NoOp>
|         |     |   `-CXXThisExpr 0x55b71e0300b0 <col:30> 'MyIPRewriter *' implicit this
|         |     `-CXXStaticCastExpr 0x55b71e030138 <col:47, col:80> 'const MyIPRewriter::UDPFlow *' static_cast<const MyIPRewriter::UDPFlow *> <BaseToDerived (IPRewriterFlow)>
|         |       `-ImplicitCastExpr 0x55b71e030120 <col:76> 'const IPRewriterFlow *' <LValueToRValue> part_of_explicit_cast
|         |         `-DeclRefExpr 0x55b71e0300f0 <col:76> 'const IPRewriterFlow *' lvalue ParmVar 0x55b71e01b480 'flow' 'const IPRewriterFlow *'
|         `-ImplicitCastExpr 0x55b71e030280 <col:85, col:100> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-ArraySubscriptExpr 0x55b71e030260 <col:85, col:100> 'uint32_t':'unsigned int' lvalue
|             |-ImplicitCastExpr 0x55b71e030248 <col:85> 'uint32_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b71e0301f8 <col:85> 'uint32_t [2]' lvalue ->_udp_timeouts 0x55b71e02ebd0
|             |   `-CXXThisExpr 0x55b71e0301e8 <col:85> 'MyIPRewriter *' implicit this
|             `-IntegerLiteral 0x55b71e030228 <col:99> 'int' 1
|-CXXMethodDecl 0x55b71e01b6e0 <line:288:5, col:28> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55b71dfa8f88 TCPRewriter::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55b71e01b5d0 <col:15> col:18 'int'
| `-ParmVarDecl 0x55b71e01b648 <col:20, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x55b71e01b7b0 <line:290:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55b71dfa9058 TCPRewriter::add_handlers 'void ()' ]
|-AccessSpecDecl 0x55b71e01b850 <line:292:3, col:10> col:3 private
|-FieldDecl 0x55b71e028ab0 <line:294:5, col:25> col:25 _my_input_specs 'Vector<MyInputSpec>':'Vector<MyInputSpec>'
|-FieldDecl 0x55b71e02e7f8 <line:296:5, col:42> col:42 _map_udp 'HashMap<IPFlowID, MyIPRewriterEntry>':'HashMap<IPFlowID, MyIPRewriterEntry>'
|-FieldDecl 0x55b71e02e958 <line:297:5, col:42> col:42 _map_tcp 'HashMap<IPFlowID, MyIPRewriterEntry>':'HashMap<IPFlowID, MyIPRewriterEntry>'
|-FieldDecl 0x55b71e02e9b8 <line:299:5, col:9> col:9 referenced _udp_map 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FieldDecl 0x55b71e02eb20 <line:300:5, col:41> col:41 referenced _udp_allocator 'SizedHashAllocator<sizeof(MyIPRewriter::UDPFlow)>':'SizedHashAllocator<72>'
|-FieldDecl 0x55b71e02ebd0 <line:301:5, col:29> col:14 referenced _udp_timeouts 'uint32_t [2]'
|-FieldDecl 0x55b71e02ec30 <line:302:5, col:14> col:14 referenced _udp_streaming_timeout 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71e02ed80 <line:304:5, line:309:5> line:304:9 used udp_flow_timeout 'int (const MyIPRewriter::UDPFlow *) const'
| |-ParmVarDecl 0x55b71e02ecb8 <col:26, col:41> col:41 used mf 'const MyIPRewriter::UDPFlow *'
| `-CompoundStmt 0x55b71e030510 <col:51, line:309:5>
|   `-IfStmt 0x55b71e0304e8 <line:305:2, line:308:28> has_else
|     |-CXXMemberCallExpr 0x55b71e030370 <line:305:6, col:20> 'bool'
|     | `-MemberExpr 0x55b71e030340 <col:6, col:10> '<bound member function type>' ->streaming 0x55b71dfaebf8
|     |   `-ImplicitCastExpr 0x55b71e030328 <col:6> 'const MyIPRewriter::UDPFlow *' <LValueToRValue>
|     |     `-DeclRefExpr 0x55b71e030308 <col:6> 'const MyIPRewriter::UDPFlow *' lvalue ParmVar 0x55b71e02ecb8 'mf' 'const MyIPRewriter::UDPFlow *'
|     |-ReturnStmt 0x55b71e030400 <line:306:6, col:13>
|     | `-ImplicitCastExpr 0x55b71e0303e8 <col:13> 'int' <IntegralCast>
|     |   `-ImplicitCastExpr 0x55b71e0303d0 <col:13> 'uint32_t':'unsigned int' <LValueToRValue>
|     |     `-MemberExpr 0x55b71e0303a0 <col:13> 'const uint32_t':'const unsigned int' lvalue ->_udp_streaming_timeout 0x55b71e02ec30
|     |       `-CXXThisExpr 0x55b71e030390 <col:13> 'const MyIPRewriter *' implicit this
|     `-ReturnStmt 0x55b71e0304d8 <line:308:6, col:28>
|       `-ImplicitCastExpr 0x55b71e0304c0 <col:13, col:28> 'int' <IntegralCast>
|         `-ImplicitCastExpr 0x55b71e0304a8 <col:13, col:28> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-ArraySubscriptExpr 0x55b71e030488 <col:13, col:28> 'const uint32_t':'const unsigned int' lvalue
|             |-ImplicitCastExpr 0x55b71e030470 <col:13> 'const uint32_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b71e030420 <col:13> 'uint32_t const[2]' lvalue ->_udp_timeouts 0x55b71e02ebd0
|             |   `-CXXThisExpr 0x55b71e030410 <col:13> 'const MyIPRewriter *' implicit this
|             `-IntegerLiteral 0x55b71e030450 <col:27> 'int' 0
|-CXXMethodDecl 0x55b71e02ef88 <line:311:5, col:70> col:10 tcp_flow_apply 'void (const MyIPRewriterEntry &, WritablePacket *)'
| |-ParmVarDecl 0x55b71e02ee38 <col:25, col:50> col:50 e 'const MyIPRewriterEntry &'
| `-ParmVarDecl 0x55b71e02eeb0 <col:53, col:69> col:69 p 'WritablePacket *'
|-CXXMethodDecl 0x55b71e02f158 <line:312:5, col:70> col:10 udp_flow_apply 'void (const MyIPRewriterEntry &, WritablePacket *)'
| |-ParmVarDecl 0x55b71e02f048 <col:25, col:50> col:50 e 'const MyIPRewriterEntry &'
| `-ParmVarDecl 0x55b71e02f0c0 <col:53, col:69> col:69 p 'WritablePacket *'
|-CXXMethodDecl 0x55b71e02f308 <line:314:5, line:317:5> line:314:24 used reply_udp_map 'IPRewriterBase::Map &(IPRewriterInput *)' static inline
| |-ParmVarDecl 0x55b71e02f218 <col:38, col:55> col:55 used rwinput 'IPRewriterInput *'
| `-CompoundStmt 0x55b71e030700 <col:64, line:317:5>
|   |-DeclStmt 0x55b71e030670 <line:315:2, col:71>
|   | `-VarDecl 0x55b71e030538 <col:2, col:70> col:16 used x 'MyIPRewriter *' cinit
|   |   `-CXXStaticCastExpr 0x55b71e030630 <col:20, col:70> 'MyIPRewriter *' static_cast<class MyIPRewriter *> <BaseToDerived (TCPRewriter -> IPRewriterBase)>
|   |     `-ImplicitCastExpr 0x55b71e030618 <col:48, col:57> 'IPRewriterBase *' <LValueToRValue> part_of_explicit_cast
|   |       `-MemberExpr 0x55b71e0305d8 <col:48, col:57> 'IPRewriterBase *' lvalue ->reply_element 0x55b71df6a720
|   |         `-ImplicitCastExpr 0x55b71e0305c0 <col:48> 'IPRewriterInput *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55b71e0305a0 <col:48> 'IPRewriterInput *' lvalue ParmVar 0x55b71e02f218 'rwinput' 'IPRewriterInput *'
|   `-ReturnStmt 0x55b71e0306f0 <line:316:2, col:12>
|     `-MemberExpr 0x55b71e0306c0 <col:9, col:12> 'IPRewriterBase::Map':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ->_udp_map 0x55b71e02e9b8
|       `-ImplicitCastExpr 0x55b71e0306a8 <col:9> 'MyIPRewriter *' <LValueToRValue>
|         `-DeclRefExpr 0x55b71e030688 <col:9> 'MyIPRewriter *' lvalue Var 0x55b71e030538 'x' 'MyIPRewriter *'
|-CXXMethodDecl 0x55b71e02f4d8 <line:319:5, col:67> col:19 udp_mappings_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b71e02f3c0 <col:40, col:49> col:49 e 'Element *'
| `-ParmVarDecl 0x55b71e02f440 <col:52, col:58> col:58 user_data 'void *'
|-CXXConstructorDecl 0x55b71e02f5b8 <line:257:7> col:7 implicit MyIPRewriter 'void (const MyIPRewriter &)' inline default_delete noexcept-unevaluated 0x55b71e02f5b8
| `-ParmVarDecl 0x55b71e02f6c8 <col:7> col:7 'const MyIPRewriter &'
`-CXXMethodDecl 0x55b71e02f768 <col:7> col:7 implicit operator= 'MyIPRewriter &(const MyIPRewriter &)' inline default_delete noexcept-unevaluated 0x55b71e02f768
  `-ParmVarDecl 0x55b71e02f878 <col:7> col:7 'const MyIPRewriter &'

Layout: <CGRecordLayout
  LLVMType:%class.MyIPRewriter = type <{ %class.TCPRewriter.base, [4 x i8], %class.Vector.24, %class.HashMap, %class.HashMap, %class.HashContainer, %class.SizedHashAllocator.27, [2 x i32], i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.MyIPRewriter.base = type <{ %class.TCPRewriter.base, [4 x i8], %class.Vector.24, %class.HashMap, %class.HashMap, %class.HashContainer, %class.SizedHashAllocator.27, [2 x i32], i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e116798 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55b71e1168c8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55b71e116928 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55b71e116988 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55b71e1910d8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55b71e1911b0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55b71e1911b0
|-CXXConstructorDecl 0x55b71e191468 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55b71e191468
| `-ParmVarDecl 0x55b71e191578 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55b71e191618 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55b71e191618
  `-ParmVarDecl 0x55b71e191728 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e1165f0 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b71e116708 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55b71e116798 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55b71e1168c8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55b71e116928 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55b71e116988 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55b71e1910d8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55b71e1911b0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55b71e1911b0
| |-CXXConstructorDecl 0x55b71e191468 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55b71e191468
| | `-ParmVarDecl 0x55b71e191578 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55b71e191618 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55b71e191618
|   `-ParmVarDecl 0x55b71e191728 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55b71e116a48 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55b71e116aa8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55b71e116a48 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55b71e1168c8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55b71e116b00 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55b71e116a48 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55b71e116928 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55b71e116b58 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55b71e116a48 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55b71e116988 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55b71e116bb0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b71e190fe8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b71e191948 <col:11>
|-CXXConstructorDecl 0x55b71e1912b8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55b71e1912b8
| `-ParmVarDecl 0x55b71e1913c8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55b71e1917c8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55b71e1917c8
  `-ParmVarDecl 0x55b71e1918d8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e114250 prev 0x55b71dea40c0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55b71e114388 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55b71e114418 <col:33, col:39> col:33 public
|-EnumDecl 0x55b71e114440 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55b71e114580 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55b71e114560 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55b71e114540 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55b71e114500 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55b71e114520 <col:26> 'int' 16
| `-EnumConstantDecl 0x55b71e114650 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55b71e114630 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55b71e114610 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55b71e1145d0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55b71e1145f0 <col:47> 'int' 31
|-EnumDecl 0x55b71e1146a0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55b71e1147e0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55b71e114900 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e1147c0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55b71e1147a0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55b71e114760 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55b71e114780 <col:29> 'int' 15
| `-EnumConstantDecl 0x55b71e1148b0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55b71e114918 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71e114890 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55b71e114870 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55b71e114830 <col:51> 'int' 1
|         `-IntegerLiteral 0x55b71e114850 <col:54> 'int' 10
|-CXXConstructorDecl 0x55b71e114ae8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55b71e114940 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55b71e1149c0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55b71e114c40 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55b71e114bb0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55b71e114d38 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55b71e114d38
|-CXXMethodDecl 0x55b71e114ec8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55b71e117fc8 <col:42, line:100:5>
|   `-ReturnStmt 0x55b71e117fb8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55b71e117fa0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55b71e117f70 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55b71e116cf0
|         `-CXXThisExpr 0x55b71e117f60 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55b71e114f90 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55b71e118048 <col:36, line:105:5>
|   `-ReturnStmt 0x55b71e118038 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55b71e118020 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55b71e117ff0 <col:16> 'void *const' lvalue ->_thunk 0x55b71e116d58
|         `-CXXThisExpr 0x55b71e117fe0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55b71e115050 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55b71e1180c8 <col:37, line:110:5>
|   `-ReturnStmt 0x55b71e1180b8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55b71e1180a0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55b71e118070 <col:16> 'Element *const' lvalue ->_owner 0x55b71e116e18
|         `-CXXThisExpr 0x55b71e118060 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55b71e115110 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55b71e1151d8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55b71e115298 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55b71e115358 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55b71e1181b0 <col:35, line:137:5>
|   `-ReturnStmt 0x55b71e1181a0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55b71e118168 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55b71e118138 <col:16, col:24> '<bound member function type>' ->router 0x55b71deb5910
|         `-ImplicitCastExpr 0x55b71e118188 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55b71e118120 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55b71e1180f0 <col:16> 'Element *const' lvalue ->_owner 0x55b71e116e18
|               `-CXXThisExpr 0x55b71e1180e0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55b71e115418 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55b71e1155d8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55b71e1154c8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55b71e115540 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55b71e1157e8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55b71e115698 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55b71e115710 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55b71e1158b8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55b71e1182c0 <col:35, line:181:5>
|   `-ReturnStmt 0x55b71e1182b0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55b71e118298 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55b71e118280 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55b71e118250 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55b71e116928
|           `-MemberExpr 0x55b71e118208 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55b71e116a48
|             `-MemberExpr 0x55b71e1181d8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55b71e116c78
|               `-CXXThisExpr 0x55b71e1181c8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55b71e115978 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55b71e1183d8 <col:30, line:192:5>
|   `-BinaryOperator 0x55b71e1183b8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55b71e118360 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55b71e116928
|     | `-MemberExpr 0x55b71e118318 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55b71e116a48
|     |   `-MemberExpr 0x55b71e1182e8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55b71e116c78
|     |     `-CXXThisExpr 0x55b71e1182d8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55b71e1183a0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55b71e118390 <col:32> 'bool' false
|-CXXMethodDecl 0x55b71e115a38 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55b71e118728 <col:30, line:206:5>
|   |-BinaryOperator 0x55b71e1184d0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55b71e118478 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55b71e116928
|   | | `-MemberExpr 0x55b71e118430 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55b71e116a48
|   | |   `-MemberExpr 0x55b71e118400 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55b71e116c78
|   | |     `-CXXThisExpr 0x55b71e1183f0 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55b71e1184b8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55b71e1184a8 <col:32> 'bool' true
|   |-CallExpr 0x55b71e118570 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55b71e118558 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b71e118538 <col:9> 'void ()' lvalue Function 0x55b71da8daa8 'click_fence' 'void ()'
|   `-IfStmt 0x55b71e118710 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55b71e118650 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55b71e118620 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55b71e1185d0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55b71e117088
|     | |   `-MemberExpr 0x55b71e1185a0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55b71e117100
|     | |     `-CXXThisExpr 0x55b71e118590 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55b71e118638 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55b71e118600 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55b71e1186d0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55b71e118680 <col:13> '<bound member function type>' ->complete_schedule 0x55b71e117b00
|       | `-CXXThisExpr 0x55b71e118670 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55b71e1186f8 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55b71e1186b0 <col:31> 'int' 0
|-CXXMethodDecl 0x55b71e115af8 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55b71e118850 <col:35, line:240:5>
|   `-BinaryOperator 0x55b71e118830 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55b71e1187d8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55b71e116928
|     | `-MemberExpr 0x55b71e118790 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55b71e116a48
|     |   `-MemberExpr 0x55b71e118760 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55b71e116c78
|     |     `-CXXThisExpr 0x55b71e118750 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55b71e118818 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55b71e118808 <col:32> 'bool' true
|-CXXMethodDecl 0x55b71e115bb8 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55b71e118a68 <col:37, line:253:5>
|   |-BinaryOperator 0x55b71e118948 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55b71e1188f0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55b71e116928
|   | | `-MemberExpr 0x55b71e1188a8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55b71e116a48
|   | |   `-MemberExpr 0x55b71e118878 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55b71e116c78
|   | |     `-CXXThisExpr 0x55b71e118868 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55b71e118930 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55b71e118920 <col:32> 'bool' false
|   `-BinaryOperator 0x55b71e118a48 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55b71e1189f0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55b71e116988
|     | `-MemberExpr 0x55b71e1189a8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55b71e116a48
|     |   `-MemberExpr 0x55b71e118978 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55b71e116c78
|     |     `-CXXThisExpr 0x55b71e118968 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55b71e118a30 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55b71e118a20 <col:41> 'bool' true
|-CXXMethodDecl 0x55b71e115c78 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55b71e118be8 <col:37, line:264:5>
|   |-BinaryOperator 0x55b71e118b68 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55b71e118b10 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55b71e116988
|   | | `-MemberExpr 0x55b71e118ac8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55b71e116a48
|   | |   `-MemberExpr 0x55b71e118a98 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55b71e116c78
|   | |     `-CXXThisExpr 0x55b71e118a88 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55b71e118b50 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55b71e118b40 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55b71e118bc8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55b71e118b98 <col:9> '<bound member function type>' ->reschedule 0x55b71e115a38
|       `-CXXThisExpr 0x55b71e118b88 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55b71e115dc0 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55b71e115d30 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55b71e115e90 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55b71e115fd8 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55b71e115f48 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55b71e116128 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55b71e116098 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55b71e1161f0 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55b71e1162b0 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55b71e116350 <col:53> "" ""
|-CXXMethodDecl 0x55b71e1163e8 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55b71e116488 <col:47> "" ""
|-AccessSpecDecl 0x55b71e1164f8 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55b71e116538 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55b71e1165a0 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55b71e1165f0 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b71e116708 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55b71e116798 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55b71e1168c8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55b71e116928 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55b71e116988 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55b71e1910d8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55b71e1911b0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55b71e1911b0
| | |-CXXConstructorDecl 0x55b71e191468 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55b71e191468
| | | `-ParmVarDecl 0x55b71e191578 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55b71e191618 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55b71e191618
| |   `-ParmVarDecl 0x55b71e191728 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55b71e116a48 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55b71e116aa8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55b71e116a48 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55b71e1168c8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55b71e116b00 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55b71e116a48 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55b71e116928 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55b71e116b58 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55b71e116a48 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55b71e116988 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55b71e116bb0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55b71e190fe8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55b71e191948 <col:11>
| |-CXXConstructorDecl 0x55b71e1912b8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55b71e1912b8
| | `-ParmVarDecl 0x55b71e1913c8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55b71e1917c8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55b71e1917c8
|   `-ParmVarDecl 0x55b71e1918d8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55b71e116c78 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55b71e116cf0 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55b71e116d58 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55b71e116db8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55b71e116e18 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55b71e116e68 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b71e116f88 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55b71e117028 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55b71e117088 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55b71e18a548 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55b71e18a548
| | `-ParmVarDecl 0x55b71e18a658 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55b71e18a6f8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55b71e18a6f8
| | `-ParmVarDecl 0x55b71e18a808 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55b71e18a878 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55b71e18a878
| |-CXXMethodDecl 0x55b71e18b0f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55b71e18b0f8
| | `-ParmVarDecl 0x55b71e18b208 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55b71e18b278 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55b71e18b278
| | `-ParmVarDecl 0x55b71e18b388 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55b71e1919a8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55b71e191a80 <col:11>
|-FieldDecl 0x55b71e117100 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55b71e117248 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55b71e117188 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55b71e1173f8 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55b71e117308 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55b71e1174c0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55b71e117580 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55b71e117640 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55b71e118cf8 <col:41, line:355:5>
|   `-ReturnStmt 0x55b71e118ce8 <line:354:9, col:38>
|     `-BinaryOperator 0x55b71e118cc8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55b71e118c98 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55b71e118c48 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55b71e117088
|       |   `-MemberExpr 0x55b71e118c18 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55b71e117100
|       |     `-CXXThisExpr 0x55b71e118c08 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55b71e118cb0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55b71e118c78 <col:38> 'int' 0
|-CXXMethodDecl 0x55b71e117700 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55b71e117840 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55b71e1177b0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55b71e1179b8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55b71e1178f8 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55b71e117b00 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55b71e117a70 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55b71e117bc8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55b71e117d90 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55b71e117c78 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55b71e117cf8 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55b71e117e90 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55b71e117f20 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e071828 prev 0x55b71de63428 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71e071920 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55b71e0719b0 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55b71e071ae8 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55b71e0719e8 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55b71e072f10 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55b71e072ef0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55b71e072a88 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55b71e072fa0 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55b71e072f60 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55b71e0719e8 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55b71e072af0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55b71e073020 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55b71e072fe0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55b71e072b50 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55b71e073060 <col:54> 'bool' false
| `-CompoundStmt 0x55b71e073168 <col:61, line:38:5>
|   `-BinaryOperator 0x55b71e073148 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55b71e0730e0 <col:9> 'const Element *' lvalue ->_context 0x55b71e072a28
|     | `-CXXThisExpr 0x55b71e0730d0 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55b71e073130 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55b71e073110 <col:20> 'int' 0
|-CXXConstructorDecl 0x55b71e071cf8 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55b71e071ba8 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55b71e071c20 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55b71e072f48 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55b71e072f28 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55b71e072a28 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55b71e0731c0 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55b71e073180 <col:20> 'const Element *' lvalue ParmVar 0x55b71e071ba8 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55b71e072a88 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55b71e073240 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55b71e073200 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55b71e071c20 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55b71e072af0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55b71e0732c0 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55b71e073280 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55b71e072b50 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55b71e073300 <col:73> 'bool' false
| `-CompoundStmt 0x55b71e073378 <col:80, line:46:5>
|-CXXMethodDecl 0x55b71e071e28 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55b71e0733f0 <col:36, line:51:5>
|   `-ReturnStmt 0x55b71e0733e0 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55b71e0733c8 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55b71e073398 <col:16> 'const Element *const' lvalue ->_context 0x55b71e072a28
|         `-CXXThisExpr 0x55b71e073388 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55b71e071f18 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55b71e073470 <col:32, line:57:5>
|   `-ReturnStmt 0x55b71e073460 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55b71e073448 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55b71e073418 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55b71e072a88
|         `-CXXThisExpr 0x55b71e073408 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55b71e071fd8 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55b71e072160 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55b71e072090 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55b71e0722b0 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55b71e072220 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55b71e072400 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55b71e072370 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55b71e072608 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55b71e0724b8 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55b71e072530 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55b71e072938 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55b71e0726c8 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55b71e072748 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55b71e072810 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55b71e0729f0 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55b71e072a28 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55b71e072a88 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55b71e072af0 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55b71e072b50 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55b71e072ba0 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55b71e072ba0
| `-ParmVarDecl 0x55b71e072cb8 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x55b71e072d58 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55b71e072d58
| `-ParmVarDecl 0x55b71e072e68 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x55b71e1f2bf8 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e09a728 prev 0x55b71e088558 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71e09a820 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x55b71e09a910 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x55b71e0cb988 <col:16, line:828:9>
|-CXXDestructorDecl 0x55b71e09aa00 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x55b71e0cb998 <col:25, line:830:9>
|-CXXMethodDecl 0x55b71e09ab00 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x55b71e09abb0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x55b71e09ac58 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55b71e09ac58
| `-ParmVarDecl 0x55b71e09ad68 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x55b71e09b528 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55b71e09b528
  `-ParmVarDecl 0x55b71e09b638 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e088368 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x55b71e0884c8 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x55b71e088558 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x55b71e088610 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x55b71e088718 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x55b71e088648 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55b71e0b71c8 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55b71e0b71a8 <col:31> 'int' 0
|-CXXConstructorDecl 0x55b71e088a38 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x55b71e0888b0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x55b71e088928 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55b71e0b7200 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55b71e0b71e0 <col:59> 'int' 0
|-CXXConstructorDecl 0x55b71e088c10 <line:265:5, col:56> col:5 used Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55b71e088b00 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x55b71e088b78 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55b71e0b7238 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55b71e0b7218 <col:55> 'int' 0
|-CXXConstructorDecl 0x55b71e088fc8 <line:271:5, line:272:32> line:271:5 Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55b71e088db0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x55b71e088e28 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x55b71e088ea0 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55b71e0b7270 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55b71e0b7250 <col:31> 'int' 0
|-CXXConstructorDecl 0x55b71e089188 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x55b71e0890c8 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x55b71e089280 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x55b71e089468 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x55b71e089370 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x55b71e089558 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x55b71e0b7620 <col:24, line:291:5>
|   `-ReturnStmt 0x55b71e0b7610 <line:290:9, col:79>
|     `-BinaryOperator 0x55b71e0b75f0 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x55b71e0b74c8 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x55b71e0b7420 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x55b71e0b7400 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x55b71e0b72f8 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x55b71e0b72e0 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x55b71e0b72c8 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x55b71e0b7298 <col:18> 'Vector<String> *const' lvalue ->_conf 0x55b71e09c550
|       | |   |       `-CXXThisExpr 0x55b71e0b7288 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x55b71e0b73e8 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x55b71e0b73d0 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x55b71e0b7398 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x55b71e0b7368 <col:28, col:35> '<bound member function type>' ->size 0x55b71e063b78
|       | |           `-ImplicitCastExpr 0x55b71e0b73b8 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x55b71e0b7350 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x55b71e0b7320 <col:28> 'Vector<String> *const' lvalue ->_conf 0x55b71e09c550
|       | |                 `-CXXThisExpr 0x55b71e0b7310 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x55b71e0b74b0 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x55b71e0b7498 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x55b71e0b7480 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x55b71e0b7450 <col:47> 'Args::Slot *const' lvalue ->_slots 0x55b71e0b5d80
|       |         `-CXXThisExpr 0x55b71e0b7440 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x55b71e0b75d0 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x55b71e0b75b8 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55b71e0b75a0 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55b71e0b7560 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55b71e0b7548 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55b71e0b74f8 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55b71e0b5e30
|         |     |   `-CXXThisExpr 0x55b71e0b74e8 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55b71e0b7528 <col:73> 'int' 0
|         `-IntegerLiteral 0x55b71e0b7580 <col:79> 'int' 0
|-CXXMethodDecl 0x55b71e089618 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x55b71e0b77f8 <col:32, line:296:5>
|   `-ReturnStmt 0x55b71e0b77e8 <line:295:9, col:49>
|     `-BinaryOperator 0x55b71e0b77c8 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x55b71e0b76a8 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x55b71e0b7690 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55b71e0b7678 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x55b71e0b7648 <col:17> 'Args::Slot *const' lvalue ->_slots 0x55b71e0b5d80
|       |       `-CXXThisExpr 0x55b71e0b7638 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x55b71e0b77a8 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x55b71e0b7790 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55b71e0b7778 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55b71e0b7738 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55b71e0b7720 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55b71e0b76d0 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55b71e0b5e30
|         |     |   `-CXXThisExpr 0x55b71e0b76c0 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55b71e0b7700 <col:43> 'int' 0
|         `-IntegerLiteral 0x55b71e0b7758 <col:49> 'int' 0
|-CXXMethodDecl 0x55b71e089708 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x55b71e0b7a08 <col:19, line:306:5>
|   |-IfStmt 0x55b71e0b7928 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x55b71e0b7868 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x55b71e0b7850 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x55b71e0b7820 <col:13> 'Vector<String> *' lvalue ->_conf 0x55b71e09c550
|   | |     `-CXXThisExpr 0x55b71e0b7810 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x55b71e0b7908 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x55b71e0b78d8 <col:13, col:20> '<bound member function type>' ->clear 0x55b71e066548
|   |     `-ImplicitCastExpr 0x55b71e0b78c0 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x55b71e0b7890 <col:13> 'Vector<String> *' lvalue ->_conf 0x55b71e09c550
|   |         `-CXXThisExpr 0x55b71e0b7880 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x55b71e0b79b0 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x55b71e0b7980 <col:9, col:16> '<bound member function type>' .clear 0x55b71e0b5908
|   |   `-MemberExpr 0x55b71e0b7950 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x55b71e0b5d20
|   |     `-CXXThisExpr 0x55b71e0b7940 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x55b71e0b79f8 <line:305:9, col:17>
|     `-UnaryOperator 0x55b71e0b79e0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b71e0b79d0 <col:17> 'Args *' this
|-CXXMethodDecl 0x55b71e089988 <line:313:5, col:36> col:11 used bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x55b71e089890 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x55b71e089b08 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x55b71e089a40 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x55b71e089e88 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x55b71e089bb0 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x55b71e089de8 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x55b71e089c58 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x55b71e089cd0 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x55b71e0b7d58 <col:67, line:327:5>
|     |-WhileStmt 0x55b71e0b7d08 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x55b71e0b7b20 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55b71e0b7a70 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55b71dfeda38 0x55b71df64820 0x55b71df4b608 0x55b71df43028 0x55b71df0fcd8 0x55b71ded8628 0x55b71de5b958 0x55b71dcab878 0x55b71dcab550 0x55b71dc990b0 0x55b71dc98d60 0x55b71dc98450 0x55b71dc01b90 0x55b71dbf15a0
|     | | |-DeclRefExpr 0x55b71e0b7a30 <col:16> 'Iter' lvalue ParmVar 0x55b71e089c58 'begin' 'Iter'
|     | | `-DeclRefExpr 0x55b71e0b7a50 <col:25> 'Iter' lvalue ParmVar 0x55b71e089cd0 'end' 'Iter'
|     | `-CompoundStmt 0x55b71e0b7ce8 <col:30, line:325:9>
|     |   |-CallExpr 0x55b71e0b7c88 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x55b71e0b7b68 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x55b71e0b7c58 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x55b71e0b7be8 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b71de60a58 0x55b71de60678 0x55b71de602a8 0x55b71de5fec8 0x55b71de5fae8 0x55b71de5f718
|     |   |   `-DeclRefExpr 0x55b71e0b7bc8 <col:24> 'Iter' lvalue ParmVar 0x55b71e089c58 'begin' 'Iter'
|     |   `-UnaryOperator 0x55b71e0b7cd0 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x55b71e0b7cb0 <col:15> 'Iter' lvalue ParmVar 0x55b71e089c58 'begin' 'Iter'
|     `-ReturnStmt 0x55b71e0b7d48 <line:326:9, col:17>
|       `-UnaryOperator 0x55b71e0b7d30 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b71e0b7d20 <col:17> 'Args *' this
|-CXXMethodDecl 0x55b71e089f90 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x55b71e089f00 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x55b71e08a0d8 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x55b71e08a048 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x55b71e08a1a0 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x55b71e0b7e38 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x55b71e0b7dd8 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x55b71e0b7d88 <col:9> '<bound member function type>' ->reset_from 0x55b71e0b61a8
|   | | `-CXXThisExpr 0x55b71e0b7d78 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x55b71e0b7db8 <col:20> 'int' 0
|   `-ReturnStmt 0x55b71e0b7e28 <line:352:9, col:17>
|     `-UnaryOperator 0x55b71e0b7e10 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b71e0b7e00 <col:17> 'Args *' this
|-VarDecl 0x55b71e08a258 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x55b71e08a2c0 <col:38> 'int' 1
|-VarDecl 0x55b71e08a350 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x55b71e08a3b8 <col:39> 'int' 2
|-VarDecl 0x55b71e08a448 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x55b71e08a4b0 <col:39> 'int' 4
|-VarDecl 0x55b71e08a540 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x55b71e08a5a8 <col:39> 'int' 8
|-FunctionTemplateDecl 0x55b71e08a928 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x55b71e08a620 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b71e08a888 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55b71e08a6d0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08a778 <col:37, col:40> col:40 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0b7f90 <col:43, line:371:5>
|     `-ReturnStmt 0x55b71e0b7f80 <line:370:9, col:34>
|       `-CallExpr 0x55b71e0b7f48 <col:16, col:34> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b7e68 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b7ee8 <col:21> 'const char *' lvalue ParmVar 0x55b71e08a6d0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b71e0b7f08 <col:30> 'int' 0
|         `-DeclRefExpr 0x55b71e0b7f28 <col:33> 'T' lvalue ParmVar 0x55b71e08a778 'x' 'T &'
|-FunctionTemplateDecl 0x55b71e08ac58 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x55b71e08a990 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b71e08abb8 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55b71e08aa40 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08aae8 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0b80e0 <col:45, line:375:5>
|     `-ReturnStmt 0x55b71e0b80d0 <line:374:9, col:42>
|       `-CallExpr 0x55b71e0b8098 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b7fb8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b8038 <col:21> 'const char *' lvalue ParmVar 0x55b71e08aa40 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0b8058 <col:30> 'const int' lvalue Var 0x55b71e08a258 'mandatory' 'const int'
|         `-DeclRefExpr 0x55b71e0b8078 <col:41> 'T' lvalue ParmVar 0x55b71e08aae8 'x' 'T &'
|-FunctionTemplateDecl 0x55b71e08af88 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x55b71e08acc0 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b71e08aee8 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55b71e08ad70 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08ae18 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0b8230 <col:45, line:379:5>
|     `-ReturnStmt 0x55b71e0b8220 <line:378:9, col:43>
|       `-CallExpr 0x55b71e0b81e8 <col:16, col:43> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b8108 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b8188 <col:21> 'const char *' lvalue ParmVar 0x55b71e08ad70 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0b81a8 <col:30> 'const int' lvalue Var 0x55b71e08a350 'positional' 'const int'
|         `-DeclRefExpr 0x55b71e0b81c8 <col:42> 'T' lvalue ParmVar 0x55b71e08ae18 'x' 'T &'
|-FunctionTemplateDecl 0x55b71e08b2b8 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x55b71e08aff0 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b71e08b218 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55b71e08b0a0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08b148 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0b8430 <col:46, line:383:5>
|     `-ReturnStmt 0x55b71e0b8420 <line:382:9, col:55>
|       `-CallExpr 0x55b71e0b83e8 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b8258 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b82d8 <col:21> 'const char *' lvalue ParmVar 0x55b71e08b0a0 'keyword' 'const char *'
|         |-BinaryOperator 0x55b71e0b83a8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55b71e0b8358 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55b71e0b8338 <col:30> 'const int' lvalue Var 0x55b71e08a258 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55b71e0b8390 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55b71e0b8370 <col:42> 'const int' lvalue Var 0x55b71e08a350 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55b71e0b83c8 <col:54> 'T' lvalue ParmVar 0x55b71e08b148 'x' 'T &'
|-FunctionTemplateDecl 0x55b71e08b700 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x55b71e08b320 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b71e08b618 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x55b71e08b3d0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08b450 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e08b4f8 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0b8570 <col:54, line:388:5>
|     |-CallExpr 0x55b71e0b84f8 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b71e0b8448 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55b71e0b8488 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55b71e0b8498 <col:30> 'const char *' lvalue ParmVar 0x55b71e08b3d0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55b71e0b84b8 <col:39> 'int' lvalue ParmVar 0x55b71e08b450 'flags' 'int'
|     | `-DeclRefExpr 0x55b71e0b84d8 <col:46> 'T' lvalue ParmVar 0x55b71e08b4f8 'x' 'T &'
|     `-ReturnStmt 0x55b71e0b8560 <line:387:9, col:17>
|       `-UnaryOperator 0x55b71e0b8548 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b71e0b8538 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b71e08bba8 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x55b71e08b770 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55b71e08b7e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55b71e08bb08 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55b71e08b8a8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08b948 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x55b71e08b9e8 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x55b71e0b86e0 <col:74, line:403:5>
|     `-ReturnStmt 0x55b71e0b86d0 <line:402:9, col:56>
|       `-CallExpr 0x55b71e0b8690 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b85a0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b8610 <col:28> 'const char *' lvalue ParmVar 0x55b71e08b8a8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b71e0b8630 <col:37> 'int' 0
|         |-DeclRefExpr 0x55b71e0b8650 <col:40> 'T' lvalue ParmVar 0x55b71e08b948 'x' 'T &'
|         `-DeclRefExpr 0x55b71e0b8670 <col:43> 'const V' lvalue ParmVar 0x55b71e08b9e8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55b71e08c018 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55b71e08bc18 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55b71e08bc98 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55b71e08bf78 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55b71e08bd58 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08bdf8 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x55b71e08be98 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x55b71e0b8848 <col:76, line:407:5>
|     `-ReturnStmt 0x55b71e0b8838 <line:406:9, col:65>
|       `-CallExpr 0x55b71e0b87f8 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b8708 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b8778 <col:28> 'const char *' lvalue ParmVar 0x55b71e08bd58 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0b8798 <col:37> 'const int' lvalue Var 0x55b71e08a350 'positional' 'const int'
|         |-DeclRefExpr 0x55b71e0b87b8 <col:49> 'T' lvalue ParmVar 0x55b71e08bdf8 'x' 'T &'
|         `-DeclRefExpr 0x55b71e0b87d8 <col:52> 'const V' lvalue ParmVar 0x55b71e08be98 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55b71e08c568 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x55b71e08c088 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55b71e08c108 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55b71e08c4c8 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55b71e08c1c8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08c248 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e08c2e8 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x55b71e08c388 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x55b71e0b89b0 <col:85, line:412:5>
|     |-CallExpr 0x55b71e0b8930 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b71e0b8860 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55b71e0b88a0 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55b71e0b88b0 <col:37> 'const char *' lvalue ParmVar 0x55b71e08c1c8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55b71e0b88d0 <col:46> 'int' lvalue ParmVar 0x55b71e08c248 'flags' 'int'
|     | |-DeclRefExpr 0x55b71e0b88f0 <col:53> 'T' lvalue ParmVar 0x55b71e08c2e8 'x' 'T &'
|     | `-DeclRefExpr 0x55b71e0b8910 <col:56> 'const V' lvalue ParmVar 0x55b71e08c388 'default_value' 'const V &'
|     `-ReturnStmt 0x55b71e0b89a0 <line:411:9, col:17>
|       `-UnaryOperator 0x55b71e0b8988 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b71e0b8978 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b71e08c9f8 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x55b71e08c5e0 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e08c658 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x55b71e08c958 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x55b71e08c718 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55b71e08c790 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x55b71e08c838 <col:47, col:50> col:50 referenced x 'T &'
| | `-CompoundStmt 0x55b71e0b8b30 <col:53, line:425:5>
| |   `-ReturnStmt 0x55b71e0b8b20 <line:424:9, col:42>
| |     `-CallExpr 0x55b71e0b8ae0 <col:16, col:42> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55b71e0b89e0 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55b71e0b8a60 <col:21> 'const char *' lvalue ParmVar 0x55b71e08c718 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55b71e0b8a80 <col:30> 'int' 0
| |       |-DeclRefExpr 0x55b71e0b8aa0 <col:33> 'P' lvalue ParmVar 0x55b71e08c790 'parser' 'P'
| |       `-DeclRefExpr 0x55b71e0b8ac0 <col:41> 'T' lvalue ParmVar 0x55b71e08c838 'x' 'T &'
| `-CXXMethodDecl 0x55b71e21f6e8 <line:423:5, line:425:5> line:423:11 used read 'Args &(const char *, SecondsArg, unsigned int &)'
|   |-TemplateArgument type 'SecondsArg'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x55b71e21f458 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x55b71e21f4f8 <col:37, col:39> col:39 parser 'SecondsArg':'SecondsArg'
|   `-ParmVarDecl 0x55b71e21f5c8 <col:47, col:50> col:50 x 'unsigned int &'
|-FunctionTemplateDecl 0x55b71e08ce48 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x55b71e08ca68 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e08cae8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e08cda8 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b71e08cba8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08cc20 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e08ccc8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0b8ca8 <col:55, line:429:5>
|     `-ReturnStmt 0x55b71e0b8c98 <line:428:9, col:50>
|       `-CallExpr 0x55b71e0b8c58 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b8b58 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b8bd8 <col:21> 'const char *' lvalue ParmVar 0x55b71e08cba8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0b8bf8 <col:30> 'const int' lvalue Var 0x55b71e08a258 'mandatory' 'const int'
|         |-DeclRefExpr 0x55b71e0b8c18 <col:41> 'P' lvalue ParmVar 0x55b71e08cc20 'parser' 'P'
|         `-DeclRefExpr 0x55b71e0b8c38 <col:49> 'T' lvalue ParmVar 0x55b71e08ccc8 'x' 'T &'
|-FunctionTemplateDecl 0x55b71e08d298 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x55b71e08ceb8 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e08cf38 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e08d1f8 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b71e08cff8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08d070 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e08d118 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0b8e20 <col:55, line:433:5>
|     `-ReturnStmt 0x55b71e0b8e10 <line:432:9, col:51>
|       `-CallExpr 0x55b71e0b8dd0 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b8cd0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b8d50 <col:21> 'const char *' lvalue ParmVar 0x55b71e08cff8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0b8d70 <col:30> 'const int' lvalue Var 0x55b71e08a350 'positional' 'const int'
|         |-DeclRefExpr 0x55b71e0b8d90 <col:42> 'P' lvalue ParmVar 0x55b71e08d070 'parser' 'P'
|         `-DeclRefExpr 0x55b71e0b8db0 <col:50> 'T' lvalue ParmVar 0x55b71e08d118 'x' 'T &'
|-FunctionTemplateDecl 0x55b71e08d6e8 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x55b71e08d308 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e08d388 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e08d648 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b71e08d448 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08d4c0 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e08d568 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0b9048 <col:56, line:437:5>
|     `-ReturnStmt 0x55b71e0b9038 <line:436:9, col:63>
|       `-CallExpr 0x55b71e0b8ff8 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b8e48 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b8ec8 <col:21> 'const char *' lvalue ParmVar 0x55b71e08d448 'keyword' 'const char *'
|         |-BinaryOperator 0x55b71e0b8f98 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55b71e0b8f48 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55b71e0b8f28 <col:30> 'const int' lvalue Var 0x55b71e08a258 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55b71e0b8f80 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55b71e0b8f60 <col:42> 'const int' lvalue Var 0x55b71e08a350 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55b71e0b8fb8 <col:54> 'P' lvalue ParmVar 0x55b71e08d4c0 'parser' 'P'
|         `-DeclRefExpr 0x55b71e0b8fd8 <col:62> 'T' lvalue ParmVar 0x55b71e08d568 'x' 'T &'
|-FunctionTemplateDecl 0x55b71e08dc18 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x55b71e08d758 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e08d7d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e08db78 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55b71e08d898 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08d918 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e08d990 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e08da38 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0b91b0 <col:64, line:442:5>
|     |-CallExpr 0x55b71e0b9130 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b71e0b9060 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55b71e0b90a0 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55b71e0b90b0 <col:30> 'const char *' lvalue ParmVar 0x55b71e08d898 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55b71e0b90d0 <col:39> 'int' lvalue ParmVar 0x55b71e08d918 'flags' 'int'
|     | |-DeclRefExpr 0x55b71e0b90f0 <col:46> 'P' lvalue ParmVar 0x55b71e08d990 'parser' 'P'
|     | `-DeclRefExpr 0x55b71e0b9110 <col:54> 'T' lvalue ParmVar 0x55b71e08da38 'x' 'T &'
|     `-ReturnStmt 0x55b71e0b91a0 <line:441:9, col:17>
|       `-UnaryOperator 0x55b71e0b9188 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b71e0b9178 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b71e08e218 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x55b71e08dc90 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e08dd08 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55b71e08dd88 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55b71e08e178 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55b71e08de50 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08dec8 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e08df68 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x55b71e08e038 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x55b71e0b9348 <col:84, line:458:5>
|     `-ReturnStmt 0x55b71e0b9338 <line:457:9, col:64>
|       `-CallExpr 0x55b71e0b92f0 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b91e0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b9250 <col:28> 'const char *' lvalue ParmVar 0x55b71e08de50 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b71e0b9270 <col:37> 'int' 0
|         |-DeclRefExpr 0x55b71e0b9290 <col:40> 'P' lvalue ParmVar 0x55b71e08dec8 'parser' 'P'
|         |-DeclRefExpr 0x55b71e0b92b0 <col:48> 'T' lvalue ParmVar 0x55b71e08df68 'x' 'T &'
|         `-DeclRefExpr 0x55b71e0b92d0 <col:51> 'const V' lvalue ParmVar 0x55b71e08e038 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55b71e08e798 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55b71e08e290 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e08e308 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55b71e08e388 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55b71e08e6f8 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55b71e08e450 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08e4c8 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e08e568 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x55b71e08e608 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x55b71e0b94d8 <col:86, line:462:5>
|     `-ReturnStmt 0x55b71e0b94c8 <line:461:9, col:73>
|       `-CallExpr 0x55b71e0b9480 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b9370 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b93e0 <col:28> 'const char *' lvalue ParmVar 0x55b71e08e450 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0b9400 <col:37> 'const int' lvalue Var 0x55b71e08a350 'positional' 'const int'
|         |-DeclRefExpr 0x55b71e0b9420 <col:49> 'P' lvalue ParmVar 0x55b71e08e4c8 'parser' 'P'
|         |-DeclRefExpr 0x55b71e0b9440 <col:57> 'T' lvalue ParmVar 0x55b71e08e568 'x' 'T &'
|         `-DeclRefExpr 0x55b71e0b9460 <col:60> 'const V' lvalue ParmVar 0x55b71e08e608 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55b71e08edf8 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x55b71e08e810 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e08e888 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55b71e08e908 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55b71e08ed58 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55b71e08e9d0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08ea50 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e08eac8 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e08eb68 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x55b71e08ec08 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x55b71e0b9668 <col:95, line:467:5>
|     |-CallExpr 0x55b71e0b95e0 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b71e0b94f0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55b71e0b9530 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55b71e0b9540 <col:37> 'const char *' lvalue ParmVar 0x55b71e08e9d0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55b71e0b9560 <col:46> 'int' lvalue ParmVar 0x55b71e08ea50 'flags' 'int'
|     | |-DeclRefExpr 0x55b71e0b9580 <col:53> 'P' lvalue ParmVar 0x55b71e08eac8 'parser' 'P'
|     | |-DeclRefExpr 0x55b71e0b95a0 <col:61> 'T' lvalue ParmVar 0x55b71e08eb68 'x' 'T &'
|     | `-DeclRefExpr 0x55b71e0b95c0 <col:64> 'const V' lvalue ParmVar 0x55b71e08ec08 'default_value' 'const V &'
|     `-ReturnStmt 0x55b71e0b9658 <line:466:9, col:17>
|       `-UnaryOperator 0x55b71e0b9640 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b71e0b9630 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b71e08f3d8 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x55b71e08ee78 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e08eef8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55b71e08ef78 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55b71e08f338 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55b71e08f040 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08f0b8 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e08f158 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55b71e08f1f8 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x55b71e0b9810 <col:63, line:481:5>
|     `-ReturnStmt 0x55b71e0b9800 <line:480:9, col:47>
|       `-CallExpr 0x55b71e0b97b8 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b9698 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b9718 <col:21> 'const char *' lvalue ParmVar 0x55b71e08f040 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b71e0b9738 <col:30> 'int' 0
|         |-DeclRefExpr 0x55b71e0b9758 <col:33> 'P' lvalue ParmVar 0x55b71e08f0b8 'parser' 'P'
|         |-DeclRefExpr 0x55b71e0b9778 <col:41> 'T1' lvalue ParmVar 0x55b71e08f158 'x1' 'T1 &'
|         `-DeclRefExpr 0x55b71e0b9798 <col:45> 'T2' lvalue ParmVar 0x55b71e08f1f8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55b71e08f958 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x55b71e08f450 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e08f4c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55b71e08f548 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55b71e08f8b8 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55b71e08f610 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08f688 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e08f728 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55b71e08f7c8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55b71e0b99b0 <col:65, line:485:5>
|     `-ReturnStmt 0x55b71e0b99a0 <line:484:9, col:55>
|       `-CallExpr 0x55b71e0b9958 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b9838 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b98b8 <col:21> 'const char *' lvalue ParmVar 0x55b71e08f610 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0b98d8 <col:30> 'const int' lvalue Var 0x55b71e08a258 'mandatory' 'const int'
|         |-DeclRefExpr 0x55b71e0b98f8 <col:41> 'P' lvalue ParmVar 0x55b71e08f688 'parser' 'P'
|         |-DeclRefExpr 0x55b71e0b9918 <col:49> 'T1' lvalue ParmVar 0x55b71e08f728 'x1' 'T1 &'
|         `-DeclRefExpr 0x55b71e0b9938 <col:53> 'T2' lvalue ParmVar 0x55b71e08f7c8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55b71e08fed8 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x55b71e08f9d0 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e08fa48 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55b71e08fac8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55b71e08fe38 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55b71e08fb90 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e08fc08 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e08fca8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55b71e08fd48 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55b71e0b9b50 <col:65, line:489:5>
|     `-ReturnStmt 0x55b71e0b9b40 <line:488:9, col:56>
|       `-CallExpr 0x55b71e0b9af8 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b99d8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b9a58 <col:21> 'const char *' lvalue ParmVar 0x55b71e08fb90 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0b9a78 <col:30> 'const int' lvalue Var 0x55b71e08a350 'positional' 'const int'
|         |-DeclRefExpr 0x55b71e0b9a98 <col:42> 'P' lvalue ParmVar 0x55b71e08fc08 'parser' 'P'
|         |-DeclRefExpr 0x55b71e0b9ab8 <col:50> 'T1' lvalue ParmVar 0x55b71e08fca8 'x1' 'T1 &'
|         `-DeclRefExpr 0x55b71e0b9ad8 <col:54> 'T2' lvalue ParmVar 0x55b71e08fd48 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55b71e090458 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x55b71e08ff50 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e08ffc8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55b71e090048 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55b71e0903b8 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55b71e090110 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e090188 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e090228 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55b71e0902c8 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x55b71e0b9da0 <col:66, line:493:5>
|     `-ReturnStmt 0x55b71e0b9d90 <line:492:9, col:68>
|       `-CallExpr 0x55b71e0b9d48 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b9b78 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b9bf8 <col:21> 'const char *' lvalue ParmVar 0x55b71e090110 'keyword' 'const char *'
|         |-BinaryOperator 0x55b71e0b9cc8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55b71e0b9c78 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55b71e0b9c58 <col:30> 'const int' lvalue Var 0x55b71e08a258 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55b71e0b9cb0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55b71e0b9c90 <col:42> 'const int' lvalue Var 0x55b71e08a350 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55b71e0b9ce8 <col:54> 'P' lvalue ParmVar 0x55b71e090188 'parser' 'P'
|         |-DeclRefExpr 0x55b71e0b9d08 <col:62> 'T1' lvalue ParmVar 0x55b71e090228 'x1' 'T1 &'
|         `-DeclRefExpr 0x55b71e0b9d28 <col:66> 'T2' lvalue ParmVar 0x55b71e0902c8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55b71e090ab8 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x55b71e0904d0 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e090548 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55b71e0905c8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55b71e090a18 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55b71e090690 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e090710 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e090788 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e090828 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55b71e0908c8 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x55b71e0b9f30 <col:74, line:498:5>
|     |-CallExpr 0x55b71e0b9ea8 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b71e0b9db8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55b71e0b9df8 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55b71e0b9e08 <col:30> 'const char *' lvalue ParmVar 0x55b71e090690 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55b71e0b9e28 <col:39> 'int' lvalue ParmVar 0x55b71e090710 'flags' 'int'
|     | |-DeclRefExpr 0x55b71e0b9e48 <col:46> 'P' lvalue ParmVar 0x55b71e090788 'parser' 'P'
|     | |-DeclRefExpr 0x55b71e0b9e68 <col:54> 'T1' lvalue ParmVar 0x55b71e090828 'x1' 'T1 &'
|     | `-DeclRefExpr 0x55b71e0b9e88 <col:58> 'T2' lvalue ParmVar 0x55b71e0908c8 'x2' 'T2 &'
|     `-ReturnStmt 0x55b71e0b9f20 <line:497:9, col:17>
|       `-UnaryOperator 0x55b71e0b9f08 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b71e0b9ef8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b71e090e18 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x55b71e090b38 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b71e090d78 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55b71e090bf0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e090c68 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x55b71e0ba078 <col:52, line:509:5>
|     `-ReturnStmt 0x55b71e0ba068 <line:508:9, col:44>
|       `-CallExpr 0x55b71e0ba030 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0b9f60 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0b9fd0 <col:26> 'const char *' lvalue ParmVar 0x55b71e090bf0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b71e0b9ff0 <col:35> 'int' 0
|         `-DeclRefExpr 0x55b71e0ba010 <col:38> 'P' lvalue ParmVar 0x55b71e090c68 'parser' 'P'
|-FunctionTemplateDecl 0x55b71e091118 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x55b71e090e80 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b71e091078 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55b71e090f30 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e090fa8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55b71e0ba1b8 <col:54, line:513:5>
|     `-ReturnStmt 0x55b71e0ba1a8 <line:512:9, col:52>
|       `-CallExpr 0x55b71e0ba170 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0ba0a0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0ba110 <col:26> 'const char *' lvalue ParmVar 0x55b71e090f30 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0ba130 <col:35> 'const int' lvalue Var 0x55b71e08a258 'mandatory' 'const int'
|         `-DeclRefExpr 0x55b71e0ba150 <col:46> 'P' lvalue ParmVar 0x55b71e090fa8 'parser' 'P'
|-FunctionTemplateDecl 0x55b71e091418 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x55b71e091180 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b71e091378 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55b71e091230 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e0912a8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55b71e0ba2f8 <col:54, line:517:5>
|     `-ReturnStmt 0x55b71e0ba2e8 <line:516:9, col:53>
|       `-CallExpr 0x55b71e0ba2b0 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0ba1e0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0ba250 <col:26> 'const char *' lvalue ParmVar 0x55b71e091230 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0ba270 <col:35> 'const int' lvalue Var 0x55b71e08a350 'positional' 'const int'
|         `-DeclRefExpr 0x55b71e0ba290 <col:47> 'P' lvalue ParmVar 0x55b71e0912a8 'parser' 'P'
|-FunctionTemplateDecl 0x55b71e091718 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x55b71e091480 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b71e091678 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55b71e091530 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e0915a8 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x55b71e0ba4e8 <col:55, line:521:5>
|     `-ReturnStmt 0x55b71e0ba4d8 <line:520:9, col:65>
|       `-CallExpr 0x55b71e0ba4a0 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0ba320 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0ba390 <col:26> 'const char *' lvalue ParmVar 0x55b71e091530 'keyword' 'const char *'
|         |-BinaryOperator 0x55b71e0ba460 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x55b71e0ba410 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55b71e0ba3f0 <col:35> 'const int' lvalue Var 0x55b71e08a258 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55b71e0ba448 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55b71e0ba428 <col:47> 'const int' lvalue Var 0x55b71e08a350 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55b71e0ba480 <col:59> 'P' lvalue ParmVar 0x55b71e0915a8 'parser' 'P'
|-FunctionTemplateDecl 0x55b71e091ae8 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x55b71e091780 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b71e091a48 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55b71e091830 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e0918b0 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e091928 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x55b71e0ba628 <col:63, line:526:5>
|     |-CallExpr 0x55b71e0ba5b0 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b71e0ba500 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x55b71e0ba540 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x55b71e0ba550 <col:35> 'const char *' lvalue ParmVar 0x55b71e091830 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55b71e0ba570 <col:44> 'int' lvalue ParmVar 0x55b71e0918b0 'flags' 'int'
|     | `-DeclRefExpr 0x55b71e0ba590 <col:51> 'P' lvalue ParmVar 0x55b71e091928 'parser' 'P'
|     `-ReturnStmt 0x55b71e0ba618 <line:525:9, col:17>
|       `-UnaryOperator 0x55b71e0ba600 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b71e0ba5f0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b71e091f38 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x55b71e091b58 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e091bd8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e091e98 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b71e091c98 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e091d10 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e091db8 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0ba780 <col:58, line:541:5>
|     `-ReturnStmt 0x55b71e0ba770 <line:540:9, col:39>
|       `-CallExpr 0x55b71e0ba738 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0ba658 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0ba6d8 <col:21> 'const char *' lvalue ParmVar 0x55b71e091c98 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0ba6f8 <col:30> 'P' lvalue ParmVar 0x55b71e091d10 'parser' 'P'
|         `-DeclRefExpr 0x55b71e0ba718 <col:38> 'T' lvalue ParmVar 0x55b71e091db8 'x' 'T &'
|-FunctionTemplateDecl 0x55b71e092388 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x55b71e091fa8 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e092028 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e0922e8 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b71e0920e8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e092160 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e092208 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0ba8b8 <col:60, line:545:5>
|     `-ReturnStmt 0x55b71e0ba8a8 <line:544:9, col:41>
|       `-CallExpr 0x55b71e0ba870 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0ba7a8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0ba810 <col:23> 'const char *' lvalue ParmVar 0x55b71e0920e8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0ba830 <col:32> 'P' lvalue ParmVar 0x55b71e092160 'parser' 'P'
|         `-DeclRefExpr 0x55b71e0ba850 <col:40> 'T' lvalue ParmVar 0x55b71e092208 'x' 'T &'
|-FunctionTemplateDecl 0x55b71e0927d8 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x55b71e0923f8 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e092478 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e092738 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b71e092538 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e0925b0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e092658 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0ba9f0 <col:60, line:549:5>
|     `-ReturnStmt 0x55b71e0ba9e0 <line:548:9, col:41>
|       `-CallExpr 0x55b71e0ba9a8 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0ba8e0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0ba948 <col:23> 'const char *' lvalue ParmVar 0x55b71e092538 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0ba968 <col:32> 'P' lvalue ParmVar 0x55b71e0925b0 'parser' 'P'
|         `-DeclRefExpr 0x55b71e0ba988 <col:40> 'T' lvalue ParmVar 0x55b71e092658 'x' 'T &'
|-FunctionTemplateDecl 0x55b71e092c28 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x55b71e092848 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e0928c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e092b88 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b71e092988 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e092a00 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e092aa8 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0bab28 <col:61, line:553:5>
|     `-ReturnStmt 0x55b71e0bab18 <line:552:9, col:42>
|       `-CallExpr 0x55b71e0baae0 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0baa18 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0baa80 <col:24> 'const char *' lvalue ParmVar 0x55b71e092988 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0baaa0 <col:33> 'P' lvalue ParmVar 0x55b71e092a00 'parser' 'P'
|         `-DeclRefExpr 0x55b71e0baac0 <col:41> 'T' lvalue ParmVar 0x55b71e092aa8 'x' 'T &'
|-FunctionTemplateDecl 0x55b71e093108 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x55b71e092c98 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e092d18 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e093068 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55b71e092dd8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e092e58 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e092ed0 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e092f78 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0baca0 <col:69, line:557:5>
|     `-ReturnStmt 0x55b71e0bac90 <line:556:9, col:46>
|       `-CallExpr 0x55b71e0bac50 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0bab50 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0babd0 <col:21> 'const char *' lvalue ParmVar 0x55b71e092dd8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0babf0 <col:30> 'int' lvalue ParmVar 0x55b71e092e58 'flags' 'int'
|         |-DeclRefExpr 0x55b71e0bac10 <col:37> 'P' lvalue ParmVar 0x55b71e092ed0 'parser' 'P'
|         `-DeclRefExpr 0x55b71e0bac30 <col:45> 'T' lvalue ParmVar 0x55b71e092f78 'x' 'T &'
|-FunctionTemplateDecl 0x55b71e093418 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x55b71e093180 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b71e093378 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55b71e093230 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e0932a8 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x55b71e0bade0 <col:56, line:571:5>
|     `-ReturnStmt 0x55b71e0badd0 <line:570:9, col:48>
|       `-CallExpr 0x55b71e0bad98 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0bacc8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0bad38 <col:30> 'const char *' lvalue ParmVar 0x55b71e093230 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b71e0bad58 <col:39> 'int' 0
|         `-DeclRefExpr 0x55b71e0bad78 <col:42> 'P' lvalue ParmVar 0x55b71e0932a8 'parser' 'P'
|-FunctionTemplateDecl 0x55b71e0946c8 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x55b71e093480 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b71e094628 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55b71e093530 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e0935b0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e093628 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55b71e0bafb0 <col:67, line:576:5>
|     |-CallExpr 0x55b71e0baf38 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b71e0badf8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55b71e0bae38 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55b71e0bae48 <col:39> 'const char *' lvalue ParmVar 0x55b71e093530 'keyword' 'const char *'
|     | |-BinaryOperator 0x55b71e0baef8 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55b71e0baea8 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55b71e0bae68 <col:48> 'int' lvalue ParmVar 0x55b71e0935b0 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55b71e0baee0 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55b71e0baec0 <col:56> 'const int' lvalue Var 0x55b71e08a540 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x55b71e0baf18 <col:68> 'P' lvalue ParmVar 0x55b71e093628 'parser' 'P'
|     `-ReturnStmt 0x55b71e0bafa0 <line:575:9, col:17>
|       `-UnaryOperator 0x55b71e0baf88 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b71e0baf78 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b71e094b18 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x55b71e094738 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e0947b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e094a78 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55b71e094878 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e0948f0 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e094998 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0bb120 <col:62, line:592:5>
|     `-ReturnStmt 0x55b71e0bb110 <line:591:9, col:51>
|       `-CallExpr 0x55b71e0bb0d0 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0bafe0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0bb050 <col:30> 'const char *' lvalue ParmVar 0x55b71e094878 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b71e0bb070 <col:39> 'int' 0
|         |-DeclRefExpr 0x55b71e0bb090 <col:42> 'P' lvalue ParmVar 0x55b71e0948f0 'parser' 'P'
|         `-DeclRefExpr 0x55b71e0bb0b0 <col:50> 'T' lvalue ParmVar 0x55b71e094998 'x' 'T &'
|-FunctionTemplateDecl 0x55b71e094ff8 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x55b71e094b88 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e094c08 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e094f58 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55b71e094cc8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e094d48 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e094dc0 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e094e68 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0be4c0 <col:73, line:597:5>
|     |-CallExpr 0x55b71e0be440 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b71e0bb138 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55b71e0bb178 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55b71e0be330 <col:39> 'const char *' lvalue ParmVar 0x55b71e094cc8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55b71e0be3e0 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55b71e0be390 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55b71e0be350 <col:48> 'int' lvalue ParmVar 0x55b71e094d48 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55b71e0be3c8 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55b71e0be3a8 <col:56> 'const int' lvalue Var 0x55b71e08a540 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55b71e0be400 <col:68> 'P' lvalue ParmVar 0x55b71e094dc0 'parser' 'P'
|     | `-DeclRefExpr 0x55b71e0be420 <col:76> 'T' lvalue ParmVar 0x55b71e094e68 'x' 'T &'
|     `-ReturnStmt 0x55b71e0be4b0 <line:596:9, col:17>
|       `-UnaryOperator 0x55b71e0be498 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b71e0be488 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b71e0955a8 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x55b71e095070 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e0950e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e095508 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x55b71e0951a8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e095220 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e0953e0 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55b71e0be630 <col:65, line:614:5>
|     `-ReturnStmt 0x55b71e0be620 <line:613:9, col:46>
|       `-CallExpr 0x55b71e0be5e0 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0be4f0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0be560 <col:25> 'const char *' lvalue ParmVar 0x55b71e0951a8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b71e0be580 <col:34> 'int' 0
|         |-DeclRefExpr 0x55b71e0be5a0 <col:37> 'P' lvalue ParmVar 0x55b71e095220 'parser' 'P'
|         `-DeclRefExpr 0x55b71e0be5c0 <col:45> 'Vector<T>' lvalue ParmVar 0x55b71e0953e0 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55b71e0959d8 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x55b71e095618 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b71e095938 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x55b71e0956d0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e095820 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55b71e0be850 <col:55, line:618:5>
|     `-ReturnStmt 0x55b71e0be840 <line:617:9, col:55>
|       `-CallExpr 0x55b71e0be800 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0be658 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0be6c8 <col:25> 'const char *' lvalue ParmVar 0x55b71e0956d0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55b71e0be6e8 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x55b71e0be7c0 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55b71e0be7e0 <col:54> 'Vector<T>' lvalue ParmVar 0x55b71e095820 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55b71e095fa8 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x55b71e095a40 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e095ab8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e095f08 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55b71e095b78 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e095bf8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e095c70 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e095dc0 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55b71e0bea48 <col:76, line:623:5>
|     |-CallExpr 0x55b71e0be9c8 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55b71e0be868 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x55b71e0be8a8 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x55b71e0be8b8 <col:34> 'const char *' lvalue ParmVar 0x55b71e095b78 'keyword' 'const char *'
|     | |-BinaryOperator 0x55b71e0be968 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x55b71e0be918 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55b71e0be8d8 <col:43> 'int' lvalue ParmVar 0x55b71e095bf8 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55b71e0be950 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55b71e0be930 <col:51> 'const int' lvalue Var 0x55b71e08a540 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55b71e0be988 <col:63> 'P' lvalue ParmVar 0x55b71e095c70 'parser' 'P'
|     | `-DeclRefExpr 0x55b71e0be9a8 <col:71> 'Vector<T>' lvalue ParmVar 0x55b71e095dc0 'x' 'Vector<T> &'
|     `-ReturnStmt 0x55b71e0bea38 <line:622:9, col:17>
|       `-UnaryOperator 0x55b71e0bea20 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b71e0bea10 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b71e0964e8 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x55b71e096020 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e096098 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e096448 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x55b71e096158 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e0961d8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e096320 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55b71e0becb0 <col:66, line:627:5>
|     `-ReturnStmt 0x55b71e0beca0 <line:626:9, col:59>
|       `-CallExpr 0x55b71e0bec60 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55b71e0bea78 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55b71e0beae8 <col:25> 'const char *' lvalue ParmVar 0x55b71e096158 'keyword' 'const char *'
|         |-DeclRefExpr 0x55b71e0beb08 <col:34> 'int' lvalue ParmVar 0x55b71e0961d8 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x55b71e0bec20 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55b71e0bec40 <col:58> 'Vector<T>' lvalue ParmVar 0x55b71e096320 'x' 'Vector<T> &'
|-CXXMethodDecl 0x55b71e096578 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x55b71e0bed30 <col:25, line:633:5>
|   `-ReturnStmt 0x55b71e0bed20 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x55b71e0bed08 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55b71e0becd8 <col:16> 'const bool' lvalue ->_status 0x55b71e09c3b8
|         `-CXXThisExpr 0x55b71e0becc8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55b71e0966f8 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x55b71e096630 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x55b71e0bee18 <col:27, line:639:5>
|   |-BinaryOperator 0x55b71e0bedc0 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55b71e0bed48 <col:9> 'bool' lvalue ParmVar 0x55b71e096630 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55b71e0beda8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55b71e0bed78 <col:13> 'bool' lvalue ->_status 0x55b71e09c3b8
|   |     `-CXXThisExpr 0x55b71e0bed68 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55b71e0bee08 <line:638:9, col:17>
|     `-UnaryOperator 0x55b71e0bedf0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b71e0bede0 <col:17> 'Args *' this
|-CXXMethodDecl 0x55b71e096878 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55b71e0967b8 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x55b71e0bef08 <col:39, line:644:5>
|   |-BinaryOperator 0x55b71e0beeb0 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55b71e0bee38 <col:9> 'bool' lvalue ParmVar 0x55b71e0967b8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55b71e0bee98 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55b71e0bee68 <col:13> 'const bool' lvalue ->_status 0x55b71e09c3b8
|   |     `-CXXThisExpr 0x55b71e0bee58 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55b71e0beef8 <line:643:9, col:17>
|     `-UnaryOperator 0x55b71e0beee0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b71e0beed0 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55b71e096940 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x55b71e0befb0 <col:30, line:651:5>
|   `-ReturnStmt 0x55b71e0befa0 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x55b71e0bef88 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55b71e0bef58 <col:16> 'bool' lvalue ->_read_status 0x55b71e072b50
|         `-ImplicitCastExpr 0x55b71e0bef38 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x55b71e0bef28 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55b71e096a88 <line:655:5, line:658:5> line:655:11 used read_status 'Args &(bool &)'
| |-ParmVarDecl 0x55b71e0969f8 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x55b71e0bf0b8 <col:32, line:658:5>
|   |-BinaryOperator 0x55b71e0bf060 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55b71e0befc8 <col:9> 'bool' lvalue ParmVar 0x55b71e0969f8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55b71e0bf048 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55b71e0bf018 <col:13> 'bool' lvalue ->_read_status 0x55b71e072b50
|   |     `-ImplicitCastExpr 0x55b71e0beff8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55b71e0befe8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55b71e0bf0a8 <line:657:9, col:17>
|     `-UnaryOperator 0x55b71e0bf090 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b71e0bf080 <col:17> 'Args *' this
|-CXXMethodDecl 0x55b71e096bd8 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55b71e096b48 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x55b71e0bf1c8 <col:44, line:663:5>
|   |-BinaryOperator 0x55b71e0bf170 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55b71e0bf0d8 <col:9> 'bool' lvalue ParmVar 0x55b71e096b48 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55b71e0bf158 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55b71e0bf128 <col:13> 'bool' lvalue ->_read_status 0x55b71e072b50
|   |     `-ImplicitCastExpr 0x55b71e0bf108 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55b71e0bf0f8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55b71e0bf1b8 <line:662:9, col:17>
|     `-UnaryOperator 0x55b71e0bf1a0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b71e0bf190 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55b71e096ca0 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x55b71e096d68 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x55b71e096e30 <line:684:5, col:17> col:9 used consume 'int ()'
|-CXXMethodDecl 0x55b71e096ef8 <line:693:5, col:18> col:9 complete 'int ()'
|-FunctionTemplateDecl 0x55b71e097208 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x55b71e096f98 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b71e097168 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x55b71e097078 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0bf588 <col:19, line:706:5>
|     `-IfStmt 0x55b71e0bf560 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x55b71e0bf2c8 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x55b71e0bf490 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x55b71e0bf460 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x55b71e0bf420 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x55b71e0bf320 <col:42> '<bound member function type>' ->simple_slot 0x55b71e0b6e30
|       |     | `-CXXThisExpr 0x55b71e0bf310 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x55b71e0bf3c0 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x55b71e0bf370 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x55b71df655c0 0x55b71dcad588
|       |     | `-DeclRefExpr 0x55b71e0bf350 <col:55> 'T' lvalue ParmVar 0x55b71e097078 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x55b71e0bf400 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x55b71e0bf550 <line:705:13, col:34>
|         `-CallExpr 0x55b71e0bf528 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x55b71e0bf4b0 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x55b71e0bf508 <col:33> 'T' lvalue ParmVar 0x55b71e097078 'x' 'T &'
|-FunctionTemplateDecl 0x55b71e0974d8 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x55b71e097268 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b71e097438 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x55b71e097348 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x55b71e0bf960 <col:31, line:717:5>
|     |-DeclStmt 0x55b71e0bf6c8 <line:713:9, col:23>
|     | `-VarDecl 0x55b71e0bf5b0 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x55b71e0bf6a0 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55b71e0bf628 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55b71e0bf680 <col:21> 'T' lvalue ParmVar 0x55b71e097348 'x' 'T &'
|     |-IfStmt 0x55b71e0bf910 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x55b71e0bf7b8 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x55b71e0bf8f0 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55b71e0bf890 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55b71e0bf820 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b71de60a58 0x55b71de60678 0x55b71de602a8 0x55b71de5fec8 0x55b71de5fae8 0x55b71de5f718
|     |   | `-DeclRefExpr 0x55b71e0bf800 <col:14> 'T *' lvalue Var 0x55b71e0bf5b0 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x55b71e0bf8d0 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x55b71e0bf948 <line:716:9, col:16>
|       `-DeclRefExpr 0x55b71e0bf928 <col:16> 'T *' lvalue Var 0x55b71e0bf5b0 's' 'T *'
|-FunctionTemplateDecl 0x55b71e0978e8 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x55b71e097538 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55b71e0975b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55b71e097848 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x55b71e097698 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x55b71e097738 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x55b71e0bfc70 <col:37, line:726:5>
|     |-IfStmt 0x55b71e0bfc00 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x55b71e0bfc20 <line:723:13, col:26>
|     | | `-VarDecl 0x55b71e0bf9c8 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x55b71e0bfab8 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x55b71e0bfa40 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x55b71e0bfa98 <col:25> 'T' lvalue ParmVar 0x55b71e097698 'x' 'T &'
|     | |-DeclRefExpr 0x55b71e0bfae0 <col:16> 'T *' lvalue Var 0x55b71e0bf9c8 's' 'T *'
|     | `-BinaryOperator 0x55b71e0bfbe0 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55b71e0bfb90 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55b71e0bfb20 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b71de60a58 0x55b71de60678 0x55b71de602a8 0x55b71de5fec8 0x55b71de5fae8 0x55b71de5f718
|     |   | `-DeclRefExpr 0x55b71e0bfb00 <col:14> 'T *' lvalue Var 0x55b71e0bf9c8 's' 'T *'
|     |   `-DeclRefExpr 0x55b71e0bfbc0 <col:18> 'const V' lvalue ParmVar 0x55b71e097738 'value' 'const V &'
|     `-ReturnStmt 0x55b71e0bfc60 <line:725:9, col:17>
|       `-UnaryOperator 0x55b71e0bfc48 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b71e0bfc38 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55b71e097ce8 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x55b71e097950 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55b71e097c48 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x55b71e097a00 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e097a80 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e097b28 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x55b71e0c0a90 <col:65, line:737:5>
|     |-DeclStmt 0x55b71e0bfd08 <line:732:9, col:26>
|     | `-VarDecl 0x55b71e0bfca0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55b71e0c0a58 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x55b71e0c0a78 <line:733:13, col:58>
|       | `-VarDecl 0x55b71e0bfd30 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55b71e0bff10 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55b71e0bfee0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55b71e0bfec8 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55b71e0bfea8 <col:26, col:58> 'String' (CXXTemporary 0x55b71e0bfea8)
|       |           `-CXXMemberCallExpr 0x55b71e0bfe38 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55b71e0bfda8 <col:26> '<bound member function type>' ->find 0x55b71e0b6478
|       |             | `-CXXThisExpr 0x55b71e0bfd98 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55b71e0bfe70 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b71e0bfdd8 <col:31> 'const char *' lvalue ParmVar 0x55b71e097a00 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55b71e0bfe88 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b71e0bfdf8 <col:40> 'int' lvalue ParmVar 0x55b71e097a80 'flags' 'int'
|       |             `-DeclRefExpr 0x55b71e0bfe18 <col:47> 'Args::Slot *' lvalue Var 0x55b71e0bfca0 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55b71e0bffc8 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55b71e0bffb0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55b71e0bff90 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55b71e0bff60 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55b71dc6fdb8
|       |       `-ImplicitCastExpr 0x55b71e0bff48 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55b71e0bff28 <col:20> 'String' lvalue Var 0x55b71e0bfd30 'str' 'String'
|       `-CompoundStmt 0x55b71e0c0a38 <col:61, line:736:9>
|         |-DeclStmt 0x55b71e0c0480 <line:734:13, col:76>
|         | `-VarDecl 0x55b71e0c0018 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55b71e0c0450 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55b71e0c03c0 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55b71e0c0408 <col:60> 'T' lvalue ParmVar 0x55b71e097b28 'variable' 'T &'
|         |     `-UnaryOperator 0x55b71e0c0438 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55b71e0c0428 <col:71> 'Args *' this
|         `-CallExpr 0x55b71e0c0a08 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x55b71e0c04a8 <col:13> '<bound member function type>' ->postparse 0x55b71e0b6688
|           | `-CXXThisExpr 0x55b71e0c0498 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55b71e0c09c8 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55b71e0c04d8 <col:23> 'T *' lvalue Var 0x55b71e0c0018 's' 'T *'
|           | `-CallExpr 0x55b71e0c0988 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55b71e0c0760 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x55b71e0c0860 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x55b71e0c0880 <col:86> 'String' lvalue Var 0x55b71e0bfd30 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55b71e0c0930 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55b71e0c08c0 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b71de60a58 0x55b71de60678 0x55b71de602a8 0x55b71de5fec8 0x55b71de5fae8 0x55b71de5f718
|           |   | `-DeclRefExpr 0x55b71e0c08a0 <col:92> 'T *' lvalue Var 0x55b71e0c0018 's' 'T *'
|           |   `-UnaryOperator 0x55b71e0c0970 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55b71e0c0960 <col:96> 'Args *' this
|           `-DeclRefExpr 0x55b71e0c09e8 <col:103> 'Args::Slot *' lvalue Var 0x55b71e0bfca0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55b71e098238 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55b71e097d58 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55b71e097dd8 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55b71e098198 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55b71e097e98 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e097f18 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e097fb8 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x55b71e098058 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x55b71e0c1930 <col:88, line:745:5>
|     |-DeclStmt 0x55b71e0c0b28 <line:741:9, col:26>
|     | `-VarDecl 0x55b71e0c0ac0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55b71e0c0d48 <line:742:9, col:55>
|     | `-VarDecl 0x55b71e0c0b50 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55b71e0c0d30 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55b71e0c0d00 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55b71e0c0ce8 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55b71e0c0cc8 <col:22, col:54> 'String' (CXXTemporary 0x55b71e0c0cc8)
|     |           `-CXXMemberCallExpr 0x55b71e0c0c58 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55b71e0c0bc8 <col:22> '<bound member function type>' ->find 0x55b71e0b6478
|     |             | `-CXXThisExpr 0x55b71e0c0bb8 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55b71e0c0c90 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55b71e0c0bf8 <col:27> 'const char *' lvalue ParmVar 0x55b71e097e98 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55b71e0c0ca8 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55b71e0c0c18 <col:36> 'int' lvalue ParmVar 0x55b71e097f18 'flags' 'int'
|     |             `-DeclRefExpr 0x55b71e0c0c38 <col:43> 'Args::Slot *' lvalue Var 0x55b71e0c0ac0 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55b71e0c1120 <line:743:9, col:72>
|     | `-VarDecl 0x55b71e0c0d98 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55b71e0c10f0 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55b71e0c1060 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55b71e0c10a8 <col:56> 'T' lvalue ParmVar 0x55b71e097fb8 'variable' 'T &'
|     |     `-UnaryOperator 0x55b71e0c10d8 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55b71e0c10c8 <col:67> 'Args *' this
|     `-CallExpr 0x55b71e0c1900 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x55b71e0c1148 <col:9> '<bound member function type>' ->postparse 0x55b71e0b6688
|       | `-CXXThisExpr 0x55b71e0c1138 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55b71e0c18c0 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55b71e0c1178 <col:19> 'T *' lvalue Var 0x55b71e0c0d98 's' 'T *'
|       | `-ParenExpr 0x55b71e0c18a0 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x55b71e0c1870 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55b71e0c1858 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55b71e0c1840 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55b71e0c1820 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55b71e0c17f0 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55b71dc6fdb8
|       |     |       `-ImplicitCastExpr 0x55b71e0c17d8 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55b71e0c1198 <col:25> 'String' lvalue Var 0x55b71e0c0b50 'str' 'String'
|       |     |-CallExpr 0x55b71e0c1648 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55b71e0c1420 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x55b71e0c1520 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x55b71e0c1540 <col:89> 'String' lvalue Var 0x55b71e0c0b50 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55b71e0c15f0 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55b71e0c1580 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b71de60a58 0x55b71de60678 0x55b71de602a8 0x55b71de5fec8 0x55b71de5fae8 0x55b71de5f718
|       |     | | `-DeclRefExpr 0x55b71e0c1560 <col:95> 'T *' lvalue Var 0x55b71e0c0d98 's' 'T *'
|       |     | `-UnaryOperator 0x55b71e0c1630 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55b71e0c1620 <col:99> 'Args *' this
|       |     `-ParenExpr 0x55b71e0c17b8 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x55b71e0c1798 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x55b71e0c1768 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55b71e0c1718 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55b71e0c16a8 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b71de60a58 0x55b71de60678 0x55b71de602a8 0x55b71de5fec8 0x55b71de5fae8 0x55b71de5f718
|       |         | | `-DeclRefExpr 0x55b71e0c1688 <col:109> 'T *' lvalue Var 0x55b71e0c0d98 's' 'T *'
|       |         | `-DeclRefExpr 0x55b71e0c1748 <col:113> 'const V' lvalue ParmVar 0x55b71e098058 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55b71e0c1788 <col:120> 'bool' true
|       `-DeclRefExpr 0x55b71e0c18e0 <col:128> 'Args::Slot *' lvalue Var 0x55b71e0c0ac0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55b71e098768 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x55b71e0982b0 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e098328 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e0986c8 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55b71e0983e8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e098468 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e0984e0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e098588 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x55b71e0c2528 <col:75, line:754:5>
|     |-DeclStmt 0x55b71e0c19d8 <line:749:9, col:26>
|     | `-VarDecl 0x55b71e0c1970 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55b71e0c24f0 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x55b71e0c2510 <line:750:13, col:58>
|       | `-VarDecl 0x55b71e0c1a00 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55b71e0c1be0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55b71e0c1bb0 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55b71e0c1b98 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55b71e0c1b78 <col:26, col:58> 'String' (CXXTemporary 0x55b71e0c1b78)
|       |           `-CXXMemberCallExpr 0x55b71e0c1b08 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55b71e0c1a78 <col:26> '<bound member function type>' ->find 0x55b71e0b6478
|       |             | `-CXXThisExpr 0x55b71e0c1a68 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55b71e0c1b40 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b71e0c1aa8 <col:31> 'const char *' lvalue ParmVar 0x55b71e0983e8 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55b71e0c1b58 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b71e0c1ac8 <col:40> 'int' lvalue ParmVar 0x55b71e098468 'flags' 'int'
|       |             `-DeclRefExpr 0x55b71e0c1ae8 <col:47> 'Args::Slot *' lvalue Var 0x55b71e0c1970 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55b71e0c1c98 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55b71e0c1c80 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55b71e0c1c60 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55b71e0c1c30 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55b71dc6fdb8
|       |       `-ImplicitCastExpr 0x55b71e0c1c18 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55b71e0c1bf8 <col:20> 'String' lvalue Var 0x55b71e0c1a00 'str' 'String'
|       `-CompoundStmt 0x55b71e0c24d0 <col:61, line:753:9>
|         |-DeclStmt 0x55b71e0c2070 <line:751:13, col:63>
|         | `-VarDecl 0x55b71e0c1ce8 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55b71e0c2040 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55b71e0c1fb0 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55b71e0c1ff8 <col:47> 'T' lvalue ParmVar 0x55b71e098588 'variable' 'T &'
|         |     `-UnaryOperator 0x55b71e0c2028 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55b71e0c2018 <col:58> 'Args *' this
|         `-CallExpr 0x55b71e0c24a0 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x55b71e0c2098 <col:13> '<bound member function type>' ->postparse 0x55b71e0b6688
|           | `-CXXThisExpr 0x55b71e0c2088 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55b71e0c2460 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55b71e0c20c8 <col:23> 'T *' lvalue Var 0x55b71e0c1ce8 's' 'T *'
|           | `-CallExpr 0x55b71e0c2420 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55b71e0c22b0 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55b71e0c22f8 <col:56> 'P' lvalue ParmVar 0x55b71e0984e0 'parser' 'P'
|           |   |-DeclRefExpr 0x55b71e0c2318 <col:64> 'String' lvalue Var 0x55b71e0c1a00 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55b71e0c23c8 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55b71e0c2358 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b71de60a58 0x55b71de60678 0x55b71de602a8 0x55b71de5fec8 0x55b71de5fae8 0x55b71de5f718
|           |   | `-DeclRefExpr 0x55b71e0c2338 <col:70> 'T *' lvalue Var 0x55b71e0c1ce8 's' 'T *'
|           |   `-UnaryOperator 0x55b71e0c2408 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55b71e0c23f8 <col:74> 'Args *' this
|           `-DeclRefExpr 0x55b71e0c2480 <col:81> 'Args::Slot *' lvalue Var 0x55b71e0c1970 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55b71e098dc8 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55b71e0987e0 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55b71e098858 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x55b71e0988d8 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55b71e098d28 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55b71e0989a0 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e098a20 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e098a98 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e098b38 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x55b71e098bd8 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x55b71e0c32b8 <col:98, line:762:5>
|     |-DeclStmt 0x55b71e0c25c0 <line:758:9, col:26>
|     | `-VarDecl 0x55b71e0c2558 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55b71e0c27e0 <line:759:9, col:55>
|     | `-VarDecl 0x55b71e0c25e8 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55b71e0c27c8 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55b71e0c2798 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55b71e0c2780 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55b71e0c2760 <col:22, col:54> 'String' (CXXTemporary 0x55b71e0c2760)
|     |           `-CXXMemberCallExpr 0x55b71e0c26f0 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55b71e0c2660 <col:22> '<bound member function type>' ->find 0x55b71e0b6478
|     |             | `-CXXThisExpr 0x55b71e0c2650 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55b71e0c2728 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55b71e0c2690 <col:27> 'const char *' lvalue ParmVar 0x55b71e0989a0 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55b71e0c2740 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55b71e0c26b0 <col:36> 'int' lvalue ParmVar 0x55b71e098a20 'flags' 'int'
|     |             `-DeclRefExpr 0x55b71e0c26d0 <col:43> 'Args::Slot *' lvalue Var 0x55b71e0c2558 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55b71e0c2c00 <line:760:9, col:59>
|     | `-VarDecl 0x55b71e0c2838 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55b71e0c2bd0 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55b71e0c2b40 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55b71e0c2b88 <col:43> 'T' lvalue ParmVar 0x55b71e098b38 'variable' 'T &'
|     |     `-UnaryOperator 0x55b71e0c2bb8 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55b71e0c2ba8 <col:54> 'Args *' this
|     `-CallExpr 0x55b71e0c3288 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x55b71e0c2c28 <col:9> '<bound member function type>' ->postparse 0x55b71e0b6688
|       | `-CXXThisExpr 0x55b71e0c2c18 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55b71e0c3248 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55b71e0c2c58 <col:19> 'T *' lvalue Var 0x55b71e0c2838 's' 'T *'
|       | `-ParenExpr 0x55b71e0c3228 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x55b71e0c31f8 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55b71e0c31e0 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55b71e0c31c8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55b71e0c31a8 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55b71e0c3178 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55b71dc6fdb8
|       |     |       `-ImplicitCastExpr 0x55b71e0c3160 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55b71e0c2c78 <col:25> 'String' lvalue Var 0x55b71e0c25e8 'str' 'String'
|       |     |-CallExpr 0x55b71e0c2fd0 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55b71e0c2e60 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x55b71e0c2ea8 <col:59> 'P' lvalue ParmVar 0x55b71e098a98 'parser' 'P'
|       |     | |-DeclRefExpr 0x55b71e0c2ec8 <col:67> 'String' lvalue Var 0x55b71e0c25e8 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55b71e0c2f78 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55b71e0c2f08 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b71de60a58 0x55b71de60678 0x55b71de602a8 0x55b71de5fec8 0x55b71de5fae8 0x55b71de5f718
|       |     | | `-DeclRefExpr 0x55b71e0c2ee8 <col:73> 'T *' lvalue Var 0x55b71e0c2838 's' 'T *'
|       |     | `-UnaryOperator 0x55b71e0c2fb8 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55b71e0c2fa8 <col:77> 'Args *' this
|       |     `-ParenExpr 0x55b71e0c3140 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x55b71e0c3120 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x55b71e0c30f0 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55b71e0c30a0 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55b71e0c3030 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b71de60a58 0x55b71de60678 0x55b71de602a8 0x55b71de5fec8 0x55b71de5fae8 0x55b71de5f718
|       |         | | `-DeclRefExpr 0x55b71e0c3010 <col:87> 'T *' lvalue Var 0x55b71e0c2838 's' 'T *'
|       |         | `-DeclRefExpr 0x55b71e0c30d0 <col:91> 'const V' lvalue ParmVar 0x55b71e098bd8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55b71e0c3110 <col:98> 'bool' true
|       `-DeclRefExpr 0x55b71e0c3268 <col:106> 'Args::Slot *' lvalue Var 0x55b71e0c2558 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55b71e099438 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x55b71e098e48 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e098ec8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55b71e098f48 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55b71e099398 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55b71e099010 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e099090 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e099108 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e0991a8 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x55b71e099248 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x55b71e0c4298 <col:60, line:773:5>
|     |-DeclStmt 0x55b71e0c3360 <line:767:9, col:26>
|     | `-VarDecl 0x55b71e0c32f8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55b71e0c4260 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x55b71e0c4280 <line:768:13, col:58>
|       | `-VarDecl 0x55b71e0c3388 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55b71e0c3568 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55b71e0c3538 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55b71e0c3520 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55b71e0c3500 <col:26, col:58> 'String' (CXXTemporary 0x55b71e0c3500)
|       |           `-CXXMemberCallExpr 0x55b71e0c3490 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55b71e0c3400 <col:26> '<bound member function type>' ->find 0x55b71e0b6478
|       |             | `-CXXThisExpr 0x55b71e0c33f0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55b71e0c34c8 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b71e0c3430 <col:31> 'const char *' lvalue ParmVar 0x55b71e099010 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55b71e0c34e0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b71e0c3450 <col:40> 'int' lvalue ParmVar 0x55b71e099090 'flags' 'int'
|       |             `-DeclRefExpr 0x55b71e0c3470 <col:47> 'Args::Slot *' lvalue Var 0x55b71e0c32f8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55b71e0c3620 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55b71e0c3608 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55b71e0c35e8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55b71e0c35b8 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55b71dc6fdb8
|       |       `-ImplicitCastExpr 0x55b71e0c35a0 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55b71e0c3580 <col:20> 'String' lvalue Var 0x55b71e0c3388 'str' 'String'
|       `-CompoundStmt 0x55b71e0c4238 <col:61, line:772:9>
|         |-DeclStmt 0x55b71e0c3960 <line:769:13, col:66>
|         | `-VarDecl 0x55b71e0c3678 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x55b71e0c3930 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55b71e0c38a0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55b71e0c38e8 <col:49> 'T1' lvalue ParmVar 0x55b71e0991a8 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x55b71e0c3918 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55b71e0c3908 <col:61> 'Args *' this
|         |-DeclStmt 0x55b71e0c3cd0 <line:770:13, col:66>
|         | `-VarDecl 0x55b71e0c39e8 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x55b71e0c3ca0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55b71e0c3c10 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55b71e0c3c58 <col:49> 'T2' lvalue ParmVar 0x55b71e099248 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x55b71e0c3c88 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55b71e0c3c78 <col:61> 'Args *' this
|         `-CallExpr 0x55b71e0c4208 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x55b71e0c3cf8 <col:13> '<bound member function type>' ->postparse 0x55b71e0b6688
|           | `-CXXThisExpr 0x55b71e0c3ce8 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55b71e0c41c8 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x55b71e0c3d68 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x55b71e0c3d28 <col:23> 'T1 *' lvalue Var 0x55b71e0c3678 's1' 'T1 *'
|           | | `-DeclRefExpr 0x55b71e0c3d48 <col:29> 'T2 *' lvalue Var 0x55b71e0c39e8 's2' 'T2 *'
|           | `-CallExpr 0x55b71e0c4180 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55b71e0c3f50 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55b71e0c3f98 <col:63> 'P' lvalue ParmVar 0x55b71e099108 'parser' 'P'
|           |   |-DeclRefExpr 0x55b71e0c3fb8 <col:71> 'String' lvalue Var 0x55b71e0c3388 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55b71e0c4068 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55b71e0c3ff8 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b71de60a58 0x55b71de60678 0x55b71de602a8 0x55b71de5fec8 0x55b71de5fae8 0x55b71de5f718
|           |   | `-DeclRefExpr 0x55b71e0c3fd8 <col:77> 'T1 *' lvalue Var 0x55b71e0c3678 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x55b71e0c4128 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55b71e0c40b8 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b71de60a58 0x55b71de60678 0x55b71de602a8 0x55b71de5fec8 0x55b71de5fae8 0x55b71de5f718
|           |   | `-DeclRefExpr 0x55b71e0c4098 <col:82> 'T2 *' lvalue Var 0x55b71e0c39e8 's2' 'T2 *'
|           |   `-UnaryOperator 0x55b71e0c4168 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55b71e0c4158 <col:87> 'Args *' this
|           `-DeclRefExpr 0x55b71e0c41e8 <col:94> 'Args::Slot *' lvalue Var 0x55b71e0c32f8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55b71e099828 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x55b71e0994b8 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b71e099788 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55b71e099570 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e0995f0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e099668 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55b71e0c47b0 <col:67, line:780:5>
|     |-DeclStmt 0x55b71e0c4330 <line:777:9, col:26>
|     | `-VarDecl 0x55b71e0c42c8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55b71e0c4778 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x55b71e0c4798 <line:778:13, col:58>
|       | `-VarDecl 0x55b71e0c4358 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55b71e0c4538 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55b71e0c4508 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55b71e0c44f0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55b71e0c44d0 <col:26, col:58> 'String' (CXXTemporary 0x55b71e0c44d0)
|       |           `-CXXMemberCallExpr 0x55b71e0c4460 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55b71e0c43d0 <col:26> '<bound member function type>' ->find 0x55b71e0b6478
|       |             | `-CXXThisExpr 0x55b71e0c43c0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55b71e0c4498 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b71e0c4400 <col:31> 'const char *' lvalue ParmVar 0x55b71e099570 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55b71e0c44b0 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55b71e0c4420 <col:40> 'int' lvalue ParmVar 0x55b71e0995f0 'flags' 'int'
|       |             `-DeclRefExpr 0x55b71e0c4440 <col:47> 'Args::Slot *' lvalue Var 0x55b71e0c42c8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55b71e0c45f0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55b71e0c45d8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55b71e0c45b8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55b71e0c4588 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55b71dc6fdb8
|       |       `-ImplicitCastExpr 0x55b71e0c4570 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55b71e0c4550 <col:20> 'String' lvalue Var 0x55b71e0c4358 'str' 'String'
|       `-CallExpr 0x55b71e0c4748 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x55b71e0c4618 <col:13> '<bound member function type>' ->postparse 0x55b71e0b6688
|         | `-CXXThisExpr 0x55b71e0c4608 <col:13> 'Args *' implicit this
|         |-CallExpr 0x55b71e0c46f8 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x55b71e0c4668 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x55b71e0c4648 <col:23> 'P' lvalue ParmVar 0x55b71e099668 'parser' 'P'
|         | |-DeclRefExpr 0x55b71e0c46b0 <col:36> 'String' lvalue Var 0x55b71e0c4358 'str' 'String'
|         | `-UnaryOperator 0x55b71e0c46e0 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x55b71e0c46d0 <col:42> 'Args *' this
|         `-DeclRefExpr 0x55b71e0c4728 <col:49> 'Args::Slot *' lvalue Var 0x55b71e0c42c8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55b71e099bc8 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55b71e099898 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55b71e099b28 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55b71e099950 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e0999d0 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e099a48 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x55b71e0c5120 <col:71, line:792:5>
|     |-DeclStmt 0x55b71e0c4848 <line:784:9, col:26>
|     | `-VarDecl 0x55b71e0c47e0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55b71e0c4918 <line:785:9, col:29>
|     | `-VarDecl 0x55b71e0c4878 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55b71e0c4900 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55b71e0c48e0 <col:28> 'int' 1
|     |-WhileStmt 0x55b71e0c4fd0 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x55b71e0c4ff0 <line:786:16, col:61>
|     | | `-VarDecl 0x55b71e0c4940 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55b71e0c4b20 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55b71e0c4af0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55b71e0c4ad8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55b71e0c4ab8 <col:29, col:61> 'String' (CXXTemporary 0x55b71e0c4ab8)
|     | |           `-CXXMemberCallExpr 0x55b71e0c4a48 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55b71e0c49b8 <col:29> '<bound member function type>' ->find 0x55b71e0b6478
|     | |             | `-CXXThisExpr 0x55b71e0c49a8 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55b71e0c4a80 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55b71e0c49e8 <col:34> 'const char *' lvalue ParmVar 0x55b71e099950 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55b71e0c4a98 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55b71e0c4a08 <col:43> 'int' lvalue ParmVar 0x55b71e0999d0 'flags' 'int'
|     | |             `-DeclRefExpr 0x55b71e0c4a28 <col:50> 'Args::Slot *' lvalue Var 0x55b71e0c47e0 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55b71e0c4bd8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55b71e0c4bc0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55b71e0c4ba0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55b71e0c4b70 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55b71dc6fdb8
|     | |       `-ImplicitCastExpr 0x55b71e0c4b58 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55b71e0c4b38 <col:23> 'String' lvalue Var 0x55b71e0c4940 'str' 'String'
|     | `-CompoundStmt 0x55b71e0c4fa8 <col:64, line:790:9>
|     |   |-CallExpr 0x55b71e0c4d30 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x55b71e0c4c00 <col:13> '<bound member function type>' ->postparse 0x55b71e0b6688
|     |   | | `-CXXThisExpr 0x55b71e0c4bf0 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55b71e0c4ce0 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55b71e0c4c50 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55b71e0c4c30 <col:23> 'P' lvalue ParmVar 0x55b71e099a48 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55b71e0c4c98 <col:36> 'String' lvalue Var 0x55b71e0c4940 'str' 'String'
|     |   | | `-UnaryOperator 0x55b71e0c4cc8 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55b71e0c4cb8 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x55b71e0c4d10 <col:49> 'Args::Slot *' lvalue Var 0x55b71e0c47e0 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55b71e0c4ec8 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55b71e0c4d60 <col:13> 'int' lvalue Var 0x55b71e0c4878 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55b71e0c4eb0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55b71e0c4e90 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55b71e0c4df8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55b71e0c4dd8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55b71e0c4dc0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55b71e0c4d80 <col:28> 'int' lvalue Var 0x55b71e0c4878 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55b71e0c4da0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55b71e0c4e78 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55b71e0c4e48 <col:49> 'bool' lvalue ->_read_status 0x55b71e072b50
|     |   |         `-ImplicitCastExpr 0x55b71e0c4e28 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55b71e0c4e18 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55b71e0c4f78 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55b71e0c4ee8 <col:13> 'int' lvalue ParmVar 0x55b71e0999d0 'flags' 'int'
|     |     `-UnaryOperator 0x55b71e0c4f60 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55b71e0c4f48 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55b71e0c4f28 <col:23> 'const int' lvalue Var 0x55b71e08a258 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55b71e0c5100 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55b71e0c5038 <col:9> 'bool' lvalue ->_read_status 0x55b71e072b50
|       | `-ImplicitCastExpr 0x55b71e0c5018 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55b71e0c5008 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55b71e0c50e0 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55b71e0c50c0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55b71e0c50a8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55b71e0c5068 <col:25> 'int' lvalue Var 0x55b71e0c4878 'read_status' 'int'
|           `-IntegerLiteral 0x55b71e0c5088 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55b71e09a0a8 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55b71e099c38 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e099cb8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e09a008 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55b71e099d78 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e099df8 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e099e70 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e099f18 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x55b71e0c60b0 <col:84, line:805:5>
|     |-DeclStmt 0x55b71e0c51c8 <line:796:9, col:26>
|     | `-VarDecl 0x55b71e0c5160 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55b71e0c5298 <line:797:9, col:29>
|     | `-VarDecl 0x55b71e0c51f8 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55b71e0c5280 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55b71e0c5260 <col:28> 'int' 1
|     |-DeclStmt 0x55b71e0c55d0 <line:798:9, col:71>
|     | `-VarDecl 0x55b71e0c52e8 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55b71e0c55a0 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55b71e0c5510 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x55b71e0c5558 <col:55> 'T' lvalue ParmVar 0x55b71e099f18 'variable' 'T &'
|     |     `-UnaryOperator 0x55b71e0c5588 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55b71e0c5578 <col:66> 'Args *' this
|     |-WhileStmt 0x55b71e0c5f60 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x55b71e0c5f80 <line:799:16, col:61>
|     | | `-VarDecl 0x55b71e0c55f8 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55b71e0c57d8 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55b71e0c57a8 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55b71e0c5790 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55b71e0c5770 <col:29, col:61> 'String' (CXXTemporary 0x55b71e0c5770)
|     | |           `-CXXMemberCallExpr 0x55b71e0c5700 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55b71e0c5670 <col:29> '<bound member function type>' ->find 0x55b71e0b6478
|     | |             | `-CXXThisExpr 0x55b71e0c5660 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55b71e0c5738 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55b71e0c56a0 <col:34> 'const char *' lvalue ParmVar 0x55b71e099d78 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55b71e0c5750 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55b71e0c56c0 <col:43> 'int' lvalue ParmVar 0x55b71e099df8 'flags' 'int'
|     | |             `-DeclRefExpr 0x55b71e0c56e0 <col:50> 'Args::Slot *' lvalue Var 0x55b71e0c5160 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55b71e0c5890 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55b71e0c5878 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55b71e0c5858 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55b71e0c5828 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55b71dc6fdb8
|     | |       `-ImplicitCastExpr 0x55b71e0c5810 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55b71e0c57f0 <col:23> 'String' lvalue Var 0x55b71e0c55f8 'str' 'String'
|     | `-CompoundStmt 0x55b71e0c5f38 <col:64, line:803:9>
|     |   |-CallExpr 0x55b71e0c5cc0 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x55b71e0c58b8 <col:13> '<bound member function type>' ->postparse 0x55b71e0b6688
|     |   | | `-CXXThisExpr 0x55b71e0c58a8 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x55b71e0c5c80 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x55b71e0c58e8 <col:23> 'T *' lvalue Var 0x55b71e0c52e8 's' 'T *'
|     |   | | `-CallExpr 0x55b71e0c5c40 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x55b71e0c5ad0 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x55b71e0c5b18 <col:56> 'P' lvalue ParmVar 0x55b71e099e70 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x55b71e0c5b38 <col:64> 'String' lvalue Var 0x55b71e0c55f8 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x55b71e0c5be8 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x55b71e0c5b78 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b71de60a58 0x55b71de60678 0x55b71de602a8 0x55b71de5fec8 0x55b71de5fae8 0x55b71de5f718
|     |   | |   | `-DeclRefExpr 0x55b71e0c5b58 <col:70> 'T *' lvalue Var 0x55b71e0c52e8 's' 'T *'
|     |   | |   `-UnaryOperator 0x55b71e0c5c28 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x55b71e0c5c18 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x55b71e0c5ca0 <col:81> 'Args::Slot *' lvalue Var 0x55b71e0c5160 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55b71e0c5e58 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55b71e0c5cf0 <col:13> 'int' lvalue Var 0x55b71e0c51f8 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55b71e0c5e40 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55b71e0c5e20 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55b71e0c5d88 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55b71e0c5d68 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55b71e0c5d50 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55b71e0c5d10 <col:28> 'int' lvalue Var 0x55b71e0c51f8 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55b71e0c5d30 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55b71e0c5e08 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55b71e0c5dd8 <col:49> 'bool' lvalue ->_read_status 0x55b71e072b50
|     |   |         `-ImplicitCastExpr 0x55b71e0c5db8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55b71e0c5da8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55b71e0c5f08 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55b71e0c5e78 <col:13> 'int' lvalue ParmVar 0x55b71e099df8 'flags' 'int'
|     |     `-UnaryOperator 0x55b71e0c5ef0 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55b71e0c5ed8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55b71e0c5eb8 <col:23> 'const int' lvalue Var 0x55b71e08a258 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55b71e0c6090 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55b71e0c5fc8 <col:9> 'bool' lvalue ->_read_status 0x55b71e072b50
|       | `-ImplicitCastExpr 0x55b71e0c5fa8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55b71e0c5f98 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55b71e0c6070 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55b71e0c6050 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55b71e0c6038 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55b71e0c5ff8 <col:25> 'int' lvalue Var 0x55b71e0c51f8 'read_status' 'int'
|           `-IntegerLiteral 0x55b71e0c6018 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55b71e09a688 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x55b71e09a120 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55b71e09a198 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55b71e09a5e8 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55b71e09a258 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55b71e09a2d8 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x55b71e09a350 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x55b71e09a4a0 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x55b71e0cb950 <col:87, line:821:5>
|     |-DeclStmt 0x55b71e0c6160 <line:809:9, col:26>
|     | `-VarDecl 0x55b71e0c60f8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55b71e0c6230 <line:810:9, col:29>
|     | `-VarDecl 0x55b71e0c6190 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55b71e0c6218 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55b71e0c61f8 <col:28> 'int' 1
|     |-DeclStmt 0x55b71e0caf10 <line:811:9, col:38>
|     | `-VarDecl 0x55b71e0cadf8 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x55b71e0caee8 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55b71e0cae70 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55b71e0caec8 <col:29> 'Vector<T>' lvalue ParmVar 0x55b71e09a4a0 'variable' 'Vector<T> &'
|     |-WhileStmt 0x55b71e0cb800 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x55b71e0cb820 <line:812:16, col:61>
|     | | `-VarDecl 0x55b71e0caf38 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55b71e0cb118 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55b71e0cb0e8 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55b71e0cb0d0 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55b71e0cb0b0 <col:29, col:61> 'String' (CXXTemporary 0x55b71e0cb0b0)
|     | |           `-CXXMemberCallExpr 0x55b71e0cb040 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55b71e0cafb0 <col:29> '<bound member function type>' ->find 0x55b71e0b6478
|     | |             | `-CXXThisExpr 0x55b71e0cafa0 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55b71e0cb078 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55b71e0cafe0 <col:34> 'const char *' lvalue ParmVar 0x55b71e09a258 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55b71e0cb090 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55b71e0cb000 <col:43> 'int' lvalue ParmVar 0x55b71e09a2d8 'flags' 'int'
|     | |             `-DeclRefExpr 0x55b71e0cb020 <col:50> 'Args::Slot *' lvalue Var 0x55b71e0c60f8 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55b71e0cb1d0 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55b71e0cb1b8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55b71e0cb198 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55b71e0cb168 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55b71dc6fdb8
|     | |       `-ImplicitCastExpr 0x55b71e0cb150 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55b71e0cb130 <col:23> 'String' lvalue Var 0x55b71e0caf38 'str' 'String'
|     | `-CompoundStmt 0x55b71e0cb7c8 <col:64, line:819:9>
|     |   |-DeclStmt 0x55b71e0cb290 <line:813:13, col:23>
|     |   | `-VarDecl 0x55b71e0cb1f8 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x55b71e0cb270 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x55b71e0cb410 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x55b71e0cb2b8 <col:13> '<bound member function type>' ->postparse 0x55b71e0b6688
|     |   | | `-CXXThisExpr 0x55b71e0cb2a8 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55b71e0cb3b8 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55b71e0cb308 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55b71e0cb2e8 <col:23> 'P' lvalue ParmVar 0x55b71e09a350 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55b71e0cb350 <col:36> 'String' lvalue Var 0x55b71e0caf38 'str' 'String'
|     |   | | |-DeclRefExpr 0x55b71e0cb370 <col:41> 'T' lvalue Var 0x55b71e0cb1f8 'sx' 'T'
|     |   | | `-UnaryOperator 0x55b71e0cb3a0 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55b71e0cb390 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x55b71e0cb3f0 <col:53> 'Args::Slot *' lvalue Var 0x55b71e0c60f8 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x55b71e0cb568 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x55b71e0cb4a0 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x55b71e0cb470 <col:17> 'bool' lvalue ->_read_status 0x55b71e072b50
|     |   | |   `-ImplicitCastExpr 0x55b71e0cb450 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x55b71e0cb440 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x55b71e0cb540 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x55b71e0cb4d8 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x55b71e0cb4b8 <col:17> 'Vector<T> *' lvalue Var 0x55b71e0cadf8 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x55b71e0cb520 <col:30> 'T' lvalue Var 0x55b71e0cb1f8 'sx' 'T'
|     |   |-BinaryOperator 0x55b71e0cb6e8 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55b71e0cb580 <col:13> 'int' lvalue Var 0x55b71e0c6190 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55b71e0cb6d0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55b71e0cb6b0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55b71e0cb618 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55b71e0cb5f8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55b71e0cb5e0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55b71e0cb5a0 <col:28> 'int' lvalue Var 0x55b71e0c6190 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55b71e0cb5c0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55b71e0cb698 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55b71e0cb668 <col:49> 'bool' lvalue ->_read_status 0x55b71e072b50
|     |   |         `-ImplicitCastExpr 0x55b71e0cb648 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55b71e0cb638 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55b71e0cb798 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55b71e0cb708 <col:13> 'int' lvalue ParmVar 0x55b71e09a2d8 'flags' 'int'
|     |     `-UnaryOperator 0x55b71e0cb780 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55b71e0cb768 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55b71e0cb748 <col:23> 'const int' lvalue Var 0x55b71e08a258 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55b71e0cb930 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55b71e0cb868 <col:9> 'bool' lvalue ->_read_status 0x55b71e072b50
|       | `-ImplicitCastExpr 0x55b71e0cb848 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55b71e0cb838 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55b71e0cb910 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55b71e0cb8f0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55b71e0cb8d8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55b71e0cb898 <col:25> 'int' lvalue Var 0x55b71e0c6190 'read_status' 'int'
|           `-IntegerLiteral 0x55b71e0cb8b8 <col:40> 'int' 1
|-AccessSpecDecl 0x55b71e09a700 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x55b71e09a728 prev 0x55b71e088558 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x55b71e09a820 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x55b71e09a910 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x55b71e0cb988 <col:16, line:828:9>
| |-CXXDestructorDecl 0x55b71e09aa00 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x55b71e0cb998 <col:25, line:830:9>
| |-CXXMethodDecl 0x55b71e09ab00 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x55b71e09abb0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x55b71e09ac58 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55b71e09ac58
| | `-ParmVarDecl 0x55b71e09ad68 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x55b71e09b528 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55b71e09b528
|   `-ParmVarDecl 0x55b71e09b638 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x55b71e09add8 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x55b71e09af38 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x55b71e09b130 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x55b71e09afe0 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x55b71e09b058 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x55b71e0cbb78 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x55b71e09b3e8 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x55b71e0cb9e8 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55b71e0cb9a8 <col:20> 'void *' lvalue ParmVar 0x55b71e09afe0 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x55b71e09b450 '_slot' 'char *'
| | | `-CXXNewExpr 0x55b71e0cba70 <col:32, col:45> 'char *' array Function 0x55b71da8af08 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x55b71e0cba58 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x55b71e0cba28 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x55b71e09b058 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x55b71e09b4b0 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x55b71e0cbb38 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x55b71e0cbaf8 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x55b71e09b058 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x55b71e0cbbf8 <col:61, line:838:9>
| |-CXXDestructorDecl 0x55b71e09b230 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x55b71e09aa00 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x55b71e0cbc80 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x55b71e0cbc60 <line:840:13, col:22> 'void' array Function 0x55b71da8b268 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x55b71e0cbc48 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x55b71e0cbc18 <col:22> 'char *' lvalue ->_slot 0x55b71e09b450
| |         `-CXXThisExpr 0x55b71e0cbc08 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x55b71e09b330 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x55b71e09ab00 Slot::store 'void ()' ]
| | `-CompoundStmt 0x55b71e0cbe70 <col:22, line:844:9>
| |   `-CallExpr 0x55b71e0cbdd8 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x55b71e0cbdc0 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55b71e0cbda0 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55b71db980b8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x55b71e0cbe10 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x55b71e0cbcf0 <col:20> 'void *' lvalue ->_ptr 0x55b71e09b3e8
| |     |   `-CXXThisExpr 0x55b71e0cbce0 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x55b71e0cbe40 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x55b71e0cbe28 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x55b71e0cbd30 <col:26> 'char *' lvalue ->_slot 0x55b71e09b450
| |     |     `-CXXThisExpr 0x55b71e0cbd20 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x55b71e0cbe58 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x55b71e0cbd70 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x55b71e09b4b0
| |         `-CXXThisExpr 0x55b71e0cbd60 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x55b71e09b3e8 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x55b71e09b450 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x55b71e09b4b0 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x55b71e09b6a8 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55b71e09b6a8
| | `-ParmVarDecl 0x55b71e09b7b8 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x55b71e09b858 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55b71e09b858
|   `-ParmVarDecl 0x55b71e09b968 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x55b71e09bb08 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x55b71e09b9d8 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x55b71e09ba78 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x55b71e09bda0 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x55b71e09bf98 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x55b71e09be68 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x55b71e09c118 '_ptr' 'T *'
|   | | `-ParenListExpr 0x55b71e0cbea8 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x55b71e0cbe88 <col:20> 'T *' lvalue ParmVar 0x55b71e09be68 'ptr' 'T *'
|   | `-CompoundStmt 0x55b71e0cbef8 <col:25, line:854:9>
|   |-CXXMethodDecl 0x55b71e09c068 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x55b71e09ab00 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x55b71e0cc0b8 <col:22, line:857:9>
|   |   `-CallExpr 0x55b71e0cc088 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x55b71e0cbf08 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x55b71df665e8 0x55b71df43f18 0x55b71dc63788 0x55b71dc12bc8
|   |     |-CXXOperatorCallExpr 0x55b71e0cc018 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x55b71e0cbfa8 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55b71de60a58 0x55b71de60678 0x55b71de602a8 0x55b71de5fec8 0x55b71de5fae8 0x55b71de5f718
|   |     | `-MemberExpr 0x55b71e0cbf78 <col:29> 'T *' lvalue ->_ptr 0x55b71e09c118
|   |     |   `-CXXThisExpr 0x55b71e0cbf68 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x55b71e0cc058 <col:35> 'T' lvalue ->_slot 0x55b71e09c178
|   |       `-CXXThisExpr 0x55b71e0cc048 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x55b71e09c118 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x55b71e09c178 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x55b71e09c1e0 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x55b71e09c2e0 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x55b71e09c330 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71e09c2c0 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x55b71e09c2a0 <col:31> 'int' 48
|-FieldDecl 0x55b71e09c358 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x55b71e09c3b8 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x55b71e09c418 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x55b71e09c550 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x55b71e0b5d20 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55b71e0b5d80 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x55b71e0b5e30 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x55b71e0b6058 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x55b71e0b5f60 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x55b71e0b61a8 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x55b71e0b6118 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x55b71e0b6478 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x55b71e0b6268 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x55b71e0b62e8 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x55b71e0b6390 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x55b71e0b6688 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x55b71e0b6540 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x55b71e0b65b8 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x55b71e0b6758 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x55b71e0b68a8 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x55b71e0b6810 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x55b71e0b6c08 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x55b71e0b6968 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x55b71e0b69e8 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x55b71e0b6a68 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x55b71e0b6b18 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x55b71e0b6e30 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x55b71e0b6ce0 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x55b71e0b6d58 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x55b71e0b7148 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x55b71e0b6ee0 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x55b71e0b70a8 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x55b71e0b6fb8 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class SecondsArg
         0 |   class NumArg (base) (empty)
         0 |   int fraction_digits
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e0d4860 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71e0d4978 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55b71e0d4a08 <col:16, col:22> col:16 public
|-EnumDecl 0x55b71e0d4a30 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55b71e0d4b30 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55b71e0d4d80 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e0d4b10 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55b71e0d4af0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55b71e0d4bc0 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55b71e0d4d98 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e0d4ba0 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55b71e0d4b80 <col:24> 'int' 22
| |-EnumConstantDecl 0x55b71e0d4c50 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55b71e0d4db0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e0d4c30 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55b71e0d4c10 <col:24> 'int' 34
| |-EnumConstantDecl 0x55b71e0d4ce0 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55b71e0d4dc8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71e0d4cc0 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55b71e0d4ca0 <col:25> 'int' 95
| `-EnumConstantDecl 0x55b71e0d4d30 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55b71e0d6740 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b71e0d6b78 <col:7>
|-CXXConstructorDecl 0x55b71e0d6848 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55b71e0d6848
| `-ParmVarDecl 0x55b71e0d6958 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55b71e0d69f8 <col:7> col:7 implicit used constexpr NumArg 'void (NumArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71e0d6b08 <col:7> col:7 'NumArg &&'
| `-CompoundStmt 0x55b71e21f9a0 <col:7>
`-CXXDestructorDecl 0x55b71e0d8ee8 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e0e4a48 <../dummy_inc/click/args.hh:1310:1, line:1321:1> line:1310:7 referenced class SecondsArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55b71e0e4ba8 <col:1, col:7> col:7 implicit referenced class SecondsArg
|-AccessSpecDecl 0x55b71e0e4c38 <col:36, col:42> col:36 public
|-CXXConstructorDecl 0x55b71e0e4d48 <line:1311:5, line:1313:5> line:1311:5 used SecondsArg 'void (int)'
| |-ParmVarDecl 0x55b71e0e4c78 <col:16, col:24> col:20 used d 'int' cinit
| | `-IntegerLiteral 0x55b71e0e55f0 <col:24> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55b71e0e56f0 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55b71e0e5520 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x55b71e0e56b0 <line:1312:27> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55b71e0e5670 <col:27> 'int' lvalue ParmVar 0x55b71e0e4c78 'd' 'int'
| `-CompoundStmt 0x55b71e0e5760 <col:30, line:1313:5>
|-CXXMethodDecl 0x55b71e0e4f98 <line:1314:5, col:99> col:10 parse_saturating 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x55b71e0e4e08 <col:27, col:41> col:41 str 'const String &'
| |-ParmVarDecl 0x55b71e0e4e80 <col:46, col:56> col:56 result 'uint32_t &'
| `-ParmVarDecl 0x55b71e0e4ef8 <col:64, col:89> col:82 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55b71e0e5610 <col:89> 'const ArgContext' lvalue Var 0x55b71e0cc0e0 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55b71e0e51f0 <line:1315:5, col:88> col:10 parse 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x55b71e0e5060 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55b71e0e50d8 <col:35, col:45> col:45 result 'uint32_t &'
| `-ParmVarDecl 0x55b71e0e5150 <col:53, col:78> col:71 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55b71e0e5630 <col:78> 'const ArgContext' lvalue Var 0x55b71e0cc0e0 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55b71e0e5450 <line:1317:5, col:86> col:10 parse 'bool (const String &, double &, const ArgContext &)'
| |-ParmVarDecl 0x55b71e0e52b8 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x55b71e0e5338 <col:35, col:43> col:43 result 'double &'
| `-ParmVarDecl 0x55b71e0e53b0 <col:51, col:76> col:69 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55b71e0e5650 <col:76> 'const ArgContext' lvalue Var 0x55b71e0cc0e0 'blank_args' 'const ArgContext'
|-FieldDecl 0x55b71e0e5520 <line:1319:5, col:9> col:9 referenced fraction_digits 'int'
|-FieldDecl 0x55b71e0e5588 <line:1320:5, col:9> col:9 referenced status 'int'
|-CXXConstructorDecl 0x55b71e21ee58 <line:1310:7> col:7 implicit constexpr SecondsArg 'void (const SecondsArg &)' inline default trivial noexcept-unevaluated 0x55b71e21ee58
| `-ParmVarDecl 0x55b71e21ef68 <col:7> col:7 'const SecondsArg &'
|-CXXConstructorDecl 0x55b71e21f008 <col:7> col:7 implicit used constexpr SecondsArg 'void (SecondsArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71e21f118 <col:7> col:7 used 'SecondsArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55b71e21f9b0 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55b71e21f980 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x55b71e21f950 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x55b71e21f920 <col:7> 'SecondsArg' lvalue ParmVar 0x55b71e21f118 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x55b71e0e5520 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x55b71e21faa8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55b71e21fa78 <col:7> 'int' xvalue .fraction_digits 0x55b71e0e5520
| |     `-CXXStaticCastExpr 0x55b71e21fa48 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x55b71e21fa18 <col:7> 'SecondsArg' lvalue ParmVar 0x55b71e21f118 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x55b71e0e5588 'status' 'int'
| | `-ImplicitCastExpr 0x55b71e21fb78 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55b71e21fb48 <col:7> 'int' xvalue .status 0x55b71e0e5588
| |     `-CXXStaticCastExpr 0x55b71e21fb18 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x55b71e21fae8 <col:7> 'SecondsArg' lvalue ParmVar 0x55b71e21f118 '' 'SecondsArg &&'
| `-CompoundStmt 0x55b71e21fbd0 <col:7>
`-CXXDestructorDecl 0x55b71e21f1e0 <col:7> col:7 implicit referenced ~SecondsArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.SecondsArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.SecondsArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterPattern
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   int _sport
         8 |   class IPAddress _daddr
         8 |     uint32_t _addr
        12 |   int _dport
        16 |   uint32_t _variation_top
        20 |   uint32_t _next_variation
        24 |   _Bool _is_napt
        25 |   _Bool _sequential
        26 |   _Bool _same_first
        28 |   int _refcount
           | [sizeof=32, dsize=32, align=4,
           |  nvsize=32, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71df4c8b0 <../elements/ip/iprwpattern.hh:12:1, line:68:1> line:12:7 class IPRewriterPattern definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71df4c9c8 <col:1, col:7> col:7 implicit referenced class IPRewriterPattern
|-AccessSpecDecl 0x55b71df4ca58 <col:27, col:33> col:27 public
|-CXXConstructorDecl 0x55b71df4cfc8 <line:14:5, line:17:27> line:14:5 IPRewriterPattern 'void (const IPAddress &, int, const IPAddress &, int, bool, bool, bool, uint32_t)'
| |-ParmVarDecl 0x55b71df4ca90 <col:23, col:40> col:40 saddr 'const IPAddress &'
| |-ParmVarDecl 0x55b71df4cb10 <col:47, col:51> col:51 sport 'int'
| |-ParmVarDecl 0x55b71df4cb88 <line:15:9, col:26> col:26 daddr 'const IPAddress &'
| |-ParmVarDecl 0x55b71df4cc08 <col:33, col:37> col:37 dport 'int'
| |-ParmVarDecl 0x55b71df4cc80 <line:16:9, col:14> col:14 is_napt 'bool'
| |-ParmVarDecl 0x55b71df4ccf8 <col:23, col:28> col:28 sequential 'bool'
| |-ParmVarDecl 0x55b71df4cd70 <col:40, col:45> col:45 same_first 'bool'
| `-ParmVarDecl 0x55b71df4cde8 <line:17:9, col:18> col:18 variation 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71df4d4a8 <line:18:5, line:19:45> line:18:17 parse 'bool (const Vector<String> &, IPRewriterPattern **, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b71df4d1c0 <col:23, col:45> col:45 words 'const Vector<String> &'
| |-ParmVarDecl 0x55b71df4d270 <col:52, col:72> col:72 result 'IPRewriterPattern **'
| |-ParmVarDecl 0x55b71df4d2e8 <line:19:9, col:18> col:18 context 'Element *'
| `-ParmVarDecl 0x55b71df4d360 <col:27, col:41> col:41 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71df4d958 <line:20:5, line:21:42> line:20:17 parse_ports 'bool (const Vector<String> &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b71df4d650 <col:29, col:51> col:51 words 'const Vector<String> &'
| |-ParmVarDecl 0x55b71df4d6f8 <col:58, col:75> col:75 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55b71df4d770 <line:21:8, col:17> col:17 model 'Element *'
| `-ParmVarDecl 0x55b71df4d810 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71df4dc88 <line:22:5, line:23:42> line:22:17 parse_with_ports 'bool (const String &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b71df4da28 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55b71df4daa0 <col:53, col:70> col:70 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55b71df4db18 <line:23:6, col:15> col:15 context 'Element *'
| `-ParmVarDecl 0x55b71df4db90 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71df4dd68 <line:25:5, line:27:5> line:25:10 use 'void ()'
| `-CompoundStmt 0x55b71df4f0c0 <col:16, line:27:5>
|   `-UnaryOperator 0x55b71df4f0a8 <line:26:2, col:11> 'int' postfix '++'
|     `-MemberExpr 0x55b71df4f078 <col:2> 'int' lvalue ->_refcount 0x55b71df4eca8
|       `-CXXThisExpr 0x55b71df4f068 <col:2> 'IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55b71df4de28 <line:28:5, line:31:5> line:28:10 unuse 'void ()'
| `-CompoundStmt 0x55b71df4f2b8 <col:18, line:31:5>
|   `-IfStmt 0x55b71df4f2a0 <line:29:2, line:30:13>
|     |-BinaryOperator 0x55b71df4f168 <line:29:6, col:21> 'bool' '<='
|     | |-ImplicitCastExpr 0x55b71df4f150 <col:6, col:8> 'int' <LValueToRValue>
|     | | `-UnaryOperator 0x55b71df4f118 <col:6, col:8> 'int' lvalue prefix '--'
|     | |   `-MemberExpr 0x55b71df4f0e8 <col:8> 'int' lvalue ->_refcount 0x55b71df4eca8
|     | |     `-CXXThisExpr 0x55b71df4f0d8 <col:8> 'IPRewriterPattern *' implicit this
|     | `-IntegerLiteral 0x55b71df4f130 <col:21> 'int' 0
|     `-CXXDeleteExpr 0x55b71df4f280 <line:30:6, col:13> 'void' Function 0x55b71da8b0b8 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x55b71df4f188 <col:13> 'IPRewriterPattern *' this
|-CXXConversionDecl 0x55b71df4df28 <line:33:5, line:35:5> line:33:5 operator bool 'bool () const'
| `-CompoundStmt 0x55b71df4f5a0 <col:27, line:35:5>
|   `-ReturnStmt 0x55b71df4f590 <line:34:2, col:39>
|     `-BinaryOperator 0x55b71df4f570 <col:9, col:39> 'bool' '||'
|       |-BinaryOperator 0x55b71df4f4e0 <col:9, col:29> 'bool' '||'
|       | |-BinaryOperator 0x55b71df4f400 <col:9, col:19> 'bool' '||'
|       | | |-ImplicitCastExpr 0x55b71df4f3b8 <col:9> 'bool' <IntegralToBoolean>
|       | | | `-ImplicitCastExpr 0x55b71df4f3a0 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | | |   `-CXXMemberCallExpr 0x55b71df4f380 <col:9> 'uint32_t':'unsigned int'
|       | | |     `-MemberExpr 0x55b71df4f350 <col:9> '<bound member function type>' .operator unsigned int 0x55b71dca70d8
|       | | |       `-MemberExpr 0x55b71df4f2e0 <col:9> 'const IPAddress' lvalue ->_saddr 0x55b71df4e930
|       | | |         `-CXXThisExpr 0x55b71df4f2d0 <col:9> 'const IPRewriterPattern *' implicit this
|       | | `-ImplicitCastExpr 0x55b71df4f3e8 <col:19> 'bool' <IntegralToBoolean>
|       | |   `-ImplicitCastExpr 0x55b71df4f3d0 <col:19> 'int' <LValueToRValue>
|       | |     `-MemberExpr 0x55b71df4f320 <col:19> 'const int' lvalue ->_sport 0x55b71df4e998
|       | |       `-CXXThisExpr 0x55b71df4f310 <col:19> 'const IPRewriterPattern *' implicit this
|       | `-ImplicitCastExpr 0x55b71df4f4c8 <col:29> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x55b71df4f4b0 <col:29> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x55b71df4f490 <col:29> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x55b71df4f460 <col:29> '<bound member function type>' .operator unsigned int 0x55b71dca70d8
|       |         `-MemberExpr 0x55b71df4f430 <col:29> 'const IPAddress' lvalue ->_daddr 0x55b71df4e9f8
|       |           `-CXXThisExpr 0x55b71df4f420 <col:29> 'const IPRewriterPattern *' implicit this
|       `-ImplicitCastExpr 0x55b71df4f558 <col:39> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55b71df4f540 <col:39> 'int' <LValueToRValue>
|           `-MemberExpr 0x55b71df4f510 <col:39> 'const int' lvalue ->_dport 0x55b71df4ea60
|             `-CXXThisExpr 0x55b71df4f500 <col:39> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55b71df4dff8 <line:36:5, line:38:5> line:36:15 daddr 'IPAddress () const'
| `-CompoundStmt 0x55b71df4f638 <col:29, line:38:5>
|   `-ReturnStmt 0x55b71df4f628 <line:37:2, col:9>
|     `-CXXConstructExpr 0x55b71df4f5f8 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x55b71df4f5c8 <col:9> 'const IPAddress' lvalue ->_daddr 0x55b71df4e9f8
|         `-CXXThisExpr 0x55b71df4f5b8 <col:9> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x55b71df4e6c0 <line:40:5, line:41:57> line:40:9 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, const HashContainer<IPRewriterEntry> &)'
| |-ParmVarDecl 0x55b71df4e0a8 <col:24, col:40> col:40 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55b71df4e148 <col:48, col:58> col:58 rewritten_flowid 'IPFlowID &'
| `-ParmVarDecl 0x55b71df4e590 <line:41:10, col:48> col:48 reply_map 'const HashContainer<IPRewriterEntry> &'
|-CXXMethodDecl 0x55b71df4e798 <line:43:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55b71df4e858 <line:45:5, line:47:5> line:45:21 get_flow_id 'IPFlowID () const' inline
| `-CompoundStmt 0x55b71df4f8e0 <col:41, line:47:5>
|   `-ReturnStmt 0x55b71df4f8d0 <line:46:9, col:55>
|     `-ExprWithCleanups 0x55b71df4f8b8 <col:16, col:55> 'IPFlowID'
|       `-CXXConstructExpr 0x55b71df4f888 <col:16, col:55> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b71df4f870 <col:16, col:55> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x55b71df4f820 <col:16, col:55> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x55b71df4f760 <col:25> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55b71df4f670 <col:25> 'const IPAddress' lvalue ->_saddr 0x55b71df4e930
|             |   `-CXXThisExpr 0x55b71df4f660 <col:25> 'const IPRewriterPattern *' implicit this
|             |-ImplicitCastExpr 0x55b71df4f7a8 <col:33> 'uint16_t':'unsigned short' <IntegralCast>
|             | `-ImplicitCastExpr 0x55b71df4f790 <col:33> 'int' <LValueToRValue>
|             |   `-MemberExpr 0x55b71df4f6b0 <col:33> 'const int' lvalue ->_sport 0x55b71df4e998
|             |     `-CXXThisExpr 0x55b71df4f6a0 <col:33> 'const IPRewriterPattern *' implicit this
|             |-CXXConstructExpr 0x55b71df4f7c0 <col:41> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x55b71df4f6f0 <col:41> 'const IPAddress' lvalue ->_daddr 0x55b71df4e9f8
|             |   `-CXXThisExpr 0x55b71df4f6e0 <col:41> 'const IPRewriterPattern *' implicit this
|             `-ImplicitCastExpr 0x55b71df4f808 <col:49> 'uint16_t':'unsigned short' <IntegralCast>
|               `-ImplicitCastExpr 0x55b71df4f7f0 <col:49> 'int' <LValueToRValue>
|                 `-MemberExpr 0x55b71df4f730 <col:49> 'const int' lvalue ->_dport 0x55b71df4ea60
|                   `-CXXThisExpr 0x55b71df4f720 <col:49> 'const IPRewriterPattern *' implicit this
|-AccessSpecDecl 0x55b71df4e8f8 <line:49:1, col:8> col:1 private
|-FieldDecl 0x55b71df4e930 <line:51:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x55b71df4e998 <line:52:5, col:9> col:9 referenced _sport 'int'
|-FieldDecl 0x55b71df4e9f8 <line:53:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x55b71df4ea60 <line:54:5, col:9> col:9 referenced _dport 'int'
|-FieldDecl 0x55b71df4eac0 <line:56:5, col:14> col:14 _variation_top 'uint32_t':'unsigned int'
|-FieldDecl 0x55b71df4eb20 <line:57:5, col:14> col:14 _next_variation 'uint32_t':'unsigned int'
|-FieldDecl 0x55b71df4eb80 <line:59:5, col:10> col:10 _is_napt 'bool'
|-FieldDecl 0x55b71df4ebe0 <line:60:5, col:10> col:10 _sequential 'bool'
|-FieldDecl 0x55b71df4ec40 <line:61:5, col:10> col:10 _same_first 'bool'
|-FieldDecl 0x55b71df4eca8 <line:63:5, col:9> col:9 referenced _refcount 'int'
|-CXXConstructorDecl 0x55b71df4edf8 <line:65:5, col:47> col:5 IPRewriterPattern 'void (const IPRewriterPattern &)'
| `-ParmVarDecl 0x55b71df4ed38 <col:23, col:46> col:47 'const IPRewriterPattern &'
|-CXXMethodDecl 0x55b71df4efa8 <line:66:5, col:58> col:24 operator= 'IPRewriterPattern &(const IPRewriterPattern &)'
| `-ParmVarDecl 0x55b71df4eeb8 <col:34, col:57> col:58 'const IPRewriterPattern &'
`-CXXDestructorDecl 0x55b71df4f198 <line:12:7> col:7 implicit ~IPRewriterPattern 'void ()' inline default trivial noexcept-unevaluated 0x55b71df4f198

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPMapper
         0 |   (IPMapper vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71df98d50 prev 0x55b71df6a010 <../elements/ip/iprewriterbase.hh:185:1, line:197:1> line:185:7 class IPMapper definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71df98e48 <col:1, col:7> col:7 implicit referenced class IPMapper
|-AccessSpecDecl 0x55b71df98ed8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55b71df98f38 <line:187:5, col:18> col:5 IPMapper 'void ()'
| `-CompoundStmt 0x55b71df99958 <col:16, col:18>
|-CXXDestructorDecl 0x55b71df99028 <line:188:5, col:27> col:13 ~IPMapper 'void () noexcept' virtual
| `-CompoundStmt 0x55b71df99968 <col:25, col:27>
|-CXXMethodDecl 0x55b71df992f8 <line:190:5, line:191:24> line:190:18 notify_rewriter 'void (IPRewriterBase *, IPRewriterInput *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55b71df99120 <col:34, col:50> col:50 user 'IPRewriterBase *'
| |-ParmVarDecl 0x55b71df99198 <col:56, col:73> col:73 input 'IPRewriterInput *'
| `-ParmVarDecl 0x55b71df99210 <line:191:6, col:20> col:20 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b71df996b0 <line:192:5, line:195:31> line:192:17 rewrite_flowid 'int (IPRewriterInput *, const IPFlowID &, IPFlowID &, Packet *, int)' virtual
| |-ParmVarDecl 0x55b71df993c0 <col:32, col:49> col:49 input 'IPRewriterInput *'
| |-ParmVarDecl 0x55b71df99438 <line:193:11, col:27> col:27 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55b71df994b0 <line:194:11, col:21> col:21 rewritten_flowid 'IPFlowID &'
| |-ParmVarDecl 0x55b71df99528 <line:195:11, col:19> col:19 p 'Packet *'
| `-ParmVarDecl 0x55b71df995a8 <col:22, col:26> col:26 mapid 'int'
`-CXXMethodDecl 0x55b71df997d8 <line:185:7> col:7 implicit operator= 'IPMapper &(const IPMapper &)' inline default noexcept-unevaluated 0x55b71df997d8
  `-ParmVarDecl 0x55b71df998e8 <col:7> col:7 'const IPMapper &'

Layout: <CGRecordLayout
  LLVMType:%class.IPMapper = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.IPMapper = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71df6a898 <../elements/ip/iprewriterbase.hh:23:5, line:26:5> line:23:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x55b71df6a9c8 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
|-FieldDecl 0x55b71df6aa58 <line:25:2, col:12> col:12 mapper 'IPMapper *'
|-CXXConstructorDecl 0x55b71df6b518 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b71df6b948 <col:5>
|-CXXConstructorDecl 0x55b71df6b618 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x55b71df6b618
| `-ParmVarDecl 0x55b71df6b728 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
`-CXXConstructorDecl 0x55b71df6b7c8 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x55b71df6b7c8
  `-ParmVarDecl 0x55b71df6b8d8 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon.28 = type { %class.IPRewriterPattern* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71df6a150 prev 0x55b71df4faf0 <../elements/ip/iprewriterbase.hh:11:1, line:40:1> line:11:7 referenced class IPRewriterInput definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b71df6a248 <col:1, col:7> col:7 implicit referenced class IPRewriterInput
|-AccessSpecDecl 0x55b71df6a2d8 <col:25, col:31> col:25 public
|-EnumDecl 0x55b71df6a300 <line:12:5, line:14:5> line:12:5
| |-EnumConstantDecl 0x55b71df6a3c0 <line:13:2> col:2 referenced i_drop 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55b71df6a410 <col:10> col:10 i_nochange 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55b71df6a460 <col:22> col:22 i_keep 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-EnumConstantDecl 0x55b71df6a4b0 <col:30> col:30 referenced i_pattern 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| `-EnumConstantDecl 0x55b71df6a500 <col:41> col:41 i_mapper 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
|-FieldDecl 0x55b71df6a588 <line:15:5, col:21> col:21 owner 'IPRewriterBase *'
|-FieldDecl 0x55b71df6a5f0 <line:16:5, col:9> col:9 owner_input 'int'
|-FieldDecl 0x55b71df6a658 <line:17:5, col:9> col:9 referenced kind 'int'
|-FieldDecl 0x55b71df6a6c0 <line:18:5, col:9> col:9 referenced foutput 'int'
|-FieldDecl 0x55b71df6a720 <line:19:5, col:21> col:21 referenced reply_element 'IPRewriterBase *'
|-FieldDecl 0x55b71df6a788 <line:20:5, col:9> col:9 routput 'int'
|-FieldDecl 0x55b71df6a7e8 <line:21:5, col:14> col:14 count 'uint32_t':'unsigned int'
|-FieldDecl 0x55b71df6a848 <line:22:5, col:14> col:14 failures 'uint32_t':'unsigned int'
|-CXXRecordDecl 0x55b71df6a898 <line:23:5, line:26:5> line:23:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x55b71df6a9c8 <line:24:2, col:21> col:21 referenced pattern 'IPRewriterPattern *'
| |-FieldDecl 0x55b71df6aa58 <line:25:2, col:12> col:12 mapper 'IPMapper *'
| |-CXXConstructorDecl 0x55b71df6b518 <line:23:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55b71df6b948 <col:5>
| |-CXXConstructorDecl 0x55b71df6b618 <col:5> col:5 implicit constexpr  'void (const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &)' inline default trivial noexcept-unevaluated 0x55b71df6b618
| | `-ParmVarDecl 0x55b71df6b728 <col:5> col:5 'const IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &'
| `-CXXConstructorDecl 0x55b71df6b7c8 <col:5> col:5 implicit constexpr  'void (IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&)' inline default trivial noexcept-unevaluated 0x55b71df6b7c8
|   `-ParmVarDecl 0x55b71df6b8d8 <col:5> col:5 'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5) &&'
|-FieldDecl 0x55b71df6ab18 <col:5, line:26:7> col:7 referenced u 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
|-CXXConstructorDecl 0x55b71df6abb8 <line:28:5, line:31:5> line:28:5 IPRewriterInput 'void ()'
| |-CXXCtorInitializer Field 0x55b71df6a658 'kind' 'int'
| | `-ImplicitCastExpr 0x55b71df6b2c0 <line:29:9> 'int' <IntegralCast>
| |   `-DeclRefExpr 0x55b71df6b280 <col:9> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)' EnumConstant 0x55b71df6a3c0 'i_drop' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:12:5)'
| |-CXXCtorInitializer Field 0x55b71df6a6c0 'foutput' 'int'
| | `-UnaryOperator 0x55b71df6b320 <col:26, col:27> 'int' prefix '-'
| |   `-IntegerLiteral 0x55b71df6b300 <col:27> 'int' 1
| |-CXXCtorInitializer Field 0x55b71df6a788 'routput' 'int'
| | `-UnaryOperator 0x55b71df6b3a0 <col:39, col:40> 'int' prefix '-'
| |   `-IntegerLiteral 0x55b71df6b380 <col:40> 'int' 1
| |-CXXCtorInitializer Field 0x55b71df6a7e8 'count' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b71df6b440 <col:50> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b71df6b400 <col:50> 'int' 0
| |-CXXCtorInitializer Field 0x55b71df6a848 'failures' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b71df6b4c0 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b71df6b480 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55b71df6ab18 'u' 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)'
| | `-CXXConstructExpr 0x55b71df6b958 <line:28:5> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' 'void () noexcept'
| `-CompoundStmt 0x55b71df6baa0 <line:29:66, line:31:5>
|   `-BinaryOperator 0x55b71df6ba80 <line:30:2, col:14> 'IPRewriterPattern *' lvalue '='
|     |-MemberExpr 0x55b71df6ba18 <col:2, col:4> 'IPRewriterPattern *' lvalue .pattern 0x55b71df6a9c8
|     | `-MemberExpr 0x55b71df6b9e8 <col:2> 'union (anonymous union at ../elements/ip/iprewriterbase.hh:23:5)':'IPRewriterInput::(anonymous union at ../elements/ip/iprewriterbase.hh:23:5)' lvalue ->u 0x55b71df6ab18
|     |   `-CXXThisExpr 0x55b71df6b9d8 <col:2> 'IPRewriterInput *' implicit this
|     `-ImplicitCastExpr 0x55b71df6ba68 <col:14> 'IPRewriterPattern *' <NullToPointer>
|       `-IntegerLiteral 0x55b71df6ba48 <col:14> 'int' 0
|-EnumDecl 0x55b71df6ac60 <line:33:5, line:35:5> line:33:5
| |-EnumConstantDecl 0x55b71df6ad60 <line:34:2, col:18> col:2 referenced mapid_default 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
| | `-ImplicitCastExpr 0x55b71df6ae40 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71df6ad40 <col:18> 'int' Int: 0
| |     `-IntegerLiteral 0x55b71df6ad20 <col:18> 'int' 0
| `-EnumConstantDecl 0x55b71df6adf0 <col:21, col:44> col:21 referenced mapid_iprewriter_udp 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
|   `-ImplicitCastExpr 0x55b71df6ae58 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71df6add0 <col:44> 'int' Int: 1
|       `-IntegerLiteral 0x55b71df6adb0 <col:44> 'int' 1
`-CXXMethodDecl 0x55b71df6b0f0 <line:37:5, line:39:46> line:37:44 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, Packet *, int)'
  |-ParmVarDecl 0x55b71df6ae80 <col:59, col:75> col:75 flowid 'const IPFlowID &'
  |-ParmVarDecl 0x55b71df6aef8 <line:38:10, col:20> col:20 rewritten_flowid 'IPFlowID &'
  |-ParmVarDecl 0x55b71df6af70 <line:39:10, col:18> col:18 p 'Packet *'
  |-ParmVarDecl 0x55b71df6aff0 <col:21, col:33> col:25 mapid 'int' cinit
  | `-ImplicitCastExpr 0x55b71df6b268 <col:33> 'int' <IntegralCast>
  |   `-DeclRefExpr 0x55b71df6b248 <col:33> 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)' EnumConstant 0x55b71df6ad60 'mapid_default' 'IPRewriterInput::(anonymous enum at ../elements/ip/iprewriterbase.hh:33:5)'
  |-NoInlineAttr 0x55b71df6b1b0 <line:37:20>
  `-OptimizeNoneAttr 0x55b71df6b208 <col:30>

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.28 }
  NonVirtualBaseLLVMType:%class.IPRewriterInput = type { %class.IPRewriterBase*, i32, i32, i32, %class.IPRewriterBase*, i32, i32, i32, %union.anon.28 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e018e10 <../elements/tcpudp/myrewriter.hh:229:1, line:240:1> line:229:7 referenced class MyRewriterPattern definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71e018f28 <col:1, col:7> col:7 implicit referenced class MyRewriterPattern
|-AccessSpecDecl 0x55b71e018fb8 <line:230:1, col:7> col:1 public
|-FieldDecl 0x55b71e018ff0 <line:231:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x55b71e019058 <line:232:5, col:9> col:9 referenced _sport 'int'
|-FieldDecl 0x55b71e0190b8 <line:233:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x55b71e019120 <line:234:5, col:9> col:9 referenced _dport 'int'
|-FieldDecl 0x55b71e019180 <line:236:5, col:14> col:14 referenced _variation_top 'uint32_t':'unsigned int'
|-FieldDecl 0x55b71e0191e0 <line:237:5, col:10> col:10 referenced _sequential 'bool'
|-CXXConstructorDecl 0x55b71e019290 <line:239:5, col:107> col:5 used MyRewriterPattern 'void ()'
| |-CXXCtorInitializer Field 0x55b71e018ff0 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x55b71e019368 <col:26, col:33> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55b71e019058 '_sport' 'int'
| | `-IntegerLiteral 0x55b71e0193b8 <col:43> 'int' 0
| |-CXXCtorInitializer Field 0x55b71e0190b8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x55b71e019438 <col:47, col:54> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x55b71e019120 '_dport' 'int'
| | `-IntegerLiteral 0x55b71e019488 <col:64> 'int' 0
| |-CXXCtorInitializer Field 0x55b71e019180 '_variation_top' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b71e019530 <col:83> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b71e0194f0 <col:83> 'int' 0
| |-CXXCtorInitializer Field 0x55b71e0191e0 '_sequential' 'bool'
| | `-CXXBoolLiteralExpr 0x55b71e019570 <col:99> 'bool' false
| `-CompoundStmt 0x55b71e0195f8 <col:106, col:107>
|-CXXDestructorDecl 0x55b71e221260 <line:229:7> col:7 implicit ~MyRewriterPattern 'void ()' inline default trivial noexcept-unevaluated 0x55b71e221260
|-CXXConstructorDecl 0x55b71e221368 <col:7> col:7 implicit constexpr MyRewriterPattern 'void (const MyRewriterPattern &)' inline default trivial noexcept-unevaluated 0x55b71e221368
| `-ParmVarDecl 0x55b71e221478 <col:7> col:7 'const MyRewriterPattern &'
|-CXXConstructorDecl 0x55b71e221518 <col:7> col:7 implicit constexpr MyRewriterPattern 'void (MyRewriterPattern &&)' inline default trivial noexcept-unevaluated 0x55b71e221518
| `-ParmVarDecl 0x55b71e221628 <col:7> col:7 'MyRewriterPattern &&'
|-CXXMethodDecl 0x55b71e222b38 <col:7> col:7 implicit used operator= 'MyRewriterPattern &(const MyRewriterPattern &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71e222c48 <col:7> col:7 used 'const MyRewriterPattern &'
| `-CompoundStmt 0x55b71e2234f8 <col:7>
|   |-CXXMemberCallExpr 0x55b71e222ff8 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55b71e222fb0 <col:7> '<bound member function type>' .operator= 0x55b71df47b98
|   | | `-MemberExpr 0x55b71e222ec0 <col:7> 'IPAddress' lvalue ->_saddr 0x55b71e018ff0
|   | |   `-CXXThisExpr 0x55b71e222eb0 <col:7> 'MyRewriterPattern *' this
|   | `-MemberExpr 0x55b71e222f80 <col:7> 'const IPAddress' lvalue ._saddr 0x55b71e018ff0
|   |   `-DeclRefExpr 0x55b71e222f60 <col:7> 'const MyRewriterPattern' lvalue ParmVar 0x55b71e222c48 '' 'const MyRewriterPattern &'
|   |-BinaryOperator 0x55b71e2230c8 <col:7> 'int' lvalue '='
|   | |-MemberExpr 0x55b71e223080 <col:7> 'int' lvalue ->_sport 0x55b71e019058
|   | | `-CXXThisExpr 0x55b71e223070 <col:7> 'MyRewriterPattern *' this
|   | `-ImplicitCastExpr 0x55b71e2230b0 <col:7> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55b71e223040 <col:7> 'const int' lvalue ._sport 0x55b71e019058
|   |     `-DeclRefExpr 0x55b71e223020 <col:7> 'const MyRewriterPattern' lvalue ParmVar 0x55b71e222c48 '' 'const MyRewriterPattern &'
|   |-CXXMemberCallExpr 0x55b71e223240 <col:7> 'IPAddress' lvalue
|   | |-MemberExpr 0x55b71e2231f8 <col:7> '<bound member function type>' .operator= 0x55b71df47b98
|   | | `-MemberExpr 0x55b71e223108 <col:7> 'IPAddress' lvalue ->_daddr 0x55b71e0190b8
|   | |   `-CXXThisExpr 0x55b71e2230f8 <col:7> 'MyRewriterPattern *' this
|   | `-MemberExpr 0x55b71e2231c8 <col:7> 'const IPAddress' lvalue ._daddr 0x55b71e0190b8
|   |   `-DeclRefExpr 0x55b71e2231a8 <col:7> 'const MyRewriterPattern' lvalue ParmVar 0x55b71e222c48 '' 'const MyRewriterPattern &'
|   |-BinaryOperator 0x55b71e223310 <col:7> 'int' lvalue '='
|   | |-MemberExpr 0x55b71e2232c8 <col:7> 'int' lvalue ->_dport 0x55b71e019120
|   | | `-CXXThisExpr 0x55b71e2232b8 <col:7> 'MyRewriterPattern *' this
|   | `-ImplicitCastExpr 0x55b71e2232f8 <col:7> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55b71e223288 <col:7> 'const int' lvalue ._dport 0x55b71e019120
|   |     `-DeclRefExpr 0x55b71e223268 <col:7> 'const MyRewriterPattern' lvalue ParmVar 0x55b71e222c48 '' 'const MyRewriterPattern &'
|   |-BinaryOperator 0x55b71e2233d8 <col:7> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x55b71e223390 <col:7> 'uint32_t':'unsigned int' lvalue ->_variation_top 0x55b71e019180
|   | | `-CXXThisExpr 0x55b71e223380 <col:7> 'MyRewriterPattern *' this
|   | `-ImplicitCastExpr 0x55b71e2233c0 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x55b71e223350 <col:7> 'const uint32_t':'const unsigned int' lvalue ._variation_top 0x55b71e019180
|   |     `-DeclRefExpr 0x55b71e223330 <col:7> 'const MyRewriterPattern' lvalue ParmVar 0x55b71e222c48 '' 'const MyRewriterPattern &'
|   |-BinaryOperator 0x55b71e2234a0 <col:7> 'bool' lvalue '='
|   | |-MemberExpr 0x55b71e223458 <col:7> 'bool' lvalue ->_sequential 0x55b71e0191e0
|   | | `-CXXThisExpr 0x55b71e223448 <col:7> 'MyRewriterPattern *' this
|   | `-ImplicitCastExpr 0x55b71e223488 <col:7> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55b71e223418 <col:7> 'const bool' lvalue ._sequential 0x55b71e0191e0
|   |     `-DeclRefExpr 0x55b71e2233f8 <col:7> 'const MyRewriterPattern' lvalue ParmVar 0x55b71e222c48 '' 'const MyRewriterPattern &'
|   `-ReturnStmt 0x55b71e2234e8 <col:7>
|     `-UnaryOperator 0x55b71e2234d0 <col:7> 'MyRewriterPattern' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b71e2234c0 <col:7> 'MyRewriterPattern *' this
`-CXXMethodDecl 0x55b71e222cb8 <col:7> col:7 implicit operator= 'MyRewriterPattern &(MyRewriterPattern &&)' inline default trivial noexcept-unevaluated 0x55b71e222cb8
  `-ParmVarDecl 0x55b71e222dc8 <col:7> col:7 'MyRewriterPattern &&'

Layout: <CGRecordLayout
  LLVMType:%class.MyRewriterPattern = type <{ %class.IPAddress, i32, %class.IPAddress, i32, i32, i8, [3 x i8] }>
  NonVirtualBaseLLVMType:%class.MyRewriterPattern.base = type <{ %class.IPAddress, i32, %class.IPAddress, i32, i32, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e019608 <../elements/tcpudp/myrewriter.hh:243:1, line:254:1> line:243:7 referenced class MyInputSpec definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b71e019728 <col:1, col:7> col:7 implicit class MyInputSpec
|-AccessSpecDecl 0x55b71e0197b8 <line:244:1, col:7> col:1 public
|-FieldDecl 0x55b71e0197f8 <line:245:5, col:9> col:9 referenced kind 'int'
|-FieldDecl 0x55b71e019860 <line:246:5, col:9> col:9 referenced foutput 'int'
|-FieldDecl 0x55b71e0198c8 <line:247:5, col:9> col:9 doutput 'int'
|-FieldDecl 0x55b71e019928 <line:248:5, col:23> col:23 referenced pattern 'MyRewriterPattern'
|-FieldDecl 0x55b71e019990 <line:249:5, col:9> col:9 __placeholder 'int'
|-CXXMethodDecl 0x55b71e019f40 <line:251:5, line:253:84> line:251:9 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, WritablePacket *, HashMap<IPFlowID, MyIPRewriterEntry> *)'
| |-ParmVarDecl 0x55b71e0199f0 <col:24, col:40> col:40 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55b71e019a68 <line:252:24, col:34> col:34 rewritten_flowid 'IPFlowID &'
| |-ParmVarDecl 0x55b71e019ae0 <line:253:24, col:40> col:40 p 'WritablePacket *'
| `-ParmVarDecl 0x55b71e019dc8 <col:43, col:81> col:81 map 'HashMap<IPFlowID, MyIPRewriterEntry> *'
|-CXXConstructorDecl 0x55b71e221180 <line:243:7> col:7 implicit used MyInputSpec 'void () noexcept(false)' inline default
| |-CXXCtorInitializer Field 0x55b71e019928 'pattern' 'MyRewriterPattern'
| | `-CXXConstructExpr 0x55b71e2219b0 <col:7> 'MyRewriterPattern' 'void ()'
| `-CompoundStmt 0x55b71e221a08 <col:7>
|-CXXConstructorDecl 0x55b71e221698 <col:7> col:7 implicit constexpr MyInputSpec 'void (const MyInputSpec &)' inline default trivial noexcept-unevaluated 0x55b71e221698
| `-ParmVarDecl 0x55b71e221778 <col:7> col:7 'const MyInputSpec &'
`-CXXConstructorDecl 0x55b71e2217e8 <col:7> col:7 implicit constexpr MyInputSpec 'void (MyInputSpec &&)' inline default trivial noexcept-unevaluated 0x55b71e2217e8
  `-ParmVarDecl 0x55b71e2218f8 <col:7> col:7 'MyInputSpec &&'

Layout: <CGRecordLayout
  LLVMType:%class.MyInputSpec = type { i32, i32, i32, %class.MyRewriterPattern, i32 }
  NonVirtualBaseLLVMType:%class.MyInputSpec = type { i32, i32, i32, %class.MyRewriterPattern, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71de791d8 prev 0x55b71de6b620 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71de792d0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55b71de793c0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55b71de794e8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55b71de79668 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55b71de797e8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55b71de79968 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55b71de8e2b8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b71de8eb28 <col:11>
|-CXXDestructorDecl 0x55b71de8e390 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55b71de8e4c8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55b71de8e4c8
| `-ParmVarDecl 0x55b71de8e5d8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55b71de8e678 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b71de8e678
| `-ParmVarDecl 0x55b71de8e788 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55b71de914b8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71de915c8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55b71de91848 <col:11>
|   `-ReturnStmt 0x55b71de91838 <col:11>
|     `-UnaryOperator 0x55b71de91820 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b71de91810 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55b71de91638 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b71de91638
  `-ParmVarDecl 0x55b71de91748 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71de799d0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71de79ae8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55b71de79b88 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55b71de79bf0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55b71de79c58 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55b71de79cc0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55b71de79d20 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55b71de79de0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55b71de79e40 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55b71de79ea0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55b71de8e1c8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55b71de79b88 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55b71de8eb38 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55b71de8eb90 <col:12>
|-CXXConstructorDecl 0x55b71de8e7f8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55b71de8e7f8
| `-ParmVarDecl 0x55b71de8e908 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55b71de8e9a8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55b71de8e9a8
| `-ParmVarDecl 0x55b71de8eab8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55b71de90ba0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71de64cf0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71de64e78 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55b71de64f08 <col:16, col:22> col:16 public
|-EnumDecl 0x55b71de64f30 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55b71de65030 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55b71de65110 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de65010 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55b71de64ff0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55b71de650c0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55b71de65128 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71de650a0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55b71de65080 <col:22> 'int' 64
|-CXXMethodDecl 0x55b71de65468 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55b71de65150 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b71de651d0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55b71de65248 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b71de652c0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b71de65528 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55b71de65728 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55b71de655a0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55b71de65618 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b71de657d8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55b71de65938 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55b71de65848 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b71de659e0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55b71de65d10 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55b71de65ca0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55b71de65c40 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55b71de65c00 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55b71d92f4e0 'void'
|       |-PointerType 0x55b71dbe0ce0 'unsigned char *'
|       | `-BuiltinType 0x55b71d92f5e0 'unsigned char'
|       |-TypedefType 0x55b71d9dcfb0 'size_t' sugar
|       | |-Typedef 0x55b71d99fbe0 'size_t'
|       | `-BuiltinType 0x55b71d92f640 'unsigned long'
|       `-PointerType 0x55b71d92fce0 'void *'
|         `-BuiltinType 0x55b71d92f4e0 'void'
|-CXXMethodDecl 0x55b71de66188 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55b71de65d80 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55b71de65df8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b71de65e90 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55b71de65f10 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55b71de84720 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55b71de84708 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55b71de846d0 <col:58> 'int' 0
| |-ParmVarDecl 0x55b71de65f90 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55b71de84748 <col:76> 'int' 0
| |-ParmVarDecl 0x55b71de66010 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55b71de84768 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55b71de66258 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55b71de662d8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55b71de66398 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55b71de66438 <col:20>
| `-OptimizeNoneAttr 0x55b71de66490 <col:30>
|-CXXMethodDecl 0x55b71de66508 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55b71de665a8 <col:20>
| `-OptimizeNoneAttr 0x55b71de66600 <col:30>
|-CXXMethodDecl 0x55b71de66678 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55b71de66718 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55b71de667c8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55b71de66868 <col:20>
| |-OptimizeNoneAttr 0x55b71de668c0 <col:30>
| `-WarnUnusedResultAttr 0x55b71de668e8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55b71de66940 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55b71de669e0 <col:20>
| `-OptimizeNoneAttr 0x55b71de66a38 <col:30>
|-CXXMethodDecl 0x55b71de66a88 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55b71de66b28 <col:20>
| `-OptimizeNoneAttr 0x55b71de66b80 <col:30>
|-CXXMethodDecl 0x55b71de66bc8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55b71de66c68 <col:20>
| `-OptimizeNoneAttr 0x55b71de66cc0 <col:30>
|-CXXMethodDecl 0x55b71de66d08 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55b71de66dc8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55b71de66e90 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55b71de66f58 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55b71de67018 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b71de67138 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55b71de84830 <col:54, line:99:5>
|   `-ReturnStmt 0x55b71de84820 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55b71de84808 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55b71de847d8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55b71de835c8
|         `-CXXThisExpr 0x55b71de847c8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55b71de672d8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55b71de671e8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55b71de848e0 <col:67, line:103:5>
|   `-BinaryOperator 0x55b71de848c0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55b71de84858 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55b71de835c8
|     | `-CXXThisExpr 0x55b71de84848 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55b71de848a8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55b71de84888 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55b71de671e8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55b71de673d0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55b71de84960 <col:33, line:107:5>
|   `-ReturnStmt 0x55b71de84950 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55b71de84938 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55b71de84908 <col:16> 'void *' lvalue ->_destructor_argument 0x55b71de83630
|         `-CXXThisExpr 0x55b71de848f8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55b71de67490 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55b71de84f90 <col:25, line:113:5>
|   |-ParenExpr 0x55b71de84cd8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55b71de84ca8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55b71de84a18 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55b71de849f0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55b71de849b8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55b71de84988 <col:24> '<bound member function type>' ->shared 0x55b71de66508
|   |   |       `-ImplicitCastExpr 0x55b71de849d8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55b71de84978 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55b71de84a78 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71de84a58 <col:42> 'int' 0
|   |   `-CallExpr 0x55b71de84c08 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55b71de84bf0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71de84bd0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71de84c48 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de84ae8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55b71de84c60 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de84b10 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b71de84c78 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71de84b48 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55b71de84c90 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71de84bb8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71de84ba0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71de84b68 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55b71de84ed8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55b71de84d08 <col:2> 'unsigned char *' lvalue ->_head 0x55b71de79fe0
|   | | `-CXXThisExpr 0x55b71de84cf8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55b71de84ec0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55b71de84ea0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55b71de84d48 <col:10> 'unsigned char *' lvalue ->_data 0x55b71de7a048
|   |     | `-CXXThisExpr 0x55b71de84d38 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55b71de84e88 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55b71de84e68 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55b71de84d88 <col:18> 'unsigned char *' lvalue ->_tail 0x55b71de834a0
|   |         | `-CXXThisExpr 0x55b71de84d78 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55b71de84e50 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55b71de84e30 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55b71de84dc8 <col:26> 'unsigned char *' lvalue ->_end 0x55b71de83508
|   |             | `-CXXThisExpr 0x55b71de84db8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55b71de84e18 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55b71de84df8 <col:33> 'int' 0
|   `-BinaryOperator 0x55b71de84f70 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55b71de84f08 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55b71de835c8
|     | `-CXXThisExpr 0x55b71de84ef8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55b71de84f58 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55b71de84f38 <col:16> 'int' 0
|-CXXMethodDecl 0x55b71de675d0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55b71de67540 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b71de67678 <col:20>
| |-OptimizeNoneAttr 0x55b71de676d0 <col:30>
| `-WarnUnusedResultAttr 0x55b71de676f8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55b71de677c8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55b71de67738 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b71de67870 <col:20>
| |-OptimizeNoneAttr 0x55b71de678c8 <col:30>
| `-WarnUnusedResultAttr 0x55b71de678f0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55b71de67a28 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55b71de67930 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b71de67ad0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55b71de67bd0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55b71de67b40 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b71de67c78 <col:20>
| `-OptimizeNoneAttr 0x55b71de67cd0 <col:30>
|-CXXMethodDecl 0x55b71de67d98 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55b71de67d08 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b71de67e40 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55b71de67f40 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55b71de67eb0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b71de67fe8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55b71de680e8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55b71de68058 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b71de68190 <col:20>
| `-OptimizeNoneAttr 0x55b71de681e8 <col:30>
|-CXXMethodDecl 0x55b71de68378 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55b71de68228 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55b71de682a0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55b71de84788 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55b71de68428 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55b71de68628 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55b71de684a0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55b71de68518 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de68838 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55b71de686e8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b71de68760 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de68a48 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55b71de688f8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55b71de68978 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55b71de84798 <col:39> 'int' 0
|-CXXMethodDecl 0x55b71de68b18 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55b71de68be0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55b71de68ca8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b71de68d68 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b71de68e48 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55b71de68f90 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55b71de68f00 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55b71de69160 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55b71de69050 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55b71de690c8 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de69230 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55b71de692f0 <line:288:5, col:66> col:45 used has_network_header 'bool () const'
| |-NoInlineAttr 0x55b71de69390 <col:20>
| `-OptimizeNoneAttr 0x55b71de693e8 <col:30>
|-CXXMethodDecl 0x55b71de69438 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55b71de694d8 <col:20>
| `-OptimizeNoneAttr 0x55b71de69530 <col:30>
|-CXXMethodDecl 0x55b71de69580 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b71de69640 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b71de69708 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55b71de697a8 <col:20>
| `-OptimizeNoneAttr 0x55b71de69800 <col:30>
|-CXXMethodDecl 0x55b71de69950 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55b71de69840 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55b71de698b8 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de69aa0 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55b71de69a10 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de69b68 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55b71de69c28 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55b71de69cc8 <col:20>
| `-OptimizeNoneAttr 0x55b71de69d20 <col:30>
|-CXXMethodDecl 0x55b71de69d70 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55b71de69e10 <col:20>
| `-OptimizeNoneAttr 0x55b71de69e68 <col:30>
|-CXXMethodDecl 0x55b71de69eb8 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b71de69f80 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55b71de6a020 <col:20>
| `-OptimizeNoneAttr 0x55b71de6a078 <col:30>
|-CXXMethodDecl 0x55b71de6a0c0 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55b71de6a1d8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55b71de6a348 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55b71de6a288 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55b71de6a438 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55b71de6a4d8 <col:20>
| `-OptimizeNoneAttr 0x55b71de6a530 <col:30>
|-CXXMethodDecl 0x55b71de6a580 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b71de6a640 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b71de6a878 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55b71de6a6f0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55b71de6a768 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b71de6a928 <col:20>
| `-OptimizeNoneAttr 0x55b71de6a980 <col:30>
|-CXXMethodDecl 0x55b71de6aa28 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55b71de6aac8 <col:20>
| `-OptimizeNoneAttr 0x55b71de6ab20 <col:30>
|-CXXMethodDecl 0x55b71de6ab70 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55b71de6ac10 <col:20>
| `-OptimizeNoneAttr 0x55b71de6ac68 <col:30>
|-CXXMethodDecl 0x55b71de6acb0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55b71de6ad50 <col:20>
| `-OptimizeNoneAttr 0x55b71de6ada8 <col:30>
|-CXXMethodDecl 0x55b71de6aea8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55b71de6ade0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55b71de6af50 <col:20>
| `-OptimizeNoneAttr 0x55b71de6afa8 <col:30>
|-CXXMethodDecl 0x55b71de6b168 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55b71de6afe0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55b71de6b058 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b71de6b218 <col:20>
| `-OptimizeNoneAttr 0x55b71de6b270 <col:30>
|-CXXMethodDecl 0x55b71de6b318 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55b71de6b438 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55b71de6b558 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55b71de6b5f8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55b71de6b620 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55b71de6b748 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55b71de6b7e8 <col:20>
| `-OptimizeNoneAttr 0x55b71de6b840 <col:30>
|-CXXMethodDecl 0x55b71de6b8e8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55b71de6b988 <col:20>
| `-OptimizeNoneAttr 0x55b71de6b9e0 <col:30>
|-AccessSpecDecl 0x55b71de6ba08 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55b71de6ba30 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55b71de6bb30 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55b71de6bb80 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71de6bb10 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55b71de6baf0 <col:14> 'int' 48
|-CXXMethodDecl 0x55b71de6bbe8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55b71de6bc88 <col:20>
| `-OptimizeNoneAttr 0x55b71de6bce0 <col:30>
|-CXXMethodDecl 0x55b71de6bd58 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55b71de6bdf8 <col:20>
| `-OptimizeNoneAttr 0x55b71de6be50 <col:30>
|-CXXMethodDecl 0x55b71de6bf18 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55b71de6be88 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55b71de6c0b8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55b71de6c258 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55b71de6c168 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55b71de6c300 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55b71de6c400 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b71de6c7b0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de6c3e0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55b71de6c3c0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55b71de6c490 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b71de6c7c8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de6c470 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55b71de6c450 <col:14> 'int' 1
| |-EnumConstantDecl 0x55b71de6c520 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b71de6c7e0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de6c500 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55b71de6c4e0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55b71de6c5b0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b71de6c7f8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de6c590 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55b71de6c570 <col:14> 'int' 3
| |-EnumConstantDecl 0x55b71de6c640 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b71de6c810 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de6c620 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55b71de6c600 <col:13> 'int' 4
| |-EnumConstantDecl 0x55b71de6c6d0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b71de6c828 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de6c6b0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55b71de6c690 <col:13> 'int' 5
| `-EnumConstantDecl 0x55b71de6c760 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55b71de6c840 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71de6c740 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55b71de6c720 <col:14> 'int' 6
|-CXXMethodDecl 0x55b71de6c8a8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55b71de6c948 <col:20>
| `-OptimizeNoneAttr 0x55b71de6c9a0 <col:30>
|-CXXMethodDecl 0x55b71de6ca98 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55b71de6c9d8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55b71de6cb40 <col:20>
| `-OptimizeNoneAttr 0x55b71de6cb98 <col:30>
|-CXXMethodDecl 0x55b71de6cc08 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55b71de6cd30 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55b71de6cef8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55b71de6ce30 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55b71de6cfc0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55b71de6d088 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55b71de6d1c8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55b71de6d138 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55b71de6d270 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55b71de6d370 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55b71de6d570 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de6d350 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55b71de6d330 <col:23> 'int' 0
| |-EnumConstantDecl 0x55b71de6d400 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55b71de6d588 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de6d3e0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55b71de6d3c0 <col:45> 'int' 4
| |-EnumConstantDecl 0x55b71de6d490 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55b71de6d5a0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de6d470 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55b71de6d450 <col:24> 'int' 0
| `-EnumConstantDecl 0x55b71de6d520 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55b71de6d5b8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71de6d500 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55b71de6d4e0 <col:47> 'int' 16
|-CXXMethodDecl 0x55b71de6d618 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55b71de6d788 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55b71de6d6c8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55b71de6d830 <col:20>
| `-OptimizeNoneAttr 0x55b71de6d888 <col:30>
|-CXXMethodDecl 0x55b71de6d8d8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55b71de850b0 <col:18, col:36>
|   `-ReturnStmt 0x55b71de850a0 <col:20, col:33>
|     `-ImplicitCastExpr 0x55b71de85088 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55b71de85068 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55b71de85038 <col:27> '<bound member function type>' ->xanno 0x55b71de6b8e8
|           `-CXXThisExpr 0x55b71de85028 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55b71de6d9d0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55b71de851c0 <col:30, col:48>
|   `-ReturnStmt 0x55b71de851b0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55b71de85198 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55b71de85178 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55b71de85148 <col:39> '<bound member function type>' ->xanno 0x55b71de6b748
|           `-CXXThisExpr 0x55b71de85138 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55b71de6dab8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55b71de85358 <col:24, col:50>
|   `-ReturnStmt 0x55b71de85348 <col:26, col:47>
|     `-UnaryOperator 0x55b71de85330 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b71de85310 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55b71de852f8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b71de852a8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55b71de794e8
|         |   `-CXXMemberCallExpr 0x55b71de85288 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55b71de85258 <col:34> '<bound member function type>' ->xanno 0x55b71de6b8e8
|         |       `-CXXThisExpr 0x55b71de85248 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55b71de852d8 <col:46> 'int' 0
|-CXXMethodDecl 0x55b71de6dba8 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55b71de85528 <col:36, col:62>
|   `-ReturnStmt 0x55b71de85518 <col:38, col:59>
|     `-UnaryOperator 0x55b71de85500 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b71de854e0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55b71de854c8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b71de85440 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55b71de794e8
|         |   `-CXXMemberCallExpr 0x55b71de85420 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55b71de853f0 <col:46> '<bound member function type>' ->xanno 0x55b71de6b748
|         |       `-CXXThisExpr 0x55b71de853e0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55b71de85470 <col:58> 'int' 0
|-CXXMethodDecl 0x55b71de6dcc8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55b71de856c0 <col:26, col:53>
|   `-ReturnStmt 0x55b71de856b0 <col:28, col:50>
|     `-UnaryOperator 0x55b71de85698 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b71de85678 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55b71de85660 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b71de85610 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55b71de797e8
|         |   `-CXXMemberCallExpr 0x55b71de855f0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55b71de855c0 <col:36> '<bound member function type>' ->xanno 0x55b71de6b8e8
|         |       `-CXXThisExpr 0x55b71de855b0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55b71de85640 <col:49> 'int' 0
|-CXXMethodDecl 0x55b71de6dde8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55b71de85898 <col:38, col:65>
|   `-ReturnStmt 0x55b71de85888 <col:40, col:62>
|     `-UnaryOperator 0x55b71de85870 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b71de85850 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55b71de85838 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b71de857a8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55b71de797e8
|         |   `-CXXMemberCallExpr 0x55b71de85788 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55b71de85758 <col:48> '<bound member function type>' ->xanno 0x55b71de6b748
|         |       `-CXXThisExpr 0x55b71de85748 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55b71de857d8 <col:61> 'int' 0
|-CXXMethodDecl 0x55b71de6df98 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55b71de6dea0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55b71de85f68 <col:34, line:463:5>
|   |-ParenExpr 0x55b71de85db0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55b71de85d80 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55b71de859e8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71de859b8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b71de85908 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b71de858f0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b71de858b0 <col:23> 'int' lvalue ParmVar 0x55b71de6dea0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b71de858d0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b71de85998 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b71de85968 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b71de85928 <col:33> 'int' lvalue ParmVar 0x55b71de6dea0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55b71de85980 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55b71de85948 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b71de6bb30 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55b71de85a48 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71de85a28 <col:56> 'int' 0
|   |   `-CallExpr 0x55b71de85ce0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55b71de85cc8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71de85ca8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71de85d20 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de85b38 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55b71de85d38 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de85b68 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b71de85d50 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71de85ba0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55b71de85d68 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71de85c90 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71de85c78 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71de85c38 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55b71de85f58 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55b71de85f40 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55b71de85f20 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55b71de85ef0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b71de85ea0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55b71de794e8
|         |   `-CXXMemberCallExpr 0x55b71de85e80 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55b71de85e50 <col:9> '<bound member function type>' ->xanno 0x55b71de6b748
|         |       `-CXXThisExpr 0x55b71de85e40 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55b71de85f08 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55b71de85ed0 <col:21> 'int' lvalue ParmVar 0x55b71de6dea0 'i' 'int'
|-CXXMethodDecl 0x55b71de6e1e8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55b71de6e058 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55b71de6e0d0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55b71de865f8 <col:40, line:472:5>
|   |-ParenExpr 0x55b71de86410 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55b71de863e0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55b71de860c0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71de86090 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b71de85fe0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b71de85fc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b71de85f88 <col:23> 'int' lvalue ParmVar 0x55b71de6e058 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b71de85fa8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b71de86070 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b71de86040 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b71de86000 <col:33> 'int' lvalue ParmVar 0x55b71de6e058 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55b71de86058 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55b71de86020 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b71de6bb30 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55b71de86120 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71de86100 <col:56> 'int' 0
|   |   `-CallExpr 0x55b71de86340 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55b71de86328 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71de86308 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71de86380 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de86190 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55b71de86398 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de861c0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b71de863b0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71de861f8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55b71de863c8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71de862f0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71de862d8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71de86298 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55b71de865d8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55b71de86580 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55b71de86550 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55b71de86500 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55b71de794e8
|     | |   `-CXXMemberCallExpr 0x55b71de864e0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55b71de864b0 <col:2> '<bound member function type>' ->xanno 0x55b71de6b8e8
|     | |       `-CXXThisExpr 0x55b71de864a0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55b71de86568 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55b71de86530 <col:14> 'int' lvalue ParmVar 0x55b71de6e058 'i' 'int'
|     `-ImplicitCastExpr 0x55b71de865c0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55b71de865a0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55b71de6e0d0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55b71de6e3a8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55b71de6e2b0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55b71de86d78 <col:36, line:485:5>
|   |-ParenExpr 0x55b71de86ae0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b71de86ab0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b71de86790 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71de86760 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b71de86670 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b71de86658 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b71de86618 <col:23> 'int' lvalue ParmVar 0x55b71de6e2b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b71de86638 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b71de86740 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b71de86728 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b71de86690 <col:33> 'int' lvalue ParmVar 0x55b71de6e2b0 'i' 'int'
|   |   |     `-BinaryOperator 0x55b71de86708 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b71de866f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b71de866b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b71de6bb30 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b71de866d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b71de867f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71de867d0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b71de86a10 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b71de869f8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71de869d8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71de86a50 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de86860 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b71de86a68 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de86898 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b71de86a80 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71de868d0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55b71de86a98 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71de869c0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71de869a8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71de86968 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55b71de86d68 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55b71de86d50 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55b71de86d38 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b71de86d08 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55b71de86ca8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b71de86c78 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b71de86bf0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55b71de793c0
|             |   `-CXXMemberCallExpr 0x55b71de86bd0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b71de86ba0 <col:61> '<bound member function type>' ->xanno 0x55b71de6b748
|             |       `-CXXThisExpr 0x55b71de86b90 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b71de86c90 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b71de86c20 <col:74> 'int' lvalue ParmVar 0x55b71de6e2b0 'i' 'int'
|-CXXMethodDecl 0x55b71de6e5f8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55b71de6e468 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b71de6e4e0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55b71de874e8 <col:42, line:500:5>
|   |-ParenExpr 0x55b71de87260 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b71de87230 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b71de86f10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71de86ee0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b71de86df0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b71de86dd8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b71de86d98 <col:23> 'int' lvalue ParmVar 0x55b71de6e468 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b71de86db8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b71de86ec0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b71de86ea8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b71de86e10 <col:33> 'int' lvalue ParmVar 0x55b71de6e468 'i' 'int'
|   |   |     `-BinaryOperator 0x55b71de86e88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b71de86e70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b71de86e30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b71de6bb30 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b71de86e50 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b71de86f70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71de86f50 <col:60> 'int' 0
|   |   `-CallExpr 0x55b71de87190 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b71de87178 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71de87158 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71de871d0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de86fe0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b71de871e8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de87018 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b71de87200 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71de87050 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55b71de87218 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71de87140 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71de87128 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71de870e8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55b71de874c8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55b71de87458 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b71de87428 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55b71de873d0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b71de873a0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b71de87350 <col:48, col:57> 'char [48]' lvalue ->c 0x55b71de793c0
|     |     |   `-CXXMemberCallExpr 0x55b71de87330 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b71de87300 <col:48> '<bound member function type>' ->xanno 0x55b71de6b8e8
|     |     |       `-CXXThisExpr 0x55b71de872f0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b71de873b8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b71de87380 <col:61> 'int' lvalue ParmVar 0x55b71de6e468 'i' 'int'
|     `-ImplicitCastExpr 0x55b71de874b0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55b71de87470 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55b71de6e4e0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55b71de6e7b8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55b71de6e6c0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55b71de87c48 <col:35, line:513:5>
|   |-ParenExpr 0x55b71de87958 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b71de87928 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b71de87680 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71de87650 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b71de87560 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b71de87548 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b71de87508 <col:23> 'int' lvalue ParmVar 0x55b71de6e6c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b71de87528 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b71de87630 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b71de87618 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b71de87580 <col:33> 'int' lvalue ParmVar 0x55b71de6e6c0 'i' 'int'
|   |   |     `-BinaryOperator 0x55b71de875f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b71de875e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b71de875a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b71de6bb30 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b71de875c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b71de876e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71de876c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b71de87888 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b71de87870 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71de87850 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71de878c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de87750 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b71de878e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de87788 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b71de878f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71de877c0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55b71de87910 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71de87838 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71de87820 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71de877e0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55b71de87c38 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55b71de87c20 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55b71de87c08 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b71de87bd8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55b71de87b50 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b71de87b20 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b71de87ad0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55b71de793c0
|             |   `-CXXMemberCallExpr 0x55b71de87ab0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b71de87a80 <col:60> '<bound member function type>' ->xanno 0x55b71de6b748
|             |       `-CXXThisExpr 0x55b71de87a70 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b71de87b38 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b71de87b00 <col:73> 'int' lvalue ParmVar 0x55b71de6e6c0 'i' 'int'
|-CXXMethodDecl 0x55b71de6ea08 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55b71de6e878 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b71de6e8f0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55b71de88358 <col:41, line:528:5>
|   |-ParenExpr 0x55b71de880f0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b71de880c0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b71de87de0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71de87db0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b71de87cc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b71de87ca8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b71de87c68 <col:23> 'int' lvalue ParmVar 0x55b71de6e878 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b71de87c88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b71de87d90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b71de87d78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b71de87ce0 <col:33> 'int' lvalue ParmVar 0x55b71de6e878 'i' 'int'
|   |   |     `-BinaryOperator 0x55b71de87d58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b71de87d40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b71de87d00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b71de6bb30 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b71de87d20 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b71de87e40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71de87e20 <col:60> 'int' 0
|   |   `-CallExpr 0x55b71de88020 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b71de88008 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71de87fe8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71de88060 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de87eb0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b71de88078 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de87ee8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b71de88090 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71de87f20 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55b71de880a8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71de87fd0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71de87fb8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71de87f78 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55b71de88338 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55b71de882e8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b71de882b8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55b71de88260 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b71de88230 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b71de881e0 <col:47, col:56> 'char [48]' lvalue ->c 0x55b71de793c0
|     |     |   `-CXXMemberCallExpr 0x55b71de881c0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b71de88190 <col:47> '<bound member function type>' ->xanno 0x55b71de6b8e8
|     |     |       `-CXXThisExpr 0x55b71de88180 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b71de88248 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b71de88210 <col:60> 'int' lvalue ParmVar 0x55b71de6e878 'i' 'int'
|     `-ImplicitCastExpr 0x55b71de88320 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55b71de88300 <col:65> 'int16_t':'short' lvalue ParmVar 0x55b71de6e8f0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55b71de6ebc8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55b71de6ead0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55b71de88a28 <col:36, line:541:5>
|   |-ParenExpr 0x55b71de887c8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b71de88798 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b71de884f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71de884c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b71de883d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b71de883b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b71de88378 <col:23> 'int' lvalue ParmVar 0x55b71de6ead0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b71de88398 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b71de884a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b71de88488 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b71de883f0 <col:33> 'int' lvalue ParmVar 0x55b71de6ead0 'i' 'int'
|   |   |     `-BinaryOperator 0x55b71de88468 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b71de88450 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b71de88410 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b71de6bb30 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b71de88430 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55b71de88550 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71de88530 <col:60> 'int' 0
|   |   `-CallExpr 0x55b71de886f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b71de886e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71de886c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71de88738 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de885c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55b71de88750 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de885f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b71de88768 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71de88630 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55b71de88780 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71de886a8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71de88690 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71de88650 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55b71de88a18 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55b71de88a00 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55b71de889e8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b71de889b8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55b71de88960 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b71de88930 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b71de888e0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55b71de793c0
|             |   `-CXXMemberCallExpr 0x55b71de888c0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b71de88890 <col:61> '<bound member function type>' ->xanno 0x55b71de6b748
|             |       `-CXXThisExpr 0x55b71de88880 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b71de88948 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b71de88910 <col:74> 'int' lvalue ParmVar 0x55b71de6ead0 'i' 'int'
|-CXXMethodDecl 0x55b71de6ed98 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55b71de6ec88 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55b71de6ed00 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b71de6ee48 <col:20>
| `-OptimizeNoneAttr 0x55b71de6eea0 <col:30>
|-CXXMethodDecl 0x55b71de6efd8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55b71de6eee0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55b71de890f8 <col:35, line:562:5>
|   |-ParenExpr 0x55b71de88e98 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b71de88e68 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b71de88bc0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71de88b90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b71de88aa0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b71de88a88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b71de88a48 <col:23> 'int' lvalue ParmVar 0x55b71de6eee0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b71de88a68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b71de88b70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b71de88b58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b71de88ac0 <col:33> 'int' lvalue ParmVar 0x55b71de6eee0 'i' 'int'
|   |   |     `-BinaryOperator 0x55b71de88b38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b71de88b20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b71de88ae0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b71de6bb30 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b71de88b00 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55b71de88c20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71de88c00 <col:60> 'int' 0
|   |   `-CallExpr 0x55b71de88dc8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b71de88db0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71de88d90 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71de88e08 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de88c90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55b71de88e20 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de88cc8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b71de88e38 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71de88d00 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55b71de88e50 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71de88d78 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71de88d60 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71de88d20 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55b71de890e8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55b71de890d0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55b71de890b8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b71de89088 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55b71de89030 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b71de89000 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b71de88fb0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55b71de793c0
|             |   `-CXXMemberCallExpr 0x55b71de88f90 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b71de88f60 <col:60> '<bound member function type>' ->xanno 0x55b71de6b748
|             |       `-CXXThisExpr 0x55b71de88f50 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b71de89018 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b71de88fe0 <col:73> 'int' lvalue ParmVar 0x55b71de6eee0 'i' 'int'
|-CXXMethodDecl 0x55b71de6f1e8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55b71de6f098 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b71de6f110 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55b71de897d8 <col:41, line:577:5>
|   |-ParenExpr 0x55b71de89568 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b71de89538 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b71de89290 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71de89260 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b71de89170 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b71de89158 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b71de89118 <col:23> 'int' lvalue ParmVar 0x55b71de6f098 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b71de89138 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b71de89240 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b71de89228 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b71de89190 <col:33> 'int' lvalue ParmVar 0x55b71de6f098 'i' 'int'
|   |   |     `-BinaryOperator 0x55b71de89208 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b71de891f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b71de891b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b71de6bb30 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b71de891d0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55b71de892f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71de892d0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b71de89498 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b71de89480 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71de89460 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71de894d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de89360 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55b71de894f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de89398 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b71de89508 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71de893d0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55b71de89520 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71de89448 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71de89430 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71de893f0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55b71de897b8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55b71de89768 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b71de89738 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55b71de896d8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b71de896a8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b71de89658 <col:47, col:56> 'char [48]' lvalue ->c 0x55b71de793c0
|     |     |   `-CXXMemberCallExpr 0x55b71de89638 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b71de89608 <col:47> '<bound member function type>' ->xanno 0x55b71de6b8e8
|     |     |       `-CXXThisExpr 0x55b71de895f8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b71de896c0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b71de89688 <col:60> 'int' lvalue ParmVar 0x55b71de6f098 'i' 'int'
|     `-ImplicitCastExpr 0x55b71de897a0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55b71de89780 <col:65> 'int32_t':'int' lvalue ParmVar 0x55b71de6f110 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55b71de6f3a8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55b71de6f2b0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55b71de89f08 <col:36, line:591:5>
|   |-ParenExpr 0x55b71de89c48 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b71de89c18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b71de89970 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71de89940 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b71de89850 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b71de89838 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b71de897f8 <col:23> 'int' lvalue ParmVar 0x55b71de6f2b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b71de89818 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b71de89920 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b71de89908 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b71de89870 <col:33> 'int' lvalue ParmVar 0x55b71de6f2b0 'i' 'int'
|   |   |     `-BinaryOperator 0x55b71de898e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b71de898d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b71de89890 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b71de6bb30 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b71de898b0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55b71de899d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71de899b0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b71de89b78 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b71de89b60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71de89b40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71de89bb8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de89a40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55b71de89bd0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de89a78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b71de89be8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71de89ab0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55b71de89c00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71de89b28 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71de89b10 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71de89ad0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55b71de89ef8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55b71de89ee0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55b71de89ec8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b71de89e98 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55b71de89e10 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b71de89de0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b71de89d90 <col:61, col:70> 'char const[48]' lvalue ->c 0x55b71de793c0
|             |   `-CXXMemberCallExpr 0x55b71de89d70 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b71de89d40 <col:61> '<bound member function type>' ->xanno 0x55b71de6b748
|             |       `-CXXThisExpr 0x55b71de89d30 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b71de89df8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b71de89dc0 <col:74> 'int' lvalue ParmVar 0x55b71de6f2b0 'i' 'int'
|-CXXMethodDecl 0x55b71de6f5f8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55b71de6f468 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b71de6f4e0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55b71de8a5e8 <col:42, line:606:5>
|   |-ParenExpr 0x55b71de8a378 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b71de8a348 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b71de8a0a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71de8a070 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b71de89f80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b71de89f68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b71de89f28 <col:23> 'int' lvalue ParmVar 0x55b71de6f468 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b71de89f48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b71de8a050 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b71de8a038 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b71de89fa0 <col:33> 'int' lvalue ParmVar 0x55b71de6f468 'i' 'int'
|   |   |     `-BinaryOperator 0x55b71de8a018 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b71de8a000 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b71de89fc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b71de6bb30 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b71de89fe0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55b71de8a100 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71de8a0e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b71de8a2a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b71de8a290 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71de8a270 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71de8a2e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de8a170 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55b71de8a300 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de8a1a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b71de8a318 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71de8a1e0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55b71de8a330 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71de8a258 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71de8a240 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71de8a200 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55b71de8a5c8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55b71de8a578 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b71de8a548 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55b71de8a4e8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b71de8a4b8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b71de8a468 <col:48, col:57> 'char [48]' lvalue ->c 0x55b71de793c0
|     |     |   `-CXXMemberCallExpr 0x55b71de8a448 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b71de8a418 <col:48> '<bound member function type>' ->xanno 0x55b71de6b8e8
|     |     |       `-CXXThisExpr 0x55b71de8a408 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b71de8a4d0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b71de8a498 <col:61> 'int' lvalue ParmVar 0x55b71de6f468 'i' 'int'
|     `-ImplicitCastExpr 0x55b71de8a5b0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55b71de8a590 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55b71de6f4e0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55b71de6f790 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55b71de6f6c0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55b71de8ae58 <col:33, line:620:5>
|   |-ParenExpr 0x55b71de8abd0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55b71de8aba0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55b71de8a7f0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71de8a7c0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b71de8a660 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b71de8a648 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b71de8a608 <col:23> 'int' lvalue ParmVar 0x55b71de6f6c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b71de8a628 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b71de8a7a0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55b71de8a788 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b71de8a680 <col:33> 'int' lvalue ParmVar 0x55b71de6f6c0 'i' 'int'
|   |   |     `-BinaryOperator 0x55b71de8a768 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b71de8a750 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b71de8a6a0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b71de6bb30 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55b71de8a728 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55b71de8a710 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55b71de8a6d8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55b71de8a850 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71de8a830 <col:79> 'int' 0
|   |   `-CallExpr 0x55b71de8ab00 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55b71de8aae8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71de8aac8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71de8ab40 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de8a938 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55b71de8ab58 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de8a980 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b71de8ab70 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71de8a9b8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55b71de8ab88 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71de8aab0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71de8aa98 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71de8aa58 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55b71de8ae48 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55b71de8ae30 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55b71de8ae18 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b71de8ade8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55b71de8ad60 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b71de8ad30 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b71de8ace0 <col:67, col:76> 'char const[48]' lvalue ->c 0x55b71de793c0
|             |   `-CXXMemberCallExpr 0x55b71de8acc0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b71de8ac90 <col:67> '<bound member function type>' ->xanno 0x55b71de6b748
|             |       `-CXXThisExpr 0x55b71de8ac80 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b71de8ad48 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b71de8ad10 <col:80> 'int' lvalue ParmVar 0x55b71de6f6c0 'i' 'int'
|-CXXMethodDecl 0x55b71de6f9a8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55b71de6f850 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b71de6f8d0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55b71de8e0b0 <col:45, line:635:5>
|   |-ParenExpr 0x55b71de8b3c8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55b71de8b398 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55b71de8b060 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b71de8b030 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b71de8aed0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b71de8aeb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b71de8ae78 <col:23> 'int' lvalue ParmVar 0x55b71de6f850 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b71de8ae98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b71de8b010 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55b71de8aff8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b71de8aef0 <col:33> 'int' lvalue ParmVar 0x55b71de6f850 'i' 'int'
|   |   |     `-BinaryOperator 0x55b71de8afd8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b71de8afc0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b71de8af10 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b71de6bb30 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55b71de8af98 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55b71de8af80 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55b71de8af48 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55b71de8b0c0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b71de8b0a0 <col:79> 'int' 0
|   |   `-CallExpr 0x55b71de8b2f8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55b71de8b2e0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b71de8b2c0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b71d9d3d10 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b71de8b338 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de8b130 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55b71de8b350 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b71de8b178 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b71de8b368 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b71de8b1b0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55b71de8b380 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b71de8b2a8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b71de8b290 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b71de8b248 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55b71de8e090 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55b71de8dff8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b71de8dfc8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55b71de8df70 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b71de8df40 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b71de8def0 <col:54, col:63> 'char [48]' lvalue ->c 0x55b71de793c0
|     |     |   `-CXXMemberCallExpr 0x55b71de8ded0 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b71de8b468 <col:54> '<bound member function type>' ->xanno 0x55b71de6b8e8
|     |     |       `-CXXThisExpr 0x55b71de8b458 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b71de8df58 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b71de8df20 <col:67> 'int' lvalue ParmVar 0x55b71de6f850 'i' 'int'
|     `-CXXConstCastExpr 0x55b71de8e060 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55b71de8e048 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55b71de8e010 <col:91> 'const void *' lvalue ParmVar 0x55b71de6f8d0 'x' 'const void *'
|-CXXMethodDecl 0x55b71de6fa78 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55b71de8e138 <col:34, line:640:5>
|   `-ReturnStmt 0x55b71de8e128 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55b71de8e110 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55b71de8e0e0 <col:16> 'Packet *' lvalue ->_data_packet 0x55b71de79f78
|         `-CXXThisExpr 0x55b71de8e0d0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55b71de6fbb8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55b71de6fb28 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b71de847b8 <col:46> 'bool' true
|-CXXMethodDecl 0x55b71de6fd38 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55b71de6fc70 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55b71de6fde0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55b71de70590 <line:660:22> "" ""
| |-EnumConstantDecl 0x55b71de6fee0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b71de70600 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de6fec0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55b71de6fea0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55b71de65030 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55b71de6ff70 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b71de70618 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de6ff50 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55b71de6ff30 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55b71de650c0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55b71de70000 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b71de70630 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de6ffe0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55b71de6ffc0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55b71de70090 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b71de70648 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de70070 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55b71de70050 <col:19> 'int' 16
| |-EnumConstantDecl 0x55b71de70120 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b71de70660 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de70100 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55b71de700e0 <col:21> 'int' 16
| |-EnumConstantDecl 0x55b71de701b0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b71de70678 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de70190 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55b71de70170 <col:19> 'int' 32
| |-EnumConstantDecl 0x55b71de70240 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b71de70690 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de70220 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55b71de70200 <col:19> 'int' EnumConstant 0x55b71de70090 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55b71de702d0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b71de706a8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de702b0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55b71de70290 <col:19> 'int' EnumConstant 0x55b71de701b0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55b71de703a0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b71de706c0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de70380 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55b71de70360 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55b71de70320 <col:23> 'int' EnumConstant 0x55b71de702d0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55b71de70340 <col:40> 'int' 2
| |-EnumConstantDecl 0x55b71de70470 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b71de706d8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71de70450 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55b71de70430 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55b71de703f0 <col:23> 'int' EnumConstant 0x55b71de702d0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55b71de70410 <col:40> 'int' 4
| `-EnumConstantDecl 0x55b71de70540 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55b71de706f0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71de70520 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55b71de70500 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55b71de704c0 <col:23> 'int' EnumConstant 0x55b71de702d0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55b71de704e0 <col:40> 'int' 8
|-CXXMethodDecl 0x55b71de70730 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55b71de707d0 <col:68> "" ""
|-CXXMethodDecl 0x55b71de70868 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55b71de70908 <col:45> "" ""
|-CXXMethodDecl 0x55b71de709a0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55b71de70a40 <col:57> "" ""
|-CXXMethodDecl 0x55b71de70ad8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55b71de70b78 <col:45> "" ""
|-CXXMethodDecl 0x55b71de70c10 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55b71de70cb0 <col:57> "" ""
|-CXXMethodDecl 0x55b71de70d40 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55b71de70de0 <col:51> "" ""
|-CXXMethodDecl 0x55b71de76130 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55b71de761d0 <col:63> "" ""
|-CXXMethodDecl 0x55b71de76260 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55b71de76300 <col:53> "" ""
|-CXXMethodDecl 0x55b71de76390 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55b71de76430 <col:65> "" ""
|-CXXMethodDecl 0x55b71de76548 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55b71de764b8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55b71de765f0 <col:61> "" ""
|-CXXMethodDecl 0x55b71de76788 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55b71de76678 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55b71de766f0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55b71de76838 <col:67> "" ""
|-CXXMethodDecl 0x55b71de76950 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55b71de768c0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55b71de769f8 <col:63> "" ""
|-CXXMethodDecl 0x55b71de76b90 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55b71de76a80 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b71de76af8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55b71de76c40 <col:69> "" ""
|-CXXMethodDecl 0x55b71de76d58 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55b71de76cc8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55b71de76e00 <col:63> "" ""
|-CXXMethodDecl 0x55b71de76f98 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55b71de76e88 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b71de76f00 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b71de77048 <col:69> "" ""
|-CXXMethodDecl 0x55b71de77160 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55b71de770d0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55b71de77208 <col:62> "" ""
|-CXXMethodDecl 0x55b71de773a0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55b71de77290 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b71de77308 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55b71de77450 <col:68> "" ""
|-CXXMethodDecl 0x55b71de77568 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55b71de774d8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55b71de77610 <col:63> "" ""
|-CXXMethodDecl 0x55b71de777a8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55b71de77698 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b71de77710 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55b71de77858 <col:69> "" ""
|-CXXMethodDecl 0x55b71de778e8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55b71de77988 <col:64> "" ""
|-CXXMethodDecl 0x55b71de77a18 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55b71de77ab8 <col:52> "" ""
|-CXXMethodDecl 0x55b71de77b48 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55b71de77be8 <col:67> "" ""
|-CXXMethodDecl 0x55b71de77c78 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55b71de77d18 <col:55> "" ""
|-CXXMethodDecl 0x55b71de77e30 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55b71de77da0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55b71de77ed8 <col:58> "" ""
|-CXXMethodDecl 0x55b71de78070 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55b71de77f60 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b71de77fd8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55b71de78120 <col:62> "" ""
|-CXXMethodDecl 0x55b71de78238 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55b71de781a8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55b71de782e0 <col:58> "" ""
|-CXXMethodDecl 0x55b71de78478 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55b71de78368 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b71de783e0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55b71de78528 <col:62> "" ""
|-CXXMethodDecl 0x55b71de78640 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55b71de785b0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55b71de786e8 <col:60> "" ""
|-CXXMethodDecl 0x55b71de78880 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55b71de78770 <col:34> col:37 'int'
| |-ParmVarDecl 0x55b71de787e8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55b71de78930 <col:64> "" ""
|-CXXMethodDecl 0x55b71de78a48 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55b71de789b8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55b71de78af0 <col:58> "" ""
|-CXXMethodDecl 0x55b71de78c88 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55b71de78b78 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b71de78bf0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55b71de78d38 <col:62> "" ""
|-CXXMethodDecl 0x55b71de78e50 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55b71de78dc0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55b71de78ef8 <col:59> "" ""
|-CXXMethodDecl 0x55b71de79090 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55b71de78f80 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b71de78ff8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b71de79140 <col:63> "" ""
|-AccessSpecDecl 0x55b71de791b0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55b71de791d8 prev 0x55b71de6b620 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b71de792d0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55b71de793c0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55b71de794e8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55b71de79668 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55b71de797e8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55b71de79968 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55b71de8e2b8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55b71de8eb28 <col:11>
| |-CXXDestructorDecl 0x55b71de8e390 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55b71de8e4c8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55b71de8e4c8
| | `-ParmVarDecl 0x55b71de8e5d8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55b71de8e678 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b71de8e678
| | `-ParmVarDecl 0x55b71de8e788 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55b71de914b8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b71de915c8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55b71de91848 <col:11>
| |   `-ReturnStmt 0x55b71de91838 <col:11>
| |     `-UnaryOperator 0x55b71de91820 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55b71de91810 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55b71de91638 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b71de91638
|   `-ParmVarDecl 0x55b71de91748 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55b71de799d0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b71de79ae8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55b71de79b88 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55b71de79bf0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55b71de79c58 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55b71de79cc0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55b71de79d20 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55b71de79de0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55b71de79e40 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55b71de79ea0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55b71de8e1c8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55b71de79b88 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55b71de8eb38 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55b71de8eb90 <col:12>
| |-CXXConstructorDecl 0x55b71de8e7f8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55b71de8e7f8
| | `-ParmVarDecl 0x55b71de8e908 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55b71de8e9a8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55b71de8e9a8
| | `-ParmVarDecl 0x55b71de8eab8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55b71de90ba0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55b71de79f18 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55b71de79f78 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55b71de79fe0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55b71de7a048 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55b71de834a0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55b71de83508 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55b71de83568 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55b71de835c8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55b71de83630 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55b71de836b8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55b71de79f18 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55b71de8e160 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55b71de83568 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55b71de8eba0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55b71de8ec00 <col:21, line:755:5>
|-CXXConstructorDecl 0x55b71de83858 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55b71de83798 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55b71de83950 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55b71de83b38 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55b71de83a40 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55b71de83e08 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55b71de83bf0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b71de83c68 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b71de83ce0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de84028 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55b71de83ed8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55b71de83f50 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55b71de842f8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55b71de840e8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55b71de84160 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55b71de841d8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55b71de84450 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55b71de843c0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de84598 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55b71de84508 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55b71de84690 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71de8ec10 prev 0x55b71de64c40 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x55b71de8ed48 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x55b71de8edd8 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x55b71de8ee80 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x55b71de8ef20 <col:20>
| `-OptimizeNoneAttr 0x55b71de8ef78 <col:30>
|-CXXMethodDecl 0x55b71de8efc8 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x55b71de8f068 <col:20>
| `-OptimizeNoneAttr 0x55b71de8f0c0 <col:30>
|-CXXMethodDecl 0x55b71de8f110 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55b71de8f1d8 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55b71de8f2a0 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55b71de8f3b8 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x55b71de8f480 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x55b71de8f520 <col:20>
| `-OptimizeNoneAttr 0x55b71de8f578 <col:30>
|-CXXMethodDecl 0x55b71de8f5e8 <line:787:5, col:62> col:50 used ip_header 'click_ip *() const'
| |-NoInlineAttr 0x55b71de8f688 <col:20>
| `-OptimizeNoneAttr 0x55b71de8f6e0 <col:30>
|-CXXMethodDecl 0x55b71de8f788 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x55b71de8f828 <col:20>
| `-OptimizeNoneAttr 0x55b71de8f880 <col:30>
|-CXXMethodDecl 0x55b71de8f8d0 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55b71de8f9e8 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x55b71de8fb08 <line:791:5, col:36> col:23 used tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x55b71de8fc28 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x55b71de8fcf0 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x55b71de8fd90 <col:62> "" ""
|-AccessSpecDecl 0x55b71de8fe00 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x55b71de8fe60 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x55b71de90a58 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x55b71de90c80 <col:29, col:31>
|-CXXMethodDecl 0x55b71de8ff28 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x55b71de90068 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x55b71de8ffd8 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x55b71de90160 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x55b71de90c90 <col:23, col:25>
|-CXXMethodDecl 0x55b71de90318 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x55b71de90250 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x55b71de905e8 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55b71de903d0 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b71de90448 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b71de904c0 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71de90778 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x55b71de906b0 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x55b71de90870 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x55b71de908d8 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x55b71de908d8
  `-ParmVarDecl 0x55b71de909e8 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dbcf188 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71dbcf2a8 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x55b71dbcf370 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x55b71dca91a0 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b71dcabff8 <col:8>
|-CXXConstructorDecl 0x55b71dca92a8 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x55b71dca92a8
| `-ParmVarDecl 0x55b71dca93b8 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x55b71dca9458 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71dca9568 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x55b71dbcf370 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b71dcac210 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55b71dcac1e0 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55b71dbcf370
| |     `-CXXStaticCastExpr 0x55b71dcac1b0 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x55b71dcac180 <col:8> 'in_addr' lvalue ParmVar 0x55b71dca9568 '' 'in_addr &&'
| `-CompoundStmt 0x55b71dcac258 <col:8>
|-CXXDestructorDecl 0x55b71dcac490 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b71e24b2d0 <col:8> col:8 implicit constexpr operator= 'in_addr &(const in_addr &)' inline default trivial noexcept-unevaluated 0x55b71e24b2d0
| `-ParmVarDecl 0x55b71e24b3d8 <col:8> col:8 'const in_addr &'
`-CXXMethodDecl 0x55b71e24b448 <col:8> col:8 implicit used constexpr operator= 'in_addr &(in_addr &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55b71e24b558 <col:8> col:8 used 'in_addr &&'
  `-CompoundStmt 0x55b71e24b810 <col:8>
    |-BinaryOperator 0x55b71e24b7b8 <col:8> 'in_addr_t':'unsigned int' lvalue '='
    | |-MemberExpr 0x55b71e24b770 <col:8> 'in_addr_t':'unsigned int' lvalue ->s_addr 0x55b71dbcf370
    | | `-CXXThisExpr 0x55b71e24b760 <col:8> 'in_addr *' this
    | `-ImplicitCastExpr 0x55b71e24b7a0 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x55b71e24b730 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55b71dbcf370
    |     `-CXXStaticCastExpr 0x55b71e24b700 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
    |       `-DeclRefExpr 0x55b71e24b6d0 <col:8> 'in_addr' lvalue ParmVar 0x55b71e24b558 '' 'in_addr &&'
    `-ReturnStmt 0x55b71e24b800 <col:8>
      `-UnaryOperator 0x55b71e24b7e8 <col:8> 'in_addr' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55b71e24b7d8 <col:8> 'in_addr *' this

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dc9dd48 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b71dc9de68 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x55b71dc9df50 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x55b71dc9df30 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x55b71dc9def8 <col:22> 'int' 4
|-FieldDecl 0x55b71dc9dff8 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x55b71dc9dfd8 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x55b71dc9dfa0 <col:21> 'int' 4
|-FieldDecl 0x55b71dc9e058 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x55b71dc9e0b8 <line:40:5, col:14> col:14 ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x55b71dc9e118 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x55b71dc9e178 <line:42:5, col:14> col:14 ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x55b71dc9e1d8 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x55b71dc9e238 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55b71dc9e298 <line:49:5, col:14> col:14 ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x55b71dc9e308 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x55b71dc9e378 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dfa43f8 prev 0x55b71de64a30 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 referenced struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b71dfa44f0 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x55b71dfa4590 <line:25:5, col:14> col:14 referenced th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55b71dfa45f0 <line:26:5, col:14> col:14 referenced th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x55b71dfa4670 <line:27:5, col:15> col:15 th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55b71dfa46d0 <line:28:5, col:15> col:15 th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55b71dfa4778 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x55b71dfa4758 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x55b71dfa4720 <col:26> 'int' 4
|-FieldDecl 0x55b71dfa4820 <line:31:5, col:23> col:14 th_off 'unsigned int'
| `-ConstantExpr 0x55b71dfa4800 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x55b71dfa47c8 <col:23> 'int' 4
|-FieldDecl 0x55b71dfa4880 <line:39:5, col:13> col:13 th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x55b71dfa48e0 <line:48:5, col:14> col:14 th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x55b71dfa4940 <line:49:5, col:14> col:14 th_sum 'uint16_t':'unsigned short'
`-FieldDecl 0x55b71dfa49a0 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | struct click_udp
         0 |   uint16_t uh_sport
         2 |   uint16_t uh_dport
         4 |   uint16_t uh_ulen
         6 |   uint16_t uh_sum
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e030f70 prev 0x55b71de64ae0 <../dummy_inc/clicknet/udp.h:11:1, line:16:1> line:11:8 referenced struct click_udp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b71e031068 <col:1, col:8> col:8 implicit struct click_udp
|-FieldDecl 0x55b71e031108 <line:12:5, col:14> col:14 referenced uh_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55b71e031168 <line:13:5, col:14> col:14 referenced uh_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x55b71e0311c8 <line:14:5, col:14> col:14 uh_ulen 'uint16_t':'unsigned short'
`-FieldDecl 0x55b71e031228 <line:15:5, col:14> col:14 uh_sum 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71da8ced8 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71da8cff8 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x55b71dca95f0 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55b71dca96d0 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x55b71dca96d0
| `-ParmVarDecl 0x55b71dca97b8 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x55b71dca9858 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x55b71dca9858
| `-ParmVarDecl 0x55b71dca9968 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x55b71de435e0 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringAccum
         0 |   struct StringAccum::rep_t r_
         0 |     unsigned char * s
         8 |     int len
        12 |     int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e0eea40 <../dummy_inc/click/straccum.hh:112:5, line:122:5> line:112:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71e0eeb58 <col:5, col:12> col:12 implicit referenced struct rep_t
|-FieldDecl 0x55b71e0eec00 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
|-FieldDecl 0x55b71e0eec68 <line:114:2, col:6> col:6 referenced len 'int'
|-FieldDecl 0x55b71e0eecd0 <line:115:2, col:6> col:6 referenced cap 'int'
|-CXXConstructorDecl 0x55b71e0eed80 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| |-CXXCtorInitializer Field 0x55b71e0eec00 's' 'unsigned char *'
| | `-CXXReinterpretCastExpr 0x55b71e0efc00 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| |   `-CXXConstCastExpr 0x55b71e0efbb8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| |     `-CallExpr 0x55b71e0efb80 <col:63, col:82> 'const char *'
| |       `-ImplicitCastExpr 0x55b71e0efb68 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| |         `-DeclRefExpr 0x55b71e0efb10 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55b71dc95290 'empty_data' 'const char *()'
| |-CXXCtorInitializer Field 0x55b71e0eec68 'len' 'int'
| | `-IntegerLiteral 0x55b71e0efc78 <line:118:12> 'int' 0
| |-CXXCtorInitializer Field 0x55b71e0eecd0 'cap' 'int'
| | `-IntegerLiteral 0x55b71e0efce0 <col:20> 'int' 0
| `-CompoundStmt 0x55b71e0efd60 <col:23, line:119:2>
|-CXXConstructorDecl 0x55b71e0eeef8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| |-ParmVarDecl 0x55b71e0eee38 <col:17> col:35 'uninitialized_type'
| `-CompoundStmt 0x55b71e0efd70 <col:37, line:121:2>
|-CXXConstructorDecl 0x55b71e0f1f88 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71e0f2098 <col:12> col:12 used 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55b71e0eec00 's' 'unsigned char *'
| | `-ImplicitCastExpr 0x55b71e0f39f0 <col:12> 'unsigned char *' <LValueToRValue>
| |   `-MemberExpr 0x55b71e0f39c0 <col:12> 'unsigned char *const' lvalue .s 0x55b71e0eec00
| |     `-DeclRefExpr 0x55b71e0f39a0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55b71e0f2098 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55b71e0eec68 'len' 'int'
| | `-ImplicitCastExpr 0x55b71e0f3a80 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55b71e0f3a50 <col:12> 'const int' lvalue .len 0x55b71e0eec68
| |     `-DeclRefExpr 0x55b71e0f3a30 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55b71e0f2098 '' 'const StringAccum::rep_t &'
| |-CXXCtorInitializer Field 0x55b71e0eecd0 'cap' 'int'
| | `-ImplicitCastExpr 0x55b71e0f3b10 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55b71e0f3ae0 <col:12> 'const int' lvalue .cap 0x55b71e0eecd0
| |     `-DeclRefExpr 0x55b71e0f3ac0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55b71e0f2098 '' 'const StringAccum::rep_t &'
| `-CompoundStmt 0x55b71e0f3b68 <col:12>
|-CXXConstructorDecl 0x55b71e0f2138 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b71e0f2138
| `-ParmVarDecl 0x55b71e0f2248 <col:12> col:12 'StringAccum::rep_t &&'
`-CXXDestructorDecl 0x55b71e0f3e20 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  NonVirtualBaseLLVMType:%"struct.StringAccum::rep_t" = type { i8*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e0ea188 prev 0x55b71e031440 <../dummy_inc/click/straccum.hh:28:1, line:137:1> line:28:7 referenced class StringAccum definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b71e0ea280 <col:1, col:7> col:7 implicit referenced class StringAccum
|-AccessSpecDecl 0x55b71e0ea310 <col:21, col:27> col:21 public
|-TypedefDecl 0x55b71e0ea350 <line:30:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55b71d92ffd0 'const char *'
|   `-QualType 0x55b71d92f521 'const char' const
|     `-BuiltinType 0x55b71d92f520 'char'
|-TypedefDecl 0x55b71e0ea3c0 <line:31:5, col:19> col:19 referenced iterator 'char *'
| `-PointerType 0x55b71d9301a0 'char *'
|   `-BuiltinType 0x55b71d92f520 'char'
|-TypedefDecl 0x55b71e0ea500 <line:33:5, col:57> col:32 referenced unspecified_bool_type 'int (StringAccum::*)() const'
| `-MemberPointerType 0x55b71e0ea470 'int (StringAccum::*)() const'
|   |-RecordType 0x55b71dbf5ae0 'StringAccum'
|   | `-CXXRecord 0x55b71e0ea188 'StringAccum'
|   `-ParenType 0x55b71dc6c890 'int () const' sugar
|     `-FunctionProtoType 0x55b71dc4efc0 'int () const' const cdecl
|       `-BuiltinType 0x55b71d92f580 'int'
|-CXXConstructorDecl 0x55b71e0ea5c0 <line:35:5, col:24> col:12 used StringAccum 'void ()' inline
|-CXXConstructorDecl 0x55b71e0ea710 <line:36:5, col:45> col:21 StringAccum 'void (int)' inline
| `-ParmVarDecl 0x55b71e0ea680 <col:33, col:37> col:37 capacity 'int'
|-CXXConstructorDecl 0x55b71e0ea860 <line:37:5, col:41> col:12 StringAccum 'void (const String &)' inline
| `-ParmVarDecl 0x55b71e0ea7d0 <col:24, col:38> col:38 str 'const String &'
|-CXXConstructorDecl 0x55b71e0eaa08 <line:38:5, col:44> col:12 StringAccum 'void (const StringAccum &)' inline
| `-ParmVarDecl 0x55b71e0ea948 <col:24, col:43> col:43 x 'const StringAccum &'
|-CXXConstructorDecl 0x55b71e0eabb8 <line:40:5, col:39> col:12 StringAccum 'void (StringAccum &&)' inline
| `-ParmVarDecl 0x55b71e0eaaf8 <col:24, col:38> col:38 x 'StringAccum &&'
|-CXXDestructorDecl 0x55b71e0eacb0 <line:42:5, col:25> col:12 used ~StringAccum 'void () noexcept' inline
|-CXXMethodDecl 0x55b71e0eaec8 <line:44:5, col:55> col:25 operator= 'StringAccum &(const StringAccum &)' inline
| `-ParmVarDecl 0x55b71e0eae00 <col:35, col:54> col:54 x 'const StringAccum &'
|-CXXMethodDecl 0x55b71e0eb048 <line:46:5, col:50> col:25 operator= 'StringAccum &(StringAccum &&)' inline
| `-ParmVarDecl 0x55b71e0eaf80 <col:35, col:49> col:49 x 'StringAccum &&'
|-CXXMethodDecl 0x55b71e0eb140 <line:49:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55b71e0eb208 <line:50:5, col:23> col:18 data 'char *()' inline
|-CXXMethodDecl 0x55b71e0eb2d0 <line:51:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55b71e0eb398 <line:52:5, col:27> col:16 used capacity 'int () const' inline
|-CXXMethodDecl 0x55b71e0eb460 <line:54:5, col:23> col:17 c_str 'const char *()'
|-CXXConversionDecl 0x55b71e0eb5c8 <line:56:5, col:45> col:12 operator int (StringAccum::*)() const 'StringAccum::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55b71e0eb698 <line:57:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55b71e0eb758 <line:58:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55b71e0eb868 <line:60:5, col:35> col:27 used begin 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55b71e0eb978 <line:61:5, col:27> col:21 begin 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55b71e0eba38 <line:62:5, col:33> col:27 used end 'StringAccum::const_iterator () const' inline
|-CXXMethodDecl 0x55b71e0ebaf8 <line:63:5, col:25> col:21 end 'StringAccum::iterator ()' inline
|-CXXMethodDecl 0x55b71e0ebc40 <line:65:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55b71e0ebbb0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55b71e0ebdd0 <line:66:5, col:34> col:18 operator[] 'char &(int)' inline
| `-ParmVarDecl 0x55b71e0ebd00 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55b71e0ebe98 <line:67:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55b71e0ebf90 <line:68:5, col:24> col:18 front 'char &()' inline
|-CXXMethodDecl 0x55b71e0ec050 <line:69:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55b71e0ec118 <line:70:5, col:23> col:18 back 'char &()' inline
|-CXXMethodDecl 0x55b71e0ec1d8 <line:72:5, col:33> col:17 used out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55b71e0ec298 <line:73:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55b71e0ec358 <line:75:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55b71e0ec4a8 <line:76:5, col:31> col:18 reserve 'char *(int)' inline
| `-ParmVarDecl 0x55b71e0ec410 <col:26, col:30> col:30 n 'int'
|-CXXMethodDecl 0x55b71e0ec5f8 <line:77:5, col:35> col:17 set_length 'void (int)' inline
| `-ParmVarDecl 0x55b71e0ec568 <col:28, col:32> col:32 len 'int'
|-CXXMethodDecl 0x55b71e0ec750 <line:78:5, col:23> col:9 resize 'int (int)'
| `-ParmVarDecl 0x55b71e0ec6b8 <col:16, col:20> col:20 len 'int'
|-CXXMethodDecl 0x55b71e0ec8a0 <line:79:5, col:40> col:17 used adjust_length 'void (int)' inline
| `-ParmVarDecl 0x55b71e0ec810 <col:31, col:35> col:35 delta 'int'
|-CXXMethodDecl 0x55b71e0ecac0 <line:80:5, col:54> col:18 extend 'char *(int, int)' inline
| |-ParmVarDecl 0x55b71e0ec960 <col:25, col:29> col:29 nadjust 'int'
| `-ParmVarDecl 0x55b71e0ec9e0 <col:38, col:53> col:42 nreserve 'int' cinit
|   `-IntegerLiteral 0x55b71e0efa38 <col:53> 'int' 0
|-CXXMethodDecl 0x55b71e0ecc18 <line:82:5, col:35> col:17 pop_back 'void (int)' inline
| `-ParmVarDecl 0x55b71e0ecb88 <col:26, col:34> col:30 n 'int' cinit
|   `-IntegerLiteral 0x55b71e0efa58 <col:34> 'int' 1
|-CXXMethodDecl 0x55b71e0ecd60 <line:84:5, col:30> col:17 used append 'void (char)' inline
| `-ParmVarDecl 0x55b71e0eccd0 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55b71e0eceb0 <line:85:5, col:39> col:17 used append 'void (unsigned char)' inline
| `-ParmVarDecl 0x55b71e0ece20 <col:24, col:38> col:38 c 'unsigned char'
|-CXXMethodDecl 0x55b71e0ed000 <line:86:5, col:35> col:17 append_utf8 'bool (int)' inline
| `-ParmVarDecl 0x55b71e0ecf70 <col:29, col:33> col:33 ch 'int'
|-CXXMethodDecl 0x55b71e0ed150 <line:87:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55b71e0ed0c0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55b71e0ed328 <line:88:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55b71e0ed210 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55b71e0ed290 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55b71e0ed508 <line:89:5, col:55> col:17 used append 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55b71e0ed3f0 <col:24, col:45> col:45 s 'const unsigned char *'
| `-ParmVarDecl 0x55b71e0ed470 <col:48, col:52> col:52 len 'int'
|-CXXMethodDecl 0x55b71e0ed6e8 <line:90:5, col:59> col:17 used append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55b71e0ed5d0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55b71e0ed650 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55b71e0ed8c8 <line:91:5, col:77> col:17 append 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55b71e0ed7b0 <col:24, col:45> col:45 first 'const unsigned char *'
| `-ParmVarDecl 0x55b71e0ed830 <col:52, col:73> col:73 last 'const unsigned char *'
|-CXXMethodDecl 0x55b71e0edaa8 <line:92:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55b71e0ed990 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55b71e0eda10 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55b71e0ede08 <line:93:5, col:81> col:10 used append_numeric 'void (String::intmax_t, int, bool)'
| |-ParmVarDecl 0x55b71e0edbf0 <col:25, col:42> col:42 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55b71e0edc70 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55b71e0efa78 <col:56> 'int' 10
| `-ParmVarDecl 0x55b71e0edce8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b71e0efa98 <col:77> 'bool' true
|-CXXMethodDecl 0x55b71e0ee168 <line:94:5, col:82> col:10 used append_numeric 'void (String::uintmax_t, int, bool)'
| |-ParmVarDecl 0x55b71e0edf50 <col:25, col:43> col:43 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55b71e0edfd0 <col:46, col:57> col:50 base 'int' cinit
| | `-IntegerLiteral 0x55b71e0efaa8 <col:57> 'int' 10
| `-ParmVarDecl 0x55b71e0ee048 <col:61, col:78> col:66 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b71e0efac8 <col:78> 'bool' true
|-CXXMethodDecl 0x55b71e0ee390 <line:96:5, col:57> col:18 snprintf 'StringAccum &(int, const char *, ...)'
| |-ParmVarDecl 0x55b71e0ee238 <col:27, col:31> col:31 n 'int'
| `-ParmVarDecl 0x55b71e0ee2b8 <col:34, col:46> col:46 format 'const char *'
|-CXXMethodDecl 0x55b71e0ee488 <line:98:5, col:24> col:12 used take_string 'String ()'
|-CXXMethodDecl 0x55b71e0ee5f8 <line:100:5, col:29> col:10 used swap 'void (StringAccum &)'
| `-ParmVarDecl 0x55b71e0ee538 <col:15, col:28> col:28 x 'StringAccum &'
|-CXXMethodDecl 0x55b71e0ee748 <line:104:5, col:62> col:17 forward 'void (int)' inline
| |-ParmVarDecl 0x55b71e0ee6b8 <col:25, col:29> col:29 delta 'int'
| `-DeprecatedAttr 0x55b71e0ee7f0 <col:51> "" ""
|-AccessSpecDecl 0x55b71e0ee860 <line:106:3, col:10> col:3 private
|-EnumDecl 0x55b71e0ee888 <line:108:5, line:110:5> line:108:5
| `-EnumConstantDecl 0x55b71e0ee9d8 <line:109:2, col:23> col:2 referenced MEMO_SPACE 'StringAccum::(anonymous enum at ../dummy_inc/click/straccum.hh:108:5)'
|   `-ImplicitCastExpr 0x55b71e0eea28 <col:15, col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71e0ee9b8 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' Int: 12
|       `-DeclRefExpr 0x55b71e0ee988 <col:15, col:23> 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)' EnumConstant 0x55b71dc765f8 'MEMO_SPACE' 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|-CXXRecordDecl 0x55b71e0eea40 <line:112:5, line:122:5> line:112:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b71e0eeb58 <col:5, col:12> col:12 implicit referenced struct rep_t
| |-FieldDecl 0x55b71e0eec00 <line:113:2, col:17> col:17 referenced s 'unsigned char *'
| |-FieldDecl 0x55b71e0eec68 <line:114:2, col:6> col:6 referenced len 'int'
| |-FieldDecl 0x55b71e0eecd0 <line:115:2, col:6> col:6 referenced cap 'int'
| |-CXXConstructorDecl 0x55b71e0eed80 <line:116:2, line:119:2> line:116:2 used rep_t 'void ()'
| | |-CXXCtorInitializer Field 0x55b71e0eec00 's' 'unsigned char *'
| | | `-CXXReinterpretCastExpr 0x55b71e0efc00 <line:117:10, col:84> 'unsigned char *' reinterpret_cast<unsigned char *> <BitCast>
| | |   `-CXXConstCastExpr 0x55b71e0efbb8 <col:44, col:83> 'char *' const_cast<char *> <NoOp>
| | |     `-CallExpr 0x55b71e0efb80 <col:63, col:82> 'const char *'
| | |       `-ImplicitCastExpr 0x55b71e0efb68 <col:63, col:71> 'const char *(*)()' <FunctionToPointerDecay>
| | |         `-DeclRefExpr 0x55b71e0efb10 <col:63, col:71> 'const char *()' lvalue CXXMethod 0x55b71dc95290 'empty_data' 'const char *()'
| | |-CXXCtorInitializer Field 0x55b71e0eec68 'len' 'int'
| | | `-IntegerLiteral 0x55b71e0efc78 <line:118:12> 'int' 0
| | |-CXXCtorInitializer Field 0x55b71e0eecd0 'cap' 'int'
| | | `-IntegerLiteral 0x55b71e0efce0 <col:20> 'int' 0
| | `-CompoundStmt 0x55b71e0efd60 <col:23, line:119:2>
| |-CXXConstructorDecl 0x55b71e0eeef8 <line:120:2, line:121:2> line:120:11 rep_t 'void (uninitialized_type)'
| | |-ParmVarDecl 0x55b71e0eee38 <col:17> col:35 'uninitialized_type'
| | `-CompoundStmt 0x55b71e0efd70 <col:37, line:121:2>
| |-CXXConstructorDecl 0x55b71e0f1f88 <line:112:12> col:12 implicit used constexpr rep_t 'void (const StringAccum::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b71e0f2098 <col:12> col:12 used 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55b71e0eec00 's' 'unsigned char *'
| | | `-ImplicitCastExpr 0x55b71e0f39f0 <col:12> 'unsigned char *' <LValueToRValue>
| | |   `-MemberExpr 0x55b71e0f39c0 <col:12> 'unsigned char *const' lvalue .s 0x55b71e0eec00
| | |     `-DeclRefExpr 0x55b71e0f39a0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55b71e0f2098 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55b71e0eec68 'len' 'int'
| | | `-ImplicitCastExpr 0x55b71e0f3a80 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55b71e0f3a50 <col:12> 'const int' lvalue .len 0x55b71e0eec68
| | |     `-DeclRefExpr 0x55b71e0f3a30 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55b71e0f2098 '' 'const StringAccum::rep_t &'
| | |-CXXCtorInitializer Field 0x55b71e0eecd0 'cap' 'int'
| | | `-ImplicitCastExpr 0x55b71e0f3b10 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55b71e0f3ae0 <col:12> 'const int' lvalue .cap 0x55b71e0eecd0
| | |     `-DeclRefExpr 0x55b71e0f3ac0 <col:12> 'const StringAccum::rep_t' lvalue ParmVar 0x55b71e0f2098 '' 'const StringAccum::rep_t &'
| | `-CompoundStmt 0x55b71e0f3b68 <col:12>
| |-CXXConstructorDecl 0x55b71e0f2138 <col:12> col:12 implicit constexpr rep_t 'void (StringAccum::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b71e0f2138
| | `-ParmVarDecl 0x55b71e0f2248 <col:12> col:12 'StringAccum::rep_t &&'
| `-CXXDestructorDecl 0x55b71e0f3e20 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-FieldDecl 0x55b71e0eefd0 <line:124:5, col:11> col:11 referenced r_ 'StringAccum::rep_t'
|-CXXMethodDecl 0x55b71e0ef0d0 <line:126:5, col:19> col:11 used grow 'char *(int)'
| `-ParmVarDecl 0x55b71e0ef038 <col:16> col:19 'int'
|-CXXMethodDecl 0x55b71e0ef2b0 <line:127:5, col:48> col:11 used hard_extend 'char *(int, int)'
| |-ParmVarDecl 0x55b71e0ef190 <col:23, col:27> col:27 nadjust 'int'
| `-ParmVarDecl 0x55b71e0ef210 <col:36, col:40> col:40 nreserve 'int'
|-CXXMethodDecl 0x55b71e0ef490 <line:128:5, col:44> col:10 used hard_append 'void (const char *, int)'
| |-ParmVarDecl 0x55b71e0ef378 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55b71e0ef3f8 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55b71e0ef5e8 <line:129:5, col:43> col:10 used hard_append_cstr 'void (const char *)'
| `-ParmVarDecl 0x55b71e0ef558 <col:27, col:39> col:39 cstr 'const char *'
|-CXXMethodDecl 0x55b71e0ef738 <line:130:5, col:33> col:10 used append_utf8_hard 'bool (int)'
| `-ParmVarDecl 0x55b71e0ef6a8 <col:27, col:31> col:31 ch 'int'
`-FriendDecl 0x55b71e0ef9f8 <line:132:5, col:70> col:25
  `-FunctionDecl 0x55b71e0ef938 parent 0x55b71d92f488 <col:5, col:70> col:25 operator<< 'StringAccum &(StringAccum &, const String &)'
    |-ParmVarDecl 0x55b71e0ef7f0 <col:36, col:49> col:49 sa 'StringAccum &'
    `-ParmVarDecl 0x55b71e0ef868 <col:53, col:67> col:67 str 'const String &'

Layout: <CGRecordLayout
  LLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  NonVirtualBaseLLVMType:%class.StringAccum = type { %"struct.StringAccum::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71df82f90 <../dummy_inc/click/hashcontainer.hh:14:1, col:69> line:302:7 class HashContainer_const_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55b71df9e918 prev 0x55b71df82f90 <col:1, col:7> col:7 implicit class HashContainer_const_iterator
|-AccessSpecDecl 0x55b71df9e9a8 <col:38, col:44> col:38 public
|-TypedefDecl 0x55b71df9eb70 <line:304:5, col:53> col:53 size_type 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type':'unsigned long'
| `-ElaboratedType 0x55b71df9eb20 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type' sugar
|   `-TypedefType 0x55b71df82b00 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::size_type' sugar
|     |-Typedef 0x55b71df822c0 'size_type'
|     `-TypedefType 0x55b71d9dcfb0 'size_t' sugar
|       |-Typedef 0x55b71d99fbe0 'size_t'
|       `-BuiltinType 0x55b71d92f640 'unsigned long'
|-TypedefDecl 0x55b71df9ed10 <line:305:5, col:61> col:61 referenced bucket_count_type 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| `-ElaboratedType 0x55b71df9ecc0 'typename HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type' sugar
|   `-TypedefType 0x55b71df82ca0 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type' sugar
|     |-Typedef 0x55b71df82318 'bucket_count_type'
|     `-TypedefType 0x55b71da8d260 'uint32_t' sugar
|       |-Typedef 0x55b71d9984c8 'uint32_t'
|       `-TypedefType 0x55b71d9715a0 '__uint32_t' sugar
|         |-Typedef 0x55b71d971198 '__uint32_t'
|         `-BuiltinType 0x55b71d92f620 'unsigned int'
|-CXXConstructorDecl 0x55b71df9eda0 <line:308:5, line:309:5> line:308:5 HashContainer_const_iterator 'void ()'
|-CXXMethodDecl 0x55b71df9ef08 <line:312:5, line:314:5> line:312:8 used get 'IPRewriterEntry *() const'
|-CXXMethodDecl 0x55b71df9efd8 <line:317:5, line:319:5> line:317:8 used operator-> 'IPRewriterEntry *() const'
|-CXXMethodDecl 0x55b71df9f138 <line:323:5, line:325:5> line:323:8 operator* 'IPRewriterEntry &() const'
|-CXXMethodDecl 0x55b71df9f1e8 <line:328:5, line:330:5> line:328:17 used live 'bool () const' inline
|-TypedefDecl 0x55b71df9f378 <line:332:5, col:73> col:48 unspecified_bool_type 'IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const'
| `-MemberPointerType 0x55b71df9f310 'IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const'
|   |-RecordType 0x55b71df83090 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|   | `-ClassTemplateSpecialization 0x55b71df82f90 'HashContainer_const_iterator'
|   `-ParenType 0x55b71df9f2a0 'IPRewriterEntry *() const' sugar
|     `-FunctionProtoType 0x55b71df9eec0 'IPRewriterEntry *() const' const cdecl
|       `-PointerType 0x55b71df9ee60 'IPRewriterEntry *'
|         `-SubstTemplateTypeParmType 0x55b71df9e9d0 'IPRewriterEntry' sugar
|           |-TemplateTypeParmType 0x55b71def32e0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55b71def3288 'T'
|           `-RecordType 0x55b71df4c7e0 'IPRewriterEntry'
|             `-CXXRecord 0x55b71df4fb80 'IPRewriterEntry'
|-CXXConversionDecl 0x55b71df9f490 <line:334:5, line:336:5> line:334:12 operator IPRewriterEntry *(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::*)() const 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55b71df9f6e8 <line:339:5, line:341:5> line:339:32 hashcontainer 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *() const'
|-CXXMethodDecl 0x55b71df9f808 <line:344:5, line:346:5> line:344:23 bucket 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type () const'
|-CXXMethodDecl 0x55b71df9f8b8 <line:349:5, line:361:5> line:349:10 used operator++ 'void ()'
|-CXXMethodDecl 0x55b71df9f9f8 <line:364:5, line:366:5> line:364:10 operator++ 'void (int)'
| `-ParmVarDecl 0x55b71df9f968 <col:21> col:24 'int'
|-AccessSpecDecl 0x55b71df9fab0 <line:368:3, col:10> col:3 private
|-FieldDecl 0x55b71df9fae8 <line:370:5, col:8> col:8 referenced _element 'IPRewriterEntry *'
|-FieldDecl 0x55b71df9fb80 <line:371:5, col:9> col:9 referenced _pprev 'IPRewriterEntry **'
|-FieldDecl 0x55b71df9fbe0 <line:372:5, col:23> col:23 referenced _bucket 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
|-FieldDecl 0x55b71df9fd28 <line:373:5, col:32> col:32 referenced _hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x55b71df9ff88 <line:375:5, line:385:5> line:375:12 HashContainer_const_iterator 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *)' inline
| `-ParmVarDecl 0x55b71df9fe78 <col:41, col:68> col:68 hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x55b71dfa0418 <line:387:5, line:390:5> line:387:12 HashContainer_const_iterator 'void (const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *, HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type, IPRewriterEntry **, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55b71dfa0148 <col:41, col:68> col:68 hc 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| |-ParmVarDecl 0x55b71dfa01c0 <col:72, col:90> col:90 b 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x55b71dfa0240 <col:93, col:97> col:97 pprev 'IPRewriterEntry **'
| `-ParmVarDecl 0x55b71dfa02b8 <col:104, col:107> col:107 element 'IPRewriterEntry *'
|-FriendDecl 0x55b71dfa05f8 <line:392:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-FriendDecl 0x55b71dfa0748 <line:393:5, col:45> col:12 'class HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXDestructorDecl 0x55b71dfa1840 <line:302:7> col:7 implicit ~HashContainer_const_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55b71dfa1978 <col:7> col:7 implicit constexpr HashContainer_const_iterator 'void (const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55b71dfa1978
| `-ParmVarDecl 0x55b71dfa1a88 <col:7> col:7 'const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXConstructorDecl 0x55b71dfa1b28 <col:7> col:7 implicit used constexpr HashContainer_const_iterator 'void (HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71dfa1c38 <col:7> col:7 used 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55b71df9fae8 '_element' 'IPRewriterEntry *'
| | `-ImplicitCastExpr 0x55b71dfa21d8 <col:7> 'IPRewriterEntry *' <LValueToRValue>
| |   `-MemberExpr 0x55b71dfa2190 <col:7> 'IPRewriterEntry *' xvalue ._element 0x55b71df9fae8
| |     `-CXXStaticCastExpr 0x55b71dfa2160 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55b71dfa2130 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55b71dfa1c38 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55b71df9fb80 '_pprev' 'IPRewriterEntry **'
| | `-ImplicitCastExpr 0x55b71dfa22c0 <col:7> 'IPRewriterEntry **' <LValueToRValue>
| |   `-MemberExpr 0x55b71dfa2278 <col:7> 'IPRewriterEntry **' xvalue ._pprev 0x55b71df9fb80
| |     `-CXXStaticCastExpr 0x55b71dfa2248 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55b71dfa2218 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55b71dfa1c38 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55b71df9fbe0 '_bucket' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int'
| | `-ImplicitCastExpr 0x55b71dfa23a8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55b71dfa2360 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x55b71df9fbe0
| |     `-CXXStaticCastExpr 0x55b71dfa2330 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55b71dfa2300 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55b71dfa1c38 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer Field 0x55b71df9fd28 '_hc' 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| | `-ImplicitCastExpr 0x55b71dfa2490 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' <LValueToRValue>
| |   `-MemberExpr 0x55b71dfa2448 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' xvalue ._hc 0x55b71df9fd28
| |     `-CXXStaticCastExpr 0x55b71dfa2418 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55b71dfa23e8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55b71dfa1c38 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| `-CompoundStmt 0x55b71dfa24f0 <col:7>
|-CXXMethodDecl 0x55b71dfa2f38 <col:7> col:7 implicit operator= 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55b71dfa2f38
| `-ParmVarDecl 0x55b71dfa3048 <col:7> col:7 'const HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x55b71dfa30b8 <col:7> col:7 implicit used operator= 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55b71dfa31c8 <col:7> col:7 used 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
  `-CompoundStmt 0x55b71dfa3ec0 <col:7>
    |-BinaryOperator 0x55b71dfa3b50 <col:7> 'IPRewriterEntry *' lvalue '='
    | |-MemberExpr 0x55b71dfa3b08 <col:7> 'IPRewriterEntry *' lvalue ->_element 0x55b71df9fae8
    | | `-CXXThisExpr 0x55b71dfa3af8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55b71dfa3b38 <col:7> 'IPRewriterEntry *' <LValueToRValue>
    |   `-MemberExpr 0x55b71dfa3ac8 <col:7> 'IPRewriterEntry *' xvalue ._element 0x55b71df9fae8
    |     `-CXXStaticCastExpr 0x55b71dfa3a98 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55b71dfa3a68 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55b71dfa31c8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x55b71dfa3c58 <col:7> 'IPRewriterEntry **' lvalue '='
    | |-MemberExpr 0x55b71dfa3c10 <col:7> 'IPRewriterEntry **' lvalue ->_pprev 0x55b71df9fb80
    | | `-CXXThisExpr 0x55b71dfa3c00 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55b71dfa3c40 <col:7> 'IPRewriterEntry **' <LValueToRValue>
    |   `-MemberExpr 0x55b71dfa3bd0 <col:7> 'IPRewriterEntry **' xvalue ._pprev 0x55b71df9fb80
    |     `-CXXStaticCastExpr 0x55b71dfa3ba0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55b71dfa3b70 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55b71dfa31c8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x55b71dfa3d60 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' lvalue '='
    | |-MemberExpr 0x55b71dfa3d18 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' lvalue ->_bucket 0x55b71df9fbe0
    | | `-CXXThisExpr 0x55b71dfa3d08 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55b71dfa3d48 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x55b71dfa3cd8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >::bucket_count_type':'unsigned int' xvalue ._bucket 0x55b71df9fbe0
    |     `-CXXStaticCastExpr 0x55b71dfa3ca8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55b71dfa3c78 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55b71dfa31c8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    |-BinaryOperator 0x55b71dfa3e68 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' lvalue '='
    | |-MemberExpr 0x55b71dfa3e20 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' lvalue ->_hc 0x55b71df9fd28
    | | `-CXXThisExpr 0x55b71dfa3e10 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55b71dfa3e50 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' <LValueToRValue>
    |   `-MemberExpr 0x55b71dfa3de0 <col:7> 'const HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' xvalue ._hc 0x55b71df9fd28
    |     `-CXXStaticCastExpr 0x55b71dfa3db0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
    |       `-DeclRefExpr 0x55b71dfa3d80 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55b71dfa31c8 '' 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    `-ReturnStmt 0x55b71dfa3eb0 <col:7>
      `-UnaryOperator 0x55b71dfa3e98 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55b71dfa3e88 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_const_iterator = type { %class.IPRewriterEntry*, %class.IPRewriterEntry**, i32, %class.HashContainer* }
  NonVirtualBaseLLVMType:%class.HashContainer_const_iterator = type { %class.IPRewriterEntry*, %class.IPRewriterEntry**, i32, %class.HashContainer* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71df831c8 <../dummy_inc/click/hashcontainer.hh:15:1, col:69> line:400:7 class HashContainer_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-public 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-TemplateArgument type 'IPRewriterEntry'
|-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>'
|-CXXRecordDecl 0x55b71dfa07d0 prev 0x55b71df831c8 <col:1, col:7> col:7 implicit class HashContainer_iterator
|-AccessSpecDecl 0x55b71dfa0860 <col:76, col:82> col:76 public
|-TypedefDecl 0x55b71dfa0950 <line:402:5, col:48> col:48 inherited 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| `-TemplateSpecializationType 0x55b71dfa08b0 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' sugar HashContainer_const_iterator
|   |-TemplateArgument type 'IPRewriterEntry':'IPRewriterEntry'
|   |-TemplateArgument type 'HashContainer_adapter<IPRewriterEntry>':'HashContainer_adapter<IPRewriterEntry>'
|   `-RecordType 0x55b71df83090 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|     `-ClassTemplateSpecialization 0x55b71df82f90 'HashContainer_const_iterator'
|-CXXConstructorDecl 0x55b71dfa09e0 <line:405:5, line:406:5> line:405:5 HashContainer_iterator 'void ()'
|-CXXMethodDecl 0x55b71dfa0a98 <line:414:5, line:416:5> line:414:10 can_insert 'bool () const'
|-CXXMethodDecl 0x55b71dfa0cb8 <line:419:5, line:421:5> line:419:26 hashcontainer 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *() const'
|-AccessSpecDecl 0x55b71dfa0d68 <line:423:3, col:10> col:3 private
|-CXXConstructorDecl 0x55b71dfa0f98 <line:425:5, line:427:5> line:425:12 HashContainer_iterator 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *)' inline
| `-ParmVarDecl 0x55b71dfa0e88 <col:35, col:56> col:56 hc 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
|-CXXConstructorDecl 0x55b71dfa1528 <line:429:5, line:431:5> line:429:12 HashContainer_iterator 'void (HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *, typename inherited::bucket_count_type, IPRewriterEntry **, IPRewriterEntry *)' inline
| |-ParmVarDecl 0x55b71dfa1158 <col:35, col:56> col:56 hc 'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *'
| |-ParmVarDecl 0x55b71dfa1270 <col:60, col:98> col:98 b 'typename inherited::bucket_count_type':'unsigned int'
| |-ParmVarDecl 0x55b71dfa1350 <col:101, col:105> col:105 pprev 'IPRewriterEntry **'
| `-ParmVarDecl 0x55b71dfa13c8 <col:112, col:115> col:115 element 'IPRewriterEntry *'
|-FriendDecl 0x55b71dfa1708 <line:433:5, col:36> col:12 'class HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
|-CXXDestructorDecl 0x55b71dfa1760 <line:400:7> col:7 implicit referenced ~HashContainer_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55b71dfa1ca8 <col:7> col:7 implicit constexpr HashContainer_iterator 'void (const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55b71dfa1ca8
| `-ParmVarDecl 0x55b71dfa1db8 <col:7> col:7 'const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
|-CXXConstructorDecl 0x55b71dfa1e58 <col:7> col:7 implicit used constexpr HashContainer_iterator 'void (HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b71dfa1f68 <col:7> col:7 used 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| |-CXXCtorInitializer 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >'
| | `-CXXConstructExpr 0x55b71dfa2500 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' 'void (HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept'
| |   `-ImplicitCastExpr 0x55b71dfa2110 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
| |     `-CXXStaticCastExpr 0x55b71dfa20e0 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue static_cast<class HashContainer_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > &&> <NoOp>
| |       `-DeclRefExpr 0x55b71dfa20b0 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55b71dfa1f68 '' 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
| `-CompoundStmt 0x55b71dfa25c8 <col:7>
|-CXXMethodDecl 0x55b71dfa2d88 <col:7> col:7 implicit operator= 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &)' inline default trivial noexcept-unevaluated 0x55b71dfa2d88
| `-ParmVarDecl 0x55b71dfa2e98 <col:7> col:7 'const HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &'
`-CXXMethodDecl 0x55b71dfa3238 <col:7> col:7 implicit used operator= 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &(HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55b71dfa3348 <col:7> col:7 used 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
  `-CompoundStmt 0x55b71dfa3f58 <col:7>
    |-CXXMemberCallExpr 0x55b71dfa3ef8 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue
    | |-MemberExpr 0x55b71dfa39f0 <col:7> '<bound member function type>' .operator= 0x55b71dfa30b8
    | | `-ImplicitCastExpr 0x55b71dfa3920 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
    | |   `-UnaryOperator 0x55b71dfa3908 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
    | |     `-CXXThisExpr 0x55b71dfa38f8 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this
    | `-ImplicitCastExpr 0x55b71dfa39d0 <col:7> 'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >':'HashContainer_const_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' xvalue <UncheckedDerivedToBase (HashContainer_const_iterator)>
    |   `-DeclRefExpr 0x55b71dfa39b0 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue ParmVar 0x55b71dfa3348 '' 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > &&'
    `-ReturnStmt 0x55b71dfa3f48 <col:7>
      `-UnaryOperator 0x55b71dfa3f30 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> >' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55b71dfa3f20 <col:7> 'HashContainer_iterator<IPRewriterEntry, HashContainer_adapter<IPRewriterEntry> > *' this

Layout: <CGRecordLayout
  LLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  NonVirtualBaseLLVMType:%class.HashContainer_iterator = type { %class.HashContainer_const_iterator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71df52430 prev 0x55b71df4f9b0 <../elements/ip/iprwmapping.hh:68:1, line:174:1> line:68:7 referenced class IPRewriterFlow definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71df52528 <col:1, col:7> col:7 implicit referenced class IPRewriterFlow
|-AccessSpecDecl 0x55b71df525b8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55b71df529d8 <line:70:5, line:72:61> line:70:5 used IPRewriterFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55b71df525f0 <col:20, col:37> col:37 owner 'IPRewriterInput *'
| |-ParmVarDecl 0x55b71df52668 <col:44, col:60> col:60 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55b71df526e0 <line:71:6, col:22> col:22 rewritten_flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55b71df52758 <line:72:6, col:14> col:14 ip_p 'uint8_t':'unsigned char'
| |-ParmVarDecl 0x55b71df527d0 <col:20, col:25> col:25 guaranteed 'bool'
| `-ParmVarDecl 0x55b71df52848 <col:37, col:53> col:53 expiry_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55b71df52bb8 <line:74:5, line:76:5> line:74:22 used entry 'IPRewriterEntry &(bool)'
| |-ParmVarDecl 0x55b71df52ac0 <col:28, col:33> col:33 used direction 'bool'
| `-CompoundStmt 0x55b71df569b0 <col:44, line:76:5>
|   `-ReturnStmt 0x55b71df569a0 <line:75:2, col:21>
|     `-ArraySubscriptExpr 0x55b71df56980 <col:9, col:21> 'IPRewriterEntry' lvalue
|       |-ImplicitCastExpr 0x55b71df56950 <col:9> 'IPRewriterEntry *' <ArrayToPointerDecay>
|       | `-MemberExpr 0x55b71df56900 <col:9> 'IPRewriterEntry [2]' lvalue ->_e 0x55b71df55188
|       |   `-CXXThisExpr 0x55b71df568f0 <col:9> 'IPRewriterFlow *' implicit this
|       `-ImplicitCastExpr 0x55b71df56968 <col:12> 'bool' <LValueToRValue>
|         `-DeclRefExpr 0x55b71df56930 <col:12> 'bool' lvalue ParmVar 0x55b71df52ac0 'direction' 'bool'
|-CXXMethodDecl 0x55b71df52d68 <line:77:5, line:79:5> line:77:28 entry 'const IPRewriterEntry &(bool) const'
| |-ParmVarDecl 0x55b71df52c70 <col:34, col:39> col:39 used direction 'bool'
| `-CompoundStmt 0x55b71df56ac8 <col:56, line:79:5>
|   `-ReturnStmt 0x55b71df56ab8 <line:78:2, col:21>
|     `-ArraySubscriptExpr 0x55b71df56a98 <col:9, col:21> 'const IPRewriterEntry' lvalue
|       |-ImplicitCastExpr 0x55b71df56a68 <col:9> 'const IPRewriterEntry *' <ArrayToPointerDecay>
|       | `-MemberExpr 0x55b71df569d8 <col:9> 'IPRewriterEntry const[2]' lvalue ->_e 0x55b71df55188
|       |   `-CXXThisExpr 0x55b71df569c8 <col:9> 'const IPRewriterFlow *' implicit this
|       `-ImplicitCastExpr 0x55b71df56a80 <col:12> 'bool' <LValueToRValue>
|         `-DeclRefExpr 0x55b71df56a08 <col:12> 'bool' lvalue ParmVar 0x55b71df52c70 'direction' 'bool'
|-CXXMethodDecl 0x55b71df52e30 <line:83:5, line:85:5> line:83:21 used expiry 'click_jiffies_t () const'
| `-CompoundStmt 0x55b71df56b48 <col:36, line:85:5>
|   `-ReturnStmt 0x55b71df56b38 <line:84:2, col:9>
|     `-ImplicitCastExpr 0x55b71df56b20 <col:9> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55b71df56af0 <col:9> 'const click_jiffies_t':'const unsigned int' lvalue ->_expiry_j 0x55b71df552a8
|         `-CXXThisExpr 0x55b71df56ae0 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55b71df52fd8 <line:89:5, line:91:5> line:89:10 expired 'bool (click_jiffies_t) const'
| |-ParmVarDecl 0x55b71df52ee0 <col:18, col:34> col:34 used now_j 'click_jiffies_t':'unsigned int'
| `-CompoundStmt 0x55b71df56d68 <col:47, line:91:5>
|   `-ReturnStmt 0x55b71df56d58 <line:90:2, col:67>
|     `-UnaryOperator 0x55b71df56d40 <col:9, col:67> 'bool' prefix '!' cannot overflow
|       `-ParenExpr 0x55b71df56d20 <col:10, col:67> 'bool'
|         `-BinaryOperator 0x55b71df56d00 <col:11, col:66> 'bool' '<'
|           |-CStyleCastExpr 0x55b71df56cb8 <col:11, col:62> 'click_jiffies_difference_t':'int' <NoOp>
|           | `-ImplicitCastExpr 0x55b71df56ca0 <col:40, col:62> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|           |   `-ParenExpr 0x55b71df56c80 <col:40, col:62> 'unsigned int'
|           |     `-BinaryOperator 0x55b71df56c30 <col:41, col:61> 'unsigned int' '-'
|           |       |-ImplicitCastExpr 0x55b71df56c00 <col:41, col:47> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |       | `-ParenExpr 0x55b71df56b80 <col:41, col:47> 'click_jiffies_t':'unsigned int' lvalue
|           |       |   `-DeclRefExpr 0x55b71df56b60 <col:42> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55b71df52ee0 'now_j' 'click_jiffies_t':'unsigned int'
|           |       `-ImplicitCastExpr 0x55b71df56c18 <col:51, col:61> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|           |         `-ParenExpr 0x55b71df56be0 <col:51, col:61> 'const click_jiffies_t':'const unsigned int' lvalue
|           |           `-MemberExpr 0x55b71df56bb0 <col:52> 'const click_jiffies_t':'const unsigned int' lvalue ->_expiry_j 0x55b71df552a8
|           |             `-CXXThisExpr 0x55b71df56ba0 <col:52> 'const IPRewriterFlow *' implicit this
|           `-IntegerLiteral 0x55b71df56ce0 <col:66> 'int' 0
|-CXXMethodDecl 0x55b71df530a0 <line:94:5, line:96:5> line:94:10 guaranteed 'bool () const'
| `-CompoundStmt 0x55b71df56de8 <col:29, line:96:5>
|   `-ReturnStmt 0x55b71df56dd8 <line:95:2, col:9>
|     `-ImplicitCastExpr 0x55b71df56dc0 <col:9> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55b71df56d90 <col:9> 'const bool' lvalue ->_guaranteed 0x55b71df55468
|         `-CXXThisExpr 0x55b71df56d80 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55b71df53388 <line:102:5, line:103:34> line:102:10 used change_expiry 'void (IPRewriterHeap *, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55b71df53178 <col:24, col:40> col:40 h 'IPRewriterHeap *'
| |-ParmVarDecl 0x55b71df531f0 <col:43, col:48> col:48 guaranteed 'bool'
| `-ParmVarDecl 0x55b71df53268 <line:103:10, col:26> col:26 expiry_j 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55b71df53728 <line:114:5, line:118:5> line:114:10 change_expiry_by_timeout 'void (IPRewriterHeap *, click_jiffies_t, const uint32_t *)'
| |-ParmVarDecl 0x55b71df53450 <col:35, col:51> col:51 used h 'IPRewriterHeap *'
| |-ParmVarDecl 0x55b71df534c8 <col:54, col:70> col:70 used now_j 'click_jiffies_t':'unsigned int'
| |-ParmVarDecl 0x55b71df53600 <line:115:7, col:32> col:22 used timeouts 'const uint32_t *':'const uint32_t *'
| `-CompoundStmt 0x55b71df57288 <col:35, line:118:5>
|   |-DeclStmt 0x55b71df57058 <line:116:2, col:60>
|   | `-VarDecl 0x55b71df56e10 <col:2, col:59> col:11 used timeout 'uint32_t':'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x55b71df57040 <col:21, col:59> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     `-ConditionalOperator 0x55b71df57010 <col:21, col:59> 'const uint32_t':'const unsigned int' lvalue
|   |       |-ImplicitCastExpr 0x55b71df56ff8 <col:21, col:31> 'bool' <IntegralToBoolean>
|   |       | `-ImplicitCastExpr 0x55b71df56fe0 <col:21, col:31> 'uint32_t':'unsigned int' <LValueToRValue>
|   |       |   `-ArraySubscriptExpr 0x55b71df56ed0 <col:21, col:31> 'const uint32_t':'const unsigned int' lvalue
|   |       |     |-ImplicitCastExpr 0x55b71df56eb8 <col:21> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x55b71df56e78 <col:21> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55b71df53600 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |       |     `-IntegerLiteral 0x55b71df56e98 <col:30> 'int' 1
|   |       |-ArraySubscriptExpr 0x55b71df56f48 <col:35, col:45> 'const uint32_t':'const unsigned int' lvalue
|   |       | |-ImplicitCastExpr 0x55b71df56f30 <col:35> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x55b71df56ef0 <col:35> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55b71df53600 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |       | `-IntegerLiteral 0x55b71df56f10 <col:44> 'int' 1
|   |       `-ArraySubscriptExpr 0x55b71df56fc0 <col:49, col:59> 'const uint32_t':'const unsigned int' lvalue
|   |         |-ImplicitCastExpr 0x55b71df56fa8 <col:49> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x55b71df56f68 <col:49> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55b71df53600 'timeouts' 'const uint32_t *':'const uint32_t *'
|   |         `-IntegerLiteral 0x55b71df56f88 <col:58> 'int' 0
|   `-CXXMemberCallExpr 0x55b71df57238 <line:117:2, col:49> 'void'
|     |-MemberExpr 0x55b71df57080 <col:2> '<bound member function type>' ->change_expiry 0x55b71df53388
|     | `-CXXThisExpr 0x55b71df57070 <col:2> 'IPRewriterFlow *' implicit this
|     |-ImplicitCastExpr 0x55b71df57270 <col:16> 'IPRewriterHeap *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b71df570b0 <col:16> 'IPRewriterHeap *' lvalue ParmVar 0x55b71df53450 'h' 'IPRewriterHeap *'
|     |-UnaryOperator 0x55b71df57190 <col:19, col:31> 'bool' prefix '!' cannot overflow
|     | `-UnaryOperator 0x55b71df57178 <col:20, col:31> 'bool' prefix '!' cannot overflow
|     |   `-ImplicitCastExpr 0x55b71df57160 <col:21, col:31> 'bool' <IntegralToBoolean>
|     |     `-ImplicitCastExpr 0x55b71df57148 <col:21, col:31> 'uint32_t':'unsigned int' <LValueToRValue>
|     |       `-ArraySubscriptExpr 0x55b71df57128 <col:21, col:31> 'const uint32_t':'const unsigned int' lvalue
|     |         |-ImplicitCastExpr 0x55b71df57110 <col:21> 'const uint32_t *':'const uint32_t *' <LValueToRValue>
|     |         | `-DeclRefExpr 0x55b71df570d0 <col:21> 'const uint32_t *':'const uint32_t *' lvalue ParmVar 0x55b71df53600 'timeouts' 'const uint32_t *':'const uint32_t *'
|     |         `-IntegerLiteral 0x55b71df570f0 <col:30> 'int' 1
|     `-BinaryOperator 0x55b71df57218 <col:34, col:42> 'unsigned int' '+'
|       |-ImplicitCastExpr 0x55b71df571e8 <col:34> 'click_jiffies_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b71df571a8 <col:34> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55b71df534c8 'now_j' 'click_jiffies_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b71df57200 <col:42> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b71df571c8 <col:42> 'uint32_t':'unsigned int' lvalue Var 0x55b71df56e10 'timeout' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b71df53858 <line:120:5, line:122:5> line:120:13 used ip_p 'uint8_t () const'
| `-CompoundStmt 0x55b71df57310 <col:26, line:122:5>
|   `-ReturnStmt 0x55b71df57300 <line:121:2, col:9>
|     `-ImplicitCastExpr 0x55b71df572e8 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-MemberExpr 0x55b71df572b8 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_ip_p 0x55b71df553a8
|         `-CXXThisExpr 0x55b71df572a8 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55b71df53948 <line:124:5, line:126:5> line:124:22 used owner 'IPRewriterInput *() const'
| `-CompoundStmt 0x55b71df57390 <col:36, line:126:5>
|   `-ReturnStmt 0x55b71df57380 <line:125:2, col:9>
|     `-ImplicitCastExpr 0x55b71df57368 <col:9> 'IPRewriterInput *' <LValueToRValue>
|       `-MemberExpr 0x55b71df57338 <col:9> 'IPRewriterInput *const' lvalue ->_owner 0x55b71df55528
|         `-CXXThisExpr 0x55b71df57328 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55b71df53a08 <line:128:5, line:130:5> line:128:13 reply_anno 'uint8_t () const'
| `-CompoundStmt 0x55b71df57410 <col:32, line:130:5>
|   `-ReturnStmt 0x55b71df57400 <line:129:2, col:9>
|     `-ImplicitCastExpr 0x55b71df573e8 <col:9> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-MemberExpr 0x55b71df573b8 <col:9> 'const uint8_t':'const unsigned char' lvalue ->_reply_anno 0x55b71df554c8
|         `-CXXThisExpr 0x55b71df573a8 <col:9> 'const IPRewriterFlow *' implicit this
|-CXXMethodDecl 0x55b71df53b78 <line:131:5, line:133:5> line:131:10 set_reply_anno 'void (uint8_t)'
| |-ParmVarDecl 0x55b71df53ab8 <col:25, col:33> col:33 used reply_anno 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55b71df574c0 <col:45, line:133:5>
|   `-BinaryOperator 0x55b71df574a0 <line:132:2, col:16> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55b71df57438 <col:2> 'uint8_t':'unsigned char' lvalue ->_reply_anno 0x55b71df554c8
|     | `-CXXThisExpr 0x55b71df57428 <col:2> 'IPRewriterFlow *' implicit this
|     `-ImplicitCastExpr 0x55b71df57488 <col:16> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55b71df57468 <col:16> 'uint8_t':'unsigned char' lvalue ParmVar 0x55b71df53ab8 'reply_anno' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55b71df53e48 <line:135:5, line:136:27> line:135:24 update_csum 'void (uint16_t *, bool, uint16_t)' static inline
| |-ParmVarDecl 0x55b71df53c30 <col:36, col:46> col:46 csum 'uint16_t *'
| |-ParmVarDecl 0x55b71df53ca8 <col:52, col:57> col:57 direction 'bool'
| `-ParmVarDecl 0x55b71df53d20 <line:136:8, col:17> col:17 csum_delta 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55b71df540e8 <line:138:5, col:65> col:10 apply 'void (WritablePacket *, bool, unsigned int)'
| |-ParmVarDecl 0x55b71df53f10 <col:16, col:32> col:32 p 'WritablePacket *'
| |-ParmVarDecl 0x55b71df53f88 <col:35, col:40> col:40 direction 'bool'
| `-ParmVarDecl 0x55b71df54008 <col:51, col:60> col:60 annos 'unsigned int'
|-CXXMethodDecl 0x55b71df543c8 <line:140:5, col:72> col:10 used unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x55b71df541b0 <col:18, col:31> col:31 sa 'StringAccum &'
| |-ParmVarDecl 0x55b71df54228 <col:35, col:40> col:40 direction 'bool'
| `-ParmVarDecl 0x55b71df542a0 <col:51, col:67> col:67 now 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55b71df54620 <line:141:5, col:78> col:10 unparse_ports 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x55b71df54490 <col:24, col:37> col:37 sa 'StringAccum &'
| |-ParmVarDecl 0x55b71df54508 <col:41, col:46> col:46 direction 'bool'
| `-ParmVarDecl 0x55b71df54580 <col:57, col:73> col:73 now 'click_jiffies_t':'unsigned int'
|-CXXRecordDecl 0x55b71df546d8 <line:143:5, line:147:5> line:143:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b71df547f8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55b71df54a18 <line:144:2, line:146:2> line:144:14 operator() 'bool (IPRewriterFlow *, IPRewriterFlow *)' inline
|   |-ParmVarDecl 0x55b71df54898 <col:25, col:41> col:41 used a 'IPRewriterFlow *'
|   |-ParmVarDecl 0x55b71df54910 <col:44, col:60> col:60 used b 'IPRewriterFlow *'
|   `-CompoundStmt 0x55b71df57778 <col:63, line:146:2>
|     `-ReturnStmt 0x55b71df57768 <line:145:6, col:78>
|       `-ParenExpr 0x55b71df57748 <col:13, col:78> 'bool'
|         `-BinaryOperator 0x55b71df57728 <col:14, col:77> 'bool' '<'
|           |-CStyleCastExpr 0x55b71df576e0 <col:14, col:73> 'click_jiffies_difference_t':'int' <NoOp>
|           | `-ImplicitCastExpr 0x55b71df576c8 <col:43, col:73> 'click_jiffies_difference_t':'int' <IntegralCast> part_of_explicit_cast
|           |   `-ParenExpr 0x55b71df576a8 <col:43, col:73> 'unsigned int'
|           |     `-BinaryOperator 0x55b71df57658 <col:44, col:72> 'unsigned int' '-'
|           |       |-ParenExpr 0x55b71df57578 <col:44, col:56> 'click_jiffies_t':'unsigned int'
|           |       | `-CXXMemberCallExpr 0x55b71df57540 <col:45, col:55> 'click_jiffies_t':'unsigned int'
|           |       |   `-MemberExpr 0x55b71df57510 <col:45, col:48> '<bound member function type>' ->expiry 0x55b71df52e30
|           |       |     `-ImplicitCastExpr 0x55b71df57560 <col:45> 'const IPRewriterFlow *' <NoOp>
|           |       |       `-ImplicitCastExpr 0x55b71df574f8 <col:45> 'IPRewriterFlow *' <LValueToRValue>
|           |       |         `-DeclRefExpr 0x55b71df574d8 <col:45> 'IPRewriterFlow *' lvalue ParmVar 0x55b71df54898 'a' 'IPRewriterFlow *'
|           |       `-ParenExpr 0x55b71df57638 <col:60, col:72> 'click_jiffies_t':'unsigned int'
|           |         `-CXXMemberCallExpr 0x55b71df57600 <col:61, col:71> 'click_jiffies_t':'unsigned int'
|           |           `-MemberExpr 0x55b71df575d0 <col:61, col:64> '<bound member function type>' ->expiry 0x55b71df52e30
|           |             `-ImplicitCastExpr 0x55b71df57620 <col:61> 'const IPRewriterFlow *' <NoOp>
|           |               `-ImplicitCastExpr 0x55b71df575b8 <col:61> 'IPRewriterFlow *' <LValueToRValue>
|           |                 `-DeclRefExpr 0x55b71df57598 <col:61> 'IPRewriterFlow *' lvalue ParmVar 0x55b71df54910 'b' 'IPRewriterFlow *'
|           `-IntegerLiteral 0x55b71df57708 <col:77> 'int' 0
|-CXXRecordDecl 0x55b71df54ae0 <line:148:5, line:152:5> line:148:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b71df54bf8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55b71df54e58 <line:149:2, line:151:2> line:149:14 operator() 'void (IPRewriterFlow **, IPRewriterFlow **)' inline
|   |-ParmVarDecl 0x55b71df54cd0 <col:25, col:42> col:42 used begin 'IPRewriterFlow **'
|   |-ParmVarDecl 0x55b71df54d50 <col:49, col:66> col:66 used it 'IPRewriterFlow **'
|   `-CompoundStmt 0x55b71df57910 <col:70, line:151:2>
|     `-BinaryOperator 0x55b71df578f0 <line:150:6, col:27> 'size_t':'unsigned long' lvalue bitfield '='
|       |-MemberExpr 0x55b71df57818 <col:6, col:13> 'size_t':'unsigned long' lvalue bitfield ->_place 0x55b71df55348
|       | `-ImplicitCastExpr 0x55b71df57800 <col:6, col:10> 'IPRewriterFlow *' <LValueToRValue>
|       |   `-ParenExpr 0x55b71df577e0 <col:6, col:10> 'IPRewriterFlow *' lvalue
|       |     `-UnaryOperator 0x55b71df577c8 <col:7, col:8> 'IPRewriterFlow *' lvalue prefix '*' cannot overflow
|       |       `-ImplicitCastExpr 0x55b71df577b0 <col:8> 'IPRewriterFlow **' <LValueToRValue>
|       |         `-DeclRefExpr 0x55b71df57790 <col:8> 'IPRewriterFlow **' lvalue ParmVar 0x55b71df54d50 'it' 'IPRewriterFlow **'
|       `-ImplicitCastExpr 0x55b71df578d8 <col:22, col:27> 'size_t':'unsigned long' <IntegralCast>
|         `-BinaryOperator 0x55b71df578b8 <col:22, col:27> 'long' '-'
|           |-ImplicitCastExpr 0x55b71df57888 <col:22> 'IPRewriterFlow **' <LValueToRValue>
|           | `-DeclRefExpr 0x55b71df57848 <col:22> 'IPRewriterFlow **' lvalue ParmVar 0x55b71df54d50 'it' 'IPRewriterFlow **'
|           `-ImplicitCastExpr 0x55b71df578a0 <col:27> 'IPRewriterFlow **' <LValueToRValue>
|             `-DeclRefExpr 0x55b71df57868 <col:27> 'IPRewriterFlow **' lvalue ParmVar 0x55b71df54cd0 'begin' 'IPRewriterFlow **'
|-AccessSpecDecl 0x55b71df54f20 <line:154:3, col:12> col:3 protected
|-FieldDecl 0x55b71df55188 <line:156:5, col:25> col:21 referenced _e 'IPRewriterEntry [2]'
|-FieldDecl 0x55b71df551e8 <line:157:5, col:14> col:14 _ip_csum_delta 'uint16_t':'unsigned short'
|-FieldDecl 0x55b71df55248 <line:158:5, col:14> col:14 _udp_csum_delta 'uint16_t':'unsigned short'
|-FieldDecl 0x55b71df552a8 <line:159:5, col:21> col:21 referenced _expiry_j 'click_jiffies_t':'unsigned int'
|-FieldDecl 0x55b71df55348 <line:160:5, col:21> col:12 referenced _place 'size_t':'unsigned long'
| `-ConstantExpr 0x55b71df55328 <col:21> 'int' Int: 32
|   `-IntegerLiteral 0x55b71df552f8 <col:21> 'int' 32
|-FieldDecl 0x55b71df553a8 <line:161:5, col:13> col:13 referenced _ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55b71df55408 <line:162:5, col:13> col:13 referenced _tflags 'uint8_t':'unsigned char'
|-FieldDecl 0x55b71df55468 <line:163:5, col:10> col:10 referenced _guaranteed 'bool'
|-FieldDecl 0x55b71df554c8 <line:164:5, col:13> col:13 referenced _reply_anno 'uint8_t':'unsigned char'
|-FieldDecl 0x55b71df55528 <line:165:5, col:22> col:22 referenced _owner 'IPRewriterInput *'
|-FriendDecl 0x55b71df555d0 <line:167:5, col:18> col:12 'class IPRewriterBase':'IPRewriterBase'
|-FriendDecl 0x55b71df55660 <line:168:5, col:18> col:12 'class IPRewriterEntry':'IPRewriterEntry'
|-AccessSpecDecl 0x55b71df556a0 <line:170:3, col:10> col:3 private
|-CXXMethodDecl 0x55b71df56830 <line:172:5, col:38> col:10 destroy 'void (IPRewriterHeap *)'
| `-ParmVarDecl 0x55b71df556d8 <col:18, col:34> col:34 heap 'IPRewriterHeap *'
|-CXXConstructorDecl 0x55b71dfaad28 <line:68:7> col:7 implicit constexpr IPRewriterFlow 'void (const IPRewriterFlow &)' inline default trivial noexcept-unevaluated 0x55b71dfaad28
| `-ParmVarDecl 0x55b71dfaae38 <col:7> col:7 'const IPRewriterFlow &'
|-CXXConstructorDecl 0x55b71dfaafb8 <col:7> col:7 implicit constexpr IPRewriterFlow 'void (IPRewriterFlow &&)' inline default trivial noexcept-unevaluated 0x55b71dfaafb8
| `-ParmVarDecl 0x55b71dfab0c8 <col:7> col:7 'IPRewriterFlow &&'
`-CXXDestructorDecl 0x55b71dfab2b8 <col:7> col:7 implicit referenced ~IPRewriterFlow 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterFlow = type { [2 x %class.IPRewriterEntry], i16, i16, i32, i32, i8, i8, i8, i8, %class.IPRewriterInput* }
  NonVirtualBaseLLVMType:%class.IPRewriterFlow = type { [2 x %class.IPRewriterEntry], i16, i16, i32, i32, i8, i8, i8, i8, %class.IPRewriterInput* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:32 IsSigned:0 StorageSize:32 StorageOffset:56>
]>

*** Dumping AST Record Layout
         0 | struct char_array<8>
         0 |   char [8] x
           | [sizeof=8, dsize=8, align=1,
           |  nvsize=8, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71df6dae0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 8
|-PackedAttr 0x55b71e2789b0 <line:167:18>
|-CXXRecordDecl 0x55b71e278a70 prev 0x55b71df6dae0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55b71e278b80 <line:166:5, col:13> col:10 x 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [8 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e11ebf0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55b71e2a3df0 <line:167:18>
|-CXXRecordDecl 0x55b71e2a3eb0 prev 0x55b71e11ebf0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55b71e2a3fc0 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashMap<class IPFlowID, class MyIPRewriterEntry>::Pair
         0 |   class IPFlowID key
         0 |     class IPAddress _saddr
         0 |       uint32_t _addr
         4 |     class IPAddress _daddr
         4 |       uint32_t _addr
         8 |     uint16_t _sport
        10 |     uint16_t _dport
        12 |   class MyIPRewriterEntry value
        12 |     class IPFlowID orig_flow
        12 |       class IPAddress _saddr
        12 |         uint32_t _addr
        16 |       class IPAddress _daddr
        16 |         uint32_t _addr
        20 |       uint16_t _sport
        22 |       uint16_t _dport
        24 |     class IPFlowID changed_flow
        24 |       class IPAddress _saddr
        24 |         uint32_t _addr
        28 |       class IPAddress _daddr
        28 |         uint32_t _addr
        32 |       uint16_t _sport
        34 |       uint16_t _dport
        36 |     int port
           | [sizeof=40, dsize=40, align=4,
           |  nvsize=40, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e028eb0 <../dummy_inc/click/hashmap.hh:80:3, line:83:3> line:80:10 struct Pair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b71e2a7ab0 prev 0x55b71e02d810 <col:3, col:10> col:10 implicit struct Pair
|-FieldDecl 0x55b71e2a7b50 <line:81:5, col:7> col:7 key 'IPFlowID':'IPFlowID'
`-FieldDecl 0x55b71e2a7bb0 <line:82:5, col:7> col:7 value 'MyIPRewriterEntry':'MyIPRewriterEntry'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap<IPFlowID, MyIPRewriterEntry>::Pair" = type { %class.IPFlowID, %class.MyIPRewriterEntry }
  NonVirtualBaseLLVMType:%"struct.HashMap<IPFlowID, MyIPRewriterEntry>::Pair" = type { %class.IPFlowID, %class.MyIPRewriterEntry }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashMap<class IPFlowID, class MyIPRewriterEntry>::Elt
         0 |   struct HashMap<class IPFlowID, class MyIPRewriterEntry>::Pair (base)
         0 |     class IPFlowID key
         0 |       class IPAddress _saddr
         0 |         uint32_t _addr
         4 |       class IPAddress _daddr
         4 |         uint32_t _addr
         8 |       uint16_t _sport
        10 |       uint16_t _dport
        12 |     class MyIPRewriterEntry value
        12 |       class IPFlowID orig_flow
        12 |         class IPAddress _saddr
        12 |           uint32_t _addr
        16 |         class IPAddress _daddr
        16 |           uint32_t _addr
        20 |         uint16_t _sport
        22 |         uint16_t _dport
        24 |       class IPFlowID changed_flow
        24 |         class IPAddress _saddr
        24 |           uint32_t _addr
        28 |         class IPAddress _daddr
        28 |           uint32_t _addr
        32 |         uint16_t _sport
        34 |         uint16_t _dport
        36 |       int port
        40 |   struct HashMap<class IPFlowID, class MyIPRewriterEntry>::Elt * next
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71e02db40 <../dummy_inc/click/hashmap.hh:91:5, line:97:5> line:91:12 struct Elt definition
|-DefinitionData pass_in_registers trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'HashMap<IPFlowID, MyIPRewriterEntry>::Pair'
|-CXXRecordDecl 0x55b71e2a7c48 prev 0x55b71e02db40 <col:5, col:12> col:12 implicit struct Elt
`-FieldDecl 0x55b71e2a7ce8 <line:92:2, col:7> col:7 next 'HashMap<IPFlowID, MyIPRewriterEntry>::Elt *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap<IPFlowID, MyIPRewriterEntry>::Elt" = type { %"struct.HashMap<IPFlowID, MyIPRewriterEntry>::Pair", %"struct.HashMap<IPFlowID, MyIPRewriterEntry>::Elt"* }
  NonVirtualBaseLLVMType:%"struct.HashMap<IPFlowID, MyIPRewriterEntry>::Elt" = type { %"struct.HashMap<IPFlowID, MyIPRewriterEntry>::Pair", %"struct.HashMap<IPFlowID, MyIPRewriterEntry>::Elt"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<40>
         0 |   char [40] x
           | [sizeof=40, dsize=40, align=1,
           |  nvsize=40, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55b71e01d2f0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 40
|-PackedAttr 0x55b71e2a8528 <line:167:18>
|-CXXRecordDecl 0x55b71e2a85e8 prev 0x55b71e01d2f0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55b71e2a86f8 <line:166:5, col:13> col:10 x 'char [40]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.26 = type { [40 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.26 = type { [40 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<unsigned int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   unsigned int * _ptr
        24 |   unsigned int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TCPRewriter::TCPFlow::delta_transition
         0 |   int32_t [2] delta
         8 |   tcp_seq_t [2] trigger
        16 |   uintptr_t nextptr
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dfa76c8 <../elements/tcpudp/tcprewriter.hh:136:2, line:149:2> line:136:9 referenced struct delta_transition definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b71dfa77e8 <col:2, col:9> col:9 implicit referenced struct delta_transition
|-FieldDecl 0x55b71dfa7918 <line:137:6, col:21> col:14 referenced delta 'int32_t [2]'
|-FieldDecl 0x55b71dfa7a08 <line:138:6, col:25> col:16 referenced trigger 'tcp_seq_t [2]'
|-FieldDecl 0x55b71dfa7a68 <line:139:6, col:16> col:16 referenced nextptr 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55b71dfa7b20 <line:140:6, line:142:6> line:140:6 delta_transition 'void ()'
| `-CompoundStmt 0x55b71dfabcd0 <col:25, line:142:6>
|   `-CallExpr 0x55b71dfabc80 <line:141:3, col:43> 'void *'
|     |-ImplicitCastExpr 0x55b71dfabc68 <col:3> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55b71dfabc48 <col:3> 'void *(void *, int, size_t) throw()' lvalue Function 0x55b71db98be8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55b71dfabcb8 <col:10> 'void *' <BitCast>
|     | `-CXXThisExpr 0x55b71dfabbe8 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' this
|     |-IntegerLiteral 0x55b71dfabbf8 <col:16> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55b71dfabc28 <col:19, col:42> 'unsigned long' sizeof 'TCPRewriter::TCPFlow::delta_transition'
|-CXXMethodDecl 0x55b71dfa7c48 <line:143:6, line:145:6> line:143:24 used next 'TCPRewriter::TCPFlow::delta_transition *() const'
| `-CompoundStmt 0x55b71dfabe80 <col:37, line:145:6>
|   `-ReturnStmt 0x55b71dfabe70 <line:144:3, col:70>
|     `-CXXReinterpretCastExpr 0x55b71dfabe40 <col:10, col:70> 'TCPRewriter::TCPFlow::delta_transition *' reinterpret_cast<struct TCPRewriter::TCPFlow::delta_transition *> <IntegralToPointer>
|       `-BinaryOperator 0x55b71dfabe10 <col:47, col:69> 'unsigned long' '-'
|         |-ImplicitCastExpr 0x55b71dfabdf8 <col:47> 'uintptr_t':'unsigned long' <LValueToRValue>
|         | `-MemberExpr 0x55b71dfabcf8 <col:47> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55b71dfa7a68
|         |   `-CXXThisExpr 0x55b71dfabce8 <col:47> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
|         `-ParenExpr 0x55b71dfabdd8 <col:57, col:69> 'unsigned long'
|           `-BinaryOperator 0x55b71dfabdb8 <col:58, col:68> 'unsigned long' '&'
|             |-ImplicitCastExpr 0x55b71dfabd88 <col:58> 'uintptr_t':'unsigned long' <LValueToRValue>
|             | `-MemberExpr 0x55b71dfabd38 <col:58> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55b71dfa7a68
|             |   `-CXXThisExpr 0x55b71dfabd28 <col:58> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
|             `-ImplicitCastExpr 0x55b71dfabda0 <col:68> 'unsigned long' <IntegralCast>
|               `-IntegerLiteral 0x55b71dfabd68 <col:68> 'int' 3
|-CXXMethodDecl 0x55b71dfa7db8 <line:146:6, line:148:6> line:146:11 used has_trigger 'bool (bool) const'
| |-ParmVarDecl 0x55b71dfa7cf8 <col:23, col:28> col:28 used direction 'bool'
| `-CompoundStmt 0x55b71dfac000 <col:45, line:148:6>
|   `-ReturnStmt 0x55b71dfabff0 <line:147:3, col:35>
|     `-ImplicitCastExpr 0x55b71dfabfd8 <col:10, col:35> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55b71dfabfb8 <col:10, col:35> 'unsigned long' '&'
|         |-ImplicitCastExpr 0x55b71dfabf88 <col:10> 'uintptr_t':'unsigned long' <LValueToRValue>
|         | `-MemberExpr 0x55b71dfabea8 <col:10> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55b71dfa7a68
|         |   `-CXXThisExpr 0x55b71dfabe98 <col:10> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
|         `-ImplicitCastExpr 0x55b71dfabfa0 <col:20, col:35> 'unsigned long' <IntegralCast>
|           `-ParenExpr 0x55b71dfabf68 <col:20, col:35> 'int'
|             `-BinaryOperator 0x55b71dfabf48 <col:21, col:26> 'int' '<<'
|               |-IntegerLiteral 0x55b71dfabed8 <col:21> 'int' 1
|               `-ImplicitCastExpr 0x55b71dfabf30 <col:26> 'int' <IntegralCast>
|                 `-ImplicitCastExpr 0x55b71dfabf18 <col:26> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x55b71dfabef8 <col:26> 'bool' lvalue ParmVar 0x55b71dfa7cf8 'direction' 'bool'
`-CXXDestructorDecl 0x55b71dfab5f8 <line:136:9> col:9 implicit ~delta_transition 'void ()' inline default trivial noexcept-unevaluated 0x55b71dfab5f8

Layout: <CGRecordLayout
  LLVMType:%"struct.TCPRewriter::TCPFlow::delta_transition" = type { [2 x i32], [2 x i32], i64 }
  NonVirtualBaseLLVMType:%"struct.TCPRewriter::TCPFlow::delta_transition" = type { [2 x i32], [2 x i32], i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dfa4c20 <../elements/tcpudp/tcprewriter.hh:97:5, line:155:5> line:97:11 referenced class TCPFlow definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-public 'IPRewriterFlow'
|-CXXRecordDecl 0x55b71dfa4d78 <col:5, col:11> col:11 implicit referenced class TCPFlow
|-AccessSpecDecl 0x55b71dfa4e08 <col:45, col:51> col:45 public
|-CXXConstructorDecl 0x55b71dfa51b8 <line:99:2, line:104:2> line:99:2 TCPFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55b71dfa4e40 <col:10, col:27> col:27 used owner 'IPRewriterInput *'
| |-ParmVarDecl 0x55b71dfa4eb8 <col:34, col:50> col:50 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55b71dfa4f30 <line:100:3, col:19> col:19 used rewritten_flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55b71dfa4fa8 <line:101:3, col:8> col:8 used guaranteed 'bool'
| |-ParmVarDecl 0x55b71dfa5020 <col:20, col:36> col:36 used expiry_j 'click_jiffies_t':'unsigned int'
| |-CXXCtorInitializer 'IPRewriterFlow'
| | `-CXXConstructExpr 0x55b71dfab198 <line:102:8, line:103:32> 'IPRewriterFlow' 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| |   |-ImplicitCastExpr 0x55b71dfab138 <line:102:23> 'IPRewriterInput *' <LValueToRValue>
| |   | `-DeclRefExpr 0x55b71dfaa8b8 <col:23> 'IPRewriterInput *' lvalue ParmVar 0x55b71dfa4e40 'owner' 'IPRewriterInput *'
| |   |-DeclRefExpr 0x55b71dfaa8d8 <col:30> 'const IPFlowID' lvalue ParmVar 0x55b71dfa4eb8 'flowid' 'const IPFlowID &'
| |   |-DeclRefExpr 0x55b71dfaa8f8 <col:38> 'const IPFlowID' lvalue ParmVar 0x55b71dfa4f30 'rewritten_flowid' 'const IPFlowID &'
| |   |-ImplicitCastExpr 0x55b71dfab150 <line:103:9> 'uint8_t':'unsigned char' <IntegralCast>
| |   | `-IntegerLiteral 0x55b71dfaa918 <col:9> 'int' 6
| |   |-ImplicitCastExpr 0x55b71dfab168 <col:12> 'bool' <LValueToRValue>
| |   | `-DeclRefExpr 0x55b71dfaa938 <col:12> 'bool' lvalue ParmVar 0x55b71dfa4fa8 'guaranteed' 'bool'
| |   `-ImplicitCastExpr 0x55b71dfab180 <col:24> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |     `-DeclRefExpr 0x55b71dfaa958 <col:24> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55b71dfa5020 'expiry_j' 'click_jiffies_t':'unsigned int'
| |-CXXCtorInitializer Field 0x55b71dfa7e88 '_dt' 'TCPRewriter::TCPFlow::delta_transition *'
| | `-ImplicitCastExpr 0x55b71dfab258 <col:39> 'TCPRewriter::TCPFlow::delta_transition *' <NullToPointer>
| |   `-IntegerLiteral 0x55b71dfab218 <col:39> 'int' 0
| `-CompoundStmt 0x55b71dfab2a8 <col:42, line:104:2>
|-CXXDestructorDecl 0x55b71dfa52d0 <line:106:2, line:111:2> line:106:2 used ~TCPFlow 'void () noexcept'
| `-CompoundStmt 0x55b71dfab758 <col:13, line:111:2>
|   `-WhileStmt 0x55b71dfab720 <line:107:6, line:110:6> has_var
|     |-DeclStmt 0x55b71dfab740 <line:107:13, col:35>
|     | `-VarDecl 0x55b71dfab3b0 <col:13, col:35> col:31 used x 'TCPRewriter::TCPFlow::delta_transition *' cinit
|     |   `-ImplicitCastExpr 0x55b71dfab458 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|     |     `-MemberExpr 0x55b71dfab428 <col:35> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55b71dfa7e88
|     |       `-CXXThisExpr 0x55b71dfab418 <col:35> 'TCPRewriter::TCPFlow *' implicit this
|     |-ImplicitCastExpr 0x55b71dfab4a8 <col:31> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55b71dfab490 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|     |   `-DeclRefExpr 0x55b71dfab470 <col:31> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55b71dfab3b0 'x' 'TCPRewriter::TCPFlow::delta_transition *'
|     `-CompoundStmt 0x55b71dfab700 <col:40, line:110:6>
|       |-BinaryOperator 0x55b71dfab5a0 <line:108:3, col:17> 'TCPRewriter::TCPFlow::delta_transition *' lvalue '='
|       | |-MemberExpr 0x55b71dfab4d0 <col:3> 'TCPRewriter::TCPFlow::delta_transition *' lvalue ->_dt 0x55b71dfa7e88
|       | | `-CXXThisExpr 0x55b71dfab4c0 <col:3> 'TCPRewriter::TCPFlow *' implicit this
|       | `-CXXMemberCallExpr 0x55b71dfab568 <col:9, col:17> 'TCPRewriter::TCPFlow::delta_transition *'
|       |   `-MemberExpr 0x55b71dfab538 <col:9, col:12> '<bound member function type>' ->next 0x55b71dfa7c48
|       |     `-ImplicitCastExpr 0x55b71dfab588 <col:9> 'const TCPRewriter::TCPFlow::delta_transition *' <NoOp>
|       |       `-ImplicitCastExpr 0x55b71dfab520 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|       |         `-DeclRefExpr 0x55b71dfab500 <col:9> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55b71dfab3b0 'x' 'TCPRewriter::TCPFlow::delta_transition *'
|       `-CXXDeleteExpr 0x55b71dfab6e0 <line:109:3, col:10> 'void' Function 0x55b71da8b0b8 'operator delete' 'void (void *) noexcept'
|         `-ImplicitCastExpr 0x55b71dfab5e0 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' <LValueToRValue>
|           `-DeclRefExpr 0x55b71dfab5c0 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' lvalue Var 0x55b71dfab3b0 'x' 'TCPRewriter::TCPFlow::delta_transition *'
|-EnumDecl 0x55b71dfa53b0 <line:113:2, line:118:2> line:113:2
| |-EnumConstantDecl 0x55b71dfa54b0 <line:114:6, col:23> col:6 referenced s_forward_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55b71dfa5890 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71dfa5490 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55b71dfa5470 <col:23> 'int' 1
| |-EnumConstantDecl 0x55b71dfa5540 <col:26, col:41> col:26 referenced s_reply_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55b71dfa58a8 <col:41> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71dfa5520 <col:41> 'int' Int: 2
| |     `-IntegerLiteral 0x55b71dfa5500 <col:41> 'int' 2
| |-EnumConstantDecl 0x55b71dfa5630 <line:115:6, col:50> col:6 referenced s_both_done 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55b71dfa58c0 <col:20, col:50> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71dfa5610 <col:20, col:50> 'int' Int: 3
| |     `-ParenExpr 0x55b71dfa55f0 <col:20, col:50> 'int'
| |       `-BinaryOperator 0x55b71dfa55d0 <col:21, col:38> 'int' '|'
| |         |-DeclRefExpr 0x55b71dfa5590 <col:21> 'int' EnumConstant 0x55b71dfa54b0 's_forward_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |         `-DeclRefExpr 0x55b71dfa55b0 <col:38> 'int' EnumConstant 0x55b71dfa5540 's_reply_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| |-EnumConstantDecl 0x55b71dfa56c0 <line:116:6, col:23> col:6 referenced s_forward_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55b71dfa58d8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71dfa56a0 <col:23> 'int' Int: 4
| |     `-IntegerLiteral 0x55b71dfa5680 <col:23> 'int' 4
| |-EnumConstantDecl 0x55b71dfa5750 <col:26, col:41> col:26 referenced s_reply_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
| | `-ImplicitCastExpr 0x55b71dfa58f0 <col:41> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b71dfa5730 <col:41> 'int' Int: 8
| |     `-IntegerLiteral 0x55b71dfa5710 <col:41> 'int' 8
| `-EnumConstantDecl 0x55b71dfa5840 <line:117:6, col:50> col:6 referenced s_both_data 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|   `-ImplicitCastExpr 0x55b71dfa5908 <col:20, col:50> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b71dfa5820 <col:20, col:50> 'int' Int: 12
|       `-ParenExpr 0x55b71dfa5800 <col:20, col:50> 'int'
|         `-BinaryOperator 0x55b71dfa57e0 <col:21, col:38> 'int' '|'
|           |-DeclRefExpr 0x55b71dfa57a0 <col:21> 'int' EnumConstant 0x55b71dfa56c0 's_forward_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|           `-DeclRefExpr 0x55b71dfa57c0 <col:38> 'int' EnumConstant 0x55b71dfa5750 's_reply_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|-CXXMethodDecl 0x55b71dfa5968 <line:119:2, line:121:2> line:119:7 used both_done 'bool () const'
| `-CompoundStmt 0x55b71dfab970 <col:25, line:121:2>
|   `-ReturnStmt 0x55b71dfab960 <line:120:6, col:40>
|     `-BinaryOperator 0x55b71dfab940 <col:13, col:40> 'bool' '=='
|       |-ParenExpr 0x55b71dfab858 <col:13, col:35> 'int'
|       | `-BinaryOperator 0x55b71dfab838 <col:14, col:24> 'int' '&'
|       |   |-ImplicitCastExpr 0x55b71dfab808 <col:14> 'int' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x55b71dfab7f0 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   |   `-MemberExpr 0x55b71dfab7a0 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55b71df55408
|       |   |     `-ImplicitCastExpr 0x55b71dfab780 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
|       |   |       `-CXXThisExpr 0x55b71dfab770 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
|       |   `-ImplicitCastExpr 0x55b71dfab820 <col:24> 'int' <IntegralCast>
|       |     `-DeclRefExpr 0x55b71dfab7d0 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55b71dfa5630 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|       `-ImplicitCastExpr 0x55b71dfab928 <col:40> 'int' <IntegralCast>
|         `-DeclRefExpr 0x55b71dfab878 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55b71dfa5630 's_both_done' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|-CXXMethodDecl 0x55b71dfa5a28 <line:122:2, line:124:2> line:122:7 used both_data 'bool () const'
| `-CompoundStmt 0x55b71dfabb88 <col:25, line:124:2>
|   `-ReturnStmt 0x55b71dfabb78 <line:123:6, col:40>
|     `-BinaryOperator 0x55b71dfabb58 <col:13, col:40> 'bool' '=='
|       |-ParenExpr 0x55b71dfaba70 <col:13, col:35> 'int'
|       | `-BinaryOperator 0x55b71dfaba50 <col:14, col:24> 'int' '&'
|       |   |-ImplicitCastExpr 0x55b71dfaba20 <col:14> 'int' <IntegralCast>
|       |   | `-ImplicitCastExpr 0x55b71dfaba08 <col:14> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   |   `-MemberExpr 0x55b71dfab9b8 <col:14> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55b71df55408
|       |   |     `-ImplicitCastExpr 0x55b71dfab998 <col:14> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
|       |   |       `-CXXThisExpr 0x55b71dfab988 <col:14> 'const TCPRewriter::TCPFlow *' implicit this
|       |   `-ImplicitCastExpr 0x55b71dfaba38 <col:24> 'int' <IntegralCast>
|       |     `-DeclRefExpr 0x55b71dfab9e8 <col:24> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55b71dfa5840 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|       `-ImplicitCastExpr 0x55b71dfabb40 <col:40> 'int' <IntegralCast>
|         `-DeclRefExpr 0x55b71dfaba90 <col:40> 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)' EnumConstant 0x55b71dfa5840 's_both_data' 'TCPRewriter::TCPFlow::(anonymous enum at ../elements/tcpudp/tcprewriter.hh:113:2)'
|-CXXMethodDecl 0x55b71dfa5cf0 <line:126:2, col:75> col:6 update_seqno_delta 'int (bool, tcp_seq_t, int32_t)'
| |-ParmVarDecl 0x55b71dfa5ad8 <col:25, col:30> col:30 direction 'bool'
| |-ParmVarDecl 0x55b71dfa5b50 <col:41, col:51> col:51 old_seqno 'tcp_seq_t':'unsigned int'
| `-ParmVarDecl 0x55b71dfa5bc8 <col:62, col:70> col:70 delta 'int32_t':'int'
|-CXXMethodDecl 0x55b71dfa5f48 <line:127:2, col:53> col:12 new_seq 'tcp_seq_t (bool, tcp_seq_t) const'
| |-ParmVarDecl 0x55b71dfa5db8 <col:20, col:25> col:25 direction 'bool'
| `-ParmVarDecl 0x55b71dfa5e30 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
|-CXXMethodDecl 0x55b71dfa7138 <line:128:2, col:53> col:12 new_ack 'tcp_seq_t (bool, tcp_seq_t) const'
| |-ParmVarDecl 0x55b71dfa6008 <col:20, col:25> col:25 direction 'bool'
| `-ParmVarDecl 0x55b71dfa70a0 <col:36, col:46> col:46 seqno 'tcp_seq_t':'unsigned int'
|-CXXMethodDecl 0x55b71dfa7390 <line:130:2, col:62> col:7 apply 'void (WritablePacket *, bool, unsigned int)'
| |-ParmVarDecl 0x55b71dfa71f8 <col:13, col:29> col:29 p 'WritablePacket *'
| |-ParmVarDecl 0x55b71dfa7270 <col:32, col:37> col:37 direction 'bool'
| `-ParmVarDecl 0x55b71dfa72f0 <col:48, col:57> col:57 annos 'unsigned int'
|-CXXMethodDecl 0x55b71dfa75e8 <line:132:2, col:69> col:7 unparse 'void (StringAccum &, bool, click_jiffies_t) const'
| |-ParmVarDecl 0x55b71dfa7458 <col:15, col:28> col:28 sa 'StringAccum &'
| |-ParmVarDecl 0x55b71dfa74d0 <col:32, col:37> col:37 direction 'bool'
| `-ParmVarDecl 0x55b71dfa7548 <col:48, col:64> col:64 now 'click_jiffies_t':'unsigned int'
|-AccessSpecDecl 0x55b71dfa76a0 <line:134:7, col:14> col:7 private
|-CXXRecordDecl 0x55b71dfa76c8 <line:136:2, line:149:2> line:136:9 referenced struct delta_transition definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b71dfa77e8 <col:2, col:9> col:9 implicit referenced struct delta_transition
| |-FieldDecl 0x55b71dfa7918 <line:137:6, col:21> col:14 referenced delta 'int32_t [2]'
| |-FieldDecl 0x55b71dfa7a08 <line:138:6, col:25> col:16 referenced trigger 'tcp_seq_t [2]'
| |-FieldDecl 0x55b71dfa7a68 <line:139:6, col:16> col:16 referenced nextptr 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55b71dfa7b20 <line:140:6, line:142:6> line:140:6 delta_transition 'void ()'
| | `-CompoundStmt 0x55b71dfabcd0 <col:25, line:142:6>
| |   `-CallExpr 0x55b71dfabc80 <line:141:3, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55b71dfabc68 <col:3> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55b71dfabc48 <col:3> 'void *(void *, int, size_t) throw()' lvalue Function 0x55b71db98be8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55b71dfabcb8 <col:10> 'void *' <BitCast>
| |     | `-CXXThisExpr 0x55b71dfabbe8 <col:10> 'TCPRewriter::TCPFlow::delta_transition *' this
| |     |-IntegerLiteral 0x55b71dfabbf8 <col:16> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55b71dfabc28 <col:19, col:42> 'unsigned long' sizeof 'TCPRewriter::TCPFlow::delta_transition'
| |-CXXMethodDecl 0x55b71dfa7c48 <line:143:6, line:145:6> line:143:24 used next 'TCPRewriter::TCPFlow::delta_transition *() const'
| | `-CompoundStmt 0x55b71dfabe80 <col:37, line:145:6>
| |   `-ReturnStmt 0x55b71dfabe70 <line:144:3, col:70>
| |     `-CXXReinterpretCastExpr 0x55b71dfabe40 <col:10, col:70> 'TCPRewriter::TCPFlow::delta_transition *' reinterpret_cast<struct TCPRewriter::TCPFlow::delta_transition *> <IntegralToPointer>
| |       `-BinaryOperator 0x55b71dfabe10 <col:47, col:69> 'unsigned long' '-'
| |         |-ImplicitCastExpr 0x55b71dfabdf8 <col:47> 'uintptr_t':'unsigned long' <LValueToRValue>
| |         | `-MemberExpr 0x55b71dfabcf8 <col:47> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55b71dfa7a68
| |         |   `-CXXThisExpr 0x55b71dfabce8 <col:47> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| |         `-ParenExpr 0x55b71dfabdd8 <col:57, col:69> 'unsigned long'
| |           `-BinaryOperator 0x55b71dfabdb8 <col:58, col:68> 'unsigned long' '&'
| |             |-ImplicitCastExpr 0x55b71dfabd88 <col:58> 'uintptr_t':'unsigned long' <LValueToRValue>
| |             | `-MemberExpr 0x55b71dfabd38 <col:58> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55b71dfa7a68
| |             |   `-CXXThisExpr 0x55b71dfabd28 <col:58> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| |             `-ImplicitCastExpr 0x55b71dfabda0 <col:68> 'unsigned long' <IntegralCast>
| |               `-IntegerLiteral 0x55b71dfabd68 <col:68> 'int' 3
| |-CXXMethodDecl 0x55b71dfa7db8 <line:146:6, line:148:6> line:146:11 used has_trigger 'bool (bool) const'
| | |-ParmVarDecl 0x55b71dfa7cf8 <col:23, col:28> col:28 used direction 'bool'
| | `-CompoundStmt 0x55b71dfac000 <col:45, line:148:6>
| |   `-ReturnStmt 0x55b71dfabff0 <line:147:3, col:35>
| |     `-ImplicitCastExpr 0x55b71dfabfd8 <col:10, col:35> 'bool' <IntegralToBoolean>
| |       `-BinaryOperator 0x55b71dfabfb8 <col:10, col:35> 'unsigned long' '&'
| |         |-ImplicitCastExpr 0x55b71dfabf88 <col:10> 'uintptr_t':'unsigned long' <LValueToRValue>
| |         | `-MemberExpr 0x55b71dfabea8 <col:10> 'const uintptr_t':'const unsigned long' lvalue ->nextptr 0x55b71dfa7a68
| |         |   `-CXXThisExpr 0x55b71dfabe98 <col:10> 'const TCPRewriter::TCPFlow::delta_transition *' implicit this
| |         `-ImplicitCastExpr 0x55b71dfabfa0 <col:20, col:35> 'unsigned long' <IntegralCast>
| |           `-ParenExpr 0x55b71dfabf68 <col:20, col:35> 'int'
| |             `-BinaryOperator 0x55b71dfabf48 <col:21, col:26> 'int' '<<'
| |               |-IntegerLiteral 0x55b71dfabed8 <col:21> 'int' 1
| |               `-ImplicitCastExpr 0x55b71dfabf30 <col:26> 'int' <IntegralCast>
| |                 `-ImplicitCastExpr 0x55b71dfabf18 <col:26> 'bool' <LValueToRValue>
| |                   `-DeclRefExpr 0x55b71dfabef8 <col:26> 'bool' lvalue ParmVar 0x55b71dfa7cf8 'direction' 'bool'
| `-CXXDestructorDecl 0x55b71dfab5f8 <line:136:9> col:9 implicit ~delta_transition 'void ()' inline default trivial noexcept-unevaluated 0x55b71dfab5f8
|-FieldDecl 0x55b71dfa7e88 <line:151:2, col:20> col:20 referenced _dt 'TCPRewriter::TCPFlow::delta_transition *'
`-CXXMethodDecl 0x55b71dfa80c8 <line:153:2, col:67> col:7 apply_sack 'void (bool, click_tcp *, int)'
  |-ParmVarDecl 0x55b71dfa7ee8 <col:18, col:23> col:23 direction 'bool'
  |-ParmVarDecl 0x55b71dfa7f60 <col:34, col:45> col:45 tcp 'click_tcp *'
  `-ParmVarDecl 0x55b71dfa7fe0 <col:50, col:54> col:54 transport_len 'int'

Layout: <CGRecordLayout
  LLVMType:%"class.TCPRewriter::TCPFlow" = type { %class.IPRewriterFlow, %"struct.TCPRewriter::TCPFlow::delta_transition"* }
  NonVirtualBaseLLVMType:%"class.TCPRewriter::TCPFlow" = type { %class.IPRewriterFlow, %"struct.TCPRewriter::TCPFlow::delta_transition"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b71dfae4a0 <../elements/tcpudp/udprewriter.hh:165:5, line:180:5> line:165:11 referenced class UDPFlow definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'IPRewriterFlow'
|-CXXRecordDecl 0x55b71dfae5f8 <col:5, col:11> col:11 implicit referenced class UDPFlow
|-AccessSpecDecl 0x55b71dfae688 <col:45, col:51> col:45 public
|-CXXConstructorDecl 0x55b71dfaead8 <line:167:2, line:172:2> line:167:2 UDPFlow 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, int, bool, click_jiffies_t)'
| |-ParmVarDecl 0x55b71dfae6c0 <col:10, col:27> col:27 used owner 'IPRewriterInput *'
| |-ParmVarDecl 0x55b71dfae738 <col:34, col:50> col:50 used flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55b71dfae7b0 <line:168:3, col:19> col:19 used rewritten_flowid 'const IPFlowID &'
| |-ParmVarDecl 0x55b71dfae830 <col:37, col:41> col:41 used ip_p 'int'
| |-ParmVarDecl 0x55b71dfae8a8 <line:169:3, col:8> col:8 used guaranteed 'bool'
| |-ParmVarDecl 0x55b71dfae920 <col:20, col:36> col:36 used expiry_j 'click_jiffies_t':'unsigned int'
| |-CXXCtorInitializer 'IPRewriterFlow'
| | `-CXXConstructExpr 0x55b71dfba6b8 <line:170:8, line:171:35> 'IPRewriterFlow' 'void (IPRewriterInput *, const IPFlowID &, const IPFlowID &, uint8_t, bool, click_jiffies_t)'
| |   |-ImplicitCastExpr 0x55b71dfba640 <line:170:23> 'IPRewriterInput *' <LValueToRValue>
| |   | `-DeclRefExpr 0x55b71dfba528 <col:23> 'IPRewriterInput *' lvalue ParmVar 0x55b71dfae6c0 'owner' 'IPRewriterInput *'
| |   |-DeclRefExpr 0x55b71dfba548 <col:30> 'const IPFlowID' lvalue ParmVar 0x55b71dfae738 'flowid' 'const IPFlowID &'
| |   |-DeclRefExpr 0x55b71dfba568 <col:38> 'const IPFlowID' lvalue ParmVar 0x55b71dfae7b0 'rewritten_flowid' 'const IPFlowID &'
| |   |-ImplicitCastExpr 0x55b71dfba670 <line:171:9> 'uint8_t':'unsigned char' <IntegralCast>
| |   | `-ImplicitCastExpr 0x55b71dfba658 <col:9> 'int' <LValueToRValue>
| |   |   `-DeclRefExpr 0x55b71dfba588 <col:9> 'int' lvalue ParmVar 0x55b71dfae830 'ip_p' 'int'
| |   |-ImplicitCastExpr 0x55b71dfba688 <col:15> 'bool' <LValueToRValue>
| |   | `-DeclRefExpr 0x55b71dfba5a8 <col:15> 'bool' lvalue ParmVar 0x55b71dfae8a8 'guaranteed' 'bool'
| |   `-ImplicitCastExpr 0x55b71dfba6a0 <col:27> 'click_jiffies_t':'unsigned int' <LValueToRValue>
| |     `-DeclRefExpr 0x55b71dfba5c8 <col:27> 'click_jiffies_t':'unsigned int' lvalue ParmVar 0x55b71dfae920 'expiry_j' 'click_jiffies_t':'unsigned int'
| `-CompoundStmt 0x55b71dfba740 <col:37, line:172:2>
|-CXXMethodDecl 0x55b71dfaebf8 <line:174:2, line:176:2> line:174:7 used streaming 'bool () const'
| `-CompoundStmt 0x55b71dfba830 <col:25, line:176:2>
|   `-ReturnStmt 0x55b71dfba820 <line:175:6, col:23>
|     `-BinaryOperator 0x55b71dfba800 <col:13, col:23> 'bool' '>'
|       |-ImplicitCastExpr 0x55b71dfba7e8 <col:13> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x55b71dfba7d0 <col:13> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   `-MemberExpr 0x55b71dfba780 <col:13> 'const uint8_t':'const unsigned char' lvalue ->_tflags 0x55b71df55408
|       |     `-ImplicitCastExpr 0x55b71dfba760 <col:13> 'IPRewriterFlow *' <UncheckedDerivedToBase (IPRewriterFlow)>
|       |       `-CXXThisExpr 0x55b71dfba750 <col:13> 'const UDPRewriter::UDPFlow *' implicit this
|       `-IntegerLiteral 0x55b71dfba7b0 <col:23> 'int' 6
`-CXXMethodDecl 0x55b71dfaee40 <line:178:2, col:62> col:7 apply 'void (WritablePacket *, bool, unsigned int)'
  |-ParmVarDecl 0x55b71dfaeca8 <col:13, col:29> col:29 p 'WritablePacket *'
  |-ParmVarDecl 0x55b71dfaed20 <col:32, col:37> col:37 direction 'bool'
  `-ParmVarDecl 0x55b71dfaeda0 <col:48, col:57> col:57 annos 'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%"class.UDPRewriter::UDPFlow" = type { %class.IPRewriterFlow }
  NonVirtualBaseLLVMType:%"class.UDPRewriter::UDPFlow" = type { %class.IPRewriterFlow }
  IsZeroInitializable:1
  BitFields:[
]>
