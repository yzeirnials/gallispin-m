
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d61cb0c8d8 prev 0x55d61cb04078 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d61cb0c9d0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55d61cb0ca60 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55d61cb0cad8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55d61cb0cb98 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55d61cb0cc60 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55d61cb0cdd8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55d61cb0cd10 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55d61cb0ce80 <col:24>
| `-OptimizeNoneAttr 0x55d61cb0ced8 <col:34>
|-CXXMethodDecl 0x55d61cb0cf20 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55d61cb0d1d8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55d61cb0cfd0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55d61cb0d048 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55d61cb0d0c8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55d61cb0d290 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55d61cb0d2c8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55d61cb0d330 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55d61cb0d3b8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55d61cb0d6d8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55d61cb0d470 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55d61cb0d4e8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55d61cb0d560 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55d61cb0d5e0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55d61cb0d7f0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55d61cb15168 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55d61cb15168
| `-ParmVarDecl 0x55d61cb15278 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55d61cb15318 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55d61cb15318
| `-ParmVarDecl 0x55d61cb15428 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55d61cb880a0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d61caff8f0 prev 0x55d61caff670 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d61caff9e8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55d61caffa78 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55d61caffad8 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x55d61caffbc8 <line:32:5, col:22> col:13 ~Element 'void () noexcept' virtual
|-VarDecl 0x55d61caffcc8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55d61caffe98 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55d61caffd48 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55d61caffdc0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55d61cb00028 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55d61cafff60 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55d61cb000d0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55d61cb00208 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55d61cb00140 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55d61cb003a8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55d61cb002e8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55d61cb00548 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55d61cb00488 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55d61cb005f0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55d61cb006f0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55d61cb007d0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb006d0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55d61cb006b0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55d61cb00780 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55d61cb007e8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d61cb00760 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55d61cb00740 <col:44> 'int' 2
|-CXXMethodDecl 0x55d61cb00930 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55d61cb00818 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55d61cb00898 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55d61cb00a88 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55d61cb009f8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55d61cb00cc8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55d61cb00b48 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55d61cb00bc0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55d61cb00d78 <col:20>
| `-OptimizeNoneAttr 0x55d61cb00dd0 <col:30>
|-CXXMethodDecl 0x55d61cb00ed8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55d61cb00e10 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55d61cb00f80 <col:20>
| `-OptimizeNoneAttr 0x55d61cb00fd8 <col:30>
|-CXXMethodDecl 0x55d61cb01028 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55d61cb010f0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55d61cb01208 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55d61cb01290 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55d61cb01318 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55d61cb013a0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55d61cb01428 <line:59:5, col:35> col:23 used PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55d61cb014b8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55d61cb01578 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55d61cb01600 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55d61cb01688 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55d61cb01710 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55d61cb01798 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55d61cb01820 <line:67:5, col:39> col:23 used PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55d61cb018b0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55d61cb01970 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55d61cb01a00 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55d61cb01b50 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55d61cb01ab8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55d61cb01ce0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55d61cb01c10 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55d61cb01f90 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55d61cb01d98 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55d61cb01e18 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55d61cb01e98 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55d61cb02048 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55d61cb02150 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55d61cb023e0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb02130 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55d61cb02110 <col:33> 'int' 0
| |-EnumConstantDecl 0x55d61cb021e0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55d61cb023f8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb021c0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55d61cb021a0 <col:32> 'int' 20
| |-EnumConstantDecl 0x55d61cb02270 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55d61cb02410 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb02250 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55d61cb02230 <col:38> 'int' 90
| |-EnumConstantDecl 0x55d61cb02300 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55d61cb02428 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb022e0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55d61cb022c0 <col:35> 'int' 100
| `-EnumConstantDecl 0x55d61cb02390 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55d61cb02440 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d61cb02370 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55d61cb02350 <col:32> 'int' 2000
|-CXXMethodDecl 0x55d61cb02480 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55d61cb028c0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55d61cb02730 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55d61cb027a8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d61cb02990 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55d61cb02b10 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55d61cb02a40 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d61cb02d18 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55d61cb02bc8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55d61cb02c40 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d61cb02e18 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55d61cb02eb8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55d61cb02f80 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55d61cb03010 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55d61cb03240 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb02ff0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55d61cb02fd0 <col:36> 'int' EnumConstant 0x55d61cb02f80 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55d61cb03060 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55d61cb030b0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55d61cb03100 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55d61cb03150 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55d61cb031a0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55d61cb031f0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55d61cb03328 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55d61cb03268 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55d61cb033f0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55d61cb034b0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55d61cb03570 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55d61cb03630 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55d61cb03748 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55d61cb03810 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55d61cb03990 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55d61cb038c0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55d61cb03ab8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55d61cb03cb8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55d61cb03b68 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55d61cb03be8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55d61cb11608 <col:54, line:127:5>
|   |-ParenExpr 0x55d61cb114b8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55d61cb11488 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55d61cb11178 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55d61cb11150 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55d61cb11138 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55d61cb11120 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55d61cb110f0 <col:31> 'Router *' lvalue ->_router 0x55d61cb0efd0
|   |   |         `-CXXThisExpr 0x55d61cb110e0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55d61cb111d8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d61cb111b8 <col:48> 'int' 0
|   |   `-CallExpr 0x55d61cb113e8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55d61cb113d0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d61cb113b0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d61cb11428 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cb11248 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55d61cb11440 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cb11268 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55d61cb11458 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d61cb112a0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55d61cb11470 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d61cb11398 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d61cb11380 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d61cb11338 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55d61cb11550 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55d61cb114e8 <col:9> 'Router *' lvalue ->_router 0x55d61cb0efd0
|   | | `-CXXThisExpr 0x55d61cb114d8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55d61cb11538 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d61cb11518 <col:19> 'Router *' lvalue ParmVar 0x55d61cb03b68 'r' 'Router *'
|   `-BinaryOperator 0x55d61cb115e8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55d61cb11580 <col:9> 'int' lvalue ->_eindex 0x55d61cb0f038
|     | `-CXXThisExpr 0x55d61cb11570 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55d61cb115d0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55d61cb115b0 <col:19> 'int' lvalue ParmVar 0x55d61cb03be8 'eindex' 'int'
|-CXXMethodDecl 0x55d61cb03e40 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55d61cb03d78 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55d61cb03f10 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55d61cb03fd8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55d61cb04078 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55d61cb042c8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55d61cb04140 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55d61cb041c0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55d61cb04378 <col:20>
| `-OptimizeNoneAttr 0x55d61cb043d0 <col:30>
|-CXXMethodDecl 0x55d61cb044d8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55d61cb04410 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55d61cb04580 <col:20>
| `-OptimizeNoneAttr 0x55d61cb045d8 <col:30>
|-CXXMethodDecl 0x55d61cb046a8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55d61cb04618 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55d61cb04750 <col:20>
| `-OptimizeNoneAttr 0x55d61cb047a8 <col:30>
|-CXXMethodDecl 0x55d61cb04938 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55d61cb047e0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55d61cb04860 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55d61cb04ac8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55d61cb04a00 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55d61cb04c18 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55d61cb04b88 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55d61cb04d68 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55d61cb04cd8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55d61cb04eb8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55d61cb04e28 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55d61cb05178 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55d61cb04f70 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55d61cb04ff0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55d61cb05098 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55d61cb05250 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55d61cb05310 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55d61cb055e0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55d61cb05490 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55d61cb05508 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55d61cb05708 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55d61cb058e0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55d61cb057c0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55d61cb05840 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55d61cb05ac8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55d61cb059a8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55d61cb05a28 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55d61cb05e38 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55d61cb05b88 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55d61cb05c00 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55d61cb05c80 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55d61cb10bf0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55d61cb10bd0 <col:106> 'int' 0
| `-ParmVarDecl 0x55d61cb05cf8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55d61cb10c28 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55d61cb10c08 <col:126> 'int' 0
|-CXXMethodDecl 0x55d61cb061d8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55d61cb05f08 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55d61cb05fa0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55d61cb06020 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55d61cb06098 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55d61cb10c60 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55d61cb10c40 <col:114> 'int' 0
|-CXXMethodDecl 0x55d61cb06568 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55d61cb062b0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55d61cb06328 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55d61cb063a8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55d61cb10c78 <col:96> 'int' 0
| `-ParmVarDecl 0x55d61cb06420 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55d61cb10cb8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55d61cb10c98 <col:116> 'int' 0
|-CXXMethodDecl 0x55d61cb068e8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55d61cb06638 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55d61cb066b0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55d61cb06730 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55d61cb10cf0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55d61cb10cd0 <col:109> 'int' 0
| `-ParmVarDecl 0x55d61cb067a8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55d61cb10d28 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55d61cb10d08 <col:129> 'int' 0
|-CXXMethodDecl 0x55d61cb06c68 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55d61cb069b8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55d61cb06a30 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55d61cb06ab0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55d61cb06b28 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55d61cb10d60 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55d61cb10d40 <col:117> 'int' 0
|-CXXMethodDecl 0x55d61cb06ff8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55d61cb06d40 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb06db8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55d61cb06e38 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55d61cb10d78 <col:99> 'int' 0
| `-ParmVarDecl 0x55d61cb06eb0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55d61cb10db8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55d61cb10d98 <col:119> 'int' 0
|-CXXMethodDecl 0x55d61cb07418 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55d61cb070c8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55d61cb07148 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55d61cb071c0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55d61cb07240 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55d61cb10df0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55d61cb10dd0 <col:108> 'int' 0
| `-ParmVarDecl 0x55d61cb072c0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55d61cb10e28 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55d61cb10e08 <col:141> 'int' 0
|-CXXMethodDecl 0x55d61cb07838 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55d61cb074f0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55d61cb07570 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55d61cb075e8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55d61cb07668 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55d61cb076e8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55d61cb10e40 <col:121> 'int' 0
|-CXXMethodDecl 0x55d61cb07c68 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55d61cb07918 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55d61cb07998 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55d61cb07a10 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55d61cb07a90 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55d61cb10e60 <col:98> 'int' 0
| `-ParmVarDecl 0x55d61cb07b10 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55d61cb10e80 <col:123> 'int' 0
|-CXXMethodDecl 0x55d61cb07f30 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55d61cb07d40 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55d61cb07dc0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55d61cb07e40 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55d61cb10ea0 <col:80> 'int' 0
|-EnumDecl 0x55d61cb07fe8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55d61cb080f0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55d61cb08380 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb080d0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55d61cb080b0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55d61cb08180 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55d61cb08398 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb08160 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55d61cb08140 <col:40> 'int' 2
| |-EnumConstantDecl 0x55d61cb08210 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55d61cb083b0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb081f0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55d61cb081d0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55d61cb082a0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55d61cb083c8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb08280 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55d61cb08260 <col:36> 'int' 7
| `-EnumConstantDecl 0x55d61cb08330 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55d61cb083e0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d61cb08310 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55d61cb082f0 <col:34> 'int' 6
|-CXXMethodDecl 0x55d61cb08698 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55d61cb08408 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55d61cb084a8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55d61cb08528 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55d61cb085a0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55d61cb10f58 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55d61cb10f40 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55d61cb10f28 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55d61cb10f08 <col:98, col:105> 'String' (CXXTemporary 0x55d61cb10f08)
|           `-CXXTemporaryObjectExpr 0x55d61cb10ed0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55d61cb08938 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55d61cb08768 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55d61cb087e0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55d61cb08858 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55d61cb11008 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55d61cb10ff0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55d61cb10fd8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55d61cb10fb8 <col:94, col:101> 'String' (CXXTemporary 0x55d61cb10fb8)
| |         `-CXXTemporaryObjectExpr 0x55d61cb10f80 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55d61cb117f0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55d61cb11768 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55d61cb11738 <col:9> '<bound member function type>' ->add_task_handlers 0x55d61cb08698
|     | `-CXXThisExpr 0x55d61cb11728 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55d61cb117a8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55d61cb116a8 <col:27> 'Task *' lvalue ParmVar 0x55d61cb08768 'task' 'Task *'
|     |-ImplicitCastExpr 0x55d61cb117c0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55d61cb116c8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55d61cb087e0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55d61cb117d8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55d61cb116e8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55d61cb08330 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55d61cb11708 <col:62> 'const String' lvalue ParmVar 0x55d61cb08858 'prefix' 'const String &'
|-CXXMethodDecl 0x55d61cb08b48 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55d61cb08a00 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55d61cb08a78 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55d61cb110b8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55d61cb110a0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55d61cb11088 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55d61cb11068 <col:70, col:77> 'String' (CXXTemporary 0x55d61cb11068)
| |         `-CXXTemporaryObjectExpr 0x55d61cb11030 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55d61cb119c8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55d61cb11940 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55d61cb11910 <col:9> '<bound member function type>' ->add_task_handlers 0x55d61cb08698
|     | `-CXXThisExpr 0x55d61cb11900 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55d61cb11980 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55d61cb11880 <col:27> 'Task *' lvalue ParmVar 0x55d61cb08a00 'task' 'Task *'
|     |-ImplicitCastExpr 0x55d61cb11998 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55d61cb118a0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55d61cb119b0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55d61cb118c0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55d61cb08330 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55d61cb118e0 <col:57> 'const String' lvalue ParmVar 0x55d61cb08a78 'prefix' 'const String &'
|-CXXMethodDecl 0x55d61cb08e28 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55d61cb08c10 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb08c90 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d61cb08d08 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55d61cb090d8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55d61cb08ef8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb08f78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d61cb08ff8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55d61cb093c8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55d61cb091a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb09228 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d61cb092a0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55d61cb09678 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55d61cb09498 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb09518 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d61cb09598 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55d61cb09928 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55d61cb09748 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb097c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d61cb09848 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55d61cb09bd8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55d61cb099f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb09a78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d61cb09af0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55d61cb09e88 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55d61cb09ca8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb09d28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d61cb09da8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55d61cb0a198 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55d61cb09fb0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb0a030 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d61cb0a0b0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55d61cb0a478 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55d61cb0a268 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb0a2e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d61cb0a390 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55d61cb0a758 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55d61cb0a548 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb0a5c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d61cb0a670 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55d61cb0a9c0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55d61cb0a828 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55d61cb0a8a8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55d61cb0a920 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55d61cb0ac68 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55d61cb0aa90 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55d61cb0ab10 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55d61cb0ab88 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55d61cb0af18 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55d61cb0ad38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb0adb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d61cb0ae38 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55d61cb0b1c8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55d61cb0afe8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb0b068 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d61cb0b0e0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55d61cb0b478 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55d61cb0b298 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb0b318 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d61cb0b390 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55d61cb0b748 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55d61cb0b548 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb0b5c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55d61cb0b668 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55d61cb0ba78 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55d61cb0b818 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55d61cb0b898 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55d61cb0b910 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55d61cb0b988 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55d61cb110d0 <col:93> 'bool' false
|-CXXMethodDecl 0x55d61cb0bc60 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55d61cb0bb48 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55d61cb0bbc8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55d61cb0be38 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55d61cb0bd20 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55d61cb0bda0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55d61cb0c118 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55d61cb0bef8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55d61cb0bf70 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55d61cb0bff0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55d61cb0c068 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55d61cb0c408 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55d61cb0c1e8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55d61cb0c260 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55d61cb0c2e0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55d61cb0c358 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55d61cb0c640 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55d61cb0c4e0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55d61cb0c560 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55d61cb0c828 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55d61cb0c708 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55d61cb0c788 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55d61cb0c8d8 prev 0x55d61cb04078 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55d61cb0c9d0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55d61cb0ca60 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55d61cb0cad8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55d61cb0cb98 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55d61cb0cc60 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55d61cb0cdd8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55d61cb0cd10 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55d61cb0ce80 <col:24>
| | `-OptimizeNoneAttr 0x55d61cb0ced8 <col:34>
| |-CXXMethodDecl 0x55d61cb0cf20 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55d61cb0d1d8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55d61cb0cfd0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55d61cb0d048 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55d61cb0d0c8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55d61cb0d290 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55d61cb0d2c8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55d61cb0d330 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55d61cb0d3b8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55d61cb0d6d8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55d61cb0d470 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55d61cb0d4e8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55d61cb0d560 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55d61cb0d5e0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55d61cb0d7f0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55d61cb15168 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55d61cb15168
| | `-ParmVarDecl 0x55d61cb15278 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55d61cb15318 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55d61cb15318
| | `-ParmVarDecl 0x55d61cb15428 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55d61cb880a0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55d61cb0d868 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55d61cb0d908 <col:38> "" ""
|-CXXMethodDecl 0x55d61cb0d998 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55d61cb0da38 <col:44> "" ""
|-AccessSpecDecl 0x55d61cb0daa8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55d61cb0dad0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55d61cb0dbd0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55d61cb0dc20 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d61cb0dbb0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55d61cb0db90 <col:27> 'int' 4
|-FieldDecl 0x55d61cb0dcd8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55d61cb0de88 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55d61cb0df40 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55d61cb0efd0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55d61cb0f038 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55d61cb0f188 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55d61cb0f0c8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55d61cb0f338 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55d61cb0f248 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55d61cb0f518 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55d61cb0f3f8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55d61cb0f478 <col:25> col:28 'int'
|-CXXMethodDecl 0x55d61cb0f7c0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55d61cb0f5e0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55d61cb0f660 <col:28> col:31 'int'
| `-ParmVarDecl 0x55d61cb0f6d8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55d61cb0f878 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55d61cb0f940 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55d61cb0f990 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55d61cb0f9e0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55d61cb0fbc0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55d61cb0fa70 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55d61cb0fae8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d61cb0fe68 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55d61cb0fc88 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55d61cb0fd08 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55d61cb0fd80 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55d61cb10088 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55d61cb0ff38 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55d61cb0ffb8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55d61cb103c0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55d61cb10148 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55d61cb101c8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55d61cb10240 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55d61cb102c0 <col:57> col:60 'int'
|-CXXMethodDecl 0x55d61cb105a8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55d61cb10490 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55d61cb10510 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55d61cb106f8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55d61cb10668 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55d61cb10a78 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55d61cb107b8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55d61cb10838 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55d61cb108b0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55d61cb10930 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55d61cb10b90 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPAddress>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class CheckIPHeader
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   unsigned int _offset
       112 |   class Vector<class IPAddress> _bad_src
       112 |     class vector_memory<class sized_array_memory<4> > vm_
       112 |       vector_memory<class sized_array_memory<4> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   _Bool _checksum
       129 |   _Bool _verbose
       136 |   class Vector<class IPAddress> _good_dst
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   class atomic_uint32_t _drops
       152 |     uint32_t _val
       160 |   class atomic_uint32_t * _reason_drops
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d61cb1af00 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55d61cb1b0d8 prev 0x55d61cb1af00 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55d61cb1b168 <col:46, col:52> col:46 public
|-TypedefDecl 0x55d61cb1b190 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d61c59f580 'int'
|-TypedefDecl 0x55d61cb1cd60 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55d61cb1cd10 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55d61cb1b640 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55d61cb1b540 'type'
|     `-TemplateSpecializationType 0x55d61cb1b4d0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55d61cb1b3b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55d61cb1b390 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55d61cb1b370 <col:24> 'unsigned long' 4
|       `-RecordType 0x55d61cb1b4b0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55d61cb1b3d0 'char_array'
|-TypedefDecl 0x55d61cb1ce18 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55d61cb1cde0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55d61cb1cdc0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55d61cb1cd60 'type'
|     `-ElaboratedType 0x55d61cb1cd10 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55d61cb1b640 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55d61cb1b540 'type'
|         `-TemplateSpecializationType 0x55d61cb1b4d0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55d61cb1b3b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55d61cb1b390 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55d61cb1b370 <col:24> 'unsigned long' 4
|           `-RecordType 0x55d61cb1b4b0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55d61cb1b3d0 'char_array'
|-CXXMethodDecl 0x55d61cb1cf98 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55d61cb1cea8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55d61cb1d088 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55d61cb1d168 <line:23:5, col:20> col:5 ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x55d61cb1d438 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55d61cb1d340 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55d61cb1d678 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55d61cb1d4f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d61cb1d568 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55d61cb1d848 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55d61cb1d738 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d61cb1d7b0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55d61cb1d9a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55d61cb1da78 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55d61cb1dcc8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55d61cb1db38 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55d61cb1dbb0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55d61cb1df28 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55d61cb1dd98 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55d61cb1de10 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55d61cb1e0e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55d61cb1dff8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55d61cb1e2a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55d61cb1e1b0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55d61cb1e360 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d61cb1e410 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d61cb1e648 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55d61cb1e4c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d61cb1e538 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55d61cb1e8e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55d61cb1e7f0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55d61cb1e9b0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55d61cb1ea00 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55d61cb1ea50 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d61c912040 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPAddress'
|-CXXRecordDecl 0x55d61cb19e98 prev 0x55d61c912040 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55d61cb1ae70 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPAddress>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55d61cb1ae20 'typename array_memory<IPAddress>::type' sugar
|   `-TypedefType 0x55d61cb1ae00 'conditional<true, sized_array_memory<4>, typed_array_memory<IPAddress> >::type' sugar
|     |-Typedef 0x55d61cb1acb0 'type'
|     `-SubstTemplateTypeParmType 0x55d61cb1aad0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55d61c863bd0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d61c863b78 'T'
|       `-RecordType 0x55d61cb1a620 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55d61cb1a538 'sized_array_memory'
|-FieldDecl 0x55d61cb1eaa0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPAddress>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55d61cb1eaf0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55d61cb1eb28 <line:118:5, col:15> col:15 value_type 'IPAddress':'IPAddress'
| `-SubstTemplateTypeParmType 0x55d61cb19f30 'IPAddress' sugar
|   |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55d61c89b868 'T'
|   `-RecordType 0x55d61c865990 'IPAddress'
|     `-CXXRecord 0x55d61c9008c0 'IPAddress'
|-TypedefDecl 0x55d61cb1ebb8 <line:119:5, col:16> col:16 reference 'IPAddress &'
| `-LValueReferenceType 0x55d61cb1eb80 'IPAddress &'
|   `-SubstTemplateTypeParmType 0x55d61cb19f30 'IPAddress' sugar
|     |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d61c89b868 'T'
|     `-RecordType 0x55d61c865990 'IPAddress'
|       `-CXXRecord 0x55d61c9008c0 'IPAddress'
|-TypedefDecl 0x55d61cb1ec48 <line:120:5, col:22> col:22 const_reference 'const IPAddress &'
| `-LValueReferenceType 0x55d61cb1ec10 'const IPAddress &'
|   `-QualType 0x55d61cb19f31 'const IPAddress' const
|     `-SubstTemplateTypeParmType 0x55d61cb19f30 'IPAddress' sugar
|       |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d61c89b868 'T'
|       `-RecordType 0x55d61c865990 'IPAddress'
|         `-CXXRecord 0x55d61c9008c0 'IPAddress'
|-TypedefDecl 0x55d61cb1ecd8 <line:121:5, col:16> col:16 pointer 'IPAddress *'
| `-PointerType 0x55d61cb1eca0 'IPAddress *'
|   `-SubstTemplateTypeParmType 0x55d61cb19f30 'IPAddress' sugar
|     |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d61c89b868 'T'
|     `-RecordType 0x55d61c865990 'IPAddress'
|       `-CXXRecord 0x55d61c9008c0 'IPAddress'
|-TypedefDecl 0x55d61cb1ed68 <line:122:5, col:22> col:22 const_pointer 'const IPAddress *'
| `-PointerType 0x55d61cb1ed30 'const IPAddress *'
|   `-QualType 0x55d61cb19f31 'const IPAddress' const
|     `-SubstTemplateTypeParmType 0x55d61cb19f30 'IPAddress' sugar
|       |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d61c89b868 'T'
|       `-RecordType 0x55d61c865990 'IPAddress'
|         `-CXXRecord 0x55d61c9008c0 'IPAddress'
|-TypedefDecl 0x55d61cb1fb80 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPAddress>::type':'IPAddress'
| `-ElaboratedType 0x55d61cb1fb30 'typename fast_argument<IPAddress>::type' sugar
|   `-TypedefType 0x55d61cb1fb10 'fast_argument<IPAddress, false>::type' sugar
|     |-Typedef 0x55d61cb1faa0 'type'
|     `-SubstTemplateTypeParmType 0x55d61cb1f860 'IPAddress' sugar
|       |-TemplateTypeParmType 0x55d61c86e9d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d61c86e980 'T'
|       `-RecordType 0x55d61c865990 'IPAddress'
|         `-CXXRecord 0x55d61c9008c0 'IPAddress'
|-TypedefDecl 0x55d61cb1fbe8 <line:126:5, col:22> col:22 const_access_type 'const IPAddress &'
| `-LValueReferenceType 0x55d61cb1ec10 'const IPAddress &'
|   `-QualType 0x55d61cb19f31 'const IPAddress' const
|     `-SubstTemplateTypeParmType 0x55d61cb19f30 'IPAddress' sugar
|       |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d61c89b868 'T'
|       `-RecordType 0x55d61c865990 'IPAddress'
|         `-CXXRecord 0x55d61c9008c0 'IPAddress'
|-TypedefDecl 0x55d61cb1fc40 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d61c59f580 'int'
|-TypedefDecl 0x55d61cb1fca8 <line:130:5, col:16> col:16 iterator 'IPAddress *'
| `-PointerType 0x55d61cb1eca0 'IPAddress *'
|   `-SubstTemplateTypeParmType 0x55d61cb19f30 'IPAddress' sugar
|     |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d61c89b868 'T'
|     `-RecordType 0x55d61c865990 'IPAddress'
|       `-CXXRecord 0x55d61c9008c0 'IPAddress'
|-TypedefDecl 0x55d61cb1fd10 <line:131:5, col:22> col:22 const_iterator 'const IPAddress *'
| `-PointerType 0x55d61cb1ed30 'const IPAddress *'
|   `-QualType 0x55d61cb19f31 'const IPAddress' const
|     `-SubstTemplateTypeParmType 0x55d61cb19f30 'IPAddress' sugar
|       |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d61c89b868 'T'
|       `-RecordType 0x55d61c865990 'IPAddress'
|         `-CXXRecord 0x55d61c9008c0 'IPAddress'
|-EnumDecl 0x55d61cb1fd68 <line:134:5> col:5
| `-EnumConstantDecl 0x55d61cb1fe60 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPAddress>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55d61cb1fe40 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55d61c89cf48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55d61c89cf20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55d61c89cf00 <col:40> 'int' 1
|-CXXConstructorDecl 0x55d61cb1fee8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55d61cb20178 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPAddress>::value_argument_type)' inline
| |-ParmVarDecl 0x55d61cb1ffa0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d61cb20040 <col:41, col:61> col:61 v 'Vector<IPAddress>::value_argument_type':'IPAddress'
|-CXXConstructorDecl 0x55d61cb20438 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPAddress> &)' inline
| `-ParmVarDecl 0x55d61cb20320 <col:19, col:36> col:36 x 'const Vector<IPAddress> &'
|-CXXConstructorDecl 0x55d61cb206f8 <line:141:5, col:32> col:12 Vector 'void (Vector<IPAddress> &&)' inline
| `-ParmVarDecl 0x55d61cb205e0 <col:19, col:31> col:31 x 'Vector<IPAddress> &&'
|-CXXMethodDecl 0x55d61cb20a10 <line:144:5, col:51> col:23 operator= 'Vector<IPAddress> &(const Vector<IPAddress> &)' inline
| `-ParmVarDecl 0x55d61cb208f0 <col:33, col:50> col:50 x 'const Vector<IPAddress> &'
|-CXXMethodDecl 0x55d61cb20d20 <line:146:5, col:46> col:23 operator= 'Vector<IPAddress> &(Vector<IPAddress> &&)' inline
| `-ParmVarDecl 0x55d61cb20c00 <col:33, col:45> col:45 x 'Vector<IPAddress> &&'
|-CXXMethodDecl 0x55d61cb21010 <line:148:5, col:70> col:23 assign 'Vector<IPAddress> &(Vector::size_type, Vector<IPAddress>::value_argument_type)' inline
| |-ParmVarDecl 0x55d61cb20e58 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d61cb20ed0 <col:43, col:69> col:63 v 'Vector<IPAddress>::value_argument_type':'IPAddress'
|-CXXMethodDecl 0x55d61cb21168 <line:150:5, col:55> col:49 begin 'Vector<IPAddress>::iterator ()'
| |-NoInlineAttr 0x55d61cb21248 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d61cb212a0 <col:30> Inherited
|-CXXMethodDecl 0x55d61cb212e8 <line:151:5, col:53> col:49 end 'Vector<IPAddress>::iterator ()'
| |-NoInlineAttr 0x55d61cb21398 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d61cb213f0 <col:30> Inherited
|-CXXMethodDecl 0x55d61cb214b8 <line:152:5, col:63> col:55 begin 'Vector<IPAddress>::const_iterator () const'
| |-NoInlineAttr 0x55d61cb21568 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d61cb215c0 <col:30> Inherited
|-CXXMethodDecl 0x55d61cb21608 <line:153:5, col:61> col:55 end 'Vector<IPAddress>::const_iterator () const'
| |-NoInlineAttr 0x55d61cb216b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d61cb21710 <col:30> Inherited
|-CXXMethodDecl 0x55d61cb21758 <line:154:5, col:64> col:55 cbegin 'Vector<IPAddress>::const_iterator () const'
| |-NoInlineAttr 0x55d61cb21808 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d61cb21860 <col:30> Inherited
|-CXXMethodDecl 0x55d61cb218a8 <line:155:5, col:62> col:55 cend 'Vector<IPAddress>::const_iterator () const'
| |-NoInlineAttr 0x55d61cb21958 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d61cb219b0 <col:30> Inherited
|-CXXMethodDecl 0x55d61cb219d8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d61cb21a88 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d61cb21b38 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55d61cb21cf8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPAddress>::value_argument_type)' inline
| |-ParmVarDecl 0x55d61cb21be8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d61cb21c60 <col:37, col:63> col:57 v 'Vector<IPAddress>::value_argument_type':'IPAddress'
|-CXXMethodDecl 0x55d61cb21e48 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55d61cb21db8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d61cb21ff8 <line:163:5, col:65> col:43 operator[] 'IPAddress &(Vector::size_type)'
| |-ParmVarDecl 0x55d61cb21f00 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d61cb220b0 <col:20>
| `-OptimizeNoneAttr 0x55d61cb22108 <col:30>
|-CXXMethodDecl 0x55d61cb22228 <line:164:5, col:73> col:49 operator[] 'const IPAddress &(Vector::size_type) const'
| |-ParmVarDecl 0x55d61cb22130 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d61cb222e0 <col:20>
| `-OptimizeNoneAttr 0x55d61cb22338 <col:30>
|-CXXMethodDecl 0x55d61cb223f0 <line:165:5, col:29> col:15 at 'IPAddress &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d61cb22360 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d61cb22538 <line:166:5, col:37> col:21 at 'const IPAddress &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d61cb224a8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d61cb22668 <line:167:5, col:21> col:15 front 'IPAddress &()' inline
|-CXXMethodDecl 0x55d61cb22798 <line:168:5, col:29> col:21 front 'const IPAddress &() const' inline
|-CXXMethodDecl 0x55d61cb22868 <line:169:5, col:20> col:15 back 'IPAddress &()' inline
|-CXXMethodDecl 0x55d61cb22938 <line:170:5, col:28> col:21 back 'const IPAddress &() const' inline
|-CXXMethodDecl 0x55d61cb22a78 <line:172:5, col:39> col:15 unchecked_at 'IPAddress &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d61cb229e8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d61cb22bc0 <line:173:5, col:47> col:21 unchecked_at 'const IPAddress &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d61cb22b30 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d61cb22d08 <line:174:5, col:59> col:15 at_u 'IPAddress &(Vector::size_type)' inline
| |-ParmVarDecl 0x55d61cb22c78 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d61cb22dc0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55d61cb22ec0 <line:175:5, col:71> col:21 at_u 'const IPAddress &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55d61cb22e30 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d61cb22f78 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55d61cb23038 <line:177:5, col:20> col:15 data 'IPAddress *()' inline
|-CXXMethodDecl 0x55d61cb23138 <line:178:5, col:28> col:21 data 'const IPAddress *() const' inline
|-CXXMethodDecl 0x55d61cb232b8 <line:180:5, col:48> col:17 push_back 'void (Vector<IPAddress>::value_argument_type)' inline
| `-ParmVarDecl 0x55d61cb231f8 <col:27, col:47> col:47 v 'Vector<IPAddress>::value_argument_type':'IPAddress'
|-FunctionTemplateDecl 0x55d61cb23a78 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55d61cb23370 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPAddress>':'fast_argument<IPAddress, false>'
| `-CXXMethodDecl 0x55d61cb239d8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPAddress &&)' inline
|   `-ParmVarDecl 0x55d61cb238d8 <col:58, col:62> col:62 v 'IPAddress &&'
|-CXXMethodDecl 0x55d61cb23b58 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d61cb23ca8 <line:186:5, col:49> col:17 push_front 'void (Vector<IPAddress>::value_argument_type)' inline
| `-ParmVarDecl 0x55d61cb23c18 <col:28, col:48> col:48 v 'Vector<IPAddress>::value_argument_type':'IPAddress'
|-CXXMethodDecl 0x55d61cb23d60 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55d61cb23fa8 <line:189:5, col:62> col:21 insert 'Vector<IPAddress>::iterator (Vector<IPAddress>::iterator, Vector<IPAddress>::value_argument_type)' inline
| |-ParmVarDecl 0x55d61cb23e20 <col:28, col:37> col:37 it 'Vector<IPAddress>::iterator':'IPAddress *'
| `-ParmVarDecl 0x55d61cb23e98 <col:41, col:61> col:61 v 'Vector<IPAddress>::value_argument_type':'IPAddress'
|-CXXMethodDecl 0x55d61cb24168 <line:190:5, col:38> col:21 erase 'Vector<IPAddress>::iterator (Vector<IPAddress>::iterator)' inline
| `-ParmVarDecl 0x55d61cb24078 <col:27, col:36> col:36 it 'Vector<IPAddress>::iterator':'IPAddress *'
|-CXXMethodDecl 0x55d61cb243b8 <line:191:5, col:49> col:21 erase 'Vector<IPAddress>::iterator (Vector<IPAddress>::iterator, Vector<IPAddress>::iterator)' inline
| |-ParmVarDecl 0x55d61cb24230 <col:27, col:36> col:36 a 'Vector<IPAddress>::iterator':'IPAddress *'
| `-ParmVarDecl 0x55d61cb242a8 <col:39, col:48> col:48 b 'Vector<IPAddress>::iterator':'IPAddress *'
|-CXXMethodDecl 0x55d61cb24478 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d61cb246d8 <line:195:5, col:34> col:17 swap 'void (Vector<IPAddress> &)' inline
| `-ParmVarDecl 0x55d61cb245e0 <col:22, col:33> col:33 x 'Vector<IPAddress> &'
`-CXXDestructorDecl 0x55d61cb247a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d61c8be3a0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d61c8be4b8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55d61c8be548 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55d61c8be618 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55d61c8be700 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55d61c8be918 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55d61c8be7c0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61c8beac8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55d61c8be9d0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55d61c8bec10 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55d61c8beb80 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55d61c8bed58 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55d61c8becc8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61c8beea0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55d61c8bee10 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61c8bef68 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55d61c8bf0b0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55d61c8bf020 <col:28> col:31 'int'
|-CXXMethodDecl 0x55d61c8bf178 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55d61c8bf2c0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55d61c8bf230 <col:28> col:31 'int'
|-CXXMethodDecl 0x55d61c8bf438 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55d61c8bf378 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61c8bf580 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55d61c8bf4f0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61c8bf648 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55d61c8bf808 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55d61c8bf6f8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55d61c8bf770 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61c8bfa58 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55d61c8bf8c8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d61c8bf940 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55d61c8bfb08 <col:86> "" ""
|-CXXMethodDecl 0x55d61c8bfd78 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55d61c8bfbe8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55d61c8bfc60 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61c8bff28 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55d61c8bfe38 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55d61c8c00d8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55d61c8bffe0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55d61c8c03a8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55d61c8c0190 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55d61c8c0208 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55d61c8c0280 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61c8c0688 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55d61c8c0470 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55d61c8c04e8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d61c8c0560 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55d61c8c0740 <col:115> "" ""
|-AccessSpecDecl 0x55d61c8c07b0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55d61c8c07e8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61c8c1d00 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55d61c8c1d00
| `-ParmVarDecl 0x55d61c8c1e08 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55d61c8c1ea8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55d61c8c1ea8
| `-ParmVarDecl 0x55d61c8c1fb8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55d61c8f75e8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55d61cae93e0 <col:7>
|-CXXConstructorDecl 0x55d61c8f76c0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55d61c8f76c0
| `-ParmVarDecl 0x55d61c8f77d8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55d61c8f7848 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55d61c8f7848
| `-ParmVarDecl 0x55d61c8f7958 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55d61caebde0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d61cb18390 <../elements/ip/checkipheader.hh:107:1, line:166:1> line:107:7 referenced class CheckIPHeader definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55d61cb184e8 <col:1, col:7> col:7 implicit referenced class CheckIPHeader
|-AccessSpecDecl 0x55d61cb18578 <col:40, col:46> col:40 public
|-CXXConstructorDecl 0x55d61cb18600 <line:109:3, col:17> col:3 used CheckIPHeader 'void ()'
|-CXXDestructorDecl 0x55d61cb186f0 <line:110:3, col:18> col:3 used ~CheckIPHeader 'void () noexcept'
| `-Overrides: [ 0x55d61caffbc8 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55d61cb18820 <line:112:3, col:60> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x55d61cb01028 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55d61cb25888 <col:34, col:60>
|   `-ReturnStmt 0x55d61cb25878 <col:36, col:43>
|     `-ImplicitCastExpr 0x55d61cb25860 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55d61cb25838 <col:43> 'const char [14]' lvalue "CheckIPHeader"
|-CXXMethodDecl 0x55d61cb188e8 <line:113:3, col:56> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x55d61cb010f0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55d61cb258e8 <col:34, col:56>
|   `-ReturnStmt 0x55d61cb258d8 <col:36, col:43>
|     `-ImplicitCastExpr 0x55d61cb258c0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55d61cb258a0 <col:43> 'const char []' lvalue Var 0x55d61cb01428 'PORTS_1_1X2' 'const char []'
|-CXXMethodDecl 0x55d61cb189b0 <line:114:3, col:60> col:15 processing 'const char *() const'
| |-Overrides: [ 0x55d61cb014b8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55d61cb25948 <col:34, col:60>
|   `-ReturnStmt 0x55d61cb25938 <col:36, col:43>
|     `-ImplicitCastExpr 0x55d61cb25920 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55d61cb25900 <col:43> 'const char []' lvalue Var 0x55d61cb01820 'PROCESSING_A_AH' 'const char []'
|-CXXMethodDecl 0x55d61cb18a78 <line:115:3, col:43> col:15 flags 'const char *() const'
| |-Overrides: [ 0x55d61cb01a00 Element::flags 'const char *() const' ]
| `-CompoundStmt 0x55d61cb259a8 <col:29, col:43>
|   `-ReturnStmt 0x55d61cb25998 <col:31, col:38>
|     `-ImplicitCastExpr 0x55d61cb25980 <col:38> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55d61cb25960 <col:38> 'const char [2]' lvalue "A"
|-CXXMethodDecl 0x55d61cb18d50 <line:117:3, col:49> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55d61cb028c0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55d61cb18c00 <col:17, col:32> col:33 'Vector<String> &'
| `-ParmVarDecl 0x55d61cb18c78 <col:35, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x55d61cb18e20 <line:118:3, col:21> col:8 add_handlers 'void ()'
| `-Overrides: [ 0x55d61cb02990 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55d61cb18f60 <line:120:3, col:33> col:11 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x55d61cb00208 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x55d61cb18ed0 <col:25, col:32> col:33 'Packet *'
|-CXXRecordDecl 0x55d61cb19008 <line:122:3, line:125:3> line:122:10 struct OldBadSrcArg definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55d61cb19128 <col:3, col:10> col:10 implicit struct OldBadSrcArg
| `-CXXMethodDecl 0x55d61cb19508 <line:123:7, line:124:14> line:123:19 parse 'bool (const String &, Vector<IPAddress> &, Args &)' static
|   |-ParmVarDecl 0x55d61cb191c8 <col:25, col:39> col:39 str 'const String &'
|   |-ParmVarDecl 0x55d61cb19310 <col:44, col:63> col:63 result 'Vector<IPAddress> &'
|   `-ParmVarDecl 0x55d61cb193b8 <line:124:4, col:10> col:10 args 'Args &'
|-CXXRecordDecl 0x55d61cb195d8 <line:127:3, line:130:3> line:127:10 struct InterfacesArg definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55d61cb196f8 <col:3, col:10> col:10 implicit struct InterfacesArg
| `-CXXMethodDecl 0x55d61cb19c18 <line:128:7, line:129:50> line:128:19 parse 'bool (const String &, Vector<IPAddress> &, Vector<IPAddress> &, Args &)' static
|   |-ParmVarDecl 0x55d61cb19798 <col:25, col:39> col:39 str 'const String &'
|   |-ParmVarDecl 0x55d61cb198e0 <col:44, col:63> col:63 result_bad_src 'Vector<IPAddress> &'
|   |-ParmVarDecl 0x55d61cb19a30 <line:129:4, col:23> col:23 result_good_dst 'Vector<IPAddress> &'
|   `-ParmVarDecl 0x55d61cb19aa8 <col:40, col:46> col:46 args 'Args &'
|-AccessSpecDecl 0x55d61cb19cf0 <line:132:2, col:9> col:2 private
|-FieldDecl 0x55d61cb19d30 <line:134:3, col:12> col:12 _offset 'unsigned int'
|-FieldDecl 0x55d61cb24890 <line:136:3, col:21> col:21 _bad_src 'Vector<IPAddress>':'Vector<IPAddress>'
|-FieldDecl 0x55d61cb248f0 <line:138:3, col:8> col:8 referenced _checksum 'bool'
|-FieldDecl 0x55d61cb24950 <line:142:3, col:8> col:8 _verbose 'bool'
|-FieldDecl 0x55d61cb24a50 <line:144:3, col:21> col:21 _good_dst 'Vector<IPAddress>':'Vector<IPAddress>'
|-FieldDecl 0x55d61cb24ab0 <line:147:3, col:19> col:19 _drops 'atomic_uint32_t'
|-FieldDecl 0x55d61cb24b10 <line:148:3, col:20> col:20 _reason_drops 'atomic_uint32_t *'
|-EnumDecl 0x55d61cb24b60 <line:150:3, line:158:3> line:150:8 referenced Reason
| |-EnumConstantDecl 0x55d61cb24c20 <line:151:5> col:5 MINISCULE_PACKET 'CheckIPHeader::Reason'
| |-EnumConstantDecl 0x55d61cb24c70 <line:152:5> col:5 BAD_VERSION 'CheckIPHeader::Reason'
| |-EnumConstantDecl 0x55d61cb24cc0 <line:153:5> col:5 BAD_HLEN 'CheckIPHeader::Reason'
| |-EnumConstantDecl 0x55d61cb24d10 <line:154:5> col:5 BAD_IP_LEN 'CheckIPHeader::Reason'
| |-EnumConstantDecl 0x55d61cb24d60 <line:155:5> col:5 BAD_CHECKSUM 'CheckIPHeader::Reason'
| |-EnumConstantDecl 0x55d61cb24db0 <line:156:5> col:5 BAD_SADDR 'CheckIPHeader::Reason'
| `-EnumConstantDecl 0x55d61cb24e00 <line:157:5> col:5 referenced NREASONS 'CheckIPHeader::Reason'
|-VarDecl 0x55d61cb24f30 <line:159:3, col:50> col:29 reason_texts 'const char *const [6]' static
|-CXXMethodDecl 0x55d61cb250f8 <line:161:3, col:32> col:11 drop 'Packet *(CheckIPHeader::Reason, Packet *)'
| |-ParmVarDecl 0x55d61cb24fa8 <col:16> col:22 'CheckIPHeader::Reason'
| `-ParmVarDecl 0x55d61cb25020 <col:24, col:31> col:32 'Packet *'
|-CXXMethodDecl 0x55d61cb252d0 <line:162:3, col:47> col:17 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55d61cb251b8 <col:30, col:38> col:39 'Element *'
| `-ParmVarDecl 0x55d61cb25238 <col:41, col:46> col:47 'void *'
|-FriendDecl 0x55d61cb25498 <line:164:3, col:16> col:10 'class CheckIPHeader2':'CheckIPHeader2'
|-CXXConstructorDecl 0x55d61cb25508 <line:107:7> col:7 implicit CheckIPHeader 'void (const CheckIPHeader &)' inline default_delete noexcept-unevaluated 0x55d61cb25508
| `-ParmVarDecl 0x55d61cb25618 <col:7> col:7 'const CheckIPHeader &'
`-CXXMethodDecl 0x55d61cb256b8 <col:7> col:7 implicit operator= 'CheckIPHeader &(const CheckIPHeader &)' inline default_delete noexcept-unevaluated 0x55d61cb256b8
  `-ParmVarDecl 0x55d61cb257c8 <col:7> col:7 'const CheckIPHeader &'

Layout: <CGRecordLayout
  LLVMType:%class.CheckIPHeader = type { %class.Element.base, i32, %class.Vector, i8, i8, %class.Vector, %class.atomic_uint32_t, %class.atomic_uint32_t* }
  NonVirtualBaseLLVMType:%class.CheckIPHeader = type { %class.Element.base, i32, %class.Vector, i8, i8, %class.Vector, %class.atomic_uint32_t, %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class CheckIPHeader2
         0 |   class CheckIPHeader (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       108 |     unsigned int _offset
       112 |     class Vector<class IPAddress> _bad_src
       112 |       class vector_memory<class sized_array_memory<4> > vm_
       112 |         vector_memory<class sized_array_memory<4> >::type * l_
       120 |         vector_memory::size_type n_
       124 |         vector_memory::size_type capacity_
       128 |     _Bool _checksum
       129 |     _Bool _verbose
       136 |     class Vector<class IPAddress> _good_dst
       136 |       class vector_memory<class sized_array_memory<4> > vm_
       136 |         vector_memory<class sized_array_memory<4> >::type * l_
       144 |         vector_memory::size_type n_
       148 |         vector_memory::size_type capacity_
       152 |     class atomic_uint32_t _drops
       152 |       uint32_t _val
       160 |     class atomic_uint32_t * _reason_drops
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d61cb259c0 prev 0x55d61cb25380 <../elements/ip/checkipheader2.hh:22:1, line:29:1> line:22:7 class CheckIPHeader2 definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'CheckIPHeader'
|-CXXRecordDecl 0x55d61cb25af8 <col:1, col:7> col:7 implicit referenced class CheckIPHeader2
|-AccessSpecDecl 0x55d61cb25b88 <col:47, col:53> col:47 public
|-CXXConstructorDecl 0x55d61cb25c10 <line:24:3, col:18> col:3 CheckIPHeader2 'void ()'
|-CXXDestructorDecl 0x55d61cb25d00 <line:25:3, col:19> col:3 ~CheckIPHeader2 'void ()' noexcept-unevaluated 0x55d61cb25d00
| `-Overrides: [ 0x55d61cb186f0 CheckIPHeader::~CheckIPHeader 'void () noexcept' ]
|-CXXMethodDecl 0x55d61cb25e30 <line:27:3, col:61> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x55d61cb18820 CheckIPHeader::class_name 'const char *() const' ]
| `-CompoundStmt 0x55d61cb26278 <col:34, col:61>
|   `-ReturnStmt 0x55d61cb26268 <col:36, col:43>
|     `-ImplicitCastExpr 0x55d61cb26250 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55d61cb26228 <col:43> 'const char [15]' lvalue "CheckIPHeader2"
|-CXXConstructorDecl 0x55d61cb25ef8 <line:22:7> col:7 implicit CheckIPHeader2 'void (const CheckIPHeader2 &)' inline default_delete noexcept-unevaluated 0x55d61cb25ef8
| `-ParmVarDecl 0x55d61cb26008 <col:7> col:7 'const CheckIPHeader2 &'
`-CXXMethodDecl 0x55d61cb260a8 <col:7> col:7 implicit operator= 'CheckIPHeader2 &(const CheckIPHeader2 &)' inline default_delete noexcept-unevaluated 0x55d61cb260a8
  `-ParmVarDecl 0x55d61cb261b8 <col:7> col:7 'const CheckIPHeader2 &'

Layout: <CGRecordLayout
  LLVMType:%class.CheckIPHeader2 = type { %class.CheckIPHeader }
  NonVirtualBaseLLVMType:%class.CheckIPHeader2 = type { %class.CheckIPHeader }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d61cad7f88 prev 0x55d61cacd190 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d61cad8080 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55d61cad8170 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55d61cad8298 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55d61cad8418 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55d61cad8598 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55d61cad8718 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55d61cae9548 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55d61cae9db8 <col:11>
|-CXXDestructorDecl 0x55d61cae9620 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55d61cae9758 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55d61cae9758
| `-ParmVarDecl 0x55d61cae9868 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55d61cae9908 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55d61cae9908
| `-ParmVarDecl 0x55d61cae9a18 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55d61caec7d8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55d61caec8e8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55d61caecb68 <col:11>
|   `-ReturnStmt 0x55d61caecb58 <col:11>
|     `-UnaryOperator 0x55d61caecb40 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55d61caecb30 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55d61caec958 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55d61caec958
  `-ParmVarDecl 0x55d61caeca68 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d61cad8780 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d61cad8898 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55d61cad8938 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55d61cad89a0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55d61cad8a08 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55d61cad8a70 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55d61cad8ad0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55d61cad8b90 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55d61cad8bf0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55d61cad8c50 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55d61cae9458 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55d61cad8938 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55d61cae9dc8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55d61cae9e20 <col:12>
|-CXXConstructorDecl 0x55d61cae9a88 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55d61cae9a88
| `-ParmVarDecl 0x55d61cae9b98 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55d61cae9c38 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55d61cae9c38
| `-ParmVarDecl 0x55d61cae9d48 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55d61caebec0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d61cac68a0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d61cac69b8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55d61cac6a48 <col:16, col:22> col:16 public
|-EnumDecl 0x55d61cac6a70 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55d61cac6b70 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55d61cac6c50 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cac6b50 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55d61cac6b30 <col:21> 'int' 28
| `-EnumConstantDecl 0x55d61cac6c00 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55d61cac6c68 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d61cac6be0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55d61cac6bc0 <col:22> 'int' 64
|-CXXMethodDecl 0x55d61cac6fa8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55d61cac6c90 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d61cac6d10 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55d61cac6d88 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d61cac6e00 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55d61cac7068 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55d61cac7268 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55d61cac70e0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55d61cac7158 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55d61cac7318 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55d61cac7478 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55d61cac7388 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55d61cac7520 <col:72> warn_unused_result ""
|-TypedefDecl 0x55d61cac7880 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55d61cac7810 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55d61cac77b0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55d61cac7770 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55d61c59f4e0 'void'
|       |-PointerType 0x55d61c846c40 'unsigned char *'
|       | `-BuiltinType 0x55d61c59f5e0 'unsigned char'
|       |-TypedefType 0x55d61c643210 'size_t' sugar
|       | |-Typedef 0x55d61c60fbe0 'size_t'
|       | `-BuiltinType 0x55d61c59f640 'unsigned long'
|       `-PointerType 0x55d61c59fce0 'void *'
|         `-BuiltinType 0x55d61c59f4e0 'void'
|-CXXMethodDecl 0x55d61cac7cf8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55d61cac78f0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55d61cac7968 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d61cac7a00 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55d61cac7a80 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55d61cae23f0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55d61cae23d8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55d61cae23a0 <col:58> 'int' 0
| |-ParmVarDecl 0x55d61cac7b00 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55d61cae2418 <col:76> 'int' 0
| |-ParmVarDecl 0x55d61cac7b80 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55d61cae2438 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55d61cac7dc8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55d61cac7e48 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55d61cac7f08 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55d61cac7fa8 <col:20>
| `-OptimizeNoneAttr 0x55d61cac8000 <col:30>
|-CXXMethodDecl 0x55d61cac8078 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55d61cac8118 <col:20>
| `-OptimizeNoneAttr 0x55d61cac8170 <col:30>
|-CXXMethodDecl 0x55d61cac81e8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55d61cac8288 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55d61cac8338 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55d61cac83d8 <col:20>
| |-OptimizeNoneAttr 0x55d61cac8430 <col:30>
| `-WarnUnusedResultAttr 0x55d61cac8458 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55d61cac84b0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55d61cac8550 <col:20>
| `-OptimizeNoneAttr 0x55d61cac85a8 <col:30>
|-CXXMethodDecl 0x55d61cac85f8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55d61cac8698 <col:20>
| `-OptimizeNoneAttr 0x55d61cac86f0 <col:30>
|-CXXMethodDecl 0x55d61cac8738 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55d61cac87d8 <col:20>
| `-OptimizeNoneAttr 0x55d61cac8830 <col:30>
|-CXXMethodDecl 0x55d61cac8878 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55d61cac8938 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55d61cac8a00 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55d61cac8ac8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55d61cac8b88 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55d61cac8ca8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55d61cae2500 <col:54, line:99:5>
|   `-ReturnStmt 0x55d61cae24f0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55d61cae24d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55d61cae24a8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55d61cad8f88
|         `-CXXThisExpr 0x55d61cae2498 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55d61cac8e48 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55d61cac8d58 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55d61cae25b0 <col:67, line:103:5>
|   `-BinaryOperator 0x55d61cae2590 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55d61cae2528 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55d61cad8f88
|     | `-CXXThisExpr 0x55d61cae2518 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55d61cae2578 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55d61cae2558 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55d61cac8d58 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55d61cac8f40 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55d61cae2630 <col:33, line:107:5>
|   `-ReturnStmt 0x55d61cae2620 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55d61cae2608 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55d61cae25d8 <col:16> 'void *' lvalue ->_destructor_argument 0x55d61cad8ff0
|         `-CXXThisExpr 0x55d61cae25c8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55d61cac9000 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55d61cae2c60 <col:25, line:113:5>
|   |-ParenExpr 0x55d61cae29a8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55d61cae2978 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55d61cae26e8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55d61cae26c0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55d61cae2688 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55d61cae2658 <col:24> '<bound member function type>' ->shared 0x55d61cac8078
|   |   |       `-ImplicitCastExpr 0x55d61cae26a8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55d61cae2648 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55d61cae2748 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d61cae2728 <col:42> 'int' 0
|   |   `-CallExpr 0x55d61cae28d8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55d61cae28c0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d61cae28a0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d61cae2918 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae27b8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55d61cae2930 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae27e0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d61cae2948 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d61cae2818 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55d61cae2960 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d61cae2888 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d61cae2870 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d61cae2838 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55d61cae2ba8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55d61cae29d8 <col:2> 'unsigned char *' lvalue ->_head 0x55d61cad8d90
|   | | `-CXXThisExpr 0x55d61cae29c8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55d61cae2b90 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55d61cae2b70 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55d61cae2a18 <col:10> 'unsigned char *' lvalue ->_data 0x55d61cad8df8
|   |     | `-CXXThisExpr 0x55d61cae2a08 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55d61cae2b58 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55d61cae2b38 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55d61cae2a58 <col:18> 'unsigned char *' lvalue ->_tail 0x55d61cad8e60
|   |         | `-CXXThisExpr 0x55d61cae2a48 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55d61cae2b20 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55d61cae2b00 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55d61cae2a98 <col:26> 'unsigned char *' lvalue ->_end 0x55d61cad8ec8
|   |             | `-CXXThisExpr 0x55d61cae2a88 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55d61cae2ae8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55d61cae2ac8 <col:33> 'int' 0
|   `-BinaryOperator 0x55d61cae2c40 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55d61cae2bd8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55d61cad8f88
|     | `-CXXThisExpr 0x55d61cae2bc8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55d61cae2c28 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55d61cae2c08 <col:16> 'int' 0
|-CXXMethodDecl 0x55d61cac9140 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55d61cac90b0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55d61cac91e8 <col:20>
| |-OptimizeNoneAttr 0x55d61cac9240 <col:30>
| `-WarnUnusedResultAttr 0x55d61cac9268 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55d61cac9338 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55d61cac92a8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55d61cac93e0 <col:20>
| |-OptimizeNoneAttr 0x55d61cac9438 <col:30>
| `-WarnUnusedResultAttr 0x55d61cac9460 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55d61cac9598 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55d61cac94a0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55d61cac9640 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55d61cac9740 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55d61cac96b0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55d61cac97e8 <col:20>
| `-OptimizeNoneAttr 0x55d61cac9840 <col:30>
|-CXXMethodDecl 0x55d61cac9908 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55d61cac9878 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55d61cac99b0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55d61cac9ab0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55d61cac9a20 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55d61cac9b58 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55d61cac9c58 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55d61cac9bc8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55d61cac9d00 <col:20>
| `-OptimizeNoneAttr 0x55d61cac9d58 <col:30>
|-CXXMethodDecl 0x55d61cac9ee8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55d61cac9d98 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55d61cac9e10 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55d61cae2458 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55d61cac9f98 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55d61caca198 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55d61caca010 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55d61caca088 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61caca3a8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55d61caca258 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55d61caca2d0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61caca5b8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55d61caca468 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55d61caca4e8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55d61cae2468 <col:39> 'int' 0
|-CXXMethodDecl 0x55d61caca688 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55d61caca750 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55d61caca818 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55d61caca8d8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55d61caca9a0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55d61cacaae8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55d61cacaa58 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55d61cacacb8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55d61cacaba8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55d61cacac20 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61cacad88 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55d61cacae48 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55d61cacaee8 <col:20>
| `-OptimizeNoneAttr 0x55d61cacaf40 <col:30>
|-CXXMethodDecl 0x55d61cacaf90 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55d61cacb030 <col:20>
| `-OptimizeNoneAttr 0x55d61cacb088 <col:30>
|-CXXMethodDecl 0x55d61cacb0d8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55d61cacb198 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55d61cacb260 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55d61cacb300 <col:20>
| `-OptimizeNoneAttr 0x55d61cacb358 <col:30>
|-CXXMethodDecl 0x55d61cacb4a8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55d61cacb398 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55d61cacb410 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61cacb5f8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55d61cacb568 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61cacb6d0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55d61cacb790 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55d61cacb830 <col:20>
| `-OptimizeNoneAttr 0x55d61cacb888 <col:30>
|-CXXMethodDecl 0x55d61cacb8d8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55d61cacb978 <col:20>
| `-OptimizeNoneAttr 0x55d61cacb9d0 <col:30>
|-CXXMethodDecl 0x55d61cacba20 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55d61cacbae8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55d61cacbb88 <col:20>
| `-OptimizeNoneAttr 0x55d61cacbbe0 <col:30>
|-CXXMethodDecl 0x55d61cacbc28 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55d61cacbd48 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55d61cacbeb8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55d61cacbdf8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55d61cacbfa8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55d61cacc048 <col:20>
| `-OptimizeNoneAttr 0x55d61cacc0a0 <col:30>
|-CXXMethodDecl 0x55d61cacc0f0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55d61cacc1b0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55d61cacc3e8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55d61cacc260 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55d61cacc2d8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55d61cacc498 <col:20>
| `-OptimizeNoneAttr 0x55d61cacc4f0 <col:30>
|-CXXMethodDecl 0x55d61cacc598 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55d61cacc638 <col:20>
| `-OptimizeNoneAttr 0x55d61cacc690 <col:30>
|-CXXMethodDecl 0x55d61cacc6e0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55d61cacc780 <col:20>
| `-OptimizeNoneAttr 0x55d61cacc7d8 <col:30>
|-CXXMethodDecl 0x55d61cacc820 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55d61cacc8c0 <col:20>
| `-OptimizeNoneAttr 0x55d61cacc918 <col:30>
|-CXXMethodDecl 0x55d61cacca18 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55d61cacc950 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55d61caccac0 <col:20>
| `-OptimizeNoneAttr 0x55d61caccb18 <col:30>
|-CXXMethodDecl 0x55d61cacccd8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55d61caccb50 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55d61caccbc8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55d61caccd88 <col:20>
| `-OptimizeNoneAttr 0x55d61caccde0 <col:30>
|-CXXMethodDecl 0x55d61cacce88 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55d61caccfa8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55d61cacd0c8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55d61cacd168 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55d61cacd190 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55d61cacd2b8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55d61cacd358 <col:20>
| `-OptimizeNoneAttr 0x55d61cacd3b0 <col:30>
|-CXXMethodDecl 0x55d61cacd458 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55d61cacd4f8 <col:20>
| `-OptimizeNoneAttr 0x55d61cacd550 <col:30>
|-AccessSpecDecl 0x55d61cacd578 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55d61cacd5a0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55d61cacd6a0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55d61cacd6f0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d61cacd680 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55d61cacd660 <col:14> 'int' 48
|-CXXMethodDecl 0x55d61cacd758 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55d61cacd7f8 <col:20>
| `-OptimizeNoneAttr 0x55d61cacd850 <col:30>
|-CXXMethodDecl 0x55d61cacd8c8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55d61cacd968 <col:20>
| `-OptimizeNoneAttr 0x55d61cacd9c0 <col:30>
|-CXXMethodDecl 0x55d61cacda88 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55d61cacd9f8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55d61cacdc28 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55d61cacddc8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55d61cacdcd8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55d61cacde70 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55d61cacdf70 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55d61cace320 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cacdf50 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55d61cacdf30 <col:9> 'int' 0
| |-EnumConstantDecl 0x55d61cace000 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55d61cace338 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cacdfe0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55d61cacdfc0 <col:14> 'int' 1
| |-EnumConstantDecl 0x55d61cace090 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55d61cace350 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cace070 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55d61cace050 <col:14> 'int' 2
| |-EnumConstantDecl 0x55d61cace120 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55d61cace368 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cace100 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55d61cace0e0 <col:14> 'int' 3
| |-EnumConstantDecl 0x55d61cace1b0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55d61cace380 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cace190 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55d61cace170 <col:13> 'int' 4
| |-EnumConstantDecl 0x55d61cace240 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55d61cace398 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cace220 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55d61cace200 <col:13> 'int' 5
| `-EnumConstantDecl 0x55d61cace2d0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55d61cace3b0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d61cace2b0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55d61cace290 <col:14> 'int' 6
|-CXXMethodDecl 0x55d61cace418 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55d61cace4b8 <col:20>
| `-OptimizeNoneAttr 0x55d61cace510 <col:30>
|-CXXMethodDecl 0x55d61cace608 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55d61cace548 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55d61cace6b0 <col:20>
| `-OptimizeNoneAttr 0x55d61cace708 <col:30>
|-CXXMethodDecl 0x55d61cace778 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55d61cace8a0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55d61cacea18 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55d61cace950 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55d61caceae0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55d61caceba8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55d61cacece8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55d61cacec58 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55d61caced90 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55d61cacee90 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55d61cacf090 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cacee70 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55d61cacee50 <col:23> 'int' 0
| |-EnumConstantDecl 0x55d61cacef20 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55d61cacf0a8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cacef00 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55d61caceee0 <col:45> 'int' 4
| |-EnumConstantDecl 0x55d61cacefb0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55d61cacf0c0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cacef90 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55d61cacef70 <col:24> 'int' 0
| `-EnumConstantDecl 0x55d61cacf040 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55d61cacf0d8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d61cacf020 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55d61cacf000 <col:47> 'int' 16
|-CXXMethodDecl 0x55d61cacf138 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55d61cacf2a8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55d61cacf1e8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55d61cacf350 <col:20>
| `-OptimizeNoneAttr 0x55d61cacf3a8 <col:30>
|-CXXMethodDecl 0x55d61cacf3f8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55d61cae2d80 <col:18, col:36>
|   `-ReturnStmt 0x55d61cae2d70 <col:20, col:33>
|     `-ImplicitCastExpr 0x55d61cae2d58 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55d61cae2d38 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55d61cae2d08 <col:27> '<bound member function type>' ->xanno 0x55d61cacd458
|           `-CXXThisExpr 0x55d61cae2cf8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55d61cacf4f0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55d61cae2e90 <col:30, col:48>
|   `-ReturnStmt 0x55d61cae2e80 <col:32, col:45>
|     `-ImplicitCastExpr 0x55d61cae2e68 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55d61cae2e48 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55d61cae2e18 <col:39> '<bound member function type>' ->xanno 0x55d61cacd2b8
|           `-CXXThisExpr 0x55d61cae2e08 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55d61cacf5d8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55d61cae3028 <col:24, col:50>
|   `-ReturnStmt 0x55d61cae3018 <col:26, col:47>
|     `-UnaryOperator 0x55d61cae3000 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55d61cae2fe0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55d61cae2fc8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55d61cae2f78 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55d61cad8298
|         |   `-CXXMemberCallExpr 0x55d61cae2f58 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55d61cae2f28 <col:34> '<bound member function type>' ->xanno 0x55d61cacd458
|         |       `-CXXThisExpr 0x55d61cae2f18 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55d61cae2fa8 <col:46> 'int' 0
|-CXXMethodDecl 0x55d61cacf6e0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55d61cae31f8 <col:36, col:62>
|   `-ReturnStmt 0x55d61cae31e8 <col:38, col:59>
|     `-UnaryOperator 0x55d61cae31d0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55d61cae31b0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55d61cae3198 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55d61cae3110 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55d61cad8298
|         |   `-CXXMemberCallExpr 0x55d61cae30f0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55d61cae30c0 <col:46> '<bound member function type>' ->xanno 0x55d61cacd2b8
|         |       `-CXXThisExpr 0x55d61cae30b0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55d61cae3140 <col:58> 'int' 0
|-CXXMethodDecl 0x55d61cacf7f8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55d61cae3390 <col:26, col:53>
|   `-ReturnStmt 0x55d61cae3380 <col:28, col:50>
|     `-UnaryOperator 0x55d61cae3368 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55d61cae3348 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55d61cae3330 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55d61cae32e0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55d61cad8598
|         |   `-CXXMemberCallExpr 0x55d61cae32c0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55d61cae3290 <col:36> '<bound member function type>' ->xanno 0x55d61cacd458
|         |       `-CXXThisExpr 0x55d61cae3280 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55d61cae3310 <col:49> 'int' 0
|-CXXMethodDecl 0x55d61cacf918 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55d61cae3568 <col:38, col:65>
|   `-ReturnStmt 0x55d61cae3558 <col:40, col:62>
|     `-UnaryOperator 0x55d61cae3540 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55d61cae3520 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55d61cae3508 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55d61cae3478 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55d61cad8598
|         |   `-CXXMemberCallExpr 0x55d61cae3458 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55d61cae3428 <col:48> '<bound member function type>' ->xanno 0x55d61cacd2b8
|         |       `-CXXThisExpr 0x55d61cae3418 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55d61cae34a8 <col:61> 'int' 0
|-CXXMethodDecl 0x55d61cacfac8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55d61cacf9d0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55d61cae3c38 <col:34, line:463:5>
|   |-ParenExpr 0x55d61cae3a80 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55d61cae3a50 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55d61cae36b8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d61cae3688 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d61cae35d8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d61cae35c0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d61cae3580 <col:23> 'int' lvalue ParmVar 0x55d61cacf9d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d61cae35a0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d61cae3668 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d61cae3638 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d61cae35f8 <col:33> 'int' lvalue ParmVar 0x55d61cacf9d0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55d61cae3650 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55d61cae3618 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d61cacd6a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55d61cae3718 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d61cae36f8 <col:56> 'int' 0
|   |   `-CallExpr 0x55d61cae39b0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55d61cae3998 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d61cae3978 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d61cae39f0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae3808 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55d61cae3a08 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae3838 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d61cae3a20 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d61cae3870 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55d61cae3a38 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d61cae3960 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d61cae3948 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d61cae3908 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55d61cae3c28 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55d61cae3c10 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55d61cae3bf0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55d61cae3bc0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55d61cae3b70 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55d61cad8298
|         |   `-CXXMemberCallExpr 0x55d61cae3b50 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55d61cae3b20 <col:9> '<bound member function type>' ->xanno 0x55d61cacd2b8
|         |       `-CXXThisExpr 0x55d61cae3b10 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55d61cae3bd8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55d61cae3ba0 <col:21> 'int' lvalue ParmVar 0x55d61cacf9d0 'i' 'int'
|-CXXMethodDecl 0x55d61cacfd18 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55d61cacfb88 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55d61cacfc00 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55d61cae42c8 <col:40, line:472:5>
|   |-ParenExpr 0x55d61cae40e0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55d61cae40b0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55d61cae3d90 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d61cae3d60 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d61cae3cb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d61cae3c98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d61cae3c58 <col:23> 'int' lvalue ParmVar 0x55d61cacfb88 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d61cae3c78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d61cae3d40 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d61cae3d10 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d61cae3cd0 <col:33> 'int' lvalue ParmVar 0x55d61cacfb88 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55d61cae3d28 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55d61cae3cf0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d61cacd6a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55d61cae3df0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d61cae3dd0 <col:56> 'int' 0
|   |   `-CallExpr 0x55d61cae4010 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55d61cae3ff8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d61cae3fd8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d61cae4050 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae3e60 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55d61cae4068 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae3e90 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d61cae4080 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d61cae3ec8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55d61cae4098 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d61cae3fc0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d61cae3fa8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d61cae3f68 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55d61cae42a8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55d61cae4250 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55d61cae4220 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55d61cae41d0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55d61cad8298
|     | |   `-CXXMemberCallExpr 0x55d61cae41b0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55d61cae4180 <col:2> '<bound member function type>' ->xanno 0x55d61cacd458
|     | |       `-CXXThisExpr 0x55d61cae4170 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55d61cae4238 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55d61cae4200 <col:14> 'int' lvalue ParmVar 0x55d61cacfb88 'i' 'int'
|     `-ImplicitCastExpr 0x55d61cae4290 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55d61cae4270 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55d61cacfc00 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55d61cacfed8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55d61cacfde0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55d61cae4a48 <col:36, line:485:5>
|   |-ParenExpr 0x55d61cae47b0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d61cae4780 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d61cae4460 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d61cae4430 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d61cae4340 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d61cae4328 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d61cae42e8 <col:23> 'int' lvalue ParmVar 0x55d61cacfde0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d61cae4308 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d61cae4410 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d61cae43f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d61cae4360 <col:33> 'int' lvalue ParmVar 0x55d61cacfde0 'i' 'int'
|   |   |     `-BinaryOperator 0x55d61cae43d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d61cae43c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d61cae4380 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d61cacd6a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d61cae43a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55d61cae44c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d61cae44a0 <col:60> 'int' 0
|   |   `-CallExpr 0x55d61cae46e0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d61cae46c8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d61cae46a8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d61cae4720 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae4530 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55d61cae4738 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae4568 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d61cae4750 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d61cae45a0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55d61cae4768 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d61cae4690 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d61cae4678 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d61cae4638 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55d61cae4a38 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55d61cae4a20 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55d61cae4a08 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55d61cae49d8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55d61cae4978 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55d61cae4948 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55d61cae48c0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55d61cad8170
|             |   `-CXXMemberCallExpr 0x55d61cae48a0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55d61cae4870 <col:61> '<bound member function type>' ->xanno 0x55d61cacd2b8
|             |       `-CXXThisExpr 0x55d61cae4860 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55d61cae4960 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55d61cae48f0 <col:74> 'int' lvalue ParmVar 0x55d61cacfde0 'i' 'int'
|-CXXMethodDecl 0x55d61cad0128 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55d61cacff98 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55d61cad0010 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55d61cae5198 <col:42, line:500:5>
|   |-ParenExpr 0x55d61cae4f30 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d61cae4f00 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d61cae4be0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d61cae4bb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d61cae4ac0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d61cae4aa8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d61cae4a68 <col:23> 'int' lvalue ParmVar 0x55d61cacff98 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d61cae4a88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d61cae4b90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d61cae4b78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d61cae4ae0 <col:33> 'int' lvalue ParmVar 0x55d61cacff98 'i' 'int'
|   |   |     `-BinaryOperator 0x55d61cae4b58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d61cae4b40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d61cae4b00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d61cacd6a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d61cae4b20 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55d61cae4c40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d61cae4c20 <col:60> 'int' 0
|   |   `-CallExpr 0x55d61cae4e60 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d61cae4e48 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d61cae4e28 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d61cae4ea0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae4cb0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55d61cae4eb8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae4ce8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d61cae4ed0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d61cae4d20 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55d61cae4ee8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d61cae4e10 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d61cae4df8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d61cae4db8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55d61cae5178 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55d61cae5128 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55d61cae50f8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55d61cae50a0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55d61cae5070 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55d61cae5020 <col:48, col:57> 'char [48]' lvalue ->c 0x55d61cad8170
|     |     |   `-CXXMemberCallExpr 0x55d61cae5000 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55d61cae4fd0 <col:48> '<bound member function type>' ->xanno 0x55d61cacd458
|     |     |       `-CXXThisExpr 0x55d61cae4fc0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55d61cae5088 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55d61cae5050 <col:61> 'int' lvalue ParmVar 0x55d61cacff98 'i' 'int'
|     `-ImplicitCastExpr 0x55d61cae5160 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55d61cae5140 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55d61cad0010 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55d61cad02e8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55d61cad01f0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55d61cae58f8 <col:35, line:513:5>
|   |-ParenExpr 0x55d61cae5608 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d61cae55d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d61cae5330 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d61cae5300 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d61cae5210 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d61cae51f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d61cae51b8 <col:23> 'int' lvalue ParmVar 0x55d61cad01f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d61cae51d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d61cae52e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d61cae52c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d61cae5230 <col:33> 'int' lvalue ParmVar 0x55d61cad01f0 'i' 'int'
|   |   |     `-BinaryOperator 0x55d61cae52a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d61cae5290 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d61cae5250 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d61cacd6a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d61cae5270 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55d61cae5390 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d61cae5370 <col:60> 'int' 0
|   |   `-CallExpr 0x55d61cae5538 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d61cae5520 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d61cae5500 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d61cae5578 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae5400 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55d61cae5590 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae5438 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d61cae55a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d61cae5470 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55d61cae55c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d61cae54e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d61cae54d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d61cae5490 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55d61cae58e8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55d61cae58d0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55d61cae58b8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55d61cae5888 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55d61cae5800 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55d61cae57d0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55d61cae5780 <col:60, col:69> 'char const[48]' lvalue ->c 0x55d61cad8170
|             |   `-CXXMemberCallExpr 0x55d61cae5760 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55d61cae5730 <col:60> '<bound member function type>' ->xanno 0x55d61cacd2b8
|             |       `-CXXThisExpr 0x55d61cae5720 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55d61cae57e8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55d61cae57b0 <col:73> 'int' lvalue ParmVar 0x55d61cad01f0 'i' 'int'
|-CXXMethodDecl 0x55d61cad0538 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55d61cad03a8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55d61cad0420 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55d61cae6018 <col:41, line:528:5>
|   |-ParenExpr 0x55d61cae5da0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d61cae5d70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d61cae5a90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d61cae5a60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d61cae5970 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d61cae5958 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d61cae5918 <col:23> 'int' lvalue ParmVar 0x55d61cad03a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d61cae5938 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d61cae5a40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d61cae5a28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d61cae5990 <col:33> 'int' lvalue ParmVar 0x55d61cad03a8 'i' 'int'
|   |   |     `-BinaryOperator 0x55d61cae5a08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d61cae59f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d61cae59b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d61cacd6a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d61cae59d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55d61cae5af0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d61cae5ad0 <col:60> 'int' 0
|   |   `-CallExpr 0x55d61cae5cd0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d61cae5cb8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d61cae5c98 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d61cae5d10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae5b60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55d61cae5d28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae5b98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d61cae5d40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d61cae5bd0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55d61cae5d58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d61cae5c80 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d61cae5c68 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d61cae5c28 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55d61cae5ff8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55d61cae5fa8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55d61cae5f78 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55d61cae5f20 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55d61cae5ee0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55d61cae5e90 <col:47, col:56> 'char [48]' lvalue ->c 0x55d61cad8170
|     |     |   `-CXXMemberCallExpr 0x55d61cae5e70 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55d61cae5e40 <col:47> '<bound member function type>' ->xanno 0x55d61cacd458
|     |     |       `-CXXThisExpr 0x55d61cae5e30 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55d61cae5ef8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55d61cae5ec0 <col:60> 'int' lvalue ParmVar 0x55d61cad03a8 'i' 'int'
|     `-ImplicitCastExpr 0x55d61cae5fe0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55d61cae5fc0 <col:65> 'int16_t':'short' lvalue ParmVar 0x55d61cad0420 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55d61cad06f8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55d61cad0600 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55d61cae66e8 <col:36, line:541:5>
|   |-ParenExpr 0x55d61cae6488 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d61cae6458 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d61cae61b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d61cae6180 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d61cae6090 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d61cae6078 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d61cae6038 <col:23> 'int' lvalue ParmVar 0x55d61cad0600 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d61cae6058 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d61cae6160 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d61cae6148 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d61cae60b0 <col:33> 'int' lvalue ParmVar 0x55d61cad0600 'i' 'int'
|   |   |     `-BinaryOperator 0x55d61cae6128 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d61cae6110 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d61cae60d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d61cacd6a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d61cae60f0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55d61cae6210 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d61cae61f0 <col:60> 'int' 0
|   |   `-CallExpr 0x55d61cae63b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d61cae63a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d61cae6380 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d61cae63f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae6280 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55d61cae6410 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae62b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d61cae6428 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d61cae62f0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55d61cae6440 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d61cae6368 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d61cae6350 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d61cae6310 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55d61cae66d8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55d61cae66c0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55d61cae66a8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55d61cae6678 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55d61cae6620 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55d61cae65f0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55d61cae65a0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55d61cad8170
|             |   `-CXXMemberCallExpr 0x55d61cae6580 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55d61cae6550 <col:61> '<bound member function type>' ->xanno 0x55d61cacd2b8
|             |       `-CXXThisExpr 0x55d61cae6540 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55d61cae6608 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55d61cae65d0 <col:74> 'int' lvalue ParmVar 0x55d61cad0600 'i' 'int'
|-CXXMethodDecl 0x55d61cad08c8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55d61cad07b8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55d61cad0830 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55d61cad0978 <col:20>
| `-OptimizeNoneAttr 0x55d61cad09d0 <col:30>
|-CXXMethodDecl 0x55d61cad0b08 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55d61cad0a10 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55d61cae6db8 <col:35, line:562:5>
|   |-ParenExpr 0x55d61cae6b58 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d61cae6b28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d61cae6880 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d61cae6850 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d61cae6760 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d61cae6748 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d61cae6708 <col:23> 'int' lvalue ParmVar 0x55d61cad0a10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d61cae6728 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d61cae6830 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d61cae6818 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d61cae6780 <col:33> 'int' lvalue ParmVar 0x55d61cad0a10 'i' 'int'
|   |   |     `-BinaryOperator 0x55d61cae67f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d61cae67e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d61cae67a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d61cacd6a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d61cae67c0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55d61cae68e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d61cae68c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55d61cae6a88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d61cae6a70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d61cae6a50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d61cae6ac8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae6950 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55d61cae6ae0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae6988 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d61cae6af8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d61cae69c0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55d61cae6b10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d61cae6a38 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d61cae6a20 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d61cae69e0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55d61cae6da8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55d61cae6d90 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55d61cae6d78 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55d61cae6d48 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55d61cae6cf0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55d61cae6cc0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55d61cae6c70 <col:60, col:69> 'char const[48]' lvalue ->c 0x55d61cad8170
|             |   `-CXXMemberCallExpr 0x55d61cae6c50 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55d61cae6c20 <col:60> '<bound member function type>' ->xanno 0x55d61cacd2b8
|             |       `-CXXThisExpr 0x55d61cae6c10 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55d61cae6cd8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55d61cae6ca0 <col:73> 'int' lvalue ParmVar 0x55d61cad0a10 'i' 'int'
|-CXXMethodDecl 0x55d61cad0d18 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55d61cad0bc8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55d61cad0c40 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55d61cae7498 <col:41, line:577:5>
|   |-ParenExpr 0x55d61cae7228 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d61cae71f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d61cae6f50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d61cae6f20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d61cae6e30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d61cae6e18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d61cae6dd8 <col:23> 'int' lvalue ParmVar 0x55d61cad0bc8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d61cae6df8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d61cae6f00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d61cae6ee8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d61cae6e50 <col:33> 'int' lvalue ParmVar 0x55d61cad0bc8 'i' 'int'
|   |   |     `-BinaryOperator 0x55d61cae6ec8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d61cae6eb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d61cae6e70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d61cacd6a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d61cae6e90 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55d61cae6fb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d61cae6f90 <col:60> 'int' 0
|   |   `-CallExpr 0x55d61cae7158 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d61cae7140 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d61cae7120 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d61cae7198 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae7020 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55d61cae71b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae7058 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d61cae71c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d61cae7090 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55d61cae71e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d61cae7108 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d61cae70f0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d61cae70b0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55d61cae7478 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55d61cae7428 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55d61cae73f8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55d61cae7398 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55d61cae7368 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55d61cae7318 <col:47, col:56> 'char [48]' lvalue ->c 0x55d61cad8170
|     |     |   `-CXXMemberCallExpr 0x55d61cae72f8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55d61cae72c8 <col:47> '<bound member function type>' ->xanno 0x55d61cacd458
|     |     |       `-CXXThisExpr 0x55d61cae72b8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55d61cae7380 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55d61cae7348 <col:60> 'int' lvalue ParmVar 0x55d61cad0bc8 'i' 'int'
|     `-ImplicitCastExpr 0x55d61cae7460 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55d61cae7440 <col:65> 'int32_t':'int' lvalue ParmVar 0x55d61cad0c40 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55d61cad0ed8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55d61cad0de0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55d61cae7bc8 <col:36, line:591:5>
|   |-ParenExpr 0x55d61cae7908 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d61cae78d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d61cae7630 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d61cae7600 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d61cae7510 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d61cae74f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d61cae74b8 <col:23> 'int' lvalue ParmVar 0x55d61cad0de0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d61cae74d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d61cae75e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d61cae75c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d61cae7530 <col:33> 'int' lvalue ParmVar 0x55d61cad0de0 'i' 'int'
|   |   |     `-BinaryOperator 0x55d61cae75a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d61cae7590 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d61cae7550 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d61cacd6a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d61cae7570 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55d61cae7690 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d61cae7670 <col:60> 'int' 0
|   |   `-CallExpr 0x55d61cae7838 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d61cae7820 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d61cae7800 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d61cae7878 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae7700 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55d61cae7890 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae7738 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d61cae78a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d61cae7770 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55d61cae78c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d61cae77e8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d61cae77d0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d61cae7790 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55d61cae7bb8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55d61cae7ba0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55d61cae7b88 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55d61cae7b58 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55d61cae7ad0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55d61cae7aa0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55d61cae7a50 <col:61, col:70> 'char const[48]' lvalue ->c 0x55d61cad8170
|             |   `-CXXMemberCallExpr 0x55d61cae7a30 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55d61cae7a00 <col:61> '<bound member function type>' ->xanno 0x55d61cacd2b8
|             |       `-CXXThisExpr 0x55d61cae79f0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55d61cae7ab8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55d61cae7a80 <col:74> 'int' lvalue ParmVar 0x55d61cad0de0 'i' 'int'
|-CXXMethodDecl 0x55d61cad1128 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55d61cad0f98 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55d61cad1010 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55d61cae82a8 <col:42, line:606:5>
|   |-ParenExpr 0x55d61cae8038 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55d61cae8008 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55d61cae7d60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d61cae7d30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d61cae7c40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d61cae7c28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d61cae7be8 <col:23> 'int' lvalue ParmVar 0x55d61cad0f98 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d61cae7c08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d61cae7d10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55d61cae7cf8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d61cae7c60 <col:33> 'int' lvalue ParmVar 0x55d61cad0f98 'i' 'int'
|   |   |     `-BinaryOperator 0x55d61cae7cd8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d61cae7cc0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d61cae7c80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d61cacd6a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55d61cae7ca0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55d61cae7dc0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d61cae7da0 <col:60> 'int' 0
|   |   `-CallExpr 0x55d61cae7f68 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55d61cae7f50 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d61cae7f30 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d61cae7fa8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae7e30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55d61cae7fc0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae7e68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d61cae7fd8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d61cae7ea0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55d61cae7ff0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d61cae7f18 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d61cae7f00 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d61cae7ec0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55d61cae8288 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55d61cae8238 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55d61cae8208 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55d61cae81a8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55d61cae8178 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55d61cae8128 <col:48, col:57> 'char [48]' lvalue ->c 0x55d61cad8170
|     |     |   `-CXXMemberCallExpr 0x55d61cae8108 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55d61cae80d8 <col:48> '<bound member function type>' ->xanno 0x55d61cacd458
|     |     |       `-CXXThisExpr 0x55d61cae80c8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55d61cae8190 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55d61cae8158 <col:61> 'int' lvalue ParmVar 0x55d61cad0f98 'i' 'int'
|     `-ImplicitCastExpr 0x55d61cae8270 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55d61cae8250 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55d61cad1010 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55d61cad12c0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55d61cad11f0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55d61cae8b18 <col:33, line:620:5>
|   |-ParenExpr 0x55d61cae8890 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55d61cae8860 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55d61cae84b0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d61cae8480 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d61cae8320 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d61cae8308 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d61cae82c8 <col:23> 'int' lvalue ParmVar 0x55d61cad11f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d61cae82e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d61cae8460 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55d61cae8448 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d61cae8340 <col:33> 'int' lvalue ParmVar 0x55d61cad11f0 'i' 'int'
|   |   |     `-BinaryOperator 0x55d61cae8428 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d61cae8410 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d61cae8360 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d61cacd6a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55d61cae83e8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55d61cae83d0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55d61cae8398 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55d61cae8510 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d61cae84f0 <col:79> 'int' 0
|   |   `-CallExpr 0x55d61cae87c0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55d61cae87a8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d61cae8788 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d61cae8800 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae85f8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55d61cae8818 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae8640 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d61cae8830 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d61cae8678 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55d61cae8848 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d61cae8770 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d61cae8758 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d61cae8718 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55d61cae8b08 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55d61cae8af0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55d61cae8ad8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55d61cae8aa8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55d61cae8a20 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55d61cae89f0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55d61cae89a0 <col:67, col:76> 'char const[48]' lvalue ->c 0x55d61cad8170
|             |   `-CXXMemberCallExpr 0x55d61cae8980 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55d61cae8950 <col:67> '<bound member function type>' ->xanno 0x55d61cacd2b8
|             |       `-CXXThisExpr 0x55d61cae8940 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55d61cae8a08 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55d61cae89d0 <col:80> 'int' lvalue ParmVar 0x55d61cad11f0 'i' 'int'
|-CXXMethodDecl 0x55d61cad14d8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55d61cad1380 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55d61cad1400 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55d61cae9340 <col:45, line:635:5>
|   |-ParenExpr 0x55d61cae9088 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55d61cae9058 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55d61cae8d20 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55d61cae8cf0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55d61cae8b90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55d61cae8b78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55d61cae8b38 <col:23> 'int' lvalue ParmVar 0x55d61cad1380 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55d61cae8b58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55d61cae8cd0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55d61cae8cb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55d61cae8bb0 <col:33> 'int' lvalue ParmVar 0x55d61cad1380 'i' 'int'
|   |   |     `-BinaryOperator 0x55d61cae8c98 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55d61cae8c80 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55d61cae8bd0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55d61cacd6a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55d61cae8c58 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55d61cae8c40 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55d61cae8c08 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55d61cae8d80 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55d61cae8d60 <col:79> 'int' 0
|   |   `-CallExpr 0x55d61cae8fb8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55d61cae8fa0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55d61cae8f80 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55d61cae8ff8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae8df0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55d61cae9010 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55d61cae8e38 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55d61cae9028 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55d61cae8e70 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55d61cae9040 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55d61cae8f68 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55d61cae8f50 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55d61cae8f08 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55d61cae9320 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55d61cae9288 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55d61cae9258 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55d61cae91f8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55d61cae91c8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55d61cae9178 <col:54, col:63> 'char [48]' lvalue ->c 0x55d61cad8170
|     |     |   `-CXXMemberCallExpr 0x55d61cae9158 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55d61cae9128 <col:54> '<bound member function type>' ->xanno 0x55d61cacd458
|     |     |       `-CXXThisExpr 0x55d61cae9118 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55d61cae91e0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55d61cae91a8 <col:67> 'int' lvalue ParmVar 0x55d61cad1380 'i' 'int'
|     `-CXXConstCastExpr 0x55d61cae92f0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55d61cae92d8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55d61cae92a0 <col:91> 'const void *' lvalue ParmVar 0x55d61cad1400 'x' 'const void *'
|-CXXMethodDecl 0x55d61cad15a8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55d61cae93c8 <col:34, line:640:5>
|   `-ReturnStmt 0x55d61cae93b8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55d61cae93a0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55d61cae9370 <col:16> 'Packet *' lvalue ->_data_packet 0x55d61cad8d28
|         `-CXXThisExpr 0x55d61cae9360 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55d61cad16e8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55d61cad1658 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55d61cae2488 <col:46> 'bool' true
|-CXXMethodDecl 0x55d61cad1868 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55d61cad17a0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55d61cad1910 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55d61cad20c0 <line:660:22> "" ""
| |-EnumConstantDecl 0x55d61cad1a10 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d61cad2130 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cad19f0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55d61cad19d0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55d61cac6b70 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55d61cad1aa0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d61cad2148 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cad1a80 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55d61cad1a60 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55d61cac6c00 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55d61cad1b30 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d61cad2160 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cad1b10 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55d61cad1af0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55d61cad1bc0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d61cad2178 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cad1ba0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55d61cad1b80 <col:19> 'int' 16
| |-EnumConstantDecl 0x55d61cad1c50 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d61cad2190 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cad1c30 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55d61cad1c10 <col:21> 'int' 16
| |-EnumConstantDecl 0x55d61cad1ce0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d61cad21a8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cad1cc0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55d61cad1ca0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55d61cad1d70 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d61cad21c0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cad1d50 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55d61cad1d30 <col:19> 'int' EnumConstant 0x55d61cad1bc0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55d61cad1e00 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d61cad21d8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cad1de0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55d61cad1dc0 <col:19> 'int' EnumConstant 0x55d61cad1ce0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55d61cad1ed0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d61cad21f0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cad1eb0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55d61cad1e90 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55d61cad1e50 <col:23> 'int' EnumConstant 0x55d61cad1e00 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55d61cad1e70 <col:40> 'int' 2
| |-EnumConstantDecl 0x55d61cad1fa0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55d61cad2208 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cad1f80 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55d61cad1f60 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55d61cad1f20 <col:23> 'int' EnumConstant 0x55d61cad1e00 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55d61cad1f40 <col:40> 'int' 4
| `-EnumConstantDecl 0x55d61cad2070 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55d61cad2220 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d61cad2050 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55d61cad2030 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55d61cad1ff0 <col:23> 'int' EnumConstant 0x55d61cad1e00 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55d61cad2010 <col:40> 'int' 8
|-CXXMethodDecl 0x55d61cad2260 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55d61cad2300 <col:68> "" ""
|-CXXMethodDecl 0x55d61cad2398 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55d61cad2438 <col:45> "" ""
|-CXXMethodDecl 0x55d61cad24d0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55d61cad2570 <col:57> "" ""
|-CXXMethodDecl 0x55d61cad2608 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55d61cad26a8 <col:45> "" ""
|-CXXMethodDecl 0x55d61cad2740 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55d61cad27e0 <col:57> "" ""
|-CXXMethodDecl 0x55d61cad2870 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55d61cad2910 <col:51> "" ""
|-CXXMethodDecl 0x55d61cad29a0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55d61cad2a40 <col:63> "" ""
|-CXXMethodDecl 0x55d61cad2ad0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55d61cad2b70 <col:53> "" ""
|-CXXMethodDecl 0x55d61cad2c00 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55d61cad2ca0 <col:65> "" ""
|-CXXMethodDecl 0x55d61cad2db8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55d61cad2d28 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55d61cad2e60 <col:61> "" ""
|-CXXMethodDecl 0x55d61cad2ff8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55d61cad2ee8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55d61cad2f60 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55d61cad30a8 <col:67> "" ""
|-CXXMethodDecl 0x55d61cad31c0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55d61cad3130 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55d61cad3268 <col:63> "" ""
|-CXXMethodDecl 0x55d61cad3400 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55d61cad32f0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55d61cad3368 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55d61cad34b0 <col:69> "" ""
|-CXXMethodDecl 0x55d61cad35c8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55d61cad3538 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55d61cad3670 <col:63> "" ""
|-CXXMethodDecl 0x55d61cad5d48 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55d61cad5c38 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55d61cad5cb0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55d61cad5df8 <col:69> "" ""
|-CXXMethodDecl 0x55d61cad5f10 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55d61cad5e80 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55d61cad5fb8 <col:62> "" ""
|-CXXMethodDecl 0x55d61cad6150 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55d61cad6040 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55d61cad60b8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55d61cad6200 <col:68> "" ""
|-CXXMethodDecl 0x55d61cad6318 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55d61cad6288 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55d61cad63c0 <col:63> "" ""
|-CXXMethodDecl 0x55d61cad6558 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55d61cad6448 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55d61cad64c0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55d61cad6608 <col:69> "" ""
|-CXXMethodDecl 0x55d61cad6698 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55d61cad6738 <col:64> "" ""
|-CXXMethodDecl 0x55d61cad67c8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55d61cad6868 <col:52> "" ""
|-CXXMethodDecl 0x55d61cad68f8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55d61cad6998 <col:67> "" ""
|-CXXMethodDecl 0x55d61cad6a28 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55d61cad6ac8 <col:55> "" ""
|-CXXMethodDecl 0x55d61cad6be0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55d61cad6b50 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55d61cad6c88 <col:58> "" ""
|-CXXMethodDecl 0x55d61cad6e20 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55d61cad6d10 <col:33> col:36 'int'
| |-ParmVarDecl 0x55d61cad6d88 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55d61cad6ed0 <col:62> "" ""
|-CXXMethodDecl 0x55d61cad6fe8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55d61cad6f58 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55d61cad7090 <col:58> "" ""
|-CXXMethodDecl 0x55d61cad7228 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55d61cad7118 <col:33> col:36 'int'
| |-ParmVarDecl 0x55d61cad7190 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55d61cad72d8 <col:62> "" ""
|-CXXMethodDecl 0x55d61cad73f0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55d61cad7360 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55d61cad7498 <col:60> "" ""
|-CXXMethodDecl 0x55d61cad7630 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55d61cad7520 <col:34> col:37 'int'
| |-ParmVarDecl 0x55d61cad7598 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55d61cad76e0 <col:64> "" ""
|-CXXMethodDecl 0x55d61cad77f8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55d61cad7768 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55d61cad78a0 <col:58> "" ""
|-CXXMethodDecl 0x55d61cad7a38 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55d61cad7928 <col:33> col:36 'int'
| |-ParmVarDecl 0x55d61cad79a0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55d61cad7ae8 <col:62> "" ""
|-CXXMethodDecl 0x55d61cad7c00 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55d61cad7b70 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55d61cad7ca8 <col:59> "" ""
|-CXXMethodDecl 0x55d61cad7e40 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55d61cad7d30 <col:33> col:36 'int'
| |-ParmVarDecl 0x55d61cad7da8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55d61cad7ef0 <col:63> "" ""
|-AccessSpecDecl 0x55d61cad7f60 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55d61cad7f88 prev 0x55d61cacd190 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55d61cad8080 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55d61cad8170 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55d61cad8298 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55d61cad8418 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55d61cad8598 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55d61cad8718 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55d61cae9548 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55d61cae9db8 <col:11>
| |-CXXDestructorDecl 0x55d61cae9620 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55d61cae9758 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55d61cae9758
| | `-ParmVarDecl 0x55d61cae9868 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55d61cae9908 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55d61cae9908
| | `-ParmVarDecl 0x55d61cae9a18 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55d61caec7d8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55d61caec8e8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55d61caecb68 <col:11>
| |   `-ReturnStmt 0x55d61caecb58 <col:11>
| |     `-UnaryOperator 0x55d61caecb40 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55d61caecb30 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55d61caec958 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55d61caec958
|   `-ParmVarDecl 0x55d61caeca68 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55d61cad8780 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55d61cad8898 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55d61cad8938 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55d61cad89a0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55d61cad8a08 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55d61cad8a70 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55d61cad8ad0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55d61cad8b90 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55d61cad8bf0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55d61cad8c50 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55d61cae9458 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55d61cad8938 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55d61cae9dc8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55d61cae9e20 <col:12>
| |-CXXConstructorDecl 0x55d61cae9a88 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55d61cae9a88
| | `-ParmVarDecl 0x55d61cae9b98 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55d61cae9c38 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55d61cae9c38
| | `-ParmVarDecl 0x55d61cae9d48 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55d61caebec0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55d61cad8cc8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55d61cad8d28 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55d61cad8d90 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55d61cad8df8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55d61cad8e60 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55d61cad8ec8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55d61cad8f28 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55d61cad8f88 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55d61cad8ff0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55d61cad9078 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55d61cad8cc8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55d61cae93f0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55d61cad8f28 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55d61cae9e30 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55d61cae9e90 <col:21, line:755:5>
|-CXXConstructorDecl 0x55d61cad9218 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55d61cad9158 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55d61cad9310 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55d61cad94f8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55d61cad9400 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55d61cad97c8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55d61cad95b0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55d61cad9628 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55d61cad96a0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61cad99e8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55d61cad9898 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55d61cad9910 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55d61cae1fc8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55d61cad9aa8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55d61cad9b20 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55d61cad9b98 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55d61cae2120 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55d61cae2090 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55d61cae2268 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55d61cae21d8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55d61cae2360 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d61c8d3790 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55d61c8d38a8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55d61c8d3948 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55d61c8d39a8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55d61c8d3a08 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55d61c8d3ab8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d61c8d3dc0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55d61c8d3ed8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55d61c8d3f80 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55d61c8d3fe8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55d61c8d4078 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55d61c8da110 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55d61c8da548 <col:12>
|-CXXConstructorDecl 0x55d61c8da218 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55d61c8da328 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55d61c8d3f80 'data' 'const char *'
| | `-ImplicitCastExpr 0x55d61c8dcad0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55d61c8dcaa0 <col:12> 'const char *const' lvalue .data 0x55d61c8d3f80
| |     `-DeclRefExpr 0x55d61c8dca80 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d61c8da328 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55d61c8d3fe8 'length' 'int'
| | `-ImplicitCastExpr 0x55d61c8dcb60 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55d61c8dcb30 <col:12> 'const int' lvalue .length 0x55d61c8d3fe8
| |     `-DeclRefExpr 0x55d61c8dcb10 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d61c8da328 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55d61c8d4078 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55d61c8dcbf0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55d61c8dcbc0 <col:12> 'String::memo_t *const' lvalue .memo 0x55d61c8d4078
| |     `-DeclRefExpr 0x55d61c8dcba0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d61c8da328 '' 'const String::rep_t &'
| `-CompoundStmt 0x55d61c8dcc48 <col:12>
|-CXXConstructorDecl 0x55d61c8da3c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55d61c8da3c8
| `-ParmVarDecl 0x55d61c8da4d8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55d61c8dfa30 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55d61c8eb448 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55d61c8eb558 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55d61c8eba70 <col:12>
|   |-BinaryOperator 0x55d61c8eb888 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55d61c8eb840 <col:12> 'const char *' lvalue ->data 0x55d61c8d3f80
|   | | `-CXXThisExpr 0x55d61c8eb830 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55d61c8eb870 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55d61c8eb800 <col:12> 'const char *const' lvalue .data 0x55d61c8d3f80
|   |     `-DeclRefExpr 0x55d61c8eb7e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d61c8eb558 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55d61c8eb950 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55d61c8eb908 <col:12> 'int' lvalue ->length 0x55d61c8d3fe8
|   | | `-CXXThisExpr 0x55d61c8eb8f8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55d61c8eb938 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55d61c8eb8c8 <col:12> 'const int' lvalue .length 0x55d61c8d3fe8
|   |     `-DeclRefExpr 0x55d61c8eb8a8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d61c8eb558 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55d61c8eba18 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55d61c8eb9d0 <col:12> 'String::memo_t *' lvalue ->memo 0x55d61c8d4078
|   | | `-CXXThisExpr 0x55d61c8eb9c0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55d61c8eba00 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55d61c8eb990 <col:12> 'String::memo_t *const' lvalue .memo 0x55d61c8d4078
|   |     `-DeclRefExpr 0x55d61c8eb970 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d61c8eb558 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55d61c8eba60 <col:12>
|     `-UnaryOperator 0x55d61c8eba48 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55d61c8eba38 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55d61c8eb5c8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55d61c8eb5c8
  `-ParmVarDecl 0x55d61c8eb6d8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d61c8cad00 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d61c8cae18 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55d61c8caea8 <col:16, col:22> col:16 public
|-TypedefDecl 0x55d61c8caee8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55d61c59ffd0 'const char *'
|   `-QualType 0x55d61c59f521 'const char' const
|     `-BuiltinType 0x55d61c59f520 'char'
|-TypedefDecl 0x55d61c8caf70 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55d61c8caf40 'String::const_iterator' sugar
|   |-Typedef 0x55d61c8caee8 'const_iterator'
|   `-PointerType 0x55d61c59ffd0 'const char *'
|     `-QualType 0x55d61c59f521 'const char' const
|       `-BuiltinType 0x55d61c59f520 'char'
|-TypedefDecl 0x55d61c8cb0e0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55d61c8cb050 'int (String::*)() const'
|   |-RecordType 0x55d61c8cad90 'String'
|   | `-CXXRecord 0x55d61c8cad00 'String'
|   `-ParenType 0x55d61c8caff0 'int () const' sugar
|     `-FunctionProtoType 0x55d61c89eb80 'int () const' const cdecl
|       `-BuiltinType 0x55d61c59f580 'int'
|-TypedefDecl 0x55d61c8cb148 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55d61c6f3760 'int64_t' sugar
|   |-Typedef 0x55d61c608390 'int64_t'
|   `-TypedefType 0x55d61c5e1630 '__int64_t' sugar
|     |-Typedef 0x55d61c5e1208 '__int64_t'
|     `-BuiltinType 0x55d61c59f5a0 'long'
|-TypedefDecl 0x55d61c8cb1b0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55d61c6f3680 'uint64_t' sugar
|   |-Typedef 0x55d61c608530 'uint64_t'
|   `-TypedefType 0x55d61c5e16c0 '__uint64_t' sugar
|     |-Typedef 0x55d61c5e1278 '__uint64_t'
|     `-BuiltinType 0x55d61c59f640 'unsigned long'
|-TypedefDecl 0x55d61c8cb240 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55d61c8cb210 'String::intmax_t' sugar
|   |-Typedef 0x55d61c8cb148 'intmax_t'
|   `-TypedefType 0x55d61c6f3760 'int64_t' sugar
|     |-Typedef 0x55d61c608390 'int64_t'
|     `-TypedefType 0x55d61c5e1630 '__int64_t' sugar
|       |-Typedef 0x55d61c5e1208 '__int64_t'
|       `-BuiltinType 0x55d61c59f5a0 'long'
|-TypedefDecl 0x55d61c8cb2d0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55d61c8cb2a0 'String::uintmax_t' sugar
|   |-Typedef 0x55d61c8cb1b0 'uintmax_t'
|   `-TypedefType 0x55d61c6f3680 'uint64_t' sugar
|     |-Typedef 0x55d61c608530 'uint64_t'
|     `-TypedefType 0x55d61c5e16c0 '__uint64_t' sugar
|       |-Typedef 0x55d61c5e1278 '__uint64_t'
|       `-BuiltinType 0x55d61c59f640 'unsigned long'
|-CXXConstructorDecl 0x55d61c8cb390 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55d61c8cb538 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55d61c8cb478 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55d61c8cb6e8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55d61c8cb628 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55d61c8cb840 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55d61c8cb7b0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55d61c8cba58 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55d61c8cb908 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55d61c8cb988 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55d61c8cbc78 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55d61c8cbb28 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55d61c8cbba8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55d61c8cbe98 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55d61c8cbd48 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55d61c8cbdc8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55d61c8cc0b8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55d61c8cbf68 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55d61c8cbfe8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55d61c8cc248 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55d61c8cc180 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55d61c8cc3c8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55d61c8cc308 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55d61c8cc558 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55d61c8cc490 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55d61c8cc6b0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55d61c8cc620 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55d61c8cc808 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55d61c8cc778 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55d61c8cc960 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55d61c8cc8d0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55d61c8ccae8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55d61c8cca28 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55d61c8ccc78 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55d61c8ccbb0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55d61c8cce08 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55d61c8ccd40 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55d61c8ccf98 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55d61c8cced0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55d61c8cd090 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55d61c8cd1b8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55d61c8cd338 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55d61c8cd270 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55d61c8cd488 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55d61c8cd3f8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55d61c8cd540 <col:63> "" ""
|-CXXMethodDecl 0x55d61c8cd688 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55d61c8cd5c8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55d61c8cd898 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55d61c8cd748 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55d61c8cd7c8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55d61c8cdab8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55d61c8cd960 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55d61c8cd9e0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55d61c8cdd98 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55d61c8cdb78 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55d61c8cdbf8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55d61c8d9be0 <col:55> 'int' 10
| `-ParmVarDecl 0x55d61c8cdc70 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55d61c8d9c00 <col:76> 'bool' true
|-CXXMethodDecl 0x55d61c8ce078 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55d61c8cde60 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55d61c8cdee0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55d61c8d9c10 <col:56> 'int' 10
| `-ParmVarDecl 0x55d61c8cdf58 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55d61c8d9c30 <col:77> 'bool' true
|-CXXMethodDecl 0x55d61c8ce180 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55d61c8ce248 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55d61c8ce310 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55d61c8ce3b0 <col:20>
| `-OptimizeNoneAttr 0x55d61c8ce408 <col:30>
|-CXXConversionDecl 0x55d61c8ce4f8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55d61c8ce5c8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55d61c8ce688 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55d61c8ce778 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55d61c8ce838 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55d61c8ce9b8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55d61c8ce8f0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55d61c8ceb08 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55d61c8cea78 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55d61c8cebf8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55d61c8cecb8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55d61c8cef08 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55d61c8ced70 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55d61c8cedf0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55d61c8cf168 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55d61c8cefd0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55d61c8cf050 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55d61c8cf238 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55d61c8cf448 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55d61c8cf2f0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55d61c8cf370 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55d61c8cf668 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55d61c8cf510 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55d61c8cf590 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55d61c8cf7f8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55d61c8cf730 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55d61c8cf8e8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55d61c8cfa58 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55d61c8cf998 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55d61c8cfc68 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55d61c8cfb18 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55d61c8cfb98 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55d61c8cfe80 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55d61c8cfd28 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55d61c8cfda0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55d61c8d0010 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55d61c8cff40 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55d61c8d0230 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55d61c8d00d0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55d61c8d0150 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55d61c8d0380 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55d61c8d02f0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55d61c8d0558 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55d61c8d0440 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55d61c8d04c0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55d61c8d06a8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55d61c8d0618 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55d61c8d08c0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55d61c8d0760 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55d61c8d07e0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55d61c8d9c40 <col:39> 'int' 0
|-CXXMethodDecl 0x55d61c8d0ae0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55d61c8d0980 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55d61c8d0a00 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55d61c8d9c60 <col:48> 'int' 0
|-CXXMethodDecl 0x55d61c8d0cc0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55d61c8d0ba0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55d61c8d0c20 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55d61c8d9c80 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55d61c8d0d90 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55d61c8d0e50 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55d61c8d0f10 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55d61c8d0fd0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55d61c8d1090 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55d61c8d1238 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55d61c8d1140 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55d61c8d13b8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55d61c8d12f0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55d61c8d1590 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55d61c8d1478 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55d61c8d1708 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55d61c8d1648 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55d61c8d1850 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55d61c8d17c0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55d61c8d19a0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55d61c8d1910 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55d61c8d1b78 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55d61c8d1a60 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55d61c8d1ae0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55d61c8d1d58 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55d61c8d1c40 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55d61c8d1cc0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55d61c8d1ea8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55d61c8d1e18 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55d61c8d20b8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55d61c8d1f68 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55d61c8d1fe8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55d61c8d2218 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55d61c8d2180 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55d61c8d2370 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55d61c8d22d8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55d61c8d2418 <col:57> "" ""
|-CXXMethodDecl 0x55d61c8d2528 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55d61c8d2498 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55d61c8d2678 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55d61c8d25e8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55d61c8d27f8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55d61c8d2730 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55d61c8d28c0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55d61c8d2980 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55d61c8d2a40 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55d61c8d2ae0 <col:49> "" ""
|-CXXMethodDecl 0x55d61c8d2b70 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55d61c8d2c30 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55d61c8d2d20 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55d61c8d2de8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55d61c8d2ea8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55d61c8d2f68 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55d61c8d3060 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55d61c8d3128 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55d61c8d31f0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55d61c8d33c8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55d61c8d32a8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55d61c8d3328 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55d61c8d35f0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55d61c8d3490 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55d61c8d3510 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55d61c8d3700 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55d61c8d3768 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55d61c8d3790 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55d61c8d38a8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55d61c8d3948 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55d61c8d39a8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55d61c8d3a08 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55d61c8d3ab8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55d61c8d3b20 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55d61c8d3d58 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55d61c8d3da8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d61c8d3d38 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55d61c8d3c48 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55d61c8d3bf0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55d61c8d3c30 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55d61c8d3c10 <col:32> 'int' 8
|-CXXRecordDecl 0x55d61c8d3dc0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55d61c8d3ed8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55d61c8d3f80 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55d61c8d3fe8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55d61c8d4078 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55d61c8da110 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55d61c8da548 <col:12>
| |-CXXConstructorDecl 0x55d61c8da218 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55d61c8da328 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55d61c8d3f80 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55d61c8dcad0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55d61c8dcaa0 <col:12> 'const char *const' lvalue .data 0x55d61c8d3f80
| | |     `-DeclRefExpr 0x55d61c8dca80 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d61c8da328 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55d61c8d3fe8 'length' 'int'
| | | `-ImplicitCastExpr 0x55d61c8dcb60 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55d61c8dcb30 <col:12> 'const int' lvalue .length 0x55d61c8d3fe8
| | |     `-DeclRefExpr 0x55d61c8dcb10 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d61c8da328 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55d61c8d4078 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55d61c8dcbf0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55d61c8dcbc0 <col:12> 'String::memo_t *const' lvalue .memo 0x55d61c8d4078
| | |     `-DeclRefExpr 0x55d61c8dcba0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d61c8da328 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55d61c8dcc48 <col:12>
| |-CXXConstructorDecl 0x55d61c8da3c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55d61c8da3c8
| | `-ParmVarDecl 0x55d61c8da4d8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55d61c8dfa30 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55d61c8eb448 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55d61c8eb558 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55d61c8eba70 <col:12>
| |   |-BinaryOperator 0x55d61c8eb888 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55d61c8eb840 <col:12> 'const char *' lvalue ->data 0x55d61c8d3f80
| |   | | `-CXXThisExpr 0x55d61c8eb830 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55d61c8eb870 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55d61c8eb800 <col:12> 'const char *const' lvalue .data 0x55d61c8d3f80
| |   |     `-DeclRefExpr 0x55d61c8eb7e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d61c8eb558 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55d61c8eb950 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55d61c8eb908 <col:12> 'int' lvalue ->length 0x55d61c8d3fe8
| |   | | `-CXXThisExpr 0x55d61c8eb8f8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55d61c8eb938 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55d61c8eb8c8 <col:12> 'const int' lvalue .length 0x55d61c8d3fe8
| |   |     `-DeclRefExpr 0x55d61c8eb8a8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d61c8eb558 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55d61c8eba18 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55d61c8eb9d0 <col:12> 'String::memo_t *' lvalue ->memo 0x55d61c8d4078
| |   | | `-CXXThisExpr 0x55d61c8eb9c0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55d61c8eba00 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55d61c8eb990 <col:12> 'String::memo_t *const' lvalue .memo 0x55d61c8d4078
| |   |     `-DeclRefExpr 0x55d61c8eb970 <col:12> 'const String::rep_t' lvalue ParmVar 0x55d61c8eb558 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55d61c8eba60 <col:12>
| |     `-UnaryOperator 0x55d61c8eba48 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55d61c8eba38 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55d61c8eb5c8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55d61c8eb5c8
|   `-ParmVarDecl 0x55d61c8eb6d8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55d61c8d40f0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55d61c8d4338 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55d61c8d4158 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55d61c8d41d8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55d61c8d4250 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55d61c8da0d0 <col:79, line:261:5>
|   |-BinaryOperator 0x55d61c8d9d48 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55d61c8d9ce0 <col:2, col:5> 'const char *' lvalue .data 0x55d61c8d3f80
|   | | `-MemberExpr 0x55d61c8d9cb0 <col:2> 'String::rep_t' lvalue ->_r 0x55d61c8d40f0
|   | |   `-CXXThisExpr 0x55d61c8d9ca0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55d61c8d9d30 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d61c8d9d10 <col:12> 'const char *' lvalue ParmVar 0x55d61c8d4158 'data' 'const char *'
|   |-BinaryOperator 0x55d61c8d9e10 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55d61c8d9da8 <col:2, col:5> 'int' lvalue .length 0x55d61c8d3fe8
|   | | `-MemberExpr 0x55d61c8d9d78 <col:2> 'String::rep_t' lvalue ->_r 0x55d61c8d40f0
|   | |   `-CXXThisExpr 0x55d61c8d9d68 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55d61c8d9df8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d61c8d9dd8 <col:14> 'int' lvalue ParmVar 0x55d61c8d41d8 'length' 'int'
|   `-IfStmt 0x55d61c8da0b8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55d61c8d9f30 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55d61c8d9f18 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55d61c8d9ef8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55d61c8d9ed8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55d61c8d9e70 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55d61c8d4078
|     |       | `-MemberExpr 0x55d61c8d9e40 <col:7> 'String::rep_t' lvalue ->_r 0x55d61c8d40f0
|     |       |   `-CXXThisExpr 0x55d61c8d9e30 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55d61c8d9ec0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55d61c8d9ea0 <col:17> 'String::memo_t *' lvalue ParmVar 0x55d61c8d4250 'memo' 'String::memo_t *'
|     `-CallExpr 0x55d61c8da090 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55d61c8da078 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55d61c8d9f80 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55d61c8c2d68 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55d61c8d9fe8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55d61c8d3948
|         `-ImplicitCastExpr 0x55d61c8d9fd0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55d61c8d9fb0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55d61c8d4250 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55d61c8d45e8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55d61c8d4408 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55d61c8d4488 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55d61c8d4500 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55d61c8d40f0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55d61c8da558 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55d61c8da6e8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55d61c8da650 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55d61c8da5c0 <col:2> '<bound member function type>' ->assign_memo 0x55d61c8d4338
|     | `-ImplicitCastExpr 0x55d61c8da688 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55d61c8da5b0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55d61c8da6a0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55d61c8da5f0 <col:14> 'const char *' lvalue ParmVar 0x55d61c8d4408 'data' 'const char *'
|     |-ImplicitCastExpr 0x55d61c8da6b8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55d61c8da610 <col:20> 'int' lvalue ParmVar 0x55d61c8d4488 'length' 'int'
|     `-ImplicitCastExpr 0x55d61c8da6d0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55d61c8da630 <col:28> 'String::memo_t *' lvalue ParmVar 0x55d61c8d4500 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55d61c8d4778 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55d61c8d46b8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55d61c8da940 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55d61c8da8c0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55d61c8da710 <col:2> '<bound member function type>' ->assign_memo 0x55d61c8d4338
|     | `-CXXThisExpr 0x55d61c8da700 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55d61c8da8f8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55d61c8da790 <col:14, col:19> 'const char *' lvalue .data 0x55d61c8d3f80
|     |   `-MemberExpr 0x55d61c8da760 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55d61c8d40f0
|     |     `-DeclRefExpr 0x55d61c8da740 <col:14> 'const String' lvalue ParmVar 0x55d61c8d46b8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55d61c8da910 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55d61c8da810 <col:25, col:30> 'int' lvalue .length 0x55d61c8d3fe8
|     |   `-MemberExpr 0x55d61c8da7e0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55d61c8d40f0
|     |     `-DeclRefExpr 0x55d61c8da7c0 <col:25> 'const String' lvalue ParmVar 0x55d61c8d46b8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55d61c8da928 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55d61c8da890 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55d61c8d4078
|         `-MemberExpr 0x55d61c8da860 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55d61c8d40f0
|           `-DeclRefExpr 0x55d61c8da840 <col:38> 'const String' lvalue ParmVar 0x55d61c8d46b8 'x' 'const String &'
|-CXXMethodDecl 0x55d61c8d4840 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55d61c8db300 <col:31, line:278:5>
|   `-IfStmt 0x55d61c8db2e8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55d61c8da9e0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55d61c8da9c8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55d61c8da998 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55d61c8d4078
|     |     `-MemberExpr 0x55d61c8da968 <col:6> 'String::rep_t' lvalue ->_r 0x55d61c8d40f0
|     |       `-CXXThisExpr 0x55d61c8da958 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55d61c8db2c0 <col:15, line:277:2>
|       |-ParenExpr 0x55d61c8dae90 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55d61c8dae60 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55d61c8daaf0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55d61c8daad8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55d61c8daac0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55d61c8daa80 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55d61c8d3948
|       |   |       `-ImplicitCastExpr 0x55d61c8daa68 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55d61c8daa38 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55d61c8d4078
|       |   |           `-MemberExpr 0x55d61c8daa08 <col:27> 'String::rep_t' lvalue ->_r 0x55d61c8d40f0
|       |   |             `-CXXThisExpr 0x55d61c8da9f8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55d61c8dab50 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55d61c8dab30 <col:54> 'int' 0
|       |   `-CallExpr 0x55d61c8dadc0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55d61c8dada8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55d61c8dad28 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55d61c639f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55d61c8dae00 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55d61c8dac38 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55d61c8dae18 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55d61c8dac68 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55d61c8dae30 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55d61c8daca0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55d61c8dae48 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55d61c8dad10 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55d61c8dacf8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55d61c8dacc0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55d61c8db1e0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55d61c8db0a0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55d61c8db088 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55d61c8db000 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55d61c8c41b0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55d61c8dafd0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55d61c8d3948
|       | |   `-ImplicitCastExpr 0x55d61c8dafb8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55d61c8daf88 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55d61c8d4078
|       | |       `-MemberExpr 0x55d61c8daf58 <col:40> 'String::rep_t' lvalue ->_r 0x55d61c8d40f0
|       | |         `-CXXThisExpr 0x55d61c8daf48 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55d61c8db1a0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55d61c8db188 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55d61c8db0c8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55d61c8d9020 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55d61c8db1c8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55d61c8db128 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55d61c8d4078
|       |       `-MemberExpr 0x55d61c8db0f8 <col:15> 'String::rep_t' lvalue ->_r 0x55d61c8d40f0
|       |         `-CXXThisExpr 0x55d61c8db0e8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55d61c8db2a0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55d61c8db238 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55d61c8d4078
|         | `-MemberExpr 0x55d61c8db208 <col:6> 'String::rep_t' lvalue ->_r 0x55d61c8d40f0
|         |   `-CXXThisExpr 0x55d61c8db1f8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55d61c8db288 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55d61c8db268 <col:16> 'int' 0
|-CXXMethodDecl 0x55d61c8d4ad8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55d61c8d48f8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55d61c8d4978 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55d61c8d49f0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55d61c8d4bb0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55d61c8d4e00 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55d61c8d4c68 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55d61c8d4ce8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55d61c8d4d60 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55d61c8d4fe8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55d61c8d4ed0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55d61c8d4f50 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55d61c8d50e8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55d61c8db3d8 <col:41, line:286:5>
|   `-ReturnStmt 0x55d61c8db3c8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55d61c8db398 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55d61c8db360 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55d61c8db348 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55d61c8db328 <col:46> 'int' 1
|-CXXMethodDecl 0x55d61c8d5388 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55d61c8d51a0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55d61c8d5220 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55d61c8d52a0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55d61c8d9020 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55d61c8d5450 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55d61c8d90f0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55d61c8d92c0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55d61c8d91a8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55d61c8d9228 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55d61c8d9380 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55d61c8d9448 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55d61c8d9548 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55d61c8d95c0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55d61c8d9638 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55d61c8d96a0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55d61c8d97a0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55d61c8d97f0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d61c8d9780 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55d61c8d9760 <col:22> 'int' 14
|-CXXMethodDecl 0x55d61c8d9a08 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55d61c8d9820 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55d61c8d98a0 <col:38> col:41 'int'
| `-ParmVarDecl 0x55d61c8d9920 <col:43> col:46 'int'
|-FriendDecl 0x55d61c8d9b10 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55d61c8d9ba0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d61c9983b0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55d61c998588 prev 0x55d61c9983b0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55d61c998618 <col:46, col:52> col:46 public
|-TypedefDecl 0x55d61c998640 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d61c59f580 'int'
|-TypedefDecl 0x55d61c999fa0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55d61c999f50 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55d61c999f30 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55d61c998858 'type'
|     `-SubstTemplateTypeParmType 0x55d61c998820 'String' sugar
|       |-TemplateTypeParmType 0x55d61c88e5a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d61c88e550 'T'
|       `-RecordType 0x55d61c8cad90 'String'
|         `-CXXRecord 0x55d61c8cad00 'String'
|-TypedefDecl 0x55d61c99a058 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55d61c99a020 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55d61c99a000 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55d61c999fa0 'type'
|     `-ElaboratedType 0x55d61c999f50 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55d61c999f30 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55d61c998858 'type'
|         `-SubstTemplateTypeParmType 0x55d61c998820 'String' sugar
|           |-TemplateTypeParmType 0x55d61c88e5a0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55d61c88e550 'T'
|           `-RecordType 0x55d61c8cad90 'String'
|             `-CXXRecord 0x55d61c8cad00 'String'
|-CXXMethodDecl 0x55d61c99a1d8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55d61c99a0e8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55d61c99a2c8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55d61c99a3a8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55d61c99a3a8
|-CXXMethodDecl 0x55d61c99a678 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55d61c99a580 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55d61c99a8b8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55d61c99a730 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d61c99a7a8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55d61c99aa88 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55d61c99a978 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d61c99a9f0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55d61c99abe8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55d61c99acb8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55d61c99af08 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55d61c99ad78 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55d61c99adf0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55d61c99b168 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55d61c99afd8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55d61c99b050 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55d61c99b328 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55d61c99b238 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55d61c99b4e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55d61c99b3f0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55d61c99b5a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d61c99b650 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d61c99b888 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55d61c99b700 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55d61c99b778 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55d61c99bb28 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55d61c99ba30 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55d61c99bbf0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55d61c99bc40 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55d61c99bc90 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55d61cb02530 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55d61c997058 prev 0x55d61cb02530 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55d61c998320 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55d61c9982d0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55d61c9982b0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55d61c998160 'type'
|     `-SubstTemplateTypeParmType 0x55d61c997ff0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55d61c864350 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55d61c8642f8 'F'
|       `-RecordType 0x55d61c997c50 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55d61c997b70 'typed_array_memory'
|-FieldDecl 0x55d61c99bce0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55d61c99bd30 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55d61c99bd68 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55d61c9970f0 'String' sugar
|   |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55d61c89b868 'T'
|   `-RecordType 0x55d61c8cad90 'String'
|     `-CXXRecord 0x55d61c8cad00 'String'
|-TypedefDecl 0x55d61c99bdf8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55d61c99bdc0 'String &'
|   `-SubstTemplateTypeParmType 0x55d61c9970f0 'String' sugar
|     |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d61c89b868 'T'
|     `-RecordType 0x55d61c8cad90 'String'
|       `-CXXRecord 0x55d61c8cad00 'String'
|-TypedefDecl 0x55d61c99be88 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55d61c99be50 'const String &'
|   `-QualType 0x55d61c9970f1 'const String' const
|     `-SubstTemplateTypeParmType 0x55d61c9970f0 'String' sugar
|       |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d61c89b868 'T'
|       `-RecordType 0x55d61c8cad90 'String'
|         `-CXXRecord 0x55d61c8cad00 'String'
|-TypedefDecl 0x55d61c99bf18 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55d61c99bee0 'String *'
|   `-SubstTemplateTypeParmType 0x55d61c9970f0 'String' sugar
|     |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d61c89b868 'T'
|     `-RecordType 0x55d61c8cad90 'String'
|       `-CXXRecord 0x55d61c8cad00 'String'
|-TypedefDecl 0x55d61c99bfa8 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55d61c99bf70 'const String *'
|   `-QualType 0x55d61c9970f1 'const String' const
|     `-SubstTemplateTypeParmType 0x55d61c9970f0 'String' sugar
|       |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d61c89b868 'T'
|       `-RecordType 0x55d61c8cad90 'String'
|         `-CXXRecord 0x55d61c8cad00 'String'
|-TypedefDecl 0x55d61c99cc00 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55d61c99cbb0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55d61c99cb90 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55d61c99cac8 'type'
|     `-LValueReferenceType 0x55d61c99ca90 'const String &'
|       `-QualType 0x55d61c99c831 'const String' const
|         `-SubstTemplateTypeParmType 0x55d61c99c830 'String' sugar
|           |-TemplateTypeParmType 0x55d61c86e2a0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55d61c86e248 'T'
|           `-RecordType 0x55d61c8cad90 'String'
|             `-CXXRecord 0x55d61c8cad00 'String'
|-TypedefDecl 0x55d61c99cc68 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55d61c99be50 'const String &'
|   `-QualType 0x55d61c9970f1 'const String' const
|     `-SubstTemplateTypeParmType 0x55d61c9970f0 'String' sugar
|       |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d61c89b868 'T'
|       `-RecordType 0x55d61c8cad90 'String'
|         `-CXXRecord 0x55d61c8cad00 'String'
|-TypedefDecl 0x55d61c99ccc0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55d61c59f580 'int'
|-TypedefDecl 0x55d61c99cd28 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55d61c99bee0 'String *'
|   `-SubstTemplateTypeParmType 0x55d61c9970f0 'String' sugar
|     |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55d61c89b868 'T'
|     `-RecordType 0x55d61c8cad90 'String'
|       `-CXXRecord 0x55d61c8cad00 'String'
|-TypedefDecl 0x55d61c99cd90 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55d61c99bf70 'const String *'
|   `-QualType 0x55d61c9970f1 'const String' const
|     `-SubstTemplateTypeParmType 0x55d61c9970f0 'String' sugar
|       |-TemplateTypeParmType 0x55d61c89b8c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55d61c89b868 'T'
|       `-RecordType 0x55d61c8cad90 'String'
|         `-CXXRecord 0x55d61c8cad00 'String'
|-EnumDecl 0x55d61c99cde8 <line:134:5> col:5
| `-EnumConstantDecl 0x55d61c99cee0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55d61c99cec0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55d61c89cf48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55d61c89cf20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55d61c89cf00 <col:40> 'int' 1
|-CXXConstructorDecl 0x55d61c99cf68 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55d61c99d1f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55d61c99d020 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d61c99d0c0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55d61c99d488 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55d61c99d370 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55d61c99d748 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55d61c99d630 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55d61c99da60 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55d61c99d940 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55d61c99dd70 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55d61c99dc50 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55d61c99e060 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55d61c99dea8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d61c99df20 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55d61cb594e0 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55d61cb59590 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d61cb595e8 <col:30> Inherited
|-CXXMethodDecl 0x55d61cb59630 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55d61cb596e0 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d61cb59738 <col:30> Inherited
|-CXXMethodDecl 0x55d61cb597f8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55d61cb598a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d61cb59900 <col:30> Inherited
|-CXXMethodDecl 0x55d61cb59948 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55d61cb599f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d61cb59a50 <col:30> Inherited
|-CXXMethodDecl 0x55d61cb59a98 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55d61cb59b48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d61cb59ba0 <col:30> Inherited
|-CXXMethodDecl 0x55d61cb59be8 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55d61cb59c98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55d61cb59cf0 <col:30> Inherited
|-CXXMethodDecl 0x55d61cb59d18 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d61cb59dc8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55d61cb59e78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55d61cb5a038 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55d61cb59f28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55d61cb59fa0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55d61cb5a188 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55d61cb5a0f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d61cb5a338 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55d61cb5a240 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d61cb5a3f0 <col:20>
| `-OptimizeNoneAttr 0x55d61cb5a448 <col:30>
|-CXXMethodDecl 0x55d61cb5a568 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55d61cb5a470 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55d61cb5a620 <col:20>
| `-OptimizeNoneAttr 0x55d61cb5a678 <col:30>
|-CXXMethodDecl 0x55d61cb5a730 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d61cb5a6a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d61cb5a878 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d61cb5a7e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d61cb5a9a8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55d61cb5aaa8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55d61cb5ab78 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55d61cb5ac48 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55d61cb5ad88 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55d61cb5acf8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d61cb5aed0 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55d61cb5ae40 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55d61cb5b018 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55d61cb5af88 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d61cb5b0d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55d61cb5b1d0 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55d61cb5b140 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55d61cb5b288 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55d61cb5b348 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55d61cb5b448 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55d61cb5b5c8 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55d61cb5b508 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55d61cb5bd58 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55d61cb5b680 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55d61cb5bcb8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55d61cb5bbb8 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55d61cb5be38 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55d61cb5bf88 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55d61cb5bef8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55d61cb5c040 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55d61cb5c288 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55d61cb5c100 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55d61cb5c178 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55d61cb5c418 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55d61cb5c358 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55d61cb5c628 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55d61cb5c4e0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55d61cb5c558 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55d61cb5c6e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55d61cb5c948 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55d61cb5c850 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55d61cb5ca18 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55d61cb5ca18

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55d61ca84d48 prev 0x55d61cb263b0 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55d61ca84e40 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55d61ca84ed0 <col:22, col:28> col:22 public
|-EnumDecl 0x55d61ca84ef8 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55d61ca85018 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d61ca84ff8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55d61ca84fe0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55d61ca84fc0 <col:14> 'int' 999
| |-EnumConstantDecl 0x55d61ca850c0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d61ca850a0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55d61ca85088 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55d61ca85068 <col:14> 'int' 1
| |-EnumConstantDecl 0x55d61ca85150 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d61ca85130 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55d61ca85110 <col:17> 'int' 0
| |-EnumConstantDecl 0x55d61ca851e0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d61ca851c0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55d61ca851a0 <col:13> 'int' 1
| |-EnumConstantDecl 0x55d61ca85270 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d61ca85250 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55d61ca85230 <col:16> 'int' 2
| |-EnumConstantDecl 0x55d61ca85300 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d61ca852e0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55d61ca852c0 <col:13> 'int' 3
| |-EnumConstantDecl 0x55d61ca85390 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d61ca85370 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55d61ca85350 <col:15> 'int' 4
| |-EnumConstantDecl 0x55d61ca85420 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d61ca85400 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55d61ca853e0 <col:14> 'int' 5
| |-EnumConstantDecl 0x55d61ca854b0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55d61ca85490 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55d61ca85470 <col:12> 'int' 6
| `-EnumConstantDecl 0x55d61ca85540 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55d61ca85520 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55d61ca85500 <col:13> 'int' 7
|-VarDecl 0x55d61ca855b0 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55d61ca85638 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55d61ca856c0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55d61ca85748 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55d61ca857d0 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55d61ca85858 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55d61ca858e0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55d61ca85968 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55d61ca859f0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55d61ca85a78 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55d61ca85b00 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55d61ca85c00 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55d61cb78bb8 '_nerrors' 'int'
| | `-IntegerLiteral 0x55d61cb79348 <line:128:13> 'int' 0
| `-CompoundStmt 0x55d61cb793b8 <col:16, line:129:5>
|-CXXDestructorDecl 0x55d61ca85cf0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55d61cb793c8 <col:29, line:132:5>
|-CXXMethodDecl 0x55d61ca85ea8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55d61ca85de0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d61ca85f70 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55d61ca86058 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55d61cb79420 <col:44, line:161:5>
|   `-ReturnStmt 0x55d61cb79410 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55d61cb793f8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55d61cb793d8 <col:9> 'ErrorHandler *' lvalue Var 0x55d61cb78c18 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55d61ca861c8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55d61ca86108 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55d61ca86290 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55d61cb79480 <col:43, line:173:5>
|   `-ReturnStmt 0x55d61cb79470 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55d61cb79458 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55d61cb79438 <col:9> 'ErrorHandler *' lvalue Var 0x55d61cb78c90 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55d61ca86348 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55d61ca863c8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55d61ca864d8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55d61ca86448 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55d61ca86628 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55d61ca86598 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55d61ca86780 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55d61ca866e8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55d61ca868d8 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55d61ca86840 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55d61ca86a30 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55d61ca86998 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55d61ca86c40 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55d61ca86ae8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55d61ca86b68 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55d61cb74a58 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55d61cb74940 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55d61cb749c0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55d61cb74c78 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55d61cb74b18 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55d61cb74b98 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55d61cb74e58 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55d61cb74d38 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55d61cb74db8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55d61cb75038 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55d61cb74f18 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55d61cb74f98 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55d61cb751c0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55d61cb750f8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55d61cb75390 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55d61cb75278 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55d61cb752f0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55d61cb796d8 <col:57, line:234:5>
|   `-ReturnStmt 0x55d61cb796c8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55d61cb796b0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55d61cb79658 <col:9, col:41> 'int'
|         |-MemberExpr 0x55d61cb79628 <col:9> '<bound member function type>' ->xmessage 0x55d61cb751c0
|         | `-CXXThisExpr 0x55d61cb79618 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55d61cb79698 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55d61cb79680 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55d61cb795f8 <col:18, col:40> 'String' (CXXTemporary 0x55d61cb795f8)
|               `-CallExpr 0x55d61cb795c0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55d61cb795a8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55d61cb79520 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55d61cb773e8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55d61cb79540 <col:31> 'const String' lvalue ParmVar 0x55d61cb752f0 'str' 'const String &'
|                 `-DeclRefExpr 0x55d61cb79560 <col:36> 'const String' lvalue ParmVar 0x55d61cb75278 'anno' 'const String &'
|-CXXMethodDecl 0x55d61cb756d0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55d61cb75450 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55d61cb754d0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55d61cb755a0 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55d61cb79968 <col:68, line:243:5>
|   `-ReturnStmt 0x55d61cb79958 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55d61cb79940 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55d61cb798e0 <col:9, col:41> 'int'
|         |-MemberExpr 0x55d61cb798b0 <col:9> '<bound member function type>' ->xmessage 0x55d61cb75390
|         | `-CXXThisExpr 0x55d61cb798a0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55d61cb79778 <col:18> 'const String' lvalue ParmVar 0x55d61cb75450 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55d61cb79928 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55d61cb79910 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55d61cb79880 <col:24, col:40> 'String' (CXXTemporary 0x55d61cb79880)
|               `-CXXMemberCallExpr 0x55d61cb79818 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55d61cb797a8 <col:24> '<bound member function type>' ->vformat 0x55d61cb768b0
|                 | `-CXXThisExpr 0x55d61cb79798 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55d61cb79848 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55d61cb797d8 <col:32> 'const char *' lvalue ParmVar 0x55d61cb754d0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55d61cb79860 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55d61cb797f8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55d61cb755a0 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55d61cb75970 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55d61cb75798 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55d61cb75810 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55d61cb75888 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55d61cb79ca8 <col:23, line:254:5>
|   `-ReturnStmt 0x55d61cb79c98 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55d61cb79c80 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55d61cb79c20 <col:9, col:71> 'int'
|         |-MemberExpr 0x55d61cb79bf0 <col:9> '<bound member function type>' ->xmessage 0x55d61cb75390
|         | `-CXXThisExpr 0x55d61cb79be0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55d61cb79c68 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55d61cb79c50 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55d61cb79ba0 <col:18, col:65> 'String' (CXXTemporary 0x55d61cb79ba0)
|         |     `-CallExpr 0x55d61cb79b38 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55d61cb79b20 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55d61cb79a08 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55d61cb773e8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55d61cb79a28 <col:31> 'const String' lvalue ParmVar 0x55d61cb75810 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55d61cb79b80 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55d61cb79b68 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55d61cb79b00 <col:37, col:64> 'String' (CXXTemporary 0x55d61cb79b00)
|         |             `-CallExpr 0x55d61cb79ad0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55d61cb79ab8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55d61cb79a48 <col:37> 'String (const String &)' lvalue CXXMethod 0x55d61cb77a38 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55d61cb79a68 <col:56> 'const String' lvalue ParmVar 0x55d61cb75798 'landmark' 'const String &'
|         `-DeclRefExpr 0x55d61cb79bc0 <col:68> 'const String' lvalue ParmVar 0x55d61cb75888 'str' 'const String &'
|-CXXMethodDecl 0x55d61cb75cf0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55d61cb75a38 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55d61cb75ab0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55d61cb75b30 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55d61cb75ba8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55d61cb79f60 <col:34, line:267:5>
|   `-ReturnStmt 0x55d61cb79f50 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55d61cb79f38 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55d61cb79ed0 <col:9, col:51> 'int'
|         |-MemberExpr 0x55d61cb79ea0 <col:9> '<bound member function type>' ->xmessage 0x55d61cb75970
|         | `-CXXThisExpr 0x55d61cb79e90 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55d61cb79d48 <col:18> 'const String' lvalue ParmVar 0x55d61cb75a38 'landmark' 'const String &'
|         |-DeclRefExpr 0x55d61cb79d68 <col:28> 'const String' lvalue ParmVar 0x55d61cb75ab0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55d61cb79f20 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55d61cb79f08 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55d61cb79e70 <col:34, col:50> 'String' (CXXTemporary 0x55d61cb79e70)
|               `-CXXMemberCallExpr 0x55d61cb79e08 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55d61cb79d98 <col:34> '<bound member function type>' ->vformat 0x55d61cb768b0
|                 | `-CXXThisExpr 0x55d61cb79d88 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55d61cb79e38 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55d61cb79dc8 <col:42> 'const char *' lvalue ParmVar 0x55d61cb75b30 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55d61cb79e50 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55d61cb79de8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55d61cb75ba8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55d61cb75e00 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55d61cb79fe0 <col:25, line:288:5>
|   `-ReturnStmt 0x55d61cb79fd0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55d61cb79fb8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55d61cb79f88 <col:9> 'const int' lvalue ->_nerrors 0x55d61cb78bb8
|         `-CXXThisExpr 0x55d61cb79f78 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55d61cb76010 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55d61cb75eb8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55d61cb75f38 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55d61cb762f8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55d61cb760d8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55d61cb76158 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55d61cb761d0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55d61cb76490 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55d61cb763c8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55d61cb766d8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55d61cb76550 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55d61cb765c8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55d61cb7a240 <col:58, line:357:5>
|   `-ReturnStmt 0x55d61cb7a230 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55d61cb7a218 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55d61cb7a1e8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55d61cb7a1d0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55d61cb7a1b0 <col:9, col:29> 'String' (CXXTemporary 0x55d61cb7a1b0)
|             `-CallExpr 0x55d61cb7a140 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55d61cb7a128 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55d61cb7a0a8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55d61cb762f8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55d61cb7a048 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55d61cb7a178 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55d61cb7a068 <col:21> 'const char *' lvalue ParmVar 0x55d61cb76550 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55d61cb7a190 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55d61cb7a088 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55d61cb765c8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55d61cb768b0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55d61cb767a0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55d61cb76818 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55d61cb76a08 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55d61cb76978 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55d61cb76b50 <line:393:5, col:46> col:20 used decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55d61cb76ac0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55d61cb76df0 <line:424:5, col:69> col:19 used emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55d61cb76c08 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55d61cb76c88 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55d61cb76d00 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55d61cb76f50 <line:438:5, line:441:5> line:438:18 used account 'void (int)' virtual
| |-ParmVarDecl 0x55d61cb76ec0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55d61cb7a358 <col:37, line:441:5>
|   `-IfStmt 0x55d61cb7a340 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55d61cb7a2c8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55d61cb7a298 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55d61cb7a258 <col:6> 'int' lvalue ParmVar 0x55d61cb76ec0 'level' 'int'
|     | `-ImplicitCastExpr 0x55d61cb7a2b0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55d61cb7a278 <col:15> 'ErrorHandler::Level' EnumConstant 0x55d61ca85300 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55d61cb7a328 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55d61cb7a2f8 <col:8> 'int' lvalue ->_nerrors 0x55d61cb78bb8
|         `-CXXThisExpr 0x55d61cb7a2e8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55d61cb77018 <line:446:5, line:448:5> line:446:18 used clear 'void ()' virtual
| `-CompoundStmt 0x55d61cb7a3f0 <col:26, line:448:5>
|   `-BinaryOperator 0x55d61cb7a3d0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55d61cb7a380 <col:2> 'int' lvalue ->_nerrors 0x55d61cb78bb8
|     | `-CXXThisExpr 0x55d61cb7a370 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55d61cb7a3b0 <col:13> 'int' 0
|-CXXMethodDecl 0x55d61cb771e0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55d61cb770d0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55d61cb77148 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55d61cb773e8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55d61cb772a0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55d61cb77318 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55d61cb77698 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55d61cb774a8 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55d61cb77528 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55d61cb775a8 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55d61cb77750 <col:59> 0 0
|-CXXMethodDecl 0x55d61cb778e8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55d61cb777c8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55d61cb77848 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55d61cb7aa60 <col:70, line:534:5>
|   |-DeclStmt 0x55d61cb7a560 <line:528:2, col:20>
|   | |-VarDecl 0x55d61cb7a418 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55d61cb7a480 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55d61cb7a4b8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55d61cb7a520 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55d61cb7a630 <line:529:2, col:23>
|   | `-VarDecl 0x55d61cb7a590 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55d61cb7a618 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55d61cb7a5f8 <col:18> 'const char *' lvalue ParmVar 0x55d61cb777c8 'begin' 'const char *'
|   |-DoStmt 0x55d61cb7a9f8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55d61cb7a928 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55d61cb7a910 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55d61cb7a8f0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55d61cb7a648 <col:6> 'const char *' lvalue Var 0x55d61cb7a590 'x' 'const char *'
|   | |     `-CallExpr 0x55d61cb7a840 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55d61cb7a828 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55d61cb7a7e0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55d61cb79090 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55d61cb7a8a8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55d61cb7a890 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55d61cb7a700 <col:20, col:27> 'String' (CXXTemporary 0x55d61cb7a700)
|   | |       |     `-CXXTemporaryObjectExpr 0x55d61cb7a6c8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55d61cb7a8c0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55d61cb7a720 <col:30> 'const char *' lvalue Var 0x55d61cb7a590 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55d61cb7a8d8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55d61cb7a740 <col:33> 'const char *' lvalue ParmVar 0x55d61cb77848 'end' 'const char *'
|   | |       |-UnaryOperator 0x55d61cb7a780 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55d61cb7a760 <col:39> 'String' lvalue Var 0x55d61cb7a418 'name' 'String'
|   | |       |-UnaryOperator 0x55d61cb7a7b8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55d61cb7a798 <col:46> 'String' lvalue Var 0x55d61cb7a4b8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55d61cb7a7d0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55d61cb7a9e0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55d61cb7a9c8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55d61cb7a9a8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55d61cb7a978 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55d61c8ce4f8
|   |         `-ImplicitCastExpr 0x55d61cb7a960 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55d61cb7a940 <col:11> 'String' lvalue Var 0x55d61cb7a418 'name' 'String'
|   `-ReturnStmt 0x55d61cb7aa50 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55d61cb7aa38 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55d61cb7aa18 <col:9> 'const char *' lvalue Var 0x55d61cb7a590 'x' 'const char *'
|-CXXMethodDecl 0x55d61cb77a38 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55d61cb779a8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55d61cb7b068 <col:55, line:550:5>
|   `-IfStmt 0x55d61cb7b040 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55d61cb7aca0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55d61cb7ac88 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55d61cb7ac70 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55d61cb7ac50 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55d61cb7ac20 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55d61c8ce4f8
|     | |       `-DeclRefExpr 0x55d61cb7aac0 <col:6> 'const String' lvalue ParmVar 0x55d61cb779a8 'x' 'const String &'
|     | `-BinaryOperator 0x55d61cb7ac00 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55d61cb7abd0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55d61cb7ab80 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55d61cb7ab68 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55d61cb7ab20 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55d61c8e7d30 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55d61cb7aae0 <col:11> 'const String' lvalue ParmVar 0x55d61cb779a8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55d61cb7ab00 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55d61cb7abe8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55d61cb7abb8 <col:19> 'char' 123
|     |-ReturnStmt 0x55d61cb7ad10 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55d61cb7ace0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55d61cb7acc0 <col:13> 'const String' lvalue ParmVar 0x55d61cb779a8 'x' 'const String &'
|     `-IfStmt 0x55d61cb7b018 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55d61cb7ada8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55d61cb7ad90 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55d61cb7ad70 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55d61cb7ad40 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55d61c8ce4f8
|       |       `-DeclRefExpr 0x55d61cb7ad20 <col:11> 'const String' lvalue ParmVar 0x55d61cb779a8 'x' 'const String &'
|       |-ReturnStmt 0x55d61cb7af30 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55d61cb7af18 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55d61cb7aee8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55d61cb7aed0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55d61cb7aeb0 <col:13, col:29> 'String' (CXXTemporary 0x55d61cb7aeb0)
|       |         `-CallExpr 0x55d61cb7ae60 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55d61cb7ae48 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55d61cb7adc0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55d61cb771e0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55d61cb7ae90 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55d61cb7ade0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55d61cb7ae00 <col:28> 'const String' lvalue ParmVar 0x55d61cb779a8 'x' 'const String &'
|       `-ReturnStmt 0x55d61cb7b008 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55d61cb7aff0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55d61cb7afc0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55d61cb7afa8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55d61cb7af88 <col:13, col:20> 'String' (CXXTemporary 0x55d61cb7af88)
|                 `-CXXTemporaryObjectExpr 0x55d61cb7af50 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55d61cb77c00 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55d61cb77af0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55d61cb77b68 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55d61cb79338 <col:71> 'bool' false
|-CXXRecordDecl 0x55d61cb77cb0 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55d61cb77fa8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55d61cb77f40 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55d61cb77ee0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55d61cb77ea0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55d61c8cad90 'String'
|       | `-CXXRecord 0x55d61c8cad00 'String'
|       |-BuiltinType 0x55d61c59f580 'int'
|       `-DecayedType 0x55d61cb75570 '__va_list_tag *' sugar
|         |-TypedefType 0x55d61cb75540 'va_list' sugar
|         | |-Typedef 0x55d61c7bbe40 'va_list'
|         | `-TypedefType 0x55d61c7bbdf0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55d61c6f3a18 '__gnuc_va_list'
|         |   `-TypedefType 0x55d61c6f3980 '__builtin_va_list' sugar
|         |     |-Typedef 0x55d61c5e0d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55d61c5e0ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55d61c5a02d0 '__va_list_tag'
|         |         `-CXXRecord 0x55d61c5a0238 '__va_list_tag'
|         `-PointerType 0x55d61c7c16e0 '__va_list_tag *'
|           `-RecordType 0x55d61c5a02d0 '__va_list_tag'
|             `-CXXRecord 0x55d61c5a0238 '__va_list_tag'
|-EnumDecl 0x55d61cb78000 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55d61cb78100 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d61cb78660 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb780e0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55d61cb780c0 <col:16> 'int' 1
| |-EnumConstantDecl 0x55d61cb78190 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d61cb78678 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb78170 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55d61cb78150 <col:21> 'int' 2
| |-EnumConstantDecl 0x55d61cb78220 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d61cb78690 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb78200 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55d61cb781e0 <col:22> 'int' 4
| |-EnumConstantDecl 0x55d61cb782b0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d61cb786a8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb78290 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55d61cb78270 <col:17> 'int' 8
| |-EnumConstantDecl 0x55d61cb78340 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d61cb786c0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb78320 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55d61cb78300 <col:22> 'int' 16
| |-EnumConstantDecl 0x55d61cb783d0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d61cb786d8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb783b0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55d61cb78390 <col:19> 'int' 32
| |-EnumConstantDecl 0x55d61cb78460 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d61cb786f0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb78440 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55d61cb78420 <col:17> 'int' 64
| |-EnumConstantDecl 0x55d61cb784f0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d61cb78708 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb784d0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55d61cb784b0 <col:14> 'int' 128
| |-EnumConstantDecl 0x55d61cb78580 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55d61cb78720 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55d61cb78560 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55d61cb78540 <col:16> 'int' 256
| `-EnumConstantDecl 0x55d61cb78610 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55d61cb78738 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55d61cb785f0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55d61cb785d0 <col:12> 'int' 1024
|-CXXMethodDecl 0x55d61cb78948 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55d61cb78760 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55d61cb78800 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55d61cb78ad0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55d61cb78a08 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55d61cb78b78 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55d61cb78bb8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55d61cb78c18 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55d61cb78c90 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55d61cb79090 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55d61cb78d08 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55d61cb78d88 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55d61cb78e08 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55d61cb78e80 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55d61cb78ef8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55d61cb78f70 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55d61cb791b8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55d61cb791b8
| `-ParmVarDecl 0x55d61cb792c8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55d61cb7b3c8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55d61cb7b3c8
  `-ParmVarDecl 0x55d61cb7b4d8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>
