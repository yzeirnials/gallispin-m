
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct libdivide_u32_t
         0 |   uint32_t magic
         4 |   uint8_t more
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPFlowID
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   class IPAddress _daddr
         4 |     uint32_t _addr
         8 |   uint16_t _sport
        10 |   uint16_t _dport
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPRewriterEntry
         0 |   class IPFlowID _flowid
         0 |     class IPAddress _saddr
         0 |       uint32_t _addr
         4 |     class IPAddress _daddr
         4 |       uint32_t _addr
         8 |     uint16_t _sport
        10 |     uint16_t _dport
   12:0-23 |   uint32_t _output
        15 |   uint8_t _direction
        16 |   class IPRewriterEntry * _hashnext
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterFlow *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5)
         0 |   class IPRewriterPattern * pattern
         0 |   class IPMapper * mapper
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPRewriterInput
         0 |   class IPRewriterBase * owner
         8 |   int owner_input
        12 |   int kind
        16 |   int foutput
        24 |   class IPRewriterBase * reply_element
        32 |   int routput
        36 |   uint32_t count
        40 |   uint32_t failures
        48 |   union IPRewriterInput::(anonymous at ../elements/ip/iprewriterbase.hh:23:5) u
        48 |     class IPRewriterPattern * pattern
        48 |     class IPMapper * mapper
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class IPRewriterEntry * _element
         8 |   class IPRewriterEntry ** _pprev
        16 |   HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |   const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashContainer_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >
         0 |   class HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > (base)
         0 |     class IPRewriterEntry * _element
         8 |     class IPRewriterEntry ** _pprev
        16 |     HashContainer_const_iterator<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> >::bucket_count_type _bucket
        24 |     const HashContainer<class IPRewriterEntry, class HashContainer_adapter<class IPRewriterEntry> > * _hc
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be77da988 prev 0x561be77d20f8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561be77daa80 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x561be77dab10 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x561be77dab88 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x561be77dac48 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x561be77dad10 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x561be77dae88 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x561be77dadc0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x561be77daf30 <col:24>
| `-OptimizeNoneAttr 0x561be77daf88 <col:34>
|-CXXMethodDecl 0x561be77dafd0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x561be77db288 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x561be77db080 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x561be77db0f8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x561be77db178 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x561be77db350 <line:229:7, col:14> col:7 private
|-FieldDecl 0x561be77db388 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x561be77db3f0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x561be77db478 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x561be77db798 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x561be77db530 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x561be77db5a8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x561be77db620 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x561be77db6a0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x561be77db8b0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x561be7749f38 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x561be7749f38
| `-ParmVarDecl 0x561be774a048 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x561be774a0e8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x561be774a0e8
| `-ParmVarDecl 0x561be774a1f8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x561be7a83d40 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be751fb70 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561be751fc88 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x561be751fd18 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x561be751fde8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x561be751fed0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x561be75200e8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x561be751ff90 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7520298 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x561be75201a0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x561be75203e0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x561be7520350 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x561be7520f00 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x561be7520e70 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7521048 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x561be7520fb8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7521110 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x561be7521258 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x561be75211c8 <col:28> col:31 'int'
|-CXXMethodDecl 0x561be7521320 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x561be7521468 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x561be75213d8 <col:28> col:31 'int'
|-CXXMethodDecl 0x561be75215e8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x561be7521520 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7521730 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x561be75216a0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be75217f8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x561be75219b8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x561be75218a8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561be7521920 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7521c08 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x561be7521a78 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be7521af0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561be7521cb8 <col:86> "" ""
|-CXXMethodDecl 0x561be7521f28 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x561be7521d98 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x561be7521e10 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be75220d8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x561be7521fe8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x561be7522288 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x561be7522190 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x561be7522558 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x561be7522340 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x561be75223b8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561be7522430 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7522838 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x561be7522620 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x561be7522698 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be7522710 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561be75228f0 <col:115> "" ""
|-AccessSpecDecl 0x561be7522960 <line:84:3, col:10> col:3 private
|-FieldDecl 0x561be7522998 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be75230a0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x561be75230a0
| `-ParmVarDecl 0x561be75231a8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x561be7523248 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x561be7523248
| `-ParmVarDecl 0x561be7523358 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x561be75c1c48 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561be77b7540 <col:7>
|-CXXConstructorDecl 0x561be75c1d20 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x561be75c1d20
| `-ParmVarDecl 0x561be75c1e38 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x561be75c1ea8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x561be75c1ea8
| `-ParmVarDecl 0x561be75c1fb8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x561be77b9eb0 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be7897d30 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x561be7897f08 prev 0x561be7897d30 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561be7897f98 <col:46, col:52> col:46 public
|-TypedefDecl 0x561be7897fc0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be7899b90 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x561be7899b40 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x561be7898470 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x561be7898370 'type'
|     `-TemplateSpecializationType 0x561be7898300 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x561be78981e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x561be78981c0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x561be78981a0 <col:24> 'unsigned long' 8
|       `-RecordType 0x561be78982e0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x561be7898200 'char_array'
|-TypedefDecl 0x561be7899c48 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x561be7899c10 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x561be7899bf0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x561be7899b90 'type'
|     `-ElaboratedType 0x561be7899b40 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x561be7898470 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x561be7898370 'type'
|         `-TemplateSpecializationType 0x561be7898300 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x561be78981e0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x561be78981c0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x561be78981a0 <col:24> 'unsigned long' 8
|           `-RecordType 0x561be78982e0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x561be7898200 'char_array'
|-CXXMethodDecl 0x561be7899dc8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x561be7899cd8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x561be7899eb8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561be7899f98 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x561be789a268 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x561be789a170 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x561be789a4a8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x561be789a320 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be789a398 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561be789a678 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x561be789a568 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be789a5e0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561be789a7d8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x561be789a8a8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x561be789aaf8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x561be789a968 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x561be789a9e0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561be789ad58 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x561be789abc8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x561be789ac40 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561be789af18 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x561be789ae28 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561be789b0d8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x561be789afe0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561be789b190 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be789dc80 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be789deb8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x561be789dd30 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be789dda8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x561be789e158 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x561be789e060 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x561be789e220 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x561be789e270 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561be789e2c0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be7981468 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x561be798d468 prev 0x561be7981468 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561be798e480 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x561be798e430 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x561be798e410 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x561be798e2c0 'type'
|     `-SubstTemplateTypeParmType 0x561be7897900 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561be753e800 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be753e7a8 'T'
|       `-RecordType 0x561be7897450 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x561be7897368 'sized_array_memory'
|-FieldDecl 0x561be798e580 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x561be798e5d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561be798e608 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x561be798d500 'Element *' sugar
|   |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561be75759a8 'T'
|   `-PointerType 0x561be77c3f00 'Element *'
|     `-RecordType 0x561be77c3c80 'Element'
|       `-CXXRecord 0x561be77cd940 'Element'
|-TypedefDecl 0x561be798e6c8 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x561be798e690 'Element *&'
|   `-SubstTemplateTypeParmType 0x561be798d500 'Element *' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-PointerType 0x561be77c3f00 'Element *'
|       `-RecordType 0x561be77c3c80 'Element'
|         `-CXXRecord 0x561be77cd940 'Element'
|-TypedefDecl 0x561be798e788 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x561be798e750 'Element *const &'
|   `-QualType 0x561be798d501 'Element *const' const
|     `-SubstTemplateTypeParmType 0x561be798d500 'Element *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be77c3f00 'Element *'
|         `-RecordType 0x561be77c3c80 'Element'
|           `-CXXRecord 0x561be77cd940 'Element'
|-TypedefDecl 0x561be798e818 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x561be798e7e0 'Element **'
|   `-SubstTemplateTypeParmType 0x561be798d500 'Element *' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-PointerType 0x561be77c3f00 'Element *'
|       `-RecordType 0x561be77c3c80 'Element'
|         `-CXXRecord 0x561be77cd940 'Element'
|-TypedefDecl 0x561be798e8d8 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x561be798e8a0 'Element *const *'
|   `-QualType 0x561be798d501 'Element *const' const
|     `-SubstTemplateTypeParmType 0x561be798d500 'Element *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be77c3f00 'Element *'
|         `-RecordType 0x561be77c3c80 'Element'
|           `-CXXRecord 0x561be77cd940 'Element'
|-TypedefDecl 0x561be798f4b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x561be798f460 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x561be798f440 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x561be798f3d0 'type'
|     `-SubstTemplateTypeParmType 0x561be798f190 'Element *' sugar
|       |-TemplateTypeParmType 0x561be7547a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75479f0 'T'
|       `-PointerType 0x561be77c3f00 'Element *'
|         `-RecordType 0x561be77c3c80 'Element'
|           `-CXXRecord 0x561be77cd940 'Element'
|-TypedefDecl 0x561be798f518 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x561be798e750 'Element *const &'
|   `-QualType 0x561be798d501 'Element *const' const
|     `-SubstTemplateTypeParmType 0x561be798d500 'Element *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be77c3f00 'Element *'
|         `-RecordType 0x561be77c3c80 'Element'
|           `-CXXRecord 0x561be77cd940 'Element'
|-TypedefDecl 0x561be798f570 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be798f5d8 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x561be798e7e0 'Element **'
|   `-SubstTemplateTypeParmType 0x561be798d500 'Element *' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-PointerType 0x561be77c3f00 'Element *'
|       `-RecordType 0x561be77c3c80 'Element'
|         `-CXXRecord 0x561be77cd940 'Element'
|-TypedefDecl 0x561be798f640 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x561be798e8a0 'Element *const *'
|   `-QualType 0x561be798d501 'Element *const' const
|     `-SubstTemplateTypeParmType 0x561be798d500 'Element *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be77c3f00 'Element *'
|         `-RecordType 0x561be77c3c80 'Element'
|           `-CXXRecord 0x561be77cd940 'Element'
|-EnumDecl 0x561be798f698 <line:134:5> col:5
| `-EnumConstantDecl 0x561be798f790 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561be798f770 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561be7576bc8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561be7576ba0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561be7576b80 <col:40> 'int' 1
|-CXXConstructorDecl 0x561be798f818 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561be798faa8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be798f8d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be798f970 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x561be798fd38 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x561be798fc20 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x561be798fff8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x561be798fee0 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x561be7990310 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x561be79901f0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x561be7990620 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x561be7990500 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x561be7990910 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7990758 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79907d0 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x561be7990a68 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x561be7990b48 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7990ba0 <col:30> Inherited
|-CXXMethodDecl 0x561be7990be8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x561be7990c98 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7990cf0 <col:30> Inherited
|-CXXMethodDecl 0x561be7990db8 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x561be7990e68 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7990ec0 <col:30> Inherited
|-CXXMethodDecl 0x561be7990f08 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x561be7990fb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7991010 <col:30> Inherited
|-CXXMethodDecl 0x561be7991058 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x561be7991108 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7991160 <col:30> Inherited
|-CXXMethodDecl 0x561be79911a8 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x561be7991258 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79912b0 <col:30> Inherited
|-CXXMethodDecl 0x561be79912d8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be7991388 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be7991438 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561be79915f8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79914e8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be7991560 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x561be7991748 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561be79916b8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79918f8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x561be7991800 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be79919b0 <col:20>
| `-OptimizeNoneAttr 0x561be7991a08 <col:30>
|-CXXMethodDecl 0x561be7991b28 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x561be7991a30 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be7991be0 <col:20>
| `-OptimizeNoneAttr 0x561be7991c38 <col:30>
|-CXXMethodDecl 0x561be7991cf0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561be7991c60 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7996058 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be7995fc8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7996188 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x561be79962b8 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x561be7996388 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x561be7996458 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x561be7996598 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561be7996508 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79966e0 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be7996650 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7996828 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x561be7996798 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be79968e0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561be79969e0 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561be7996950 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be7996a98 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561be7996b58 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x561be7996c58 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x561be7996dd8 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x561be7996d18 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x561be7997598 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561be7996e90 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x561be79974f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x561be79973f8 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x561be7997678 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be79977c8 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x561be7997738 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x561be7997880 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561be7997ac8 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7997940 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x561be79979b8 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x561be7997c88 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x561be7997b98 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x561be7997ed8 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x561be7997d50 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x561be7997dc8 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x561be7997f98 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be79981f8 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x561be7998100 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x561be79982c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561be79982c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be759f870 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x561be759f988 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x561be759fa28 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x561be759fa88 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x561be759fae8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x561be759fb98 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be759fea0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561be759ffb8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x561be75a0060 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x561be75a00c8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x561be75a0158 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x561be75a47f0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561be75a4c28 <col:12>
|-CXXConstructorDecl 0x561be75a48f8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561be75a4a08 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x561be75a0060 'data' 'const char *'
| | `-ImplicitCastExpr 0x561be75a8070 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x561be75a8040 <col:12> 'const char *const' lvalue .data 0x561be75a0060
| |     `-DeclRefExpr 0x561be75a8020 <col:12> 'const String::rep_t' lvalue ParmVar 0x561be75a4a08 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x561be75a00c8 'length' 'int'
| | `-ImplicitCastExpr 0x561be75a8100 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x561be75a80d0 <col:12> 'const int' lvalue .length 0x561be75a00c8
| |     `-DeclRefExpr 0x561be75a80b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561be75a4a08 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x561be75a0158 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x561be75a8190 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x561be75a8160 <col:12> 'String::memo_t *const' lvalue .memo 0x561be75a0158
| |     `-DeclRefExpr 0x561be75a8140 <col:12> 'const String::rep_t' lvalue ParmVar 0x561be75a4a08 '' 'const String::rep_t &'
| `-CompoundStmt 0x561be75a81e8 <col:12>
|-CXXConstructorDecl 0x561be75a4aa8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561be75a4aa8
| `-ParmVarDecl 0x561be75a4bb8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x561be75aaf10 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561be75b4598 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561be75b46a8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x561be75b4bc0 <col:12>
|   |-BinaryOperator 0x561be75b49d8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x561be75b4990 <col:12> 'const char *' lvalue ->data 0x561be75a0060
|   | | `-CXXThisExpr 0x561be75b4980 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x561be75b49c0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x561be75b4950 <col:12> 'const char *const' lvalue .data 0x561be75a0060
|   |     `-DeclRefExpr 0x561be75b4930 <col:12> 'const String::rep_t' lvalue ParmVar 0x561be75b46a8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x561be75b4aa0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x561be75b4a58 <col:12> 'int' lvalue ->length 0x561be75a00c8
|   | | `-CXXThisExpr 0x561be75b4a48 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x561be75b4a88 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x561be75b4a18 <col:12> 'const int' lvalue .length 0x561be75a00c8
|   |     `-DeclRefExpr 0x561be75b49f8 <col:12> 'const String::rep_t' lvalue ParmVar 0x561be75b46a8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x561be75b4b68 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x561be75b4b20 <col:12> 'String::memo_t *' lvalue ->memo 0x561be75a0158
|   | | `-CXXThisExpr 0x561be75b4b10 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x561be75b4b50 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x561be75b4ae0 <col:12> 'String::memo_t *const' lvalue .memo 0x561be75a0158
|   |     `-DeclRefExpr 0x561be75b4ac0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561be75b46a8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x561be75b4bb0 <col:12>
|     `-UnaryOperator 0x561be75b4b98 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561be75b4b88 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x561be75b4718 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561be75b4718
  `-ParmVarDecl 0x561be75b4828 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be7595de0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561be7595ef8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x561be7595f88 <col:16, col:22> col:16 public
|-TypedefDecl 0x561be7595fc8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x561be725afd0 'const char *'
|   `-QualType 0x561be725a521 'const char' const
|     `-BuiltinType 0x561be725a520 'char'
|-TypedefDecl 0x561be7596050 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x561be7596020 'String::const_iterator' sugar
|   |-Typedef 0x561be7595fc8 'const_iterator'
|   `-PointerType 0x561be725afd0 'const char *'
|     `-QualType 0x561be725a521 'const char' const
|       `-BuiltinType 0x561be725a520 'char'
|-TypedefDecl 0x561be75961c0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x561be7596130 'int (String::*)() const'
|   |-RecordType 0x561be7595e70 'String'
|   | `-CXXRecord 0x561be7595de0 'String'
|   `-ParenType 0x561be75960d0 'int () const' sugar
|     `-FunctionProtoType 0x561be7578800 'int () const' const cdecl
|       `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be7596228 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x561be73b6d40 'int64_t' sugar
|   |-Typedef 0x561be72c3390 'int64_t'
|   `-TypedefType 0x561be729c630 '__int64_t' sugar
|     |-Typedef 0x561be729c208 '__int64_t'
|     `-BuiltinType 0x561be725a5a0 'long'
|-TypedefDecl 0x561be7596290 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x561be73b6c60 'uint64_t' sugar
|   |-Typedef 0x561be72c3530 'uint64_t'
|   `-TypedefType 0x561be729c6c0 '__uint64_t' sugar
|     |-Typedef 0x561be729c278 '__uint64_t'
|     `-BuiltinType 0x561be725a640 'unsigned long'
|-TypedefDecl 0x561be7596320 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x561be75962f0 'String::intmax_t' sugar
|   |-Typedef 0x561be7596228 'intmax_t'
|   `-TypedefType 0x561be73b6d40 'int64_t' sugar
|     |-Typedef 0x561be72c3390 'int64_t'
|     `-TypedefType 0x561be729c630 '__int64_t' sugar
|       |-Typedef 0x561be729c208 '__int64_t'
|       `-BuiltinType 0x561be725a5a0 'long'
|-TypedefDecl 0x561be75963b0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x561be7596380 'String::uintmax_t' sugar
|   |-Typedef 0x561be7596290 'uintmax_t'
|   `-TypedefType 0x561be73b6c60 'uint64_t' sugar
|     |-Typedef 0x561be72c3530 'uint64_t'
|     `-TypedefType 0x561be729c6c0 '__uint64_t' sugar
|       |-Typedef 0x561be729c278 '__uint64_t'
|       `-BuiltinType 0x561be725a640 'unsigned long'
|-CXXConstructorDecl 0x561be7596470 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x561be7596618 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x561be7596558 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x561be75967c8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x561be7596708 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x561be7596920 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x561be7596890 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x561be7596b38 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x561be75969e8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x561be7596a68 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x561be7596d58 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x561be7596c08 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x561be7596c88 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x561be7596f78 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x561be7596e28 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x561be7596ea8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x561be7597198 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x561be7597048 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x561be75970c8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x561be7597328 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x561be7597260 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x561be75974a8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x561be75973e8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x561be7597638 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x561be7597570 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x561be7597790 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x561be7597700 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x561be7597918 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x561be7597858 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x561be7597a70 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x561be75979e0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x561be7597bf8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x561be7597b38 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x561be7597d88 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x561be7597cc0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x561be7597f18 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x561be7597e50 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x561be75980a8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x561be7597fe0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x561be75981a0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x561be75982c8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x561be7598448 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x561be7598380 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x561be7598598 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x561be7598508 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x561be7598640 <col:63> "" ""
|-CXXMethodDecl 0x561be7598788 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x561be75986c8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x561be7598998 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x561be7598848 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x561be75988c8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x561be7598bb8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x561be7598a60 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x561be7598ae0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x561be7598e98 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x561be7598c78 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x561be7598cf8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x561be75a42c0 <col:55> 'int' 10
| `-ParmVarDecl 0x561be7598d70 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561be75a42e0 <col:76> 'bool' true
|-CXXMethodDecl 0x561be7599178 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x561be7598f60 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x561be7598fe0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x561be75a42f0 <col:56> 'int' 10
| `-ParmVarDecl 0x561be7599058 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561be75a4310 <col:77> 'bool' true
|-CXXMethodDecl 0x561be7599280 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x561be7599348 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x561be7599410 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x561be75994b0 <col:20>
| `-OptimizeNoneAttr 0x561be7599508 <col:30>
|-CXXConversionDecl 0x561be75995f8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x561be75996c8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x561be7599788 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x561be7599878 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x561be7599938 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x561be7599ab8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x561be75999f0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x561be7599c08 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x561be7599b78 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x561be7599cf8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x561be7599db8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x561be759a008 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x561be7599e70 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x561be7599ef0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x561be759a268 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x561be759a0d0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x561be759a150 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x561be759a338 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x561be759a548 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x561be759a3f0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x561be759a470 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x561be759a768 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x561be759a610 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x561be759a690 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x561be759a8f8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x561be759a830 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x561be759a9e8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x561be759ab58 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x561be759aa98 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x561be759ad68 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x561be759ac18 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x561be759ac98 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x561be759af80 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x561be759ae28 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x561be759aea0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x561be759b110 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x561be759b040 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x561be759b330 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x561be759b1d0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x561be759b250 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x561be759b480 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x561be759b3f0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x561be759b658 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x561be759b540 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x561be759b5c0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x561be759b7a8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x561be759b718 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x561be759c9f0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x561be759b860 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x561be759c910 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x561be75a4320 <col:39> 'int' 0
|-CXXMethodDecl 0x561be759cc10 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x561be759cab0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x561be759cb30 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x561be75a4340 <col:48> 'int' 0
|-CXXMethodDecl 0x561be759cdf0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x561be759ccd0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x561be759cd50 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x561be75a4360 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x561be759cec0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x561be759cf80 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x561be759d040 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x561be759d100 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x561be759d1c0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x561be759d368 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x561be759d270 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x561be759d4e8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x561be759d420 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x561be759d668 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x561be759d5a8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x561be759d7e8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x561be759d720 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x561be759d930 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x561be759d8a0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x561be759da80 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x561be759d9f0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x561be759dc58 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x561be759db40 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x561be759dbc0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x561be759de38 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x561be759dd20 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x561be759dda0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x561be759df88 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x561be759def8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x561be759e198 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x561be759e048 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x561be759e0c8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x561be759e2f8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x561be759e260 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x561be759e450 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x561be759e3b8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x561be759e4f8 <col:57> "" ""
|-CXXMethodDecl 0x561be759e608 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x561be759e578 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x561be759e758 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x561be759e6c8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x561be759e8d8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x561be759e810 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x561be759e9a0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x561be759ea60 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x561be759eb20 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x561be759ebc0 <col:49> "" ""
|-CXXMethodDecl 0x561be759ec50 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x561be759ed10 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x561be759ee00 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x561be759eec8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x561be759ef88 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x561be759f048 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x561be759f140 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x561be759f208 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x561be759f2d0 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x561be759f4a8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x561be759f388 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x561be759f408 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x561be759f6d0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x561be759f570 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x561be759f5f0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x561be759f7e0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x561be759f848 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x561be759f870 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561be759f988 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x561be759fa28 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x561be759fa88 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x561be759fae8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x561be759fb98 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x561be759fc00 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x561be759fe38 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x561be759fe88 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be759fe18 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x561be759fd28 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x561be759fcd0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x561be759fd10 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x561be759fcf0 <col:32> 'int' 8
|-CXXRecordDecl 0x561be759fea0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561be759ffb8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x561be75a0060 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x561be75a00c8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x561be75a0158 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x561be75a47f0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561be75a4c28 <col:12>
| |-CXXConstructorDecl 0x561be75a48f8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561be75a4a08 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x561be75a0060 'data' 'const char *'
| | | `-ImplicitCastExpr 0x561be75a8070 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x561be75a8040 <col:12> 'const char *const' lvalue .data 0x561be75a0060
| | |     `-DeclRefExpr 0x561be75a8020 <col:12> 'const String::rep_t' lvalue ParmVar 0x561be75a4a08 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x561be75a00c8 'length' 'int'
| | | `-ImplicitCastExpr 0x561be75a8100 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x561be75a80d0 <col:12> 'const int' lvalue .length 0x561be75a00c8
| | |     `-DeclRefExpr 0x561be75a80b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561be75a4a08 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x561be75a0158 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x561be75a8190 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x561be75a8160 <col:12> 'String::memo_t *const' lvalue .memo 0x561be75a0158
| | |     `-DeclRefExpr 0x561be75a8140 <col:12> 'const String::rep_t' lvalue ParmVar 0x561be75a4a08 '' 'const String::rep_t &'
| | `-CompoundStmt 0x561be75a81e8 <col:12>
| |-CXXConstructorDecl 0x561be75a4aa8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561be75a4aa8
| | `-ParmVarDecl 0x561be75a4bb8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x561be75aaf10 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x561be75b4598 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561be75b46a8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x561be75b4bc0 <col:12>
| |   |-BinaryOperator 0x561be75b49d8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x561be75b4990 <col:12> 'const char *' lvalue ->data 0x561be75a0060
| |   | | `-CXXThisExpr 0x561be75b4980 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x561be75b49c0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x561be75b4950 <col:12> 'const char *const' lvalue .data 0x561be75a0060
| |   |     `-DeclRefExpr 0x561be75b4930 <col:12> 'const String::rep_t' lvalue ParmVar 0x561be75b46a8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x561be75b4aa0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x561be75b4a58 <col:12> 'int' lvalue ->length 0x561be75a00c8
| |   | | `-CXXThisExpr 0x561be75b4a48 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x561be75b4a88 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x561be75b4a18 <col:12> 'const int' lvalue .length 0x561be75a00c8
| |   |     `-DeclRefExpr 0x561be75b49f8 <col:12> 'const String::rep_t' lvalue ParmVar 0x561be75b46a8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x561be75b4b68 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x561be75b4b20 <col:12> 'String::memo_t *' lvalue ->memo 0x561be75a0158
| |   | | `-CXXThisExpr 0x561be75b4b10 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x561be75b4b50 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x561be75b4ae0 <col:12> 'String::memo_t *const' lvalue .memo 0x561be75a0158
| |   |     `-DeclRefExpr 0x561be75b4ac0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561be75b46a8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x561be75b4bb0 <col:12>
| |     `-UnaryOperator 0x561be75b4b98 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x561be75b4b88 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x561be75b4718 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561be75b4718
|   `-ParmVarDecl 0x561be75b4828 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x561be75a01d0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x561be75a0418 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x561be75a0238 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x561be75a02b8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x561be75a0330 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x561be75a47b0 <col:79, line:261:5>
|   |-BinaryOperator 0x561be75a4428 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x561be75a43c0 <col:2, col:5> 'const char *' lvalue .data 0x561be75a0060
|   | | `-MemberExpr 0x561be75a4390 <col:2> 'String::rep_t' lvalue ->_r 0x561be75a01d0
|   | |   `-CXXThisExpr 0x561be75a4380 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x561be75a4410 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x561be75a43f0 <col:12> 'const char *' lvalue ParmVar 0x561be75a0238 'data' 'const char *'
|   |-BinaryOperator 0x561be75a44f0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x561be75a4488 <col:2, col:5> 'int' lvalue .length 0x561be75a00c8
|   | | `-MemberExpr 0x561be75a4458 <col:2> 'String::rep_t' lvalue ->_r 0x561be75a01d0
|   | |   `-CXXThisExpr 0x561be75a4448 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x561be75a44d8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561be75a44b8 <col:14> 'int' lvalue ParmVar 0x561be75a02b8 'length' 'int'
|   `-IfStmt 0x561be75a4798 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x561be75a4610 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x561be75a45f8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x561be75a45d8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x561be75a45b8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x561be75a4550 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x561be75a0158
|     |       | `-MemberExpr 0x561be75a4520 <col:7> 'String::rep_t' lvalue ->_r 0x561be75a01d0
|     |       |   `-CXXThisExpr 0x561be75a4510 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x561be75a45a0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x561be75a4580 <col:17> 'String::memo_t *' lvalue ParmVar 0x561be75a0330 'memo' 'String::memo_t *'
|     `-CallExpr 0x561be75a4770 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x561be75a4758 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561be75a4660 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x561be7524108 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x561be75a46c8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x561be759fa28
|         `-ImplicitCastExpr 0x561be75a46b0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x561be75a4690 <col:27> 'String::memo_t *' lvalue ParmVar 0x561be75a0330 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x561be75a06c8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x561be75a04e8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x561be75a0568 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x561be75a05e0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x561be75a01d0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x561be75a4c38 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561be75a4dc8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x561be75a4d30 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x561be75a4ca0 <col:2> '<bound member function type>' ->assign_memo 0x561be75a0418
|     | `-ImplicitCastExpr 0x561be75a4d68 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x561be75a4c90 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x561be75a4d80 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x561be75a4cd0 <col:14> 'const char *' lvalue ParmVar 0x561be75a04e8 'data' 'const char *'
|     |-ImplicitCastExpr 0x561be75a4d98 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561be75a4cf0 <col:20> 'int' lvalue ParmVar 0x561be75a0568 'length' 'int'
|     `-ImplicitCastExpr 0x561be75a4db0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x561be75a4d10 <col:28> 'String::memo_t *' lvalue ParmVar 0x561be75a05e0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x561be75a0858 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x561be75a0798 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x561be75a5020 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x561be75a4fa0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x561be75a4df0 <col:2> '<bound member function type>' ->assign_memo 0x561be75a0418
|     | `-CXXThisExpr 0x561be75a4de0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x561be75a4fd8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x561be75a4e70 <col:14, col:19> 'const char *' lvalue .data 0x561be75a0060
|     |   `-MemberExpr 0x561be75a4e40 <col:14, col:16> 'String::rep_t' lvalue ._r 0x561be75a01d0
|     |     `-DeclRefExpr 0x561be75a4e20 <col:14> 'const String' lvalue ParmVar 0x561be75a0798 'x' 'const String &'
|     |-ImplicitCastExpr 0x561be75a4ff0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x561be75a4ef0 <col:25, col:30> 'int' lvalue .length 0x561be75a00c8
|     |   `-MemberExpr 0x561be75a4ec0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x561be75a01d0
|     |     `-DeclRefExpr 0x561be75a4ea0 <col:25> 'const String' lvalue ParmVar 0x561be75a0798 'x' 'const String &'
|     `-ImplicitCastExpr 0x561be75a5008 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x561be75a4f70 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x561be75a0158
|         `-MemberExpr 0x561be75a4f40 <col:38, col:40> 'String::rep_t' lvalue ._r 0x561be75a01d0
|           `-DeclRefExpr 0x561be75a4f20 <col:38> 'const String' lvalue ParmVar 0x561be75a0798 'x' 'const String &'
|-CXXMethodDecl 0x561be75a2a20 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x561be75a59e0 <col:31, line:278:5>
|   `-IfStmt 0x561be75a59c8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x561be75a50c0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x561be75a50a8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x561be75a5078 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x561be75a0158
|     |     `-MemberExpr 0x561be75a5048 <col:6> 'String::rep_t' lvalue ->_r 0x561be75a01d0
|     |       `-CXXThisExpr 0x561be75a5038 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x561be75a59a0 <col:15, line:277:2>
|       |-ParenExpr 0x561be75a5570 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x561be75a5540 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x561be75a51d0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x561be75a51b8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x561be75a51a0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x561be75a5160 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x561be759fa28
|       |   |       `-ImplicitCastExpr 0x561be75a5148 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x561be75a5118 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x561be75a0158
|       |   |           `-MemberExpr 0x561be75a50e8 <col:27> 'String::rep_t' lvalue ->_r 0x561be75a01d0
|       |   |             `-CXXThisExpr 0x561be75a50d8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x561be75a5230 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x561be75a5210 <col:54> 'int' 0
|       |   `-CallExpr 0x561be75a54a0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x561be75a5488 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x561be75a5408 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x561be75a54e0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x561be75a5318 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x561be75a54f8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x561be75a5348 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x561be75a5510 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x561be75a5380 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x561be75a5528 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x561be75a53f0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x561be75a53d8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x561be75a53a0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x561be75a58c0 <line:274:6, line:275:22>
|       | |-CallExpr 0x561be75a5780 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x561be75a5768 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x561be75a56e0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x561be75268f0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x561be75a56b0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x561be759fa28
|       | |   `-ImplicitCastExpr 0x561be75a5698 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x561be75a5668 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x561be75a0158
|       | |       `-MemberExpr 0x561be75a5638 <col:40> 'String::rep_t' lvalue ->_r 0x561be75a01d0
|       | |         `-CXXThisExpr 0x561be75a5628 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x561be75a5880 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x561be75a5868 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x561be75a57a8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x561be75a36f8 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x561be75a58a8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x561be75a5808 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x561be75a0158
|       |       `-MemberExpr 0x561be75a57d8 <col:15> 'String::rep_t' lvalue ->_r 0x561be75a01d0
|       |         `-CXXThisExpr 0x561be75a57c8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x561be75a5980 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x561be75a5918 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x561be75a0158
|         | `-MemberExpr 0x561be75a58e8 <col:6> 'String::rep_t' lvalue ->_r 0x561be75a01d0
|         |   `-CXXThisExpr 0x561be75a58d8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x561be75a5968 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x561be75a5948 <col:16> 'int' 0
|-CXXMethodDecl 0x561be75a2cb8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x561be75a2ad8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x561be75a2b58 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x561be75a2bd0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x561be75a2d90 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x561be75a2fe0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x561be75a2e48 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x561be75a2ec8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x561be75a2f40 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x561be75a31c8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x561be75a30b0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x561be75a3130 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x561be75a32c8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x561be75a5ab8 <col:41, line:286:5>
|   `-ReturnStmt 0x561be75a5aa8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x561be75a5a78 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x561be75a5a40 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x561be75a5a28 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x561be75a5a08 <col:46> 'int' 1
|-CXXMethodDecl 0x561be75a3568 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x561be75a3380 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x561be75a3400 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x561be75a3480 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x561be75a36f8 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x561be75a3630 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x561be75a37c8 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x561be75a3998 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x561be75a3880 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x561be75a3900 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x561be75a3a58 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x561be75a3b20 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x561be75a3c28 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x561be75a3ca0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x561be75a3d18 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x561be75a3d80 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x561be75a3e80 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x561be75a3ed0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be75a3e60 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x561be75a3e40 <col:22> 'int' 14
|-CXXMethodDecl 0x561be75a40e8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x561be75a3f00 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x561be75a3f80 <col:38> col:41 'int'
| `-ParmVarDecl 0x561be75a4000 <col:43> col:46 'int'
|-FriendDecl 0x561be75a41f0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x561be75a4280 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be78f7960 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x561be78f7b38 prev 0x561be78f7960 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561be78f7bc8 <col:46, col:52> col:46 public
|-TypedefDecl 0x561be78f7bf0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be78f9550 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x561be78f9500 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x561be78f94e0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x561be78f7e08 'type'
|     `-SubstTemplateTypeParmType 0x561be78f7dd0 'String' sugar
|       |-TemplateTypeParmType 0x561be75665e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be7566590 'T'
|       `-RecordType 0x561be7595e70 'String'
|         `-CXXRecord 0x561be7595de0 'String'
|-TypedefDecl 0x561be78f9608 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x561be78f95d0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x561be78f95b0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x561be78f9550 'type'
|     `-ElaboratedType 0x561be78f9500 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x561be78f94e0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x561be78f7e08 'type'
|         `-SubstTemplateTypeParmType 0x561be78f7dd0 'String' sugar
|           |-TemplateTypeParmType 0x561be75665e0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561be7566590 'T'
|           `-RecordType 0x561be7595e70 'String'
|             `-CXXRecord 0x561be7595de0 'String'
|-CXXMethodDecl 0x561be78f9788 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x561be78f9698 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x561be78f9878 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561be78f9958 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x561be78f9c28 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x561be78f9b30 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x561be78f9e68 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x561be78f9ce0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be78f9d58 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x561be78fa038 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x561be78f9f28 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be78f9fa0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x561be78fa198 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x561be78fa268 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x561be78fa4b8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x561be78fa328 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x561be78fa3a0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x561be78fa718 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x561be78fa588 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x561be78fa600 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x561be78fa8d8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x561be78fa7e8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x561be78faa98 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x561be78fa9a0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x561be78fab50 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be78fac00 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be78fae38 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x561be78facb0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be78fad28 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x561be78fb0d8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x561be78fafe0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x561be78fb1a0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x561be78fb1f0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561be78fb240 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be77d05b0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x561be78f6608 prev 0x561be77d05b0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561be78f78d0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x561be78f7880 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x561be78f7860 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x561be78f7710 'type'
|     `-SubstTemplateTypeParmType 0x561be78f75a0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x561be753f200 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x561be753f1a8 'F'
|       `-RecordType 0x561be78f7200 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x561be78f7120 'typed_array_memory'
|-FieldDecl 0x561be78fb290 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x561be78fb2e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561be78fb318 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x561be78f66a0 'String' sugar
|   |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561be75759a8 'T'
|   `-RecordType 0x561be7595e70 'String'
|     `-CXXRecord 0x561be7595de0 'String'
|-TypedefDecl 0x561be78fb3a8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x561be78fb370 'String &'
|   `-SubstTemplateTypeParmType 0x561be78f66a0 'String' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be7595e70 'String'
|       `-CXXRecord 0x561be7595de0 'String'
|-TypedefDecl 0x561be78fb438 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x561be78fb400 'const String &'
|   `-QualType 0x561be78f66a1 'const String' const
|     `-SubstTemplateTypeParmType 0x561be78f66a0 'String' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7595e70 'String'
|         `-CXXRecord 0x561be7595de0 'String'
|-TypedefDecl 0x561be78fb4c8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x561be78fb490 'String *'
|   `-SubstTemplateTypeParmType 0x561be78f66a0 'String' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be7595e70 'String'
|       `-CXXRecord 0x561be7595de0 'String'
|-TypedefDecl 0x561be78fb558 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x561be78fb520 'const String *'
|   `-QualType 0x561be78f66a1 'const String' const
|     `-SubstTemplateTypeParmType 0x561be78f66a0 'String' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7595e70 'String'
|         `-CXXRecord 0x561be7595de0 'String'
|-TypedefDecl 0x561be78fc1b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x561be78fc160 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x561be78fc140 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x561be78fc078 'type'
|     `-LValueReferenceType 0x561be78fc040 'const String &'
|       `-QualType 0x561be78fbde1 'const String' const
|         `-SubstTemplateTypeParmType 0x561be78fbde0 'String' sugar
|           |-TemplateTypeParmType 0x561be7547310 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561be75472b8 'T'
|           `-RecordType 0x561be7595e70 'String'
|             `-CXXRecord 0x561be7595de0 'String'
|-TypedefDecl 0x561be78fc218 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x561be78fb400 'const String &'
|   `-QualType 0x561be78f66a1 'const String' const
|     `-SubstTemplateTypeParmType 0x561be78f66a0 'String' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7595e70 'String'
|         `-CXXRecord 0x561be7595de0 'String'
|-TypedefDecl 0x561be78fc270 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be78fc2d8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x561be78fb490 'String *'
|   `-SubstTemplateTypeParmType 0x561be78f66a0 'String' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be7595e70 'String'
|       `-CXXRecord 0x561be7595de0 'String'
|-TypedefDecl 0x561be78fc340 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x561be78fb520 'const String *'
|   `-QualType 0x561be78f66a1 'const String' const
|     `-SubstTemplateTypeParmType 0x561be78f66a0 'String' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7595e70 'String'
|         `-CXXRecord 0x561be7595de0 'String'
|-EnumDecl 0x561be78fc398 <line:134:5> col:5
| `-EnumConstantDecl 0x561be78fc490 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561be78fc470 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561be7576bc8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561be7576ba0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561be7576b80 <col:40> 'int' 1
|-CXXConstructorDecl 0x561be78fc518 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x561be78fc7a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x561be78fc5d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be78fc670 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x561be78fca38 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x561be78fc920 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x561be78fccf8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x561be78fcbe0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x561be78fd010 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x561be78fcef0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x561be78fd320 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x561be78fd200 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x561be78fd610 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x561be78fd458 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be78fd4d0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x561be78fd738 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x561be78ff440 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be78ff498 <col:30> Inherited
|-CXXMethodDecl 0x561be78ff4e0 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x561be78ff590 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be78ff5e8 <col:30> Inherited
|-CXXMethodDecl 0x561be78ff6a8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x561be78ff758 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be78ff7b0 <col:30> Inherited
|-CXXMethodDecl 0x561be78ff7f8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x561be78ff8a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be78ff900 <col:30> Inherited
|-CXXMethodDecl 0x561be78ff948 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x561be78ff9f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be78ffa50 <col:30> Inherited
|-CXXMethodDecl 0x561be78ffa98 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x561be78ffb48 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be78ffba0 <col:30> Inherited
|-CXXMethodDecl 0x561be78ffbc8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be78ffc78 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be78ffd28 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561be78ffee8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x561be78ffdd8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be78ffe50 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x561be7900038 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561be78fffa8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79001e8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x561be79000f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be79002a0 <col:20>
| `-OptimizeNoneAttr 0x561be79002f8 <col:30>
|-CXXMethodDecl 0x561be7900418 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x561be7900320 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be79004d0 <col:20>
| `-OptimizeNoneAttr 0x561be7900528 <col:30>
|-CXXMethodDecl 0x561be79005e0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be7900550 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7900728 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be7900698 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7900858 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x561be7900958 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x561be7900a28 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x561be7900af8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x561be7900c38 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be7900ba8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7900d80 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be7900cf0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7900ec8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x561be7900e38 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be7900f80 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561be7901080 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561be7900ff0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be7901138 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561be79011f8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x561be79012f8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x561be7901478 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x561be79013b8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x561be7901c08 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561be7901530 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x561be7901b68 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x561be7901a68 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x561be7901ce8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be7901e38 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x561be7901da8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x561be7901ef0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561be7902138 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7901fb0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x561be7902028 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x561be79022c8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x561be7902208 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x561be79024d8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x561be7902390 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x561be7902408 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x561be7902598 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x561be79027f8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x561be7902700 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x561be79028c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x561be7a81208 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be79999f0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x561be7999bc8 prev 0x561be79999f0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561be7999c58 <col:46, col:52> col:46 public
|-TypedefDecl 0x561be7999c80 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be799b850 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x561be799b800 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x561be799a130 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x561be799a030 'type'
|     `-TemplateSpecializationType 0x561be7999fc0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x561be7999ea0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x561be7999e80 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x561be7999e60 <col:24> 'unsigned long' 4
|       `-RecordType 0x561be7999fa0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x561be7999ec0 'char_array'
|-TypedefDecl 0x561be799b908 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x561be799b8d0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x561be799b8b0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x561be799b850 'type'
|     `-ElaboratedType 0x561be799b800 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x561be799a130 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x561be799a030 'type'
|         `-TemplateSpecializationType 0x561be7999fc0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x561be7999ea0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x561be7999e80 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x561be7999e60 <col:24> 'unsigned long' 4
|           `-RecordType 0x561be7999fa0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x561be7999ec0 'char_array'
|-CXXMethodDecl 0x561be799ba88 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x561be799b998 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x561be799bb78 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561be799bc58 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561be799bc58
|-CXXMethodDecl 0x561be799bf28 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x561be799be30 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x561be799c168 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x561be799bfe0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be799c058 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561be799c338 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x561be799c228 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be799c2a0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561be799c498 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x561be799c568 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x561be799c7b8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x561be799c628 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x561be799c6a0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561be799ca18 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x561be799c888 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x561be799c900 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561be799cbd8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x561be799cae8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561be799cd98 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x561be799cca0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561be799ce50 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be799cf00 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be799d138 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x561be799cfb0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be799d028 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x561be799d3d8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x561be799d2e0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x561be799d4a0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x561be799d4f0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561be799d540 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be7998610 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x561be7998818 prev 0x561be7998610 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561be7999960 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x561be7999910 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x561be79998f0 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x561be79997a0 'type'
|     `-SubstTemplateTypeParmType 0x561be79995c0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x561be753e800 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be753e7a8 'T'
|       `-RecordType 0x561be7999110 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x561be7999028 'sized_array_memory'
|-FieldDecl 0x561be799d590 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x561be799d5e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561be799d618 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x561be79988b0 'unsigned int' sugar
|   |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561be75759a8 'T'
|   `-BuiltinType 0x561be725a620 'unsigned int'
|-TypedefDecl 0x561be799d6a8 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x561be799d670 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x561be79988b0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-BuiltinType 0x561be725a620 'unsigned int'
|-TypedefDecl 0x561be799d738 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x561be799d700 'const unsigned int &'
|   `-QualType 0x561be79988b1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x561be79988b0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-BuiltinType 0x561be725a620 'unsigned int'
|-TypedefDecl 0x561be799d7c8 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x561be799d790 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x561be79988b0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-BuiltinType 0x561be725a620 'unsigned int'
|-TypedefDecl 0x561be799d858 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x561be799d820 'const unsigned int *'
|   `-QualType 0x561be79988b1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x561be79988b0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-BuiltinType 0x561be725a620 'unsigned int'
|-TypedefDecl 0x561be79a05d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x561be79a0580 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x561be79a0560 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x561be79a04f0 'type'
|     `-SubstTemplateTypeParmType 0x561be79a02b0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x561be7547a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75479f0 'T'
|       `-BuiltinType 0x561be725a620 'unsigned int'
|-TypedefDecl 0x561be79a0638 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x561be799d700 'const unsigned int &'
|   `-QualType 0x561be79988b1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x561be79988b0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-BuiltinType 0x561be725a620 'unsigned int'
|-TypedefDecl 0x561be79a0690 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be79a06f8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x561be799d790 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x561be79988b0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-BuiltinType 0x561be725a620 'unsigned int'
|-TypedefDecl 0x561be79a0760 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x561be799d820 'const unsigned int *'
|   `-QualType 0x561be79988b1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x561be79988b0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-BuiltinType 0x561be725a620 'unsigned int'
|-EnumDecl 0x561be79a07b8 <line:134:5> col:5
| `-EnumConstantDecl 0x561be79a08b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561be79a0890 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561be7576bc8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561be7576ba0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561be7576b80 <col:40> 'int' 1
|-CXXConstructorDecl 0x561be79a0938 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561be79a0b88 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79a09f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79a0a90 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x561be79a0e48 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x561be79a0d30 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x561be79a1108 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x561be79a0ff0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x561be79a1450 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x561be79a1330 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x561be79a1760 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x561be79a1640 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x561be79a1a50 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79a1898 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79a1910 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x561be79a1b78 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x561be79a1c58 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79a1cb0 <col:30> Inherited
|-CXXMethodDecl 0x561be79a1cf8 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x561be79a1da8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79a1e00 <col:30> Inherited
|-CXXMethodDecl 0x561be79a1e98 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x561be79a1f48 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79a1fa0 <col:30> Inherited
|-CXXMethodDecl 0x561be79a1fe8 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x561be79a2098 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79a20f0 <col:30> Inherited
|-CXXMethodDecl 0x561be79a2138 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x561be79a21e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79a2240 <col:30> Inherited
|-CXXMethodDecl 0x561be79a2288 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x561be79a2338 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79a2390 <col:30> Inherited
|-CXXMethodDecl 0x561be79a23b8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be79a2468 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be79a2518 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561be79a26d8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79a25c8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79a2640 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x561be79a2828 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561be79a2798 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79a29d8 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x561be79a28e0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be79a2a90 <col:20>
| `-OptimizeNoneAttr 0x561be79a2ae8 <col:30>
|-CXXMethodDecl 0x561be79a2c08 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x561be79a2b10 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be79a2cc0 <col:20>
| `-OptimizeNoneAttr 0x561be79a2d18 <col:30>
|-CXXMethodDecl 0x561be79a2dd0 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be79a2d40 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79a2f18 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be79a2e88 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79a3048 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x561be79a3178 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x561be79a3248 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x561be79a3318 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x561be79a3458 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be79a33c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79a35a0 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be79a3510 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79a36e8 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x561be79a3658 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be79a37a0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561be79a38a0 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561be79a3810 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be79a3958 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561be79a3a18 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x561be79a3b18 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x561be79a3c98 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x561be79a3bd8 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x561be79a4458 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561be79a3d50 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x561be79a43b8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x561be79a42b8 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x561be79a4538 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be79a4688 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x561be79a45f8 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x561be79a4740 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561be79a4988 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79a4800 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x561be79a4878 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x561be79a4b48 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x561be79a4a58 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x561be79a4d98 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x561be79a4c10 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x561be79a4c88 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x561be79a4e58 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be79a50b8 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x561be79a4fc0 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x561be79a5188 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561be79a5188

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be7985918 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x561be79a53e8 prev 0x561be7985918 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561be79a6400 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x561be79a63b0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x561be79a6390 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x561be79a6240 'type'
|     `-SubstTemplateTypeParmType 0x561be79995c0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x561be753e800 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be753e7a8 'T'
|       `-RecordType 0x561be7999110 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x561be7999028 'sized_array_memory'
|-FieldDecl 0x561be79a6500 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x561be79a6550 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561be79a6588 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x561be79a5480 'int' sugar
|   |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561be75759a8 'T'
|   `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be79a6618 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x561be79a65e0 'int &'
|   `-SubstTemplateTypeParmType 0x561be79a5480 'int' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be79a66a8 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x561be79a6670 'const int &'
|   `-QualType 0x561be79a5481 'const int' const
|     `-SubstTemplateTypeParmType 0x561be79a5480 'int' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be79a6738 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x561be79a6700 'int *'
|   `-SubstTemplateTypeParmType 0x561be79a5480 'int' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be79a67c8 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x561be79a6790 'const int *'
|   `-QualType 0x561be79a5481 'const int' const
|     `-SubstTemplateTypeParmType 0x561be79a5480 'int' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be79a73b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x561be79a7360 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x561be79a7340 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x561be79a72d0 'type'
|     `-SubstTemplateTypeParmType 0x561be79a7090 'int' sugar
|       |-TemplateTypeParmType 0x561be7547a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75479f0 'T'
|       `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be79a7418 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x561be79a6670 'const int &'
|   `-QualType 0x561be79a5481 'const int' const
|     `-SubstTemplateTypeParmType 0x561be79a5480 'int' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be79a7470 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be79a74d8 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x561be79a6700 'int *'
|   `-SubstTemplateTypeParmType 0x561be79a5480 'int' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be79a7540 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x561be79a6790 'const int *'
|   `-QualType 0x561be79a5481 'const int' const
|     `-SubstTemplateTypeParmType 0x561be79a5480 'int' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-BuiltinType 0x561be725a580 'int'
|-EnumDecl 0x561be79a7598 <line:134:5> col:5
| `-EnumConstantDecl 0x561be79a7690 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561be79a7670 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561be7576bc8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561be7576ba0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561be7576b80 <col:40> 'int' 1
|-CXXConstructorDecl 0x561be79a7718 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561be79a7968 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79a77d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79a7870 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x561be79a7c28 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x561be79a7b10 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x561be79a7ee8 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x561be79a7dd0 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x561be79a9dd0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x561be79a9cb0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x561be79aa0e0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x561be79a9fc0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x561be79aa3d0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79aa218 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79aa290 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x561be79aa4f8 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x561be79aa5d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79aa630 <col:30> Inherited
|-CXXMethodDecl 0x561be79aa678 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x561be79aa728 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79aa780 <col:30> Inherited
|-CXXMethodDecl 0x561be79aa848 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x561be79aa8f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79aa950 <col:30> Inherited
|-CXXMethodDecl 0x561be79aa998 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x561be79aaa48 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79aaaa0 <col:30> Inherited
|-CXXMethodDecl 0x561be79aaae8 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x561be79aab98 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79aabf0 <col:30> Inherited
|-CXXMethodDecl 0x561be79aac38 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x561be79aace8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79aad40 <col:30> Inherited
|-CXXMethodDecl 0x561be79aad68 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be79aae18 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be79aaec8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561be79ab088 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79aaf78 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79aaff0 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x561be79ab1d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561be79ab148 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79ab388 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x561be79ab290 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be79ab440 <col:20>
| `-OptimizeNoneAttr 0x561be79ab498 <col:30>
|-CXXMethodDecl 0x561be79ab5b8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x561be79ab4c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be79ab670 <col:20>
| `-OptimizeNoneAttr 0x561be79ab6c8 <col:30>
|-CXXMethodDecl 0x561be79ab780 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be79ab6f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79ab8c8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be79ab838 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79ab9f8 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x561be79abb28 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x561be79abbf8 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x561be79abcc8 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x561be79abe08 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be79abd78 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79abf50 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be79abec0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79ac098 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x561be79ac008 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be79ac150 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561be79ac250 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561be79ac1c0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be79ac308 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561be79ac3c8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x561be79ac4c8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x561be79ac648 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x561be79ac588 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x561be79ace08 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561be79ac700 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x561be79acd68 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x561be79acc68 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x561be79acee8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be79ad038 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x561be79acfa8 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x561be79ad0f0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561be79ad338 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79ad1b0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x561be79ad228 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x561be79ad4f8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x561be79ad408 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x561be79ad748 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x561be79ad5c0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x561be79ad638 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x561be79ad808 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x561be79ada68 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x561be79ad970 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x561be79adb38 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561be79adb38

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be79adc70 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x561be79add88 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x561be79ade28 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x561be79ade88 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x561be79adf20 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x561be79adf20
| `-ParmVarDecl 0x561be79ae038 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x561be79ae0d8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x561be79ae0d8
| `-ParmVarDecl 0x561be79ae1e8 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x561be79ae288 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x561be79ae288
| `-ParmVarDecl 0x561be79ae398 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x561be79ae408 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x561be79ae408
| `-ParmVarDecl 0x561be79ae518 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x561be79ae5a0 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x561be79ae5a0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be79afb30 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x561be79afd08 prev 0x561be79afb30 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561be79afd98 <col:46, col:52> col:46 public
|-TypedefDecl 0x561be79afdc0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be79b1780 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x561be79b1730 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x561be79b1710 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x561be79affd8 'type'
|     `-SubstTemplateTypeParmType 0x561be79affa0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x561be75665e0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be7566590 'T'
|       `-RecordType 0x561be79add00 'Router::element_landmark_t'
|         `-CXXRecord 0x561be79adc70 'element_landmark_t'
|-TypedefDecl 0x561be79b1838 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x561be79b1800 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x561be79b17e0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x561be79b1780 'type'
|     `-ElaboratedType 0x561be79b1730 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x561be79b1710 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x561be79affd8 'type'
|         `-SubstTemplateTypeParmType 0x561be79affa0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x561be75665e0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561be7566590 'T'
|           `-RecordType 0x561be79add00 'Router::element_landmark_t'
|             `-CXXRecord 0x561be79adc70 'element_landmark_t'
|-CXXMethodDecl 0x561be79b19b8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x561be79b18c8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x561be79b1aa8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561be79b1b88 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561be79b1b88
|-CXXMethodDecl 0x561be79b3c28 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x561be79b3b30 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x561be79b3e68 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x561be79b3ce0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be79b3d58 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561be79b4038 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x561be79b3f28 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be79b3fa0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561be79b4198 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x561be79b4268 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x561be79b44b8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x561be79b4328 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x561be79b43a0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561be79b4718 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x561be79b4588 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x561be79b4600 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561be79b48d8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x561be79b47e8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561be79b4a98 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x561be79b49a0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561be79b4b50 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be79b4c00 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be79b4e38 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x561be79b4cb0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be79b4d28 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x561be79b50d8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x561be79b4fe0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x561be79b51a0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x561be79b51f0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561be79b5240 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be79ae690 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x561be79ae898 prev 0x561be79ae690 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561be79afaa0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x561be79afa50 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x561be79afa30 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x561be79af8e0 'type'
|     `-SubstTemplateTypeParmType 0x561be79af770 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x561be753f200 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x561be753f1a8 'F'
|       `-RecordType 0x561be79af3d0 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x561be79af2f0 'typed_array_memory'
|-FieldDecl 0x561be79b5290 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x561be79b52e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561be79b5318 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x561be79ae930 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561be75759a8 'T'
|   `-RecordType 0x561be79add00 'Router::element_landmark_t'
|     `-CXXRecord 0x561be79adc70 'element_landmark_t'
|-TypedefDecl 0x561be79b53a8 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x561be79b5370 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x561be79ae930 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be79add00 'Router::element_landmark_t'
|       `-CXXRecord 0x561be79adc70 'element_landmark_t'
|-TypedefDecl 0x561be79b5438 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x561be79b5400 'const Router::element_landmark_t &'
|   `-QualType 0x561be79ae931 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x561be79ae930 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be79add00 'Router::element_landmark_t'
|         `-CXXRecord 0x561be79adc70 'element_landmark_t'
|-TypedefDecl 0x561be79b54c8 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x561be79b5490 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x561be79ae930 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be79add00 'Router::element_landmark_t'
|       `-CXXRecord 0x561be79adc70 'element_landmark_t'
|-TypedefDecl 0x561be79b5558 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x561be79b5520 'const Router::element_landmark_t *'
|   `-QualType 0x561be79ae931 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x561be79ae930 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be79add00 'Router::element_landmark_t'
|         `-CXXRecord 0x561be79adc70 'element_landmark_t'
|-TypedefDecl 0x561be79b61b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x561be79b6160 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x561be79b6140 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x561be79b6078 'type'
|     `-LValueReferenceType 0x561be79b6040 'const Router::element_landmark_t &'
|       `-QualType 0x561be79b5de1 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x561be79b5de0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x561be7547310 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561be75472b8 'T'
|           `-RecordType 0x561be79add00 'Router::element_landmark_t'
|             `-CXXRecord 0x561be79adc70 'element_landmark_t'
|-TypedefDecl 0x561be79b6218 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x561be79b5400 'const Router::element_landmark_t &'
|   `-QualType 0x561be79ae931 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x561be79ae930 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be79add00 'Router::element_landmark_t'
|         `-CXXRecord 0x561be79adc70 'element_landmark_t'
|-TypedefDecl 0x561be79b6270 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be79b62d8 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x561be79b5490 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x561be79ae930 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be79add00 'Router::element_landmark_t'
|       `-CXXRecord 0x561be79adc70 'element_landmark_t'
|-TypedefDecl 0x561be79b6340 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x561be79b5520 'const Router::element_landmark_t *'
|   `-QualType 0x561be79ae931 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x561be79ae930 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be79add00 'Router::element_landmark_t'
|         `-CXXRecord 0x561be79adc70 'element_landmark_t'
|-EnumDecl 0x561be79b6398 <line:134:5> col:5
| `-EnumConstantDecl 0x561be79b6490 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561be79b6470 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561be7576bc8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561be7576ba0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561be7576b80 <col:40> 'int' 1
|-CXXConstructorDecl 0x561be79b6518 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561be79b67a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79b65d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79b6670 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x561be79b6a68 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x561be79b6950 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x561be79b6d28 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x561be79b6c10 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x561be79b7070 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x561be79b6f50 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x561be79b7380 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x561be79b7260 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x561be79b7670 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79b74b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79b7530 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x561be79b7798 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x561be79b7878 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79b78d0 <col:30> Inherited
|-CXXMethodDecl 0x561be79b7918 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x561be79b79c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79b7a20 <col:30> Inherited
|-CXXMethodDecl 0x561be79b7ae8 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x561be79b7b98 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79b7bf0 <col:30> Inherited
|-CXXMethodDecl 0x561be79b7c38 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x561be79b7ce8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79b7d40 <col:30> Inherited
|-CXXMethodDecl 0x561be79b7d88 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x561be79b7e38 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79b7e90 <col:30> Inherited
|-CXXMethodDecl 0x561be79b7ed8 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x561be79b7f88 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79b7fe0 <col:30> Inherited
|-CXXMethodDecl 0x561be79b8008 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be79b80b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be79b8168 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561be79b8328 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79b8218 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79b8290 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x561be79b8478 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561be79b83e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79b8628 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x561be79b8530 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be79b86e0 <col:20>
| `-OptimizeNoneAttr 0x561be79b8738 <col:30>
|-CXXMethodDecl 0x561be79b8858 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x561be79b8760 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be79b8910 <col:20>
| `-OptimizeNoneAttr 0x561be79b8968 <col:30>
|-CXXMethodDecl 0x561be79b8a20 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be79b8990 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79b8b68 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be79b8ad8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79b8c98 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x561be79b8dc8 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x561be79b8e98 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x561be79b8f68 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x561be79b90a8 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be79b9018 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79b91f0 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be79b9160 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79b9338 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x561be79b92a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be79b93f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561be79b94f0 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561be79b9460 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be79b95a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561be79b9668 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x561be79b9768 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x561be79b98e8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x561be79b9828 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x561be79ba078 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561be79b99a0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x561be79b9fd8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x561be79b9ed8 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x561be79ba158 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be79ba2a8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x561be79ba218 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x561be79ba360 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561be79ba5a8 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79ba420 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x561be79ba498 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x561be79ba738 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x561be79ba678 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x561be79ba948 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x561be79ba800 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x561be79ba878 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x561be79baa08 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be79bac68 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x561be79bab70 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x561be79bad38 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561be79bad38

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be79185c0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x561be7918798 prev 0x561be79185c0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561be7918828 <col:46, col:52> col:46 public
|-TypedefDecl 0x561be7918850 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be791b460 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x561be791b410 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x561be7918d00 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x561be7918c00 'type'
|     `-TemplateSpecializationType 0x561be7918b90 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x561be7918a70 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x561be7918a50 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x561be7918a30 <col:24> 'unsigned long' 16
|       `-RecordType 0x561be7918b70 'char_array<16>'
|         `-ClassTemplateSpecialization 0x561be7918a90 'char_array'
|-TypedefDecl 0x561be791b518 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x561be791b4e0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x561be791b4c0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x561be791b460 'type'
|     `-ElaboratedType 0x561be791b410 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x561be7918d00 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x561be7918c00 'type'
|         `-TemplateSpecializationType 0x561be7918b90 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x561be7918a70 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x561be7918a50 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x561be7918a30 <col:24> 'unsigned long' 16
|           `-RecordType 0x561be7918b70 'char_array<16>'
|             `-ClassTemplateSpecialization 0x561be7918a90 'char_array'
|-CXXMethodDecl 0x561be791b698 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x561be791b5a8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x561be791b788 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561be791b868 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561be791b868
|-CXXMethodDecl 0x561be791bb38 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x561be791ba40 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x561be791bd78 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x561be791bbf0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be791bc68 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561be791bf48 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x561be791be38 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be791beb0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561be791c0a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x561be791c178 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x561be791c3c8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x561be791c238 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x561be791c2b0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561be791c628 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x561be791c498 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x561be791c510 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561be791c7e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x561be791c6f8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561be791c9a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x561be791c8b0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561be791ca60 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be791cb10 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be791cd48 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x561be791cbc0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be791cc38 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x561be791cfe8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x561be791cef0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x561be791d0b0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x561be791d100 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561be791d150 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be79bb450 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x561be79bb658 prev 0x561be79bb450 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561be79bd790 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x561be79bd740 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x561be79bd720 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x561be79bd5d0 'type'
|     `-SubstTemplateTypeParmType 0x561be7918190 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x561be753e800 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be753e7a8 'T'
|       `-RecordType 0x561be7917ce0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x561be7917bf8 'sized_array_memory'
|-FieldDecl 0x561be79bd890 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x561be79bd8e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561be79bd918 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x561be79bb6f0 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561be75759a8 'T'
|   `-RecordType 0x561be798bb00 'Router::Connection'
|     `-CXXRecord 0x561be798ba70 'Connection'
|-TypedefDecl 0x561be79bd9d8 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x561be79bd9a0 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x561be79bb6f0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be798bb00 'Router::Connection'
|       `-CXXRecord 0x561be798ba70 'Connection'
|-TypedefDecl 0x561be79bda68 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x561be79bda30 'const Router::Connection &'
|   `-QualType 0x561be79bb6f1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x561be79bb6f0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be798bb00 'Router::Connection'
|         `-CXXRecord 0x561be798ba70 'Connection'
|-TypedefDecl 0x561be79bdaf8 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x561be79bdac0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x561be79bb6f0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be798bb00 'Router::Connection'
|       `-CXXRecord 0x561be798ba70 'Connection'
|-TypedefDecl 0x561be79bdb88 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x561be79bdb50 'const Router::Connection *'
|   `-QualType 0x561be79bb6f1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x561be79bb6f0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be798bb00 'Router::Connection'
|         `-CXXRecord 0x561be798ba70 'Connection'
|-TypedefDecl 0x561be79be7e0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x561be79be790 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x561be79be770 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x561be79be6a8 'type'
|     `-LValueReferenceType 0x561be79be670 'const Router::Connection &'
|       `-QualType 0x561be79be411 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x561be79be410 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x561be7547310 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561be75472b8 'T'
|           `-RecordType 0x561be798bb00 'Router::Connection'
|             `-CXXRecord 0x561be798ba70 'Connection'
|-TypedefDecl 0x561be79be848 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x561be79bda30 'const Router::Connection &'
|   `-QualType 0x561be79bb6f1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x561be79bb6f0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be798bb00 'Router::Connection'
|         `-CXXRecord 0x561be798ba70 'Connection'
|-TypedefDecl 0x561be79be8a0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be79be908 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x561be79bdac0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x561be79bb6f0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be798bb00 'Router::Connection'
|       `-CXXRecord 0x561be798ba70 'Connection'
|-TypedefDecl 0x561be79be970 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x561be79bdb50 'const Router::Connection *'
|   `-QualType 0x561be79bb6f1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x561be79bb6f0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be798bb00 'Router::Connection'
|         `-CXXRecord 0x561be798ba70 'Connection'
|-EnumDecl 0x561be79be9c8 <line:134:5> col:5
| `-EnumConstantDecl 0x561be79beac0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561be79beaa0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561be7576bc8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561be7576ba0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561be7576b80 <col:40> 'int' 1
|-CXXConstructorDecl 0x561be79beb48 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561be79bedd8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79bec00 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79beca0 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x561be79bf098 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x561be79bef80 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x561be79bf358 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x561be79bf240 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x561be79bf6a0 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x561be79bf580 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x561be79bf9b0 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x561be79bf890 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x561be79bfca0 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79bfae8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79bfb60 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x561be79bfdf8 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x561be79bfed8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79bff30 <col:30> Inherited
|-CXXMethodDecl 0x561be79bff78 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x561be79c0028 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79c0080 <col:30> Inherited
|-CXXMethodDecl 0x561be79c0148 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x561be79c01f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79c0250 <col:30> Inherited
|-CXXMethodDecl 0x561be79c0298 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x561be79c0348 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79c03a0 <col:30> Inherited
|-CXXMethodDecl 0x561be79c03e8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x561be79c0498 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79c04f0 <col:30> Inherited
|-CXXMethodDecl 0x561be79c0538 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x561be79c05e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79c0640 <col:30> Inherited
|-CXXMethodDecl 0x561be79c0668 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be79c0718 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be79c07c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561be79c0988 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79c0878 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79c08f0 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x561be79c0ad8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561be79c0a48 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79c0c88 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x561be79c0b90 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be79c0d40 <col:20>
| `-OptimizeNoneAttr 0x561be79c0d98 <col:30>
|-CXXMethodDecl 0x561be79c0eb8 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x561be79c0dc0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be79c0f70 <col:20>
| `-OptimizeNoneAttr 0x561be79c0fc8 <col:30>
|-CXXMethodDecl 0x561be79c1080 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be79c0ff0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79c11c8 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be79c1138 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79c12f8 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x561be79c1428 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x561be79c14f8 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x561be79c15c8 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x561be79c1708 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be79c1678 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79c1850 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be79c17c0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79c1998 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x561be79c1908 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be79c1a50 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561be79c1b50 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561be79c1ac0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be79c1c08 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561be79c1cc8 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x561be79c1dc8 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x561be79c1f78 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x561be79c1e88 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x561be79c2738 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561be79c2030 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x561be79c2698 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x561be79c2598 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x561be79c2818 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be79c2968 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x561be79c28d8 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x561be79c2a20 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561be79c2c68 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79c2ae0 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x561be79c2b58 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x561be79c2e28 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x561be79c2d38 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x561be79c3078 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x561be79c2ef0 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x561be79c2f68 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x561be79c3138 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be79c3398 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x561be79c32a0 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x561be79c3468 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561be79c3468

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be79de870 prev 0x561be78cec50 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561be79de968 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x561be79de9f8 <col:22, col:28> col:22 public
|-EnumDecl 0x561be79dea20 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x561be79deb38 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x561be79deb18 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x561be79deb00 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x561be79deae0 <col:14> 'int' 999
| |-EnumConstantDecl 0x561be79debe0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x561be79debc0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x561be79deba8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x561be79deb88 <col:14> 'int' 1
| |-EnumConstantDecl 0x561be79dec70 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x561be79dec50 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x561be79dec30 <col:17> 'int' 0
| |-EnumConstantDecl 0x561be79ded00 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x561be79dece0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x561be79decc0 <col:13> 'int' 1
| |-EnumConstantDecl 0x561be79ded90 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x561be79ded70 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x561be79ded50 <col:16> 'int' 2
| |-EnumConstantDecl 0x561be79dee20 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x561be79dee00 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x561be79dede0 <col:13> 'int' 3
| |-EnumConstantDecl 0x561be79deeb0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x561be79dee90 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x561be79dee70 <col:15> 'int' 4
| |-EnumConstantDecl 0x561be79def40 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x561be79def20 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x561be79def00 <col:14> 'int' 5
| |-EnumConstantDecl 0x561be79defd0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x561be79defb0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x561be79def90 <col:12> 'int' 6
| `-EnumConstantDecl 0x561be79df060 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x561be79df040 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x561be79df020 <col:13> 'int' 7
|-VarDecl 0x561be79df0d0 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x561be79df158 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x561be79df1e0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x561be79df268 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x561be79df2f0 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x561be79df378 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x561be79df400 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x561be79df488 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x561be79df510 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x561be79df598 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x561be79df620 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x561be79df720 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x561be79e5ac8 '_nerrors' 'int'
| | `-IntegerLiteral 0x561be79e6258 <line:128:13> 'int' 0
| `-CompoundStmt 0x561be79e62c8 <col:16, line:129:5>
|-CXXDestructorDecl 0x561be79df810 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x561be79e62d8 <col:29, line:132:5>
|-CXXMethodDecl 0x561be79df9c8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x561be79df900 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561be79dfa90 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x561be79dfb78 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x561be79e6330 <col:44, line:161:5>
|   `-ReturnStmt 0x561be79e6320 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x561be79e6308 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x561be79e62e8 <col:9> 'ErrorHandler *' lvalue Var 0x561be79e5b28 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x561be79dfcb8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x561be79dfc28 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561be79dfd80 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x561be79e6390 <col:43, line:173:5>
|   `-ReturnStmt 0x561be79e6380 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x561be79e6368 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x561be79e6348 <col:9> 'ErrorHandler *' lvalue Var 0x561be79e5ba0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x561be79dfe38 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x561be79dfeb8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x561be79dffc8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x561be79dff38 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x561be79e0118 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x561be79e0088 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x561be79e0270 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x561be79e01d8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x561be79e03c8 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x561be79e0330 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x561be79e0520 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x561be79e0488 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x561be79e0730 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x561be79e05d8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x561be79e0658 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x561be79e0908 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x561be79e07f0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x561be79e0870 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x561be79e0b28 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x561be79e09c8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x561be79e0a48 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x561be79e0d08 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x561be79e0be8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x561be79e0c68 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x561be79e0ee8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x561be79e0dc8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x561be79e0e48 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x561be79e1070 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x561be79e0fa8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x561be79e1240 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x561be79e1128 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x561be79e11a0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x561be79e65e8 <col:57, line:234:5>
|   `-ReturnStmt 0x561be79e65d8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x561be79e65c0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x561be79e6568 <col:9, col:41> 'int'
|         |-MemberExpr 0x561be79e6538 <col:9> '<bound member function type>' ->xmessage 0x561be79e1070
|         | `-CXXThisExpr 0x561be79e6528 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x561be79e65a8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x561be79e6590 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x561be79e6508 <col:18, col:40> 'String' (CXXTemporary 0x561be79e6508)
|               `-CallExpr 0x561be79e64d0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x561be79e64b8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x561be79e6430 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x561be79e42f8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x561be79e6450 <col:31> 'const String' lvalue ParmVar 0x561be79e11a0 'str' 'const String &'
|                 `-DeclRefExpr 0x561be79e6470 <col:36> 'const String' lvalue ParmVar 0x561be79e1128 'anno' 'const String &'
|-CXXMethodDecl 0x561be79e1580 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x561be79e1300 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x561be79e1380 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x561be79e1450 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x561be79e6878 <col:68, line:243:5>
|   `-ReturnStmt 0x561be79e6868 <line:242:2, col:41>
|     `-ExprWithCleanups 0x561be79e6850 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x561be79e67f0 <col:9, col:41> 'int'
|         |-MemberExpr 0x561be79e67c0 <col:9> '<bound member function type>' ->xmessage 0x561be79e1240
|         | `-CXXThisExpr 0x561be79e67b0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x561be79e6688 <col:18> 'const String' lvalue ParmVar 0x561be79e1300 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x561be79e6838 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x561be79e6820 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x561be79e6790 <col:24, col:40> 'String' (CXXTemporary 0x561be79e6790)
|               `-CXXMemberCallExpr 0x561be79e6728 <col:24, col:40> 'String'
|                 |-MemberExpr 0x561be79e66b8 <col:24> '<bound member function type>' ->vformat 0x561be79e2760
|                 | `-CXXThisExpr 0x561be79e66a8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x561be79e6758 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x561be79e66e8 <col:32> 'const char *' lvalue ParmVar 0x561be79e1380 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x561be79e6770 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x561be79e6708 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x561be79e1450 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561be79e1820 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x561be79e1648 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x561be79e16c0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x561be79e1738 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x561be79e6bb8 <col:23, line:254:5>
|   `-ReturnStmt 0x561be79e6ba8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x561be79e6b90 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x561be79e6b30 <col:9, col:71> 'int'
|         |-MemberExpr 0x561be79e6b00 <col:9> '<bound member function type>' ->xmessage 0x561be79e1240
|         | `-CXXThisExpr 0x561be79e6af0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x561be79e6b78 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x561be79e6b60 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x561be79e6ab0 <col:18, col:65> 'String' (CXXTemporary 0x561be79e6ab0)
|         |     `-CallExpr 0x561be79e6a48 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x561be79e6a30 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x561be79e6918 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x561be79e42f8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x561be79e6938 <col:31> 'const String' lvalue ParmVar 0x561be79e16c0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x561be79e6a90 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x561be79e6a78 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x561be79e6a10 <col:37, col:64> 'String' (CXXTemporary 0x561be79e6a10)
|         |             `-CallExpr 0x561be79e69e0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x561be79e69c8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x561be79e6958 <col:37> 'String (const String &)' lvalue CXXMethod 0x561be79e4948 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x561be79e6978 <col:56> 'const String' lvalue ParmVar 0x561be79e1648 'landmark' 'const String &'
|         `-DeclRefExpr 0x561be79e6ad0 <col:68> 'const String' lvalue ParmVar 0x561be79e1738 'str' 'const String &'
|-CXXMethodDecl 0x561be79e1ba0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x561be79e18e8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x561be79e1960 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x561be79e19e0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x561be79e1a58 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x561be79e6e70 <col:34, line:267:5>
|   `-ReturnStmt 0x561be79e6e60 <line:266:2, col:51>
|     `-ExprWithCleanups 0x561be79e6e48 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x561be79e6de0 <col:9, col:51> 'int'
|         |-MemberExpr 0x561be79e6db0 <col:9> '<bound member function type>' ->xmessage 0x561be79e1820
|         | `-CXXThisExpr 0x561be79e6da0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x561be79e6c58 <col:18> 'const String' lvalue ParmVar 0x561be79e18e8 'landmark' 'const String &'
|         |-DeclRefExpr 0x561be79e6c78 <col:28> 'const String' lvalue ParmVar 0x561be79e1960 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x561be79e6e30 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x561be79e6e18 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x561be79e6d80 <col:34, col:50> 'String' (CXXTemporary 0x561be79e6d80)
|               `-CXXMemberCallExpr 0x561be79e6d18 <col:34, col:50> 'String'
|                 |-MemberExpr 0x561be79e6ca8 <col:34> '<bound member function type>' ->vformat 0x561be79e2760
|                 | `-CXXThisExpr 0x561be79e6c98 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x561be79e6d48 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x561be79e6cd8 <col:42> 'const char *' lvalue ParmVar 0x561be79e19e0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x561be79e6d60 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x561be79e6cf8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x561be79e1a58 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561be79e1cb0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x561be79e6ef0 <col:25, line:288:5>
|   `-ReturnStmt 0x561be79e6ee0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x561be79e6ec8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x561be79e6e98 <col:9> 'const int' lvalue ->_nerrors 0x561be79e5ac8
|         `-CXXThisExpr 0x561be79e6e88 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x561be79e1ec0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x561be79e1d68 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x561be79e1de8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x561be79e21a8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x561be79e1f88 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x561be79e2008 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x561be79e2080 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561be79e2340 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x561be79e2278 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x561be79e2588 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x561be79e2400 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x561be79e2478 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x561be79e7150 <col:58, line:357:5>
|   `-ReturnStmt 0x561be79e7140 <line:356:2, col:29>
|     `-ExprWithCleanups 0x561be79e7128 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x561be79e70f8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x561be79e70e0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x561be79e70c0 <col:9, col:29> 'String' (CXXTemporary 0x561be79e70c0)
|             `-CallExpr 0x561be79e7050 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x561be79e7038 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561be79e6fb8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x561be79e21a8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x561be79e6f58 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x561be79e7088 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x561be79e6f78 <col:21> 'const char *' lvalue ParmVar 0x561be79e2400 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x561be79e70a0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x561be79e6f98 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x561be79e2478 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561be79e2760 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x561be79e2650 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x561be79e26c8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561be79e28b8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x561be79e2828 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x561be79e2a00 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x561be79e2970 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x561be79e2ca0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x561be79e2ab8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x561be79e2b38 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x561be79e2bb0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x561be79e2e00 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x561be79e2d70 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x561be79e7268 <col:37, line:441:5>
|   `-IfStmt 0x561be79e7250 <line:439:2, line:440:8>
|     |-BinaryOperator 0x561be79e71d8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x561be79e71a8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x561be79e7168 <col:6> 'int' lvalue ParmVar 0x561be79e2d70 'level' 'int'
|     | `-ImplicitCastExpr 0x561be79e71c0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x561be79e7188 <col:15> 'ErrorHandler::Level' EnumConstant 0x561be79dee20 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x561be79e7238 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x561be79e7208 <col:8> 'int' lvalue ->_nerrors 0x561be79e5ac8
|         `-CXXThisExpr 0x561be79e71f8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x561be79e2ec8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x561be79e7300 <col:26, line:448:5>
|   `-BinaryOperator 0x561be79e72e0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x561be79e7290 <col:2> 'int' lvalue ->_nerrors 0x561be79e5ac8
|     | `-CXXThisExpr 0x561be79e7280 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x561be79e72c0 <col:13> 'int' 0
|-CXXMethodDecl 0x561be79e40f0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x561be79e3fe0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x561be79e4058 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x561be79e42f8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x561be79e41b0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x561be79e4228 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x561be79e45a8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x561be79e43b8 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x561be79e4438 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x561be79e44b8 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x561be79e4660 <col:59> 0 0
|-CXXMethodDecl 0x561be79e47f8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x561be79e46d8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x561be79e4758 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x561be79e7970 <col:70, line:534:5>
|   |-DeclStmt 0x561be79e7470 <line:528:2, col:20>
|   | |-VarDecl 0x561be79e7328 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x561be79e7390 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x561be79e73c8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x561be79e7430 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x561be79e7540 <line:529:2, col:23>
|   | `-VarDecl 0x561be79e74a0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x561be79e7528 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x561be79e7508 <col:18> 'const char *' lvalue ParmVar 0x561be79e46d8 'begin' 'const char *'
|   |-DoStmt 0x561be79e7908 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x561be79e7838 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x561be79e7820 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x561be79e7800 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x561be79e7558 <col:6> 'const char *' lvalue Var 0x561be79e74a0 'x' 'const char *'
|   | |     `-CallExpr 0x561be79e7750 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x561be79e7738 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x561be79e76f0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x561be79e5fa0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x561be79e77b8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x561be79e77a0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x561be79e7610 <col:20, col:27> 'String' (CXXTemporary 0x561be79e7610)
|   | |       |     `-CXXTemporaryObjectExpr 0x561be79e75d8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x561be79e77d0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x561be79e7630 <col:30> 'const char *' lvalue Var 0x561be79e74a0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x561be79e77e8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x561be79e7650 <col:33> 'const char *' lvalue ParmVar 0x561be79e4758 'end' 'const char *'
|   | |       |-UnaryOperator 0x561be79e7690 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x561be79e7670 <col:39> 'String' lvalue Var 0x561be79e7328 'name' 'String'
|   | |       |-UnaryOperator 0x561be79e76c8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x561be79e76a8 <col:46> 'String' lvalue Var 0x561be79e73c8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x561be79e76e0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x561be79e78f0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x561be79e78d8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x561be79e78b8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x561be79e7888 <col:11> '<bound member function type>' .operator int (String::*)() const 0x561be75995f8
|   |         `-ImplicitCastExpr 0x561be79e7870 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x561be79e7850 <col:11> 'String' lvalue Var 0x561be79e7328 'name' 'String'
|   `-ReturnStmt 0x561be79e7960 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x561be79e7948 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x561be79e7928 <col:9> 'const char *' lvalue Var 0x561be79e74a0 'x' 'const char *'
|-CXXMethodDecl 0x561be79e4948 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x561be79e48b8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x561be79e7f78 <col:55, line:550:5>
|   `-IfStmt 0x561be79e7f50 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x561be79e7bb0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x561be79e7b98 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x561be79e7b80 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x561be79e7b60 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x561be79e7b30 <col:6> '<bound member function type>' .operator int (String::*)() const 0x561be75995f8
|     | |       `-DeclRefExpr 0x561be79e79d0 <col:6> 'const String' lvalue ParmVar 0x561be79e48b8 'x' 'const String &'
|     | `-BinaryOperator 0x561be79e7b10 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x561be79e7ae0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x561be79e7a90 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x561be79e7a78 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x561be79e7a30 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x561be75b0d00 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x561be79e79f0 <col:11> 'const String' lvalue ParmVar 0x561be79e48b8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x561be79e7a10 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x561be79e7af8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x561be79e7ac8 <col:19> 'char' 123
|     |-ReturnStmt 0x561be79e7c20 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x561be79e7bf0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x561be79e7bd0 <col:13> 'const String' lvalue ParmVar 0x561be79e48b8 'x' 'const String &'
|     `-IfStmt 0x561be79e7f28 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x561be79e7cb8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x561be79e7ca0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x561be79e7c80 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x561be79e7c50 <col:11> '<bound member function type>' .operator int (String::*)() const 0x561be75995f8
|       |       `-DeclRefExpr 0x561be79e7c30 <col:11> 'const String' lvalue ParmVar 0x561be79e48b8 'x' 'const String &'
|       |-ReturnStmt 0x561be79e7e40 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x561be79e7e28 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x561be79e7df8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x561be79e7de0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x561be79e7dc0 <col:13, col:29> 'String' (CXXTemporary 0x561be79e7dc0)
|       |         `-CallExpr 0x561be79e7d70 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x561be79e7d58 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x561be79e7cd0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x561be79e40f0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x561be79e7da0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x561be79e7cf0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x561be79e7d10 <col:28> 'const String' lvalue ParmVar 0x561be79e48b8 'x' 'const String &'
|       `-ReturnStmt 0x561be79e7f18 <line:549:6, col:20>
|         `-ExprWithCleanups 0x561be79e7f00 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x561be79e7ed0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x561be79e7eb8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x561be79e7e98 <col:13, col:20> 'String' (CXXTemporary 0x561be79e7e98)
|                 `-CXXTemporaryObjectExpr 0x561be79e7e60 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x561be79e4b10 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x561be79e4a00 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x561be79e4a78 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561be79e6248 <col:71> 'bool' false
|-CXXRecordDecl 0x561be79e4bc0 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x561be79e4eb8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x561be79e4e50 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x561be79e4df0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x561be79e4db0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x561be7595e70 'String'
|       | `-CXXRecord 0x561be7595de0 'String'
|       |-BuiltinType 0x561be725a580 'int'
|       `-DecayedType 0x561be79e1420 '__va_list_tag *' sugar
|         |-TypedefType 0x561be79e13f0 'va_list' sugar
|         | |-Typedef 0x561be747fc50 'va_list'
|         | `-TypedefType 0x561be747fc00 '__gnuc_va_list' sugar
|         |   |-Typedef 0x561be73b7838 '__gnuc_va_list'
|         |   `-TypedefType 0x561be73b77a0 '__builtin_va_list' sugar
|         |     |-Typedef 0x561be729bd38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x561be729bce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x561be725b2d0 '__va_list_tag'
|         |         `-CXXRecord 0x561be725b238 '__va_list_tag'
|         `-PointerType 0x561be7485d50 '__va_list_tag *'
|           `-RecordType 0x561be725b2d0 '__va_list_tag'
|             `-CXXRecord 0x561be725b238 '__va_list_tag'
|-EnumDecl 0x561be79e4f10 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x561be79e5010 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561be79e5570 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be79e4ff0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x561be79e4fd0 <col:16> 'int' 1
| |-EnumConstantDecl 0x561be79e50a0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561be79e5588 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be79e5080 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x561be79e5060 <col:21> 'int' 2
| |-EnumConstantDecl 0x561be79e5130 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561be79e55a0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be79e5110 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x561be79e50f0 <col:22> 'int' 4
| |-EnumConstantDecl 0x561be79e51c0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561be79e55b8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be79e51a0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x561be79e5180 <col:17> 'int' 8
| |-EnumConstantDecl 0x561be79e5250 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561be79e55d0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be79e5230 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x561be79e5210 <col:22> 'int' 16
| |-EnumConstantDecl 0x561be79e52e0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561be79e55e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be79e52c0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x561be79e52a0 <col:19> 'int' 32
| |-EnumConstantDecl 0x561be79e5370 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561be79e5600 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be79e5350 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x561be79e5330 <col:17> 'int' 64
| |-EnumConstantDecl 0x561be79e5400 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561be79e5618 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be79e53e0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x561be79e53c0 <col:14> 'int' 128
| |-EnumConstantDecl 0x561be79e5490 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561be79e5630 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be79e5470 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x561be79e5450 <col:16> 'int' 256
| `-EnumConstantDecl 0x561be79e5520 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x561be79e5648 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be79e5500 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x561be79e54e0 <col:12> 'int' 1024
|-CXXMethodDecl 0x561be79e5858 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x561be79e5670 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x561be79e5710 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x561be79e59e0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x561be79e5918 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x561be79e5a88 <line:580:3, col:10> col:3 private
|-FieldDecl 0x561be79e5ac8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x561be79e5b28 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x561be79e5ba0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x561be79e5fa0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x561be79e5c18 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x561be79e5c98 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x561be79e5d18 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x561be79e5d90 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x561be79e5e08 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x561be79e5e80 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x561be79e60c8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x561be79e60c8
| `-ParmVarDecl 0x561be79e61d8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x561be79e82d8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x561be79e82d8
  `-ParmVarDecl 0x561be79e83e8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be77c8ec0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x561be77c9010 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x561be77c9090 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x561be77c9e88 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x561be77c9e88
| `-ParmVarDecl 0x561be77c9f98 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x561be77ca038 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x561be77ca038
| `-ParmVarDecl 0x561be77ca148 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x561be77ca1b8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561be77ca1b8
|-CXXMethodDecl 0x561be77caa88 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x561be77caa88
| `-ParmVarDecl 0x561be77cab98 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x561be77cac08 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x561be77cac08
| `-ParmVarDecl 0x561be77cad18 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x561be79de408 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x561be79de4e0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be77c91c0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x561be77c92e8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x561be77c9370 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x561be77ca2e8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x561be77ca2e8
| `-ParmVarDecl 0x561be77ca3f8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x561be77ca498 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x561be77ca498
| `-ParmVarDecl 0x561be77ca5a8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x561be77ca618 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561be77ca618
|-CXXMethodDecl 0x561be77cadb8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x561be77cadb8
| `-ParmVarDecl 0x561be77caec8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x561be77caf38 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x561be77caf38
| `-ParmVarDecl 0x561be77cb048 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x561be79de540 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x561be79de620 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be77c4848 prev 0x561be77c3d50 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x561be77c4940 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x561be77c49d0 <col:17, col:23> col:17 public
|-EnumDecl 0x561be77c49f8 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x561be77c4b00 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c5850 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c4ae0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x561be77c4ac0 <col:11> 'int' 1
| |-EnumConstantDecl 0x561be77c4b90 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c5868 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c4b70 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x561be77c4b50 <col:12> 'int' 2
| |-EnumConstantDecl 0x561be77c4c20 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c5880 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c4c00 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x561be77c4be0 <col:17> 'int' 4
| |-EnumConstantDecl 0x561be77c4cb0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c5898 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c4c90 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x561be77c4c70 <col:16> 'int' 0
| |-EnumConstantDecl 0x561be77c4d40 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c58b0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c4d20 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x561be77c4d00 <col:19> 'int' 32
| |-EnumConstantDecl 0x561be77c4dd0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c58c8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c4db0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x561be77c4d90 <col:10> 'int' 64
| |-EnumConstantDecl 0x561be77c4e60 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c58e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c4e40 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x561be77c4e20 <col:19> 'int' 128
| |-EnumConstantDecl 0x561be77c4ef0 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c58f8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c4ed0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x561be77c4eb0 <col:20> 'int' 256
| |-EnumConstantDecl 0x561be77c4f80 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c5910 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c4f60 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x561be77c4f40 <col:17> 'int' 512
| |-EnumConstantDecl 0x561be77c5010 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c5928 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c4ff0 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x561be77c4fd0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x561be77c50a0 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c5940 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c5080 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x561be77c5060 <col:11> 'int' 2048
| |-EnumConstantDecl 0x561be77c5130 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c5958 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c5110 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x561be77c50f0 <col:16> 'int' 4096
| |-EnumConstantDecl 0x561be77c51c0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c5970 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c51a0 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x561be77c5180 <col:13> 'int' 8192
| |-EnumConstantDecl 0x561be77c5250 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c5988 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c5230 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x561be77c5210 <col:15> 'int' 16384
| |-EnumConstantDecl 0x561be77c5320 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x561be77c5300 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x561be77c52e0 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x561be77c52a0 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x561be77c52c0 <col:20> 'int' 26
| |-EnumConstantDecl 0x561be77c53f0 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x561be77c53d0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x561be77c53b0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x561be77c5370 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x561be77c5390 <col:27> 'int' 27
| |-EnumConstantDecl 0x561be77c5480 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c59a0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c5460 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x561be77c5440 <col:17> 'int' 28
| |-EnumConstantDecl 0x561be77c5550 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x561be77c5530 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x561be77c5510 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x561be77c54d0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x561be77c54f0 <col:18> 'int' EnumConstant 0x561be77c5480 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c55e0 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c59b8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c55c0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x561be77c55a0 <col:25> 'int' 8
| |-EnumConstantDecl 0x561be77c5670 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x561be77c59d0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c5650 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x561be77c5630 <col:26> 'int' 16
| `-EnumConstantDecl 0x561be77c5800 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x561be77c59e8 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be77c57e0 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x561be77c57c0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x561be77c5780 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x561be77c5740 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x561be77c5700 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x561be77c56c0 <col:14> 'int' EnumConstant 0x561be77c4b00 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x561be77c56e0 <col:23> 'int' EnumConstant 0x561be77c4b90 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x561be77c5720 <col:33> 'int' EnumConstant 0x561be77c4c20 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x561be77c5760 <col:48> 'int' EnumConstant 0x561be77c55e0 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x561be77c57a0 <col:71> 'int' EnumConstant 0x561be77c5670 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x561be77c5a48 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x561be77cb478 <col:39, line:64:5>
|   `-ReturnStmt 0x561be77cb468 <line:63:2, col:9>
|     `-MemberExpr 0x561be77cb438 <col:9> 'const String' lvalue ->_name 0x561be77c8e70
|       `-CXXThisExpr 0x561be77cb428 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x561be77c5b08 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x561be77cb4f8 <col:35, line:71:5>
|   `-ReturnStmt 0x561be77cb4e8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x561be77cb4d0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561be77cb4a0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561be77c9580
|         `-CXXThisExpr 0x561be77cb490 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x561be77c5c58 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x561be77c5bc0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x561be77cb678 <col:42, line:77:5>
|   `-ReturnStmt 0x561be77cb668 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x561be77cb650 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x561be77cb620 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x561be77cb580 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x561be77cb550 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x561be77cb510 <col:9> 'int' lvalue ParmVar 0x561be77c5bc0 'op' 'int'
|         | `-ImplicitCastExpr 0x561be77cb568 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x561be77cb530 <col:15> 'Handler::Flags' EnumConstant 0x561be77c4b90 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x561be77cb5b0 <col:25> 'void *const' lvalue ->_write_user_data 0x561be77c9520
|         | `-CXXThisExpr 0x561be77cb5a0 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x561be77cb5f0 <col:44> 'void *const' lvalue ->_read_user_data 0x561be77c94b8
|           `-CXXThisExpr 0x561be77cb5e0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x561be77c5d28 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x561be77cb6f8 <col:41, line:82:5>
|   `-ReturnStmt 0x561be77cb6e8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x561be77cb6d0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x561be77cb6a0 <col:9> 'void *const' lvalue ->_read_user_data 0x561be77c94b8
|         `-CXXThisExpr 0x561be77cb690 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x561be77c5df0 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x561be77cb778 <col:42, line:87:5>
|   `-ReturnStmt 0x561be77cb768 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x561be77cb750 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x561be77cb720 <col:9> 'void *const' lvalue ->_write_user_data 0x561be77c9520
|         `-CXXThisExpr 0x561be77cb710 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x561be77c5eb8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x561be77c5f58 <col:52> "" ""
|-CXXMethodDecl 0x561be77c5ff0 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x561be77c6090 <col:52> "" ""
|-CXXMethodDecl 0x561be77c6120 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x561be77cb868 <col:34, line:98:5>
|   `-ReturnStmt 0x561be77cb858 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x561be77cb840 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x561be77cb820 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x561be77cb7f0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x561be77cb7a0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561be77c9580
|         |   `-CXXThisExpr 0x561be77cb790 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x561be77cb808 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x561be77cb7d0 <col:18> 'Handler::Flags' EnumConstant 0x561be77c4b00 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x561be77c61e0 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x561be77cb958 <col:36, line:104:5>
|   `-ReturnStmt 0x561be77cb948 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x561be77cb930 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x561be77cb910 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x561be77cb8e0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x561be77cb890 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561be77c9580
|         |   `-CXXThisExpr 0x561be77cb880 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x561be77cb8f8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x561be77cb8c0 <col:18> 'Handler::Flags' EnumConstant 0x561be77c4c20 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x561be77c62a0 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x561be77cbb38 <col:38, line:113:5>
|   `-ReturnStmt 0x561be77cbb28 <line:112:2, col:49>
|     `-BinaryOperator 0x561be77cbb08 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x561be77cbab0 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x561be77cba90 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x561be77cba60 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x561be77cb980 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561be77c9580
|       |   |   `-CXXThisExpr 0x561be77cb970 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x561be77cba78 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x561be77cba40 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x561be77cba20 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x561be77cb9f0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x561be77cb9b0 <col:20> 'Handler::Flags' EnumConstant 0x561be77c4b00 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x561be77cba08 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x561be77cb9d0 <col:29> 'Handler::Flags' EnumConstant 0x561be77c4e60 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x561be77cbaf0 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x561be77cbad0 <col:49> 'Handler::Flags' EnumConstant 0x561be77c4b00 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x561be77c6360 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x561be77cbc28 <col:34, line:118:5>
|   `-ReturnStmt 0x561be77cbc18 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x561be77cbc00 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x561be77cbbe0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x561be77cbbb0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x561be77cbb60 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561be77c9580
|         |   `-CXXThisExpr 0x561be77cbb50 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x561be77cbbc8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x561be77cbb90 <col:18> 'Handler::Flags' EnumConstant 0x561be77c4b90 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x561be77c6420 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x561be77cbe08 <col:39, line:127:5>
|   `-ReturnStmt 0x561be77cbdf8 <line:126:2, col:51>
|     `-BinaryOperator 0x561be77cbdd8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x561be77cbd80 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x561be77cbd60 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x561be77cbd30 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x561be77cbc50 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561be77c9580
|       |   |   `-CXXThisExpr 0x561be77cbc40 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x561be77cbd48 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x561be77cbd10 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x561be77cbcf0 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x561be77cbcc0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x561be77cbc80 <col:20> 'Handler::Flags' EnumConstant 0x561be77c4b90 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x561be77cbcd8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x561be77cbca0 <col:30> 'Handler::Flags' EnumConstant 0x561be77c4ef0 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x561be77cbdc0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x561be77cbda0 <col:51> 'Handler::Flags' EnumConstant 0x561be77c4b90 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x561be77c64e0 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x561be77cbf10 <col:33, line:132:5>
|   `-ReturnStmt 0x561be77cbf00 <line:131:2, col:41>
|     `-BinaryOperator 0x561be77cbee0 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x561be77cbe60 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x561be77cbe30 <col:9> '<bound member function type>' ->read_visible 0x561be77c62a0
|       |   `-CXXThisExpr 0x561be77cbe20 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x561be77cbec0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x561be77cbe90 <col:27> '<bound member function type>' ->write_visible 0x561be77c6420
|           `-CXXThisExpr 0x561be77cbe80 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x561be77c65a0 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x561be77cc020 <col:51, line:138:5>
|   `-ReturnStmt 0x561be77cc010 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x561be77cbff8 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x561be77cbfd8 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x561be77cbfb8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x561be77cbf88 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x561be77cbf38 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561be77c9580
|           |   `-CXXThisExpr 0x561be77cbf28 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x561be77cbfa0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x561be77cbf68 <col:26> 'Handler::Flags' EnumConstant 0x561be77c4d40 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x561be77c6660 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x561be77cc130 <col:50, line:144:5>
|   `-ReturnStmt 0x561be77cc120 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x561be77cc108 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x561be77cc0e8 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x561be77cc0c8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x561be77cc098 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x561be77cc048 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561be77c9580
|           |   `-CXXThisExpr 0x561be77cc038 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x561be77cc0b0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x561be77cc078 <col:26> 'Handler::Flags' EnumConstant 0x561be77c4d40 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x561be77c6720 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x561be77cc220 <col:29, line:166:5>
|   `-ReturnStmt 0x561be77cc210 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x561be77cc1f8 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x561be77cc1d8 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x561be77cc1a8 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x561be77cc158 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561be77c9580
|         |   `-CXXThisExpr 0x561be77cc148 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x561be77cc1c0 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x561be77cc188 <col:18> 'Handler::Flags' EnumConstant 0x561be77c4dd0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x561be77c69a8 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x561be77c67d0 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x561be77c6848 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x561be77c68c0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561be77c6bb8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x561be77c6a70 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x561be77c6ae8 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x561be77cb360 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x561be77cb340 <col:62> 'int' 0
| `-CompoundStmt 0x561be77cc4c0 <col:71, line:188:5>
|   `-ReturnStmt 0x561be77cc4b0 <line:187:2, col:36>
|     `-ExprWithCleanups 0x561be77cc498 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x561be77cc468 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x561be77cc450 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x561be77cc430 <col:9, col:36> 'String' (CXXTemporary 0x561be77cc430)
|             `-CXXMemberCallExpr 0x561be77cc390 <col:9, col:36> 'String'
|               |-MemberExpr 0x561be77cc360 <col:9> '<bound member function type>' ->call_read 0x561be77c69a8
|               | `-CXXThisExpr 0x561be77cc350 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x561be77cc3c8 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x561be77cc2a8 <col:19> 'Element *' lvalue ParmVar 0x561be77c6a70 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x561be77cc3f8 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x561be77cc3e0 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x561be77cc310 <col:22, col:29> 'String' (CXXTemporary 0x561be77cc310)
|               |     `-CXXTemporaryObjectExpr 0x561be77cc2d8 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x561be77cc410 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x561be77cc330 <col:32> 'ErrorHandler *' lvalue ParmVar 0x561be77c6ae8 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x561be77c6e50 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x561be77c6c78 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x561be77c6cf0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x561be77c6d68 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561be77c6fd8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x561be77c6f18 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x561be77c7208 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x561be77c7090 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x561be77c7108 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x561be77c7320 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x561be77cc520 <col:50, line:225:5>
|   `-ReturnStmt 0x561be77cc510 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x561be77cc4f8 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x561be77cc4d8 <col:9> 'const Handler *' lvalue Var 0x561be77c96b0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x561be77c73c0 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x561be77c74c0 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c8050 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c74a0 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x561be77c7480 <col:11> 'Handler::Flags' EnumConstant 0x561be77c4b00 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7550 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c8068 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7530 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x561be77c7510 <col:12> 'Handler::Flags' EnumConstant 0x561be77c4b90 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c75e0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c8080 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c75c0 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x561be77c75a0 <col:17> 'Handler::Flags' EnumConstant 0x561be77c4c20 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7670 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c8098 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7650 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x561be77c7630 <col:16> 'Handler::Flags' EnumConstant 0x561be77c4cb0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7700 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c80b0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c76e0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x561be77c76c0 <col:19> 'Handler::Flags' EnumConstant 0x561be77c4d40 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7790 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c80c8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7770 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x561be77c7750 <col:10> 'Handler::Flags' EnumConstant 0x561be77c4dd0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7820 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c80e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7800 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x561be77c77e0 <col:19> 'Handler::Flags' EnumConstant 0x561be77c4e60 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c78b0 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c80f8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7890 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x561be77c7870 <col:20> 'Handler::Flags' EnumConstant 0x561be77c4ef0 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7940 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c8110 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7920 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x561be77c7900 <col:17> 'Handler::Flags' EnumConstant 0x561be77c4f80 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c79d0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c8128 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c79b0 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x561be77c7990 <col:15> 'Handler::Flags' EnumConstant 0x561be77c5010 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7a60 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c8140 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7a40 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x561be77c7a20 <col:11> 'Handler::Flags' EnumConstant 0x561be77c50a0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7af0 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c8158 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7ad0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x561be77c7ab0 <col:16> 'Handler::Flags' EnumConstant 0x561be77c5130 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7b80 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c8170 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7b60 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x561be77c7b40 <col:13> 'Handler::Flags' EnumConstant 0x561be77c51c0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7c10 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c8188 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7bf0 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x561be77c7bd0 <col:15> 'Handler::Flags' EnumConstant 0x561be77c5250 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7ca0 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c81a0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7c80 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x561be77c7c60 <col:20> 'Handler::Flags' EnumConstant 0x561be77c5320 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7d30 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c81b8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7d10 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x561be77c7cf0 <col:27> 'Handler::Flags' EnumConstant 0x561be77c53f0 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7dc0 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c81d0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7da0 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x561be77c7d80 <col:22> 'Handler::Flags' EnumConstant 0x561be77c5480 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7e50 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c81e8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7e30 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x561be77c7e10 <col:18> 'Handler::Flags' EnumConstant 0x561be77c5550 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7ee0 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c8200 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7ec0 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x561be77c7ea0 <col:25> 'Handler::Flags' EnumConstant 0x561be77c55e0 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c7f70 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x561be77c8218 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c7f50 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x561be77c7f30 <col:26> 'Handler::Flags' EnumConstant 0x561be77c5670 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x561be77c8000 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x561be77c8230 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be77c7fe0 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x561be77c7fc0 <col:20> 'Handler::Flags' EnumConstant 0x561be77c5800 'f_special' 'Handler::Flags'
|-EnumDecl 0x561be77c8248 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x561be77c8350 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561be77c88b0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c8330 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x561be77c8310 <col:12> 'Handler::Flags' EnumConstant 0x561be77c4b00 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c83e0 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561be77c88c8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c83c0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x561be77c83a0 <col:13> 'Handler::Flags' EnumConstant 0x561be77c4b90 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c8470 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561be77c88e0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c8450 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x561be77c8430 <col:15> 'Handler::Flags' EnumConstant 0x561be77c4c20 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c8500 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561be77c88f8 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c84e0 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x561be77c84c0 <col:8> 'Handler::Flags' EnumConstant 0x561be77c4dd0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c8590 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561be77c8910 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c8570 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x561be77c8550 <col:9> 'Handler::Flags' EnumConstant 0x561be77c50a0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c8620 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561be77c8928 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c8600 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x561be77c85e0 <col:14> 'Handler::Flags' EnumConstant 0x561be77c5130 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c86b0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561be77c8940 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c8690 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x561be77c8670 <col:11> 'Handler::Flags' EnumConstant 0x561be77c51c0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c8740 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561be77c8958 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c8720 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x561be77c8700 <col:13> 'Handler::Flags' EnumConstant 0x561be77c5250 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x561be77c87d0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x561be77c8970 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c87b0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x561be77c8790 <col:20> 'Handler::Flags' EnumConstant 0x561be77c5480 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x561be77c8860 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x561be77c8988 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be77c8840 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x561be77c8820 <col:16> 'Handler::Flags' EnumConstant 0x561be77c5550 'f_user0' 'Handler::Flags'
|-EnumDecl 0x561be77c89a0 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x561be77c8a60 <col:25> "" ""
| |-EnumConstantDecl 0x561be77c8b10 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x561be77c8bf0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77c8af0 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x561be77c8ad0 <col:14> 'Handler::Flags' EnumConstant 0x561be77c4cb0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x561be77c8ba0 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x561be77c8c08 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be77c8b80 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x561be77c8b60 <col:17> 'Handler::Flags' EnumConstant 0x561be77c4d40 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x561be77c8d88 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x561be77c8c30 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x561be77c8cb0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x561be77ccbe0 <col:70, line:284:5>
|   |-ParenExpr 0x561be77cca00 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x561be77cc9d0 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x561be77cc700 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561be77cc6d0 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x561be77cc678 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x561be77cc658 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x561be77cc628 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x561be77cc548 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x561be77c9580
|   |   |   |   |   `-CXXThisExpr 0x561be77cc538 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x561be77cc640 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x561be77cc608 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x561be77cc5e8 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x561be77cc5b8 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x561be77cc578 <col:34> 'Handler::Flags' EnumConstant 0x561be77c4b00 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x561be77cc5d0 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x561be77cc598 <col:43> 'Handler::Flags' EnumConstant 0x561be77c55e0 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x561be77cc6b8 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x561be77cc698 <col:69> 'Handler::Flags' EnumConstant 0x561be77c4b00 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x561be77cc760 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77cc740 <col:85> 'int' 0
|   |   `-CallExpr 0x561be77cc930 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x561be77cc918 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77cc8f8 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77cc970 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77cc7d0 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x561be77cc988 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77cc820 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x561be77cc9a0 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77cc858 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x561be77cc9b8 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77cc8e0 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77cc8c8 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77cc878 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x561be77ccbd0 <line:283:2, col:38>
|     `-ExprWithCleanups 0x561be77ccbb8 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x561be77ccb88 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x561be77ccb70 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x561be77ccb50 <col:9, col:38> 'String' (CXXTemporary 0x561be77ccb50)
|             `-CallExpr 0x561be77ccae8 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x561be77ccad0 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x561be77cca60 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x561be77c9090
|               |   `-MemberExpr 0x561be77cca30 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x561be77c9158
|               |     `-CXXThisExpr 0x561be77cca20 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x561be77ccb18 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x561be77cca90 <col:22> 'Element *' lvalue ParmVar 0x561be77c8c30 'e' 'Element *'
|               `-ImplicitCastExpr 0x561be77ccb30 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x561be77ccab0 <col:25> 'void *' lvalue ParmVar 0x561be77c8cb0 'new_user_data' 'void *'
|-AccessSpecDecl 0x561be77c8e38 <line:287:3, col:10> col:3 private
|-FieldDecl 0x561be77c8e70 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x561be77c8ec0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x561be77c9010 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x561be77c9090 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x561be77c9e88 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x561be77c9e88
| | `-ParmVarDecl 0x561be77c9f98 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x561be77ca038 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x561be77ca038
| | `-ParmVarDecl 0x561be77ca148 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x561be77ca1b8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561be77ca1b8
| |-CXXMethodDecl 0x561be77caa88 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x561be77caa88
| | `-ParmVarDecl 0x561be77cab98 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x561be77cac08 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x561be77cac08
| | `-ParmVarDecl 0x561be77cad18 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x561be79de408 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x561be79de4e0 <col:5>
|-FieldDecl 0x561be77c9158 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x561be77c91c0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x561be77c92e8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x561be77c9370 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x561be77ca2e8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x561be77ca2e8
| | `-ParmVarDecl 0x561be77ca3f8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x561be77ca498 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x561be77ca498
| | `-ParmVarDecl 0x561be77ca5a8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x561be77ca618 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561be77ca618
| |-CXXMethodDecl 0x561be77cadb8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x561be77cadb8
| | `-ParmVarDecl 0x561be77caec8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x561be77caf38 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x561be77caf38
| | `-ParmVarDecl 0x561be77cb048 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x561be79de540 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x561be79de620 <col:5>
|-FieldDecl 0x561be77c9438 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x561be77c94b8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x561be77c9520 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x561be77c9580 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x561be77c95e8 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x561be77c9650 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x561be77c96b0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x561be77c97d0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x561be77c9728 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x561be77cb410 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561be77cb3f8 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x561be77cb3e0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561be77cb3c0 <col:30, col:37> 'String' (CXXTemporary 0x561be77cb3c0)
|           `-CXXTemporaryObjectExpr 0x561be77cb388 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x561be77c9978 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x561be77c98b8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x561be77c9af8 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x561be77c9a30 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x561be77c9cb8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x561be77c9cf8 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x561be77c9cf8
| `-ParmVarDecl 0x561be77c9dd8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x561be77ca728 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x561be77ca728
| `-ParmVarDecl 0x561be77ca838 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x561be77ca8d8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x561be77ca8d8
| `-ParmVarDecl 0x561be77ca9e8 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x561be77cb0b8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x561be77cb0b8
| `-ParmVarDecl 0x561be77cb1c8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x561be77cb250 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x561be77cb250

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be79c3fd8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x561be79c41e8 prev 0x561be79c3fd8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561be79c65e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x561be79c6590 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x561be79c6570 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x561be79c6420 'type'
|     `-SubstTemplateTypeParmType 0x561be7897900 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561be753e800 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be753e7a8 'T'
|       `-RecordType 0x561be7897450 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x561be7897368 'sized_array_memory'
|-FieldDecl 0x561be79c66e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x561be79c6730 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561be79c6768 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x561be79c4280 'void *' sugar
|   |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561be75759a8 'T'
|   `-PointerType 0x561be725ace0 'void *'
|     `-BuiltinType 0x561be725a4e0 'void'
|-TypedefDecl 0x561be79c67f8 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x561be79c67c0 'void *&'
|   `-SubstTemplateTypeParmType 0x561be79c4280 'void *' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-PointerType 0x561be725ace0 'void *'
|       `-BuiltinType 0x561be725a4e0 'void'
|-TypedefDecl 0x561be79c68b8 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x561be79c6880 'void *const &'
|   `-QualType 0x561be79c4281 'void *const' const
|     `-SubstTemplateTypeParmType 0x561be79c4280 'void *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be725ace0 'void *'
|         `-BuiltinType 0x561be725a4e0 'void'
|-TypedefDecl 0x561be79c6948 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x561be79c6910 'void **'
|   `-SubstTemplateTypeParmType 0x561be79c4280 'void *' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-PointerType 0x561be725ace0 'void *'
|       `-BuiltinType 0x561be725a4e0 'void'
|-TypedefDecl 0x561be79c69d8 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x561be79c69a0 'void *const *'
|   `-QualType 0x561be79c4281 'void *const' const
|     `-SubstTemplateTypeParmType 0x561be79c4280 'void *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be725ace0 'void *'
|         `-BuiltinType 0x561be725a4e0 'void'
|-TypedefDecl 0x561be79c75c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x561be79c7570 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x561be79c7550 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x561be79c74e0 'type'
|     `-SubstTemplateTypeParmType 0x561be79c72a0 'void *' sugar
|       |-TemplateTypeParmType 0x561be7547a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75479f0 'T'
|       `-PointerType 0x561be725ace0 'void *'
|         `-BuiltinType 0x561be725a4e0 'void'
|-TypedefDecl 0x561be79c7628 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x561be79c6880 'void *const &'
|   `-QualType 0x561be79c4281 'void *const' const
|     `-SubstTemplateTypeParmType 0x561be79c4280 'void *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be725ace0 'void *'
|         `-BuiltinType 0x561be725a4e0 'void'
|-TypedefDecl 0x561be79c7680 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be79c76e8 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x561be79c6910 'void **'
|   `-SubstTemplateTypeParmType 0x561be79c4280 'void *' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-PointerType 0x561be725ace0 'void *'
|       `-BuiltinType 0x561be725a4e0 'void'
|-TypedefDecl 0x561be79c7750 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x561be79c69a0 'void *const *'
|   `-QualType 0x561be79c4281 'void *const' const
|     `-SubstTemplateTypeParmType 0x561be79c4280 'void *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be725ace0 'void *'
|         `-BuiltinType 0x561be725a4e0 'void'
|-EnumDecl 0x561be79c77a8 <line:134:5> col:5
| `-EnumConstantDecl 0x561be79c78a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561be79c7880 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561be7576bc8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561be7576ba0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561be7576b80 <col:40> 'int' 1
|-CXXConstructorDecl 0x561be79c7928 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561be79c7b78 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79c79e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79c7a80 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x561be79c7e38 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x561be79c7d20 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x561be79c80f8 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x561be79c7fe0 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x561be79c8440 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x561be79c8320 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x561be79c8750 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x561be79c8630 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x561be79c8a40 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79c8888 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79c8900 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x561be79c8b98 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x561be79c8c78 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79c8cd0 <col:30> Inherited
|-CXXMethodDecl 0x561be79c8d18 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x561be79c8dc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79c8e20 <col:30> Inherited
|-CXXMethodDecl 0x561be79c8ee8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x561be79c8f98 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79c8ff0 <col:30> Inherited
|-CXXMethodDecl 0x561be79c9038 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x561be79c90e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79c9140 <col:30> Inherited
|-CXXMethodDecl 0x561be79c9188 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x561be79c9238 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79c9290 <col:30> Inherited
|-CXXMethodDecl 0x561be79c92d8 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x561be79c9388 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79c93e0 <col:30> Inherited
|-CXXMethodDecl 0x561be79c9408 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be79c94b8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be79c9568 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561be79c9728 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79c9618 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79c9690 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x561be79c9878 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561be79c97e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79c9a28 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x561be79c9930 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be79c9ae0 <col:20>
| `-OptimizeNoneAttr 0x561be79c9b38 <col:30>
|-CXXMethodDecl 0x561be79c9c58 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x561be79c9b60 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be79c9d10 <col:20>
| `-OptimizeNoneAttr 0x561be79c9d68 <col:30>
|-CXXMethodDecl 0x561be79c9e20 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561be79c9d90 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79c9f68 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be79c9ed8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79ca098 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x561be79ca1c8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x561be79ca298 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x561be79ca368 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x561be79ca4a8 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561be79ca418 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79ca5f0 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be79ca560 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79ca738 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x561be79ca6a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be79ca7f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561be79ca8f0 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561be79ca860 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be79ca9a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561be79caa68 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x561be79cab68 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x561be79cace8 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x561be79cac28 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x561be79cb4a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561be79cada0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x561be79cb408 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x561be79cb308 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x561be79cb588 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be79cb6d8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x561be79cb648 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x561be79cb790 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561be79cb9d8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79cb850 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x561be79cb8c8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x561be79cbb98 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x561be79cbaa8 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x561be79cbde8 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x561be79cbc60 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x561be79cbcd8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x561be79cbea8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be79cc108 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x561be79cc010 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x561be79cc1d8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561be79cc1d8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be79cc3d0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x561be79cc4e8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x561be79cc578 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x561be79cc680 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x561be79cc6d0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be79cc660 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x561be79cc640 <col:27> 'int' 4096
|-FieldDecl 0x561be79cc6f8 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x561be79cc760 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x561be79cc958 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x561be79cc9e8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x561be79ccba8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x561be79cca48 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x561be79ccac0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x561be79cc6f8 'name' 'String'
| | `-CXXConstructExpr 0x561be79d92c8 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x561be79d9288 <col:20> 'const String' lvalue ParmVar 0x561be79cca48 'n' 'const String &'
| |-CXXCtorInitializer Field 0x561be79cc760 'nsig' 'int'
| | `-IntegerLiteral 0x561be79d9320 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x561be79cc958 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x561be79d9408 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x561be79cc9e8 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x561be79d93c8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x561be79d9388 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x561be79ccac0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x561be79d9698 <col:42, line:289:9>
|   `-CallExpr 0x561be79d9648 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x561be79d9630 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x561be79d9610 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x561be74c2408 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x561be79d9680 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x561be79d9558 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x561be79d9538 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x561be79d9520 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561be79d94d0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x561be79cc958
|     |     |   `-CXXThisExpr 0x561be79d94c0 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x561be79d9500 <col:25> 'int' 0
|     |-IntegerLiteral 0x561be79d9570 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x561be79d95f0 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x561be79d95d0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x561be79d95a0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x561be79cc958 non_odr_use_unevaluated
|           `-CXXThisExpr 0x561be79d9590 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x561be79ccc88 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x561be79ccc88
| `-ParmVarDecl 0x561be79ccd98 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x561be79cce38 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x561be79cce38
| `-ParmVarDecl 0x561be79ccf48 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x561be79ccfe8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x561be79ccfe8
| `-ParmVarDecl 0x561be79cd0f8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x561be79cd168 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x561be79cd168
| `-ParmVarDecl 0x561be79cd278 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x561be79cd300 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x561be79cd300

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be797f980 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561be797fa98 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x561be797fb28 <col:21, col:27> col:21 public
|-EnumDecl 0x561be797fb50 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x561be797fc68 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x561be797fc48 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x561be797fc30 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x561be797fc10 <col:32> 'int' 1
| `-EnumConstantDecl 0x561be797fd10 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x561be797fcf0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x561be797fcd8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x561be797fcb8 <col:53> 'int' 1000
|-CXXConstructorDecl 0x561be797fdc0 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x561be7980318 <col:19, col:21>
|-CXXDestructorDecl 0x561be797feb0 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x561be7980328 <col:28, col:30>
|-CXXMethodDecl 0x561be7980090 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x561be797ffa0 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x561be7980198 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x561be7980198
  `-ParmVarDecl 0x561be79802a8 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<class NameDB *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class NameInfo
         0 |   class Vector<class NameDB *> _namedb_roots
         0 |     class vector_memory<class sized_array_memory<8> > vm_
         0 |       vector_memory<class sized_array_memory<8> >::type * l_
         8 |       vector_memory::size_type n_
        12 |       vector_memory::size_type capacity_
        16 |   class Vector<class NameDB *> _namedbs
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be7a707e0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'NameDB *'
|-CXXRecordDecl 0x561be7a709e8 prev 0x561be7a707e0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561be7a71a60 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<NameDB *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x561be7a719b0 'typename array_memory<NameDB *>::type' sugar
|   `-TypedefType 0x561be7a71990 'conditional<true, sized_array_memory<8>, typed_array_memory<NameDB *> >::type' sugar
|     |-Typedef 0x561be7a71840 'type'
|     `-SubstTemplateTypeParmType 0x561be7897900 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561be753e800 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be753e7a8 'T'
|       `-RecordType 0x561be7897450 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x561be7897368 'sized_array_memory'
|-FieldDecl 0x561be7a71b60 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<NameDB *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x561be7a71bb0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561be7a71be8 <line:118:5, col:15> col:15 value_type 'NameDB *':'NameDB *'
| `-SubstTemplateTypeParmType 0x561be7a70a80 'NameDB *' sugar
|   |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561be75759a8 'T'
|   `-PointerType 0x561be7a6e970 'NameDB *'
|     `-RecordType 0x561be7a6d120 'NameDB'
|       `-CXXRecord 0x561be7a78188 'NameDB'
|-TypedefDecl 0x561be7a71ca8 <line:119:5, col:16> col:16 reference 'NameDB *&'
| `-LValueReferenceType 0x561be7a71c70 'NameDB *&'
|   `-SubstTemplateTypeParmType 0x561be7a70a80 'NameDB *' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-PointerType 0x561be7a6e970 'NameDB *'
|       `-RecordType 0x561be7a6d120 'NameDB'
|         `-CXXRecord 0x561be7a78188 'NameDB'
|-TypedefDecl 0x561be7a71d68 <line:120:5, col:22> col:22 const_reference 'NameDB *const &'
| `-LValueReferenceType 0x561be7a71d30 'NameDB *const &'
|   `-QualType 0x561be7a70a81 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x561be7a70a80 'NameDB *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be7a6e970 'NameDB *'
|         `-RecordType 0x561be7a6d120 'NameDB'
|           `-CXXRecord 0x561be7a78188 'NameDB'
|-TypedefDecl 0x561be7a71e28 <line:121:5, col:16> col:16 pointer 'NameDB **'
| `-PointerType 0x561be7a71df0 'NameDB **'
|   `-SubstTemplateTypeParmType 0x561be7a70a80 'NameDB *' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-PointerType 0x561be7a6e970 'NameDB *'
|       `-RecordType 0x561be7a6d120 'NameDB'
|         `-CXXRecord 0x561be7a78188 'NameDB'
|-TypedefDecl 0x561be7a71ee8 <line:122:5, col:22> col:22 const_pointer 'NameDB *const *'
| `-PointerType 0x561be7a71eb0 'NameDB *const *'
|   `-QualType 0x561be7a70a81 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x561be7a70a80 'NameDB *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be7a6e970 'NameDB *'
|         `-RecordType 0x561be7a6d120 'NameDB'
|           `-CXXRecord 0x561be7a78188 'NameDB'
|-TypedefDecl 0x561be7a72ac0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<NameDB *>::type':'NameDB *'
| `-ElaboratedType 0x561be7a72a70 'typename fast_argument<NameDB *>::type' sugar
|   `-TypedefType 0x561be7a72a50 'fast_argument<NameDB *, false>::type' sugar
|     |-Typedef 0x561be7a729e0 'type'
|     `-SubstTemplateTypeParmType 0x561be7a727a0 'NameDB *' sugar
|       |-TemplateTypeParmType 0x561be7547a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75479f0 'T'
|       `-PointerType 0x561be7a6e970 'NameDB *'
|         `-RecordType 0x561be7a6d120 'NameDB'
|           `-CXXRecord 0x561be7a78188 'NameDB'
|-TypedefDecl 0x561be7a72b28 <line:126:5, col:22> col:22 const_access_type 'NameDB *const &'
| `-LValueReferenceType 0x561be7a71d30 'NameDB *const &'
|   `-QualType 0x561be7a70a81 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x561be7a70a80 'NameDB *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be7a6e970 'NameDB *'
|         `-RecordType 0x561be7a6d120 'NameDB'
|           `-CXXRecord 0x561be7a78188 'NameDB'
|-TypedefDecl 0x561be7a72b80 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be7a72be8 <line:130:5, col:16> col:16 iterator 'NameDB **'
| `-PointerType 0x561be7a71df0 'NameDB **'
|   `-SubstTemplateTypeParmType 0x561be7a70a80 'NameDB *' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-PointerType 0x561be7a6e970 'NameDB *'
|       `-RecordType 0x561be7a6d120 'NameDB'
|         `-CXXRecord 0x561be7a78188 'NameDB'
|-TypedefDecl 0x561be7a72c50 <line:131:5, col:22> col:22 const_iterator 'NameDB *const *'
| `-PointerType 0x561be7a71eb0 'NameDB *const *'
|   `-QualType 0x561be7a70a81 'NameDB *const' const
|     `-SubstTemplateTypeParmType 0x561be7a70a80 'NameDB *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be7a6e970 'NameDB *'
|         `-RecordType 0x561be7a6d120 'NameDB'
|           `-CXXRecord 0x561be7a78188 'NameDB'
|-EnumDecl 0x561be7a72ca8 <line:134:5> col:5
| `-EnumConstantDecl 0x561be7a72da0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<NameDB *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561be7a72d80 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561be7576bc8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561be7576ba0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561be7576b80 <col:40> 'int' 1
|-CXXConstructorDecl 0x561be7a72e28 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561be7a730b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7a72ee0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be7a72f80 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXConstructorDecl 0x561be7a73378 <line:139:5, col:37> col:12 Vector 'void (const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x561be7a73260 <col:19, col:36> col:36 x 'const Vector<NameDB *> &'
|-CXXConstructorDecl 0x561be7a73638 <line:141:5, col:32> col:12 Vector 'void (Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x561be7a73520 <col:19, col:31> col:31 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x561be7a73980 <line:144:5, col:51> col:23 operator= 'Vector<NameDB *> &(const Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x561be7a73860 <col:33, col:50> col:50 x 'const Vector<NameDB *> &'
|-CXXMethodDecl 0x561be7a73c90 <line:146:5, col:46> col:23 operator= 'Vector<NameDB *> &(Vector<NameDB *> &&)' inline
| `-ParmVarDecl 0x561be7a73b70 <col:33, col:45> col:45 x 'Vector<NameDB *> &&'
|-CXXMethodDecl 0x561be7a73f80 <line:148:5, col:70> col:23 assign 'Vector<NameDB *> &(Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7a73dc8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be7a73e40 <col:43, col:69> col:63 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x561be7a740d8 <line:150:5, col:55> col:49 begin 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x561be7a741b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7a74210 <col:30> Inherited
|-CXXMethodDecl 0x561be7a74258 <line:151:5, col:53> col:49 end 'Vector<NameDB *>::iterator ()'
| |-NoInlineAttr 0x561be7a74308 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7a74360 <col:30> Inherited
|-CXXMethodDecl 0x561be7a74428 <line:152:5, col:63> col:55 begin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x561be7a744d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7a74530 <col:30> Inherited
|-CXXMethodDecl 0x561be7a74578 <line:153:5, col:61> col:55 end 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x561be7a74628 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7a74680 <col:30> Inherited
|-CXXMethodDecl 0x561be7a746c8 <line:154:5, col:64> col:55 cbegin 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x561be7a74778 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7a747d0 <col:30> Inherited
|-CXXMethodDecl 0x561be7a74818 <line:155:5, col:62> col:55 cend 'Vector<NameDB *>::const_iterator () const'
| |-NoInlineAttr 0x561be7a748c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7a74920 <col:30> Inherited
|-CXXMethodDecl 0x561be7a74948 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be7a749f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be7a74aa8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561be7a74c68 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7a74b58 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be7a74bd0 <col:37, col:63> col:57 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x561be7a74db8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561be7a74d28 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7a74f68 <line:163:5, col:65> col:43 operator[] 'NameDB *&(Vector::size_type)'
| |-ParmVarDecl 0x561be7a74e70 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be7a75020 <col:20>
| `-OptimizeNoneAttr 0x561be7a75078 <col:30>
|-CXXMethodDecl 0x561be7a75198 <line:164:5, col:73> col:49 operator[] 'NameDB *const &(Vector::size_type) const'
| |-ParmVarDecl 0x561be7a750a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be7a75250 <col:20>
| `-OptimizeNoneAttr 0x561be7a752a8 <col:30>
|-CXXMethodDecl 0x561be7a75360 <line:165:5, col:29> col:15 at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561be7a752d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7a754a8 <line:166:5, col:37> col:21 at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be7a75418 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7a755d8 <line:167:5, col:21> col:15 front 'NameDB *&()' inline
|-CXXMethodDecl 0x561be7a75708 <line:168:5, col:29> col:21 front 'NameDB *const &() const' inline
|-CXXMethodDecl 0x561be7a757d8 <line:169:5, col:20> col:15 back 'NameDB *&()' inline
|-CXXMethodDecl 0x561be7a758a8 <line:170:5, col:28> col:21 back 'NameDB *const &() const' inline
|-CXXMethodDecl 0x561be7a759e8 <line:172:5, col:39> col:15 unchecked_at 'NameDB *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561be7a75958 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7a75b30 <line:173:5, col:47> col:21 unchecked_at 'NameDB *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be7a75aa0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7a75c78 <line:174:5, col:59> col:15 at_u 'NameDB *&(Vector::size_type)' inline
| |-ParmVarDecl 0x561be7a75be8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be7a75d30 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561be7a75e30 <line:175:5, col:71> col:21 at_u 'NameDB *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561be7a75da0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be7a75ee8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561be7a75fa8 <line:177:5, col:20> col:15 data 'NameDB **()' inline
|-CXXMethodDecl 0x561be7a760a8 <line:178:5, col:28> col:21 data 'NameDB *const *() const' inline
|-CXXMethodDecl 0x561be7a76228 <line:180:5, col:48> col:17 push_back 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x561be7a76168 <col:27, col:47> col:47 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-FunctionTemplateDecl 0x561be7a769e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561be7a762e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<NameDB *>':'fast_argument<NameDB *, false>'
| `-CXXMethodDecl 0x561be7a76948 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (NameDB *&&)' inline
|   `-ParmVarDecl 0x561be7a76848 <col:58, col:62> col:62 v 'NameDB *&&'
|-CXXMethodDecl 0x561be7a76ac8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be7a76c18 <line:186:5, col:49> col:17 push_front 'void (Vector<NameDB *>::value_argument_type)' inline
| `-ParmVarDecl 0x561be7a76b88 <col:28, col:48> col:48 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x561be7a76cd0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561be7a76f18 <line:189:5, col:62> col:21 insert 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7a76d90 <col:28, col:37> col:37 it 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x561be7a76e08 <col:41, col:61> col:61 v 'Vector<NameDB *>::value_argument_type':'NameDB *'
|-CXXMethodDecl 0x561be7a770d8 <line:190:5, col:38> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator)' inline
| `-ParmVarDecl 0x561be7a76fe8 <col:27, col:36> col:36 it 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x561be7a77328 <line:191:5, col:49> col:21 erase 'Vector<NameDB *>::iterator (Vector<NameDB *>::iterator, Vector<NameDB *>::iterator)' inline
| |-ParmVarDecl 0x561be7a771a0 <col:27, col:36> col:36 a 'Vector<NameDB *>::iterator':'NameDB **'
| `-ParmVarDecl 0x561be7a77218 <col:39, col:48> col:48 b 'Vector<NameDB *>::iterator':'NameDB **'
|-CXXMethodDecl 0x561be7a773e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be7a77648 <line:195:5, col:34> col:17 swap 'void (Vector<NameDB *> &)' inline
| `-ParmVarDecl 0x561be7a77550 <col:22, col:33> col:33 x 'Vector<NameDB *> &'
`-CXXDestructorDecl 0x561be7a77718 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561be7a77718

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be7a6d1d0 prev 0x561be7980820 <../dummy_inc/click/nameinfo.hh:11:1, line:243:1> line:11:7 referenced class NameInfo definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561be7a6d2c8 <col:1, col:7> col:7 implicit referenced class NameInfo
|-AccessSpecDecl 0x561be7a6d358 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x561be7a6d3b8 <line:16:5, col:14> col:5 NameInfo 'void ()'
|-CXXDestructorDecl 0x561be7a6d4a8 <line:23:5, col:15> col:5 ~NameInfo 'void ()' noexcept-unevaluated 0x561be7a6d4a8
|-CXXMethodDecl 0x561be7a6d5b0 <line:29:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x561be7a6d670 <line:35:5, col:32> col:17 static_cleanup 'void ()' static
|-EnumDecl 0x561be7a6d710 <line:38:5, line:63:5> line:38:10 DBType
| |-EnumConstantDecl 0x561be7a6d810 <line:39:2, col:11> col:2 T_NONE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e550 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6d7f0 <col:11> 'int' Int: 0
| |     `-IntegerLiteral 0x561be7a6d7d0 <col:11> 'int' 0
| |-EnumConstantDecl 0x561be7a6d8a0 <line:40:2, col:19> col:2 T_SCHEDULEINFO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e568 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6d880 <col:19> 'int' Int: 1
| |     `-IntegerLiteral 0x561be7a6d860 <col:19> 'int' 1
| |-EnumConstantDecl 0x561be7a6d930 <line:41:2, col:17> col:2 T_ANNOTATION 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e580 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6d910 <col:17> 'int' Int: 2
| |     `-IntegerLiteral 0x561be7a6d8f0 <col:17> 'int' 2
| |-EnumConstantDecl 0x561be7a6d9c0 <line:42:2, col:18> col:2 T_SCRIPT_INSN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e598 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6d9a0 <col:18> 'int' Int: 3
| |     `-IntegerLiteral 0x561be7a6d980 <col:18> 'int' 3
| |-EnumConstantDecl 0x561be7a6da50 <line:43:2, col:12> col:2 T_SIGNO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e5b0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6da30 <col:12> 'int' Int: 4
| |     `-IntegerLiteral 0x561be7a6da10 <col:12> 'int' 4
| |-EnumConstantDecl 0x561be7a6dae0 <line:44:2, col:15> col:2 T_SPINLOCK 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e5c8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6dac0 <col:15> 'int' Int: 5
| |     `-IntegerLiteral 0x561be7a6daa0 <col:15> 'int' 5
| |-EnumConstantDecl 0x561be7a6db70 <line:45:2, col:20> col:2 T_ETHERNET_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e5e0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6db50 <col:20> 'int' Int: 16777217
| |     `-IntegerLiteral 0x561be7a6db30 <col:20> 'int' 16777217
| |-EnumConstantDecl 0x561be7a6dc00 <line:46:2, col:14> col:2 T_IP_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e5f8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6dbe0 <col:14> 'int' Int: 67108865
| |     `-IntegerLiteral 0x561be7a6dbc0 <col:14> 'int' 67108865
| |-EnumConstantDecl 0x561be7a6dc90 <line:47:2, col:16> col:2 T_IP_PREFIX 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e610 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6dc70 <col:16> 'int' Int: 67108866
| |     `-IntegerLiteral 0x561be7a6dc50 <col:16> 'int' 67108866
| |-EnumConstantDecl 0x561be7a6dd20 <line:48:2, col:15> col:2 T_IP_PROTO 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e628 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6dd00 <col:15> 'int' Int: 67108867
| |     `-IntegerLiteral 0x561be7a6dce0 <col:15> 'int' 67108867
| |-EnumConstantDecl 0x561be7a6ddb0 <line:49:2, col:20> col:2 T_IPFILTER_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e640 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6dd90 <col:20> 'int' Int: 67108868
| |     `-IntegerLiteral 0x561be7a6dd70 <col:20> 'int' 67108868
| |-EnumConstantDecl 0x561be7a6de40 <line:50:2, col:14> col:2 T_TCP_OPT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e658 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6de20 <col:14> 'int' Int: 67108869
| |     `-IntegerLiteral 0x561be7a6de00 <col:14> 'int' 67108869
| |-EnumConstantDecl 0x561be7a6ded0 <line:51:2, col:25> col:2 T_IPREWRITER_PATTERN 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e670 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6deb0 <col:25> 'int' Int: 67108870
| |     `-IntegerLiteral 0x561be7a6de90 <col:25> 'int' 67108870
| |-EnumConstantDecl 0x561be7a6df60 <line:52:2, col:16> col:2 T_ICMP_TYPE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e688 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6df40 <col:16> 'int' Int: 67174400
| |     `-IntegerLiteral 0x561be7a6df20 <col:16> 'int' 67174400
| |-EnumConstantDecl 0x561be7a6dff0 <line:53:2, col:16> col:2 T_ICMP_CODE 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e6a0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6dfd0 <col:16> 'int' Int: 67174656
| |     `-IntegerLiteral 0x561be7a6dfb0 <col:16> 'int' 67174656
| |-EnumConstantDecl 0x561be7a6e080 <line:54:2, col:14> col:2 T_IP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e6b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6e060 <col:14> 'int' Int: 67239936
| |     `-IntegerLiteral 0x561be7a6e040 <col:14> 'int' 67239936
| |-EnumConstantDecl 0x561be7a6e110 <line:55:2, col:15> col:2 T_TCP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e6d0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6e0f0 <col:15> 'int' Int: 67239942
| |     `-IntegerLiteral 0x561be7a6e0d0 <col:15> 'int' 67239942
| |-EnumConstantDecl 0x561be7a6e1a0 <line:56:2, col:15> col:2 T_UDP_PORT 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e6e8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6e180 <col:15> 'int' Int: 67239953
| |     `-IntegerLiteral 0x561be7a6e160 <col:15> 'int' 67239953
| |-EnumConstantDecl 0x561be7a6e230 <line:57:2, col:19> col:2 T_IP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e700 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6e210 <col:19> 'int' Int: 67305472
| |     `-IntegerLiteral 0x561be7a6e1f0 <col:19> 'int' 67305472
| |-EnumConstantDecl 0x561be7a6e2c0 <line:58:2, col:21> col:2 T_ICMP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e718 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6e2a0 <col:21> 'int' Int: 67305473
| |     `-IntegerLiteral 0x561be7a6e280 <col:21> 'int' 67305473
| |-EnumConstantDecl 0x561be7a6e350 <line:59:2, col:20> col:2 T_TCP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e730 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6e330 <col:20> 'int' Int: 67305478
| |     `-IntegerLiteral 0x561be7a6e310 <col:20> 'int' 67305478
| |-EnumConstantDecl 0x561be7a6e3e0 <line:60:2, col:20> col:2 T_UDP_FIELDNAME 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e748 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6e3c0 <col:20> 'int' Int: 67305489
| |     `-IntegerLiteral 0x561be7a6e3a0 <col:20> 'int' 67305489
| |-EnumConstantDecl 0x561be7a6e470 <line:61:2, col:15> col:2 T_IP6_ADDR 'NameInfo::DBType'
| | `-ImplicitCastExpr 0x561be7a6e760 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7a6e450 <col:15> 'int' Int: 100663297
| |     `-IntegerLiteral 0x561be7a6e430 <col:15> 'int' 100663297
| `-EnumConstantDecl 0x561be7a6e500 <line:62:2, col:17> col:2 T_IP6_PREFIX 'NameInfo::DBType'
|   `-ImplicitCastExpr 0x561be7a6e778 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be7a6e4e0 <col:17> 'int' Int: 100663298
|       `-IntegerLiteral 0x561be7a6e4c0 <col:17> 'int' 100663298
|-CXXMethodDecl 0x561be7a6ea78 <line:85:5, line:86:35> line:85:20 used getdb 'NameDB *(uint32_t, const Element *, size_t, bool)' static
| |-ParmVarDecl 0x561be7a6e7a0 <col:26, col:35> col:35 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be7a6e818 <col:41, col:56> col:56 context 'const Element *'
| |-ParmVarDecl 0x561be7a6e890 <line:86:5, col:12> col:12 value_size 'size_t':'unsigned long'
| `-ParmVarDecl 0x561be7a6e908 <col:24, col:29> col:29 create 'bool'
|-CXXMethodDecl 0x561be7a6ec98 <line:104:5, col:61> col:17 installdb 'void (NameDB *, const Element *)' static
| |-ParmVarDecl 0x561be7a6eb48 <col:27, col:35> col:35 db 'NameDB *'
| `-ParmVarDecl 0x561be7a6ebc0 <col:39, col:54> col:54 context 'const Element *'
|-CXXMethodDecl 0x561be7a6ee18 <line:112:5, col:39> col:17 used uninstalldb 'void (NameDB *)' static
| `-ParmVarDecl 0x561be7a6ed58 <col:29, col:37> col:37 db 'NameDB *'
|-CXXMethodDecl 0x561be7a6f208 <line:127:5, line:128:65> line:127:17 used query 'bool (uint32_t, const Element *, const String &, void *, size_t)' static
| |-ParmVarDecl 0x561be7a6eed0 <col:23, col:32> col:32 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be7a6ef48 <col:38, col:53> col:53 context 'const Element *'
| |-ParmVarDecl 0x561be7a6efc0 <line:128:9, col:23> col:23 name 'const String &'
| |-ParmVarDecl 0x561be7a6f040 <col:29, col:35> col:35 value_store 'void *'
| `-ParmVarDecl 0x561be7a6f0b8 <col:48, col:55> col:55 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x561be7a6f588 <line:147:5, line:148:46> line:147:17 query_int 'bool (uint32_t, const Element *, const String &, int32_t *)' static
| |-ParmVarDecl 0x561be7a6f2e0 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be7a6f358 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x561be7a6f3d0 <line:148:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x561be7a6f448 <col:26, col:35> col:35 value_store 'int32_t *'
|-CXXMethodDecl 0x561be7a6f908 <line:151:5, line:152:47> line:151:17 query_int 'bool (uint32_t, const Element *, const String &, uint32_t *)' static
| |-ParmVarDecl 0x561be7a6f658 <col:27, col:36> col:36 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be7a6f6d0 <col:42, col:57> col:57 context 'const Element *'
| |-ParmVarDecl 0x561be7a6f748 <line:152:6, col:20> col:20 name 'const String &'
| `-ParmVarDecl 0x561be7a6f7c0 <col:26, col:36> col:36 value_store 'uint32_t *'
|-CXXMethodDecl 0x561be7a6fc88 <line:167:5, line:168:43> line:167:19 used revquery 'String (uint32_t, const Element *, const void *, size_t)' static
| |-ParmVarDecl 0x561be7a6f9d8 <col:28, col:37> col:37 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be7a6fa50 <col:43, col:58> col:58 context 'const Element *'
| |-ParmVarDecl 0x561be7a6fad0 <line:168:7, col:19> col:19 value 'const void *'
| `-ParmVarDecl 0x561be7a6fb48 <col:26, col:33> col:33 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x561be7a6ff68 <line:182:5, line:183:24> line:182:26 revquery_int 'String (uint32_t, const Element *, int32_t)' static inline
| |-ParmVarDecl 0x561be7a6fd58 <col:39, col:48> col:48 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be7a6fdd0 <col:54, col:69> col:69 context 'const Element *'
| `-ParmVarDecl 0x561be7a6fe48 <line:183:11, col:19> col:19 value 'int32_t':'int'
|-CXXMethodDecl 0x561be7a70368 <line:202:5, line:203:66> line:202:24 define 'bool (uint32_t, const Element *, const String &, const void *, size_t)' static inline
| |-ParmVarDecl 0x561be7a70030 <col:31, col:40> col:40 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be7a700a8 <col:46, col:61> col:61 context 'const Element *'
| |-ParmVarDecl 0x561be7a70120 <line:203:10, col:24> col:24 name 'const String &'
| |-ParmVarDecl 0x561be7a701a0 <col:30, col:42> col:42 value 'const void *'
| `-ParmVarDecl 0x561be7a70218 <col:49, col:56> col:56 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x561be7a706e8 <line:220:5, line:221:40> line:220:24 define_int 'bool (uint32_t, const Element *, const String &, int32_t)' static inline
| |-ParmVarDecl 0x561be7a70440 <col:35, col:44> col:44 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be7a704b8 <col:50, col:65> col:65 context 'const Element *'
| |-ParmVarDecl 0x561be7a70530 <line:221:7, col:21> col:21 name 'const String &'
| `-ParmVarDecl 0x561be7a705a8 <col:27, col:35> col:35 value 'int32_t':'int'
|-AccessSpecDecl 0x561be7a707a8 <line:230:3, col:10> col:3 private
|-FieldDecl 0x561be7a77800 <line:232:5, col:22> col:22 _namedb_roots 'Vector<NameDB *>':'Vector<NameDB *>'
|-FieldDecl 0x561be7a77900 <line:233:5, col:22> col:22 _namedbs 'Vector<NameDB *>':'Vector<NameDB *>'
|-CXXMethodDecl 0x561be7a77998 <line:235:5, col:73> col:20 install_dynamic_sentinel 'NameDB *()' inline
| `-CompoundStmt 0x561be7a78170 <col:47, col:73>
|   `-ReturnStmt 0x561be7a78160 <col:49, col:67>
|     `-CStyleCastExpr 0x561be7a78138 <col:56, col:67> 'NameDB *' <BitCast>
|       `-CXXThisExpr 0x561be7a78118 <col:67> 'NameInfo *' this
|-CXXMethodDecl 0x561be7a77cf8 <line:236:5, col:87> col:13 namedb 'NameDB *(uint32_t, size_t, const String &, NameDB *)'
| |-ParmVarDecl 0x561be7a77a48 <col:20, col:29> col:29 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be7a77ac0 <col:35, col:42> col:42 size 'size_t':'unsigned long'
| |-ParmVarDecl 0x561be7a77b38 <col:48, col:62> col:62 prefix 'const String &'
| `-ParmVarDecl 0x561be7a77bb0 <col:70, col:78> col:78 installer 'NameDB *'
|-CXXConstructorDecl 0x561be7a77de8 <line:11:7> col:7 implicit NameInfo 'void (const NameInfo &)' inline default noexcept-unevaluated 0x561be7a77de8
| `-ParmVarDecl 0x561be7a77ef8 <col:7> col:7 'const NameInfo &'
`-CXXMethodDecl 0x561be7a77f98 <col:7> col:7 implicit operator= 'NameInfo &(const NameInfo &)' inline default noexcept-unevaluated 0x561be7a77f98
  `-ParmVarDecl 0x561be7a780a8 <col:7> col:7 'const NameInfo &'

Layout: <CGRecordLayout
  LLVMType:%class.NameInfo = type { %class.Vector.13, %class.Vector.13 }
  NonVirtualBaseLLVMType:%class.NameInfo = type { %class.Vector.13, %class.Vector.13 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be79808d0 prev 0x561be7963b60 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x561be79809c8 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x561be7980a58 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x561be7980ac8 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x561be7980b88 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x561be7980c48 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x561be7980d08 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x561be7980dc8 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x561be7980e68 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x561be7980fc8 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x561be7980fa8 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x561be7980f88 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x561be7980f50 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x561be7980f30 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x561be7980f68 <col:42> 'int' 1
|-CXXMethodDecl 0x561be7981038 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x561be79811a8 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x561be79810e8 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x561be79812f0 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x561be7981260 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x561be79813b8 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x561be79816e0 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x561be79817a8 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x561be7981928 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x561be7981860 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x561be79819f0 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x561be7981bf8 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x561be7981aa0 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x561be7981b20 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x561be7981d50 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x561be7981cc0 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x561be7981ea0 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x561be7981e10 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x561be7981ff0 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x561be7981f60 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x561be7982140 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x561be79820b0 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x561be7982310 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x561be7982200 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x561be7982278 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x561be7982518 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x561be79823d0 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x561be7982448 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x561be79d5d00 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x561be79d5ce0 <col:60> 'int' 0
|-CXXMethodDecl 0x561be79827a8 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x561be79825d8 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x561be7982650 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x561be79826c8 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x561be79d5d38 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x561be79d5d18 <col:76> 'int' 0
|-CXXMethodDecl 0x561be7982a48 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x561be7982870 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x561be79828e8 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x561be7982960 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x561be79d5d70 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x561be79d5d50 <col:84> 'int' 0
|-CXXMethodDecl 0x561be7982da0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x561be7982b10 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x561be7982b88 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x561be7982c08 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x561be7982ca8 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x561be7983050 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x561be7982e70 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x561be7982ef0 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x561be7982f68 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x561be79832b8 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x561be7983118 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x561be7983198 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x561be7983210 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x561be7983770 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x561be7983380 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x561be7983400 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x561be79834a8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x561be7983620 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x561be7983830 <col:115> "" ""
|-CXXMethodDecl 0x561be7983bf0 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x561be79838b0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x561be7983930 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x561be79839a8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x561be7983af0 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x561be7983cb0 <col:113> "" ""
|-CXXMethodDecl 0x561be7983e00 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x561be7983d38 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x561be7983fd0 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x561be7983ec0 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x561be7983f38 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x561be79841d8 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x561be7984090 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x561be7984108 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x561be79845d8 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x561be7984298 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x561be7984310 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x561be7984388 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x561be7984408 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x561be7984480 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561be79d5da8 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561be79d5d88 <col:137> 'int' 0
|-CXXMethodDecl 0x561be79849e8 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x561be79846b0 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x561be7984728 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x561be79847a0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x561be7984820 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x561be7984898 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561be79d5de0 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561be79d5dc0 <col:139> 'int' 0
|-CXXMethodDecl 0x561be7984e98 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x561be7984ac0 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x561be7984b38 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x561be7984bb0 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be7984c28 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x561be7984ca8 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x561be79d5e18 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x561be79d5df8 <col:133> 'int' 0
| `-ParmVarDecl 0x561be7984d28 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x561be79d5e50 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x561be79d5e30 <col:160> 'int' 0
|-CXXMethodDecl 0x561be7985230 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x561be7984f78 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x561be7984ff0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x561be7985068 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561be79850e0 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561be79d5e88 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561be79d5e68 <col:116> 'int' 0
|-EnumDecl 0x561be79852f0 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x561be79853f0 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x561be7985440 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be79853d0 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x561be79853b0 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x561be79855c0 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x561be7985468 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x561be79854e0 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x561be79857d8 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x561be7985680 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x561be7985700 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x561be7985c38 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x561be7985898 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x561be7985b20 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x561be7985dc0 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x561be7985cf8 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x561be7985f70 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x561be7985e78 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x561be7986180 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x561be7986028 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x561be79860a8 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x561be7986308 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x561be7986240 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x561be7986428 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x561be7986518 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x561be7986688 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x561be79865c8 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x561be7986810 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x561be7986740 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x561be7986a18 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x561be79868c8 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x561be7986948 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x561be7986b48 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x561be7986c38 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x561be7986cf8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x561be7986ef8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x561be7986da8 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x561be7986e20 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x561be79d5f38 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561be79d5f20 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x561be79d5f08 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561be79d5ee8 <col:58, col:65> 'String' (CXXTemporary 0x561be79d5ee8)
|           `-CXXTemporaryObjectExpr 0x561be79d5eb0 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x561be79870c8 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x561be7986fb8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x561be7987030 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x561be79d5fe8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561be79d5fd0 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x561be79d5fb8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561be79d5f98 <col:71, col:78> 'String' (CXXTemporary 0x561be79d5f98)
|           `-CXXTemporaryObjectExpr 0x561be79d5f60 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x561be7987298 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x561be7987188 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x561be7987200 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x561be79d6098 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561be79d6080 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x561be79d6068 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561be79d6048 <col:71, col:78> 'String' (CXXTemporary 0x561be79d6048)
|           `-CXXTemporaryObjectExpr 0x561be79d6010 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x561be7987468 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x561be7987358 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x561be79873d0 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x561be79d6148 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561be79d6130 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x561be79d6118 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561be79d60f8 <col:70, col:77> 'String' (CXXTemporary 0x561be79d60f8)
|           `-CXXTemporaryObjectExpr 0x561be79d60c0 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x561be79875e8 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x561be7987528 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x561be7987808 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x561be79876a0 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x561be7987718 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x561be7987908 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x561be7987908
|-CXXMethodDecl 0x561be7987a10 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x561be7987ad0 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x561be7987b90 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x561be7987c50 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x561be7987e48 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x561be7987d00 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x561be7987d78 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x561be7989f30 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x561be7987f08 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x561be7987f80 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x561be7987ff8 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x561be7989da0 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x561be7989e20 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x561be798a290 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x561be798a010 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x561be798a090 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x561be798a110 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x561be798a190 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x561be798a370 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x561be798a4b0 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x561be798a420 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x561be798a600 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x561be798a568 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561be798a808 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x561be798a6b8 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x561be798a730 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561be798a988 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x561be798a8c8 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561be798aad0 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x561be798aa40 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x561be798ad10 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x561be798ab90 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x561be798ac38 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x561be798ae98 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x561be798add0 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x561be798af40 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561be798b058 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x561be798b100 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x561be798b168 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x561be798b220 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x561be79d6170 <col:16, line:150:9>
| |-CXXConstructorDecl 0x561be798b3f8 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x561be798b2e0 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x561be798b360 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x561be798b100 'idx' 'int'
| | | `-ImplicitCastExpr 0x561be79d61c0 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x561be79d6180 <col:19> 'int' lvalue ParmVar 0x561be798b2e0 'i' 'int'
| | |-CXXCtorInitializer Field 0x561be798b168 'port' 'int'
| | | `-ImplicitCastExpr 0x561be79d6240 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x561be79d6200 <col:28> 'int' lvalue ParmVar 0x561be798b360 'p' 'int'
| | `-CompoundStmt 0x561be79d6290 <col:31, line:153:9>
| |-CXXMethodDecl 0x561be798b5d8 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x561be798b4e8 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x561be79d6490 <col:46, line:157:9>
| |   `-ReturnStmt 0x561be79d6480 <line:156:13, col:46>
| |     `-BinaryOperator 0x561be79d6460 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x561be79d6360 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x561be79d6330 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x561be79d62b0 <col:20> 'const int' lvalue ->idx 0x561be798b100
| |       | |   `-CXXThisExpr 0x561be79d62a0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x561be79d6348 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x561be79d6300 <col:27, col:29> 'const int' lvalue .idx 0x561be798b100
| |       |     `-DeclRefExpr 0x561be79d62e0 <col:27> 'const Router::Port' lvalue ParmVar 0x561be798b4e8 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x561be79d6440 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x561be79d6410 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x561be79d6390 <col:36> 'const int' lvalue ->port 0x561be798b168
| |         |   `-CXXThisExpr 0x561be79d6380 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x561be79d6428 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x561be79d63e0 <col:44, col:46> 'const int' lvalue .port 0x561be798b168
| |             `-DeclRefExpr 0x561be79d63c0 <col:44> 'const Router::Port' lvalue ParmVar 0x561be798b4e8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x561be798b720 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x561be798b690 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x561be79d6698 <col:46, line:160:9>
| |   `-ReturnStmt 0x561be79d6688 <line:159:13, col:46>
| |     `-BinaryOperator 0x561be79d6668 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x561be79d6568 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x561be79d6538 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x561be79d64b8 <col:20> 'const int' lvalue ->idx 0x561be798b100
| |       | |   `-CXXThisExpr 0x561be79d64a8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x561be79d6550 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x561be79d6508 <col:27, col:29> 'const int' lvalue .idx 0x561be798b100
| |       |     `-DeclRefExpr 0x561be79d64e8 <col:27> 'const Router::Port' lvalue ParmVar 0x561be798b690 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x561be79d6648 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x561be79d6618 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x561be79d6598 <col:36> 'const int' lvalue ->port 0x561be798b168
| |         |   `-CXXThisExpr 0x561be79d6588 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x561be79d6630 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x561be79d65e8 <col:44, col:46> 'const int' lvalue .port 0x561be798b168
| |             `-DeclRefExpr 0x561be79d65c8 <col:44> 'const Router::Port' lvalue ParmVar 0x561be798b690 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x561be798b868 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x561be798b7d8 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x561be79d69c0 <col:45, line:163:9>
| |   `-ReturnStmt 0x561be79d69b0 <line:162:13, col:65>
| |     `-BinaryOperator 0x561be79d6990 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x561be79d6770 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x561be79d6740 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x561be79d66c0 <col:20> 'const int' lvalue ->idx 0x561be798b100
| |       | |   `-CXXThisExpr 0x561be79d66b0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x561be79d6758 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x561be79d6710 <col:26, col:28> 'const int' lvalue .idx 0x561be798b100
| |       |     `-DeclRefExpr 0x561be79d66f0 <col:26> 'const Router::Port' lvalue ParmVar 0x561be798b7d8 'x' 'const Router::Port &'
| |       `-ParenExpr 0x561be79d6970 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x561be79d6950 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x561be79d6850 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x561be79d6820 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x561be79d67a0 <col:36> 'const int' lvalue ->idx 0x561be798b100
| |           | |   `-CXXThisExpr 0x561be79d6790 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x561be79d6838 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x561be79d67f0 <col:43, col:45> 'const int' lvalue .idx 0x561be798b100
| |           |     `-DeclRefExpr 0x561be79d67d0 <col:43> 'const Router::Port' lvalue ParmVar 0x561be798b7d8 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x561be79d6930 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x561be79d6900 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x561be79d6880 <col:52> 'const int' lvalue ->port 0x561be798b168
| |             |   `-CXXThisExpr 0x561be79d6870 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x561be79d6918 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x561be79d68d0 <col:59, col:61> 'const int' lvalue .port 0x561be798b168
| |                 `-DeclRefExpr 0x561be79d68b0 <col:59> 'const Router::Port' lvalue ParmVar 0x561be798b7d8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x561be798b9b0 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x561be798b920 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x561be79d6ce8 <col:46, line:166:9>
| |   `-ReturnStmt 0x561be79d6cd8 <line:165:13, col:66>
| |     `-BinaryOperator 0x561be79d6cb8 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x561be79d6a98 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x561be79d6a68 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x561be79d69e8 <col:20> 'const int' lvalue ->idx 0x561be798b100
| |       | |   `-CXXThisExpr 0x561be79d69d8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x561be79d6a80 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x561be79d6a38 <col:26, col:28> 'const int' lvalue .idx 0x561be798b100
| |       |     `-DeclRefExpr 0x561be79d6a18 <col:26> 'const Router::Port' lvalue ParmVar 0x561be798b920 'x' 'const Router::Port &'
| |       `-ParenExpr 0x561be79d6c98 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x561be79d6c78 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x561be79d6b78 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x561be79d6b48 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x561be79d6ac8 <col:36> 'const int' lvalue ->idx 0x561be798b100
| |           | |   `-CXXThisExpr 0x561be79d6ab8 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x561be79d6b60 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x561be79d6b18 <col:43, col:45> 'const int' lvalue .idx 0x561be798b100
| |           |     `-DeclRefExpr 0x561be79d6af8 <col:43> 'const Router::Port' lvalue ParmVar 0x561be798b920 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x561be79d6c58 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x561be79d6c28 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x561be79d6ba8 <col:52> 'const int' lvalue ->port 0x561be798b168
| |             |   `-CXXThisExpr 0x561be79d6b98 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x561be79d6c40 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x561be79d6bf8 <col:60, col:62> 'const int' lvalue .port 0x561be798b168
| |                 `-DeclRefExpr 0x561be79d6bd8 <col:60> 'const Router::Port' lvalue ParmVar 0x561be798b920 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x561be79d6d00 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x561be79d6d00
| | `-ParmVarDecl 0x561be79d6e18 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x561be79d6eb8 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x561be79d6eb8
| | `-ParmVarDecl 0x561be79d6fc8 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x561be79d7060 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x561be79d7330 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x561be79d7330
| | `-ParmVarDecl 0x561be79d7438 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x561be79d74a8 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x561be79d75b8 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x561be79d78d8 <col:12>
|     |-BinaryOperator 0x561be79d7778 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x561be79d7730 <col:12> 'int' lvalue ->idx 0x561be798b100
|     | | `-CXXThisExpr 0x561be79d7720 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x561be79d7760 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x561be79d76f0 <col:12> 'int' xvalue .idx 0x561be798b100
|     |     `-CXXStaticCastExpr 0x561be79d76c0 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x561be79d7690 <col:12> 'Router::Port' lvalue ParmVar 0x561be79d75b8 '' 'Router::Port &&'
|     |-BinaryOperator 0x561be79d7880 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x561be79d7838 <col:12> 'int' lvalue ->port 0x561be798b168
|     | | `-CXXThisExpr 0x561be79d7828 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x561be79d7868 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x561be79d77f8 <col:12> 'int' xvalue .port 0x561be798b168
|     |     `-CXXStaticCastExpr 0x561be79d77c8 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x561be79d7798 <col:12> 'Router::Port' lvalue ParmVar 0x561be79d75b8 '' 'Router::Port &&'
|     `-ReturnStmt 0x561be79d78c8 <col:12>
|       `-UnaryOperator 0x561be79d78b0 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x561be79d78a0 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x561be798ba70 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561be798bb88 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x561be798bd78 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x561be798be30 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x561be798bd78 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x561be79d7038 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x561be79d7170 <col:22, line:173:9>
| |-CXXConstructorDecl 0x561be798c168 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x561be798bef0 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x561be798bf70 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x561be798bff0 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x561be798c070 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x561be798bd78 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x561be79d7180 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x561be79d7bb8 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x561be79d79a8 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x561be79d7970 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x561be79d7958 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x561be79d7640 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x561be79d74a8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x561be79d7250 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x561be79d7238 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x561be79d71e8 <col:13> 'Router::Port [2]' lvalue ->p 0x561be798bd78
| |   |   | |   `-CXXThisExpr 0x561be79d71d8 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x561be79d7218 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x561be79d7628 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x561be79d72f0 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x561be79d72c0 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x561be79d7280 <col:25> 'int' lvalue ParmVar 0x561be798bff0 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x561be79d72d8 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x561be79d72a0 <col:33> 'int' lvalue ParmVar 0x561be798c070 'to_port' 'int'
| |   `-ExprWithCleanups 0x561be79d7ba0 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x561be79d7b68 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x561be79d7b50 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x561be79d7b30 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x561be79d74a8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x561be79d7a38 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x561be79d7a20 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x561be79d79d0 <col:13> 'Router::Port [2]' lvalue ->p 0x561be798bd78
| |       | |   `-CXXThisExpr 0x561be79d79c0 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x561be79d7a00 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x561be79d7b18 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x561be79d7ad8 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x561be79d7aa8 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x561be79d7a68 <col:25> 'int' lvalue ParmVar 0x561be798bef0 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x561be79d7ac0 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x561be79d7a88 <col:35> 'int' lvalue ParmVar 0x561be798bf70 'from_port' 'int'
| |-CXXMethodDecl 0x561be798c338 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x561be798c248 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x561be79d8178 <col:45, line:182:9>
| |   |-ParenExpr 0x561be79d8058 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x561be79d8028 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x561be79d7cf8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x561be79d7cc8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x561be79d7c30 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x561be79d7c18 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x561be79d7bd8 <col:34> 'int' lvalue ParmVar 0x561be798c248 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x561be79d7bf8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x561be79d7ca8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x561be79d7c90 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x561be79d7c50 <col:44> 'int' lvalue ParmVar 0x561be798c248 'i' 'int'
| |   |   |     `-IntegerLiteral 0x561be79d7c70 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x561be79d7d58 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x561be79d7d38 <col:59> 'int' 0
| |   |   `-CallExpr 0x561be79d7f88 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x561be79d7f70 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x561be79d7f50 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x561be79d7fc8 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x561be79d7dc8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x561be79d7fe0 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x561be79d7df0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x561be79d7ff8 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x561be79d7e28 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x561be79d8010 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x561be79d7f38 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x561be79d7f20 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x561be79d7ec8 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x561be79d8168 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x561be79d8148 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x561be79d8118 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x561be79d8088 <col:20> 'Router::Port const[2]' lvalue ->p 0x561be798bd78
| |       |   `-CXXThisExpr 0x561be79d8078 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x561be79d8130 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x561be79d80b8 <col:22> 'int' lvalue ParmVar 0x561be798c248 'i' 'int'
| |-CXXMethodDecl 0x561be798c4e8 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x561be798c3f8 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x561be79d86f0 <col:33, line:186:9>
| |   |-ParenExpr 0x561be79d8610 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x561be79d85e0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x561be79d82b8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x561be79d8288 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x561be79d81f0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x561be79d81d8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x561be79d8198 <col:34> 'int' lvalue ParmVar 0x561be798c3f8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x561be79d81b8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x561be79d8268 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x561be79d8250 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x561be79d8210 <col:44> 'int' lvalue ParmVar 0x561be798c3f8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x561be79d8230 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x561be79d8318 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x561be79d82f8 <col:59> 'int' 0
| |   |   `-CallExpr 0x561be79d8540 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x561be79d8528 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x561be79d8508 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x561be79d8580 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x561be79d8388 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x561be79d8598 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x561be79d83b0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x561be79d85b0 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x561be79d83e8 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x561be79d85c8 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x561be79d84f0 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x561be79d84d8 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x561be79d8488 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x561be79d86e0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x561be79d86c0 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x561be79d8690 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x561be79d8640 <col:20> 'Router::Port [2]' lvalue ->p 0x561be798bd78
| |       |   `-CXXThisExpr 0x561be79d8630 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x561be79d86a8 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x561be79d8670 <col:22> 'int' lvalue ParmVar 0x561be798c3f8 'i' 'int'
| |-CXXMethodDecl 0x561be798c688 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x561be798c5c8 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x561be79d8be8 <col:52, line:190:9>
| |   `-ReturnStmt 0x561be79d8bd8 <line:189:13, col:51>
| |     `-BinaryOperator 0x561be79d8bb8 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x561be79d8940 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x561be79d8928 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x561be79d88e0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x561be798b5d8 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x561be79d8788 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x561be79d8770 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x561be79d8720 <col:20> 'Router::Port const[2]' lvalue ->p 0x561be798bd78
| |       | | |   `-CXXThisExpr 0x561be79d8710 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x561be79d8750 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x561be79d8830 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x561be79d8818 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x561be79d87c8 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x561be798bd78
| |       |   |   `-DeclRefExpr 0x561be79d87a8 <col:28> 'const Router::Connection' lvalue ParmVar 0x561be798c5c8 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x561be79d87f8 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x561be79d8b80 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x561be79d8b68 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x561be79d8b48 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x561be798b5d8 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x561be79d89f0 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x561be79d89d8 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x561be79d8988 <col:38> 'Router::Port const[2]' lvalue ->p 0x561be798bd78
| |         | |   `-CXXThisExpr 0x561be79d8978 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x561be79d89b8 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x561be79d8a98 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x561be79d8a80 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x561be79d8a30 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x561be798bd78
| |           |   `-DeclRefExpr 0x561be79d8a10 <col:46> 'const Router::Connection' lvalue ParmVar 0x561be798c5c8 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x561be79d8a60 <col:50> 'int' 1
| `-CXXMethodDecl 0x561be798c7d0 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x561be798c740 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x561be79d9270 <col:51, line:193:9>
|     `-ReturnStmt 0x561be79d9260 <line:192:13, col:69>
|       `-BinaryOperator 0x561be79d9240 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x561be79d8da8 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x561be79d8d90 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x561be79d8d70 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x561be798b868 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x561be79d8c78 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x561be79d8c60 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x561be79d8c10 <col:20> 'Router::Port const[2]' lvalue ->p 0x561be798bd78
|         | | |   `-CXXThisExpr 0x561be79d8c00 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x561be79d8c40 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x561be79d8d20 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x561be79d8d08 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x561be79d8cb8 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x561be798bd78
|         |   |   `-DeclRefExpr 0x561be79d8c98 <col:27> 'const Router::Connection' lvalue ParmVar 0x561be798c740 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x561be79d8ce8 <col:31> 'int' 0
|         `-ParenExpr 0x561be79d9220 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x561be79d9200 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x561be79d8fe8 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x561be79d8fd0 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x561be79d8fb0 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x561be798b5d8 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x561be79d8e58 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x561be79d8e40 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x561be79d8df0 <col:38> 'Router::Port const[2]' lvalue ->p 0x561be798bd78
|             | | |   `-CXXThisExpr 0x561be79d8de0 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x561be79d8e20 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x561be79d8f00 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x561be79d8ee8 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x561be79d8e98 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x561be798bd78
|             |   |   `-DeclRefExpr 0x561be79d8e78 <col:46> 'const Router::Connection' lvalue ParmVar 0x561be798c740 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x561be79d8ec8 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x561be79d91c8 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x561be79d91b0 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561be79d9190 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x561be798b868 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x561be79d9098 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x561be79d9080 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x561be79d9030 <col:56> 'Router::Port const[2]' lvalue ->p 0x561be798bd78
|               | |   `-CXXThisExpr 0x561be79d9020 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x561be79d9060 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x561be79d9140 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x561be79d9128 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x561be79d90d8 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x561be798bd78
|                 |   `-DeclRefExpr 0x561be79d90b8 <col:63> 'const Router::Connection' lvalue ParmVar 0x561be798c740 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x561be79d9108 <col:67> 'int' 1
|-AccessSpecDecl 0x561be798c890 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x561be798c8b8 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x561be798c970 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x561be798ca30 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x561be798ca80 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x561be798cad0 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x561be798cb20 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x561be798cb70 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x561be798cbc0 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x561be798ccd8 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x561be798ccb8 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x561be798cca0 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x561be798cc80 <col:25> 'int' 2
| |-EnumConstantDecl 0x561be798cd80 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x561be798cd60 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x561be798cd48 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x561be798cd28 <col:48> 'int' 1
| |-EnumConstantDecl 0x561be798ce10 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x561be798cdf0 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x561be798cdd0 <col:71> 'int' 0
| |-EnumConstantDecl 0x561be798cea0 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x561be798ce80 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x561be798ce60 <col:30> 'int' 1
| `-EnumConstantDecl 0x561be798cf30 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x561be798cf10 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x561be798cef0 <col:50> 'int' 2
|-FieldDecl 0x561be798cf90 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x561be798cff0 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x561be798d058 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x561be798d0f8 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x561be798d0d8 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x561be798d0a8 <col:30> 'int' 1
|-FieldDecl 0x561be798d198 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x561be798d178 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x561be798d148 <col:33> 'int' 1
|-FieldDecl 0x561be798d238 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x561be798d218 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x561be798d1e8 <col:32> 'int' 1
|-FieldDecl 0x561be798d2a0 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x561be798d300 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x561be79983b0 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x561be79984b0 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x561be79985b0 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x561be79a5270 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x561be79adc20 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x561be79adc70 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x561be79add88 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x561be79ade28 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x561be79ade88 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x561be79adf20 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x561be79adf20
| | `-ParmVarDecl 0x561be79ae038 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x561be79ae0d8 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x561be79ae0d8
| | `-ParmVarDecl 0x561be79ae1e8 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x561be79ae288 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x561be79ae288
| | `-ParmVarDecl 0x561be79ae398 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x561be79ae408 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x561be79ae408
| | `-ParmVarDecl 0x561be79ae518 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x561be79ae5a0 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x561be79ae5a0
|-FieldDecl 0x561be79bae20 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x561be79bae80 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x561be79baf90 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x561be79bb2e8 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x561be79bb3f0 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x561be79c3550 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x561be79c3660 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x561be79c3760 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x561be79c3870 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x561be79c3980 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x561be79c3a90 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x561be79c3ba0 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x561be79c3bf0 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x561be79c3cf0 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x561be79c3d40 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be79c3cd0 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x561be79c3cb0 <col:29> 'int' 256
|-FieldDecl 0x561be79c3da0 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x561be79c3e08 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x561be79c3e70 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x561be79c3f70 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x561be79cc2c0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x561be79cc320 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x561be79cc380 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x561be79cc3d0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x561be79cc4e8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x561be79cc578 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x561be79cc680 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x561be79cc6d0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x561be79cc660 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x561be79cc640 <col:27> 'int' 4096
| |-FieldDecl 0x561be79cc6f8 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x561be79cc760 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x561be79cc958 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x561be79cc9e8 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x561be79ccba8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x561be79cca48 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x561be79ccac0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x561be79cc6f8 'name' 'String'
| | | `-CXXConstructExpr 0x561be79d92c8 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x561be79d9288 <col:20> 'const String' lvalue ParmVar 0x561be79cca48 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x561be79cc760 'nsig' 'int'
| | | `-IntegerLiteral 0x561be79d9320 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x561be79cc958 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x561be79d9408 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x561be79cc9e8 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x561be79d93c8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x561be79d9388 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x561be79ccac0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x561be79d9698 <col:42, line:289:9>
| |   `-CallExpr 0x561be79d9648 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x561be79d9630 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x561be79d9610 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x561be74c2408 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x561be79d9680 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x561be79d9558 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x561be79d9538 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x561be79d9520 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x561be79d94d0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x561be79cc958
| |     |     |   `-CXXThisExpr 0x561be79d94c0 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x561be79d9500 <col:25> 'int' 0
| |     |-IntegerLiteral 0x561be79d9570 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x561be79d95f0 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x561be79d95d0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x561be79d95a0 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x561be79cc958 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x561be79d9590 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x561be79ccc88 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x561be79ccc88
| | `-ParmVarDecl 0x561be79ccd98 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x561be79cce38 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x561be79cce38
| | `-ParmVarDecl 0x561be79ccf48 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x561be79ccfe8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x561be79ccfe8
| | `-ParmVarDecl 0x561be79cd0f8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x561be79cd168 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x561be79cd168
| | `-ParmVarDecl 0x561be79cd278 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x561be79cd300 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x561be79cd300
|-FieldDecl 0x561be79cd3f0 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x561be79cd450 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x561be79cd4b0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x561be79cd510 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x561be79cd570 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x561be79cd680 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x561be79cd780 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x561be79cd7e0 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x561be79cd928 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x561be79cd868 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x561be79cdad8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x561be79cd9e8 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x561be79cdc20 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x561be79cdb90 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x561be79d3128 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x561be79cdcd8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x561be79cdd50 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x561be79cddd0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x561be79d2fb0 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x561be79d3028 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561be79d6160 <col:57> 'bool' false
|-CXXMethodDecl 0x561be79d3298 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x561be79d3200 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x561be79d33e8 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x561be79d3350 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x561be79d3538 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x561be79d34a0 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x561be79d3690 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x561be79d35f8 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x561be79d39b0 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x561be79d3748 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x561be79d37c0 <col:50> col:54 'bool'
| |-ParmVarDecl 0x561be79d3840 <col:56> col:59 'int'
| `-ParmVarDecl 0x561be79d38b8 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x561be79d3b18 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x561be79d3a80 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x561be79d3be0 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x561be79d3ca0 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x561be79d3ea0 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x561be79d3d50 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x561be79d3dc8 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x561be79d3f70 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x561be79d40b8 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x561be79d4020 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x561be79d98d0 <col:42, line:326:5>
|   `-ReturnStmt 0x561be79d98c0 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x561be79d98a8 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x561be79d9888 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x561be79d9858 <col:16, col:45> '<bound member function type>' .back 0x561be79abcc8
|           `-ArraySubscriptExpr 0x561be79d97d8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x561be79d97a8 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561be79d96c0 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x561be79bb2e8
|             |   `-CXXThisExpr 0x561be79d96b0 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x561be79d97c0 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x561be79d96f0 <col:38> 'bool' lvalue ParmVar 0x561be79d4020 'isout' 'bool'
|-CXXMethodDecl 0x561be79d4288 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x561be79d4170 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x561be79d41e8 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x561be79d43e0 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x561be79d4348 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x561be79d4688 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x561be79d4498 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x561be79d4510 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x561be79d4590 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x561be79d4860 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x561be79d4750 <col:30> col:34 'bool'
| `-ParmVarDecl 0x561be79d47c8 <col:36> col:40 'bool'
|-CXXMethodDecl 0x561be79d49e8 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x561be79d4928 <col:30> col:33 'int'
|-CXXMethodDecl 0x561be79d4c80 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x561be79d4aa8 <col:23> col:26 'int'
| |-ParmVarDecl 0x561be79d4b20 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x561be79d4b98 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x561be79d4e98 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x561be79d4d48 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x561be79d4dc0 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x561be79d50a8 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x561be79d4f60 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x561be79d4fd8 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x561be79d5228 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x561be79d5168 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x561be79d5428 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x561be79d52e0 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x561be79d5358 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x561be79d5600 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561be79d54e8 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x561be79d5568 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x561be79d58e0 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x561be79d56c0 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x561be79d5738 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x561be79d57b8 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x561be79d5830 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x561be79d59c0 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x561be79d5a20 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x561be79d5ca0 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x561be79d5ba0 parent 0x561be77cd940 prev 0x561be77dc5a8 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x561be79d5a80 <col:36> col:39 'int'
    `-ParmVarDecl 0x561be79d5b00 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be77cd940 prev 0x561be77cd6c0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561be77cda38 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x561be77cdac8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x561be77cdb28 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x561be77cdc18 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x561be77cdd18 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x561be77cdee8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x561be77cdd98 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x561be77cde10 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x561be77ce078 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x561be77cdfb0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x561be77ce120 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x561be77ce258 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x561be77ce190 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x561be77ce3f8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x561be77ce338 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x561be77ce598 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x561be77ce4d8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x561be77ce640 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x561be77ce740 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x561be77ce820 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77ce720 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x561be77ce700 <col:26> 'int' 1
| `-EnumConstantDecl 0x561be77ce7d0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x561be77ce838 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be77ce7b0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x561be77ce790 <col:44> 'int' 2
|-CXXMethodDecl 0x561be77ce980 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x561be77ce868 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x561be77ce8e8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x561be77cead8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x561be77cea48 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x561be77ced18 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x561be77ceb98 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x561be77cec10 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x561be77cedc8 <col:20>
| `-OptimizeNoneAttr 0x561be77cee20 <col:30>
|-CXXMethodDecl 0x561be77cef28 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x561be77cee60 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x561be77cefd0 <col:20>
| `-OptimizeNoneAttr 0x561be77cf028 <col:30>
|-CXXMethodDecl 0x561be77cf078 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x561be77cf140 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x561be77cf258 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x561be77cf320 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x561be77cf3a8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x561be77cf430 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x561be77cf4b8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x561be77cf548 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x561be77cf608 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x561be77cf690 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x561be77cf718 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x561be77cf7a0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x561be77cf828 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x561be77cf8b0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x561be77cf940 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x561be77cfa00 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x561be77cfa90 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x561be77cfbe0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x561be77cfb48 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x561be77cfd70 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x561be77cfca0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x561be77d0010 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x561be77cfe28 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x561be77cfea8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x561be77cff28 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x561be77d00c8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x561be77d01d0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561be77d0460 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77d01b0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x561be77d0190 <col:33> 'int' 0
| |-EnumConstantDecl 0x561be77d0260 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561be77d0478 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77d0240 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x561be77d0220 <col:32> 'int' 20
| |-EnumConstantDecl 0x561be77d02f0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561be77d0490 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77d02d0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x561be77d02b0 <col:38> 'int' 90
| |-EnumConstantDecl 0x561be77d0380 <line:83:9, col:35> col:9 referenced CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561be77d04a8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77d0360 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x561be77d0340 <col:35> 'int' 100
| `-EnumConstantDecl 0x561be77d0410 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x561be77d04c0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be77d03f0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x561be77d03d0 <col:32> 'int' 2000
|-CXXMethodDecl 0x561be77d0500 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x561be77d0940 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x561be77d07b0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x561be77d0828 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561be77d0a10 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x561be77d0b90 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x561be77d0ac0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561be77d0d98 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x561be77d0c48 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x561be77d0cc0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561be77d0e98 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x561be77d0f38 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x561be77d1000 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x561be77d1090 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x561be77d12c0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77d1070 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x561be77d1050 <col:36> 'int' EnumConstant 0x561be77d1000 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x561be77d10e0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561be77d1130 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561be77d1180 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561be77d11d0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561be77d1220 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x561be77d1270 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x561be77d13a8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x561be77d12e8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x561be77d1470 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x561be77d1530 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x561be77d15f0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x561be77d16b0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x561be77d17c8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x561be77d1890 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x561be77d1a10 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x561be77d1940 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x561be77d1b38 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x561be77d1d38 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x561be77d1be8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x561be77d1c68 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x561be77de698 <col:54, line:127:5>
|   |-ParenExpr 0x561be77de548 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x561be77de518 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x561be77de208 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x561be77de1e0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x561be77de1c8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x561be77de1b0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x561be77de180 <col:31> 'Router *' lvalue ->_router 0x561be77dc060
|   |   |         `-CXXThisExpr 0x561be77de170 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x561be77de268 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77de248 <col:48> 'int' 0
|   |   `-CallExpr 0x561be77de478 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x561be77de460 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77de440 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77de4b8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77de2d8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x561be77de4d0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77de2f8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x561be77de4e8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77de330 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x561be77de500 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77de428 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77de410 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77de3c8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x561be77de5e0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x561be77de578 <col:9> 'Router *' lvalue ->_router 0x561be77dc060
|   | | `-CXXThisExpr 0x561be77de568 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x561be77de5c8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x561be77de5a8 <col:19> 'Router *' lvalue ParmVar 0x561be77d1be8 'r' 'Router *'
|   `-BinaryOperator 0x561be77de678 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x561be77de610 <col:9> 'int' lvalue ->_eindex 0x561be77dc0c8
|     | `-CXXThisExpr 0x561be77de600 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x561be77de660 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x561be77de640 <col:19> 'int' lvalue ParmVar 0x561be77d1c68 'eindex' 'int'
|-CXXMethodDecl 0x561be77d1ec0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x561be77d1df8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x561be77d1f90 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x561be77d2058 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x561be77d20f8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x561be77d2348 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x561be77d21c0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x561be77d2240 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x561be77d23f8 <col:20>
| `-OptimizeNoneAttr 0x561be77d2450 <col:30>
|-CXXMethodDecl 0x561be77d2558 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x561be77d2490 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x561be77d2600 <col:20>
| `-OptimizeNoneAttr 0x561be77d2658 <col:30>
|-CXXMethodDecl 0x561be77d2728 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x561be77d2698 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x561be77d27d0 <col:20>
| `-OptimizeNoneAttr 0x561be77d2828 <col:30>
|-CXXMethodDecl 0x561be77d29b8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x561be77d2860 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x561be77d28e0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x561be77d2b48 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x561be77d2a80 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x561be77d2c98 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x561be77d2c08 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x561be77d2de8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x561be77d2d58 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x561be77d2f38 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x561be77d2ea8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x561be77d31f8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x561be77d2ff0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x561be77d3070 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x561be77d3118 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x561be77d3330 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x561be77d33f0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x561be77d36c0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x561be77d3570 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x561be77d35e8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x561be77d37e8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x561be77d39c0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x561be77d38a0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x561be77d3920 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x561be77d3ba8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x561be77d3a88 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x561be77d3b08 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x561be77d3f18 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x561be77d3c68 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x561be77d3ce0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x561be77d3d60 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x561be77ddc80 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x561be77ddc60 <col:106> 'int' 0
| `-ParmVarDecl 0x561be77d3dd8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561be77ddcb8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561be77ddc98 <col:126> 'int' 0
|-CXXMethodDecl 0x561be77d4298 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561be77d3fe8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x561be77d4060 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x561be77d40e0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x561be77d4158 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561be77ddcf0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561be77ddcd0 <col:114> 'int' 0
|-CXXMethodDecl 0x561be77d4628 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561be77d4370 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x561be77d43e8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x561be77d4468 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x561be77ddd08 <col:96> 'int' 0
| `-ParmVarDecl 0x561be77d44e0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561be77ddd48 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561be77ddd28 <col:116> 'int' 0
|-CXXMethodDecl 0x561be77d49a8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x561be77d46f8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x561be77d4770 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x561be77d47f0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x561be77ddd80 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x561be77ddd60 <col:109> 'int' 0
| `-ParmVarDecl 0x561be77d4868 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561be77dddb8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561be77ddd98 <col:129> 'int' 0
|-CXXMethodDecl 0x561be77d4d28 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561be77d4a78 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x561be77d4af0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x561be77d4b70 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x561be77d4be8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561be77dddf0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561be77dddd0 <col:117> 'int' 0
|-CXXMethodDecl 0x561be77d50b8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561be77d4e00 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d4e78 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x561be77d4ef8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x561be77dde08 <col:99> 'int' 0
| `-ParmVarDecl 0x561be77d4f70 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561be77dde48 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561be77dde28 <col:119> 'int' 0
|-CXXMethodDecl 0x561be77d54d8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x561be77d5188 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x561be77d5208 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x561be77d5280 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x561be77d5300 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x561be77dde80 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x561be77dde60 <col:108> 'int' 0
| `-ParmVarDecl 0x561be77d5380 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x561be77ddeb8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x561be77dde98 <col:141> 'int' 0
|-CXXMethodDecl 0x561be77d58f8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x561be77d55b0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x561be77d5630 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x561be77d56a8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x561be77d5728 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x561be77d57a8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x561be77dded0 <col:121> 'int' 0
|-CXXMethodDecl 0x561be77d5d28 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x561be77d59d8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x561be77d5a58 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x561be77d5ad0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x561be77d5b50 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x561be77ddef0 <col:98> 'int' 0
| `-ParmVarDecl 0x561be77d5bd0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x561be77ddf10 <col:123> 'int' 0
|-CXXMethodDecl 0x561be77d5ff0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x561be77d5e00 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x561be77d5e80 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x561be77d5f00 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x561be77ddf30 <col:80> 'int' 0
|-EnumDecl 0x561be77d60a8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x561be77d61b0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561be77d6440 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77d6190 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x561be77d6170 <col:42> 'int' 1
| |-EnumConstantDecl 0x561be77d6240 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561be77d6458 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77d6220 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x561be77d6200 <col:40> 'int' 2
| |-EnumConstantDecl 0x561be77d62d0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561be77d6470 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77d62b0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x561be77d6290 <col:44> 'int' 4
| |-EnumConstantDecl 0x561be77d6360 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561be77d6488 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77d6340 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x561be77d6320 <col:36> 'int' 7
| `-EnumConstantDecl 0x561be77d63f0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x561be77d64a0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be77d63d0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x561be77d63b0 <col:34> 'int' 6
|-CXXMethodDecl 0x561be77d6758 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x561be77d64c8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x561be77d6568 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x561be77d65e8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x561be77d6660 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x561be77ddfe8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561be77ddfd0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x561be77ddfb8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561be77ddf98 <col:98, col:105> 'String' (CXXTemporary 0x561be77ddf98)
|           `-CXXTemporaryObjectExpr 0x561be77ddf60 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x561be77d69f8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x561be77d6828 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x561be77d68a0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x561be77d6918 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x561be77de098 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x561be77de080 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x561be77de068 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x561be77de048 <col:94, col:101> 'String' (CXXTemporary 0x561be77de048)
| |         `-CXXTemporaryObjectExpr 0x561be77de010 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x561be77de880 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x561be77de7f8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x561be77de7c8 <col:9> '<bound member function type>' ->add_task_handlers 0x561be77d6758
|     | `-CXXThisExpr 0x561be77de7b8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x561be77de838 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x561be77de738 <col:27> 'Task *' lvalue ParmVar 0x561be77d6828 'task' 'Task *'
|     |-ImplicitCastExpr 0x561be77de850 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x561be77de758 <col:33> 'NotifierSignal *' lvalue ParmVar 0x561be77d68a0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x561be77de868 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x561be77de778 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x561be77d63f0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x561be77de798 <col:62> 'const String' lvalue ParmVar 0x561be77d6918 'prefix' 'const String &'
|-CXXMethodDecl 0x561be77d6c08 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x561be77d6ac0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x561be77d6b38 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x561be77de148 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x561be77de130 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x561be77de118 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x561be77de0f8 <col:70, col:77> 'String' (CXXTemporary 0x561be77de0f8)
| |         `-CXXTemporaryObjectExpr 0x561be77de0c0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x561be77dea58 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x561be77de9d0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x561be77de9a0 <col:9> '<bound member function type>' ->add_task_handlers 0x561be77d6758
|     | `-CXXThisExpr 0x561be77de990 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x561be77dea10 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x561be77de910 <col:27> 'Task *' lvalue ParmVar 0x561be77d6ac0 'task' 'Task *'
|     |-ImplicitCastExpr 0x561be77dea28 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x561be77de930 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x561be77dea40 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x561be77de950 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x561be77d63f0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x561be77de970 <col:57> 'const String' lvalue ParmVar 0x561be77d6b38 'prefix' 'const String &'
|-CXXMethodDecl 0x561be77d6ee8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x561be77d6cd0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d6d50 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561be77d6dc8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x561be77d7198 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x561be77d6fb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d7038 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561be77d70b8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x561be77d74d8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x561be77d7268 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d7340 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561be77d73b8 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x561be77d7788 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x561be77d75a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d7628 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561be77d76a8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x561be77d7a38 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x561be77d7858 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d78d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561be77d7958 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x561be77d7ce8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x561be77d7b08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d7b88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561be77d7c00 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x561be77d7f98 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x561be77d7db8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d7e38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561be77d7eb8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x561be77d8248 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x561be77d8068 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d80e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561be77d8168 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x561be77d8528 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x561be77d8318 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d8398 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561be77d8440 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x561be77d8808 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x561be77d85f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d8678 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561be77d8720 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x561be77d8a70 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x561be77d88d8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x561be77d8958 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x561be77d89d0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x561be77d8d18 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x561be77d8b40 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x561be77d8bc0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x561be77d8c38 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x561be77d8fc8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x561be77d8de8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d8e68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561be77d8ee8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x561be77d9278 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x561be77d9098 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d9118 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561be77d9190 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x561be77d9528 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x561be77d9348 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d93c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561be77d9440 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x561be77d97f8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x561be77d95f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d9678 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561be77d9718 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x561be77d9b28 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x561be77d98c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561be77d9948 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x561be77d99c0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x561be77d9a38 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561be77de160 <col:93> 'bool' false
|-CXXMethodDecl 0x561be77d9d10 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561be77d9bf8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x561be77d9c78 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x561be77d9ee8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561be77d9dd0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x561be77d9e50 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x561be77da1c8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x561be77d9fa8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x561be77da020 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x561be77da0a0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x561be77da118 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x561be77da4b8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x561be77da298 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x561be77da310 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x561be77da390 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x561be77da408 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x561be77da6f0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x561be77da590 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x561be77da610 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x561be77da8d8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x561be77da7b8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x561be77da838 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x561be77da988 prev 0x561be77d20f8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561be77daa80 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x561be77dab10 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x561be77dab88 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x561be77dac48 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x561be77dad10 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x561be77dae88 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x561be77dadc0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x561be77daf30 <col:24>
| | `-OptimizeNoneAttr 0x561be77daf88 <col:34>
| |-CXXMethodDecl 0x561be77dafd0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x561be77db288 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x561be77db080 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x561be77db0f8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x561be77db178 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x561be77db350 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x561be77db388 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x561be77db3f0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x561be77db478 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x561be77db798 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x561be77db530 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x561be77db5a8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x561be77db620 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x561be77db6a0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x561be77db8b0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x561be7749f38 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x561be7749f38
| | `-ParmVarDecl 0x561be774a048 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x561be774a0e8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x561be774a0e8
| | `-ParmVarDecl 0x561be774a1f8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x561be7a83d40 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561be77db928 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x561be77db9c8 <col:38> "" ""
|-CXXMethodDecl 0x561be77dba58 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x561be77dbaf8 <col:44> "" ""
|-AccessSpecDecl 0x561be77dbb68 <line:260:3, col:10> col:3 private
|-EnumDecl 0x561be77dbb90 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x561be77dbc90 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x561be77dbce0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be77dbc70 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x561be77dbc50 <col:27> 'int' 4
|-FieldDecl 0x561be77dbd98 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x561be77dbf48 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x561be77dc000 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x561be77dc060 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x561be77dc0c8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x561be77dc218 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x561be77dc158 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x561be77dc3c8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x561be77dc2d8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x561be77dc5a8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x561be77dc488 <col:20> col:23 'int'
| `-ParmVarDecl 0x561be77dc508 <col:25> col:28 'int'
|-CXXMethodDecl 0x561be77dc850 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x561be77dc670 <col:23> col:26 'int'
| |-ParmVarDecl 0x561be77dc6f0 <col:28> col:31 'int'
| `-ParmVarDecl 0x561be77dc768 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x561be77dc908 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x561be77dc9d0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x561be77dca20 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x561be77dca70 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x561be77dcc50 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x561be77dcb00 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x561be77dcb78 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561be77dcef8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x561be77dcd18 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x561be77dcd98 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x561be77dce10 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x561be77dd118 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x561be77dcfc8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x561be77dd048 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x561be77dd450 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x561be77dd1d8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x561be77dd258 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x561be77dd2d0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x561be77dd350 <col:57> col:60 'int'
|-CXXMethodDecl 0x561be77dd638 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561be77dd520 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x561be77dd5a0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x561be77dd788 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x561be77dd6f8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x561be77ddb08 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x561be77dd848 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x561be77dd8c8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x561be77dd940 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x561be77dd9c0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x561be77ddc20 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterPatterns
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be78cdc90 <../elements/ip/iprwpatterns.hh:22:1, line:33:1> line:22:7 class IPRewriterPatterns definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x561be78cdde8 <col:1, col:7> col:7 implicit referenced class IPRewriterPatterns
|-AccessSpecDecl 0x561be78cde78 <col:45, col:51> col:45 public
|-CXXConstructorDecl 0x561be78cdf00 <line:24:5, col:24> col:5 IPRewriterPatterns 'void ()'
|-CXXDestructorDecl 0x561be78cdff0 <line:25:5, col:25> col:5 ~IPRewriterPatterns 'void ()' noexcept-unevaluated 0x561be78cdff0
| `-Overrides: [ 0x561be77cdc18 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x561be78ce120 <line:27:5, col:67> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x561be77cf078 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x561be78cea70 <col:36, col:67>
|   `-ReturnStmt 0x561be78cea60 <col:38, col:45>
|     `-ImplicitCastExpr 0x561be78cea48 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x561be78cea18 <col:45> 'const char [19]' lvalue "IPRewriterPatterns"
|-CXXMethodDecl 0x561be78ce1e8 <line:29:5, col:84> col:9 configure_phase 'int () const'
| |-Overrides: [ 0x561be77d0500 Element::configure_phase 'int () const' ]
| `-CompoundStmt 0x561be78ceb18 <col:33, col:84>
|   `-ReturnStmt 0x561be78ceb08 <col:35, col:58>
|     `-ImplicitCastExpr 0x561be78ceaf0 <col:42, col:58> 'int' <IntegralCast>
|       `-DeclRefExpr 0x561be78ceac0 <col:42, col:58> 'IPRewriterBase::ConfigurePhase' EnumConstant 0x561be78a8f20 'CONFIGURE_PHASE_PATTERNS' 'IPRewriterBase::ConfigurePhase'
|-CXXMethodDecl 0x561be78ce4c0 <line:30:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x561be77d0940 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x561be78ce370 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x561be78ce3e8 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x561be78ce610 <line:31:5, col:30> col:10 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x561be77d13a8 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x561be78ce580 <col:18> col:30 'Element::CleanupStage'
|-CXXConstructorDecl 0x561be78ce6e8 <line:22:7> col:7 implicit IPRewriterPatterns 'void (const IPRewriterPatterns &)' inline default_delete noexcept-unevaluated 0x561be78ce6e8
| `-ParmVarDecl 0x561be78ce7f8 <col:7> col:7 'const IPRewriterPatterns &'
`-CXXMethodDecl 0x561be78ce898 <col:7> col:7 implicit operator= 'IPRewriterPatterns &(const IPRewriterPatterns &)' inline default_delete noexcept-unevaluated 0x561be78ce898
  `-ParmVarDecl 0x561be78ce9a8 <col:7> col:7 'const IPRewriterPatterns &'

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterPatterns = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.IPRewriterPatterns.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<class IPRewriterPattern *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be7a8ac40 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IPRewriterPattern *'
|-CXXRecordDecl 0x561be7a8ae48 prev 0x561be7a8ac40 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561be7a8be60 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<IPRewriterPattern *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x561be7a8be10 'typename array_memory<IPRewriterPattern *>::type' sugar
|   `-TypedefType 0x561be7a8bdf0 'conditional<true, sized_array_memory<8>, typed_array_memory<IPRewriterPattern *> >::type' sugar
|     |-Typedef 0x561be7a8bca0 'type'
|     `-SubstTemplateTypeParmType 0x561be7897900 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561be753e800 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be753e7a8 'T'
|       `-RecordType 0x561be7897450 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x561be7897368 'sized_array_memory'
|-FieldDecl 0x561be7a8bf60 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IPRewriterPattern *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x561be7a8bfb0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561be7a8bfe8 <line:118:5, col:15> col:15 value_type 'IPRewriterPattern *':'IPRewriterPattern *'
| `-SubstTemplateTypeParmType 0x561be7a8aee0 'IPRewriterPattern *' sugar
|   |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561be75759a8 'T'
|   `-PointerType 0x561be78769a0 'IPRewriterPattern *'
|     `-RecordType 0x561be7876490 'IPRewriterPattern'
|       `-CXXRecord 0x561be7876400 'IPRewriterPattern'
|-TypedefDecl 0x561be7a8c0a8 <line:119:5, col:16> col:16 reference 'IPRewriterPattern *&'
| `-LValueReferenceType 0x561be7a8c070 'IPRewriterPattern *&'
|   `-SubstTemplateTypeParmType 0x561be7a8aee0 'IPRewriterPattern *' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-PointerType 0x561be78769a0 'IPRewriterPattern *'
|       `-RecordType 0x561be7876490 'IPRewriterPattern'
|         `-CXXRecord 0x561be7876400 'IPRewriterPattern'
|-TypedefDecl 0x561be7a8c168 <line:120:5, col:22> col:22 const_reference 'IPRewriterPattern *const &'
| `-LValueReferenceType 0x561be7a8c130 'IPRewriterPattern *const &'
|   `-QualType 0x561be7a8aee1 'IPRewriterPattern *const' const
|     `-SubstTemplateTypeParmType 0x561be7a8aee0 'IPRewriterPattern *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be78769a0 'IPRewriterPattern *'
|         `-RecordType 0x561be7876490 'IPRewriterPattern'
|           `-CXXRecord 0x561be7876400 'IPRewriterPattern'
|-TypedefDecl 0x561be7a8c1f8 <line:121:5, col:16> col:16 pointer 'IPRewriterPattern **'
| `-PointerType 0x561be7a8c1c0 'IPRewriterPattern **'
|   `-SubstTemplateTypeParmType 0x561be7a8aee0 'IPRewriterPattern *' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-PointerType 0x561be78769a0 'IPRewriterPattern *'
|       `-RecordType 0x561be7876490 'IPRewriterPattern'
|         `-CXXRecord 0x561be7876400 'IPRewriterPattern'
|-TypedefDecl 0x561be7a8c2b8 <line:122:5, col:22> col:22 const_pointer 'IPRewriterPattern *const *'
| `-PointerType 0x561be7a8c280 'IPRewriterPattern *const *'
|   `-QualType 0x561be7a8aee1 'IPRewriterPattern *const' const
|     `-SubstTemplateTypeParmType 0x561be7a8aee0 'IPRewriterPattern *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be78769a0 'IPRewriterPattern *'
|         `-RecordType 0x561be7876490 'IPRewriterPattern'
|           `-CXXRecord 0x561be7876400 'IPRewriterPattern'
|-TypedefDecl 0x561be7a8ce90 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<IPRewriterPattern *>::type':'IPRewriterPattern *'
| `-ElaboratedType 0x561be7a8ce40 'typename fast_argument<IPRewriterPattern *>::type' sugar
|   `-TypedefType 0x561be7a8ce20 'fast_argument<IPRewriterPattern *, false>::type' sugar
|     |-Typedef 0x561be7a8cdb0 'type'
|     `-SubstTemplateTypeParmType 0x561be7a8cb70 'IPRewriterPattern *' sugar
|       |-TemplateTypeParmType 0x561be7547a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75479f0 'T'
|       `-PointerType 0x561be78769a0 'IPRewriterPattern *'
|         `-RecordType 0x561be7876490 'IPRewriterPattern'
|           `-CXXRecord 0x561be7876400 'IPRewriterPattern'
|-TypedefDecl 0x561be7a8cef8 <line:126:5, col:22> col:22 const_access_type 'IPRewriterPattern *const &'
| `-LValueReferenceType 0x561be7a8c130 'IPRewriterPattern *const &'
|   `-QualType 0x561be7a8aee1 'IPRewriterPattern *const' const
|     `-SubstTemplateTypeParmType 0x561be7a8aee0 'IPRewriterPattern *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be78769a0 'IPRewriterPattern *'
|         `-RecordType 0x561be7876490 'IPRewriterPattern'
|           `-CXXRecord 0x561be7876400 'IPRewriterPattern'
|-TypedefDecl 0x561be7a8cf50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be7a8cfb8 <line:130:5, col:16> col:16 iterator 'IPRewriterPattern **'
| `-PointerType 0x561be7a8c1c0 'IPRewriterPattern **'
|   `-SubstTemplateTypeParmType 0x561be7a8aee0 'IPRewriterPattern *' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-PointerType 0x561be78769a0 'IPRewriterPattern *'
|       `-RecordType 0x561be7876490 'IPRewriterPattern'
|         `-CXXRecord 0x561be7876400 'IPRewriterPattern'
|-TypedefDecl 0x561be7a8d020 <line:131:5, col:22> col:22 const_iterator 'IPRewriterPattern *const *'
| `-PointerType 0x561be7a8c280 'IPRewriterPattern *const *'
|   `-QualType 0x561be7a8aee1 'IPRewriterPattern *const' const
|     `-SubstTemplateTypeParmType 0x561be7a8aee0 'IPRewriterPattern *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be78769a0 'IPRewriterPattern *'
|         `-RecordType 0x561be7876490 'IPRewriterPattern'
|           `-CXXRecord 0x561be7876400 'IPRewriterPattern'
|-EnumDecl 0x561be7a8d078 <line:134:5> col:5
| `-EnumConstantDecl 0x561be7a8d170 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IPRewriterPattern *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561be7a8d150 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561be7576bc8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561be7576ba0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561be7576b80 <col:40> 'int' 1
|-CXXConstructorDecl 0x561be7a8d1f8 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x561be7a8d488 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IPRewriterPattern *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7a8d2b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be7a8d350 <col:41, col:61> col:61 v 'Vector<IPRewriterPattern *>::value_argument_type':'IPRewriterPattern *'
|-CXXConstructorDecl 0x561be7a8d748 <line:139:5, col:37> col:12 Vector 'void (const Vector<IPRewriterPattern *> &)' inline
| `-ParmVarDecl 0x561be7a8d630 <col:19, col:36> col:36 x 'const Vector<IPRewriterPattern *> &'
|-CXXConstructorDecl 0x561be7a8da08 <line:141:5, col:32> col:12 Vector 'void (Vector<IPRewriterPattern *> &&)' inline
| `-ParmVarDecl 0x561be7a8d8f0 <col:19, col:31> col:31 x 'Vector<IPRewriterPattern *> &&'
|-CXXMethodDecl 0x561be7a8dd50 <line:144:5, col:51> col:23 operator= 'Vector<IPRewriterPattern *> &(const Vector<IPRewriterPattern *> &)' inline
| `-ParmVarDecl 0x561be7a8dc30 <col:33, col:50> col:50 x 'const Vector<IPRewriterPattern *> &'
|-CXXMethodDecl 0x561be7a8e060 <line:146:5, col:46> col:23 operator= 'Vector<IPRewriterPattern *> &(Vector<IPRewriterPattern *> &&)' inline
| `-ParmVarDecl 0x561be7a8df40 <col:33, col:45> col:45 x 'Vector<IPRewriterPattern *> &&'
|-CXXMethodDecl 0x561be7a8e350 <line:148:5, col:70> col:23 assign 'Vector<IPRewriterPattern *> &(Vector::size_type, Vector<IPRewriterPattern *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7a8e198 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be7a8e210 <col:43, col:69> col:63 v 'Vector<IPRewriterPattern *>::value_argument_type':'IPRewriterPattern *'
|-CXXMethodDecl 0x561be7a8e4a8 <line:150:5, col:55> col:49 begin 'Vector<IPRewriterPattern *>::iterator ()'
| |-NoInlineAttr 0x561be7a8e588 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7a8e5e0 <col:30> Inherited
|-CXXMethodDecl 0x561be7a8e628 <line:151:5, col:53> col:49 end 'Vector<IPRewriterPattern *>::iterator ()'
| |-NoInlineAttr 0x561be7a8e6d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7a8e730 <col:30> Inherited
|-CXXMethodDecl 0x561be7a8e7f8 <line:152:5, col:63> col:55 begin 'Vector<IPRewriterPattern *>::const_iterator () const'
| |-NoInlineAttr 0x561be7a8e8a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7a8e900 <col:30> Inherited
|-CXXMethodDecl 0x561be7a8e948 <line:153:5, col:61> col:55 end 'Vector<IPRewriterPattern *>::const_iterator () const'
| |-NoInlineAttr 0x561be7a8e9f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7a8ea50 <col:30> Inherited
|-CXXMethodDecl 0x561be7a8ea98 <line:154:5, col:64> col:55 cbegin 'Vector<IPRewriterPattern *>::const_iterator () const'
| |-NoInlineAttr 0x561be7a8eb48 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7a8eba0 <col:30> Inherited
|-CXXMethodDecl 0x561be7a8ebe8 <line:155:5, col:62> col:55 cend 'Vector<IPRewriterPattern *>::const_iterator () const'
| |-NoInlineAttr 0x561be7a8ec98 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7a8ecf0 <col:30> Inherited
|-CXXMethodDecl 0x561be7a8ed18 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be7a8edc8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be7a8ee78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561be7a8f038 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IPRewriterPattern *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7a8ef28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be7a8efa0 <col:37, col:63> col:57 v 'Vector<IPRewriterPattern *>::value_argument_type':'IPRewriterPattern *'
|-CXXMethodDecl 0x561be7a8f188 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561be7a8f0f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7a8f338 <line:163:5, col:65> col:43 operator[] 'IPRewriterPattern *&(Vector::size_type)'
| |-ParmVarDecl 0x561be7a8f240 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be7a8f3f0 <col:20>
| `-OptimizeNoneAttr 0x561be7a8f448 <col:30>
|-CXXMethodDecl 0x561be7a8f568 <line:164:5, col:73> col:49 operator[] 'IPRewriterPattern *const &(Vector::size_type) const'
| |-ParmVarDecl 0x561be7a8f470 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be7a8f620 <col:20>
| `-OptimizeNoneAttr 0x561be7a8f678 <col:30>
|-CXXMethodDecl 0x561be7a8f730 <line:165:5, col:29> col:15 at 'IPRewriterPattern *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561be7a8f6a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7a8f878 <line:166:5, col:37> col:21 at 'IPRewriterPattern *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be7a8f7e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7a8f9a8 <line:167:5, col:21> col:15 front 'IPRewriterPattern *&()' inline
|-CXXMethodDecl 0x561be7a8fad8 <line:168:5, col:29> col:21 front 'IPRewriterPattern *const &() const' inline
|-CXXMethodDecl 0x561be7a8fba8 <line:169:5, col:20> col:15 back 'IPRewriterPattern *&()' inline
|-CXXMethodDecl 0x561be7a8fc78 <line:170:5, col:28> col:21 back 'IPRewriterPattern *const &() const' inline
|-CXXMethodDecl 0x561be7a8fdb8 <line:172:5, col:39> col:15 unchecked_at 'IPRewriterPattern *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561be7a8fd28 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7a8ff00 <line:173:5, col:47> col:21 unchecked_at 'IPRewriterPattern *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be7a8fe70 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7a90048 <line:174:5, col:59> col:15 at_u 'IPRewriterPattern *&(Vector::size_type)' inline
| |-ParmVarDecl 0x561be7a8ffb8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be7a90100 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561be7a90200 <line:175:5, col:71> col:21 at_u 'IPRewriterPattern *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561be7a90170 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be7a902b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561be7a90378 <line:177:5, col:20> col:15 data 'IPRewriterPattern **()' inline
|-CXXMethodDecl 0x561be7a90478 <line:178:5, col:28> col:21 data 'IPRewriterPattern *const *() const' inline
|-CXXMethodDecl 0x561be7a90628 <line:180:5, col:48> col:17 used push_back 'void (Vector<IPRewriterPattern *>::value_argument_type)' inline
| `-ParmVarDecl 0x561be7a90538 <col:27, col:47> col:47 v 'Vector<IPRewriterPattern *>::value_argument_type':'IPRewriterPattern *'
|-FunctionTemplateDecl 0x561be7a90de8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561be7a906e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IPRewriterPattern *>':'fast_argument<IPRewriterPattern *, false>'
| `-CXXMethodDecl 0x561be7a90d48 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IPRewriterPattern *&&)' inline
|   `-ParmVarDecl 0x561be7a90c48 <col:58, col:62> col:62 v 'IPRewriterPattern *&&'
|-CXXMethodDecl 0x561be7a90ec8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be7a91018 <line:186:5, col:49> col:17 push_front 'void (Vector<IPRewriterPattern *>::value_argument_type)' inline
| `-ParmVarDecl 0x561be7a90f88 <col:28, col:48> col:48 v 'Vector<IPRewriterPattern *>::value_argument_type':'IPRewriterPattern *'
|-CXXMethodDecl 0x561be7a910d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561be7a91318 <line:189:5, col:62> col:21 insert 'Vector<IPRewriterPattern *>::iterator (Vector<IPRewriterPattern *>::iterator, Vector<IPRewriterPattern *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7a91190 <col:28, col:37> col:37 it 'Vector<IPRewriterPattern *>::iterator':'IPRewriterPattern **'
| `-ParmVarDecl 0x561be7a91208 <col:41, col:61> col:61 v 'Vector<IPRewriterPattern *>::value_argument_type':'IPRewriterPattern *'
|-CXXMethodDecl 0x561be7a914d8 <line:190:5, col:38> col:21 erase 'Vector<IPRewriterPattern *>::iterator (Vector<IPRewriterPattern *>::iterator)' inline
| `-ParmVarDecl 0x561be7a913e8 <col:27, col:36> col:36 it 'Vector<IPRewriterPattern *>::iterator':'IPRewriterPattern **'
|-CXXMethodDecl 0x561be7a91728 <line:191:5, col:49> col:21 erase 'Vector<IPRewriterPattern *>::iterator (Vector<IPRewriterPattern *>::iterator, Vector<IPRewriterPattern *>::iterator)' inline
| |-ParmVarDecl 0x561be7a915a0 <col:27, col:36> col:36 a 'Vector<IPRewriterPattern *>::iterator':'IPRewriterPattern **'
| `-ParmVarDecl 0x561be7a91618 <col:39, col:48> col:48 b 'Vector<IPRewriterPattern *>::iterator':'IPRewriterPattern **'
|-CXXMethodDecl 0x561be7a917e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be7a91a48 <line:195:5, col:34> col:17 swap 'void (Vector<IPRewriterPattern *> &)' inline
| `-ParmVarDecl 0x561be7a91950 <col:22, col:33> col:33 x 'Vector<IPRewriterPattern *> &'
`-CXXDestructorDecl 0x561be7a91b18 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561be7a91b18

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IPRewriterPattern
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   int _sport
         8 |   class IPAddress _daddr
         8 |     uint32_t _addr
        12 |   int _dport
        16 |   uint32_t _variation_top
        20 |   uint32_t _next_variation
        24 |   _Bool _is_napt
        25 |   _Bool _sequential
        26 |   _Bool _same_first
        28 |   int _refcount
           | [sizeof=32, dsize=32, align=4,
           |  nvsize=32, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be75ca360 prev 0x561be753fde8 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561be75ca458 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x561be75ca4e8 <col:19, col:25> col:19 public
|-TypedefDecl 0x561be75ca520 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x561be73b67b0 'uninitialized_type'
|   `-CXXRecord 0x561be73b6718 'uninitialized_type'
|-CXXConstructorDecl 0x561be75ca5e0 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x561be75d1ea0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x561be75d1f48 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561be75d1f08 <col:10> 'int' 0
| `-CompoundStmt 0x561be75d1f90 <col:13, line:22:5>
|-CXXConstructorDecl 0x561be75ca730 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x561be75ca6a0 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x561be75d1ea0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x561be75d1fe0 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x561be75d1fa0 <col:10> 'unsigned int' lvalue ParmVar 0x561be75ca6a0 'x' 'unsigned int'
| `-CompoundStmt 0x561be75d2028 <col:13, line:27:5>
|-CXXConstructorDecl 0x561be75ca888 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x561be75ca7f8 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x561be75d1ea0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x561be75d2090 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x561be75d2078 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x561be75d2038 <col:10> 'int' lvalue ParmVar 0x561be75ca7f8 'x' 'int'
| `-CompoundStmt 0x561be75d20d8 <col:13, line:31:5>
|-CXXConstructorDecl 0x561be75ca9e0 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x561be75ca950 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x561be75d1ea0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x561be75d2140 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x561be75d2128 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x561be75d20e8 <col:10> 'unsigned long' lvalue ParmVar 0x561be75ca950 'x' 'unsigned long'
| `-CompoundStmt 0x561be75d2188 <col:13, line:35:5>
|-CXXConstructorDecl 0x561be75cab38 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x561be75caaa8 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x561be75d1ea0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x561be75d21f0 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x561be75d21d8 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x561be75d2198 <col:10> 'long' lvalue ParmVar 0x561be75caaa8 'x' 'long'
| `-CompoundStmt 0x561be75d2238 <col:13, line:39:5>
|-CXXConstructorDecl 0x561be75cacf8 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x561be75cac08 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x561be75d1ea0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x561be75d22b8 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x561be75d2268 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x561be74f8b90
| |     `-DeclRefExpr 0x561be75d2248 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x561be75cac08 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x561be75d2300 <col:20, line:44:5>
|-CXXConstructorDecl 0x561be75cffd0 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x561be75cadc0 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x561be75d2468 <col:51, line:56:5>
|   `-BinaryOperator 0x561be75d2448 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x561be75d2320 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x561be75d1ea0
|     | `-CXXThisExpr 0x561be75d2310 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x561be75d2430 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x561be75d2418 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x561be75d23f8 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x561be75d23c8 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x561be75d23b0 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x561be75d2350 <col:47> 'const unsigned char *' lvalue ParmVar 0x561be75cadc0 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x561be75d0120 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x561be75d0090 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x561be75d02c8 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x561be75d0208 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x561be75d24d8 <col:56, line:68:5>
|   `-CStyleCastExpr 0x561be75d24b0 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x561be75d2480 <col:9> 'const uninitialized_type' lvalue ParmVar 0x561be75d0208 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x561be75d0458 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x561be75d0390 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x561be75d0548 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x561be75d3498 <col:46, line:83:5>
|   `-ReturnStmt 0x561be75d3488 <line:82:2, col:29>
|     `-ExprWithCleanups 0x561be75d3470 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x561be75d3440 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561be75d32f8 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x561be75d31e0 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x561be75d30c8 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x561be75d2500 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x561be75d0638 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x561be75d3548 <col:31, line:88:5>
|   `-ReturnStmt 0x561be75d3538 <line:87:2, col:10>
|     `-UnaryOperator 0x561be75d3520 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x561be75d3508 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x561be75d34f0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x561be75d34c0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x561be75d1ea0
|             `-CXXThisExpr 0x561be75d34b0 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x561be75d06f8 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x561be75d35c8 <col:34, line:93:5>
|   `-ReturnStmt 0x561be75d35b8 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x561be75d35a0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561be75d3570 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x561be75d1ea0
|         `-CXXThisExpr 0x561be75d3560 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x561be75d07c8 <line:99:5, line:101:5> line:99:12 used operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x561be75d3648 <col:38, line:101:5>
|   `-ReturnStmt 0x561be75d3638 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x561be75d3620 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561be75d35f0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x561be75d1ea0
|         `-CXXThisExpr 0x561be75d35e0 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x561be75d0898 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x561be75d3918 <col:38, line:108:5>
|   `-ReturnStmt 0x561be75d3908 <line:107:2, col:58>
|     `-BinaryOperator 0x561be75d38e8 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x561be75d3800 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x561be75d37e0 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x561be75d37c8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x561be75d3670 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x561be75d1ea0
|       |   |   `-CXXThisExpr 0x561be75d3660 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x561be75d37a0 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x561be75d3788 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x561be75d3708 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x561be7506078 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x561be75d36e8 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x561be75d38c0 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x561be75d38a8 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x561be75d3888 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x561be7506078 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x561be75d3868 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x561be75d0958 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x561be75d3b88 <col:39, line:112:5>
|   `-ReturnStmt 0x561be75d3b78 <line:111:2, col:56>
|     `-BinaryOperator 0x561be75d3b58 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x561be75d3a70 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x561be75d3a50 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x561be75d3a38 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x561be75d3940 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x561be75d1ea0
|       |   |   `-CXXThisExpr 0x561be75d3930 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x561be75d3a10 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x561be75d39f8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x561be75d39d8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x561be7506078 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x561be75d39b8 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x561be75d3b30 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x561be75d3b18 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x561be75d3af8 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x561be7506078 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x561be75d3ad8 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x561be75d0a88 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x561be75d0b90 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x561be75d0ca0 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x561be75d0d90 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x561be75d0e50 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x561be75d0f18 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x561be75d1118 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x561be75d0fc8 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x561be75d1040 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x561be75d1298 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x561be75d11d8 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x561be75d13e0 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x561be75d1350 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x561be75d1588 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x561be75d1498 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x561be75d16d0 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x561be75d1640 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x561be75d1818 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x561be75d1788 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x561be75d18e0 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x561be75d19a0 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x561be75d1b18 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x561be75d1a50 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x561be75d1be0 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x561be75d1cc8 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x561be75d1d70 <col:51> "" ""
|-TypedefDecl 0x561be75d1e10 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x561be753fe80 'IPAddress'
|   `-CXXRecord 0x561be75ca360 'IPAddress'
|-AccessSpecDecl 0x561be75d1e68 <line:150:3, col:10> col:3 private
|-FieldDecl 0x561be75d1ea0 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561be75d2548 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x561be75d2658 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x561be75d1ea0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x561be7870df8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x561be7870db0 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x561be75d1ea0
| |     `-DeclRefExpr 0x561be7870d90 <col:7> 'const IPAddress' lvalue ParmVar 0x561be75d2658 '' 'const IPAddress &'
| `-CompoundStmt 0x561be7870e40 <col:7>
|-CXXConstructorDecl 0x561be75d26f8 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x561be75d2808 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x561be75d1ea0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x561be75d33e8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x561be75d33a0 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x561be75d1ea0
| |     `-CXXStaticCastExpr 0x561be75d3370 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x561be75d3340 <col:7> 'IPAddress' lvalue ParmVar 0x561be75d2808 '' 'IPAddress &&'
| `-CompoundStmt 0x561be75d3430 <col:7>
|-CXXDestructorDecl 0x561be75d30f8 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561be78716e8 <col:7> col:7 implicit used operator= 'IPAddress &(const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x561be78717f8 <col:7> col:7 used 'const IPAddress &'
| `-CompoundStmt 0x561be7871b50 <col:7>
|   |-BinaryOperator 0x561be7871af8 <col:7> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x561be7871ab0 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x561be75d1ea0
|   | | `-CXXThisExpr 0x561be7871aa0 <col:7> 'IPAddress *' this
|   | `-ImplicitCastExpr 0x561be7871ae0 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x561be7871a70 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x561be75d1ea0
|   |     `-DeclRefExpr 0x561be7871a50 <col:7> 'const IPAddress' lvalue ParmVar 0x561be78717f8 '' 'const IPAddress &'
|   `-ReturnStmt 0x561be7871b40 <col:7>
|     `-UnaryOperator 0x561be7871b28 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561be7871b18 <col:7> 'IPAddress *' this
`-CXXMethodDecl 0x561be7871868 <col:7> col:7 implicit operator= 'IPAddress &(IPAddress &&)' inline default trivial noexcept-unevaluated 0x561be7871868
  `-ParmVarDecl 0x561be7871978 <col:7> col:7 'IPAddress &&'

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be7876400 <../elements/ip/iprwpattern.hh:12:1, line:68:1> line:12:7 class IPRewriterPattern definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561be7876518 <col:1, col:7> col:7 implicit referenced class IPRewriterPattern
|-AccessSpecDecl 0x561be78765a8 <col:27, col:33> col:27 public
|-CXXConstructorDecl 0x561be7876b18 <line:14:5, line:17:27> line:14:5 IPRewriterPattern 'void (const IPAddress &, int, const IPAddress &, int, bool, bool, bool, uint32_t)'
| |-ParmVarDecl 0x561be78765e0 <col:23, col:40> col:40 saddr 'const IPAddress &'
| |-ParmVarDecl 0x561be7876660 <col:47, col:51> col:51 sport 'int'
| |-ParmVarDecl 0x561be78766d8 <line:15:9, col:26> col:26 daddr 'const IPAddress &'
| |-ParmVarDecl 0x561be7876758 <col:33, col:37> col:37 dport 'int'
| |-ParmVarDecl 0x561be78767d0 <line:16:9, col:14> col:14 is_napt 'bool'
| |-ParmVarDecl 0x561be7876848 <col:23, col:28> col:28 sequential 'bool'
| |-ParmVarDecl 0x561be78768c0 <col:40, col:45> col:45 same_first 'bool'
| `-ParmVarDecl 0x561be7876938 <line:17:9, col:18> col:18 variation 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7876ff8 <line:18:5, line:19:45> line:18:17 used parse 'bool (const Vector<String> &, IPRewriterPattern **, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x561be7876d10 <col:23, col:45> col:45 words 'const Vector<String> &'
| |-ParmVarDecl 0x561be7876dc0 <col:52, col:72> col:72 result 'IPRewriterPattern **'
| |-ParmVarDecl 0x561be7876e38 <line:19:9, col:18> col:18 context 'Element *'
| `-ParmVarDecl 0x561be7876eb0 <col:27, col:41> col:41 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561be7877978 <line:20:5, line:21:42> line:20:17 parse_ports 'bool (const Vector<String> &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x561be78771a0 <col:29, col:51> col:51 words 'const Vector<String> &'
| |-ParmVarDecl 0x561be7877248 <col:58, col:75> col:75 input 'IPRewriterInput *'
| |-ParmVarDecl 0x561be78772c0 <line:21:8, col:17> col:17 model 'Element *'
| `-ParmVarDecl 0x561be7877830 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561be7877ca8 <line:22:5, line:23:42> line:22:17 parse_with_ports 'bool (const String &, IPRewriterInput *, Element *, ErrorHandler *)' static
| |-ParmVarDecl 0x561be7877a48 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x561be7877ac0 <col:53, col:70> col:70 input 'IPRewriterInput *'
| |-ParmVarDecl 0x561be7877b38 <line:23:6, col:15> col:15 context 'Element *'
| `-ParmVarDecl 0x561be7877bb0 <col:24, col:38> col:38 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561be7877d88 <line:25:5, line:27:5> line:25:10 used use 'void ()'
| `-CompoundStmt 0x561be78790e0 <col:16, line:27:5>
|   `-UnaryOperator 0x561be78790c8 <line:26:2, col:11> 'int' postfix '++'
|     `-MemberExpr 0x561be7879098 <col:2> 'int' lvalue ->_refcount 0x561be7878cc8
|       `-CXXThisExpr 0x561be7879088 <col:2> 'IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x561be7877e48 <line:28:5, line:31:5> line:28:10 unuse 'void ()'
| `-CompoundStmt 0x561be78792d8 <col:18, line:31:5>
|   `-IfStmt 0x561be78792c0 <line:29:2, line:30:13>
|     |-BinaryOperator 0x561be7879188 <line:29:6, col:21> 'bool' '<='
|     | |-ImplicitCastExpr 0x561be7879170 <col:6, col:8> 'int' <LValueToRValue>
|     | | `-UnaryOperator 0x561be7879138 <col:6, col:8> 'int' lvalue prefix '--'
|     | |   `-MemberExpr 0x561be7879108 <col:8> 'int' lvalue ->_refcount 0x561be7878cc8
|     | |     `-CXXThisExpr 0x561be78790f8 <col:8> 'IPRewriterPattern *' implicit this
|     | `-IntegerLiteral 0x561be7879150 <col:21> 'int' 0
|     `-CXXDeleteExpr 0x561be78792a0 <line:30:6, col:13> 'void' Function 0x561be73b48f8 'operator delete' 'void (void *) noexcept'
|       `-CXXThisExpr 0x561be78791a8 <col:13> 'IPRewriterPattern *' this
|-CXXConversionDecl 0x561be7877f48 <line:33:5, line:35:5> line:33:5 operator bool 'bool () const'
| `-CompoundStmt 0x561be78795c0 <col:27, line:35:5>
|   `-ReturnStmt 0x561be78795b0 <line:34:2, col:39>
|     `-BinaryOperator 0x561be7879590 <col:9, col:39> 'bool' '||'
|       |-BinaryOperator 0x561be7879500 <col:9, col:29> 'bool' '||'
|       | |-BinaryOperator 0x561be7879420 <col:9, col:19> 'bool' '||'
|       | | |-ImplicitCastExpr 0x561be78793d8 <col:9> 'bool' <IntegralToBoolean>
|       | | | `-ImplicitCastExpr 0x561be78793c0 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | | |   `-CXXMemberCallExpr 0x561be78793a0 <col:9> 'uint32_t':'unsigned int'
|       | | |     `-MemberExpr 0x561be7879370 <col:9> '<bound member function type>' .operator unsigned int 0x561be75d07c8
|       | | |       `-MemberExpr 0x561be7879300 <col:9> 'const IPAddress' lvalue ->_saddr 0x561be7878950
|       | | |         `-CXXThisExpr 0x561be78792f0 <col:9> 'const IPRewriterPattern *' implicit this
|       | | `-ImplicitCastExpr 0x561be7879408 <col:19> 'bool' <IntegralToBoolean>
|       | |   `-ImplicitCastExpr 0x561be78793f0 <col:19> 'int' <LValueToRValue>
|       | |     `-MemberExpr 0x561be7879340 <col:19> 'const int' lvalue ->_sport 0x561be78789b8
|       | |       `-CXXThisExpr 0x561be7879330 <col:19> 'const IPRewriterPattern *' implicit this
|       | `-ImplicitCastExpr 0x561be78794e8 <col:29> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x561be78794d0 <col:29> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x561be78794b0 <col:29> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x561be7879480 <col:29> '<bound member function type>' .operator unsigned int 0x561be75d07c8
|       |         `-MemberExpr 0x561be7879450 <col:29> 'const IPAddress' lvalue ->_daddr 0x561be7878a18
|       |           `-CXXThisExpr 0x561be7879440 <col:29> 'const IPRewriterPattern *' implicit this
|       `-ImplicitCastExpr 0x561be7879578 <col:39> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x561be7879560 <col:39> 'int' <LValueToRValue>
|           `-MemberExpr 0x561be7879530 <col:39> 'const int' lvalue ->_dport 0x561be7878a80
|             `-CXXThisExpr 0x561be7879520 <col:39> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x561be7878018 <line:36:5, line:38:5> line:36:15 daddr 'IPAddress () const'
| `-CompoundStmt 0x561be7879658 <col:29, line:38:5>
|   `-ReturnStmt 0x561be7879648 <line:37:2, col:9>
|     `-CXXConstructExpr 0x561be7879618 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x561be78795e8 <col:9> 'const IPAddress' lvalue ->_daddr 0x561be7878a18
|         `-CXXThisExpr 0x561be78795d8 <col:9> 'const IPRewriterPattern *' implicit this
|-CXXMethodDecl 0x561be78786e0 <line:40:5, line:41:57> line:40:9 rewrite_flowid 'int (const IPFlowID &, IPFlowID &, const HashContainer<IPRewriterEntry> &)'
| |-ParmVarDecl 0x561be78780c8 <col:24, col:40> col:40 flowid 'const IPFlowID &'
| |-ParmVarDecl 0x561be7878168 <col:48, col:58> col:58 rewritten_flowid 'IPFlowID &'
| `-ParmVarDecl 0x561be78785b0 <line:41:10, col:48> col:48 reply_map 'const HashContainer<IPRewriterEntry> &'
|-CXXMethodDecl 0x561be78787b8 <line:43:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x561be7878878 <line:45:5, line:47:5> line:45:21 get_flow_id 'IPFlowID () const' inline
| `-CompoundStmt 0x561be7879900 <col:41, line:47:5>
|   `-ReturnStmt 0x561be78798f0 <line:46:9, col:55>
|     `-ExprWithCleanups 0x561be78798d8 <col:16, col:55> 'IPFlowID'
|       `-CXXConstructExpr 0x561be78798a8 <col:16, col:55> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561be7879890 <col:16, col:55> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x561be7879840 <col:16, col:55> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x561be7879780 <col:25> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x561be7879690 <col:25> 'const IPAddress' lvalue ->_saddr 0x561be7878950
|             |   `-CXXThisExpr 0x561be7879680 <col:25> 'const IPRewriterPattern *' implicit this
|             |-ImplicitCastExpr 0x561be78797c8 <col:33> 'uint16_t':'unsigned short' <IntegralCast>
|             | `-ImplicitCastExpr 0x561be78797b0 <col:33> 'int' <LValueToRValue>
|             |   `-MemberExpr 0x561be78796d0 <col:33> 'const int' lvalue ->_sport 0x561be78789b8
|             |     `-CXXThisExpr 0x561be78796c0 <col:33> 'const IPRewriterPattern *' implicit this
|             |-CXXConstructExpr 0x561be78797e0 <col:41> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x561be7879710 <col:41> 'const IPAddress' lvalue ->_daddr 0x561be7878a18
|             |   `-CXXThisExpr 0x561be7879700 <col:41> 'const IPRewriterPattern *' implicit this
|             `-ImplicitCastExpr 0x561be7879828 <col:49> 'uint16_t':'unsigned short' <IntegralCast>
|               `-ImplicitCastExpr 0x561be7879810 <col:49> 'int' <LValueToRValue>
|                 `-MemberExpr 0x561be7879750 <col:49> 'const int' lvalue ->_dport 0x561be7878a80
|                   `-CXXThisExpr 0x561be7879740 <col:49> 'const IPRewriterPattern *' implicit this
|-AccessSpecDecl 0x561be7878918 <line:49:1, col:8> col:1 private
|-FieldDecl 0x561be7878950 <line:51:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x561be78789b8 <line:52:5, col:9> col:9 referenced _sport 'int'
|-FieldDecl 0x561be7878a18 <line:53:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x561be7878a80 <line:54:5, col:9> col:9 referenced _dport 'int'
|-FieldDecl 0x561be7878ae0 <line:56:5, col:14> col:14 _variation_top 'uint32_t':'unsigned int'
|-FieldDecl 0x561be7878b40 <line:57:5, col:14> col:14 _next_variation 'uint32_t':'unsigned int'
|-FieldDecl 0x561be7878ba0 <line:59:5, col:10> col:10 _is_napt 'bool'
|-FieldDecl 0x561be7878c00 <line:60:5, col:10> col:10 _sequential 'bool'
|-FieldDecl 0x561be7878c60 <line:61:5, col:10> col:10 _same_first 'bool'
|-FieldDecl 0x561be7878cc8 <line:63:5, col:9> col:9 referenced _refcount 'int'
|-CXXConstructorDecl 0x561be7878e18 <line:65:5, col:47> col:5 IPRewriterPattern 'void (const IPRewriterPattern &)'
| `-ParmVarDecl 0x561be7878d58 <col:23, col:46> col:47 'const IPRewriterPattern &'
|-CXXMethodDecl 0x561be7878fc8 <line:66:5, col:58> col:24 operator= 'IPRewriterPattern &(const IPRewriterPattern &)'
| `-ParmVarDecl 0x561be7878ed8 <col:34, col:57> col:58 'const IPRewriterPattern &'
`-CXXDestructorDecl 0x561be78791b8 <line:12:7> col:7 implicit ~IPRewriterPattern 'void ()' inline default trivial noexcept-unevaluated 0x561be78791b8

Layout: <CGRecordLayout
  LLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  NonVirtualBaseLLVMType:%class.IPRewriterPattern = type { %class.IPAddress, i32, %class.IPAddress, i32, i32, i32, i8, i8, i8, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be77a25c8 prev 0x561be7794af0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561be77a26c0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x561be77a27b0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x561be77a28d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x561be77a2a58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x561be77a2bd8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x561be77a2d58 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x561be77b76a8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561be77b7f18 <col:11>
|-CXXDestructorDecl 0x561be77b7780 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x561be77b78b8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x561be77b78b8
| `-ParmVarDecl 0x561be77b79c8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x561be77b7a68 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561be77b7a68
| `-ParmVarDecl 0x561be77b7b78 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x561be77ba8a8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x561be77ba9b8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x561be77bac38 <col:11>
|   `-ReturnStmt 0x561be77bac28 <col:11>
|     `-UnaryOperator 0x561be77bac10 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561be77bac00 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x561be77baa28 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561be77baa28
  `-ParmVarDecl 0x561be77bab38 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be77a2dc0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561be77a2ed8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x561be77a2f78 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x561be77a2fe0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x561be77a3048 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x561be77a30b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x561be77a3110 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x561be77a31d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x561be77a3230 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x561be77a3290 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x561be77b75b8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x561be77a2f78 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x561be77b7f28 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x561be77b7f80 <col:12>
|-CXXConstructorDecl 0x561be77b7be8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x561be77b7be8
| `-ParmVarDecl 0x561be77b7cf8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x561be77b7d98 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x561be77b7d98
| `-ParmVarDecl 0x561be77b7ea8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x561be77b9f90 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be778e1c0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561be778e348 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x561be778e3d8 <col:16, col:22> col:16 public
|-EnumDecl 0x561be778e400 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x561be778e500 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x561be778e5e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be778e4e0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x561be778e4c0 <col:21> 'int' 28
| `-EnumConstantDecl 0x561be778e590 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x561be778e5f8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be778e570 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x561be778e550 <col:22> 'int' 64
|-CXXMethodDecl 0x561be778e938 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x561be778e620 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be778e6a0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x561be778e718 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be778e790 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561be778e9f8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x561be778ebf8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x561be778ea70 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x561be778eae8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561be778eca8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x561be778ee08 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x561be778ed18 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561be778eeb0 <col:72> warn_unused_result ""
|-TypedefDecl 0x561be778f1e0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x561be778f170 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x561be778f110 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x561be778f0d0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x561be725a4e0 'void'
|       |-PointerType 0x561be750a500 'unsigned char *'
|       | `-BuiltinType 0x561be725a5e0 'unsigned char'
|       |-TypedefType 0x561be73067f0 'size_t' sugar
|       | |-Typedef 0x561be72cabe0 'size_t'
|       | `-BuiltinType 0x561be725a640 'unsigned long'
|       `-PointerType 0x561be725ace0 'void *'
|         `-BuiltinType 0x561be725a4e0 'void'
|-CXXMethodDecl 0x561be778f658 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x561be778f250 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x561be778f2c8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be778f360 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x561be778f3e0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x561be77adb10 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x561be77adaf8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x561be77adac0 <col:58> 'int' 0
| |-ParmVarDecl 0x561be778f460 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x561be77adb38 <col:76> 'int' 0
| |-ParmVarDecl 0x561be778f4e0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x561be77adb58 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x561be778f728 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x561be778f7a8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x561be778f868 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x561be778f908 <col:20>
| `-OptimizeNoneAttr 0x561be778f960 <col:30>
|-CXXMethodDecl 0x561be778f9d8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x561be778fa78 <col:20>
| `-OptimizeNoneAttr 0x561be778fad0 <col:30>
|-CXXMethodDecl 0x561be778fb48 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x561be778fbe8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x561be778fc98 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x561be778fd38 <col:20>
| |-OptimizeNoneAttr 0x561be778fd90 <col:30>
| `-WarnUnusedResultAttr 0x561be778fdb8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x561be778fe10 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x561be778feb0 <col:20>
| `-OptimizeNoneAttr 0x561be778ff08 <col:30>
|-CXXMethodDecl 0x561be778ff58 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x561be778fff8 <col:20>
| `-OptimizeNoneAttr 0x561be7790050 <col:30>
|-CXXMethodDecl 0x561be7790098 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x561be7790138 <col:20>
| `-OptimizeNoneAttr 0x561be7790190 <col:30>
|-CXXMethodDecl 0x561be77901d8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x561be7790298 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x561be7790360 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x561be7790428 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x561be77904e8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561be7790608 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x561be77adc20 <col:54, line:99:5>
|   `-ReturnStmt 0x561be77adc10 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x561be77adbf8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x561be77adbc8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x561be77ac9b8
|         `-CXXThisExpr 0x561be77adbb8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x561be77907a8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x561be77906b8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x561be77adcd0 <col:67, line:103:5>
|   `-BinaryOperator 0x561be77adcb0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x561be77adc48 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x561be77ac9b8
|     | `-CXXThisExpr 0x561be77adc38 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x561be77adc98 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x561be77adc78 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x561be77906b8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x561be77908a0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x561be77add50 <col:33, line:107:5>
|   `-ReturnStmt 0x561be77add40 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x561be77add28 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x561be77adcf8 <col:16> 'void *' lvalue ->_destructor_argument 0x561be77aca20
|         `-CXXThisExpr 0x561be77adce8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x561be7790960 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x561be77ae380 <col:25, line:113:5>
|   |-ParenExpr 0x561be77ae0c8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x561be77ae098 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x561be77ade08 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x561be77adde0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x561be77adda8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x561be77add78 <col:24> '<bound member function type>' ->shared 0x561be778f9d8
|   |   |       `-ImplicitCastExpr 0x561be77addc8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x561be77add68 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x561be77ade68 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77ade48 <col:42> 'int' 0
|   |   `-CallExpr 0x561be77adff8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x561be77adfe0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77adfc0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77ae038 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77aded8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x561be77ae050 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77adf00 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561be77ae068 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77adf38 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x561be77ae080 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77adfa8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77adf90 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77adf58 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x561be77ae2c8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x561be77ae0f8 <col:2> 'unsigned char *' lvalue ->_head 0x561be77a33d0
|   | | `-CXXThisExpr 0x561be77ae0e8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x561be77ae2b0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x561be77ae290 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x561be77ae138 <col:10> 'unsigned char *' lvalue ->_data 0x561be77a3438
|   |     | `-CXXThisExpr 0x561be77ae128 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x561be77ae278 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x561be77ae258 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x561be77ae178 <col:18> 'unsigned char *' lvalue ->_tail 0x561be77ac890
|   |         | `-CXXThisExpr 0x561be77ae168 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x561be77ae240 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x561be77ae220 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x561be77ae1b8 <col:26> 'unsigned char *' lvalue ->_end 0x561be77ac8f8
|   |             | `-CXXThisExpr 0x561be77ae1a8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x561be77ae208 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x561be77ae1e8 <col:33> 'int' 0
|   `-BinaryOperator 0x561be77ae360 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x561be77ae2f8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x561be77ac9b8
|     | `-CXXThisExpr 0x561be77ae2e8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x561be77ae348 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x561be77ae328 <col:16> 'int' 0
|-CXXMethodDecl 0x561be7790aa0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x561be7790a10 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561be7790b48 <col:20>
| |-OptimizeNoneAttr 0x561be7790ba0 <col:30>
| `-WarnUnusedResultAttr 0x561be7790bc8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x561be7790c98 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x561be7790c08 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561be7790d40 <col:20>
| |-OptimizeNoneAttr 0x561be7790d98 <col:30>
| `-WarnUnusedResultAttr 0x561be7790dc0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x561be7790ef8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x561be7790e00 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561be7790fa0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x561be77910a0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x561be7791010 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561be7791148 <col:20>
| `-OptimizeNoneAttr 0x561be77911a0 <col:30>
|-CXXMethodDecl 0x561be7791268 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x561be77911d8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561be7791310 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x561be7791410 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x561be7791380 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561be77914b8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x561be77915b8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x561be7791528 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561be7791660 <col:20>
| `-OptimizeNoneAttr 0x561be77916b8 <col:30>
|-CXXMethodDecl 0x561be7791848 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x561be77916f8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x561be7791770 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x561be77adb78 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x561be77918f8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x561be7791af8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x561be7791970 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x561be77919e8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7791d08 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x561be7791bb8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561be7791c30 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7791f18 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x561be7791dc8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x561be7791e48 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x561be77adb88 <col:39> 'int' 0
|-CXXMethodDecl 0x561be7791fe8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x561be77920b0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x561be7792178 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x561be7792238 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561be7792318 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x561be7792460 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x561be77923d0 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x561be7792630 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x561be7792520 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x561be7792598 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7792700 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x561be77927c0 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x561be7792860 <col:20>
| `-OptimizeNoneAttr 0x561be77928b8 <col:30>
|-CXXMethodDecl 0x561be7792908 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x561be77929a8 <col:20>
| `-OptimizeNoneAttr 0x561be7792a00 <col:30>
|-CXXMethodDecl 0x561be7792a50 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x561be7792b10 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561be7792bd8 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x561be7792c78 <col:20>
| `-OptimizeNoneAttr 0x561be7792cd0 <col:30>
|-CXXMethodDecl 0x561be7792e20 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x561be7792d10 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x561be7792d88 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7792f70 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x561be7792ee0 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7793038 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x561be77930f8 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x561be7793198 <col:20>
| `-OptimizeNoneAttr 0x561be77931f0 <col:30>
|-CXXMethodDecl 0x561be7793240 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x561be77932e0 <col:20>
| `-OptimizeNoneAttr 0x561be7793338 <col:30>
|-CXXMethodDecl 0x561be7793388 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x561be7793450 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x561be77934f0 <col:20>
| `-OptimizeNoneAttr 0x561be7793548 <col:30>
|-CXXMethodDecl 0x561be7793590 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x561be77936a8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x561be7793818 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x561be7793758 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x561be7793908 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x561be77939a8 <col:20>
| `-OptimizeNoneAttr 0x561be7793a00 <col:30>
|-CXXMethodDecl 0x561be7793a50 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x561be7793b10 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561be7793d48 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x561be7793bc0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x561be7793c38 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561be7793df8 <col:20>
| `-OptimizeNoneAttr 0x561be7793e50 <col:30>
|-CXXMethodDecl 0x561be7793ef8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x561be7793f98 <col:20>
| `-OptimizeNoneAttr 0x561be7793ff0 <col:30>
|-CXXMethodDecl 0x561be7794040 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x561be77940e0 <col:20>
| `-OptimizeNoneAttr 0x561be7794138 <col:30>
|-CXXMethodDecl 0x561be7794180 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x561be7794220 <col:20>
| `-OptimizeNoneAttr 0x561be7794278 <col:30>
|-CXXMethodDecl 0x561be7794378 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x561be77942b0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x561be7794420 <col:20>
| `-OptimizeNoneAttr 0x561be7794478 <col:30>
|-CXXMethodDecl 0x561be7794638 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x561be77944b0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x561be7794528 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561be77946e8 <col:20>
| `-OptimizeNoneAttr 0x561be7794740 <col:30>
|-CXXMethodDecl 0x561be77947e8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x561be7794908 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x561be7794a28 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x561be7794ac8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x561be7794af0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x561be7794c18 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x561be7794cb8 <col:20>
| `-OptimizeNoneAttr 0x561be7794d10 <col:30>
|-CXXMethodDecl 0x561be7794db8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x561be7794e58 <col:20>
| `-OptimizeNoneAttr 0x561be7794eb0 <col:30>
|-AccessSpecDecl 0x561be7794ed8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x561be7794f00 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x561be7795000 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x561be7795050 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be7794fe0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x561be7794fc0 <col:14> 'int' 48
|-CXXMethodDecl 0x561be77950b8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x561be7795158 <col:20>
| `-OptimizeNoneAttr 0x561be77951b0 <col:30>
|-CXXMethodDecl 0x561be7795228 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x561be77952c8 <col:20>
| `-OptimizeNoneAttr 0x561be7795320 <col:30>
|-CXXMethodDecl 0x561be77953e8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x561be7795358 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x561be7795588 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x561be7795728 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x561be7795638 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x561be77957d0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x561be77958d0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561be7795c80 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77958b0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x561be7795890 <col:9> 'int' 0
| |-EnumConstantDecl 0x561be7795960 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561be7795c98 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7795940 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x561be7795920 <col:14> 'int' 1
| |-EnumConstantDecl 0x561be77959f0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561be7795cb0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77959d0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x561be77959b0 <col:14> 'int' 2
| |-EnumConstantDecl 0x561be7795a80 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561be7795cc8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7795a60 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x561be7795a40 <col:14> 'int' 3
| |-EnumConstantDecl 0x561be7795b10 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561be7795ce0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7795af0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x561be7795ad0 <col:13> 'int' 4
| |-EnumConstantDecl 0x561be7795ba0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561be7795cf8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7795b80 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x561be7795b60 <col:13> 'int' 5
| `-EnumConstantDecl 0x561be7795c30 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x561be7795d10 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be7795c10 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x561be7795bf0 <col:14> 'int' 6
|-CXXMethodDecl 0x561be7795d78 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x561be7795e18 <col:20>
| `-OptimizeNoneAttr 0x561be7795e70 <col:30>
|-CXXMethodDecl 0x561be7795f68 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x561be7795ea8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x561be7796010 <col:20>
| `-OptimizeNoneAttr 0x561be7796068 <col:30>
|-CXXMethodDecl 0x561be77960d8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x561be7796200 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x561be77963c8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x561be7796300 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x561be7796490 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x561be7796558 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x561be7796698 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x561be7796608 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x561be7796740 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x561be7796840 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x561be7796a40 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7796820 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x561be7796800 <col:23> 'int' 0
| |-EnumConstantDecl 0x561be77968d0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x561be7796a58 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77968b0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x561be7796890 <col:45> 'int' 4
| |-EnumConstantDecl 0x561be7796960 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x561be7796a70 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7796940 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x561be7796920 <col:24> 'int' 0
| `-EnumConstantDecl 0x561be77969f0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x561be7796a88 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be77969d0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x561be77969b0 <col:47> 'int' 16
|-CXXMethodDecl 0x561be7796ae8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x561be7796c58 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x561be7796b98 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x561be7796d00 <col:20>
| `-OptimizeNoneAttr 0x561be7796d58 <col:30>
|-CXXMethodDecl 0x561be7796da8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x561be77ae4a0 <col:18, col:36>
|   `-ReturnStmt 0x561be77ae490 <col:20, col:33>
|     `-ImplicitCastExpr 0x561be77ae478 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x561be77ae458 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x561be77ae428 <col:27> '<bound member function type>' ->xanno 0x561be7794db8
|           `-CXXThisExpr 0x561be77ae418 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x561be7796ea0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x561be77ae5b0 <col:30, col:48>
|   `-ReturnStmt 0x561be77ae5a0 <col:32, col:45>
|     `-ImplicitCastExpr 0x561be77ae588 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x561be77ae568 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x561be77ae538 <col:39> '<bound member function type>' ->xanno 0x561be7794c18
|           `-CXXThisExpr 0x561be77ae528 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x561be7796f88 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x561be77ae748 <col:24, col:50>
|   `-ReturnStmt 0x561be77ae738 <col:26, col:47>
|     `-UnaryOperator 0x561be77ae720 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561be77ae700 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x561be77ae6e8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561be77ae698 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x561be77a28d8
|         |   `-CXXMemberCallExpr 0x561be77ae678 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x561be77ae648 <col:34> '<bound member function type>' ->xanno 0x561be7794db8
|         |       `-CXXThisExpr 0x561be77ae638 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x561be77ae6c8 <col:46> 'int' 0
|-CXXMethodDecl 0x561be7797078 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x561be77ae918 <col:36, col:62>
|   `-ReturnStmt 0x561be77ae908 <col:38, col:59>
|     `-UnaryOperator 0x561be77ae8f0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561be77ae8d0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x561be77ae8b8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561be77ae830 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x561be77a28d8
|         |   `-CXXMemberCallExpr 0x561be77ae810 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x561be77ae7e0 <col:46> '<bound member function type>' ->xanno 0x561be7794c18
|         |       `-CXXThisExpr 0x561be77ae7d0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x561be77ae860 <col:58> 'int' 0
|-CXXMethodDecl 0x561be7797198 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x561be77aeab0 <col:26, col:53>
|   `-ReturnStmt 0x561be77aeaa0 <col:28, col:50>
|     `-UnaryOperator 0x561be77aea88 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561be77aea68 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x561be77aea50 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561be77aea00 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x561be77a2bd8
|         |   `-CXXMemberCallExpr 0x561be77ae9e0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x561be77ae9b0 <col:36> '<bound member function type>' ->xanno 0x561be7794db8
|         |       `-CXXThisExpr 0x561be77ae9a0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x561be77aea30 <col:49> 'int' 0
|-CXXMethodDecl 0x561be77972b8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x561be77aec88 <col:38, col:65>
|   `-ReturnStmt 0x561be77aec78 <col:40, col:62>
|     `-UnaryOperator 0x561be77aec60 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561be77aec40 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x561be77aec28 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561be77aeb98 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x561be77a2bd8
|         |   `-CXXMemberCallExpr 0x561be77aeb78 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x561be77aeb48 <col:48> '<bound member function type>' ->xanno 0x561be7794c18
|         |       `-CXXThisExpr 0x561be77aeb38 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x561be77aebc8 <col:61> 'int' 0
|-CXXMethodDecl 0x561be7797468 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x561be7797370 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x561be77af358 <col:34, line:463:5>
|   |-ParenExpr 0x561be77af1a0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x561be77af170 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x561be77aedd8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561be77aeda8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561be77aecf8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561be77aece0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561be77aeca0 <col:23> 'int' lvalue ParmVar 0x561be7797370 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561be77aecc0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561be77aed88 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561be77aed58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561be77aed18 <col:33> 'int' lvalue ParmVar 0x561be7797370 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x561be77aed70 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x561be77aed38 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561be7795000 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x561be77aee38 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77aee18 <col:56> 'int' 0
|   |   `-CallExpr 0x561be77af0d0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x561be77af0b8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77af098 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77af110 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77aef28 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x561be77af128 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77aef58 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561be77af140 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77aef90 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x561be77af158 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77af080 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77af068 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77af028 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x561be77af348 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x561be77af330 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x561be77af310 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x561be77af2e0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561be77af290 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x561be77a28d8
|         |   `-CXXMemberCallExpr 0x561be77af270 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x561be77af240 <col:9> '<bound member function type>' ->xanno 0x561be7794c18
|         |       `-CXXThisExpr 0x561be77af230 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x561be77af2f8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x561be77af2c0 <col:21> 'int' lvalue ParmVar 0x561be7797370 'i' 'int'
|-CXXMethodDecl 0x561be77976b8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x561be7797528 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x561be77975a0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x561be77af9e8 <col:40, line:472:5>
|   |-ParenExpr 0x561be77af800 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x561be77af7d0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x561be77af4b0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561be77af480 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561be77af3d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561be77af3b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561be77af378 <col:23> 'int' lvalue ParmVar 0x561be7797528 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561be77af398 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561be77af460 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561be77af430 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561be77af3f0 <col:33> 'int' lvalue ParmVar 0x561be7797528 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x561be77af448 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x561be77af410 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561be7795000 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x561be77af510 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77af4f0 <col:56> 'int' 0
|   |   `-CallExpr 0x561be77af730 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x561be77af718 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77af6f8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77af770 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77af580 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x561be77af788 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77af5b0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561be77af7a0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77af5e8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x561be77af7b8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77af6e0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77af6c8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77af688 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x561be77af9c8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x561be77af970 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x561be77af940 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x561be77af8f0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x561be77a28d8
|     | |   `-CXXMemberCallExpr 0x561be77af8d0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x561be77af8a0 <col:2> '<bound member function type>' ->xanno 0x561be7794db8
|     | |       `-CXXThisExpr 0x561be77af890 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x561be77af958 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x561be77af920 <col:14> 'int' lvalue ParmVar 0x561be7797528 'i' 'int'
|     `-ImplicitCastExpr 0x561be77af9b0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x561be77af990 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x561be77975a0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x561be7797878 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x561be7797780 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x561be77b0168 <col:36, line:485:5>
|   |-ParenExpr 0x561be77afed0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x561be77afea0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561be77afb80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561be77afb50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561be77afa60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561be77afa48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561be77afa08 <col:23> 'int' lvalue ParmVar 0x561be7797780 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561be77afa28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561be77afb30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561be77afb18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561be77afa80 <col:33> 'int' lvalue ParmVar 0x561be7797780 'i' 'int'
|   |   |     `-BinaryOperator 0x561be77afaf8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561be77afae0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561be77afaa0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561be7795000 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561be77afac0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561be77afbe0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77afbc0 <col:60> 'int' 0
|   |   `-CallExpr 0x561be77afe00 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561be77afde8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77afdc8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77afe40 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77afc50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561be77afe58 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77afc88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561be77afe70 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77afcc0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x561be77afe88 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77afdb0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77afd98 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77afd58 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x561be77b0158 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x561be77b0140 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x561be77b0128 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561be77b00f8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x561be77b0098 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x561be77b0068 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561be77affe0 <col:61, col:70> 'char const[48]' lvalue ->c 0x561be77a27b0
|             |   `-CXXMemberCallExpr 0x561be77affc0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561be77aff90 <col:61> '<bound member function type>' ->xanno 0x561be7794c18
|             |       `-CXXThisExpr 0x561be77aff80 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561be77b0080 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561be77b0010 <col:74> 'int' lvalue ParmVar 0x561be7797780 'i' 'int'
|-CXXMethodDecl 0x561be7797ac8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x561be7797938 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561be77979b0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x561be77b08d8 <col:42, line:500:5>
|   |-ParenExpr 0x561be77b0650 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x561be77b0620 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561be77b0300 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561be77b02d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561be77b01e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561be77b01c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561be77b0188 <col:23> 'int' lvalue ParmVar 0x561be7797938 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561be77b01a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561be77b02b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561be77b0298 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561be77b0200 <col:33> 'int' lvalue ParmVar 0x561be7797938 'i' 'int'
|   |   |     `-BinaryOperator 0x561be77b0278 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561be77b0260 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561be77b0220 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561be7795000 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561be77b0240 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561be77b0360 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77b0340 <col:60> 'int' 0
|   |   `-CallExpr 0x561be77b0580 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561be77b0568 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77b0548 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77b05c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b03d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561be77b05d8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b0408 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561be77b05f0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77b0440 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x561be77b0608 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77b0530 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77b0518 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77b04d8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x561be77b08b8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x561be77b0848 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561be77b0818 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x561be77b07c0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561be77b0790 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561be77b0740 <col:48, col:57> 'char [48]' lvalue ->c 0x561be77a27b0
|     |     |   `-CXXMemberCallExpr 0x561be77b0720 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561be77b06f0 <col:48> '<bound member function type>' ->xanno 0x561be7794db8
|     |     |       `-CXXThisExpr 0x561be77b06e0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561be77b07a8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561be77b0770 <col:61> 'int' lvalue ParmVar 0x561be7797938 'i' 'int'
|     `-ImplicitCastExpr 0x561be77b08a0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x561be77b0860 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x561be77979b0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x561be7797c88 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x561be7797b90 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x561be77b1038 <col:35, line:513:5>
|   |-ParenExpr 0x561be77b0d48 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x561be77b0d18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561be77b0a70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561be77b0a40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561be77b0950 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561be77b0938 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561be77b08f8 <col:23> 'int' lvalue ParmVar 0x561be7797b90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561be77b0918 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561be77b0a20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561be77b0a08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561be77b0970 <col:33> 'int' lvalue ParmVar 0x561be7797b90 'i' 'int'
|   |   |     `-BinaryOperator 0x561be77b09e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561be77b09d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561be77b0990 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561be7795000 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561be77b09b0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561be77b0ad0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77b0ab0 <col:60> 'int' 0
|   |   `-CallExpr 0x561be77b0c78 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561be77b0c60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77b0c40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77b0cb8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b0b40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561be77b0cd0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b0b78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561be77b0ce8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77b0bb0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x561be77b0d00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77b0c28 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77b0c10 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77b0bd0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x561be77b1028 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x561be77b1010 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x561be77b0ff8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561be77b0fc8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x561be77b0f40 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x561be77b0f10 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561be77b0ec0 <col:60, col:69> 'char const[48]' lvalue ->c 0x561be77a27b0
|             |   `-CXXMemberCallExpr 0x561be77b0ea0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561be77b0e70 <col:60> '<bound member function type>' ->xanno 0x561be7794c18
|             |       `-CXXThisExpr 0x561be77b0e60 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561be77b0f28 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561be77b0ef0 <col:73> 'int' lvalue ParmVar 0x561be7797b90 'i' 'int'
|-CXXMethodDecl 0x561be7797ed8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x561be7797d48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561be7797dc0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x561be77b1748 <col:41, line:528:5>
|   |-ParenExpr 0x561be77b14e0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x561be77b14b0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561be77b11d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561be77b11a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561be77b10b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561be77b1098 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561be77b1058 <col:23> 'int' lvalue ParmVar 0x561be7797d48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561be77b1078 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561be77b1180 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561be77b1168 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561be77b10d0 <col:33> 'int' lvalue ParmVar 0x561be7797d48 'i' 'int'
|   |   |     `-BinaryOperator 0x561be77b1148 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561be77b1130 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561be77b10f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561be7795000 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561be77b1110 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561be77b1230 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77b1210 <col:60> 'int' 0
|   |   `-CallExpr 0x561be77b1410 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561be77b13f8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77b13d8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77b1450 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b12a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561be77b1468 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b12d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561be77b1480 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77b1310 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x561be77b1498 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77b13c0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77b13a8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77b1368 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x561be77b1728 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x561be77b16d8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561be77b16a8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x561be77b1650 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561be77b1620 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561be77b15d0 <col:47, col:56> 'char [48]' lvalue ->c 0x561be77a27b0
|     |     |   `-CXXMemberCallExpr 0x561be77b15b0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561be77b1580 <col:47> '<bound member function type>' ->xanno 0x561be7794db8
|     |     |       `-CXXThisExpr 0x561be77b1570 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561be77b1638 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561be77b1600 <col:60> 'int' lvalue ParmVar 0x561be7797d48 'i' 'int'
|     `-ImplicitCastExpr 0x561be77b1710 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x561be77b16f0 <col:65> 'int16_t':'short' lvalue ParmVar 0x561be7797dc0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x561be7798098 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x561be7797fa0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x561be77b1e18 <col:36, line:541:5>
|   |-ParenExpr 0x561be77b1bb8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x561be77b1b88 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561be77b18e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561be77b18b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561be77b17c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561be77b17a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561be77b1768 <col:23> 'int' lvalue ParmVar 0x561be7797fa0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561be77b1788 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561be77b1890 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561be77b1878 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561be77b17e0 <col:33> 'int' lvalue ParmVar 0x561be7797fa0 'i' 'int'
|   |   |     `-BinaryOperator 0x561be77b1858 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561be77b1840 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561be77b1800 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561be7795000 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561be77b1820 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x561be77b1940 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77b1920 <col:60> 'int' 0
|   |   `-CallExpr 0x561be77b1ae8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561be77b1ad0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77b1ab0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77b1b28 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b19b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x561be77b1b40 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b19e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561be77b1b58 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77b1a20 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x561be77b1b70 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77b1a98 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77b1a80 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77b1a40 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x561be77b1e08 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x561be77b1df0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x561be77b1dd8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561be77b1da8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x561be77b1d50 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x561be77b1d20 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561be77b1cd0 <col:61, col:70> 'char const[48]' lvalue ->c 0x561be77a27b0
|             |   `-CXXMemberCallExpr 0x561be77b1cb0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561be77b1c80 <col:61> '<bound member function type>' ->xanno 0x561be7794c18
|             |       `-CXXThisExpr 0x561be77b1c70 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561be77b1d38 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561be77b1d00 <col:74> 'int' lvalue ParmVar 0x561be7797fa0 'i' 'int'
|-CXXMethodDecl 0x561be7798268 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x561be7798158 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x561be77981d0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561be7798318 <col:20>
| `-OptimizeNoneAttr 0x561be7798370 <col:30>
|-CXXMethodDecl 0x561be77984a8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x561be77983b0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x561be77b24e8 <col:35, line:562:5>
|   |-ParenExpr 0x561be77b2288 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x561be77b2258 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561be77b1fb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561be77b1f80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561be77b1e90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561be77b1e78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561be77b1e38 <col:23> 'int' lvalue ParmVar 0x561be77983b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561be77b1e58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561be77b1f60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561be77b1f48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561be77b1eb0 <col:33> 'int' lvalue ParmVar 0x561be77983b0 'i' 'int'
|   |   |     `-BinaryOperator 0x561be77b1f28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561be77b1f10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561be77b1ed0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561be7795000 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561be77b1ef0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x561be77b2010 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77b1ff0 <col:60> 'int' 0
|   |   `-CallExpr 0x561be77b21b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561be77b21a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77b2180 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77b21f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b2080 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x561be77b2210 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b20b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561be77b2228 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77b20f0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x561be77b2240 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77b2168 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77b2150 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77b2110 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x561be77b24d8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x561be77b24c0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x561be77b24a8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561be77b2478 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x561be77b2420 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x561be77b23f0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561be77b23a0 <col:60, col:69> 'char const[48]' lvalue ->c 0x561be77a27b0
|             |   `-CXXMemberCallExpr 0x561be77b2380 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561be77b2350 <col:60> '<bound member function type>' ->xanno 0x561be7794c18
|             |       `-CXXThisExpr 0x561be77b2340 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561be77b2408 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561be77b23d0 <col:73> 'int' lvalue ParmVar 0x561be77983b0 'i' 'int'
|-CXXMethodDecl 0x561be77986b8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x561be7798568 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561be77985e0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x561be77b2bc8 <col:41, line:577:5>
|   |-ParenExpr 0x561be77b2958 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x561be77b2928 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561be77b2680 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561be77b2650 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561be77b2560 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561be77b2548 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561be77b2508 <col:23> 'int' lvalue ParmVar 0x561be7798568 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561be77b2528 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561be77b2630 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561be77b2618 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561be77b2580 <col:33> 'int' lvalue ParmVar 0x561be7798568 'i' 'int'
|   |   |     `-BinaryOperator 0x561be77b25f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561be77b25e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561be77b25a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561be7795000 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561be77b25c0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x561be77b26e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77b26c0 <col:60> 'int' 0
|   |   `-CallExpr 0x561be77b2888 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561be77b2870 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77b2850 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77b28c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b2750 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x561be77b28e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b2788 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561be77b28f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77b27c0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x561be77b2910 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77b2838 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77b2820 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77b27e0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x561be77b2ba8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x561be77b2b58 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561be77b2b28 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x561be77b2ac8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561be77b2a98 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561be77b2a48 <col:47, col:56> 'char [48]' lvalue ->c 0x561be77a27b0
|     |     |   `-CXXMemberCallExpr 0x561be77b2a28 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561be77b29f8 <col:47> '<bound member function type>' ->xanno 0x561be7794db8
|     |     |       `-CXXThisExpr 0x561be77b29e8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561be77b2ab0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561be77b2a78 <col:60> 'int' lvalue ParmVar 0x561be7798568 'i' 'int'
|     `-ImplicitCastExpr 0x561be77b2b90 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x561be77b2b70 <col:65> 'int32_t':'int' lvalue ParmVar 0x561be77985e0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x561be7798878 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x561be7798780 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x561be77b32f8 <col:36, line:591:5>
|   |-ParenExpr 0x561be77b3038 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x561be77b3008 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561be77b2d60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561be77b2d30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561be77b2c40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561be77b2c28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561be77b2be8 <col:23> 'int' lvalue ParmVar 0x561be7798780 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561be77b2c08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561be77b2d10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561be77b2cf8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561be77b2c60 <col:33> 'int' lvalue ParmVar 0x561be7798780 'i' 'int'
|   |   |     `-BinaryOperator 0x561be77b2cd8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561be77b2cc0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561be77b2c80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561be7795000 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561be77b2ca0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x561be77b2dc0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77b2da0 <col:60> 'int' 0
|   |   `-CallExpr 0x561be77b2f68 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561be77b2f50 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77b2f30 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77b2fa8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b2e30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x561be77b2fc0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b2e68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561be77b2fd8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77b2ea0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x561be77b2ff0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77b2f18 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77b2f00 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77b2ec0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x561be77b32e8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x561be77b32d0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x561be77b32b8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561be77b3288 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x561be77b3200 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x561be77b31d0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561be77b3180 <col:61, col:70> 'char const[48]' lvalue ->c 0x561be77a27b0
|             |   `-CXXMemberCallExpr 0x561be77b3160 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561be77b3130 <col:61> '<bound member function type>' ->xanno 0x561be7794c18
|             |       `-CXXThisExpr 0x561be77b3120 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561be77b31e8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561be77b31b0 <col:74> 'int' lvalue ParmVar 0x561be7798780 'i' 'int'
|-CXXMethodDecl 0x561be7798ac8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x561be7798938 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561be77989b0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x561be77b39d8 <col:42, line:606:5>
|   |-ParenExpr 0x561be77b3768 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x561be77b3738 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561be77b3490 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561be77b3460 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561be77b3370 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561be77b3358 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561be77b3318 <col:23> 'int' lvalue ParmVar 0x561be7798938 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561be77b3338 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561be77b3440 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561be77b3428 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561be77b3390 <col:33> 'int' lvalue ParmVar 0x561be7798938 'i' 'int'
|   |   |     `-BinaryOperator 0x561be77b3408 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561be77b33f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561be77b33b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561be7795000 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561be77b33d0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x561be77b34f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77b34d0 <col:60> 'int' 0
|   |   `-CallExpr 0x561be77b3698 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561be77b3680 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77b3660 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77b36d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b3560 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x561be77b36f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b3598 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561be77b3708 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77b35d0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x561be77b3720 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77b3648 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77b3630 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77b35f0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x561be77b39b8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x561be77b3968 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561be77b3938 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x561be77b38d8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561be77b38a8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561be77b3858 <col:48, col:57> 'char [48]' lvalue ->c 0x561be77a27b0
|     |     |   `-CXXMemberCallExpr 0x561be77b3838 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561be77b3808 <col:48> '<bound member function type>' ->xanno 0x561be7794db8
|     |     |       `-CXXThisExpr 0x561be77b37f8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561be77b38c0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561be77b3888 <col:61> 'int' lvalue ParmVar 0x561be7798938 'i' 'int'
|     `-ImplicitCastExpr 0x561be77b39a0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x561be77b3980 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x561be77989b0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x561be7798c60 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x561be7798b90 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x561be77b4248 <col:33, line:620:5>
|   |-ParenExpr 0x561be77b3fc0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x561be77b3f90 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x561be77b3be0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561be77b3bb0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561be77b3a50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561be77b3a38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561be77b39f8 <col:23> 'int' lvalue ParmVar 0x561be7798b90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561be77b3a18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561be77b3b90 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x561be77b3b78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561be77b3a70 <col:33> 'int' lvalue ParmVar 0x561be7798b90 'i' 'int'
|   |   |     `-BinaryOperator 0x561be77b3b58 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561be77b3b40 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561be77b3a90 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561be7795000 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x561be77b3b18 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x561be77b3b00 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x561be77b3ac8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x561be77b3c40 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77b3c20 <col:79> 'int' 0
|   |   `-CallExpr 0x561be77b3ef0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x561be77b3ed8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77b3eb8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77b3f30 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b3d28 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x561be77b3f48 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b3d70 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561be77b3f60 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77b3da8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x561be77b3f78 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77b3ea0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77b3e88 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77b3e48 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x561be77b4238 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x561be77b4220 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x561be77b4208 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561be77b41d8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x561be77b4150 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x561be77b4120 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561be77b40d0 <col:67, col:76> 'char const[48]' lvalue ->c 0x561be77a27b0
|             |   `-CXXMemberCallExpr 0x561be77b40b0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561be77b4080 <col:67> '<bound member function type>' ->xanno 0x561be7794c18
|             |       `-CXXThisExpr 0x561be77b4070 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561be77b4138 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561be77b4100 <col:80> 'int' lvalue ParmVar 0x561be7798b90 'i' 'int'
|-CXXMethodDecl 0x561be7798e78 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x561be7798d20 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561be7798da0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x561be77b74a0 <col:45, line:635:5>
|   |-ParenExpr 0x561be77b47b8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x561be77b4788 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x561be77b4450 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561be77b4420 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561be77b42c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561be77b42a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561be77b4268 <col:23> 'int' lvalue ParmVar 0x561be7798d20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561be77b4288 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561be77b4400 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x561be77b43e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561be77b42e0 <col:33> 'int' lvalue ParmVar 0x561be7798d20 'i' 'int'
|   |   |     `-BinaryOperator 0x561be77b43c8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561be77b43b0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561be77b4300 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561be7795000 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x561be77b4388 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x561be77b4370 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x561be77b4338 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x561be77b44b0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561be77b4490 <col:79> 'int' 0
|   |   `-CallExpr 0x561be77b46e8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x561be77b46d0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77b46b0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561be77b4728 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b4520 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x561be77b4740 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561be77b4568 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561be77b4758 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561be77b45a0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x561be77b4770 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561be77b4698 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561be77b4680 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561be77b4638 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x561be77b7480 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x561be77b73e8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561be77b73b8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x561be77b7360 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561be77b7330 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561be77b72e0 <col:54, col:63> 'char [48]' lvalue ->c 0x561be77a27b0
|     |     |   `-CXXMemberCallExpr 0x561be77b72c0 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561be77b4858 <col:54> '<bound member function type>' ->xanno 0x561be7794db8
|     |     |       `-CXXThisExpr 0x561be77b4848 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561be77b7348 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561be77b7310 <col:67> 'int' lvalue ParmVar 0x561be7798d20 'i' 'int'
|     `-CXXConstCastExpr 0x561be77b7450 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x561be77b7438 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x561be77b7400 <col:91> 'const void *' lvalue ParmVar 0x561be7798da0 'x' 'const void *'
|-CXXMethodDecl 0x561be7798f48 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x561be77b7528 <col:34, line:640:5>
|   `-ReturnStmt 0x561be77b7518 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x561be77b7500 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x561be77b74d0 <col:16> 'Packet *' lvalue ->_data_packet 0x561be77a3368
|         `-CXXThisExpr 0x561be77b74c0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x561be7799088 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x561be7798ff8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561be77adba8 <col:46> 'bool' true
|-CXXMethodDecl 0x561be7799208 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x561be7799140 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x561be77992b0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x561be7799a60 <line:660:22> "" ""
| |-EnumConstantDecl 0x561be77993b0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561be7799ad0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7799390 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x561be7799370 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x561be778e500 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x561be7799440 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561be7799ae8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7799420 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x561be7799400 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x561be778e590 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x561be77994d0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561be7799b00 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77994b0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x561be7799490 <col:21> 'int' 0
| |-EnumConstantDecl 0x561be7799560 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561be7799b18 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7799540 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x561be7799520 <col:19> 'int' 16
| |-EnumConstantDecl 0x561be77995f0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561be7799b30 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77995d0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x561be77995b0 <col:21> 'int' 16
| |-EnumConstantDecl 0x561be7799680 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561be7799b48 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7799660 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x561be7799640 <col:19> 'int' 32
| |-EnumConstantDecl 0x561be7799710 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561be7799b60 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77996f0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x561be77996d0 <col:19> 'int' EnumConstant 0x561be7799560 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x561be77997a0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561be7799b78 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7799780 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x561be7799760 <col:19> 'int' EnumConstant 0x561be7799680 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x561be7799870 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561be7799b90 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7799850 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x561be7799830 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x561be77997f0 <col:23> 'int' EnumConstant 0x561be77997a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x561be7799810 <col:40> 'int' 2
| |-EnumConstantDecl 0x561be7799940 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561be7799ba8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7799920 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x561be7799900 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x561be77998c0 <col:23> 'int' EnumConstant 0x561be77997a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x561be77998e0 <col:40> 'int' 4
| `-EnumConstantDecl 0x561be7799a10 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x561be7799bc0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be77999f0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x561be77999d0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x561be7799990 <col:23> 'int' EnumConstant 0x561be77997a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x561be77999b0 <col:40> 'int' 8
|-CXXMethodDecl 0x561be7799c00 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x561be7799ca0 <col:68> "" ""
|-CXXMethodDecl 0x561be7799d38 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x561be7799dd8 <col:45> "" ""
|-CXXMethodDecl 0x561be7799e70 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x561be7799f10 <col:57> "" ""
|-CXXMethodDecl 0x561be7799fa8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x561be779a048 <col:45> "" ""
|-CXXMethodDecl 0x561be779a0e0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x561be779a180 <col:57> "" ""
|-CXXMethodDecl 0x561be779a210 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x561be779a2b0 <col:51> "" ""
|-CXXMethodDecl 0x561be779f520 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x561be779f5c0 <col:63> "" ""
|-CXXMethodDecl 0x561be779f650 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x561be779f6f0 <col:53> "" ""
|-CXXMethodDecl 0x561be779f780 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x561be779f820 <col:65> "" ""
|-CXXMethodDecl 0x561be779f938 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x561be779f8a8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x561be779f9e0 <col:61> "" ""
|-CXXMethodDecl 0x561be779fb78 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x561be779fa68 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x561be779fae0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x561be779fc28 <col:67> "" ""
|-CXXMethodDecl 0x561be779fd40 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x561be779fcb0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x561be779fde8 <col:63> "" ""
|-CXXMethodDecl 0x561be779ff80 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x561be779fe70 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561be779fee8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x561be77a0030 <col:69> "" ""
|-CXXMethodDecl 0x561be77a0148 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x561be77a00b8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x561be77a01f0 <col:63> "" ""
|-CXXMethodDecl 0x561be77a0388 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x561be77a0278 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561be77a02f0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561be77a0438 <col:69> "" ""
|-CXXMethodDecl 0x561be77a0550 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x561be77a04c0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x561be77a05f8 <col:62> "" ""
|-CXXMethodDecl 0x561be77a0790 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x561be77a0680 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561be77a06f8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x561be77a0840 <col:68> "" ""
|-CXXMethodDecl 0x561be77a0958 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x561be77a08c8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x561be77a0a00 <col:63> "" ""
|-CXXMethodDecl 0x561be77a0b98 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x561be77a0a88 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561be77a0b00 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x561be77a0c48 <col:69> "" ""
|-CXXMethodDecl 0x561be77a0cd8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x561be77a0d78 <col:64> "" ""
|-CXXMethodDecl 0x561be77a0e08 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x561be77a0ea8 <col:52> "" ""
|-CXXMethodDecl 0x561be77a0f38 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x561be77a0fd8 <col:67> "" ""
|-CXXMethodDecl 0x561be77a1068 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x561be77a1108 <col:55> "" ""
|-CXXMethodDecl 0x561be77a1220 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x561be77a1190 <col:32> col:35 'int'
| `-DeprecatedAttr 0x561be77a12c8 <col:58> "" ""
|-CXXMethodDecl 0x561be77a1460 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x561be77a1350 <col:33> col:36 'int'
| |-ParmVarDecl 0x561be77a13c8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x561be77a1510 <col:62> "" ""
|-CXXMethodDecl 0x561be77a1628 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x561be77a1598 <col:32> col:35 'int'
| `-DeprecatedAttr 0x561be77a16d0 <col:58> "" ""
|-CXXMethodDecl 0x561be77a1868 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x561be77a1758 <col:33> col:36 'int'
| |-ParmVarDecl 0x561be77a17d0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x561be77a1918 <col:62> "" ""
|-CXXMethodDecl 0x561be77a1a30 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x561be77a19a0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x561be77a1ad8 <col:60> "" ""
|-CXXMethodDecl 0x561be77a1c70 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x561be77a1b60 <col:34> col:37 'int'
| |-ParmVarDecl 0x561be77a1bd8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x561be77a1d20 <col:64> "" ""
|-CXXMethodDecl 0x561be77a1e38 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x561be77a1da8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x561be77a1ee0 <col:58> "" ""
|-CXXMethodDecl 0x561be77a2078 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x561be77a1f68 <col:33> col:36 'int'
| |-ParmVarDecl 0x561be77a1fe0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x561be77a2128 <col:62> "" ""
|-CXXMethodDecl 0x561be77a2240 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x561be77a21b0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x561be77a22e8 <col:59> "" ""
|-CXXMethodDecl 0x561be77a2480 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x561be77a2370 <col:33> col:36 'int'
| |-ParmVarDecl 0x561be77a23e8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561be77a2530 <col:63> "" ""
|-AccessSpecDecl 0x561be77a25a0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x561be77a25c8 prev 0x561be7794af0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561be77a26c0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x561be77a27b0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x561be77a28d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x561be77a2a58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x561be77a2bd8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x561be77a2d58 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x561be77b76a8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561be77b7f18 <col:11>
| |-CXXDestructorDecl 0x561be77b7780 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x561be77b78b8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x561be77b78b8
| | `-ParmVarDecl 0x561be77b79c8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x561be77b7a68 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561be77b7a68
| | `-ParmVarDecl 0x561be77b7b78 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x561be77ba8a8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561be77ba9b8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x561be77bac38 <col:11>
| |   `-ReturnStmt 0x561be77bac28 <col:11>
| |     `-UnaryOperator 0x561be77bac10 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x561be77bac00 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x561be77baa28 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561be77baa28
|   `-ParmVarDecl 0x561be77bab38 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x561be77a2dc0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561be77a2ed8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x561be77a2f78 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x561be77a2fe0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x561be77a3048 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x561be77a30b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x561be77a3110 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x561be77a31d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x561be77a3230 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x561be77a3290 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x561be77b75b8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x561be77a2f78 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x561be77b7f28 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x561be77b7f80 <col:12>
| |-CXXConstructorDecl 0x561be77b7be8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x561be77b7be8
| | `-ParmVarDecl 0x561be77b7cf8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x561be77b7d98 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x561be77b7d98
| | `-ParmVarDecl 0x561be77b7ea8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x561be77b9f90 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x561be77a3308 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x561be77a3368 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x561be77a33d0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x561be77a3438 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x561be77ac890 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x561be77ac8f8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x561be77ac958 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x561be77ac9b8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x561be77aca20 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x561be77acaa8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x561be77a3308 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x561be77b7550 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x561be77ac958 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x561be77b7f90 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x561be77b7ff0 <col:21, line:755:5>
|-CXXConstructorDecl 0x561be77acc48 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x561be77acb88 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x561be77acd40 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x561be77acf28 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x561be77ace30 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x561be77ad1f8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x561be77acfe0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be77ad058 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561be77ad0d0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be77ad418 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x561be77ad2c8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x561be77ad340 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x561be77ad6e8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x561be77ad4d8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x561be77ad550 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x561be77ad5c8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x561be77ad840 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x561be77ad7b0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be77ad988 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x561be77ad8f8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x561be77ada80 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be792d810 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561be792d928 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x561be792d9f8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x561be792da58 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x561be792dac0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x561be792db48 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x561be792ddb0 <col:16, line:46:5>
|   |-BinaryOperator 0x561be792dcf8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x561be792dc18 <col:9> 'TaskLink *' lvalue ->_prev 0x561be792d9f8
|   | | `-CXXThisExpr 0x561be792dc08 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x561be792dce0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x561be792dcc0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x561be792dc58 <col:17> 'TaskLink *' lvalue ->_next 0x561be792da58
|   |     | `-CXXThisExpr 0x561be792dc48 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x561be792dca8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x561be792dc88 <col:25> 'int' 0
|   `-BinaryOperator 0x561be792dd90 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x561be792dd28 <col:9> 'unsigned int' lvalue ->_pass 0x561be792dac0
|     | `-CXXThisExpr 0x561be792dd18 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x561be792dd78 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x561be792dd58 <col:17> 'int' 0
|-CXXConstructorDecl 0x561be7974148 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x561be7974148
| `-ParmVarDecl 0x561be7974258 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x561be79742f8 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x561be79742f8
| `-ParmVarDecl 0x561be7974408 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x561be79745f8 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x561be79745f8
|-CXXMethodDecl 0x561be7974df8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x561be7974df8
| `-ParmVarDecl 0x561be7974f08 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x561be7974f78 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x561be7974f78
  `-ParmVarDecl 0x561be7975088 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be7912ce8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x561be7912e18 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x561be7912e78 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x561be7912ed8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x561be797b2a8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x561be797b380 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561be797b380
|-CXXConstructorDecl 0x561be797b638 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x561be797b638
| `-ParmVarDecl 0x561be797b748 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x561be797b7e8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x561be797b7e8
  `-ParmVarDecl 0x561be797b8f8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be7912b38 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x561be7912c58 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x561be7912ce8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x561be7912e18 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x561be7912e78 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x561be7912ed8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x561be797b2a8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x561be797b380 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561be797b380
| |-CXXConstructorDecl 0x561be797b638 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x561be797b638
| | `-ParmVarDecl 0x561be797b748 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x561be797b7e8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x561be797b7e8
|   `-ParmVarDecl 0x561be797b8f8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x561be7912f98 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x561be7912ff8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x561be7912f98 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x561be7912e18 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x561be7913050 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x561be7912f98 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x561be7912e78 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x561be79130a8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x561be7912f98 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x561be7912ed8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x561be7913100 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561be797b1b8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561be797bb18 <col:11>
|-CXXConstructorDecl 0x561be797b488 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x561be797b488
| `-ParmVarDecl 0x561be797b598 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x561be797b998 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x561be797b998
  `-ParmVarDecl 0x561be797baa8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be77634d0 prev 0x561be775a960 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561be77635c8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x561be7763668 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x561be7769b08 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561be7769ee8 <col:11>
|-CXXConstructorDecl 0x561be7769be0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561be7769cc8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x561be776a630 <col:11>
|-CXXConstructorDecl 0x561be7769d68 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x561be7769e78 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x561be776be88 <col:11>
|-CXXDestructorDecl 0x561be776b198 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561be746b668 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561be746b778 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x561be746c040 <col:11>
|   `-ReturnStmt 0x561be746c030 <col:11>
|     `-UnaryOperator 0x561be746c018 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561be746c008 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x561be746b7e8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x561be746b8f8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x561be77f5e70 <col:11>
    `-ReturnStmt 0x561be77f5e60 <col:11>
      `-UnaryOperator 0x561be77f5e48 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x561be77f5e38 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be7758548 prev 0x561be7758260 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561be7758640 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x561be77586d0 <col:19, col:25> col:19 public
|-TypedefDecl 0x561be7758708 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x561be73b6b80 'int32_t' sugar
|   |-Typedef 0x561be72c3328 'int32_t'
|   `-TypedefType 0x561be729c510 '__int32_t' sugar
|     |-Typedef 0x561be729c128 '__int32_t'
|     `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be7758770 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x561be73b6d40 'int64_t' sugar
|   |-Typedef 0x561be72c3390 'int64_t'
|   `-TypedefType 0x561be729c630 '__int64_t' sugar
|     |-Typedef 0x561be729c208 '__int64_t'
|     `-BuiltinType 0x561be725a5a0 'long'
|-EnumDecl 0x561be77587c8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x561be7758940 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x561be7758920 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x561be77588f8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x561be77588e0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x561be77588b0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x561be7758a38 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x561be7758a18 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x561be77589f0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x561be77589d8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x561be77589b0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x561be7758990 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x561be7758a88 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x561be7758b90 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561be775a6b0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7758b70 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x561be7758b50 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x561be7758c20 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561be775a6c8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7758c00 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x561be7758be0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x561be7758cb0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561be775a6e0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7758c90 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x561be7758c70 <col:25> 'int' 1000
| |-EnumConstantDecl 0x561be7758d40 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561be775a6f8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7758d20 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x561be7758d00 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x561be7758dd0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561be775a710 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7758db0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x561be7758d90 <col:25> 'int' 1000
| |-EnumConstantDecl 0x561be7758e60 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561be775a728 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7758e40 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x561be7758e20 <col:24> 'int' 1000
| |-EnumConstantDecl 0x561be7758ef0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561be775a740 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7758ed0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x561be7758eb0 <col:26> 'int' EnumConstant 0x561be7758b90 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x561be7758fc0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x561be775a758 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7758fa0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x561be7758f80 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x561be7758f40 <col:27> 'int' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x561be7758f60 <col:44> 'int' EnumConstant 0x561be7758e60 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x561be775a660 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x561be775a770 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be7759070 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x561be7759050 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x561be7759010 <col:27> 'int' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x561be7759030 <col:44> 'int' EnumConstant 0x561be7758d40 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x561be775a788 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x561be775a890 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x561be775a8e0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be775a870 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x561be775a850 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x561be775a908 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x561be73b67b0 'uninitialized_type'
|   `-CXXRecord 0x561be73b6718 'uninitialized_type'
|-CXXRecordDecl 0x561be775a960 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x561be775aa70 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x561be7764618 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561be7769ef8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561be776a018 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x561be7769fd0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x561be7769f60 <col:9> '<bound member function type>' ->assign 0x561be77616f8
|     | `-CXXThisExpr 0x561be7769f50 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x561be7769f90 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x561be776a000 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x561be7769fb0 <col:19> 'int' 0
|-CXXConstructorDecl 0x561be775acb8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x561be775ab30 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x561be775aba8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561be77699a0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561be7769980 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x561be7764618 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561be776a030 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561be776a180 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x561be776a108 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x561be776a098 <col:9> '<bound member function type>' ->assign 0x561be77616f8
|     | `-CXXThisExpr 0x561be776a088 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561be776a150 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x561be776a138 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x561be776a0c8 <col:16> 'long' lvalue ParmVar 0x561be775ab30 'sec' 'long'
|     `-ImplicitCastExpr 0x561be776a168 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561be776a0e8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be775aba8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561be775af18 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x561be775ad88 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x561be775ae00 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561be77699d8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561be77699b8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x561be7764618 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561be776a198 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561be776a2d0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x561be776a270 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x561be776a200 <col:9> '<bound member function type>' ->assign 0x561be77616f8
|     | `-CXXThisExpr 0x561be776a1f0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561be776a2a0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561be776a230 <col:16> 'int' lvalue ParmVar 0x561be775ad88 'sec' 'int'
|     `-ImplicitCastExpr 0x561be776a2b8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561be776a250 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be775ae00 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561be775b178 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x561be775afe8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x561be775b060 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561be7769a10 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561be77699f0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x561be7764618 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561be776a2e8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561be776a438 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x561be776a3c0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x561be776a350 <col:9> '<bound member function type>' ->assign 0x561be77616f8
|     | `-CXXThisExpr 0x561be776a340 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561be776a408 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x561be776a3f0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x561be776a380 <col:16> 'unsigned long' lvalue ParmVar 0x561be775afe8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x561be776a420 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561be776a3a0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be775b060 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561be775b3d8 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x561be775b248 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x561be775b2c0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561be7769a48 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561be7769a28 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x561be7764618 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561be776a450 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561be776a5a0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x561be776a528 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x561be776a4b8 <col:9> '<bound member function type>' ->assign 0x561be77616f8
|     | `-CXXThisExpr 0x561be776a4a8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561be776a570 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x561be776a558 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x561be776a4e8 <col:16> 'unsigned int' lvalue ParmVar 0x561be775b248 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x561be776a588 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x561be776a508 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be775b2c0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x561be775b538 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x561be775b4a8 <col:31> col:37 'double'
|-CXXConstructorDecl 0x561be775b6d8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x561be775b610 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x561be775b908 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x561be775b810 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x561be775bab8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x561be775b9f8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x561be7764618 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561be776a640 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x561be776a5b8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x561be775b9f8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x561be776a6a0 <col:19, line:214:5>
|-CXXConstructorDecl 0x561be775bc88 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x561be775bbc8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x561be7764618 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561be776a6b0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561be776a760 <col:53, line:219:5>
|   `-CStyleCastExpr 0x561be776a738 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x561be776a708 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x561be775bbc8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x561be775be78 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x561be775bdf0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x561be77582f0 'Timestamp'
|   | `-CXXRecord 0x561be7758548 'Timestamp'
|   `-ParenType 0x561be775bd90 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x561be775bd60 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x561be7758890 'Timestamp::seconds_type' sugar
|         |-Typedef 0x561be7758708 'seconds_type'
|         `-TypedefType 0x561be73b6b80 'int32_t' sugar
|           |-Typedef 0x561be72c3328 'int32_t'
|           `-TypedefType 0x561be729c510 '__int32_t' sugar
|             |-Typedef 0x561be729c128 '__int32_t'
|             `-BuiltinType 0x561be725a580 'int'
|-CXXConversionDecl 0x561be775bfb8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x561be775c088 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x561be776a868 <col:37, line:231:5>
|   `-ReturnStmt 0x561be776a858 <line:227:9, col:23>
|     `-BinaryOperator 0x561be776a838 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x561be776a808 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561be776a7b8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x561be7763668
|       |   `-MemberExpr 0x561be776a788 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x561be7764618
|       |     `-CXXThisExpr 0x561be776a778 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561be776a820 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x561be776a7e8 <col:23> 'int' 0
|-CXXMethodDecl 0x561be775c148 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x561be775c208 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x561be775c2c8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x561be775c388 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x561be775c448 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x561be775c5b8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x561be775c4f8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x561be775c700 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x561be775c670 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be775c7c8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x561be775c868 <col:54> "" ""
|-CXXMethodDecl 0x561be775c8f8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x561be775c998 <col:54> "" ""
|-CXXMethodDecl 0x561be775ca28 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x561be775cac8 <col:54> "" ""
|-CXXMethodDecl 0x561be775cbc8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x561be775cc98 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x561be775cdc8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x561be775cec0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x561be775cff8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x561be776aa80 <col:39, line:271:5>
|   `-ReturnStmt 0x561be776aa70 <line:267:9, col:61>
|     `-CallExpr 0x561be776aa10 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x561be776a9f8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561be776a880 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x561be7764948 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x561be776aa40 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561be776a8e0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x561be7763668
|       |   `-MemberExpr 0x561be776a8b0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x561be7764618
|       |     `-CXXThisExpr 0x561be776a8a0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561be776aa58 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x561be776a980 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x561be776a950 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x561be776a910 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x561be776a968 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x561be776a930 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758e60 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561be775d0b8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x561be776ac40 <col:39, line:279:5>
|   `-ReturnStmt 0x561be776ac30 <line:275:9, col:61>
|     `-CallExpr 0x561be776abd0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x561be776abb8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561be776aa98 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x561be7764948 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x561be776ac00 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561be776aaf8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x561be7763668
|       |   `-MemberExpr 0x561be776aac8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x561be7764618
|       |     `-CXXThisExpr 0x561be776aab8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561be776ac18 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x561be776ab98 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x561be776ab68 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x561be776ab28 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x561be776ab80 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x561be776ab48 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758d40 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561be775d178 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x561be776add8 <col:39, line:287:5>
|   `-ReturnStmt 0x561be776adc8 <line:283:9, col:53>
|     `-BinaryOperator 0x561be776ada8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x561be776ad78 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x561be776ac98 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x561be7763668
|       |   `-MemberExpr 0x561be776ac68 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x561be7764618
|       |     `-CXXThisExpr 0x561be776ac58 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x561be776ad90 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x561be776ad58 <col:23, col:53> 'int'
|           `-BinaryOperator 0x561be776ad38 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x561be776ad08 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561be776acc8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758b90 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561be776ad20 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561be776ace8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561be775d268 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x561be776c070 <col:40, line:293:5>
|   |-DeclStmt 0x561be776af20 <line:291:9, col:48>
|   | `-VarDecl 0x561be776ae00 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x561be776af00 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x561be776aea8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x561be776ae78 <col:22> '<bound member function type>' ->subsec 0x561be775c208
|   |     |   `-CXXThisExpr 0x561be776ae68 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x561be776aee8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x561be776aec8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758fc0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561be776c060 <line:292:9, col:70>
|     `-ExprWithCleanups 0x561be776c048 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x561be776c018 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561be776c000 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x561be776bfe0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x561be776bfb0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x561be776bd48 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x561be776bd30 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x561be776af38 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x561be776ae00 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x561be776bf50 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x561be776bf38 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x561be776bf08 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x561be776bd60 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x561be776bcd0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x561be776bcb8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x561be776bc68 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561be7758498 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x561be776bc08 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x561be776af68 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x561be776af58 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x561be776bc50 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x561be776bc38 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x561be776b428 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x561be776af90 <col:39> 'int' 0
|               |               `-BinaryOperator 0x561be776b020 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x561be776aff0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x561be776afb0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758fc0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x561be776b008 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x561be776afd0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x561be776ae00 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x561be776bf80 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x561be776bd18 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x561be776bd08 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x561be775d328 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x561be776c5c8 <col:40, line:302:5>
|   |-DeclStmt 0x561be776c1c0 <line:297:9, col:48>
|   | `-VarDecl 0x561be776c0a0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x561be776c1a0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x561be776c148 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x561be776c118 <col:22> '<bound member function type>' ->subsec 0x561be775c208
|   |     |   `-CXXThisExpr 0x561be776c108 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x561be776c188 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x561be776c168 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be775a660 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561be776c5b8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x561be776c5a0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x561be776c570 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561be776c558 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x561be776c538 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x561be776c508 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x561be776c430 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x561be776c418 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x561be776c1d8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x561be776c0a0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x561be776c4a8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x561be776c490 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x561be776c460 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x561be776c448 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x561be776c3b8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x561be776c3a0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x561be776c380 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561be7758498 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x561be776c320 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x561be776c208 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x561be776c1f8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x561be776c368 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x561be776c350 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x561be776c2e0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x561be776c230 <col:39> 'int' 0
|               |               `-BinaryOperator 0x561be776c2c0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x561be776c290 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x561be776c250 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be775a660 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x561be776c2a8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x561be776c270 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x561be776c0a0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x561be776c4d8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x561be776c400 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x561be776c3f0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x561be775d3e8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x561be776c650 <col:40, line:306:5>
|   `-ReturnStmt 0x561be776c640 <line:305:9, col:17>
|     `-CXXConstructExpr 0x561be776c610 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x561be776c5f8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x561be776c5e8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x561be775d588 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x561be775d498 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x561be775d758 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x561be775d660 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x561be775d848 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x561be775d9b8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x561be775d8f8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x561be776c798 <col:56, line:320:5>
|   `-ReturnStmt 0x561be776c788 <line:319:9, col:32>
|     `-ExprWithCleanups 0x561be776c770 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x561be776c740 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561be776c728 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561be776c6e8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561be776c6b8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561be776c678 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561be775d8f8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x561be776c6d0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x561be776c698 <col:31> 'int' 0
|-CXXMethodDecl 0x561be775dbf8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x561be775da70 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561be775dae8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be776c968 <col:72, line:326:5>
|   `-ReturnStmt 0x561be776c958 <line:325:9, col:51>
|     `-ExprWithCleanups 0x561be776c940 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x561be776c910 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561be776c8f8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561be776c8b8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561be776c8a0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561be776c7c0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561be775da70 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x561be776c860 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x561be776c848 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561be776c7e0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561be7762dc0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x561be776c888 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561be776c800 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be775dae8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be775dda8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x561be775dcb8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x561be77764f0 <col:56, line:337:5>
|   |-DeclStmt 0x561be776cc68 <line:329:9, col:51>
|   | `-VarDecl 0x561be776c990 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x561be776cc50 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x561be776cc20 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561be776cc08 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x561be776cbf0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x561be776cbc0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x561be776cba8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x561be776cb90 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x561be776ca80 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x561be77762e0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x561be776ccd0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x561be7763668
|   | | `-MemberExpr 0x561be776cca0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x561be7764618
|   | |   `-DeclRefExpr 0x561be776cc80 <col:9> 'Timestamp' lvalue Var 0x561be776c990 't' 'Timestamp'
|   | `-BinaryOperator 0x561be77762c0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x561be7776290 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561be776cd00 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x561be775dcb8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x561be77762a8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x561be776cdb0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x561be776cd90 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x561be776cd60 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x561be776cd20 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x561be776cd78 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x561be776cd40 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758e60 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561be77764d8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x561be77764a8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x561be7776490 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x561be7776470 <col:16> 'Timestamp' lvalue Var 0x561be776c990 't' 'Timestamp'
|-CXXMethodDecl 0x561be775df70 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x561be775de60 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561be775ded8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be77766a8 <col:72, line:343:5>
|   `-ReturnStmt 0x561be7776698 <line:342:9, col:51>
|     `-ExprWithCleanups 0x561be7776680 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x561be7776650 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561be7776638 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561be77765f8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561be77765e0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561be7776528 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561be775de60 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x561be77765a0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x561be7776588 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561be7776548 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561be7762f08 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x561be77765c8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561be7776568 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be775ded8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be775e0c0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x561be775e030 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x561be7776af0 <col:56, line:354:5>
|   |-DeclStmt 0x561be7776898 <line:346:9, col:51>
|   | `-VarDecl 0x561be77766d0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x561be7776880 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x561be7776850 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561be7776838 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x561be7776820 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x561be77767f0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x561be77767d8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x561be77767c0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x561be7776790 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x561be7776a50 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x561be7776900 <col:9, col:14> 'int64_t':'long' lvalue .x 0x561be7763668
|   | | `-MemberExpr 0x561be77768d0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x561be7764618
|   | |   `-DeclRefExpr 0x561be77768b0 <col:9> 'Timestamp' lvalue Var 0x561be77766d0 't' 'Timestamp'
|   | `-BinaryOperator 0x561be7776a30 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x561be7776a00 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561be7776930 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x561be775e030 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x561be7776a18 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x561be77769e0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x561be77769c0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x561be7776990 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x561be7776950 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x561be77769a8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x561be7776970 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758d40 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561be7776ad8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x561be7776aa8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x561be7776a90 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x561be7776a70 <col:16> 'Timestamp' lvalue Var 0x561be77766d0 't' 'Timestamp'
|-CXXMethodDecl 0x561be775e288 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x561be775e178 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561be775e1f0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be7776ca8 <col:72, line:360:5>
|   `-ReturnStmt 0x561be7776c98 <line:359:9, col:51>
|     `-ExprWithCleanups 0x561be7776c80 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x561be7776c50 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561be7776c38 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561be7776bf8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x561be7776be0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x561be7776b28 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561be775e178 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x561be7776ba0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x561be7776b88 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561be7776b48 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561be7763050 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x561be7776bc8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561be7776b68 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be775e1f0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be775e3d8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x561be775e348 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x561be7777118 <col:56, line:371:5>
|   |-DeclStmt 0x561be7776e98 <line:363:9, col:51>
|   | `-VarDecl 0x561be7776cd0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x561be7776e80 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x561be7776e50 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561be7776e38 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x561be7776e20 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x561be7776df0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x561be7776dd8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x561be7776dc0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x561be7776d90 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x561be7777078 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x561be7776f00 <col:9, col:14> 'int64_t':'long' lvalue .x 0x561be7763668
|   | | `-MemberExpr 0x561be7776ed0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x561be7764618
|   | |   `-DeclRefExpr 0x561be7776eb0 <col:9> 'Timestamp' lvalue Var 0x561be7776cd0 't' 'Timestamp'
|   | `-CallExpr 0x561be7777018 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x561be7777000 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x561be7776f30 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x561be7764948 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x561be7777048 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561be7776f50 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x561be775e348 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x561be7777060 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x561be7776fe0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x561be7776fb0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x561be7776f70 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758b90 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x561be7776fc8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x561be7776f90 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x561be7777100 <line:370:9, col:16>
|     `-CXXConstructExpr 0x561be77770d0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x561be77770b8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x561be7777098 <col:16> 'Timestamp' lvalue Var 0x561be7776cd0 't' 'Timestamp'
|-CXXMethodDecl 0x561be775e4c8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x561be7777258 <col:39, line:377:5>
|   `-ReturnStmt 0x561be7777248 <line:376:9, col:30>
|     `-ExprWithCleanups 0x561be7777230 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x561be7777200 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561be77771e8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561be77771a8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x561be7777150 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x561be7777190 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x561be7777170 <col:29> 'int' 1
|-CXXMethodDecl 0x561be775e588 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x561be7777338 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x561be77772f0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x561be7777280 <col:9> '<bound member function type>' ->assign 0x561be77616f8
|     | `-CXXThisExpr 0x561be7777270 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x561be77772b0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x561be7777320 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x561be77772d0 <col:19> 'int' 0
|-CXXMethodDecl 0x561be77616f8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561be77615b0 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561be7761628 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561be7769a80 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561be7769a60 <col:60> 'int' 0
| `-CompoundStmt 0x561be7777530 <col:63, line:395:5>
|   `-BinaryOperator 0x561be7777510 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x561be7777390 <col:9, col:12> 'int64_t':'long' lvalue .x 0x561be7763668
|     | `-MemberExpr 0x561be7777360 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x561be7764618
|     |   `-CXXThisExpr 0x561be7777350 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x561be77774f0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x561be7777480 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x561be7777420 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x561be7777408 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x561be77773f0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x561be77773c0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561be77615b0 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x561be7777468 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x561be7777448 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x561be77774d8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x561be77774c0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x561be77774a0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be7761628 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be77618c8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561be77617b8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561be7761830 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be7777688 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x561be7777640 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x561be7777558 <col:9> '<bound member function type>' ->assign 0x561be77616f8
|     | `-CXXThisExpr 0x561be7777548 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561be7777670 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561be7777588 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561be77617b8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x561be7777600 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x561be77775e8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561be77775a8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561be7762f08 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x561be7777628 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561be77775c8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be7761830 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7761a98 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561be7761988 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561be7761a00 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be77777e0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x561be7777798 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x561be77776b0 <col:9> '<bound member function type>' ->assign 0x561be77616f8
|     | `-CXXThisExpr 0x561be77776a0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x561be77777c8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561be77776e0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x561be7761988 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x561be7777758 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x561be7777740 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561be7777700 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x561be7763050 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x561be7777780 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561be7777720 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be7761a00 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7761c68 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561be7761b58 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561be7761bd0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x561be7769ab8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x561be7769a98 <col:57> 'int' 0
| `-DeprecatedAttr 0x561be7761d18 <col:75> "" ""
|-CXXMethodDecl 0x561be7761ea8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561be7761d98 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561be7761e10 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561be7761f58 <col:74> "" ""
|-CXXMethodDecl 0x561be77620e8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x561be7761fd8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x561be7762050 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561be7762198 <col:74> "" ""
|-CXXMethodDecl 0x561be7762228 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x561be77622c8 <col:42> "" ""
|-CXXMethodDecl 0x561be7762470 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x561be7762350 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x561be77623d0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x561be7762540 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x561be7762600 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x561be77626a0 <col:20>
| `-OptimizeNoneAttr 0x561be77626f8 <col:30>
|-CXXMethodDecl 0x561be7762740 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x561be7762800 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x561be77628c0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x561be7762980 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x561be7762a40 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x561be7762b00 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x561be7762bc0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x561be7762c80 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x561be7762dc0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561be7762d30 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be7777928 <col:58, line:512:5>
|   `-ReturnStmt 0x561be7777918 <line:511:9, col:53>
|     `-BinaryOperator 0x561be77778f8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x561be77778c8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561be77777f8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be7762d30 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561be77778e0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561be77778a8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x561be7777888 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x561be7777858 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561be7777818 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561be7777870 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561be7777838 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758e60 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561be7762f08 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561be7762e78 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be7777a70 <col:58, line:516:5>
|   `-ReturnStmt 0x561be7777a60 <line:515:9, col:53>
|     `-BinaryOperator 0x561be7777a40 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x561be7777a10 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561be7777940 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be7762e78 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561be7777a28 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561be77779f0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x561be77779d0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x561be77779a0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561be7777960 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561be77779b8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561be7777980 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758d40 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561be7763050 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561be7762fc0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be7777bb8 <col:58, line:520:5>
|   `-ReturnStmt 0x561be7777ba8 <line:519:9, col:53>
|     `-BinaryOperator 0x561be7777b88 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x561be7777b58 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561be7777a88 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be7762fc0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561be7777b70 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561be7777b38 <col:23, col:53> 'int'
|           `-BinaryOperator 0x561be7777b18 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x561be7777ae8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561be7777aa8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758b90 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561be7777b00 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561be7777ac8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561be7763198 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561be7763108 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be7777d00 <col:60, line:524:5>
|   `-ReturnStmt 0x561be7777cf0 <line:523:9, col:55>
|     `-BinaryOperator 0x561be7777cd0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x561be7777ca0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561be7777bd0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be7763108 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561be7777cb8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561be7777c80 <col:25, col:55> 'int'
|           `-BinaryOperator 0x561be7777c60 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x561be7777c30 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561be7777bf0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561be7777c48 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561be7777c10 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758e60 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561be77632e0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561be7763250 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be7777e48 <col:60, line:528:5>
|   `-ReturnStmt 0x561be7777e38 <line:527:9, col:55>
|     `-BinaryOperator 0x561be7777e18 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x561be7777de8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561be7777d18 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be7763250 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561be7777e00 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561be7777dc8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x561be7777da8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x561be7777d78 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561be7777d38 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561be7777d90 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561be7777d58 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758d40 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x561be7763428 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x561be7763398 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be7777f90 <col:60, line:532:5>
|   `-ReturnStmt 0x561be7777f80 <line:531:9, col:55>
|     `-BinaryOperator 0x561be7777f60 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x561be7777f30 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x561be7777e60 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be7763398 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x561be7777f48 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x561be7777f10 <col:25, col:55> 'int'
|           `-BinaryOperator 0x561be7777ef0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x561be7777ec0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x561be7777e80 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758b90 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x561be7777ed8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x561be7777ea0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x561be7758ef0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x561be77634d0 prev 0x561be775a960 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561be77635c8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x561be7763668 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x561be7769b08 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561be7769ee8 <col:11>
| |-CXXConstructorDecl 0x561be7769be0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561be7769cc8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x561be776a630 <col:11>
| |-CXXConstructorDecl 0x561be7769d68 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x561be7769e78 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x561be776be88 <col:11>
| |-CXXDestructorDecl 0x561be776b198 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x561be746b668 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561be746b778 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x561be746c040 <col:11>
| |   `-ReturnStmt 0x561be746c030 <col:11>
| |     `-UnaryOperator 0x561be746c018 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x561be746c008 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x561be746b7e8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x561be746b8f8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x561be77f5e70 <col:11>
|     `-ReturnStmt 0x561be77f5e60 <col:11>
|       `-UnaryOperator 0x561be77f5e48 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x561be77f5e38 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x561be77636d0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x561be77637d0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x561be77639d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77637b0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x561be7763790 <col:21> 'int' 0
| |-EnumConstantDecl 0x561be7763860 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x561be77639e8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be7763840 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x561be7763820 <col:23> 'int' 1
| |-EnumConstantDecl 0x561be77638f0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x561be7763a00 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be77638d0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x561be77638b0 <col:23> 'int' 2
| `-EnumConstantDecl 0x561be7763980 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x561be7763a18 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be7763960 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x561be7763940 <col:27> 'int' 3
|-CXXMethodDecl 0x561be7763a58 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x561be7763b20 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x561be7763d28 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x561be7763bd0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x561be7763c50 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x561be7769ad0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x561be7763f38 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x561be7763de8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x561be7763e60 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x561be7764008 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x561be77640c8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x561be7764238 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x561be7764178 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x561be7764300 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x561be77643c0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x561be7764480 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x561be7764540 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x561be77645e0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x561be7764618 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x561be7764688 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x561be7777fa8 <col:27, line:684:5>
|-CXXMethodDecl 0x561be7764748 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x561be7777fb8 <col:27, line:696:5>
|-CXXMethodDecl 0x561be7764948 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x561be77647f8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x561be7764870 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be7778140 <col:66, line:700:5>
|   `-ReturnStmt 0x561be7778130 <line:699:9, col:31>
|     `-CallExpr 0x561be77780d0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x561be77780b8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561be7778068 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x561be75e5888 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x561be7778100 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x561be7778028 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x561be77647f8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x561be7778118 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561be7778048 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be7764870 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7764cb8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x561be7764a08 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x561be7764a80 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x561be7764af8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x561be7764b70 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be7778490 <col:64, line:707:5>
|   |-DeclStmt 0x561be77781d0 <line:704:9, col:24>
|   | `-VarDecl 0x561be7778168 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x561be77783e0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x561be77781e8 <col:9> 'int32_t':'int' lvalue ParmVar 0x561be7764a80 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x561be77783c8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x561be7778360 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x561be7778348 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561be77782c8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x561be75eaed8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x561be7778398 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x561be7778268 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x561be7764af8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x561be77783b0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x561be7778288 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be7764b70 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x561be77782a8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x561be7778168 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x561be7778470 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x561be7778400 <col:9> 'int32_t':'int' lvalue ParmVar 0x561be7764a08 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x561be7778458 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x561be7778440 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x561be7778420 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x561be7778168 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x561be7764f58 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x561be7764d88 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x561be7764e00 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x561be7764e78 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x561be77651f8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x561be7765020 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x561be7765098 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x561be7765110 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x561be7765388 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x561be77652c0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x561be7768dd0 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x561be7765440 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x561be77654b8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x561be7769098 <line:717:5, col:73> col:24
| `-FunctionDecl 0x561be7768fd8 parent 0x561be725a488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x561be7768e90 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x561be7768f08 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x561be77692b8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x561be77691f8 parent 0x561be725a488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x561be77690e8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x561be7769160 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x561be7769480 <line:719:5, col:57> col:29
| `-FunctionDecl 0x561be77693c8 parent 0x561be725a488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x561be7769308 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x561be7769708 <line:720:5, col:73> col:30
| `-FunctionDecl 0x561be7769648 parent 0x561be725a488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x561be77694f8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x561be7769570 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x561be7769928 <line:721:5, col:73> col:30
| `-FunctionDecl 0x561be7769868 parent 0x561be725a488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x561be7769758 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x561be77697d0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x561be776b040 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x561be776b128 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x561be7764618 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561be776bb98 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x561be776bb50 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x561be7764618
| |     `-DeclRefExpr 0x561be776bb30 <col:7> 'const Timestamp' lvalue ParmVar 0x561be776b128 '' 'const Timestamp &'
| `-CompoundStmt 0x561be776bbf8 <col:7>
|-CXXConstructorDecl 0x561be776b2a8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x561be776b3b8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x561be7764618 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x561be776be98 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x561be776be40 <col:7> 'Timestamp::rep_t' xvalue ._t 0x561be7764618
| |     `-CXXStaticCastExpr 0x561be776be10 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x561be776bde0 <col:7> 'Timestamp' lvalue ParmVar 0x561be776b3b8 '' 'Timestamp &&'
| `-CompoundStmt 0x561be776bef8 <col:7>
|-CXXDestructorDecl 0x561be776b468 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561be746b4c0 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x561be746b5c8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x561be746c0b8 <col:7>
|   |-CXXMemberCallExpr 0x561be746c058 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x561be746bf98 <col:7> '<bound member function type>' .operator= 0x561be746b668
|   | | `-MemberExpr 0x561be746bea8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x561be7764618
|   | |   `-CXXThisExpr 0x561be746be98 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x561be746bf68 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x561be7764618
|   |   `-DeclRefExpr 0x561be746bf48 <col:7> 'const Timestamp' lvalue ParmVar 0x561be746b5c8 '' 'const Timestamp &'
|   `-ReturnStmt 0x561be746c0a8 <col:7>
|     `-UnaryOperator 0x561be746c090 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561be746c080 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x561be746b968 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x561be746ba78 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x561be77f5ee8 <col:7>
    |-CXXMemberCallExpr 0x561be77f5e88 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x561be77f5df0 <col:7> '<bound member function type>' .operator= 0x561be746b7e8
    | | `-MemberExpr 0x561be77f5cc0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x561be7764618
    | |   `-CXXThisExpr 0x561be77f5cb0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x561be77f5dc0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x561be7764618
    |   `-CXXStaticCastExpr 0x561be77f5d90 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x561be77f5d60 <col:7> 'Timestamp' lvalue ParmVar 0x561be746ba78 '' 'Timestamp &&'
    `-ReturnStmt 0x561be77f5ed8 <col:7>
      `-UnaryOperator 0x561be77f5ec0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x561be77f5eb0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be7917118 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x561be7917328 prev 0x561be7917118 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561be7918530 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x561be79184e0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x561be79184c0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x561be7918370 'type'
|     `-SubstTemplateTypeParmType 0x561be7918190 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x561be753e800 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be753e7a8 'T'
|       `-RecordType 0x561be7917ce0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x561be7917bf8 'sized_array_memory'
|-FieldDecl 0x561be791d1a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x561be791d1f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561be791d228 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x561be79173c0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561be75759a8 'T'
|   `-RecordType 0x561be7916320 'TimerSet::heap_element'
|     `-CXXRecord 0x561be7916290 'heap_element'
|-TypedefDecl 0x561be791d2e8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x561be791d2b0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x561be79173c0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be7916320 'TimerSet::heap_element'
|       `-CXXRecord 0x561be7916290 'heap_element'
|-TypedefDecl 0x561be791d378 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x561be791d340 'const TimerSet::heap_element &'
|   `-QualType 0x561be79173c1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x561be79173c0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7916320 'TimerSet::heap_element'
|         `-CXXRecord 0x561be7916290 'heap_element'
|-TypedefDecl 0x561be791d408 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x561be791d3d0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x561be79173c0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be7916320 'TimerSet::heap_element'
|       `-CXXRecord 0x561be7916290 'heap_element'
|-TypedefDecl 0x561be791d4c8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x561be791d490 'const TimerSet::heap_element *'
|   `-QualType 0x561be79173c1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x561be79173c0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7916320 'TimerSet::heap_element'
|         `-CXXRecord 0x561be7916290 'heap_element'
|-TypedefDecl 0x561be791e120 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x561be791e0d0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x561be791e0b0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x561be791dfe8 'type'
|     `-LValueReferenceType 0x561be791dfb0 'const TimerSet::heap_element &'
|       `-QualType 0x561be791dd51 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x561be791dd50 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x561be7547310 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561be75472b8 'T'
|           `-RecordType 0x561be7916320 'TimerSet::heap_element'
|             `-CXXRecord 0x561be7916290 'heap_element'
|-TypedefDecl 0x561be791e188 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x561be791d340 'const TimerSet::heap_element &'
|   `-QualType 0x561be79173c1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x561be79173c0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7916320 'TimerSet::heap_element'
|         `-CXXRecord 0x561be7916290 'heap_element'
|-TypedefDecl 0x561be791e1e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be791e248 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x561be791d3d0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x561be79173c0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be7916320 'TimerSet::heap_element'
|       `-CXXRecord 0x561be7916290 'heap_element'
|-TypedefDecl 0x561be791e2b0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x561be791d490 'const TimerSet::heap_element *'
|   `-QualType 0x561be79173c1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x561be79173c0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7916320 'TimerSet::heap_element'
|         `-CXXRecord 0x561be7916290 'heap_element'
|-EnumDecl 0x561be791e308 <line:134:5> col:5
| `-EnumConstantDecl 0x561be791e400 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561be791e3e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561be7576bc8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561be7576ba0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561be7576b80 <col:40> 'int' 1
|-CXXConstructorDecl 0x561be791e488 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561be791e718 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x561be791e540 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be791e5e0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x561be791e9d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x561be791e8c0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x561be791ec98 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x561be791eb80 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x561be791efe0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x561be791eec0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x561be791f2f0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x561be791f1d0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x561be791f5e0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x561be791f428 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be791f4a0 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x561be791f738 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x561be791f818 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be791f870 <col:30> Inherited
|-CXXMethodDecl 0x561be791f8b8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x561be791f968 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be791f9c0 <col:30> Inherited
|-CXXMethodDecl 0x561be791fa88 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x561be791fb38 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be791fb90 <col:30> Inherited
|-CXXMethodDecl 0x561be791fbd8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x561be791fc88 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be791fce0 <col:30> Inherited
|-CXXMethodDecl 0x561be791fd28 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x561be791fdd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be791fe30 <col:30> Inherited
|-CXXMethodDecl 0x561be791fe78 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x561be791ff28 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be791ff80 <col:30> Inherited
|-CXXMethodDecl 0x561be791ffa8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be7920058 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be7920108 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x561be79202c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79201b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be7920230 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x561be7920418 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561be7920388 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79205c8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x561be79204d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be7920680 <col:20>
| `-OptimizeNoneAttr 0x561be79206d8 <col:30>
|-CXXMethodDecl 0x561be79207f8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x561be7920700 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be79208b0 <col:20>
| `-OptimizeNoneAttr 0x561be7920908 <col:30>
|-CXXMethodDecl 0x561be79209c0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be7920930 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7920b08 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be7920a78 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7920c38 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x561be7920d68 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x561be7920e38 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x561be7920f08 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x561be7921048 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be7920fb8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7921190 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be7921100 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79212d8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x561be7921248 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be7921390 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561be7921490 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561be7921400 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be7921548 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561be7921608 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x561be7921708 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x561be79218b8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x561be79217c8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x561be7922078 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561be7921970 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x561be7921fd8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x561be7921ed8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x561be7922158 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be79222a8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x561be7922218 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x561be7922360 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561be79225a8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7922420 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x561be7922498 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x561be7922768 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x561be7922678 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x561be79229b8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x561be7922830 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x561be79228a8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x561be7922a78 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be792f3a0 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x561be7922be0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x561be792f470 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561be792f470

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be792f5b0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x561be792f7b8 prev 0x561be792f5b0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561be79307d0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x561be7930780 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x561be7930760 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x561be7930610 'type'
|     `-SubstTemplateTypeParmType 0x561be7897900 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561be753e800 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be753e7a8 'T'
|       `-RecordType 0x561be7897450 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x561be7897368 'sized_array_memory'
|-FieldDecl 0x561be79308d0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x561be7930920 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561be7930958 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x561be792f850 'Timer *' sugar
|   |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561be75759a8 'T'
|   `-PointerType 0x561be77ce4a0 'Timer *'
|     `-RecordType 0x561be77cd5f0 'Timer'
|       `-CXXRecord 0x561be774d478 'Timer'
|-TypedefDecl 0x561be7930a18 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x561be79309e0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x561be792f850 'Timer *' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-PointerType 0x561be77ce4a0 'Timer *'
|       `-RecordType 0x561be77cd5f0 'Timer'
|         `-CXXRecord 0x561be774d478 'Timer'
|-TypedefDecl 0x561be7930ad8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x561be7930aa0 'Timer *const &'
|   `-QualType 0x561be792f851 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x561be792f850 'Timer *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be77ce4a0 'Timer *'
|         `-RecordType 0x561be77cd5f0 'Timer'
|           `-CXXRecord 0x561be774d478 'Timer'
|-TypedefDecl 0x561be7930b98 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x561be7930b60 'Timer **'
|   `-SubstTemplateTypeParmType 0x561be792f850 'Timer *' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-PointerType 0x561be77ce4a0 'Timer *'
|       `-RecordType 0x561be77cd5f0 'Timer'
|         `-CXXRecord 0x561be774d478 'Timer'
|-TypedefDecl 0x561be7930c58 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x561be7930c20 'Timer *const *'
|   `-QualType 0x561be792f851 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x561be792f850 'Timer *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be77ce4a0 'Timer *'
|         `-RecordType 0x561be77cd5f0 'Timer'
|           `-CXXRecord 0x561be774d478 'Timer'
|-TypedefDecl 0x561be7931830 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x561be79317e0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x561be79317c0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x561be7931750 'type'
|     `-SubstTemplateTypeParmType 0x561be7931510 'Timer *' sugar
|       |-TemplateTypeParmType 0x561be7547a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75479f0 'T'
|       `-PointerType 0x561be77ce4a0 'Timer *'
|         `-RecordType 0x561be77cd5f0 'Timer'
|           `-CXXRecord 0x561be774d478 'Timer'
|-TypedefDecl 0x561be7931898 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x561be7930aa0 'Timer *const &'
|   `-QualType 0x561be792f851 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x561be792f850 'Timer *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be77ce4a0 'Timer *'
|         `-RecordType 0x561be77cd5f0 'Timer'
|           `-CXXRecord 0x561be774d478 'Timer'
|-TypedefDecl 0x561be79318f0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be7931958 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x561be7930b60 'Timer **'
|   `-SubstTemplateTypeParmType 0x561be792f850 'Timer *' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-PointerType 0x561be77ce4a0 'Timer *'
|       `-RecordType 0x561be77cd5f0 'Timer'
|         `-CXXRecord 0x561be774d478 'Timer'
|-TypedefDecl 0x561be79319c0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x561be7930c20 'Timer *const *'
|   `-QualType 0x561be792f851 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x561be792f850 'Timer *' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-PointerType 0x561be77ce4a0 'Timer *'
|         `-RecordType 0x561be77cd5f0 'Timer'
|           `-CXXRecord 0x561be774d478 'Timer'
|-EnumDecl 0x561be7931a18 <line:134:5> col:5
| `-EnumConstantDecl 0x561be7931b10 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561be7931af0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561be7576bc8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561be7576ba0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561be7576b80 <col:40> 'int' 1
|-CXXConstructorDecl 0x561be7931b98 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561be7931e28 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7931c50 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be7931cf0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x561be79320e8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x561be7931fd0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x561be79323a8 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x561be7932290 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x561be79326f0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x561be79325d0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x561be7932a00 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x561be79328e0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x561be7932cf0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7932b38 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be7932bb0 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561be7932e48 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x561be7932f28 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7932f80 <col:30> Inherited
|-CXXMethodDecl 0x561be7932fc8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x561be7933078 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79330d0 <col:30> Inherited
|-CXXMethodDecl 0x561be7933198 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x561be7933248 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79332a0 <col:30> Inherited
|-CXXMethodDecl 0x561be79332e8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x561be7933398 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be79333f0 <col:30> Inherited
|-CXXMethodDecl 0x561be7933438 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x561be79334e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7933540 <col:30> Inherited
|-CXXMethodDecl 0x561be7933588 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x561be7933638 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be7933690 <col:30> Inherited
|-CXXMethodDecl 0x561be79336b8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be7933768 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be7933818 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561be79339d8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be79338c8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be7933940 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561be7933b28 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561be7933a98 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7933cd8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x561be7933be0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be7933d90 <col:20>
| `-OptimizeNoneAttr 0x561be7933de8 <col:30>
|-CXXMethodDecl 0x561be7933f08 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x561be7933e10 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be7933fc0 <col:20>
| `-OptimizeNoneAttr 0x561be7934018 <col:30>
|-CXXMethodDecl 0x561be79340d0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561be7934040 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7934218 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be7934188 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be7934348 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x561be7934478 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x561be7934548 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x561be7934618 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x561be7934758 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x561be79346c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79348a0 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be7934810 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be79349e8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x561be7934958 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be7934aa0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561be7934ba0 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561be7934b10 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be7934c58 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561be7934d18 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x561be7934e18 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x561be7934f98 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x561be7934ed8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x561be7935758 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561be7935050 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x561be79356b8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x561be79355b8 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x561be7935838 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be7935988 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x561be79358f8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561be7935a40 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561be7935c88 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7935b00 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x561be7935b78 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x561be7935e48 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x561be7935d58 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x561be7936098 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x561be7935f10 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x561be7935f88 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x561be7936158 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be79363b8 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x561be79362c0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x561be7936488 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561be7936488

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be752d250 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561be752d368 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x561be752d3f8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x561be752d480 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x561be752d570 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x561be752d670 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x561be752d730 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x561be752d7f0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x561be752d918 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x561be752d918
| `-ParmVarDecl 0x561be752da28 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x561be7937238 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x561be7937238
  `-ParmVarDecl 0x561be79373b0 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be7915410 prev 0x561be77f3978 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x561be7915508 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x561be7915598 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x561be7915620 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x561be7915718 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x561be7937710 <col:43, col:67>
|   `-ReturnStmt 0x561be7937700 <col:45, col:52>
|     `-CXXConstructExpr 0x561be79376d0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x561be79376a0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x561be7916f00
|         `-CXXThisExpr 0x561be7937690 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x561be79157d8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x561be79159e0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x561be7915888 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x561be7915900 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x561be7915ad8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x561be7915ba0 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x561be7937790 <col:39, col:67>
|   `-ReturnStmt 0x561be7937780 <col:41, col:48>
|     `-ImplicitCastExpr 0x561be7937768 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561be7937738 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x561be7916fe8
|         `-CXXThisExpr 0x561be7937728 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x561be7915c68 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x561be7937810 <col:35, col:59>
|   `-ReturnStmt 0x561be7937800 <col:37, col:44>
|     `-ImplicitCastExpr 0x561be79377e8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561be79377b8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x561be7917050
|         `-CXXThisExpr 0x561be79377a8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x561be7915db0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x561be7915d20 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x561be7915ef8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x561be7915e68 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x561be79160f8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x561be7915fb0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x561be7916028 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x561be79161c8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x561be7916268 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x561be7916290 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561be79163a8 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x561be7916448 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x561be79164a8 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x561be79165d8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x561be7916508 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x561be7916448 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x561be79378e8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x561be7937890 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x561be7937860 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x561be774eae8
|   |       `-ImplicitCastExpr 0x561be79378b0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x561be7937848 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x561be7937828 <col:17> 'Timer *' lvalue ParmVar 0x561be7916508 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x561be79164a8 't' 'Timer *'
|   | `-ImplicitCastExpr 0x561be7937980 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x561be7937940 <col:41> 'Timer *' lvalue ParmVar 0x561be7916508 't_' 'Timer *'
|   `-CompoundStmt 0x561be79379d0 <col:45, line:44:2>
|-CXXRecordDecl 0x561be79166a0 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561be79167b8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x561be7916a08 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x561be7916888 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x561be7916900 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x561be7937b30 <col:71, line:49:2>
|     `-ReturnStmt 0x561be7937b20 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x561be7937ae8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x561be7937ad0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x561be7937ab0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x561be7785138 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x561be7937a00 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x561be7916448
|         | `-DeclRefExpr 0x561be79379e0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x561be7916888 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x561be7937a50 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x561be7916448
|           `-DeclRefExpr 0x561be7937a30 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x561be7916900 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x561be7916ad0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561be7916be8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x561be7916e08 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x561be7916c88 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x561be7916d00 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x561be7937d38 <col:63, line:54:2>
|     `-BinaryOperator 0x561be7937d18 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x561be7937bc8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x561be77f2e18
|       | `-ImplicitCastExpr 0x561be7937bb0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x561be7937b80 <col:6, col:9> 'Timer *' lvalue ->t 0x561be79164a8
|       |     `-ImplicitCastExpr 0x561be7937b68 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x561be7937b48 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x561be7916d00 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x561be7937d00 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x561be7937ce0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x561be7937c88 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x561be7937c68 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x561be7937c38 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x561be7937bf8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x561be7916d00 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x561be7937c50 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x561be7937c18 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x561be7916c88 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x561be7937cc8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x561be7937ca8 <col:39> 'int' 1
|-FieldDecl 0x561be7916f00 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x561be7916f70 <col:44, col:53> aligned
|   `-ConstantExpr 0x561be7916f50 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x561be7916ed0 <col:52> 'int' 8
|-FieldDecl 0x561be7916fe8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x561be7917050 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x561be79170b8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x561be792f550 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x561be7936570 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x561be79365d0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x561be7936630 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x561be7936690 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be7936780 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x561be79366f0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x561be7936848 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x561be7938190 <col:29, line:81:5>
|   `-IfStmt 0x561be7938168 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x561be7937e20 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x561be7937dc0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x561be7937d90 <col:6, col:18> '<bound member function type>' .size 0x561be791ffa8
|     |     `-ImplicitCastExpr 0x561be7937e08 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x561be7937d60 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x561be792f550
|     |         `-CXXThisExpr 0x561be7937d50 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x561be7938010 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x561be7937ff8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x561be7937fd8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x561be746b4c0 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x561be7937e48 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x561be7916f00
|     | | `-CXXThisExpr 0x561be7937e38 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x561be7937fc0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x561be7937f90 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x561be7916448
|     |     `-CXXMemberCallExpr 0x561be7937f68 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x561be7937f38 <col:22, col:34> '<bound member function type>' .unchecked_at 0x561be7921048
|     |       | `-MemberExpr 0x561be7937e88 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x561be792f550
|     |       |   `-CXXThisExpr 0x561be7937e78 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x561be7937f18 <col:47> 'int' 0
|     `-ExprWithCleanups 0x561be7938150 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x561be7938118 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x561be7938100 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x561be79380e0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x561be746b968 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x561be7938058 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x561be7916f00
|         | `-CXXThisExpr 0x561be7938048 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x561be79380c8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x561be7938098 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x561be7936988 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x561be79368f8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x561be7936a50 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x561be7936b10 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x561be7936bd0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x561be7936cc0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x561be7936d28 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x561be7936d28
| `-ParmVarDecl 0x561be7936e38 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x561be7936ed8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x561be7936ed8
| `-ParmVarDecl 0x561be7936fe8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x561be7937088 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x561be7937088
| `-ParmVarDecl 0x561be7937198 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x561be7937420 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x561be7937420
| `-ParmVarDecl 0x561be7937528 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x561be79375b0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x561be79375b0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.15, %class.Vector.16, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.15, %class.Vector.16, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be7964fc8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x561be79651d8 prev 0x561be7964fc8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561be79662b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x561be7966260 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x561be7966240 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x561be79660f0 'type'
|     `-SubstTemplateTypeParmType 0x561be7897900 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x561be753e800 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be753e7a8 'T'
|       `-RecordType 0x561be7897450 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x561be7897368 'sized_array_memory'
|-FieldDecl 0x561be79663b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x561be7966400 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561be7966438 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x561be7965270 'pollfd' sugar
|   |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561be75759a8 'T'
|   `-RecordType 0x561be7963080 'pollfd'
|     `-CXXRecord 0x561be7962ff0 'pollfd'
|-TypedefDecl 0x561be79664f8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x561be79664c0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x561be7965270 'pollfd' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be7963080 'pollfd'
|       `-CXXRecord 0x561be7962ff0 'pollfd'
|-TypedefDecl 0x561be79665b8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x561be7966580 'const pollfd &'
|   `-QualType 0x561be7965271 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x561be7965270 'pollfd' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7963080 'pollfd'
|         `-CXXRecord 0x561be7962ff0 'pollfd'
|-TypedefDecl 0x561be7966648 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x561be7966610 'pollfd *'
|   `-SubstTemplateTypeParmType 0x561be7965270 'pollfd' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be7963080 'pollfd'
|       `-CXXRecord 0x561be7962ff0 'pollfd'
|-TypedefDecl 0x561be7966708 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x561be79666d0 'const pollfd *'
|   `-QualType 0x561be7965271 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x561be7965270 'pollfd' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7963080 'pollfd'
|         `-CXXRecord 0x561be7962ff0 'pollfd'
|-TypedefDecl 0x561be79672e0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x561be7967290 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x561be7967270 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x561be7967200 'type'
|     `-SubstTemplateTypeParmType 0x561be7966fc0 'pollfd' sugar
|       |-TemplateTypeParmType 0x561be7547a40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75479f0 'T'
|       `-RecordType 0x561be7963080 'pollfd'
|         `-CXXRecord 0x561be7962ff0 'pollfd'
|-TypedefDecl 0x561be7967348 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x561be7966580 'const pollfd &'
|   `-QualType 0x561be7965271 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x561be7965270 'pollfd' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7963080 'pollfd'
|         `-CXXRecord 0x561be7962ff0 'pollfd'
|-TypedefDecl 0x561be79673a0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be7967408 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x561be7966610 'pollfd *'
|   `-SubstTemplateTypeParmType 0x561be7965270 'pollfd' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be7963080 'pollfd'
|       `-CXXRecord 0x561be7962ff0 'pollfd'
|-TypedefDecl 0x561be7967470 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x561be79666d0 'const pollfd *'
|   `-QualType 0x561be7965271 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x561be7965270 'pollfd' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7963080 'pollfd'
|         `-CXXRecord 0x561be7962ff0 'pollfd'
|-EnumDecl 0x561be79674c8 <line:134:5> col:5
| `-EnumConstantDecl 0x561be79675c0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561be79675a0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561be7576bc8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561be7576ba0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561be7576b80 <col:40> 'int' 1
|-CXXConstructorDecl 0x561be7967648 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561be79678d8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x561be7967700 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be79677a0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x561be7967b98 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x561be7967a80 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x561be7967e58 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x561be7967d40 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x561be767a060 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x561be7679f40 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x561be767a370 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x561be767a250 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x561be767a660 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x561be767a4a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be767a520 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x561be767a7b8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x561be767a898 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be767a8f0 <col:30> Inherited
|-CXXMethodDecl 0x561be767a938 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x561be767a9e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be767aa40 <col:30> Inherited
|-CXXMethodDecl 0x561be767ab08 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x561be767abb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be767ac10 <col:30> Inherited
|-CXXMethodDecl 0x561be767ac58 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x561be767ad08 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be767ad60 <col:30> Inherited
|-CXXMethodDecl 0x561be767ada8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x561be767ae58 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be767aeb0 <col:30> Inherited
|-CXXMethodDecl 0x561be767aef8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x561be767afa8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be767b000 <col:30> Inherited
|-CXXMethodDecl 0x561be767b028 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be767b0d8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be767b188 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561be767b348 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x561be767b238 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be767b2b0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x561be767b498 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561be767b408 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be767b648 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x561be767b550 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be767b700 <col:20>
| `-OptimizeNoneAttr 0x561be767b758 <col:30>
|-CXXMethodDecl 0x561be767b878 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x561be767b780 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be767b930 <col:20>
| `-OptimizeNoneAttr 0x561be767b988 <col:30>
|-CXXMethodDecl 0x561be767ba40 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be767b9b0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be767bb88 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be767baf8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be767bcb8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x561be767bde8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x561be767beb8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x561be767bf88 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x561be767c0c8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be767c038 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be767c210 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be767c180 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be767c358 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x561be767c2c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be767c410 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561be767c510 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561be767c480 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be767c5c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561be767c688 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x561be767c788 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x561be767c938 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x561be767c848 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x561be767d0f8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561be767c9f0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x561be767d058 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x561be767cf58 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x561be767d1d8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be767d328 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x561be767d298 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x561be767d3e0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561be767d628 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x561be767d4a0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x561be767d518 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x561be767d7e8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x561be767d6f8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x561be767da38 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x561be767d8b0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x561be767d928 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x561be767daf8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be767dd58 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x561be767dc60 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x561be767de28 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561be767de28

Layout: <CGRecordLayout
  LLVMType:%class.Vector.17 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.17 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be767f310 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x561be767f4e8 prev 0x561be767f310 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x561be767f578 <col:46, col:52> col:46 public
|-TypedefDecl 0x561be767f5a0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be7681170 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x561be7681120 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x561be767fa50 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x561be767f950 'type'
|     `-TemplateSpecializationType 0x561be767f8e0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x561be767f7c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x561be767f7a0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x561be767f780 <col:24> 'unsigned long' 24
|       `-RecordType 0x561be767f8c0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x561be767f7e0 'char_array'
|-TypedefDecl 0x561be7681228 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x561be76811f0 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x561be76811d0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x561be7681170 'type'
|     `-ElaboratedType 0x561be7681120 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x561be767fa50 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x561be767f950 'type'
|         `-TemplateSpecializationType 0x561be767f8e0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x561be767f7c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x561be767f7a0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x561be767f780 <col:24> 'unsigned long' 24
|           `-RecordType 0x561be767f8c0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x561be767f7e0 'char_array'
|-CXXMethodDecl 0x561be76813a8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x561be76812b8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x561be7681498 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x561be7681578 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x561be7681578
|-CXXMethodDecl 0x561be7681848 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x561be7681750 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x561be7681a88 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x561be7681900 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be7681978 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561be7681c58 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x561be7681b48 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be7681bc0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561be7681db8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x561be7968030 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x561be7968278 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x561be79680f0 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x561be7968168 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561be79684d8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x561be7968348 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x561be79683c0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561be7968698 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x561be79685a8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561be7968858 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x561be7968760 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561be7968910 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be79689c0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be7968bf8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x561be7968a70 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x561be7968ae8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x561be7968e98 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x561be7968da0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x561be7968f60 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x561be7968fb0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x561be7969000 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.19 = type { %struct.char_array.20*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.19 = type { %struct.char_array.20*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be767df70 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x561be767e178 prev 0x561be767df70 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x561be767f280 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x561be767f230 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x561be767f210 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x561be767f0c0 'type'
|     `-SubstTemplateTypeParmType 0x561be767eee0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x561be753e800 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be753e7a8 'T'
|       `-RecordType 0x561be78f7080 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x561be78f6f98 'sized_array_memory'
|-FieldDecl 0x561be7969050 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x561be79690a0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x561be79690d8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x561be767e210 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x561be75759a8 'T'
|   `-RecordType 0x561be7964b30 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x561be7964aa0 'SelectorInfo'
|-TypedefDecl 0x561be7969198 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x561be7969160 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x561be767e210 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be7964b30 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x561be7964aa0 'SelectorInfo'
|-TypedefDecl 0x561be7969258 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x561be7969220 'const SelectSet::SelectorInfo &'
|   `-QualType 0x561be767e211 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x561be767e210 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7964b30 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561be7964aa0 'SelectorInfo'
|-TypedefDecl 0x561be79692e8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x561be79692b0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x561be767e210 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be7964b30 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x561be7964aa0 'SelectorInfo'
|-TypedefDecl 0x561be79693a8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x561be7969370 'const SelectSet::SelectorInfo *'
|   `-QualType 0x561be767e211 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x561be767e210 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7964b30 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561be7964aa0 'SelectorInfo'
|-TypedefDecl 0x561be796a000 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x561be7969fb0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x561be7969f90 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x561be7969ec8 'type'
|     `-LValueReferenceType 0x561be7969e90 'const SelectSet::SelectorInfo &'
|       `-QualType 0x561be7969c31 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x561be7969c30 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x561be7547310 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x561be75472b8 'T'
|           `-RecordType 0x561be7964b30 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x561be7964aa0 'SelectorInfo'
|-TypedefDecl 0x561be796a068 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x561be7969220 'const SelectSet::SelectorInfo &'
|   `-QualType 0x561be767e211 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x561be767e210 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7964b30 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561be7964aa0 'SelectorInfo'
|-TypedefDecl 0x561be796a0c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x561be725a580 'int'
|-TypedefDecl 0x561be796a128 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x561be79692b0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x561be767e210 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x561be75759a8 'T'
|     `-RecordType 0x561be7964b30 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x561be7964aa0 'SelectorInfo'
|-TypedefDecl 0x561be796a190 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x561be7969370 'const SelectSet::SelectorInfo *'
|   `-QualType 0x561be767e211 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x561be767e210 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x561be7575a00 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x561be75759a8 'T'
|       `-RecordType 0x561be7964b30 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x561be7964aa0 'SelectorInfo'
|-EnumDecl 0x561be796a1e8 <line:134:5> col:5
| `-EnumConstantDecl 0x561be796a2e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x561be796a2c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x561be7576bc8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x561be7576ba0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x561be7576b80 <col:40> 'int' 1
|-CXXConstructorDecl 0x561be796a368 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x561be796a5f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561be796a420 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be796a4c0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x561be796a8b8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x561be796a7a0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x561be796ab78 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x561be796aa60 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x561be796aec0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x561be796ada0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x561be796b1d0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x561be796b0b0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x561be796b4c0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561be796b308 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be796b380 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x561be796b618 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x561be796b6f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be796b750 <col:30> Inherited
|-CXXMethodDecl 0x561be796b798 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x561be796b848 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be796b8a0 <col:30> Inherited
|-CXXMethodDecl 0x561be796b968 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561be796ba18 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be796ba70 <col:30> Inherited
|-CXXMethodDecl 0x561be796bab8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561be796bb68 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be796bbc0 <col:30> Inherited
|-CXXMethodDecl 0x561be796bc08 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561be796bcb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be796bd10 <col:30> Inherited
|-CXXMethodDecl 0x561be796bd58 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x561be796be08 <col:20> Inherited
| `-OptimizeNoneAttr 0x561be796be60 <col:30> Inherited
|-CXXMethodDecl 0x561be796be88 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be796bf38 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x561be796bfe8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x561be796c1a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561be796c098 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x561be796c110 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x561be796c2f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x561be796c268 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be796c4a8 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x561be796c3b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be796c560 <col:20>
| `-OptimizeNoneAttr 0x561be796c5b8 <col:30>
|-CXXMethodDecl 0x561be796c6d8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x561be796c5e0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x561be796c790 <col:20>
| `-OptimizeNoneAttr 0x561be796c7e8 <col:30>
|-CXXMethodDecl 0x561be796c8a0 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be796c810 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be796c9e8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be796c958 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be796cb18 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x561be796cc48 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x561be796cd18 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x561be796cde8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x561be796cf28 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x561be796ce98 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be796d070 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x561be796cfe0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x561be796d1b8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x561be796d128 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be796d270 <col:48> Inherited "" ""
|-CXXMethodDecl 0x561be796d370 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x561be796d2e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x561be796d428 <col:60> Inherited "" ""
|-CXXMethodDecl 0x561be796d4e8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x561be796d5e8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x561be796d798 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x561be796d6a8 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x561be796df58 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x561be796d850 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x561be796deb8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x561be796ddb8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x561be796e038 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x561be796e188 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x561be796e0f8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x561be796e240 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x561be796e488 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x561be796e300 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x561be796e378 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x561be796e648 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x561be796e558 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x561be796e898 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x561be796e710 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x561be796e788 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x561be796e958 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x561be796ebb8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x561be796eac0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x561be796ec88 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x561be796ec88

Layout: <CGRecordLayout
  LLVMType:%class.Vector.18 = type { %class.vector_memory.19 }
  NonVirtualBaseLLVMType:%class.Vector.18 = type { %class.vector_memory.19 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be7963c80 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561be7963d98 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x561be7963e28 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x561be7963eb0 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x561be7963fa0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x561be7963fa0
|-CXXMethodDecl 0x561be79640a0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x561be7964340 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x561be7964158 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x561be79641d0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x561be7964250 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x561be79645b0 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x561be7964410 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x561be7964488 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x561be7964508 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x561be7964708 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x561be7964678 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x561be79647d0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x561be7970378 <col:34, line:50:5>
|   |-BinaryOperator 0x561be796fd08 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x561be796fcc8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x561be7964f58
|   | | `-CXXThisExpr 0x561be796fcb8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x561be796fcf8 <col:23> 'bool' true
|   `-CallExpr 0x561be7970350 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x561be7970338 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x561be79702b8 <col:2> 'void (long)' lvalue Function 0x561be79701b8 'ignore_result' 'void (long)' (FunctionTemplate 0x561be7533808 'ignore_result')
|     `-CallExpr 0x561be796ff20 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x561be796ff08 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561be796fe88 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x561be793b1b8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x561be796ff58 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x561be796fe30 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x561be796fe18 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x561be796fdc8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x561be7964ef8
|       |   |   `-CXXThisExpr 0x561be796fdb8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x561be796fdf8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x561be796ff88 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x561be796ff70 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x561be796fe50 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x561be796ffa0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x561be796fe68 <col:41> 'int' 1
|-CXXMethodDecl 0x561be7964910 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x561be7964880 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x561be79649d8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x561be7964a78 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x561be7964aa0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561be7964bb8 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x561be7964c58 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x561be7964cb8 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x561be7964d20 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x561be7964dd0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x561be7964c58 'read' 'Element *'
|   | `-ImplicitCastExpr 0x561be79703d8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x561be7970398 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x561be7964cb8 'write' 'Element *'
|   | `-ImplicitCastExpr 0x561be7970458 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x561be7970418 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x561be7964d20 'pollfd' 'int'
|   | `-UnaryOperator 0x561be79704b8 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x561be7970498 <col:35> 'int' 1
|   `-CompoundStmt 0x561be7970530 <line:64:2, line:65:2>
|-FieldDecl 0x561be7964ef8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x561be7964f58 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x561be767df10 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x561be796ed70 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x561be796efa8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x561be796edd8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x561be796ee50 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x561be796eec8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x561be796f190 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x561be796f078 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x561be796f0f8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x561be796f3d8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x561be796f258 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x561be796f2d8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x561be796f5e8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x561be796f498 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x561be796f510 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x561be796f738 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x561be796f6a8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x561be796f800 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x561be796f8c0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x561be796f988 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x561be796f988
| `-ParmVarDecl 0x561be796fa98 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x561be796fb38 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x561be796fb38
  `-ParmVarDecl 0x561be796fc48 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.17, %class.Vector.18 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.17, %class.Vector.18 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be752c1c0 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561be752c2d8 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x561be752c368 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x561be752c3f0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x561be752c4e0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x561be752c5e0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x561be752c6a0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x561be752c760 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x561be752c848 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x561be752c968 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x561be752c968
| `-ParmVarDecl 0x561be752ca78 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x561be7975128 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x561be7975128
  `-ParmVarDecl 0x561be7975238 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be79133b8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561be79134d8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x561be7913578 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x561be79135d8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x561be7974728 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x561be7974728
| `-ParmVarDecl 0x561be7974838 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x561be79748d8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x561be79748d8
| `-ParmVarDecl 0x561be79749e8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x561be7974a58 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x561be7974a58
|-CXXMethodDecl 0x561be79752d8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x561be79752d8
| `-ParmVarDecl 0x561be79753e8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x561be7975458 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x561be7975458
| `-ParmVarDecl 0x561be7975568 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x561be797bb78 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x561be797bc50 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be752e0b0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561be752e1c8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x561be752e258 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x561be752e2e0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x561be752e3a0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x561be725a580 'int'
|-CXXMethodDecl 0x561be752e468 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x561be752e508 <col:45> always_inline
|-CXXMethodDecl 0x561be752e638 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x561be752e570 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x561be752e6e0 <col:49> always_inline
|-CXXConstructorDecl 0x561be752e7d8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x561be752e7d8
| `-ParmVarDecl 0x561be752e8e8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x561be752e988 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x561be752e988
| `-ParmVarDecl 0x561be752fc68 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x561be7974b40 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x561be7974b40
|-CXXMethodDecl 0x561be7975608 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x561be7975608
| `-ParmVarDecl 0x561be7975718 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x561be7975788 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x561be7975788
  `-ParmVarDecl 0x561be7975898 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be79709a0 prev 0x561be7963bf0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x561be7970a98 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x561be7970b28 <col:22, col:28> col:22 public
|-EnumDecl 0x561be7970b50 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x561be7970c68 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x561be7970c48 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x561be7970c30 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x561be7970c10 <col:32> 'int' 1
| `-EnumConstantDecl 0x561be7970d10 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x561be7970cf0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x561be7970cd8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x561be7970cb8 <col:53> 'int' 1000
|-CXXMethodDecl 0x561be7970db0 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x561be7970e70 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x561be7970f58 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x561be7975958 <col:34, col:52>
|   `-ReturnStmt 0x561be7975948 <col:36, col:43>
|     `-MemberExpr 0x561be7975918 <col:43> 'TimerSet' lvalue ->_timers 0x561be7972c28
|       `-CXXThisExpr 0x561be7975908 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x561be7971048 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x561be79759c0 <col:46, col:64>
|   `-ReturnStmt 0x561be79759b0 <col:48, col:55>
|     `-MemberExpr 0x561be7975980 <col:55> 'const TimerSet' lvalue ->_timers 0x561be7972c28
|       `-CXXThisExpr 0x561be7975970 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x561be7971138 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x561be7975a28 <col:36, col:55>
|   `-ReturnStmt 0x561be7975a18 <col:38, col:45>
|     `-MemberExpr 0x561be79759e8 <col:45> 'SelectSet' lvalue ->_selects 0x561be7972c88
|       `-CXXThisExpr 0x561be79759d8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x561be7971228 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x561be7975a90 <col:48, col:67>
|   `-ReturnStmt 0x561be7975a80 <col:50, col:57>
|     `-MemberExpr 0x561be7975a50 <col:57> 'const SelectSet' lvalue ->_selects 0x561be7972c88
|       `-CXXThisExpr 0x561be7975a40 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x561be79712e8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x561be79713d8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x561be7971548 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x561be7971488 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x561be7971610 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x561be7971a58 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x561be79716c0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x561be7971940 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x561be7971b28 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x561be7971be8 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x561be7971ca8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x561be7971de8 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x561be7971d58 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x561be7971eb0 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x561be7971f70 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x561be7972030 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x561be79720f0 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x561be7972230 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x561be79721a0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x561be79722f8 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x561be79723b8 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x561be7972458 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x561be7972520 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561be7972570 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561be79725c0 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561be7972610 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561be7972660 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561be79726b0 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561be7972700 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561be7972750 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561be79727a0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x561be79727f0 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x561be7972840 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x561be7972938 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x561be79728a8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x561be7972a88 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x561be79729f8 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x561be7972b30 <line:104:3, col:10> col:3 private
|-FieldDecl 0x561be7972b68 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x561be7972bc8 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x561be7972c28 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x561be7972c88 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x561be7972d08 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x561be7972d78 <col:40, col:50> aligned
|   `-ConstantExpr 0x561be7972d58 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x561be7972cd8 <col:48> 'int' 64
|-FieldDecl 0x561be7972de8 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x561be7972e48 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x561be7972f40 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x561be7973050 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x561be79730b0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x561be7973130 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x561be79731a0 <col:36, col:46> aligned
|   `-ConstantExpr 0x561be7973180 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x561be7973100 <col:44> 'int' 64
|-FieldDecl 0x561be7973218 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x561be7973278 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x561be79732c8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x561be7973308 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x561be7973370 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x561be79733c0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x561be7973568 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x561be79733f8 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x561be7973478 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x561be7973668 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x561be7973668
|-CXXMethodDecl 0x561be7973770 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x561be7973838 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x561be7975b88 <col:34, line:217:5>
|   `-ReturnStmt 0x561be7975b78 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x561be7975b60 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561be7975b30 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x561be792dac0
|         `-ImplicitCastExpr 0x561be7975b18 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x561be7975ae8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x561be792da58
|             `-MemberExpr 0x561be7975ab8 <col:16> 'const TaskLink' lvalue ->_task_link 0x561be7972b68
|               `-CXXThisExpr 0x561be7975aa8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x561be79738f8 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x561be79739b8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x561be79762b0 <col:39, line:226:5>
|   |-DeclStmt 0x561be7975dd8 <line:223:9, col:68>
|   | `-VarDecl 0x561be7975bb0 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x561be7975d90 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x561be7975d60 <col:24, col:38> '<bound member function type>' .compare_swap 0x561be7527900
|   |     | `-MemberExpr 0x561be7975c28 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x561be7972de8
|   |     |   `-CXXThisExpr 0x561be7975c18 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x561be7975d18 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x561be7975d00 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x561be7975cd8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x561be7975cb8 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x561be7975dc0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x561be7975d40 <col:66> 'int' 0
|   |-CStyleCastExpr 0x561be7975e20 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x561be7975df0 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x561be7975bb0 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x561be7976290 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x561be7976260 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x561be7975f38 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x561be7975f08 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x561be7975ef0 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x561be7975e48 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x561be7975bb0 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x561be7975ec8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x561be7975eb0 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x561be7975e88 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x561be7975e68 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x561be7975f98 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x561be7975f78 <col:60> 'int' 0
|       `-CallExpr 0x561be79761c0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x561be79761a8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x561be7976188 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561be72fd550 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x561be7976200 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x561be7976088 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x561be7976218 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x561be79760b8 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x561be7976230 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x561be79760f8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x561be7976248 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x561be7976170 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x561be7976158 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x561be7976118 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x561be7973b00 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x561be7973a70 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x561be7973bc8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x561be7973c88 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x561be7973d48 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x561be7973e08 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x561be7973ec8 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x561be7973fc0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x561be7974020 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x561be79740b0 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x561be7974478 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x561be7974478
| `-ParmVarDecl 0x561be7974588 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x561be7974c48 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x561be7974c48
  `-ParmVarDecl 0x561be7974d58 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be792ddd0 prev 0x561be77cd4b0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x561be792df08 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x561be792df98 <col:33, col:39> col:33 public
|-EnumDecl 0x561be792dfc0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x561be792e100 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x561be792e0e0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x561be792e0c0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x561be792e080 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x561be792e0a0 <col:26> 'int' 16
| `-EnumConstantDecl 0x561be792e1d0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x561be792e1b0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x561be792e190 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x561be792e150 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x561be792e170 <col:47> 'int' 31
|-EnumDecl 0x561be792e220 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x561be792e360 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x561be792e480 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561be792e340 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x561be792e320 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x561be792e2e0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x561be792e300 <col:29> 'int' 15
| `-EnumConstantDecl 0x561be792e430 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x561be792e498 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be792e410 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x561be792e3f0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x561be792e3b0 <col:51> 'int' 1
|         `-IntegerLiteral 0x561be792e3d0 <col:54> 'int' 10
|-CXXConstructorDecl 0x561be792e668 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x561be792e4c0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x561be792e540 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x561be792e7c0 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x561be792e730 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x561be792e8b8 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x561be792e8b8
|-CXXMethodDecl 0x561be792ea48 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x561be7914518 <col:42, line:100:5>
|   `-ReturnStmt 0x561be7914508 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x561be79144f0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x561be79144c0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x561be7913240
|         `-CXXThisExpr 0x561be79144b0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561be792eb10 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x561be7914598 <col:36, line:105:5>
|   `-ReturnStmt 0x561be7914588 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x561be7914570 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x561be7914540 <col:16> 'void *const' lvalue ->_thunk 0x561be79132a8
|         `-CXXThisExpr 0x561be7914530 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561be792ebd0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x561be7914618 <col:37, line:110:5>
|   `-ReturnStmt 0x561be7914608 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x561be79145f0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x561be79145c0 <col:16> 'Element *const' lvalue ->_owner 0x561be7913368
|         `-CXXThisExpr 0x561be79145b0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561be792ec90 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x561be792ed58 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x561be792ee18 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x561be792eed8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x561be7914700 <col:35, line:137:5>
|   `-ReturnStmt 0x561be79146f0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x561be79146b8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x561be7914688 <col:16, col:24> '<bound member function type>' ->router 0x561be77ded00
|         `-ImplicitCastExpr 0x561be79146d8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x561be7914670 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x561be7914640 <col:16> 'Element *const' lvalue ->_owner 0x561be7913368
|               `-CXXThisExpr 0x561be7914630 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561be792ef98 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x561be792f158 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x561be792f048 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x561be792f0c0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x561be7911d30 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x561be792f218 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x561be792f290 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x561be7911e00 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x561be7914810 <col:35, line:181:5>
|   `-ReturnStmt 0x561be7914800 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x561be79147e8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x561be79147d0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x561be79147a0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x561be7912e78
|           `-MemberExpr 0x561be7914758 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561be7912f98
|             `-MemberExpr 0x561be7914728 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x561be79131c8
|               `-CXXThisExpr 0x561be7914718 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x561be7911ec0 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x561be7914928 <col:30, line:192:5>
|   `-BinaryOperator 0x561be7914908 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x561be79148b0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561be7912e78
|     | `-MemberExpr 0x561be7914868 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561be7912f98
|     |   `-MemberExpr 0x561be7914838 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561be79131c8
|     |     `-CXXThisExpr 0x561be7914828 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x561be79148f0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x561be79148e0 <col:32> 'bool' false
|-CXXMethodDecl 0x561be7911f80 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x561be7914c78 <col:30, line:206:5>
|   |-BinaryOperator 0x561be7914a20 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x561be79149c8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561be7912e78
|   | | `-MemberExpr 0x561be7914980 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561be7912f98
|   | |   `-MemberExpr 0x561be7914950 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561be79131c8
|   | |     `-CXXThisExpr 0x561be7914940 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x561be7914a08 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x561be79149f8 <col:32> 'bool' true
|   |-CallExpr 0x561be7914ac0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x561be7914aa8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561be7914a88 <col:9> 'void ()' lvalue Function 0x561be73b72e8 'click_fence' 'void ()'
|   `-IfStmt 0x561be7914c60 <line:204:9, line:205:32>
|     |-BinaryOperator 0x561be7914ba0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x561be7914b70 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x561be7914b20 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x561be79135d8
|     | |   `-MemberExpr 0x561be7914af0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x561be7913650
|     | |     `-CXXThisExpr 0x561be7914ae0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x561be7914b88 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x561be7914b50 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x561be7914c20 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x561be7914bd0 <col:13> '<bound member function type>' ->complete_schedule 0x561be7914050
|       | `-CXXThisExpr 0x561be7914bc0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x561be7914c48 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x561be7914c00 <col:31> 'int' 0
|-CXXMethodDecl 0x561be7912040 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x561be7914da0 <col:35, line:240:5>
|   `-BinaryOperator 0x561be7914d80 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x561be7914d28 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561be7912e78
|     | `-MemberExpr 0x561be7914ce0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561be7912f98
|     |   `-MemberExpr 0x561be7914cb0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561be79131c8
|     |     `-CXXThisExpr 0x561be7914ca0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x561be7914d68 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x561be7914d58 <col:32> 'bool' true
|-CXXMethodDecl 0x561be7912100 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x561be7914fb8 <col:37, line:253:5>
|   |-BinaryOperator 0x561be7914e98 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x561be7914e40 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x561be7912e78
|   | | `-MemberExpr 0x561be7914df8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561be7912f98
|   | |   `-MemberExpr 0x561be7914dc8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561be79131c8
|   | |     `-CXXThisExpr 0x561be7914db8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x561be7914e80 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x561be7914e70 <col:32> 'bool' false
|   `-BinaryOperator 0x561be7914f98 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x561be7914f40 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x561be7912ed8
|     | `-MemberExpr 0x561be7914ef8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561be7912f98
|     |   `-MemberExpr 0x561be7914ec8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561be79131c8
|     |     `-CXXThisExpr 0x561be7914eb8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x561be7914f80 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x561be7914f70 <col:41> 'bool' true
|-CXXMethodDecl 0x561be79121c0 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x561be7915138 <col:37, line:264:5>
|   |-BinaryOperator 0x561be79150b8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x561be7915060 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x561be7912ed8
|   | | `-MemberExpr 0x561be7915018 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x561be7912f98
|   | |   `-MemberExpr 0x561be7914fe8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x561be79131c8
|   | |     `-CXXThisExpr 0x561be7914fd8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x561be79150a0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x561be7915090 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x561be7915118 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x561be79150e8 <col:9> '<bound member function type>' ->reschedule 0x561be7911f80
|       `-CXXThisExpr 0x561be79150d8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x561be7912308 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x561be7912278 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x561be79123d8 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x561be7912520 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x561be7912490 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x561be7912670 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x561be79125e0 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x561be7912738 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x561be79127f8 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x561be7912898 <col:53> "" ""
|-CXXMethodDecl 0x561be7912930 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x561be79129d0 <col:47> "" ""
|-AccessSpecDecl 0x561be7912a40 <line:303:3, col:10> col:3 private
|-FieldDecl 0x561be7912a80 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x561be7912ae8 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x561be7912b38 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561be7912c58 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x561be7912ce8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x561be7912e18 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x561be7912e78 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x561be7912ed8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x561be797b2a8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x561be797b380 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x561be797b380
| | |-CXXConstructorDecl 0x561be797b638 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x561be797b638
| | | `-ParmVarDecl 0x561be797b748 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x561be797b7e8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x561be797b7e8
| |   `-ParmVarDecl 0x561be797b8f8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x561be7912f98 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x561be7912ff8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x561be7912f98 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x561be7912e18 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x561be7913050 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x561be7912f98 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x561be7912e78 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x561be79130a8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x561be7912f98 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x561be7912ed8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x561be7913100 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x561be797b1b8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561be797bb18 <col:11>
| |-CXXConstructorDecl 0x561be797b488 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x561be797b488
| | `-ParmVarDecl 0x561be797b598 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x561be797b998 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x561be797b998
|   `-ParmVarDecl 0x561be797baa8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x561be79131c8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x561be7913240 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x561be79132a8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x561be7913308 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x561be7913368 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x561be79133b8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561be79134d8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x561be7913578 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x561be79135d8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x561be7974728 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x561be7974728
| | `-ParmVarDecl 0x561be7974838 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x561be79748d8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x561be79748d8
| | `-ParmVarDecl 0x561be79749e8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x561be7974a58 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x561be7974a58
| |-CXXMethodDecl 0x561be79752d8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x561be79752d8
| | `-ParmVarDecl 0x561be79753e8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x561be7975458 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x561be7975458
| | `-ParmVarDecl 0x561be7975568 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x561be797bb78 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x561be797bc50 <col:11>
|-FieldDecl 0x561be7913650 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x561be7913798 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x561be79136d8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x561be7913948 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x561be7913858 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x561be7913a10 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x561be7913ad0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x561be7913b90 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x561be7915248 <col:41, line:355:5>
|   `-ReturnStmt 0x561be7915238 <line:354:9, col:38>
|     `-BinaryOperator 0x561be7915218 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x561be79151e8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x561be7915198 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x561be79135d8
|       |   `-MemberExpr 0x561be7915168 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x561be7913650
|       |     `-CXXThisExpr 0x561be7915158 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x561be7915200 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x561be79151c8 <col:38> 'int' 0
|-CXXMethodDecl 0x561be7913c50 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x561be7913d90 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x561be7913d00 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x561be7913f08 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x561be7913e48 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x561be7914050 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x561be7913fc0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x561be7914118 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x561be79142e0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x561be79141c8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x561be7914248 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x561be79143e0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x561be7914470 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be77f2ec8 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x561be77f2ff8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x561be77f3ae8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.21 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be774d478 prev 0x561be77cd560 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 referenced class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561be774d570 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x561be774d600 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x561be774d660 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x561be774d708 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x561be774d828 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x561be774d9c8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x561be774d908 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x561be774dc18 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x561be774da88 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x561be774db08 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x561be774dda8 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x561be774dce0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x561be774df28 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x561be774de68 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x561be774e0d8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x561be774e018 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x561be774e1d0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x561be77f3cc0 <col:21, line:58:5>
|   `-IfStmt 0x561be77f3ca8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x561be77f3c10 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x561be77f3be0 <col:6> '<bound member function type>' ->scheduled 0x561be774ea28
|     |   `-ImplicitCastExpr 0x561be77f3c30 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x561be77f3bd0 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x561be77f3c88 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x561be77f3c58 <col:6> '<bound member function type>' ->unschedule 0x561be77f2370
|         `-CXXThisExpr 0x561be77f3c48 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x561be774e2d0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x561be77f3e60 <col:26, line:65:5>
|   |-BinaryOperator 0x561be77f3d80 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x561be77f3d18 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561be77f2ff8
|   | | `-MemberExpr 0x561be77f3ce8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x561be77f30b8
|   | |   `-CXXThisExpr 0x561be77f3cd8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x561be77f3d68 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561be77f3d48 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x561be77f3518 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x561be77f3e40 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x561be77f3db0 <col:2> 'void *' lvalue ->_thunk 0x561be77f3138
|     | `-CXXThisExpr 0x561be77f3da0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x561be77f3e18 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x561be77f3de0 <col:20> 'int' 1
|-CXXMethodDecl 0x561be774e410 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x561be774e380 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x561be77f3fc0 <col:52, line:71:5>
|   |-CStyleCastExpr 0x561be77f3eb0 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x561be77f3e80 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x561be774e380 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x561be77f3fa0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x561be77f3f70 <col:2> '<bound member function type>' ->assign 0x561be774e2d0
|       `-CXXThisExpr 0x561be77f3f60 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x561be774e5e0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x561be774e4c8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x561be774e548 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x561be77f4140 <col:58, line:79:5>
|   |-BinaryOperator 0x561be77f4088 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x561be77f4020 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561be77f2ff8
|   | | `-MemberExpr 0x561be77f3ff0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x561be77f30b8
|   | |   `-CXXThisExpr 0x561be77f3fe0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x561be77f4070 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x561be77f4050 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x561be774e4c8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x561be77f4120 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x561be77f40b8 <col:2> 'void *' lvalue ->_thunk 0x561be77f3138
|     | `-CXXThisExpr 0x561be77f40a8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x561be77f4108 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x561be77f40e8 <col:11> 'void *' lvalue ParmVar 0x561be774e548 'user_data' 'void *'
|-CXXMethodDecl 0x561be774e730 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x561be774e6a0 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x561be77f42d8 <col:35, line:87:5>
|   |-BinaryOperator 0x561be77f4208 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x561be77f41a0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561be77f2ff8
|   | | `-MemberExpr 0x561be77f4170 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x561be77f30b8
|   | |   `-CXXThisExpr 0x561be77f4160 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x561be77f41f0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561be77f41d0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x561be77f36f0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x561be77f42b8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x561be77f4238 <col:2> 'void *' lvalue ->_thunk 0x561be77f3138
|     | `-CXXThisExpr 0x561be77f4228 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x561be77f42a0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x561be77f4288 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x561be77f4268 <col:11> 'Element *' lvalue ParmVar 0x561be774e6a0 'element' 'Element *'
|-CXXMethodDecl 0x561be774e878 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x561be774e7e8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x561be77f4470 <col:29, line:94:5>
|   |-BinaryOperator 0x561be77f43a0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x561be77f4338 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x561be77f2ff8
|   | | `-MemberExpr 0x561be77f4308 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x561be77f30b8
|   | |   `-CXXThisExpr 0x561be77f42f8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x561be77f4388 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561be77f4368 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x561be77f38c8 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x561be77f4450 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x561be77f43d0 <col:2> 'void *' lvalue ->_thunk 0x561be77f3138
|     | `-CXXThisExpr 0x561be77f43c0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x561be77f4438 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x561be77f4420 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x561be77f4400 <col:11> 'Task *' lvalue ParmVar 0x561be774e7e8 'task' 'Task *'
|-CXXMethodDecl 0x561be774e968 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x561be77f4550 <col:37, line:100:5>
|   `-ReturnStmt 0x561be77f4540 <line:99:2, col:19>
|     `-BinaryOperator 0x561be77f4520 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x561be77f44f0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x561be77f44a0 <col:9> 'Element *const' lvalue ->_owner 0x561be77f3198
|       |   `-CXXThisExpr 0x561be77f4490 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x561be77f4508 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x561be77f44d0 <col:19> 'int' 0
|-CXXMethodDecl 0x561be774ea28 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x561be77f4610 <col:35, line:105:5>
|   `-ReturnStmt 0x561be77f4600 <line:104:2, col:23>
|     `-BinaryOperator 0x561be77f45e0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x561be77f45c8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x561be77f4578 <col:9> 'const int' lvalue ->_schedpos1 0x561be77f2e18
|       |   `-CXXThisExpr 0x561be77f4568 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x561be77f45a8 <col:23> 'int' 0
|-CXXMethodDecl 0x561be774eae8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x561be77f4678 <col:51, line:118:5>
|   `-ReturnStmt 0x561be77f4668 <line:117:2, col:9>
|     `-MemberExpr 0x561be77f4638 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x561be77f2e78
|       `-CXXThisExpr 0x561be77f4628 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561be774eba8 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x561be77f4bd0 <col:37, line:136:5>
|   `-IfStmt 0x561be77f4ba8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x561be77f4738 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x561be77f4720 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x561be77f4700 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x561be77f46d0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x561be775bfb8
|     |       `-MemberExpr 0x561be77f46a0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x561be77f2e78
|     |         `-CXXThisExpr 0x561be77f4690 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x561be77f4b18 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x561be77f4b00 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x561be77f4ad0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x561be77f4ab8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x561be77f4a80 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x561be77f4a68 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x561be77f4a48 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561be77876c0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x561be77f49e8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x561be77f49d0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x561be77f48f8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x561be77f48e0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x561be77f48c0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561be7787380 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x561be77f4860 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x561be77f4760 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x561be77f2e78
|     |         |     |   `-CXXThisExpr 0x561be77f4750 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x561be77f48a8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x561be77f4890 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x561be77f4840 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x561be77f4828 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x561be77f47c8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x561be75cc750 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x561be77f4a30 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x561be77f4a18 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x561be77f49b0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x561be77f4998 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x561be77f4968 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x561be75cd420 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x561be77f4b98 <line:135:6, col:13>
|       `-CXXConstructExpr 0x561be77f4b68 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x561be77f4b38 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x561be77f2e78
|           `-CXXThisExpr 0x561be77f4b28 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x561be774ec68 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x561be77f4cb8 <col:35, line:141:5>
|   `-ReturnStmt 0x561be77f4ca8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x561be77f4c70 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x561be77f4c40 <col:9, col:17> '<bound member function type>' ->router 0x561be77ded00
|         `-ImplicitCastExpr 0x561be77f4c90 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x561be77f4c28 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x561be77f4bf8 <col:9> 'Element *const' lvalue ->_owner 0x561be77f3198
|               `-CXXThisExpr 0x561be77f4be8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561be774ed28 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x561be77f4d38 <col:37, line:146:5>
|   `-ReturnStmt 0x561be77f4d28 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x561be77f4d10 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x561be77f4ce0 <col:9> 'Element *const' lvalue ->_owner 0x561be77f3198
|         `-CXXThisExpr 0x561be77f4cd0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561be774ede8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x561be77f4db8 <col:41, line:151:5>
|   `-ReturnStmt 0x561be77f4da8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x561be77f4d90 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x561be77f4d60 <col:9> 'RouterThread *const' lvalue ->_thread 0x561be77f31f8
|         `-CXXThisExpr 0x561be77f4d50 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x561be774eeb0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x561be77f1390 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x561be774ef60 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x561be774efd8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561be77f3ad8 <col:50> 'bool' false
|-CXXMethodDecl 0x561be77f1518 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x561be77f1450 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x561be77f1660 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x561be77f15d0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x561be77f17a8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x561be77f1718 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x561be77f18f0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x561be77f1860 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x561be77f1a38 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x561be77f19a8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x561be77f1b00 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x561be77f4f20 <col:32, line:223:5>
|   `-ExprWithCleanups 0x561be77f4f08 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x561be77f4eb0 <col:2, col:47> 'void'
|       |-MemberExpr 0x561be77f4de0 <col:2> '<bound member function type>' ->schedule_at_steady 0x561be77f1660
|       | `-CXXThisExpr 0x561be77f4dd0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561be77f4ef0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561be77f4ed8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x561be77f4e90 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x561be77f4e78 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x561be77f4e48 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x561be75cd420 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x561be77f1c40 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x561be77f1bb0 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x561be77f1d88 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x561be77f1cf8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be77f50a8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x561be77f5090 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x561be77f5038 <col:2, col:40> 'void'
|       |-MemberExpr 0x561be77f4f48 <col:2> '<bound member function type>' ->schedule_after 0x561be77f1c40
|       | `-CXXThisExpr 0x561be77f4f38 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561be77f5078 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561be77f5060 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x561be77f4ff8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x561be77f4fc8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x561be77f4f88 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be77f1cf8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x561be77f4fe0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x561be77f4fa8 <col:38> 'int' 0
|-CXXMethodDecl 0x561be77f1ed0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x561be77f1e40 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be77f5318 <col:58, line:249:5>
|   `-ExprWithCleanups 0x561be77f5300 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x561be77f52a8 <col:2, col:49> 'void'
|       |-MemberExpr 0x561be77f50d0 <col:2> '<bound member function type>' ->schedule_after 0x561be77f1c40
|       | `-CXXThisExpr 0x561be77f50c0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561be77f52e8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561be77f52d0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x561be77f5250 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x561be77f5238 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x561be77f51a8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x561be775dda8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x561be77f5290 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x561be77f5278 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x561be77f5188 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be77f1e40 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be77f2018 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x561be77f1f88 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x561be77f54f8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x561be77f54e0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x561be77f5488 <col:2, col:38> 'void'
|       |-MemberExpr 0x561be77f5340 <col:2> '<bound member function type>' ->schedule_at_steady 0x561be77f1660
|       | `-CXXThisExpr 0x561be77f5330 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561be77f54c8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561be77f54b0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x561be77f5450 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x561be77f5438 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x561be77f5418 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561be7787380 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x561be77f53e8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x561be77f53d0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x561be77f5380 <col:21> 'Timestamp' lvalue ->_expiry_s 0x561be77f2e78
|             |     `-CXXThisExpr 0x561be77f5370 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x561be77f53b0 <col:33> 'const Timestamp' lvalue ParmVar 0x561be77f1f88 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x561be77f2160 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x561be77f20d0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be77f57d0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x561be77f57b8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x561be77f5760 <col:2, col:79> 'void'
|       |-MemberExpr 0x561be77f5520 <col:2> '<bound member function type>' ->schedule_at_steady 0x561be77f1660
|       | `-CXXThisExpr 0x561be77f5510 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561be77f57a0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561be77f5788 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x561be77f5720 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x561be77f5658 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x561be77f5640 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x561be77f55d0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x561be77f55a0 <col:31, col:41> '<bound member function type>' .sec 0x561be75cef18
|             | |     `-ImplicitCastExpr 0x561be77f55f0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x561be77f5570 <col:31> 'Timestamp' lvalue ->_expiry_s 0x561be77f2e78
|             | |         `-CXXThisExpr 0x561be77f5560 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x561be77f5628 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x561be77f5608 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be77f20d0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x561be77f56e8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x561be77f56b8 <col:60, col:70> '<bound member function type>' .subsec 0x561be75cf610
|                 `-ImplicitCastExpr 0x561be77f5708 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x561be77f5688 <col:60> 'Timestamp' lvalue ->_expiry_s 0x561be77f2e78
|                     `-CXXThisExpr 0x561be77f5678 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x561be77f22a8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x561be77f2218 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x561be77f5b08 <col:60, line:279:5>
|   `-ExprWithCleanups 0x561be77f5af0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x561be77f5a98 <col:2, col:65> 'void'
|       |-MemberExpr 0x561be77f57f8 <col:2> '<bound member function type>' ->schedule_at_steady 0x561be77f1660
|       | `-CXXThisExpr 0x561be77f57e8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561be77f5ad8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x561be77f5ac0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x561be77f5a60 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x561be77f5a48 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x561be77f5a28 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x561be7787380 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x561be77f59c8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x561be77f59b0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x561be77f5838 <col:21> 'Timestamp' lvalue ->_expiry_s 0x561be77f2e78
|             |     `-CXXThisExpr 0x561be77f5828 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x561be77f5a10 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x561be77f59f8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x561be77f5958 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x561be77f5940 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x561be77f5910 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x561be775dda8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x561be77f5998 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x561be77f5980 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x561be77f58f0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x561be77f2218 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561be77f2370 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x561be77f2430 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x561be77f5fd0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x561be77f5b60 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x561be77f5b30 <col:2> '<bound member function type>' ->unschedule 0x561be77f2370
|   |   `-CXXThisExpr 0x561be77f5b20 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x561be77f5fb8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x561be77f5f80 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x561be77f5f68 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561be77f5c18 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x561be746b968 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x561be77f5b90 <col:2> 'Timestamp' lvalue ->_expiry_s 0x561be77f2e78
|       | `-CXXThisExpr 0x561be77f5b80 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x561be77f5c00 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x561be77f5bd0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x561be77f24f0 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x561be77f6328 <col:42, line:310:5>
|   |-IfStmt 0x561be77f6170 <line:306:2, line:307:23>
|   | |-CallExpr 0x561be77f60a0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x561be77f6088 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x561be77f6028 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x561be7778e90 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x561be77f6160 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x561be77f6148 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x561be77f6118 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x561be77f6100 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x561be77f60d0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x561be77f6318 <line:309:2, col:33>
|     `-ExprWithCleanups 0x561be77f6300 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x561be77f62d0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x561be77f62b8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x561be77f6278 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x561be77f6260 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x561be77f6230 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x561be775e0c0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x561be77f62a0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x561be77f6210 <col:30> 'int' 500
|-CXXMethodDecl 0x561be77f2630 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x561be77f25a0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561be77f26d8 <col:69> "" ""
|-CXXMethodDecl 0x561be77f27e8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x561be77f2758 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561be77f2890 <col:70> "" ""
|-CXXMethodDecl 0x561be77f29a0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x561be77f2910 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561be77f2a48 <col:71> "" ""
|-CXXMethodDecl 0x561be77f2b58 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x561be77f2ac8 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561be77f2c00 <col:72> "" ""
|-EnumDecl 0x561be77f2c70 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x561be77f2d70 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x561be77f2dc0 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561be77f2d50 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x561be77f2d30 <col:25> 'int' 1
|-AccessSpecDecl 0x561be77f2dd8 <line:339:3, col:10> col:3 private
|-FieldDecl 0x561be77f2e18 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x561be77f2e78 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x561be77f2ec8 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x561be77f2ff8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x561be77f3ae8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x561be77f30b8 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x561be77f3138 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x561be77f3198 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x561be77f31f8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x561be77f3348 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x561be77f3258 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x561be77f3518 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x561be77f3400 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x561be77f3480 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x561be77f36f0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x561be77f35d8 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x561be77f3658 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x561be77f38c8 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x561be77f37b0 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x561be77f3830 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x561be77f3a98 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.21, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.21, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<8>
         0 |   char [8] x
           | [sizeof=8, dsize=8, align=1,
           |  nvsize=8, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be7898200 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 8
|-PackedAttr 0x561be7aae340 <line:167:18>
|-CXXRecordDecl 0x561be7aae400 prev 0x561be7898200 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x561be7aae510 <line:166:5, col:13> col:10 x 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [8 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x561be7918a90 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x561be7ad7d68 <line:167:18>
|-CXXRecordDecl 0x561be7ad7e28 prev 0x561be7918a90 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x561be7ad7f38 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NameDB
         0 |   (NameDB vtable pointer)
         8 |   uint32_t _type
        16 |   class String _context
        16 |     struct String::rep_t _r
        16 |       const char * data
        24 |       int length
        32 |       struct String::memo_t * memo
        40 |   size_t _value_size
        48 |   class NameDB * _context_parent
        56 |   class NameDB * _context_sibling
        64 |   class NameDB * _context_child
        72 |   class NameInfo * _installed
           | [sizeof=80, dsize=80, align=8,
           |  nvsize=80, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561be7a78188 prev 0x561be7a6d088 <../dummy_inc/click/nameinfo.hh:245:1, line:348:1> line:245:7 referenced class NameDB definition
|-DefinitionData polymorphic abstract has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x561be7a78280 <col:1, col:7> col:7 implicit referenced class NameDB
|-AccessSpecDecl 0x561be7a78310 <col:16, col:22> col:16 public
|-CXXConstructorDecl 0x561be7a78578 <line:253:5, col:74> col:12 used NameDB 'void (uint32_t, const String &, size_t)' inline
| |-ParmVarDecl 0x561be7a78348 <col:19, col:28> col:28 type 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561be7a783c0 <col:34, col:48> col:48 context 'const String &'
| `-ParmVarDecl 0x561be7a78438 <col:57, col:64> col:64 value_size 'size_t':'unsigned long'
|-CXXDestructorDecl 0x561be7a78680 <line:259:5, line:261:5> line:259:13 used ~NameDB 'void () noexcept' virtual
| `-CompoundStmt 0x561be7a7cd28 <col:23, line:261:5>
|   `-CallExpr 0x561be7a7cd00 <line:260:2, col:28> 'void'
|     |-ImplicitCastExpr 0x561be7a7cce8 <col:2, col:12> 'void (*)(NameDB *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x561be7a7cc78 <col:2, col:12> 'void (NameDB *)' lvalue CXXMethod 0x561be7a6ee18 'uninstalldb' 'void (NameDB *)'
|     `-CXXThisExpr 0x561be7a7cca8 <col:24> 'NameDB *' this
|-CXXMethodDecl 0x561be7a787a8 <line:264:5, line:266:5> line:264:14 type 'uint32_t () const'
| `-CompoundStmt 0x561be7a7cda8 <col:27, line:266:5>
|   `-ReturnStmt 0x561be7a7cd98 <line:265:2, col:9>
|     `-ImplicitCastExpr 0x561be7a7cd80 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x561be7a7cd50 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_type 0x561be7a79590
|         `-CXXThisExpr 0x561be7a7cd40 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x561be7a78868 <line:269:5, line:271:5> line:269:19 context 'const String &() const'
| `-CompoundStmt 0x561be7a7ce10 <col:35, line:271:5>
|   `-ReturnStmt 0x561be7a7ce00 <line:270:2, col:9>
|     `-MemberExpr 0x561be7a7cdd0 <col:9> 'const String' lvalue ->_context 0x561be7a795f0
|       `-CXXThisExpr 0x561be7a7cdc0 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x561be7a78958 <line:279:5, line:281:5> line:279:13 context_parent 'NameDB *() const'
| `-CompoundStmt 0x561be7a7ce90 <col:36, line:281:5>
|   `-ReturnStmt 0x561be7a7ce80 <line:280:2, col:9>
|     `-ImplicitCastExpr 0x561be7a7ce68 <col:9> 'NameDB *' <LValueToRValue>
|       `-MemberExpr 0x561be7a7ce38 <col:9> 'NameDB *const' lvalue ->_context_parent 0x561be7a796b0
|         `-CXXThisExpr 0x561be7a7ce28 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x561be7a78a48 <line:284:5, line:286:5> line:284:12 value_size 'size_t () const'
| `-CompoundStmt 0x561be7a7cf10 <col:31, line:286:5>
|   `-ReturnStmt 0x561be7a7cf00 <line:285:2, col:9>
|     `-ImplicitCastExpr 0x561be7a7cee8 <col:9> 'size_t':'unsigned long' <LValueToRValue>
|       `-MemberExpr 0x561be7a7ceb8 <col:9> 'const size_t':'const unsigned long' lvalue ->_value_size 0x561be7a79650
|         `-CXXThisExpr 0x561be7a7cea8 <col:9> 'const NameDB *' implicit this
|-CXXMethodDecl 0x561be7a78d18 <line:295:5, col:78> col:18 query 'bool (const String &, void *, size_t)' virtual pure
| |-ParmVarDecl 0x561be7a78af8 <col:24, col:38> col:38 name 'const String &'
| |-ParmVarDecl 0x561be7a78b78 <col:44, col:50> col:50 value 'void *'
| `-ParmVarDecl 0x561be7a78bf0 <col:57, col:64> col:64 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x561be7a78f78 <line:305:5, col:65> col:20 revquery 'String (const void *, size_t)' virtual
| |-ParmVarDecl 0x561be7a78de8 <col:29, col:41> col:41 value 'const void *'
| `-ParmVarDecl 0x561be7a78e60 <col:48, col:55> col:55 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x561be7a79258 <line:315:5, col:81> col:18 used define 'bool (const String &, const void *, size_t)' virtual
| |-ParmVarDecl 0x561be7a79038 <col:25, col:39> col:39 name 'const String &'
| |-ParmVarDecl 0x561be7a790b8 <col:45, col:57> col:57 value 'const void *'
| `-ParmVarDecl 0x561be7a79130 <col:64, col:71> col:71 value_size 'size_t':'unsigned long'
|-CXXMethodDecl 0x561be7a794a8 <line:324:5, col:61> col:17 define_int 'bool (const String &, int32_t)' inline
| |-ParmVarDecl 0x561be7a79320 <col:28, col:42> col:42 name 'const String &'
| `-ParmVarDecl 0x561be7a79398 <col:48, col:56> col:56 value 'int32_t':'int'
|-AccessSpecDecl 0x561be7a79558 <line:332:3, col:10> col:3 private
|-FieldDecl 0x561be7a79590 <line:334:5, col:14> col:14 referenced _type 'uint32_t':'unsigned int'
|-FieldDecl 0x561be7a795f0 <line:335:5, col:12> col:12 referenced _context 'String'
|-FieldDecl 0x561be7a79650 <line:336:5, col:12> col:12 referenced _value_size 'size_t':'unsigned long'
|-FieldDecl 0x561be7a796b0 <line:337:5, col:13> col:13 referenced _context_parent 'NameDB *'
|-FieldDecl 0x561be7a79710 <line:338:5, col:13> col:13 _context_sibling 'NameDB *'
|-FieldDecl 0x561be7a79770 <line:339:5, col:13> col:13 _context_child 'NameDB *'
|-FieldDecl 0x561be7a797d0 <line:340:5, col:15> col:15 _installed 'NameInfo *'
|-FriendDecl 0x561be7a79870 <line:346:5, col:18> col:12 'class NameInfo':'NameInfo'
|-CXXConstructorDecl 0x561be7a798d8 <line:245:7> col:7 implicit NameDB 'void (const NameDB &)' inline default noexcept-unevaluated 0x561be7a798d8
| `-ParmVarDecl 0x561be7a799e8 <col:7> col:7 'const NameDB &'
`-CXXMethodDecl 0x561be7a7caa8 <col:7> col:7 implicit operator= 'NameDB &(const NameDB &)' inline default noexcept-unevaluated 0x561be7a7caa8
  `-ParmVarDecl 0x561be7a7cbb8 <col:7> col:7 'const NameDB &'

Layout: <CGRecordLayout
  LLVMType:%class.NameDB = type { i32 (...)**, i32, %class.String, i64, %class.NameDB*, %class.NameDB*, %class.NameDB*, %class.NameInfo* }
  NonVirtualBaseLLVMType:%class.NameDB = type { i32 (...)**, i32, %class.String, i64, %class.NameDB*, %class.NameDB*, %class.NameDB*, %class.NameInfo* }
  IsZeroInitializable:1
  BitFields:[
]>
